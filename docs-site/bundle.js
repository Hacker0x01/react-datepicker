/******/ (function(modules) {
  // webpackBootstrap
  /******/ // The module cache
  /******/ var installedModules = {}; // The require function

  /******/ /******/ function __webpack_require__(moduleId) {
    /******/ // Check if module is in cache
    /******/ if (installedModules[moduleId])
      /******/ return installedModules[moduleId].exports; // Create a new module (and put it into the cache)

    /******/ /******/ var module = (installedModules[moduleId] = {
      /******/ exports: {},
      /******/ id: moduleId,
      /******/ loaded: false
      /******/
    }); // Execute the module function

    /******/ /******/ modules[moduleId].call(
      module.exports,
      module,
      module.exports,
      __webpack_require__
    ); // Flag the module as loaded

    /******/ /******/ module.loaded = true; // Return the exports of the module

    /******/ /******/ return module.exports;
    /******/
  } // expose the modules object (__webpack_modules__)

  /******/ /******/ __webpack_require__.m = modules; // expose the module cache

  /******/ /******/ __webpack_require__.c = installedModules; // __webpack_public_path__

  /******/ /******/ __webpack_require__.p = "/"; // Load entry module and return exports

  /******/ /******/ return __webpack_require__(0);
  /******/
})(
  /************************************************************************/
  /******/ (function(modules) {
    // Check all modules for deduplicated modules
    for (var i in modules) {
      if (Object.prototype.hasOwnProperty.call(modules, i)) {
        switch (typeof modules[i]) {
          case "function":
            break;
          case "object":
            // Module can be created from a template
            modules[i] = (function(_m) {
              var args = _m.slice(1),
                fn = modules[_m[0]];
              return function(a, b, c) {
                fn.apply(this, [a, b, c].concat(args));
              };
            })(modules[i]);
            break;
          default:
            // Module is a copy of another module
            modules[i] = modules[modules[i]];
            break;
        }
      }
    }
    return modules;
  })([
    /* 0 */
    /***/ function(module, exports, __webpack_require__) {
      module.exports = __webpack_require__(1);

      /***/
    },
    /* 1 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(12);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _root = __webpack_require__(27);

      var _root2 = _interopRequireDefault(_root);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      _reactDom2.default.render(
        _react2.default.createElement(_root2.default, null),
        document.getElementById("app")
      );

      /***/
    },
    /* 2 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      if (undefined === "production") {
        module.exports = __webpack_require__(3);
      } else {
        module.exports = __webpack_require__(7);
      }

      /***/
    },
    /* 3 */
    /***/ function(module, exports, __webpack_require__) {
      /** @license React v16.1.0
       * react.production.min.js
       *
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */
      "use strict";
      var m = __webpack_require__(4),
        n = __webpack_require__(5),
        p = __webpack_require__(6);
      function q(a) {
        for (
          var b = arguments.length - 1,
            e =
              "Minified React error #" +
              a +
              "; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d" +
              a,
            d = 0;
          d < b;
          d++
        )
          e += "\x26args[]\x3d" + encodeURIComponent(arguments[d + 1]);
        b = Error(
          e +
            " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
        );
        b.name = "Invariant Violation";
        b.framesToPop = 1;
        throw b;
      }
      var r = {
        isMounted: function() {
          return !1;
        },
        enqueueForceUpdate: function() {},
        enqueueReplaceState: function() {},
        enqueueSetState: function() {}
      };
      function t(a, b, e) {
        this.props = a;
        this.context = b;
        this.refs = n;
        this.updater = e || r;
      }
      t.prototype.isReactComponent = {};
      t.prototype.setState = function(a, b) {
        "object" !== typeof a && "function" !== typeof a && null != a
          ? q("85")
          : void 0;
        this.updater.enqueueSetState(this, a, b, "setState");
      };
      t.prototype.forceUpdate = function(a) {
        this.updater.enqueueForceUpdate(this, a, "forceUpdate");
      };
      function u(a, b, e) {
        this.props = a;
        this.context = b;
        this.refs = n;
        this.updater = e || r;
      }
      function v() {}
      v.prototype = t.prototype;
      var w = (u.prototype = new v());
      w.constructor = u;
      m(w, t.prototype);
      w.isPureReactComponent = !0;
      function x(a, b, e) {
        this.props = a;
        this.context = b;
        this.refs = n;
        this.updater = e || r;
      }
      var y = (x.prototype = new v());
      y.constructor = x;
      m(y, t.prototype);
      y.unstable_isAsyncReactComponent = !0;
      y.render = function() {
        return this.props.children;
      };
      var z = { current: null },
        A = Object.prototype.hasOwnProperty,
        B =
          ("function" === typeof Symbol &&
            Symbol["for"] &&
            Symbol["for"]("react.element")) ||
          60103,
        C = { key: !0, ref: !0, __self: !0, __source: !0 };
      function D(a, b, e) {
        var d,
          c = {},
          h = null,
          k = null;
        if (null != b)
          for (d in (void 0 !== b.ref && (k = b.ref),
          void 0 !== b.key && (h = "" + b.key),
          b))
            A.call(b, d) && !C.hasOwnProperty(d) && (c[d] = b[d]);
        var f = arguments.length - 2;
        if (1 === f) c.children = e;
        else if (1 < f) {
          for (var g = Array(f), l = 0; l < f; l++) g[l] = arguments[l + 2];
          c.children = g;
        }
        if (a && a.defaultProps)
          for (d in ((f = a.defaultProps), f)) void 0 === c[d] && (c[d] = f[d]);
        return {
          $$typeof: B,
          type: a,
          key: h,
          ref: k,
          props: c,
          _owner: z.current
        };
      }
      function E(a) {
        return "object" === typeof a && null !== a && a.$$typeof === B;
      }
      var F = "function" === typeof Symbol && Symbol.iterator,
        G =
          ("function" === typeof Symbol &&
            Symbol["for"] &&
            Symbol["for"]("react.element")) ||
          60103,
        H =
          ("function" === typeof Symbol &&
            Symbol["for"] &&
            Symbol["for"]("react.portal")) ||
          60106;
      function escape(a) {
        var b = { "\x3d": "\x3d0", ":": "\x3d2" };
        return (
          "$" +
          ("" + a).replace(/[=:]/g, function(a) {
            return b[a];
          })
        );
      }
      var I = /\/+/g,
        J = [];
      function K(a, b, e, d) {
        if (J.length) {
          var c = J.pop();
          c.result = a;
          c.keyPrefix = b;
          c.func = e;
          c.context = d;
          c.count = 0;
          return c;
        }
        return { result: a, keyPrefix: b, func: e, context: d, count: 0 };
      }
      function L(a) {
        a.result = null;
        a.keyPrefix = null;
        a.func = null;
        a.context = null;
        a.count = 0;
        10 > J.length && J.push(a);
      }
      function M(a, b, e, d) {
        var c = typeof a;
        if ("undefined" === c || "boolean" === c) a = null;
        if (
          null === a ||
          "string" === c ||
          "number" === c ||
          ("object" === c && a.$$typeof === G) ||
          ("object" === c && a.$$typeof === H)
        )
          return e(d, a, "" === b ? "." + N(a, 0) : b), 1;
        var h = 0;
        b = "" === b ? "." : b + ":";
        if (Array.isArray(a))
          for (var k = 0; k < a.length; k++) {
            c = a[k];
            var f = b + N(c, k);
            h += M(c, f, e, d);
          }
        else if (
          ((f = (F && a[F]) || a["@@iterator"]), "function" === typeof f)
        )
          for (a = f.call(a), k = 0; !(c = a.next()).done; )
            (c = c.value), (f = b + N(c, k++)), (h += M(c, f, e, d));
        else
          "object" === c &&
            ((e = "" + a),
            q(
              "31",
              "[object Object]" === e
                ? "object with keys {" + Object.keys(a).join(", ") + "}"
                : e,
              ""
            ));
        return h;
      }
      function N(a, b) {
        return "object" === typeof a && null !== a && null != a.key
          ? escape(a.key)
          : b.toString(36);
      }
      function O(a, b) {
        a.func.call(a.context, b, a.count++);
      }
      function P(a, b, e) {
        var d = a.result,
          c = a.keyPrefix;
        a = a.func.call(a.context, b, a.count++);
        Array.isArray(a)
          ? Q(a, d, e, p.thatReturnsArgument)
          : null != a &&
            (E(a) &&
              ((b =
                c +
                (!a.key || (b && b.key === a.key)
                  ? ""
                  : ("" + a.key).replace(I, "$\x26/") + "/") +
                e),
              (a = {
                $$typeof: B,
                type: a.type,
                key: b,
                ref: a.ref,
                props: a.props,
                _owner: a._owner
              })),
            d.push(a));
      }
      function Q(a, b, e, d, c) {
        var h = "";
        null != e && (h = ("" + e).replace(I, "$\x26/") + "/");
        b = K(b, h, d, c);
        null == a || M(a, "", P, b);
        L(b);
      }
      "function" === typeof Symbol &&
        Symbol["for"] &&
        Symbol["for"]("react.fragment");
      var R = {
          Children: {
            map: function(a, b, e) {
              if (null == a) return a;
              var d = [];
              Q(a, d, null, b, e);
              return d;
            },
            forEach: function(a, b, e) {
              if (null == a) return a;
              b = K(null, null, b, e);
              null == a || M(a, "", O, b);
              L(b);
            },
            count: function(a) {
              return null == a ? 0 : M(a, "", p.thatReturnsNull, null);
            },
            toArray: function(a) {
              var b = [];
              Q(a, b, null, p.thatReturnsArgument);
              return b;
            },
            only: function(a) {
              E(a) ? void 0 : q("143");
              return a;
            }
          },
          Component: t,
          PureComponent: u,
          unstable_AsyncComponent: x,
          createElement: D,
          cloneElement: function(a, b, e) {
            var d = m({}, a.props),
              c = a.key,
              h = a.ref,
              k = a._owner;
            if (null != b) {
              void 0 !== b.ref && ((h = b.ref), (k = z.current));
              void 0 !== b.key && (c = "" + b.key);
              if (a.type && a.type.defaultProps) var f = a.type.defaultProps;
              for (g in b)
                A.call(b, g) &&
                  !C.hasOwnProperty(g) &&
                  (d[g] = void 0 === b[g] && void 0 !== f ? f[g] : b[g]);
            }
            var g = arguments.length - 2;
            if (1 === g) d.children = e;
            else if (1 < g) {
              f = Array(g);
              for (var l = 0; l < g; l++) f[l] = arguments[l + 2];
              d.children = f;
            }
            return {
              $$typeof: B,
              type: a.type,
              key: c,
              ref: h,
              props: d,
              _owner: k
            };
          },
          createFactory: function(a) {
            var b = D.bind(null, a);
            b.type = a;
            return b;
          },
          isValidElement: E,
          version: "16.1.0",
          __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
            ReactCurrentOwner: z,
            assign: m
          }
        },
        S = Object.freeze({ default: R }),
        T = (S && R) || S;
      module.exports = T["default"] ? T["default"] : T;

      /***/
    },
    /* 4 */
    /***/ function(module, exports) {
      /*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

      "use strict";
      /* eslint-disable no-unused-vars */
      var getOwnPropertySymbols = Object.getOwnPropertySymbols;
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      var propIsEnumerable = Object.prototype.propertyIsEnumerable;

      function toObject(val) {
        if (val === null || val === undefined) {
          throw new TypeError(
            "Object.assign cannot be called with null or undefined"
          );
        }

        return Object(val);
      }

      function shouldUseNative() {
        try {
          if (!Object.assign) {
            return false;
          }

          // Detect buggy property enumeration order in older V8 versions.

          // https://bugs.chromium.org/p/v8/issues/detail?id=4118
          var test1 = new String("abc"); // eslint-disable-line no-new-wrappers
          test1[5] = "de";
          if (Object.getOwnPropertyNames(test1)[0] === "5") {
            return false;
          }

          // https://bugs.chromium.org/p/v8/issues/detail?id=3056
          var test2 = {};
          for (var i = 0; i < 10; i++) {
            test2["_" + String.fromCharCode(i)] = i;
          }
          var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
            return test2[n];
          });
          if (order2.join("") !== "0123456789") {
            return false;
          }

          // https://bugs.chromium.org/p/v8/issues/detail?id=3056
          var test3 = {};
          "abcdefghijklmnopqrst".split("").forEach(function(letter) {
            test3[letter] = letter;
          });
          if (
            Object.keys(Object.assign({}, test3)).join("") !==
            "abcdefghijklmnopqrst"
          ) {
            return false;
          }

          return true;
        } catch (err) {
          // We don't expect any of the above to throw, but better to be safe.
          return false;
        }
      }

      module.exports = shouldUseNative()
        ? Object.assign
        : function(target, source) {
            var from;
            var to = toObject(target);
            var symbols;

            for (var s = 1; s < arguments.length; s++) {
              from = Object(arguments[s]);

              for (var key in from) {
                if (hasOwnProperty.call(from, key)) {
                  to[key] = from[key];
                }
              }

              if (getOwnPropertySymbols) {
                symbols = getOwnPropertySymbols(from);
                for (var i = 0; i < symbols.length; i++) {
                  if (propIsEnumerable.call(from, symbols[i])) {
                    to[symbols[i]] = from[symbols[i]];
                  }
                }
              }
            }

            return to;
          };

      /***/
    },
    /* 5 */
    /***/ function(module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       */

      "use strict";

      var emptyObject = {};

      if (undefined !== "production") {
        Object.freeze(emptyObject);
      }

      module.exports = emptyObject;

      /***/
    },
    /* 6 */
    /***/ function(module, exports) {
      "use strict";

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       *
       */

      function makeEmptyFunction(arg) {
        return function() {
          return arg;
        };
      }

      /**
       * This function accepts and discards inputs; it has no side effects. This is
       * primarily useful idiomatically for overridable function endpoints which
       * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
       */
      var emptyFunction = function emptyFunction() {};

      emptyFunction.thatReturns = makeEmptyFunction;
      emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
      emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
      emptyFunction.thatReturnsNull = makeEmptyFunction(null);
      emptyFunction.thatReturnsThis = function() {
        return this;
      };
      emptyFunction.thatReturnsArgument = function(arg) {
        return arg;
      };

      module.exports = emptyFunction;

      /***/
    },
    /* 7 */
    /***/ function(module, exports, __webpack_require__) {
      /** @license React v16.1.0
       * react.development.js
       *
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      "use strict";

      if (undefined !== "production") {
        (function() {
          "use strict";

          var _assign = __webpack_require__(4);
          var invariant = __webpack_require__(8);
          var emptyObject = __webpack_require__(5);
          var warning = __webpack_require__(9);
          var emptyFunction = __webpack_require__(6);
          var checkPropTypes = __webpack_require__(10);

          // TODO: this is special because it gets imported during build.

          var ReactVersion = "16.1.0";

          /**
           * WARNING: DO NOT manually require this module.
           * This is a replacement for `invariant(...)` used by the error code system
           * and will _only_ be required by the corresponding babel pass.
           * It always throws.
           */

          // Exports React.Fragment
          var enableReactFragment = false;
          // Exports ReactDOM.createRoot

          // Mutating mode (React DOM, React ART, React Native):

          // Experimental noop mode (currently unused):

          // Experimental persistent mode (CS):

          // Only used in www builds.

          /**
           * Forked from fbjs/warning:
           * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
           *
           * Only change is we use console.warn instead of console.error,
           * and do nothing when 'console' is not supported.
           * This really simplifies the code.
           * ---
           * Similar to invariant but only logs a warning if the condition is not met.
           * This can be used to log issues in development environments in critical
           * paths. Removing the logging code for production environments will keep the
           * same logic and follow the same code paths.
           */

          var lowPriorityWarning = function() {};

          {
            var printWarning = function(format) {
              for (
                var _len = arguments.length,
                  args = Array(_len > 1 ? _len - 1 : 0),
                  _key = 1;
                _key < _len;
                _key++
              ) {
                args[_key - 1] = arguments[_key];
              }

              var argIndex = 0;
              var message =
                "Warning: " +
                format.replace(/%s/g, function() {
                  return args[argIndex++];
                });
              if (typeof console !== "undefined") {
                console.warn(message);
              }
              try {
                // --- Welcome to debugging React ---
                // This error was thrown as a convenience so that you can use this stack
                // to find the callsite that caused this warning to fire.
                throw new Error(message);
              } catch (x) {}
            };

            lowPriorityWarning = function(condition, format) {
              if (format === undefined) {
                throw new Error(
                  "`warning(condition, format, ...args)` requires a warning " +
                    "message argument"
                );
              }
              if (!condition) {
                for (
                  var _len2 = arguments.length,
                    args = Array(_len2 > 2 ? _len2 - 2 : 0),
                    _key2 = 2;
                  _key2 < _len2;
                  _key2++
                ) {
                  args[_key2 - 2] = arguments[_key2];
                }

                printWarning.apply(undefined, [format].concat(args));
              }
            };
          }

          var lowPriorityWarning$1 = lowPriorityWarning;

          var didWarnStateUpdateForUnmountedComponent = {};

          function warnNoop(publicInstance, callerName) {
            {
              var constructor = publicInstance.constructor;
              var componentName =
                (constructor &&
                  (constructor.displayName || constructor.name)) ||
                "ReactClass";
              var warningKey = componentName + "." + callerName;
              if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
                return;
              }
              warning(
                false,
                "%s(...): Can only update a mounted or mounting component. " +
                  "This usually means you called %s() on an unmounted component. " +
                  "This is a no-op.\n\nPlease check the code for the %s component.",
                callerName,
                callerName,
                componentName
              );
              didWarnStateUpdateForUnmountedComponent[warningKey] = true;
            }
          }

          /**
           * This is the abstract API for an update queue.
           */
          var ReactNoopUpdateQueue = {
            /**
             * Checks whether or not this composite component is mounted.
             * @param {ReactClass} publicInstance The instance we want to test.
             * @return {boolean} True if mounted, false otherwise.
             * @protected
             * @final
             */
            isMounted: function(publicInstance) {
              return false;
            },

            /**
             * Forces an update. This should only be invoked when it is known with
             * certainty that we are **not** in a DOM transaction.
             *
             * You may want to call this when you know that some deeper aspect of the
             * component's state has changed but `setState` was not called.
             *
             * This will not invoke `shouldComponentUpdate`, but it will invoke
             * `componentWillUpdate` and `componentDidUpdate`.
             *
             * @param {ReactClass} publicInstance The instance that should rerender.
             * @param {?function} callback Called after component is updated.
             * @param {?string} callerName name of the calling function in the public API.
             * @internal
             */
            enqueueForceUpdate: function(publicInstance, callback, callerName) {
              warnNoop(publicInstance, "forceUpdate");
            },

            /**
             * Replaces all of the state. Always use this or `setState` to mutate state.
             * You should treat `this.state` as immutable.
             *
             * There is no guarantee that `this.state` will be immediately updated, so
             * accessing `this.state` after calling this method may return the old value.
             *
             * @param {ReactClass} publicInstance The instance that should rerender.
             * @param {object} completeState Next state.
             * @param {?function} callback Called after component is updated.
             * @param {?string} callerName name of the calling function in the public API.
             * @internal
             */
            enqueueReplaceState: function(
              publicInstance,
              completeState,
              callback,
              callerName
            ) {
              warnNoop(publicInstance, "replaceState");
            },

            /**
             * Sets a subset of the state. This only exists because _pendingState is
             * internal. This provides a merging strategy that is not available to deep
             * properties which is confusing. TODO: Expose pendingState or don't use it
             * during the merge.
             *
             * @param {ReactClass} publicInstance The instance that should rerender.
             * @param {object} partialState Next partial state to be merged with state.
             * @param {?function} callback Called after component is updated.
             * @param {?string} Name of the calling function in the public API.
             * @internal
             */
            enqueueSetState: function(
              publicInstance,
              partialState,
              callback,
              callerName
            ) {
              warnNoop(publicInstance, "setState");
            }
          };

          /**
           * Base class helpers for the updating state of a component.
           */
          function Component(props, context, updater) {
            this.props = props;
            this.context = context;
            this.refs = emptyObject;
            // We initialize the default updater but the real one gets injected by the
            // renderer.
            this.updater = updater || ReactNoopUpdateQueue;
          }

          Component.prototype.isReactComponent = {};

          /**
           * Sets a subset of the state. Always use this to mutate
           * state. You should treat `this.state` as immutable.
           *
           * There is no guarantee that `this.state` will be immediately updated, so
           * accessing `this.state` after calling this method may return the old value.
           *
           * There is no guarantee that calls to `setState` will run synchronously,
           * as they may eventually be batched together.  You can provide an optional
           * callback that will be executed when the call to setState is actually
           * completed.
           *
           * When a function is provided to setState, it will be called at some point in
           * the future (not synchronously). It will be called with the up to date
           * component arguments (state, props, context). These values can be different
           * from this.* because your function may be called after receiveProps but before
           * shouldComponentUpdate, and this new state, props, and context will not yet be
           * assigned to this.
           *
           * @param {object|function} partialState Next partial state or function to
           *        produce next partial state to be merged with current state.
           * @param {?function} callback Called after state is updated.
           * @final
           * @protected
           */
          Component.prototype.setState = function(partialState, callback) {
            !(
              typeof partialState === "object" ||
              typeof partialState === "function" ||
              partialState == null
            )
              ? invariant(
                  false,
                  "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
                )
              : void 0;
            this.updater.enqueueSetState(
              this,
              partialState,
              callback,
              "setState"
            );
          };

          /**
           * Forces an update. This should only be invoked when it is known with
           * certainty that we are **not** in a DOM transaction.
           *
           * You may want to call this when you know that some deeper aspect of the
           * component's state has changed but `setState` was not called.
           *
           * This will not invoke `shouldComponentUpdate`, but it will invoke
           * `componentWillUpdate` and `componentDidUpdate`.
           *
           * @param {?function} callback Called after update is complete.
           * @final
           * @protected
           */
          Component.prototype.forceUpdate = function(callback) {
            this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
          };

          /**
           * Deprecated APIs. These APIs used to exist on classic React classes but since
           * we would like to deprecate them, we're not going to move them over to this
           * modern base class. Instead, we define a getter that warns if it's accessed.
           */
          {
            var deprecatedAPIs = {
              isMounted: [
                "isMounted",
                "Instead, make sure to clean up subscriptions and pending requests in " +
                  "componentWillUnmount to prevent memory leaks."
              ],
              replaceState: [
                "replaceState",
                "Refactor your code to use setState instead (see " +
                  "https://github.com/facebook/react/issues/3236)."
              ]
            };
            var defineDeprecationWarning = function(methodName, info) {
              Object.defineProperty(Component.prototype, methodName, {
                get: function() {
                  lowPriorityWarning$1(
                    false,
                    "%s(...) is deprecated in plain JavaScript React classes. %s",
                    info[0],
                    info[1]
                  );
                  return undefined;
                }
              });
            };
            for (var fnName in deprecatedAPIs) {
              if (deprecatedAPIs.hasOwnProperty(fnName)) {
                defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
              }
            }
          }

          /**
           * Base class helpers for the updating state of a component.
           */
          function PureComponent(props, context, updater) {
            // Duplicated from Component.
            this.props = props;
            this.context = context;
            this.refs = emptyObject;
            // We initialize the default updater but the real one gets injected by the
            // renderer.
            this.updater = updater || ReactNoopUpdateQueue;
          }

          function ComponentDummy() {}
          ComponentDummy.prototype = Component.prototype;
          var pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());
          pureComponentPrototype.constructor = PureComponent;
          // Avoid an extra prototype jump for these methods.
          _assign(pureComponentPrototype, Component.prototype);
          pureComponentPrototype.isPureReactComponent = true;

          function AsyncComponent(props, context, updater) {
            // Duplicated from Component.
            this.props = props;
            this.context = context;
            this.refs = emptyObject;
            // We initialize the default updater but the real one gets injected by the
            // renderer.
            this.updater = updater || ReactNoopUpdateQueue;
          }

          var asyncComponentPrototype = (AsyncComponent.prototype = new ComponentDummy());
          asyncComponentPrototype.constructor = AsyncComponent;
          // Avoid an extra prototype jump for these methods.
          _assign(asyncComponentPrototype, Component.prototype);
          asyncComponentPrototype.unstable_isAsyncReactComponent = true;
          asyncComponentPrototype.render = function() {
            return this.props.children;
          };

          /**
           * Keeps track of the current owner.
           *
           * The current owner is the component who should own any components that are
           * currently being constructed.
           */
          var ReactCurrentOwner = {
            /**
             * @internal
             * @type {ReactComponent}
             */
            current: null
          };

          var hasOwnProperty = Object.prototype.hasOwnProperty;

          // The Symbol used to tag the ReactElement type. If there is no native Symbol
          // nor polyfill, then a plain number is used for performance.
          var REACT_ELEMENT_TYPE$1 =
            (typeof Symbol === "function" &&
              Symbol["for"] &&
              Symbol["for"]("react.element")) ||
            0xeac7;

          var RESERVED_PROPS = {
            key: true,
            ref: true,
            __self: true,
            __source: true
          };

          var specialPropKeyWarningShown;
          var specialPropRefWarningShown;

          function hasValidRef(config) {
            {
              if (hasOwnProperty.call(config, "ref")) {
                var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
                if (getter && getter.isReactWarning) {
                  return false;
                }
              }
            }
            return config.ref !== undefined;
          }

          function hasValidKey(config) {
            {
              if (hasOwnProperty.call(config, "key")) {
                var getter = Object.getOwnPropertyDescriptor(config, "key").get;
                if (getter && getter.isReactWarning) {
                  return false;
                }
              }
            }
            return config.key !== undefined;
          }

          function defineKeyPropWarningGetter(props, displayName) {
            var warnAboutAccessingKey = function() {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                warning(
                  false,
                  "%s: `key` is not a prop. Trying to access it will result " +
                    "in `undefined` being returned. If you need to access the same " +
                    "value within the child component, you should pass it as a different " +
                    "prop. (https://fb.me/react-special-props)",
                  displayName
                );
              }
            };
            warnAboutAccessingKey.isReactWarning = true;
            Object.defineProperty(props, "key", {
              get: warnAboutAccessingKey,
              configurable: true
            });
          }

          function defineRefPropWarningGetter(props, displayName) {
            var warnAboutAccessingRef = function() {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                warning(
                  false,
                  "%s: `ref` is not a prop. Trying to access it will result " +
                    "in `undefined` being returned. If you need to access the same " +
                    "value within the child component, you should pass it as a different " +
                    "prop. (https://fb.me/react-special-props)",
                  displayName
                );
              }
            };
            warnAboutAccessingRef.isReactWarning = true;
            Object.defineProperty(props, "ref", {
              get: warnAboutAccessingRef,
              configurable: true
            });
          }

          /**
           * Factory method to create a new React element. This no longer adheres to
           * the class pattern, so do not use new to call it. Also, no instanceof check
           * will work. Instead test $$typeof field against Symbol.for('react.element') to check
           * if something is a React Element.
           *
           * @param {*} type
           * @param {*} key
           * @param {string|object} ref
           * @param {*} self A *temporary* helper to detect places where `this` is
           * different from the `owner` when React.createElement is called, so that we
           * can warn. We want to get rid of owner and replace string `ref`s with arrow
           * functions, and as long as `this` and owner are the same, there will be no
           * change in behavior.
           * @param {*} source An annotation object (added by a transpiler or otherwise)
           * indicating filename, line number, and/or other information.
           * @param {*} owner
           * @param {*} props
           * @internal
           */
          var ReactElement = function(
            type,
            key,
            ref,
            self,
            source,
            owner,
            props
          ) {
            var element = {
              // This tag allow us to uniquely identify this as a React Element
              $$typeof: REACT_ELEMENT_TYPE$1,

              // Built-in properties that belong on the element
              type: type,
              key: key,
              ref: ref,
              props: props,

              // Record the component responsible for creating this element.
              _owner: owner
            };

            {
              // The validation flag is currently mutative. We put it on
              // an external backing store so that we can freeze the whole object.
              // This can be replaced with a WeakMap once they are implemented in
              // commonly used development environments.
              element._store = {};

              // To make comparing ReactElements easier for testing purposes, we make
              // the validation flag non-enumerable (where possible, which should
              // include every environment we run tests in), so the test framework
              // ignores it.
              Object.defineProperty(element._store, "validated", {
                configurable: false,
                enumerable: false,
                writable: true,
                value: false
              });
              // self and source are DEV only properties.
              Object.defineProperty(element, "_self", {
                configurable: false,
                enumerable: false,
                writable: false,
                value: self
              });
              // Two elements created in two different places should be considered
              // equal for testing purposes and therefore we hide it from enumeration.
              Object.defineProperty(element, "_source", {
                configurable: false,
                enumerable: false,
                writable: false,
                value: source
              });
              if (Object.freeze) {
                Object.freeze(element.props);
                Object.freeze(element);
              }
            }

            return element;
          };

          /**
           * Create and return a new ReactElement of the given type.
           * See https://reactjs.org/docs/react-api.html#createelement
           */
          function createElement(type, config, children) {
            var propName;

            // Reserved names are extracted
            var props = {};

            var key = null;
            var ref = null;
            var self = null;
            var source = null;

            if (config != null) {
              if (hasValidRef(config)) {
                ref = config.ref;
              }
              if (hasValidKey(config)) {
                key = "" + config.key;
              }

              self = config.__self === undefined ? null : config.__self;
              source = config.__source === undefined ? null : config.__source;
              // Remaining properties are added to a new props object
              for (propName in config) {
                if (
                  hasOwnProperty.call(config, propName) &&
                  !RESERVED_PROPS.hasOwnProperty(propName)
                ) {
                  props[propName] = config[propName];
                }
              }
            }

            // Children can be more than one argument, and those are transferred onto
            // the newly allocated props object.
            var childrenLength = arguments.length - 2;
            if (childrenLength === 1) {
              props.children = children;
            } else if (childrenLength > 1) {
              var childArray = Array(childrenLength);
              for (var i = 0; i < childrenLength; i++) {
                childArray[i] = arguments[i + 2];
              }
              {
                if (Object.freeze) {
                  Object.freeze(childArray);
                }
              }
              props.children = childArray;
            }

            // Resolve default props
            if (type && type.defaultProps) {
              var defaultProps = type.defaultProps;
              for (propName in defaultProps) {
                if (props[propName] === undefined) {
                  props[propName] = defaultProps[propName];
                }
              }
            }
            {
              if (key || ref) {
                if (
                  typeof props.$$typeof === "undefined" ||
                  props.$$typeof !== REACT_ELEMENT_TYPE$1
                ) {
                  var displayName =
                    typeof type === "function"
                      ? type.displayName || type.name || "Unknown"
                      : type;
                  if (key) {
                    defineKeyPropWarningGetter(props, displayName);
                  }
                  if (ref) {
                    defineRefPropWarningGetter(props, displayName);
                  }
                }
              }
            }
            return ReactElement(
              type,
              key,
              ref,
              self,
              source,
              ReactCurrentOwner.current,
              props
            );
          }

          /**
           * Return a function that produces ReactElements of a given type.
           * See https://reactjs.org/docs/react-api.html#createfactory
           */

          function cloneAndReplaceKey(oldElement, newKey) {
            var newElement = ReactElement(
              oldElement.type,
              newKey,
              oldElement.ref,
              oldElement._self,
              oldElement._source,
              oldElement._owner,
              oldElement.props
            );

            return newElement;
          }

          /**
           * Clone and return a new ReactElement using element as the starting point.
           * See https://reactjs.org/docs/react-api.html#cloneelement
           */
          function cloneElement(element, config, children) {
            var propName;

            // Original props are copied
            var props = _assign({}, element.props);

            // Reserved names are extracted
            var key = element.key;
            var ref = element.ref;
            // Self is preserved since the owner is preserved.
            var self = element._self;
            // Source is preserved since cloneElement is unlikely to be targeted by a
            // transpiler, and the original source is probably a better indicator of the
            // true owner.
            var source = element._source;

            // Owner will be preserved, unless ref is overridden
            var owner = element._owner;

            if (config != null) {
              if (hasValidRef(config)) {
                // Silently steal the ref from the parent.
                ref = config.ref;
                owner = ReactCurrentOwner.current;
              }
              if (hasValidKey(config)) {
                key = "" + config.key;
              }

              // Remaining properties override existing props
              var defaultProps;
              if (element.type && element.type.defaultProps) {
                defaultProps = element.type.defaultProps;
              }
              for (propName in config) {
                if (
                  hasOwnProperty.call(config, propName) &&
                  !RESERVED_PROPS.hasOwnProperty(propName)
                ) {
                  if (
                    config[propName] === undefined &&
                    defaultProps !== undefined
                  ) {
                    // Resolve default props
                    props[propName] = defaultProps[propName];
                  } else {
                    props[propName] = config[propName];
                  }
                }
              }
            }

            // Children can be more than one argument, and those are transferred onto
            // the newly allocated props object.
            var childrenLength = arguments.length - 2;
            if (childrenLength === 1) {
              props.children = children;
            } else if (childrenLength > 1) {
              var childArray = Array(childrenLength);
              for (var i = 0; i < childrenLength; i++) {
                childArray[i] = arguments[i + 2];
              }
              props.children = childArray;
            }

            return ReactElement(
              element.type,
              key,
              ref,
              self,
              source,
              owner,
              props
            );
          }

          /**
           * Verifies the object is a ReactElement.
           * See https://reactjs.org/docs/react-api.html#isvalidelement
           * @param {?object} object
           * @return {boolean} True if `object` is a valid component.
           * @final
           */
          function isValidElement(object) {
            return (
              typeof object === "object" &&
              object !== null &&
              object.$$typeof === REACT_ELEMENT_TYPE$1
            );
          }

          var ReactDebugCurrentFrame = {};

          {
            // Component that is being worked on
            ReactDebugCurrentFrame.getCurrentStack = null;

            ReactDebugCurrentFrame.getStackAddendum = function() {
              var impl = ReactDebugCurrentFrame.getCurrentStack;
              if (impl) {
                return impl();
              }
              return null;
            };
          }

          var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL = "@@iterator"; // Before Symbol spec.
          // The Symbol used to tag the ReactElement type. If there is no native Symbol
          // nor polyfill, then a plain number is used for performance.
          var REACT_ELEMENT_TYPE =
            (typeof Symbol === "function" &&
              Symbol["for"] &&
              Symbol["for"]("react.element")) ||
            0xeac7;
          var REACT_PORTAL_TYPE =
            (typeof Symbol === "function" &&
              Symbol["for"] &&
              Symbol["for"]("react.portal")) ||
            0xeaca;
          var SEPARATOR = ".";
          var SUBSEPARATOR = ":";

          /**
           * Escape and wrap key so it is safe to use as a reactid
           *
           * @param {string} key to be escaped.
           * @return {string} the escaped key.
           */
          function escape(key) {
            var escapeRegex = /[=:]/g;
            var escaperLookup = {
              "=": "=0",
              ":": "=2"
            };
            var escapedString = ("" + key).replace(escapeRegex, function(
              match
            ) {
              return escaperLookup[match];
            });

            return "$" + escapedString;
          }

          /**
           * TODO: Test that a single child and an array with one item have the same key
           * pattern.
           */

          var didWarnAboutMaps = false;

          var userProvidedKeyEscapeRegex = /\/+/g;
          function escapeUserProvidedKey(text) {
            return ("" + text).replace(userProvidedKeyEscapeRegex, "$&/");
          }

          var POOL_SIZE = 10;
          var traverseContextPool = [];
          function getPooledTraverseContext(
            mapResult,
            keyPrefix,
            mapFunction,
            mapContext
          ) {
            if (traverseContextPool.length) {
              var traverseContext = traverseContextPool.pop();
              traverseContext.result = mapResult;
              traverseContext.keyPrefix = keyPrefix;
              traverseContext.func = mapFunction;
              traverseContext.context = mapContext;
              traverseContext.count = 0;
              return traverseContext;
            } else {
              return {
                result: mapResult,
                keyPrefix: keyPrefix,
                func: mapFunction,
                context: mapContext,
                count: 0
              };
            }
          }

          function releaseTraverseContext(traverseContext) {
            traverseContext.result = null;
            traverseContext.keyPrefix = null;
            traverseContext.func = null;
            traverseContext.context = null;
            traverseContext.count = 0;
            if (traverseContextPool.length < POOL_SIZE) {
              traverseContextPool.push(traverseContext);
            }
          }

          /**
           * @param {?*} children Children tree container.
           * @param {!string} nameSoFar Name of the key path so far.
           * @param {!function} callback Callback to invoke with each child found.
           * @param {?*} traverseContext Used to pass information throughout the traversal
           * process.
           * @return {!number} The number of children in this subtree.
           */
          function traverseAllChildrenImpl(
            children,
            nameSoFar,
            callback,
            traverseContext
          ) {
            var type = typeof children;

            if (type === "undefined" || type === "boolean") {
              // All of the above are perceived as null.
              children = null;
            }

            if (
              children === null ||
              type === "string" ||
              type === "number" ||
              // The following is inlined from ReactElement. This means we can optimize
              // some checks. React Fiber also inlines this logic for similar purposes.
              (type === "object" && children.$$typeof === REACT_ELEMENT_TYPE) ||
              (type === "object" && children.$$typeof === REACT_PORTAL_TYPE)
            ) {
              callback(
                traverseContext,
                children,
                // If it's the only child, treat the name as if it was wrapped in an array
                // so that it's consistent if the number of children grows.
                nameSoFar === ""
                  ? SEPARATOR + getComponentKey(children, 0)
                  : nameSoFar
              );
              return 1;
            }

            var child;
            var nextName;
            var subtreeCount = 0; // Count of children found in the current subtree.
            var nextNamePrefix =
              nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;

            if (Array.isArray(children)) {
              for (var i = 0; i < children.length; i++) {
                child = children[i];
                nextName = nextNamePrefix + getComponentKey(child, i);
                subtreeCount += traverseAllChildrenImpl(
                  child,
                  nextName,
                  callback,
                  traverseContext
                );
              }
            } else {
              var iteratorFn =
                (ITERATOR_SYMBOL && children[ITERATOR_SYMBOL]) ||
                children[FAUX_ITERATOR_SYMBOL];
              if (typeof iteratorFn === "function") {
                {
                  // Warn about using Maps as children
                  if (iteratorFn === children.entries) {
                    warning(
                      didWarnAboutMaps,
                      "Using Maps as children is unsupported and will likely yield " +
                        "unexpected results. Convert it to a sequence/iterable of keyed " +
                        "ReactElements instead.%s",
                      ReactDebugCurrentFrame.getStackAddendum()
                    );
                    didWarnAboutMaps = true;
                  }
                }

                var iterator = iteratorFn.call(children);
                var step;
                var ii = 0;
                while (!(step = iterator.next()).done) {
                  child = step.value;
                  nextName = nextNamePrefix + getComponentKey(child, ii++);
                  subtreeCount += traverseAllChildrenImpl(
                    child,
                    nextName,
                    callback,
                    traverseContext
                  );
                }
              } else if (type === "object") {
                var addendum = "";
                {
                  addendum =
                    " If you meant to render a collection of children, use an array " +
                    "instead." +
                    ReactDebugCurrentFrame.getStackAddendum();
                }
                var childrenString = "" + children;
                invariant(
                  false,
                  "Objects are not valid as a React child (found: %s).%s",
                  childrenString === "[object Object]"
                    ? "object with keys {" +
                      Object.keys(children).join(", ") +
                      "}"
                    : childrenString,
                  addendum
                );
              }
            }

            return subtreeCount;
          }

          /**
           * Traverses children that are typically specified as `props.children`, but
           * might also be specified through attributes:
           *
           * - `traverseAllChildren(this.props.children, ...)`
           * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
           *
           * The `traverseContext` is an optional argument that is passed through the
           * entire traversal. It can be used to store accumulations or anything else that
           * the callback might find relevant.
           *
           * @param {?*} children Children tree object.
           * @param {!function} callback To invoke upon traversing each child.
           * @param {?*} traverseContext Context for traversal.
           * @return {!number} The number of children in this subtree.
           */
          function traverseAllChildren(children, callback, traverseContext) {
            if (children == null) {
              return 0;
            }

            return traverseAllChildrenImpl(
              children,
              "",
              callback,
              traverseContext
            );
          }

          /**
           * Generate a key string that identifies a component within a set.
           *
           * @param {*} component A component that could contain a manual key.
           * @param {number} index Index that is used if a manual key is not provided.
           * @return {string}
           */
          function getComponentKey(component, index) {
            // Do some typechecking here since we call this blindly. We want to ensure
            // that we don't block potential future ES APIs.
            if (
              typeof component === "object" &&
              component !== null &&
              component.key != null
            ) {
              // Explicit key
              return escape(component.key);
            }
            // Implicit key determined by the index in the set
            return index.toString(36);
          }

          function forEachSingleChild(bookKeeping, child, name) {
            var func = bookKeeping.func,
              context = bookKeeping.context;

            func.call(context, child, bookKeeping.count++);
          }

          /**
           * Iterates through children that are typically specified as `props.children`.
           *
           * See https://reactjs.org/docs/react-api.html#react.children.foreach
           *
           * The provided forEachFunc(child, index) will be called for each
           * leaf child.
           *
           * @param {?*} children Children tree container.
           * @param {function(*, int)} forEachFunc
           * @param {*} forEachContext Context for forEachContext.
           */
          function forEachChildren(children, forEachFunc, forEachContext) {
            if (children == null) {
              return children;
            }
            var traverseContext = getPooledTraverseContext(
              null,
              null,
              forEachFunc,
              forEachContext
            );
            traverseAllChildren(children, forEachSingleChild, traverseContext);
            releaseTraverseContext(traverseContext);
          }

          function mapSingleChildIntoContext(bookKeeping, child, childKey) {
            var result = bookKeeping.result,
              keyPrefix = bookKeeping.keyPrefix,
              func = bookKeeping.func,
              context = bookKeeping.context;

            var mappedChild = func.call(context, child, bookKeeping.count++);
            if (Array.isArray(mappedChild)) {
              mapIntoWithKeyPrefixInternal(
                mappedChild,
                result,
                childKey,
                emptyFunction.thatReturnsArgument
              );
            } else if (mappedChild != null) {
              if (isValidElement(mappedChild)) {
                mappedChild = cloneAndReplaceKey(
                  mappedChild,
                  // Keep both the (mapped) and old keys if they differ, just as
                  // traverseAllChildren used to do for objects as children
                  keyPrefix +
                    (mappedChild.key &&
                    (!child || child.key !== mappedChild.key)
                      ? escapeUserProvidedKey(mappedChild.key) + "/"
                      : "") +
                    childKey
                );
              }
              result.push(mappedChild);
            }
          }

          function mapIntoWithKeyPrefixInternal(
            children,
            array,
            prefix,
            func,
            context
          ) {
            var escapedPrefix = "";
            if (prefix != null) {
              escapedPrefix = escapeUserProvidedKey(prefix) + "/";
            }
            var traverseContext = getPooledTraverseContext(
              array,
              escapedPrefix,
              func,
              context
            );
            traverseAllChildren(
              children,
              mapSingleChildIntoContext,
              traverseContext
            );
            releaseTraverseContext(traverseContext);
          }

          /**
           * Maps children that are typically specified as `props.children`.
           *
           * See https://reactjs.org/docs/react-api.html#react.children.map
           *
           * The provided mapFunction(child, key, index) will be called for each
           * leaf child.
           *
           * @param {?*} children Children tree container.
           * @param {function(*, int)} func The map function.
           * @param {*} context Context for mapFunction.
           * @return {object} Object containing the ordered map of results.
           */
          function mapChildren(children, func, context) {
            if (children == null) {
              return children;
            }
            var result = [];
            mapIntoWithKeyPrefixInternal(children, result, null, func, context);
            return result;
          }

          /**
           * Count the number of children that are typically specified as
           * `props.children`.
           *
           * See https://reactjs.org/docs/react-api.html#react.children.count
           *
           * @param {?*} children Children tree container.
           * @return {number} The number of children.
           */
          function countChildren(children, context) {
            return traverseAllChildren(
              children,
              emptyFunction.thatReturnsNull,
              null
            );
          }

          /**
           * Flatten a children object (typically specified as `props.children`) and
           * return an array with appropriately re-keyed children.
           *
           * See https://reactjs.org/docs/react-api.html#react.children.toarray
           */
          function toArray(children) {
            var result = [];
            mapIntoWithKeyPrefixInternal(
              children,
              result,
              null,
              emptyFunction.thatReturnsArgument
            );
            return result;
          }

          /**
           * Returns the first child in a collection of children and verifies that there
           * is only one child in the collection.
           *
           * See https://reactjs.org/docs/react-api.html#react.children.only
           *
           * The current implementation of this function assumes that a single child gets
           * passed without a wrapper, but the purpose of this helper function is to
           * abstract away the particular structure of children.
           *
           * @param {?object} children Child collection structure.
           * @return {ReactElement} The first and only `ReactElement` contained in the
           * structure.
           */
          function onlyChild(children) {
            !isValidElement(children)
              ? invariant(
                  false,
                  "React.Children.only expected to receive a single React element child."
                )
              : void 0;
            return children;
          }

          var describeComponentFrame = function(name, source, ownerName) {
            return (
              "\n    in " +
              (name || "Unknown") +
              (source
                ? " (at " +
                  source.fileName.replace(/^.*[\\\/]/, "") +
                  ":" +
                  source.lineNumber +
                  ")"
                : ownerName ? " (created by " + ownerName + ")" : "")
            );
          };

          function getComponentName(fiber) {
            var type = fiber.type;

            if (typeof type === "string") {
              return type;
            }
            if (typeof type === "function") {
              return type.displayName || type.name;
            }
            return null;
          }

          /**
           * ReactElementValidator provides a wrapper around a element factory
           * which validates the props passed to the element. This is intended to be
           * used only in DEV and could be replaced by a static type checker for languages
           * that support it.
           */

          {
            var currentlyValidatingElement = null;

            var getDisplayName = function(element) {
              if (element == null) {
                return "#empty";
              } else if (
                typeof element === "string" ||
                typeof element === "number"
              ) {
                return "#text";
              } else if (typeof element.type === "string") {
                return element.type;
              } else if (element.type === REACT_FRAGMENT_TYPE$1) {
                return "React.Fragment";
              } else {
                return (
                  element.type.displayName || element.type.name || "Unknown"
                );
              }
            };

            var getStackAddendum = function() {
              var stack = "";
              if (currentlyValidatingElement) {
                var name = getDisplayName(currentlyValidatingElement);
                var owner = currentlyValidatingElement._owner;
                stack += describeComponentFrame(
                  name,
                  currentlyValidatingElement._source,
                  owner && getComponentName(owner)
                );
              }
              stack += ReactDebugCurrentFrame.getStackAddendum() || "";
              return stack;
            };

            var REACT_FRAGMENT_TYPE$1 =
              (typeof Symbol === "function" &&
                Symbol["for"] &&
                Symbol["for"]("react.fragment")) ||
              0xeacb;

            var VALID_FRAGMENT_PROPS = new Map([
              ["children", true],
              ["key", true]
            ]);
          }

          var ITERATOR_SYMBOL$1 =
            typeof Symbol === "function" && Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL$1 = "@@iterator"; // Before Symbol spec.

          function getDeclarationErrorAddendum() {
            if (ReactCurrentOwner.current) {
              var name = getComponentName(ReactCurrentOwner.current);
              if (name) {
                return "\n\nCheck the render method of `" + name + "`.";
              }
            }
            return "";
          }

          function getSourceInfoErrorAddendum(elementProps) {
            if (
              elementProps !== null &&
              elementProps !== undefined &&
              elementProps.__source !== undefined
            ) {
              var source = elementProps.__source;
              var fileName = source.fileName.replace(/^.*[\\\/]/, "");
              var lineNumber = source.lineNumber;
              return (
                "\n\nCheck your code at " + fileName + ":" + lineNumber + "."
              );
            }
            return "";
          }

          /**
           * Warn if there's no key explicitly set on dynamic arrays of children or
           * object keys are not valid. This allows us to keep track of children between
           * updates.
           */
          var ownerHasKeyUseWarning = {};

          function getCurrentComponentErrorInfo(parentType) {
            var info = getDeclarationErrorAddendum();

            if (!info) {
              var parentName =
                typeof parentType === "string"
                  ? parentType
                  : parentType.displayName || parentType.name;
              if (parentName) {
                info =
                  "\n\nCheck the top-level render call using <" +
                  parentName +
                  ">.";
              }
            }
            return info;
          }

          /**
           * Warn if the element doesn't have an explicit key assigned to it.
           * This element is in an array. The array could grow and shrink or be
           * reordered. All children that haven't already been validated are required to
           * have a "key" property assigned to it. Error statuses are cached so a warning
           * will only be shown once.
           *
           * @internal
           * @param {ReactElement} element Element that requires a key.
           * @param {*} parentType element's parent's type.
           */
          function validateExplicitKey(element, parentType) {
            if (
              !element._store ||
              element._store.validated ||
              element.key != null
            ) {
              return;
            }
            element._store.validated = true;

            var currentComponentErrorInfo = getCurrentComponentErrorInfo(
              parentType
            );
            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

            // Usually the current owner is the offender, but if it accepts children as a
            // property, it may be the creator of the child that's responsible for
            // assigning it a key.
            var childOwner = "";
            if (
              element &&
              element._owner &&
              element._owner !== ReactCurrentOwner.current
            ) {
              // Give the component that originally created this child.
              childOwner =
                " It was passed a child from " +
                getComponentName(element._owner) +
                ".";
            }

            currentlyValidatingElement = element;
            {
              warning(
                false,
                'Each child in an array or iterator should have a unique "key" prop.' +
                  "%s%s See https://fb.me/react-warning-keys for more information.%s",
                currentComponentErrorInfo,
                childOwner,
                getStackAddendum()
              );
            }
            currentlyValidatingElement = null;
          }

          /**
           * Ensure that every element either is passed in a static location, in an
           * array with an explicit keys property defined, or in an object literal
           * with valid key property.
           *
           * @internal
           * @param {ReactNode} node Statically passed child of any type.
           * @param {*} parentType node's parent's type.
           */
          function validateChildKeys(node, parentType) {
            if (typeof node !== "object") {
              return;
            }
            if (Array.isArray(node)) {
              for (var i = 0; i < node.length; i++) {
                var child = node[i];
                if (isValidElement(child)) {
                  validateExplicitKey(child, parentType);
                }
              }
            } else if (isValidElement(node)) {
              // This element was passed in a valid location.
              if (node._store) {
                node._store.validated = true;
              }
            } else if (node) {
              var iteratorFn =
                (ITERATOR_SYMBOL$1 && node[ITERATOR_SYMBOL$1]) ||
                node[FAUX_ITERATOR_SYMBOL$1];
              if (typeof iteratorFn === "function") {
                // Entry iterators used to provide implicit keys,
                // but now we print a separate warning for them later.
                if (iteratorFn !== node.entries) {
                  var iterator = iteratorFn.call(node);
                  var step;
                  while (!(step = iterator.next()).done) {
                    if (isValidElement(step.value)) {
                      validateExplicitKey(step.value, parentType);
                    }
                  }
                }
              }
            }
          }

          /**
           * Given an element, validate that its props follow the propTypes definition,
           * provided by the type.
           *
           * @param {ReactElement} element
           */
          function validatePropTypes(element) {
            var componentClass = element.type;
            if (typeof componentClass !== "function") {
              return;
            }
            var name = componentClass.displayName || componentClass.name;
            var propTypes = componentClass.propTypes;

            if (propTypes) {
              currentlyValidatingElement = element;
              checkPropTypes(
                propTypes,
                element.props,
                "prop",
                name,
                getStackAddendum
              );
              currentlyValidatingElement = null;
            }
            if (typeof componentClass.getDefaultProps === "function") {
              warning(
                componentClass.getDefaultProps.isReactClassApproved,
                "getDefaultProps is only used on classic React.createClass " +
                  "definitions. Use a static property named `defaultProps` instead."
              );
            }
          }

          /**
           * Given a fragment, validate that it can only be provided with fragment props
           * @param {ReactElement} fragment
           */
          function validateFragmentProps(fragment) {
            currentlyValidatingElement = fragment;

            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
              for (
                var _iterator = Object.keys(fragment.props)[Symbol.iterator](),
                  _step;
                !(_iteratorNormalCompletion = (_step = _iterator.next()).done);
                _iteratorNormalCompletion = true
              ) {
                var key = _step.value;

                if (!VALID_FRAGMENT_PROPS.has(key)) {
                  warning(
                    false,
                    "Invalid prop `%s` supplied to `React.Fragment`. " +
                      "React.Fragment can only have `key` and `children` props.%s",
                    key,
                    getStackAddendum()
                  );
                  break;
                }
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator["return"]) {
                  _iterator["return"]();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }

            if (fragment.ref !== null) {
              warning(
                false,
                "Invalid attribute `ref` supplied to `React.Fragment`.%s",
                getStackAddendum()
              );
            }

            currentlyValidatingElement = null;
          }

          function createElementWithValidation(type, props, children) {
            var validType =
              typeof type === "string" ||
              typeof type === "function" ||
              typeof type === "symbol" ||
              typeof type === "number";
            // We warn in this case but don't throw. We expect the element creation to
            // succeed and there will likely be errors in render.
            if (!validType) {
              var info = "";
              if (
                type === undefined ||
                (typeof type === "object" &&
                  type !== null &&
                  Object.keys(type).length === 0)
              ) {
                info +=
                  " You likely forgot to export your component from the file " +
                  "it's defined in.";
              }

              var sourceInfo = getSourceInfoErrorAddendum(props);
              if (sourceInfo) {
                info += sourceInfo;
              } else {
                info += getDeclarationErrorAddendum();
              }

              info += getStackAddendum() || "";

              warning(
                false,
                "React.createElement: type is invalid -- expected a string (for " +
                  "built-in components) or a class/function (for composite " +
                  "components) but got: %s.%s",
                type == null ? type : typeof type,
                info
              );
            }

            var element = createElement.apply(this, arguments);

            // The result can be nullish if a mock or a custom function is used.
            // TODO: Drop this when these are no longer allowed as the type argument.
            if (element == null) {
              return element;
            }

            // Skip key warning if the type isn't valid since our key validation logic
            // doesn't expect a non-string/function type and can throw confusing errors.
            // We don't want exception behavior to differ between dev and prod.
            // (Rendering will throw with a helpful message and as soon as the type is
            // fixed, the key warnings will appear.)
            if (validType) {
              for (var i = 2; i < arguments.length; i++) {
                validateChildKeys(arguments[i], type);
              }
            }

            if (typeof type === "symbol" && type === REACT_FRAGMENT_TYPE$1) {
              validateFragmentProps(element);
            } else {
              validatePropTypes(element);
            }

            return element;
          }

          function createFactoryWithValidation(type) {
            var validatedFactory = createElementWithValidation.bind(null, type);
            // Legacy hook TODO: Warn if this is accessed
            validatedFactory.type = type;

            {
              Object.defineProperty(validatedFactory, "type", {
                enumerable: false,
                get: function() {
                  lowPriorityWarning$1(
                    false,
                    "Factory.type is deprecated. Access the class directly " +
                      "before passing it to createFactory."
                  );
                  Object.defineProperty(this, "type", {
                    value: type
                  });
                  return type;
                }
              });
            }

            return validatedFactory;
          }

          function cloneElementWithValidation(element, props, children) {
            var newElement = cloneElement.apply(this, arguments);
            for (var i = 2; i < arguments.length; i++) {
              validateChildKeys(arguments[i], newElement.type);
            }
            validatePropTypes(newElement);
            return newElement;
          }

          var REACT_FRAGMENT_TYPE =
            (typeof Symbol === "function" &&
              Symbol["for"] &&
              Symbol["for"]("react.fragment")) ||
            0xeacb;

          var React = {
            Children: {
              map: mapChildren,
              forEach: forEachChildren,
              count: countChildren,
              toArray: toArray,
              only: onlyChild
            },

            Component: Component,
            PureComponent: PureComponent,
            unstable_AsyncComponent: AsyncComponent,

            createElement: createElementWithValidation,
            cloneElement: cloneElementWithValidation,
            createFactory: createFactoryWithValidation,
            isValidElement: isValidElement,

            version: ReactVersion,

            __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
              ReactCurrentOwner: ReactCurrentOwner,
              // Used by renderers to avoid bundling object-assign twice in UMD bundles:
              assign: _assign
            }
          };

          if (enableReactFragment) {
            React.Fragment = REACT_FRAGMENT_TYPE;
          }

          {
            _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
              // These should not be included in production.
              ReactDebugCurrentFrame: ReactDebugCurrentFrame,
              // Shim for React DOM 16.0.0 which still destructured (but not used) this.
              // TODO: remove in React 17.0.
              ReactComponentTreeHook: {}
            });
          }

          var React$2 = Object.freeze({
            default: React
          });

          var React$3 = (React$2 && React) || React$2;

          // TODO: decide on the top-level export form.
          // This is hacky but makes it work with both Rollup and Jest.
          var react = React$3["default"] ? React$3["default"] : React$3;

          module.exports = react;
        })();
      }

      /***/
    },
    /* 8 */
    /***/ function(module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       */

      "use strict";

      /**
       * Use invariant() to assert state which your program assumes to be true.
       *
       * Provide sprintf-style format (only %s is supported) and arguments
       * to provide information about what broke and what you were
       * expecting.
       *
       * The invariant message will be stripped in production, but the invariant
       * will remain to ensure logic does not differ in production.
       */

      var validateFormat = function validateFormat(format) {};

      if (undefined !== "production") {
        validateFormat = function validateFormat(format) {
          if (format === undefined) {
            throw new Error("invariant requires an error message argument");
          }
        };
      }

      function invariant(condition, format, a, b, c, d, e, f) {
        validateFormat(format);

        if (!condition) {
          var error;
          if (format === undefined) {
            error = new Error(
              "Minified exception occurred; use the non-minified dev environment " +
                "for the full error message and additional helpful warnings."
            );
          } else {
            var args = [a, b, c, d, e, f];
            var argIndex = 0;
            error = new Error(
              format.replace(/%s/g, function() {
                return args[argIndex++];
              })
            );
            error.name = "Invariant Violation";
          }

          error.framesToPop = 1; // we don't care about invariant's own frame
          throw error;
        }
      }

      module.exports = invariant;

      /***/
    },
    /* 9 */
    /***/ function(module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2014-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       */

      "use strict";

      var emptyFunction = __webpack_require__(6);

      /**
       * Similar to invariant but only logs a warning if the condition is not met.
       * This can be used to log issues in development environments in critical
       * paths. Removing the logging code for production environments will keep the
       * same logic and follow the same code paths.
       */

      var warning = emptyFunction;

      if (undefined !== "production") {
        var printWarning = function printWarning(format) {
          for (
            var _len = arguments.length,
              args = Array(_len > 1 ? _len - 1 : 0),
              _key = 1;
            _key < _len;
            _key++
          ) {
            args[_key - 1] = arguments[_key];
          }

          var argIndex = 0;
          var message =
            "Warning: " +
            format.replace(/%s/g, function() {
              return args[argIndex++];
            });
          if (typeof console !== "undefined") {
            console.error(message);
          }
          try {
            // --- Welcome to debugging React ---
            // This error was thrown as a convenience so that you can use this stack
            // to find the callsite that caused this warning to fire.
            throw new Error(message);
          } catch (x) {}
        };

        warning = function warning(condition, format) {
          if (format === undefined) {
            throw new Error(
              "`warning(condition, format, ...args)` requires a warning " +
                "message argument"
            );
          }

          if (format.indexOf("Failed Composite propType: ") === 0) {
            return; // Ignore CompositeComponent proptype check.
          }

          if (!condition) {
            for (
              var _len2 = arguments.length,
                args = Array(_len2 > 2 ? _len2 - 2 : 0),
                _key2 = 2;
              _key2 < _len2;
              _key2++
            ) {
              args[_key2 - 2] = arguments[_key2];
            }

            printWarning.apply(undefined, [format].concat(args));
          }
        };
      }

      module.exports = warning;

      /***/
    },
    /* 10 */
    /***/ function(module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      "use strict";

      if (undefined !== "production") {
        var invariant = __webpack_require__(8);
        var warning = __webpack_require__(9);
        var ReactPropTypesSecret = __webpack_require__(11);
        var loggedTypeFailures = {};
      }

      /**
       * Assert that the values match with the type specs.
       * Error messages are memorized and will only be shown once.
       *
       * @param {object} typeSpecs Map of name to a ReactPropType
       * @param {object} values Runtime values that need to be type-checked
       * @param {string} location e.g. "prop", "context", "child context"
       * @param {string} componentName Name of the component for error messages.
       * @param {?Function} getStack Returns the component stack.
       * @private
       */
      function checkPropTypes(
        typeSpecs,
        values,
        location,
        componentName,
        getStack
      ) {
        if (undefined !== "production") {
          for (var typeSpecName in typeSpecs) {
            if (typeSpecs.hasOwnProperty(typeSpecName)) {
              var error;
              // Prop type validation may throw. In case they do, we don't want to
              // fail the render phase where it didn't fail before. So we log it.
              // After these have been cleaned up, we'll let them throw.
              try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                invariant(
                  typeof typeSpecs[typeSpecName] === "function",
                  "%s: %s type `%s` is invalid; it must be a function, usually from " +
                    "the `prop-types` package, but received `%s`.",
                  componentName || "React class",
                  location,
                  typeSpecName,
                  typeof typeSpecs[typeSpecName]
                );
                error = typeSpecs[typeSpecName](
                  values,
                  typeSpecName,
                  componentName,
                  location,
                  null,
                  ReactPropTypesSecret
                );
              } catch (ex) {
                error = ex;
              }
              warning(
                !error || error instanceof Error,
                "%s: type specification of %s `%s` is invalid; the type checker " +
                  "function must return `null` or an `Error` but returned a %s. " +
                  "You may have forgotten to pass an argument to the type checker " +
                  "creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and " +
                  "shape all require an argument).",
                componentName || "React class",
                location,
                typeSpecName,
                typeof error
              );
              if (
                error instanceof Error &&
                !(error.message in loggedTypeFailures)
              ) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error.message] = true;

                var stack = getStack ? getStack() : "";

                warning(
                  false,
                  "Failed %s type: %s%s",
                  location,
                  error.message,
                  stack != null ? stack : ""
                );
              }
            }
          }
        }
      }

      module.exports = checkPropTypes;

      /***/
    },
    /* 11 */
    /***/ function(module, exports) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      "use strict";

      var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";

      module.exports = ReactPropTypesSecret;

      /***/
    },
    /* 12 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      function checkDCE() {
        /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
        if (
          typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" ||
          typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function"
        ) {
          return;
        }
        if (undefined !== "production") {
          // This branch is unreachable because this function is only called
          // in production, but the condition is true only in development.
          // Therefore if the branch is still here, dead code elimination wasn't
          // properly applied.
          // Don't change the message. React DevTools relies on it. Also make sure
          // this message doesn't occur elsewhere in this function, or it will cause
          // a false positive.
          throw new Error("^_^");
        }
        try {
          // Verify that the code above has been dead code eliminated (DCE'd).
          __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
        } catch (err) {
          // DevTools shouldn't crash React, no matter what.
          // We should still report in case we break this code.
          console.error(err);
        }
      }

      if (undefined === "production") {
        // DCE check should happen before ReactDOM bundle executes so that
        // DevTools can report bad minification during injection.
        checkDCE();
        module.exports = __webpack_require__(13);
      } else {
        module.exports = __webpack_require__(22);
      }

      /***/
    },
    /* 13 */
    /***/ function(module, exports, __webpack_require__) {
      /** @license React v16.1.0
       * react-dom.production.min.js
       *
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */
      /*
	 Modernizr 3.0.0pre (Custom Build) | MIT
	*/
      "use strict";
      var aa = __webpack_require__(2),
        m = __webpack_require__(14),
        A = __webpack_require__(4),
        B = __webpack_require__(6),
        ca = __webpack_require__(15),
        da = __webpack_require__(16),
        ea = __webpack_require__(17),
        ha = __webpack_require__(18),
        ia = __webpack_require__(21),
        C = __webpack_require__(5);
      function D(a) {
        for (
          var b = arguments.length - 1,
            c =
              "Minified React error #" +
              a +
              "; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d" +
              a,
            d = 0;
          d < b;
          d++
        )
          c += "\x26args[]\x3d" + encodeURIComponent(arguments[d + 1]);
        b = Error(
          c +
            " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
        );
        b.name = "Invariant Violation";
        b.framesToPop = 1;
        throw b;
      }
      aa ? void 0 : D("227");
      var la = {
        children: !0,
        dangerouslySetInnerHTML: !0,
        defaultValue: !0,
        defaultChecked: !0,
        innerHTML: !0,
        suppressContentEditableWarning: !0,
        suppressHydrationWarning: !0,
        style: !0
      };
      function qa(a, b) {
        return (a & b) === b;
      }
      var ra = {
          MUST_USE_PROPERTY: 1,
          HAS_BOOLEAN_VALUE: 4,
          HAS_NUMERIC_VALUE: 8,
          HAS_POSITIVE_NUMERIC_VALUE: 24,
          HAS_OVERLOADED_BOOLEAN_VALUE: 32,
          HAS_STRING_BOOLEAN_VALUE: 64,
          injectDOMPropertyConfig: function(a) {
            var b = ra,
              c = a.Properties || {},
              d = a.DOMAttributeNamespaces || {},
              e = a.DOMAttributeNames || {};
            a = a.DOMMutationMethods || {};
            for (var f in c) {
              sa.hasOwnProperty(f) ? D("48", f) : void 0;
              var g = f.toLowerCase(),
                k = c[f];
              g = {
                attributeName: g,
                attributeNamespace: null,
                propertyName: f,
                mutationMethod: null,
                mustUseProperty: qa(k, b.MUST_USE_PROPERTY),
                hasBooleanValue: qa(k, b.HAS_BOOLEAN_VALUE),
                hasNumericValue: qa(k, b.HAS_NUMERIC_VALUE),
                hasPositiveNumericValue: qa(k, b.HAS_POSITIVE_NUMERIC_VALUE),
                hasOverloadedBooleanValue: qa(
                  k,
                  b.HAS_OVERLOADED_BOOLEAN_VALUE
                ),
                hasStringBooleanValue: qa(k, b.HAS_STRING_BOOLEAN_VALUE)
              };
              1 >=
              g.hasBooleanValue +
                g.hasNumericValue +
                g.hasOverloadedBooleanValue
                ? void 0
                : D("50", f);
              e.hasOwnProperty(f) && (g.attributeName = e[f]);
              d.hasOwnProperty(f) && (g.attributeNamespace = d[f]);
              a.hasOwnProperty(f) && (g.mutationMethod = a[f]);
              sa[f] = g;
            }
          }
        },
        sa = {};
      function ta(a, b) {
        if (
          la.hasOwnProperty(a) ||
          (2 < a.length &&
            ("o" === a[0] || "O" === a[0]) &&
            ("n" === a[1] || "N" === a[1]))
        )
          return !1;
        if (null === b) return !0;
        switch (typeof b) {
          case "boolean":
            return (
              la.hasOwnProperty(a)
                ? (a = !0)
                : (b = ua(a))
                  ? (a =
                      b.hasBooleanValue ||
                      b.hasStringBooleanValue ||
                      b.hasOverloadedBooleanValue)
                  : ((a = a.toLowerCase().slice(0, 5)),
                    (a = "data-" === a || "aria-" === a)),
              a
            );
          case "undefined":
          case "number":
          case "string":
          case "object":
            return !0;
          default:
            return !1;
        }
      }
      function ua(a) {
        return sa.hasOwnProperty(a) ? sa[a] : null;
      }
      var va = ra,
        wa = va.MUST_USE_PROPERTY,
        H = va.HAS_BOOLEAN_VALUE,
        xa = va.HAS_NUMERIC_VALUE,
        ya = va.HAS_POSITIVE_NUMERIC_VALUE,
        za = va.HAS_STRING_BOOLEAN_VALUE,
        Aa = {
          Properties: {
            allowFullScreen: H,
            autoFocus: za,
            async: H,
            autoPlay: H,
            capture: H,
            checked: wa | H,
            cols: ya,
            contentEditable: za,
            controls: H,
            default: H,
            defer: H,
            disabled: H,
            download: va.HAS_OVERLOADED_BOOLEAN_VALUE,
            draggable: za,
            formNoValidate: H,
            hidden: H,
            loop: H,
            multiple: wa | H,
            muted: wa | H,
            noValidate: H,
            open: H,
            playsInline: H,
            readOnly: H,
            required: H,
            reversed: H,
            rows: ya,
            rowSpan: xa,
            scoped: H,
            seamless: H,
            selected: wa | H,
            size: ya,
            start: xa,
            span: ya,
            spellCheck: za,
            style: 0,
            tabIndex: 0,
            itemScope: H,
            acceptCharset: 0,
            className: 0,
            htmlFor: 0,
            httpEquiv: 0,
            value: za
          },
          DOMAttributeNames: {
            acceptCharset: "accept-charset",
            className: "class",
            htmlFor: "for",
            httpEquiv: "http-equiv"
          },
          DOMMutationMethods: {
            value: function(a, b) {
              if (null == b) return a.removeAttribute("value");
              "number" !== a.type || !1 === a.hasAttribute("value")
                ? a.setAttribute("value", "" + b)
                : a.validity &&
                  !a.validity.badInput &&
                  a.ownerDocument.activeElement !== a &&
                  a.setAttribute("value", "" + b);
            }
          }
        },
        Ba = va.HAS_STRING_BOOLEAN_VALUE,
        K = {
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace"
        },
        Ca = {
          Properties: {
            autoReverse: Ba,
            externalResourcesRequired: Ba,
            preserveAlpha: Ba
          },
          DOMAttributeNames: {
            autoReverse: "autoReverse",
            externalResourcesRequired: "externalResourcesRequired",
            preserveAlpha: "preserveAlpha"
          },
          DOMAttributeNamespaces: {
            xlinkActuate: K.xlink,
            xlinkArcrole: K.xlink,
            xlinkHref: K.xlink,
            xlinkRole: K.xlink,
            xlinkShow: K.xlink,
            xlinkTitle: K.xlink,
            xlinkType: K.xlink,
            xmlBase: K.xml,
            xmlLang: K.xml,
            xmlSpace: K.xml
          }
        },
        Da = /[\-\:]([a-z])/g;
      function Ea(a) {
        return a[1].toUpperCase();
      }
      "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space"
        .split(" ")
        .forEach(function(a) {
          var b = a.replace(Da, Ea);
          Ca.Properties[b] = 0;
          Ca.DOMAttributeNames[b] = a;
        });
      va.injectDOMPropertyConfig(Aa);
      va.injectDOMPropertyConfig(Ca);
      var N = {
        _caughtError: null,
        _hasCaughtError: !1,
        _rethrowError: null,
        _hasRethrowError: !1,
        injection: {
          injectErrorUtils: function(a) {
            "function" !== typeof a.invokeGuardedCallback ? D("197") : void 0;
            Ha = a.invokeGuardedCallback;
          }
        },
        invokeGuardedCallback: function(a, b, c, d, e, f, g, k, h) {
          Ha.apply(N, arguments);
        },
        invokeGuardedCallbackAndCatchFirstError: function(
          a,
          b,
          c,
          d,
          e,
          f,
          g,
          k,
          h
        ) {
          N.invokeGuardedCallback.apply(this, arguments);
          if (N.hasCaughtError()) {
            var r = N.clearCaughtError();
            N._hasRethrowError ||
              ((N._hasRethrowError = !0), (N._rethrowError = r));
          }
        },
        rethrowCaughtError: function() {
          return Ia.apply(N, arguments);
        },
        hasCaughtError: function() {
          return N._hasCaughtError;
        },
        clearCaughtError: function() {
          if (N._hasCaughtError) {
            var a = N._caughtError;
            N._caughtError = null;
            N._hasCaughtError = !1;
            return a;
          }
          D("198");
        }
      };
      function Ha(a, b, c, d, e, f, g, k, h) {
        N._hasCaughtError = !1;
        N._caughtError = null;
        var r = Array.prototype.slice.call(arguments, 3);
        try {
          b.apply(c, r);
        } catch (n) {
          (N._caughtError = n), (N._hasCaughtError = !0);
        }
      }
      function Ia() {
        if (N._hasRethrowError) {
          var a = N._rethrowError;
          N._rethrowError = null;
          N._hasRethrowError = !1;
          throw a;
        }
      }
      var Ja = null,
        Ka = {};
      function La() {
        if (Ja)
          for (var a in Ka) {
            var b = Ka[a],
              c = Ja.indexOf(a);
            -1 < c ? void 0 : D("96", a);
            if (!Ma[c]) {
              b.extractEvents ? void 0 : D("97", a);
              Ma[c] = b;
              c = b.eventTypes;
              for (var d in c) {
                var e = void 0;
                var f = c[d],
                  g = b,
                  k = d;
                Na.hasOwnProperty(k) ? D("99", k) : void 0;
                Na[k] = f;
                var h = f.phasedRegistrationNames;
                if (h) {
                  for (e in h) h.hasOwnProperty(e) && Oa(h[e], g, k);
                  e = !0;
                } else
                  f.registrationName
                    ? (Oa(f.registrationName, g, k), (e = !0))
                    : (e = !1);
                e ? void 0 : D("98", d, a);
              }
            }
          }
      }
      function Oa(a, b, c) {
        Pa[a] ? D("100", a) : void 0;
        Pa[a] = b;
        Qa[a] = b.eventTypes[c].dependencies;
      }
      var Ma = [],
        Na = {},
        Pa = {},
        Qa = {};
      function Ra(a) {
        Ja ? D("101") : void 0;
        Ja = Array.prototype.slice.call(a);
        La();
      }
      function Sa(a) {
        var b = !1,
          c;
        for (c in a)
          if (a.hasOwnProperty(c)) {
            var d = a[c];
            (Ka.hasOwnProperty(c) && Ka[c] === d) ||
              (Ka[c] ? D("102", c) : void 0, (Ka[c] = d), (b = !0));
          }
        b && La();
      }
      var Ta = Object.freeze({
          plugins: Ma,
          eventNameDispatchConfigs: Na,
          registrationNameModules: Pa,
          registrationNameDependencies: Qa,
          possibleRegistrationNames: null,
          injectEventPluginOrder: Ra,
          injectEventPluginsByName: Sa
        }),
        Ua = null,
        Va = null,
        Wa = null;
      function Xa(a, b, c, d) {
        b = a.type || "unknown-event";
        a.currentTarget = Wa(d);
        N.invokeGuardedCallbackAndCatchFirstError(b, c, void 0, a);
        a.currentTarget = null;
      }
      function Ya(a, b) {
        null == b ? D("30") : void 0;
        if (null == a) return b;
        if (Array.isArray(a)) {
          if (Array.isArray(b)) return a.push.apply(a, b), a;
          a.push(b);
          return a;
        }
        return Array.isArray(b) ? [a].concat(b) : [a, b];
      }
      function Za(a, b, c) {
        Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);
      }
      var $a = null;
      function ab(a, b) {
        if (a) {
          var c = a._dispatchListeners,
            d = a._dispatchInstances;
          if (Array.isArray(c))
            for (var e = 0; e < c.length && !a.isPropagationStopped(); e++)
              Xa(a, b, c[e], d[e]);
          else c && Xa(a, b, c, d);
          a._dispatchListeners = null;
          a._dispatchInstances = null;
          a.isPersistent() || a.constructor.release(a);
        }
      }
      function bb(a) {
        return ab(a, !0);
      }
      function cb(a) {
        return ab(a, !1);
      }
      var db = { injectEventPluginOrder: Ra, injectEventPluginsByName: Sa };
      function eb(a, b) {
        var c = a.stateNode;
        if (!c) return null;
        var d = Ua(c);
        if (!d) return null;
        c = d[b];
        a: switch (b) {
          case "onClick":
          case "onClickCapture":
          case "onDoubleClick":
          case "onDoubleClickCapture":
          case "onMouseDown":
          case "onMouseDownCapture":
          case "onMouseMove":
          case "onMouseMoveCapture":
          case "onMouseUp":
          case "onMouseUpCapture":
            (d = !d.disabled) ||
              ((a = a.type),
              (d = !(
                "button" === a ||
                "input" === a ||
                "select" === a ||
                "textarea" === a
              )));
            a = !d;
            break a;
          default:
            a = !1;
        }
        if (a) return null;
        c && "function" !== typeof c ? D("231", b, typeof c) : void 0;
        return c;
      }
      function jb(a, b, c, d) {
        for (var e, f = 0; f < Ma.length; f++) {
          var g = Ma[f];
          g && (g = g.extractEvents(a, b, c, d)) && (e = Ya(e, g));
        }
        return e;
      }
      function kb(a) {
        a && ($a = Ya($a, a));
      }
      function lb(a) {
        var b = $a;
        $a = null;
        a ? Za(b, bb) : Za(b, cb);
        $a ? D("95") : void 0;
        N.rethrowCaughtError();
      }
      var mb = Object.freeze({
          injection: db,
          getListener: eb,
          extractEvents: jb,
          enqueueEvents: kb,
          processEventQueue: lb
        }),
        nb = Math.random()
          .toString(36)
          .slice(2),
        O = "__reactInternalInstance$" + nb,
        ob = "__reactEventHandlers$" + nb;
      function pb(a) {
        if (a[O]) return a[O];
        for (var b = []; !a[O]; )
          if ((b.push(a), a.parentNode)) a = a.parentNode;
          else return null;
        var c = void 0,
          d = a[O];
        if (5 === d.tag || 6 === d.tag) return d;
        for (; a && (d = a[O]); a = b.pop()) c = d;
        return c;
      }
      function qb(a) {
        if (5 === a.tag || 6 === a.tag) return a.stateNode;
        D("33");
      }
      function rb(a) {
        return a[ob] || null;
      }
      var sb = Object.freeze({
        precacheFiberNode: function(a, b) {
          b[O] = a;
        },
        getClosestInstanceFromNode: pb,
        getInstanceFromNode: function(a) {
          a = a[O];
          return !a || (5 !== a.tag && 6 !== a.tag) ? null : a;
        },
        getNodeFromInstance: qb,
        getFiberCurrentPropsFromNode: rb,
        updateFiberProps: function(a, b) {
          a[ob] = b;
        }
      });
      function Q(a) {
        do a = a["return"];
        while (a && 5 !== a.tag);
        return a ? a : null;
      }
      function tb(a, b, c) {
        for (var d = []; a; ) d.push(a), (a = Q(a));
        for (a = d.length; 0 < a--; ) b(d[a], "captured", c);
        for (a = 0; a < d.length; a++) b(d[a], "bubbled", c);
      }
      function ub(a, b, c) {
        if ((b = eb(a, c.dispatchConfig.phasedRegistrationNames[b])))
          (c._dispatchListeners = Ya(c._dispatchListeners, b)),
            (c._dispatchInstances = Ya(c._dispatchInstances, a));
      }
      function vb(a) {
        a &&
          a.dispatchConfig.phasedRegistrationNames &&
          tb(a._targetInst, ub, a);
      }
      function wb(a) {
        if (a && a.dispatchConfig.phasedRegistrationNames) {
          var b = a._targetInst;
          b = b ? Q(b) : null;
          tb(b, ub, a);
        }
      }
      function xb(a, b, c) {
        a &&
          c &&
          c.dispatchConfig.registrationName &&
          (b = eb(a, c.dispatchConfig.registrationName)) &&
          ((c._dispatchListeners = Ya(c._dispatchListeners, b)),
          (c._dispatchInstances = Ya(c._dispatchInstances, a)));
      }
      function yb(a) {
        a && a.dispatchConfig.registrationName && xb(a._targetInst, null, a);
      }
      function zb(a) {
        Za(a, vb);
      }
      function Ab(a, b, c, d) {
        if (c && d)
          a: {
            var e = c;
            for (var f = d, g = 0, k = e; k; k = Q(k)) g++;
            k = 0;
            for (var h = f; h; h = Q(h)) k++;
            for (; 0 < g - k; ) (e = Q(e)), g--;
            for (; 0 < k - g; ) (f = Q(f)), k--;
            for (; g--; ) {
              if (e === f || e === f.alternate) break a;
              e = Q(e);
              f = Q(f);
            }
            e = null;
          }
        else e = null;
        f = e;
        for (e = []; c && c !== f; ) {
          g = c.alternate;
          if (null !== g && g === f) break;
          e.push(c);
          c = Q(c);
        }
        for (c = []; d && d !== f; ) {
          g = d.alternate;
          if (null !== g && g === f) break;
          c.push(d);
          d = Q(d);
        }
        for (d = 0; d < e.length; d++) xb(e[d], "bubbled", a);
        for (a = c.length; 0 < a--; ) xb(c[a], "captured", b);
      }
      var Bb = Object.freeze({
          accumulateTwoPhaseDispatches: zb,
          accumulateTwoPhaseDispatchesSkipTarget: function(a) {
            Za(a, wb);
          },
          accumulateEnterLeaveDispatches: Ab,
          accumulateDirectDispatches: function(a) {
            Za(a, yb);
          }
        }),
        Cb = null;
      function Db() {
        !Cb &&
          m.canUseDOM &&
          (Cb =
            "textContent" in document.documentElement
              ? "textContent"
              : "innerText");
        return Cb;
      }
      var R = { _root: null, _startText: null, _fallbackText: null };
      function Eb() {
        if (R._fallbackText) return R._fallbackText;
        var a,
          b = R._startText,
          c = b.length,
          d,
          e = Fb(),
          f = e.length;
        for (a = 0; a < c && b[a] === e[a]; a++);
        var g = c - a;
        for (d = 1; d <= g && b[c - d] === e[f - d]; d++);
        R._fallbackText = e.slice(a, 1 < d ? 1 - d : void 0);
        return R._fallbackText;
      }
      function Fb() {
        return "value" in R._root ? R._root.value : R._root[Db()];
      }
      var Gb = "dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(
          " "
        ),
        Hb = {
          type: null,
          target: null,
          currentTarget: B.thatReturnsNull,
          eventPhase: null,
          bubbles: null,
          cancelable: null,
          timeStamp: function(a) {
            return a.timeStamp || Date.now();
          },
          defaultPrevented: null,
          isTrusted: null
        };
      function S(a, b, c, d) {
        this.dispatchConfig = a;
        this._targetInst = b;
        this.nativeEvent = c;
        a = this.constructor.Interface;
        for (var e in a)
          a.hasOwnProperty(e) &&
            ((b = a[e])
              ? (this[e] = b(c))
              : "target" === e ? (this.target = d) : (this[e] = c[e]));
        this.isDefaultPrevented = (null != c.defaultPrevented
        ? c.defaultPrevented
        : !1 === c.returnValue)
          ? B.thatReturnsTrue
          : B.thatReturnsFalse;
        this.isPropagationStopped = B.thatReturnsFalse;
        return this;
      }
      A(S.prototype, {
        preventDefault: function() {
          this.defaultPrevented = !0;
          var a = this.nativeEvent;
          a &&
            (a.preventDefault
              ? a.preventDefault()
              : "unknown" !== typeof a.returnValue && (a.returnValue = !1),
            (this.isDefaultPrevented = B.thatReturnsTrue));
        },
        stopPropagation: function() {
          var a = this.nativeEvent;
          a &&
            (a.stopPropagation
              ? a.stopPropagation()
              : "unknown" !== typeof a.cancelBubble && (a.cancelBubble = !0),
            (this.isPropagationStopped = B.thatReturnsTrue));
        },
        persist: function() {
          this.isPersistent = B.thatReturnsTrue;
        },
        isPersistent: B.thatReturnsFalse,
        destructor: function() {
          var a = this.constructor.Interface,
            b;
          for (b in a) this[b] = null;
          for (a = 0; a < Gb.length; a++) this[Gb[a]] = null;
        }
      });
      S.Interface = Hb;
      S.augmentClass = function(a, b) {
        function c() {}
        c.prototype = this.prototype;
        var d = new c();
        A(d, a.prototype);
        a.prototype = d;
        a.prototype.constructor = a;
        a.Interface = A({}, this.Interface, b);
        a.augmentClass = this.augmentClass;
        Ib(a);
      };
      Ib(S);
      function Jb(a, b, c, d) {
        if (this.eventPool.length) {
          var e = this.eventPool.pop();
          this.call(e, a, b, c, d);
          return e;
        }
        return new this(a, b, c, d);
      }
      function Qb(a) {
        a instanceof this ? void 0 : D("223");
        a.destructor();
        10 > this.eventPool.length && this.eventPool.push(a);
      }
      function Ib(a) {
        a.eventPool = [];
        a.getPooled = Jb;
        a.release = Qb;
      }
      function Rb(a, b, c, d) {
        return S.call(this, a, b, c, d);
      }
      S.augmentClass(Rb, { data: null });
      function Sb(a, b, c, d) {
        return S.call(this, a, b, c, d);
      }
      S.augmentClass(Sb, { data: null });
      var Tb = [9, 13, 27, 32],
        Ub = m.canUseDOM && "CompositionEvent" in window,
        Vb = null;
      m.canUseDOM && "documentMode" in document && (Vb = document.documentMode);
      var Wb;
      if ((Wb = m.canUseDOM && "TextEvent" in window && !Vb)) {
        var Xb = window.opera;
        Wb = !(
          "object" === typeof Xb &&
          "function" === typeof Xb.version &&
          12 >= parseInt(Xb.version(), 10)
        );
      }
      var Yb = Wb,
        Zb = m.canUseDOM && (!Ub || (Vb && 8 < Vb && 11 >= Vb)),
        $b = String.fromCharCode(32),
        ac = {
          beforeInput: {
            phasedRegistrationNames: {
              bubbled: "onBeforeInput",
              captured: "onBeforeInputCapture"
            },
            dependencies: [
              "topCompositionEnd",
              "topKeyPress",
              "topTextInput",
              "topPaste"
            ]
          },
          compositionEnd: {
            phasedRegistrationNames: {
              bubbled: "onCompositionEnd",
              captured: "onCompositionEndCapture"
            },
            dependencies: "topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown".split(
              " "
            )
          },
          compositionStart: {
            phasedRegistrationNames: {
              bubbled: "onCompositionStart",
              captured: "onCompositionStartCapture"
            },
            dependencies: "topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown".split(
              " "
            )
          },
          compositionUpdate: {
            phasedRegistrationNames: {
              bubbled: "onCompositionUpdate",
              captured: "onCompositionUpdateCapture"
            },
            dependencies: "topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown".split(
              " "
            )
          }
        },
        bc = !1;
      function cc(a, b) {
        switch (a) {
          case "topKeyUp":
            return -1 !== Tb.indexOf(b.keyCode);
          case "topKeyDown":
            return 229 !== b.keyCode;
          case "topKeyPress":
          case "topMouseDown":
          case "topBlur":
            return !0;
          default:
            return !1;
        }
      }
      function dc(a) {
        a = a.detail;
        return "object" === typeof a && "data" in a ? a.data : null;
      }
      var ec = !1;
      function fc(a, b) {
        switch (a) {
          case "topCompositionEnd":
            return dc(b);
          case "topKeyPress":
            if (32 !== b.which) return null;
            bc = !0;
            return $b;
          case "topTextInput":
            return (a = b.data), a === $b && bc ? null : a;
          default:
            return null;
        }
      }
      function gc(a, b) {
        if (ec)
          return "topCompositionEnd" === a || (!Ub && cc(a, b))
            ? ((a = Eb()),
              (R._root = null),
              (R._startText = null),
              (R._fallbackText = null),
              (ec = !1),
              a)
            : null;
        switch (a) {
          case "topPaste":
            return null;
          case "topKeyPress":
            if (
              !(b.ctrlKey || b.altKey || b.metaKey) ||
              (b.ctrlKey && b.altKey)
            ) {
              if (b.char && 1 < b.char.length) return b.char;
              if (b.which) return String.fromCharCode(b.which);
            }
            return null;
          case "topCompositionEnd":
            return Zb ? null : b.data;
          default:
            return null;
        }
      }
      var hc = {
          eventTypes: ac,
          extractEvents: function(a, b, c, d) {
            var e;
            if (Ub)
              b: {
                switch (a) {
                  case "topCompositionStart":
                    var f = ac.compositionStart;
                    break b;
                  case "topCompositionEnd":
                    f = ac.compositionEnd;
                    break b;
                  case "topCompositionUpdate":
                    f = ac.compositionUpdate;
                    break b;
                }
                f = void 0;
              }
            else
              ec
                ? cc(a, c) && (f = ac.compositionEnd)
                : "topKeyDown" === a &&
                  229 === c.keyCode &&
                  (f = ac.compositionStart);
            f
              ? (Zb &&
                  (ec || f !== ac.compositionStart
                    ? f === ac.compositionEnd && ec && (e = Eb())
                    : ((R._root = d), (R._startText = Fb()), (ec = !0))),
                (f = Rb.getPooled(f, b, c, d)),
                e ? (f.data = e) : ((e = dc(c)), null !== e && (f.data = e)),
                zb(f),
                (e = f))
              : (e = null);
            (a = Yb ? fc(a, c) : gc(a, c))
              ? ((b = Sb.getPooled(ac.beforeInput, b, c, d)),
                (b.data = a),
                zb(b))
              : (b = null);
            return [e, b];
          }
        },
        ic = null,
        jc = null,
        kc = null;
      function lc(a) {
        if ((a = Va(a))) {
          ic && "function" === typeof ic.restoreControlledState
            ? void 0
            : D("194");
          var b = Ua(a.stateNode);
          ic.restoreControlledState(a.stateNode, a.type, b);
        }
      }
      var mc = {
        injectFiberControlledHostComponent: function(a) {
          ic = a;
        }
      };
      function nc(a) {
        jc ? (kc ? kc.push(a) : (kc = [a])) : (jc = a);
      }
      function oc() {
        if (jc) {
          var a = jc,
            b = kc;
          kc = jc = null;
          lc(a);
          if (b) for (a = 0; a < b.length; a++) lc(b[a]);
        }
      }
      var pc = Object.freeze({
        injection: mc,
        enqueueStateRestore: nc,
        restoreStateIfNeeded: oc
      });
      function qc(a, b) {
        return a(b);
      }
      var rc = !1;
      function sc(a, b) {
        if (rc) return qc(a, b);
        rc = !0;
        try {
          return qc(a, b);
        } finally {
          (rc = !1), oc();
        }
      }
      var tc = {
        color: !0,
        date: !0,
        datetime: !0,
        "datetime-local": !0,
        email: !0,
        month: !0,
        number: !0,
        password: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0
      };
      function uc(a) {
        var b = a && a.nodeName && a.nodeName.toLowerCase();
        return "input" === b ? !!tc[a.type] : "textarea" === b ? !0 : !1;
      }
      function vc(a) {
        a = a.target || a.srcElement || window;
        a.correspondingUseElement && (a = a.correspondingUseElement);
        return 3 === a.nodeType ? a.parentNode : a;
      }
      var wc;
      m.canUseDOM &&
        (wc =
          document.implementation &&
          document.implementation.hasFeature &&
          !0 !== document.implementation.hasFeature("", ""));
      function xc(a, b) {
        if (!m.canUseDOM || (b && !("addEventListener" in document))) return !1;
        b = "on" + a;
        var c = b in document;
        c ||
          ((c = document.createElement("div")),
          c.setAttribute(b, "return;"),
          (c = "function" === typeof c[b]));
        !c &&
          wc &&
          "wheel" === a &&
          (c = document.implementation.hasFeature("Events.wheel", "3.0"));
        return c;
      }
      function yc(a) {
        var b = a.type;
        return (
          (a = a.nodeName) &&
          "input" === a.toLowerCase() &&
          ("checkbox" === b || "radio" === b)
        );
      }
      function zc(a) {
        var b = yc(a) ? "checked" : "value",
          c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
          d = "" + a[b];
        if (
          !a.hasOwnProperty(b) &&
          "function" === typeof c.get &&
          "function" === typeof c.set
        )
          return (
            Object.defineProperty(a, b, {
              enumerable: c.enumerable,
              configurable: !0,
              get: function() {
                return c.get.call(this);
              },
              set: function(a) {
                d = "" + a;
                c.set.call(this, a);
              }
            }),
            {
              getValue: function() {
                return d;
              },
              setValue: function(a) {
                d = "" + a;
              },
              stopTracking: function() {
                a._valueTracker = null;
                delete a[b];
              }
            }
          );
      }
      function Ac(a) {
        a._valueTracker || (a._valueTracker = zc(a));
      }
      function Bc(a) {
        if (!a) return !1;
        var b = a._valueTracker;
        if (!b) return !0;
        var c = b.getValue();
        var d = "";
        a && (d = yc(a) ? (a.checked ? "true" : "false") : a.value);
        a = d;
        return a !== c ? (b.setValue(a), !0) : !1;
      }
      var Cc = {
        change: {
          phasedRegistrationNames: {
            bubbled: "onChange",
            captured: "onChangeCapture"
          },
          dependencies: "topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange".split(
            " "
          )
        }
      };
      function Dc(a, b, c) {
        a = S.getPooled(Cc.change, a, b, c);
        a.type = "change";
        nc(c);
        zb(a);
        return a;
      }
      var Ec = null,
        Fc = null;
      function Gc(a) {
        kb(a);
        lb(!1);
      }
      function Hc(a) {
        var b = qb(a);
        if (Bc(b)) return a;
      }
      function Ic(a, b) {
        if ("topChange" === a) return b;
      }
      var Jc = !1;
      m.canUseDOM &&
        (Jc =
          xc("input") && (!document.documentMode || 9 < document.documentMode));
      function Qc() {
        Ec && (Ec.detachEvent("onpropertychange", Rc), (Fc = Ec = null));
      }
      function Rc(a) {
        "value" === a.propertyName &&
          Hc(Fc) &&
          ((a = Dc(Fc, a, vc(a))), sc(Gc, a));
      }
      function Sc(a, b, c) {
        "topFocus" === a
          ? (Qc(), (Ec = b), (Fc = c), Ec.attachEvent("onpropertychange", Rc))
          : "topBlur" === a && Qc();
      }
      function Tc(a) {
        if (
          "topSelectionChange" === a ||
          "topKeyUp" === a ||
          "topKeyDown" === a
        )
          return Hc(Fc);
      }
      function Uc(a, b) {
        if ("topClick" === a) return Hc(b);
      }
      function Vc(a, b) {
        if ("topInput" === a || "topChange" === a) return Hc(b);
      }
      var Wc = {
        eventTypes: Cc,
        _isInputEventSupported: Jc,
        extractEvents: function(a, b, c, d) {
          var e = b ? qb(b) : window,
            f = e.nodeName && e.nodeName.toLowerCase();
          if ("select" === f || ("input" === f && "file" === e.type))
            var g = Ic;
          else if (uc(e))
            if (Jc) g = Vc;
            else {
              g = Tc;
              var k = Sc;
            }
          else
            (f = e.nodeName),
              !f ||
                "input" !== f.toLowerCase() ||
                ("checkbox" !== e.type && "radio" !== e.type) ||
                (g = Uc);
          if (g && (g = g(a, b))) return Dc(g, c, d);
          k && k(a, e, b);
          "topBlur" === a &&
            null != b &&
            (a = b._wrapperState || e._wrapperState) &&
            a.controlled &&
            "number" === e.type &&
            ((a = "" + e.value),
            e.getAttribute("value") !== a && e.setAttribute("value", a));
        }
      };
      function Xc(a, b, c, d) {
        return S.call(this, a, b, c, d);
      }
      S.augmentClass(Xc, { view: null, detail: null });
      var Yc = {
        Alt: "altKey",
        Control: "ctrlKey",
        Meta: "metaKey",
        Shift: "shiftKey"
      };
      function Zc(a) {
        var b = this.nativeEvent;
        return b.getModifierState
          ? b.getModifierState(a)
          : (a = Yc[a]) ? !!b[a] : !1;
      }
      function $c() {
        return Zc;
      }
      function ad(a, b, c, d) {
        return S.call(this, a, b, c, d);
      }
      Xc.augmentClass(ad, {
        screenX: null,
        screenY: null,
        clientX: null,
        clientY: null,
        pageX: null,
        pageY: null,
        ctrlKey: null,
        shiftKey: null,
        altKey: null,
        metaKey: null,
        getModifierState: $c,
        button: null,
        buttons: null,
        relatedTarget: function(a) {
          return (
            a.relatedTarget ||
            (a.fromElement === a.srcElement ? a.toElement : a.fromElement)
          );
        }
      });
      var bd = {
          mouseEnter: {
            registrationName: "onMouseEnter",
            dependencies: ["topMouseOut", "topMouseOver"]
          },
          mouseLeave: {
            registrationName: "onMouseLeave",
            dependencies: ["topMouseOut", "topMouseOver"]
          }
        },
        cd = {
          eventTypes: bd,
          extractEvents: function(a, b, c, d) {
            if (
              ("topMouseOver" === a && (c.relatedTarget || c.fromElement)) ||
              ("topMouseOut" !== a && "topMouseOver" !== a)
            )
              return null;
            var e =
              d.window === d
                ? d
                : (e = d.ownerDocument)
                  ? e.defaultView || e.parentWindow
                  : window;
            "topMouseOut" === a
              ? ((a = b),
                (b = (b = c.relatedTarget || c.toElement) ? pb(b) : null))
              : (a = null);
            if (a === b) return null;
            var f = null == a ? e : qb(a);
            e = null == b ? e : qb(b);
            var g = ad.getPooled(bd.mouseLeave, a, c, d);
            g.type = "mouseleave";
            g.target = f;
            g.relatedTarget = e;
            c = ad.getPooled(bd.mouseEnter, b, c, d);
            c.type = "mouseenter";
            c.target = e;
            c.relatedTarget = f;
            Ab(g, c, a, b);
            return [g, c];
          }
        },
        dd =
          aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
            .ReactCurrentOwner;
      function ed(a) {
        a = a.type;
        return "string" === typeof a
          ? a
          : "function" === typeof a ? a.displayName || a.name : null;
      }
      function fd(a) {
        var b = a;
        if (a.alternate) for (; b["return"]; ) b = b["return"];
        else {
          if (0 !== (b.effectTag & 2)) return 1;
          for (; b["return"]; )
            if (((b = b["return"]), 0 !== (b.effectTag & 2))) return 1;
        }
        return 3 === b.tag ? 2 : 3;
      }
      function gd(a) {
        return (a = a._reactInternalFiber) ? 2 === fd(a) : !1;
      }
      function hd(a) {
        2 !== fd(a) ? D("188") : void 0;
      }
      function id(a) {
        var b = a.alternate;
        if (!b)
          return (b = fd(a)), 3 === b ? D("188") : void 0, 1 === b ? null : a;
        for (var c = a, d = b; ; ) {
          var e = c["return"],
            f = e ? e.alternate : null;
          if (!e || !f) break;
          if (e.child === f.child) {
            for (var g = e.child; g; ) {
              if (g === c) return hd(e), a;
              if (g === d) return hd(e), b;
              g = g.sibling;
            }
            D("188");
          }
          if (c["return"] !== d["return"]) (c = e), (d = f);
          else {
            g = !1;
            for (var k = e.child; k; ) {
              if (k === c) {
                g = !0;
                c = e;
                d = f;
                break;
              }
              if (k === d) {
                g = !0;
                d = e;
                c = f;
                break;
              }
              k = k.sibling;
            }
            if (!g) {
              for (k = f.child; k; ) {
                if (k === c) {
                  g = !0;
                  c = f;
                  d = e;
                  break;
                }
                if (k === d) {
                  g = !0;
                  d = f;
                  c = e;
                  break;
                }
                k = k.sibling;
              }
              g ? void 0 : D("189");
            }
          }
          c.alternate !== d ? D("190") : void 0;
        }
        3 !== c.tag ? D("188") : void 0;
        return c.stateNode.current === c ? a : b;
      }
      function jd(a) {
        a = id(a);
        if (!a) return null;
        for (var b = a; ; ) {
          if (5 === b.tag || 6 === b.tag) return b;
          if (b.child) (b.child["return"] = b), (b = b.child);
          else {
            if (b === a) break;
            for (; !b.sibling; ) {
              if (!b["return"] || b["return"] === a) return null;
              b = b["return"];
            }
            b.sibling["return"] = b["return"];
            b = b.sibling;
          }
        }
        return null;
      }
      function kd(a) {
        a = id(a);
        if (!a) return null;
        for (var b = a; ; ) {
          if (5 === b.tag || 6 === b.tag) return b;
          if (b.child && 4 !== b.tag) (b.child["return"] = b), (b = b.child);
          else {
            if (b === a) break;
            for (; !b.sibling; ) {
              if (!b["return"] || b["return"] === a) return null;
              b = b["return"];
            }
            b.sibling["return"] = b["return"];
            b = b.sibling;
          }
        }
        return null;
      }
      var ld = [];
      function md(a) {
        var b = a.targetInst;
        do {
          if (!b) {
            a.ancestors.push(b);
            break;
          }
          var c;
          for (c = b; c["return"]; ) c = c["return"];
          c = 3 !== c.tag ? null : c.stateNode.containerInfo;
          if (!c) break;
          a.ancestors.push(b);
          b = pb(c);
        } while (b);
        for (c = 0; c < a.ancestors.length; c++)
          (b = a.ancestors[c]),
            nd(a.topLevelType, b, a.nativeEvent, vc(a.nativeEvent));
      }
      var od = !0,
        nd = void 0;
      function pd(a) {
        od = !!a;
      }
      function U(a, b, c) {
        return c ? ca.listen(c, b, qd.bind(null, a)) : null;
      }
      function rd(a, b, c) {
        return c ? ca.capture(c, b, qd.bind(null, a)) : null;
      }
      function qd(a, b) {
        if (od) {
          var c = vc(b);
          c = pb(c);
          null === c || "number" !== typeof c.tag || 2 === fd(c) || (c = null);
          if (ld.length) {
            var d = ld.pop();
            d.topLevelType = a;
            d.nativeEvent = b;
            d.targetInst = c;
            a = d;
          } else
            a = {
              topLevelType: a,
              nativeEvent: b,
              targetInst: c,
              ancestors: []
            };
          try {
            sc(md, a);
          } finally {
            (a.topLevelType = null),
              (a.nativeEvent = null),
              (a.targetInst = null),
              (a.ancestors.length = 0),
              10 > ld.length && ld.push(a);
          }
        }
      }
      var sd = Object.freeze({
        get _enabled() {
          return od;
        },
        get _handleTopLevel() {
          return nd;
        },
        setHandleTopLevel: function(a) {
          nd = a;
        },
        setEnabled: pd,
        isEnabled: function() {
          return od;
        },
        trapBubbledEvent: U,
        trapCapturedEvent: rd,
        dispatchEvent: qd
      });
      function td(a, b) {
        var c = {};
        c[a.toLowerCase()] = b.toLowerCase();
        c["Webkit" + a] = "webkit" + b;
        c["Moz" + a] = "moz" + b;
        c["ms" + a] = "MS" + b;
        c["O" + a] = "o" + b.toLowerCase();
        return c;
      }
      var ud = {
          animationend: td("Animation", "AnimationEnd"),
          animationiteration: td("Animation", "AnimationIteration"),
          animationstart: td("Animation", "AnimationStart"),
          transitionend: td("Transition", "TransitionEnd")
        },
        vd = {},
        wd = {};
      m.canUseDOM &&
        ((wd = document.createElement("div").style),
        "AnimationEvent" in window ||
          (delete ud.animationend.animation,
          delete ud.animationiteration.animation,
          delete ud.animationstart.animation),
        "TransitionEvent" in window || delete ud.transitionend.transition);
      function xd(a) {
        if (vd[a]) return vd[a];
        if (!ud[a]) return a;
        var b = ud[a],
          c;
        for (c in b) if (b.hasOwnProperty(c) && c in wd) return (vd[a] = b[c]);
        return "";
      }
      var yd = {
          topAbort: "abort",
          topAnimationEnd: xd("animationend") || "animationend",
          topAnimationIteration:
            xd("animationiteration") || "animationiteration",
          topAnimationStart: xd("animationstart") || "animationstart",
          topBlur: "blur",
          topCancel: "cancel",
          topCanPlay: "canplay",
          topCanPlayThrough: "canplaythrough",
          topChange: "change",
          topClick: "click",
          topClose: "close",
          topCompositionEnd: "compositionend",
          topCompositionStart: "compositionstart",
          topCompositionUpdate: "compositionupdate",
          topContextMenu: "contextmenu",
          topCopy: "copy",
          topCut: "cut",
          topDoubleClick: "dblclick",
          topDrag: "drag",
          topDragEnd: "dragend",
          topDragEnter: "dragenter",
          topDragExit: "dragexit",
          topDragLeave: "dragleave",
          topDragOver: "dragover",
          topDragStart: "dragstart",
          topDrop: "drop",
          topDurationChange: "durationchange",
          topEmptied: "emptied",
          topEncrypted: "encrypted",
          topEnded: "ended",
          topError: "error",
          topFocus: "focus",
          topInput: "input",
          topKeyDown: "keydown",
          topKeyPress: "keypress",
          topKeyUp: "keyup",
          topLoadedData: "loadeddata",
          topLoad: "load",
          topLoadedMetadata: "loadedmetadata",
          topLoadStart: "loadstart",
          topMouseDown: "mousedown",
          topMouseMove: "mousemove",
          topMouseOut: "mouseout",
          topMouseOver: "mouseover",
          topMouseUp: "mouseup",
          topPaste: "paste",
          topPause: "pause",
          topPlay: "play",
          topPlaying: "playing",
          topProgress: "progress",
          topRateChange: "ratechange",
          topScroll: "scroll",
          topSeeked: "seeked",
          topSeeking: "seeking",
          topSelectionChange: "selectionchange",
          topStalled: "stalled",
          topSuspend: "suspend",
          topTextInput: "textInput",
          topTimeUpdate: "timeupdate",
          topToggle: "toggle",
          topTouchCancel: "touchcancel",
          topTouchEnd: "touchend",
          topTouchMove: "touchmove",
          topTouchStart: "touchstart",
          topTransitionEnd: xd("transitionend") || "transitionend",
          topVolumeChange: "volumechange",
          topWaiting: "waiting",
          topWheel: "wheel"
        },
        zd = {},
        Ad = 0,
        Bd = "_reactListenersID" + ("" + Math.random()).slice(2);
      function Cd(a) {
        Object.prototype.hasOwnProperty.call(a, Bd) ||
          ((a[Bd] = Ad++), (zd[a[Bd]] = {}));
        return zd[a[Bd]];
      }
      function Dd(a) {
        for (; a && a.firstChild; ) a = a.firstChild;
        return a;
      }
      function Ed(a, b) {
        var c = Dd(a);
        a = 0;
        for (var d; c; ) {
          if (3 === c.nodeType) {
            d = a + c.textContent.length;
            if (a <= b && d >= b) return { node: c, offset: b - a };
            a = d;
          }
          a: {
            for (; c; ) {
              if (c.nextSibling) {
                c = c.nextSibling;
                break a;
              }
              c = c.parentNode;
            }
            c = void 0;
          }
          c = Dd(c);
        }
      }
      function Fd(a) {
        var b = a && a.nodeName && a.nodeName.toLowerCase();
        return (
          b &&
          (("input" === b && "text" === a.type) ||
            "textarea" === b ||
            "true" === a.contentEditable)
        );
      }
      var Gd =
          m.canUseDOM &&
          "documentMode" in document &&
          11 >= document.documentMode,
        Hd = {
          select: {
            phasedRegistrationNames: {
              bubbled: "onSelect",
              captured: "onSelectCapture"
            },
            dependencies: "topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange".split(
              " "
            )
          }
        },
        Id = null,
        Jd = null,
        Kd = null,
        Ld = !1;
      function Md(a, b) {
        if (Ld || null == Id || Id !== da()) return null;
        var c = Id;
        "selectionStart" in c && Fd(c)
          ? (c = { start: c.selectionStart, end: c.selectionEnd })
          : window.getSelection
            ? ((c = window.getSelection()),
              (c = {
                anchorNode: c.anchorNode,
                anchorOffset: c.anchorOffset,
                focusNode: c.focusNode,
                focusOffset: c.focusOffset
              }))
            : (c = void 0);
        return Kd && ea(Kd, c)
          ? null
          : ((Kd = c),
            (a = S.getPooled(Hd.select, Jd, a, b)),
            (a.type = "select"),
            (a.target = Id),
            zb(a),
            a);
      }
      var Nd = {
        eventTypes: Hd,
        extractEvents: function(a, b, c, d) {
          var e =
              d.window === d
                ? d.document
                : 9 === d.nodeType ? d : d.ownerDocument,
            f;
          if (!(f = !e)) {
            a: {
              e = Cd(e);
              f = Qa.onSelect;
              for (var g = 0; g < f.length; g++) {
                var k = f[g];
                if (!e.hasOwnProperty(k) || !e[k]) {
                  e = !1;
                  break a;
                }
              }
              e = !0;
            }
            f = !e;
          }
          if (f) return null;
          e = b ? qb(b) : window;
          switch (a) {
            case "topFocus":
              if (uc(e) || "true" === e.contentEditable)
                (Id = e), (Jd = b), (Kd = null);
              break;
            case "topBlur":
              Kd = Jd = Id = null;
              break;
            case "topMouseDown":
              Ld = !0;
              break;
            case "topContextMenu":
            case "topMouseUp":
              return (Ld = !1), Md(c, d);
            case "topSelectionChange":
              if (Gd) break;
            case "topKeyDown":
            case "topKeyUp":
              return Md(c, d);
          }
          return null;
        }
      };
      function Od(a, b, c, d) {
        return S.call(this, a, b, c, d);
      }
      S.augmentClass(Od, {
        animationName: null,
        elapsedTime: null,
        pseudoElement: null
      });
      function Pd(a, b, c, d) {
        return S.call(this, a, b, c, d);
      }
      S.augmentClass(Pd, {
        clipboardData: function(a) {
          return "clipboardData" in a ? a.clipboardData : window.clipboardData;
        }
      });
      function Qd(a, b, c, d) {
        return S.call(this, a, b, c, d);
      }
      Xc.augmentClass(Qd, { relatedTarget: null });
      function Rd(a) {
        var b = a.keyCode;
        "charCode" in a
          ? ((a = a.charCode), 0 === a && 13 === b && (a = 13))
          : (a = b);
        return 32 <= a || 13 === a ? a : 0;
      }
      var Sd = {
          Esc: "Escape",
          Spacebar: " ",
          Left: "ArrowLeft",
          Up: "ArrowUp",
          Right: "ArrowRight",
          Down: "ArrowDown",
          Del: "Delete",
          Win: "OS",
          Menu: "ContextMenu",
          Apps: "ContextMenu",
          Scroll: "ScrollLock",
          MozPrintableKey: "Unidentified"
        },
        Td = {
          8: "Backspace",
          9: "Tab",
          12: "Clear",
          13: "Enter",
          16: "Shift",
          17: "Control",
          18: "Alt",
          19: "Pause",
          20: "CapsLock",
          27: "Escape",
          32: " ",
          33: "PageUp",
          34: "PageDown",
          35: "End",
          36: "Home",
          37: "ArrowLeft",
          38: "ArrowUp",
          39: "ArrowRight",
          40: "ArrowDown",
          45: "Insert",
          46: "Delete",
          112: "F1",
          113: "F2",
          114: "F3",
          115: "F4",
          116: "F5",
          117: "F6",
          118: "F7",
          119: "F8",
          120: "F9",
          121: "F10",
          122: "F11",
          123: "F12",
          144: "NumLock",
          145: "ScrollLock",
          224: "Meta"
        };
      function Ud(a, b, c, d) {
        return S.call(this, a, b, c, d);
      }
      Xc.augmentClass(Ud, {
        key: function(a) {
          if (a.key) {
            var b = Sd[a.key] || a.key;
            if ("Unidentified" !== b) return b;
          }
          return "keypress" === a.type
            ? ((a = Rd(a)), 13 === a ? "Enter" : String.fromCharCode(a))
            : "keydown" === a.type || "keyup" === a.type
              ? Td[a.keyCode] || "Unidentified"
              : "";
        },
        location: null,
        ctrlKey: null,
        shiftKey: null,
        altKey: null,
        metaKey: null,
        repeat: null,
        locale: null,
        getModifierState: $c,
        charCode: function(a) {
          return "keypress" === a.type ? Rd(a) : 0;
        },
        keyCode: function(a) {
          return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
        },
        which: function(a) {
          return "keypress" === a.type
            ? Rd(a)
            : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
        }
      });
      function Vd(a, b, c, d) {
        return S.call(this, a, b, c, d);
      }
      ad.augmentClass(Vd, { dataTransfer: null });
      function Wd(a, b, c, d) {
        return S.call(this, a, b, c, d);
      }
      Xc.augmentClass(Wd, {
        touches: null,
        targetTouches: null,
        changedTouches: null,
        altKey: null,
        metaKey: null,
        ctrlKey: null,
        shiftKey: null,
        getModifierState: $c
      });
      function Xd(a, b, c, d) {
        return S.call(this, a, b, c, d);
      }
      S.augmentClass(Xd, {
        propertyName: null,
        elapsedTime: null,
        pseudoElement: null
      });
      function Yd(a, b, c, d) {
        return S.call(this, a, b, c, d);
      }
      ad.augmentClass(Yd, {
        deltaX: function(a) {
          return "deltaX" in a
            ? a.deltaX
            : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
        },
        deltaY: function(a) {
          return "deltaY" in a
            ? a.deltaY
            : "wheelDeltaY" in a
              ? -a.wheelDeltaY
              : "wheelDelta" in a ? -a.wheelDelta : 0;
        },
        deltaZ: null,
        deltaMode: null
      });
      var Zd = {},
        $d = {};
      "abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel"
        .split(" ")
        .forEach(function(a) {
          var b = a[0].toUpperCase() + a.slice(1),
            c = "on" + b;
          b = "top" + b;
          c = {
            phasedRegistrationNames: { bubbled: c, captured: c + "Capture" },
            dependencies: [b]
          };
          Zd[a] = c;
          $d[b] = c;
        });
      var ae = {
        eventTypes: Zd,
        extractEvents: function(a, b, c, d) {
          var e = $d[a];
          if (!e) return null;
          switch (a) {
            case "topKeyPress":
              if (0 === Rd(c)) return null;
            case "topKeyDown":
            case "topKeyUp":
              a = Ud;
              break;
            case "topBlur":
            case "topFocus":
              a = Qd;
              break;
            case "topClick":
              if (2 === c.button) return null;
            case "topDoubleClick":
            case "topMouseDown":
            case "topMouseMove":
            case "topMouseUp":
            case "topMouseOut":
            case "topMouseOver":
            case "topContextMenu":
              a = ad;
              break;
            case "topDrag":
            case "topDragEnd":
            case "topDragEnter":
            case "topDragExit":
            case "topDragLeave":
            case "topDragOver":
            case "topDragStart":
            case "topDrop":
              a = Vd;
              break;
            case "topTouchCancel":
            case "topTouchEnd":
            case "topTouchMove":
            case "topTouchStart":
              a = Wd;
              break;
            case "topAnimationEnd":
            case "topAnimationIteration":
            case "topAnimationStart":
              a = Od;
              break;
            case "topTransitionEnd":
              a = Xd;
              break;
            case "topScroll":
              a = Xc;
              break;
            case "topWheel":
              a = Yd;
              break;
            case "topCopy":
            case "topCut":
            case "topPaste":
              a = Pd;
              break;
            default:
              a = S;
          }
          b = a.getPooled(e, b, c, d);
          zb(b);
          return b;
        }
      };
      nd = function(a, b, c, d) {
        a = jb(a, b, c, d);
        kb(a);
        lb(!1);
      };
      db.injectEventPluginOrder(
        "ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(
          " "
        )
      );
      Ua = sb.getFiberCurrentPropsFromNode;
      Va = sb.getInstanceFromNode;
      Wa = sb.getNodeFromInstance;
      db.injectEventPluginsByName({
        SimpleEventPlugin: ae,
        EnterLeaveEventPlugin: cd,
        ChangeEventPlugin: Wc,
        SelectEventPlugin: Nd,
        BeforeInputEventPlugin: hc
      });
      var be = [],
        ce = -1;
      function V(a) {
        0 > ce || ((a.current = be[ce]), (be[ce] = null), ce--);
      }
      function W(a, b) {
        ce++;
        be[ce] = a.current;
        a.current = b;
      }
      new Set();
      var de = { current: C },
        X = { current: !1 },
        ee = C;
      function fe(a) {
        return ge(a) ? ee : de.current;
      }
      function he(a, b) {
        var c = a.type.contextTypes;
        if (!c) return C;
        var d = a.stateNode;
        if (d && d.__reactInternalMemoizedUnmaskedChildContext === b)
          return d.__reactInternalMemoizedMaskedChildContext;
        var e = {},
          f;
        for (f in c) e[f] = b[f];
        d &&
          ((a = a.stateNode),
          (a.__reactInternalMemoizedUnmaskedChildContext = b),
          (a.__reactInternalMemoizedMaskedChildContext = e));
        return e;
      }
      function ge(a) {
        return 2 === a.tag && null != a.type.childContextTypes;
      }
      function ie(a) {
        ge(a) && (V(X, a), V(de, a));
      }
      function je(a, b, c) {
        null != de.cursor ? D("168") : void 0;
        W(de, b, a);
        W(X, c, a);
      }
      function ke(a, b) {
        var c = a.stateNode,
          d = a.type.childContextTypes;
        if ("function" !== typeof c.getChildContext) return b;
        c = c.getChildContext();
        for (var e in c) e in d ? void 0 : D("108", ed(a) || "Unknown", e);
        return A({}, b, c);
      }
      function le(a) {
        if (!ge(a)) return !1;
        var b = a.stateNode;
        b = (b && b.__reactInternalMemoizedMergedChildContext) || C;
        ee = de.current;
        W(de, b, a);
        W(X, X.current, a);
        return !0;
      }
      function me(a, b) {
        var c = a.stateNode;
        c ? void 0 : D("169");
        if (b) {
          var d = ke(a, ee);
          c.__reactInternalMemoizedMergedChildContext = d;
          V(X, a);
          V(de, a);
          W(de, d, a);
        } else V(X, a);
        W(X, b, a);
      }
      function Y(a, b, c) {
        this.tag = a;
        this.key = b;
        this.stateNode = this.type = null;
        this.sibling = this.child = this["return"] = null;
        this.index = 0;
        this.memoizedState = this.updateQueue = this.memoizedProps = this.pendingProps = this.ref = null;
        this.internalContextTag = c;
        this.effectTag = 0;
        this.lastEffect = this.firstEffect = this.nextEffect = null;
        this.expirationTime = 0;
        this.alternate = null;
      }
      function ne(a, b, c) {
        var d = a.alternate;
        null === d
          ? ((d = new Y(a.tag, a.key, a.internalContextTag)),
            (d.type = a.type),
            (d.stateNode = a.stateNode),
            (d.alternate = a),
            (a.alternate = d))
          : ((d.effectTag = 0),
            (d.nextEffect = null),
            (d.firstEffect = null),
            (d.lastEffect = null));
        d.expirationTime = c;
        d.pendingProps = b;
        d.child = a.child;
        d.memoizedProps = a.memoizedProps;
        d.memoizedState = a.memoizedState;
        d.updateQueue = a.updateQueue;
        d.sibling = a.sibling;
        d.index = a.index;
        d.ref = a.ref;
        return d;
      }
      function oe(a, b, c) {
        var d = void 0,
          e = a.type,
          f = a.key;
        "function" === typeof e
          ? ((d =
              e.prototype && e.prototype.isReactComponent
                ? new Y(2, f, b)
                : new Y(0, f, b)),
            (d.type = e),
            (d.pendingProps = a.props))
          : "string" === typeof e
            ? ((d = new Y(5, f, b)), (d.type = e), (d.pendingProps = a.props))
            : "object" === typeof e && null !== e && "number" === typeof e.tag
              ? ((d = e), (d.pendingProps = a.props))
              : D("130", null == e ? e : typeof e, "");
        d.expirationTime = c;
        return d;
      }
      function pe(a, b, c, d) {
        b = new Y(10, d, b);
        b.pendingProps = a;
        b.expirationTime = c;
        return b;
      }
      function qe(a, b, c) {
        b = new Y(6, null, b);
        b.pendingProps = a;
        b.expirationTime = c;
        return b;
      }
      function re(a, b, c) {
        b = new Y(7, a.key, b);
        b.type = a.handler;
        b.pendingProps = a;
        b.expirationTime = c;
        return b;
      }
      function se(a, b, c) {
        a = new Y(9, null, b);
        a.expirationTime = c;
        return a;
      }
      function te(a, b, c) {
        b = new Y(4, a.key, b);
        b.pendingProps = a.children || [];
        b.expirationTime = c;
        b.stateNode = {
          containerInfo: a.containerInfo,
          pendingChildren: null,
          implementation: a.implementation
        };
        return b;
      }
      var ue = null,
        ve = null;
      function we(a) {
        return function(b) {
          try {
            return a(b);
          } catch (c) {}
        };
      }
      function xe(a) {
        if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
        var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (b.isDisabled || !b.supportsFiber) return !0;
        try {
          var c = b.inject(a);
          ue = we(function(a) {
            return b.onCommitFiberRoot(c, a);
          });
          ve = we(function(a) {
            return b.onCommitFiberUnmount(c, a);
          });
        } catch (d) {}
        return !0;
      }
      function ye(a) {
        "function" === typeof ue && ue(a);
      }
      function ze(a) {
        "function" === typeof ve && ve(a);
      }
      function Ae(a) {
        return {
          baseState: a,
          expirationTime: 0,
          first: null,
          last: null,
          callbackList: null,
          hasForceUpdate: !1,
          isInitialized: !1
        };
      }
      function Be(a, b) {
        null === a.last
          ? (a.first = a.last = b)
          : ((a.last.next = b), (a.last = b));
        if (0 === a.expirationTime || a.expirationTime > b.expirationTime)
          a.expirationTime = b.expirationTime;
      }
      function Ce(a, b) {
        var c = a.alternate,
          d = a.updateQueue;
        null === d && (d = a.updateQueue = Ae(null));
        null !== c
          ? ((a = c.updateQueue), null === a && (a = c.updateQueue = Ae(null)))
          : (a = null);
        a = a !== d ? a : null;
        null === a
          ? Be(d, b)
          : null === d.last || null === a.last
            ? (Be(d, b), Be(a, b))
            : (Be(d, b), (a.last = b));
      }
      function De(a, b, c, d) {
        a = a.partialState;
        return "function" === typeof a ? a.call(b, c, d) : a;
      }
      function Ke(a, b, c, d, e, f) {
        null !== a &&
          a.updateQueue === c &&
          (c = b.updateQueue = {
            baseState: c.baseState,
            expirationTime: c.expirationTime,
            first: c.first,
            last: c.last,
            isInitialized: c.isInitialized,
            callbackList: null,
            hasForceUpdate: !1
          });
        c.expirationTime = 0;
        c.isInitialized
          ? (a = c.baseState)
          : ((a = c.baseState = b.memoizedState), (c.isInitialized = !0));
        for (var g = !0, k = c.first, h = !1; null !== k; ) {
          var r = k.expirationTime;
          if (r > f) {
            var n = c.expirationTime;
            if (0 === n || n > r) c.expirationTime = r;
            h || ((h = !0), (c.baseState = a));
          } else {
            h || ((c.first = k.next), null === c.first && (c.last = null));
            if (k.isReplace) (a = De(k, d, a, e)), (g = !0);
            else if ((r = De(k, d, a, e)))
              (a = g ? A({}, a, r) : A(a, r)), (g = !1);
            k.isForced && (c.hasForceUpdate = !0);
            null !== k.callback &&
              ((r = c.callbackList),
              null === r && (r = c.callbackList = []),
              r.push(k));
          }
          k = k.next;
        }
        null !== c.callbackList
          ? (b.effectTag |= 32)
          : null !== c.first || c.hasForceUpdate || (b.updateQueue = null);
        h || (c.baseState = a);
        return a;
      }
      function Le(a, b) {
        var c = a.callbackList;
        if (null !== c)
          for (a.callbackList = null, a = 0; a < c.length; a++) {
            var d = c[a],
              e = d.callback;
            d.callback = null;
            "function" !== typeof e ? D("191", e) : void 0;
            e.call(b);
          }
      }
      function Me(a, b, c, d) {
        function e(a, b) {
          b.updater = f;
          a.stateNode = b;
          b._reactInternalFiber = a;
        }
        var f = {
          isMounted: gd,
          enqueueSetState: function(c, d, e) {
            c = c._reactInternalFiber;
            e = void 0 === e ? null : e;
            var g = b(c);
            Ce(c, {
              expirationTime: g,
              partialState: d,
              callback: e,
              isReplace: !1,
              isForced: !1,
              nextCallback: null,
              next: null
            });
            a(c, g);
          },
          enqueueReplaceState: function(c, d, e) {
            c = c._reactInternalFiber;
            e = void 0 === e ? null : e;
            var f = b(c);
            Ce(c, {
              expirationTime: f,
              partialState: d,
              callback: e,
              isReplace: !0,
              isForced: !1,
              nextCallback: null,
              next: null
            });
            a(c, f);
          },
          enqueueForceUpdate: function(c, d) {
            c = c._reactInternalFiber;
            d = void 0 === d ? null : d;
            var e = b(c);
            Ce(c, {
              expirationTime: e,
              partialState: null,
              callback: d,
              isReplace: !1,
              isForced: !0,
              nextCallback: null,
              next: null
            });
            a(c, e);
          }
        };
        return {
          adoptClassInstance: e,
          constructClassInstance: function(a, b) {
            var c = a.type,
              d = fe(a),
              f = 2 === a.tag && null != a.type.contextTypes,
              g = f ? he(a, d) : C;
            b = new c(b, g);
            e(a, b);
            f &&
              ((a = a.stateNode),
              (a.__reactInternalMemoizedUnmaskedChildContext = d),
              (a.__reactInternalMemoizedMaskedChildContext = g));
            return b;
          },
          mountClassInstance: function(a, b) {
            var c = a.alternate,
              d = a.stateNode,
              e = d.state || null,
              g = a.pendingProps;
            g ? void 0 : D("158");
            var k = fe(a);
            d.props = g;
            d.state = a.memoizedState = e;
            d.refs = C;
            d.context = he(a, k);
            null != a.type &&
              null != a.type.prototype &&
              !0 === a.type.prototype.unstable_isAsyncReactComponent &&
              (a.internalContextTag |= 1);
            "function" === typeof d.componentWillMount &&
              ((e = d.state),
              d.componentWillMount(),
              e !== d.state && f.enqueueReplaceState(d, d.state, null),
              (e = a.updateQueue),
              null !== e && (d.state = Ke(c, a, e, d, g, b)));
            "function" === typeof d.componentDidMount && (a.effectTag |= 4);
          },
          updateClassInstance: function(a, b, e) {
            var g = b.stateNode;
            g.props = b.memoizedProps;
            g.state = b.memoizedState;
            var k = b.memoizedProps,
              h = b.pendingProps;
            h || ((h = k), null == h ? D("159") : void 0);
            var u = g.context,
              x = fe(b);
            x = he(b, x);
            "function" !== typeof g.componentWillReceiveProps ||
              (k === h && u === x) ||
              ((u = g.state),
              g.componentWillReceiveProps(h, x),
              g.state !== u && f.enqueueReplaceState(g, g.state, null));
            u = b.memoizedState;
            e = null !== b.updateQueue ? Ke(a, b, b.updateQueue, g, h, e) : u;
            if (
              !(
                k !== h ||
                u !== e ||
                X.current ||
                (null !== b.updateQueue && b.updateQueue.hasForceUpdate)
              )
            )
              return (
                "function" !== typeof g.componentDidUpdate ||
                  (k === a.memoizedProps && u === a.memoizedState) ||
                  (b.effectTag |= 4),
                !1
              );
            var F = h;
            if (
              null === k ||
              (null !== b.updateQueue && b.updateQueue.hasForceUpdate)
            )
              F = !0;
            else {
              var L = b.stateNode,
                G = b.type;
              F =
                "function" === typeof L.shouldComponentUpdate
                  ? L.shouldComponentUpdate(F, e, x)
                  : G.prototype && G.prototype.isPureReactComponent
                    ? !ea(k, F) || !ea(u, e)
                    : !0;
            }
            F
              ? ("function" === typeof g.componentWillUpdate &&
                  g.componentWillUpdate(h, e, x),
                "function" === typeof g.componentDidUpdate &&
                  (b.effectTag |= 4))
              : ("function" !== typeof g.componentDidUpdate ||
                  (k === a.memoizedProps && u === a.memoizedState) ||
                  (b.effectTag |= 4),
                c(b, h),
                d(b, e));
            g.props = h;
            g.state = e;
            g.context = x;
            return F;
          }
        };
      }
      var Ne =
        ("function" === typeof Symbol &&
          Symbol["for"] &&
          Symbol["for"]("react.portal")) ||
        60106;
      function Oe(a, b, c) {
        var d =
          3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
        return {
          $$typeof: Ne,
          key: null == d ? null : "" + d,
          children: a,
          containerInfo: b,
          implementation: c
        };
      }
      var Pe = Array.isArray,
        Qe = "function" === typeof Symbol && Symbol.iterator,
        Re,
        Se,
        Te,
        Ue;
      "function" === typeof Symbol && Symbol["for"]
        ? ((Re = Symbol["for"]("react.element")),
          (Se = Symbol["for"]("react.call")),
          (Te = Symbol["for"]("react.return")),
          (Ue = Symbol["for"]("react.fragment")))
        : ((Re = 60103), (Se = 60104), (Te = 60105), (Ue = 60107));
      function Ve(a) {
        if (null === a || "undefined" === typeof a) return null;
        a = (Qe && a[Qe]) || a["@@iterator"];
        return "function" === typeof a ? a : null;
      }
      function We(a, b) {
        var c = b.ref;
        if (null !== c && "function" !== typeof c) {
          if (b._owner) {
            b = b._owner;
            var d = void 0;
            b && (2 !== b.tag ? D("110") : void 0, (d = b.stateNode));
            d ? void 0 : D("147", c);
            var e = "" + c;
            if (null !== a && null !== a.ref && a.ref._stringRef === e)
              return a.ref;
            a = function(a) {
              var b = d.refs === C ? (d.refs = {}) : d.refs;
              null === a ? delete b[e] : (b[e] = a);
            };
            a._stringRef = e;
            return a;
          }
          "string" !== typeof c ? D("148") : void 0;
          b._owner ? void 0 : D("149", c);
        }
        return c;
      }
      function Xe(a, b) {
        "textarea" !== a.type &&
          D(
            "31",
            "[object Object]" === Object.prototype.toString.call(b)
              ? "object with keys {" + Object.keys(b).join(", ") + "}"
              : b,
            ""
          );
      }
      function Ye(a, b) {
        function c(c, d) {
          if (b) {
            if (!a) {
              if (null === d.alternate) return;
              d = d.alternate;
            }
            var p = c.lastEffect;
            null !== p
              ? ((p.nextEffect = d), (c.lastEffect = d))
              : (c.firstEffect = c.lastEffect = d);
            d.nextEffect = null;
            d.effectTag = 8;
          }
        }
        function d(a, d) {
          if (!b) return null;
          for (; null !== d; ) c(a, d), (d = d.sibling);
          return null;
        }
        function e(a, b) {
          for (a = new Map(); null !== b; )
            null !== b.key ? a.set(b.key, b) : a.set(b.index, b),
              (b = b.sibling);
          return a;
        }
        function f(b, c, d) {
          if (a) return (b = ne(b, c, d)), (b.index = 0), (b.sibling = null), b;
          b.expirationTime = d;
          b.effectTag = 0;
          b.index = 0;
          b.sibling = null;
          b.pendingProps = c;
          return b;
        }
        function g(a, c, d) {
          a.index = d;
          if (!b) return c;
          d = a.alternate;
          if (null !== d)
            return (d = d.index), d < c ? ((a.effectTag = 2), c) : d;
          a.effectTag = 2;
          return c;
        }
        function k(a) {
          b && null === a.alternate && (a.effectTag = 2);
          return a;
        }
        function h(a, b, c, d) {
          if (null === b || 6 !== b.tag)
            return (b = qe(c, a.internalContextTag, d)), (b["return"] = a), b;
          b = f(b, c, d);
          b["return"] = a;
          return b;
        }
        function r(a, b, c, d) {
          if (null !== b && b.type === c.type)
            return (
              (d = f(b, c.props, d)), (d.ref = We(b, c)), (d["return"] = a), d
            );
          d = oe(c, a.internalContextTag, d);
          d.ref = We(b, c);
          d["return"] = a;
          return d;
        }
        function n(a, b, c, d) {
          if (null === b || 7 !== b.tag)
            return (b = re(c, a.internalContextTag, d)), (b["return"] = a), b;
          b = f(b, c, d);
          b["return"] = a;
          return b;
        }
        function y(a, b, c, d) {
          if (null === b || 9 !== b.tag)
            return (
              (b = se(c, a.internalContextTag, d)),
              (b.type = c.value),
              (b["return"] = a),
              b
            );
          b = f(b, null, d);
          b.type = c.value;
          b["return"] = a;
          return b;
        }
        function u(a, b, c, d) {
          if (
            null === b ||
            4 !== b.tag ||
            b.stateNode.containerInfo !== c.containerInfo ||
            b.stateNode.implementation !== c.implementation
          )
            return (b = te(c, a.internalContextTag, d)), (b["return"] = a), b;
          b = f(b, c.children || [], d);
          b["return"] = a;
          return b;
        }
        function x(a, b, c, d, e) {
          if (null === b || 10 !== b.tag)
            return (
              (b = pe(c, a.internalContextTag, d, e)), (b["return"] = a), b
            );
          b = f(b, c, d);
          b["return"] = a;
          return b;
        }
        function F(a, b, c) {
          if ("string" === typeof b || "number" === typeof b)
            return (
              (b = qe("" + b, a.internalContextTag, c)), (b["return"] = a), b
            );
          if ("object" === typeof b && null !== b) {
            switch (b.$$typeof) {
              case Re:
                if (b.type === Ue)
                  return (
                    (b = pe(b.props.children, a.internalContextTag, c, b.key)),
                    (b["return"] = a),
                    b
                  );
                c = oe(b, a.internalContextTag, c);
                c.ref = We(null, b);
                c["return"] = a;
                return c;
              case Se:
                return (
                  (b = re(b, a.internalContextTag, c)), (b["return"] = a), b
                );
              case Te:
                return (
                  (c = se(b, a.internalContextTag, c)),
                  (c.type = b.value),
                  (c["return"] = a),
                  c
                );
              case Ne:
                return (
                  (b = te(b, a.internalContextTag, c)), (b["return"] = a), b
                );
            }
            if (Pe(b) || Ve(b))
              return (
                (b = pe(b, a.internalContextTag, c, null)), (b["return"] = a), b
              );
            Xe(a, b);
          }
          return null;
        }
        function L(a, b, c, d) {
          var e = null !== b ? b.key : null;
          if ("string" === typeof c || "number" === typeof c)
            return null !== e ? null : h(a, b, "" + c, d);
          if ("object" === typeof c && null !== c) {
            switch (c.$$typeof) {
              case Re:
                return c.key === e
                  ? c.type === Ue
                    ? x(a, b, c.props.children, d, e)
                    : r(a, b, c, d)
                  : null;
              case Se:
                return c.key === e ? n(a, b, c, d) : null;
              case Te:
                return null === e ? y(a, b, c, d) : null;
              case Ne:
                return c.key === e ? u(a, b, c, d) : null;
            }
            if (Pe(c) || Ve(c)) return null !== e ? null : x(a, b, c, d, null);
            Xe(a, c);
          }
          return null;
        }
        function G(a, b, c, d, e) {
          if ("string" === typeof d || "number" === typeof d)
            return (a = a.get(c) || null), h(b, a, "" + d, e);
          if ("object" === typeof d && null !== d) {
            switch (d.$$typeof) {
              case Re:
                return (
                  (a = a.get(null === d.key ? c : d.key) || null),
                  d.type === Ue
                    ? x(b, a, d.props.children, e, d.key)
                    : r(b, a, d, e)
                );
              case Se:
                return (
                  (a = a.get(null === d.key ? c : d.key) || null), n(b, a, d, e)
                );
              case Te:
                return (a = a.get(c) || null), y(b, a, d, e);
              case Ne:
                return (
                  (a = a.get(null === d.key ? c : d.key) || null), u(b, a, d, e)
                );
            }
            if (Pe(d) || Ve(d))
              return (a = a.get(c) || null), x(b, a, d, e, null);
            Xe(b, d);
          }
          return null;
        }
        function T(a, f, v, k) {
          for (
            var p = null, z = null, l = f, h = (f = 0), t = null;
            null !== l && h < v.length;
            h++
          ) {
            l.index > h ? ((t = l), (l = null)) : (t = l.sibling);
            var w = L(a, l, v[h], k);
            if (null === w) {
              null === l && (l = t);
              break;
            }
            b && l && null === w.alternate && c(a, l);
            f = g(w, f, h);
            null === z ? (p = w) : (z.sibling = w);
            z = w;
            l = t;
          }
          if (h === v.length) return d(a, l), p;
          if (null === l) {
            for (; h < v.length; h++)
              if ((l = F(a, v[h], k)))
                (f = g(l, f, h)),
                  null === z ? (p = l) : (z.sibling = l),
                  (z = l);
            return p;
          }
          for (l = e(a, l); h < v.length; h++)
            if ((t = G(l, a, h, v[h], k))) {
              if (b && null !== t.alternate)
                l["delete"](null === t.key ? h : t.key);
              f = g(t, f, h);
              null === z ? (p = t) : (z.sibling = t);
              z = t;
            }
          b &&
            l.forEach(function(b) {
              return c(a, b);
            });
          return p;
        }
        function I(a, f, v, k) {
          var p = Ve(v);
          "function" !== typeof p ? D("150") : void 0;
          v = p.call(v);
          null == v ? D("151") : void 0;
          for (
            var h = (p = null), l = f, z = (f = 0), t = null, w = v.next();
            null !== l && !w.done;
            z++, w = v.next()
          ) {
            l.index > z ? ((t = l), (l = null)) : (t = l.sibling);
            var n = L(a, l, w.value, k);
            if (null === n) {
              l || (l = t);
              break;
            }
            b && l && null === n.alternate && c(a, l);
            f = g(n, f, z);
            null === h ? (p = n) : (h.sibling = n);
            h = n;
            l = t;
          }
          if (w.done) return d(a, l), p;
          if (null === l) {
            for (; !w.done; z++, w = v.next())
              (w = F(a, w.value, k)),
                null !== w &&
                  ((f = g(w, f, z)),
                  null === h ? (p = w) : (h.sibling = w),
                  (h = w));
            return p;
          }
          for (l = e(a, l); !w.done; z++, w = v.next())
            if (((w = G(l, a, z, w.value, k)), null !== w)) {
              if (b && null !== w.alternate)
                l["delete"](null === w.key ? z : w.key);
              f = g(w, f, z);
              null === h ? (p = w) : (h.sibling = w);
              h = w;
            }
          b &&
            l.forEach(function(b) {
              return c(a, b);
            });
          return p;
        }
        return function(a, b, e, g) {
          var h = "object" === typeof e && null !== e;
          if (h)
            switch (e.$$typeof) {
              case Re:
                a: {
                  var v = e.key;
                  for (h = b; null !== h; ) {
                    if (h.key === v)
                      if (10 === h.tag ? e.type === Ue : h.type === e.type) {
                        d(a, h.sibling);
                        b = f(h, e.type === Ue ? e.props.children : e.props, g);
                        b.ref = We(h, e);
                        b["return"] = a;
                        a = b;
                        break a;
                      } else {
                        d(a, h);
                        break;
                      }
                    else c(a, h);
                    h = h.sibling;
                  }
                  e.type === Ue
                    ? ((e = pe(
                        e.props.children,
                        a.internalContextTag,
                        g,
                        e.key
                      )),
                      (e["return"] = a),
                      (a = e))
                    : ((g = oe(e, a.internalContextTag, g)),
                      (g.ref = We(b, e)),
                      (g["return"] = a),
                      (a = g));
                }
                return k(a);
              case Se:
                a: {
                  for (h = e.key; null !== b; ) {
                    if (b.key === h)
                      if (7 === b.tag) {
                        d(a, b.sibling);
                        e = f(b, e, g);
                        e["return"] = a;
                        a = e;
                        break a;
                      } else {
                        d(a, b);
                        break;
                      }
                    else c(a, b);
                    b = b.sibling;
                  }
                  e = re(e, a.internalContextTag, g);
                  e["return"] = a;
                  a = e;
                }
                return k(a);
              case Te:
                a: {
                  if (null !== b)
                    if (9 === b.tag) {
                      d(a, b.sibling);
                      b = f(b, null, g);
                      b.type = e.value;
                      b["return"] = a;
                      a = b;
                      break a;
                    } else d(a, b);
                  b = se(e, a.internalContextTag, g);
                  b.type = e.value;
                  b["return"] = a;
                  a = b;
                }
                return k(a);
              case Ne:
                a: {
                  for (h = e.key; null !== b; ) {
                    if (b.key === h)
                      if (
                        4 === b.tag &&
                        b.stateNode.containerInfo === e.containerInfo &&
                        b.stateNode.implementation === e.implementation
                      ) {
                        d(a, b.sibling);
                        e = f(b, e.children || [], g);
                        e["return"] = a;
                        a = e;
                        break a;
                      } else {
                        d(a, b);
                        break;
                      }
                    else c(a, b);
                    b = b.sibling;
                  }
                  e = te(e, a.internalContextTag, g);
                  e["return"] = a;
                  a = e;
                }
                return k(a);
            }
          if ("string" === typeof e || "number" === typeof e)
            return (
              (e = "" + e),
              null !== b && 6 === b.tag
                ? (d(a, b.sibling), (e = f(b, e, g)))
                : (d(a, b), (e = qe(e, a.internalContextTag, g))),
              (e["return"] = a),
              (a = e),
              k(a)
            );
          if (Pe(e)) return T(a, b, e, g);
          if (Ve(e)) return I(a, b, e, g);
          h && Xe(a, e);
          if ("undefined" === typeof e)
            switch (a.tag) {
              case 2:
              case 1:
                (e = a.type), D("152", e.displayName || e.name || "Component");
            }
          return d(a, b);
        };
      }
      var Ze = Ye(!0, !0),
        $e = Ye(!1, !0),
        af = Ye(!1, !1);
      function bf(a, b, c, d, e) {
        function f(a, b, c) {
          g(a, b, c, b.expirationTime);
        }
        function g(a, b, c, d) {
          b.child =
            null === a
              ? af(b, b.child, c, d)
              : a.child === b.child
                ? Ze(b, b.child, c, d)
                : $e(b, b.child, c, d);
        }
        function k(a, b) {
          var c = b.ref;
          null === c || (a && a.ref === c) || (b.effectTag |= 128);
        }
        function h(a, b, c, d) {
          k(a, b);
          if (!c) return d && me(b, !1), n(a, b);
          c = b.stateNode;
          dd.current = b;
          var e = c.render();
          b.effectTag |= 1;
          f(a, b, e);
          b.memoizedState = c.state;
          b.memoizedProps = c.props;
          d && me(b, !0);
          return b.child;
        }
        function r(a) {
          var b = a.stateNode;
          b.pendingContext
            ? je(a, b.pendingContext, b.pendingContext !== b.context)
            : b.context && je(a, b.context, !1);
          G(a, b.containerInfo);
        }
        function n(a, b) {
          null !== a && b.child !== a.child ? D("153") : void 0;
          if (null !== b.child) {
            a = b.child;
            var c = ne(a, a.pendingProps, a.expirationTime);
            b.child = c;
            for (c["return"] = b; null !== a.sibling; )
              (a = a.sibling),
                (c = c.sibling = ne(a, a.pendingProps, a.expirationTime)),
                (c["return"] = b);
            c.sibling = null;
          }
          return b.child;
        }
        function y(a, b) {
          switch (b.tag) {
            case 3:
              r(b);
              break;
            case 2:
              le(b);
              break;
            case 4:
              G(b, b.stateNode.containerInfo);
          }
          return null;
        }
        var u = a.shouldSetTextContent,
          x = a.useSyncScheduling,
          F = a.shouldDeprioritizeSubtree,
          L = b.pushHostContext,
          G = b.pushHostContainer,
          T = c.enterHydrationState,
          I = c.resetHydrationState,
          z = c.tryToClaimNextHydratableInstance;
        a = Me(
          d,
          e,
          function(a, b) {
            a.memoizedProps = b;
          },
          function(a, b) {
            a.memoizedState = b;
          }
        );
        var p = a.adoptClassInstance,
          v = a.constructClassInstance,
          t = a.mountClassInstance,
          Kb = a.updateClassInstance;
        return {
          beginWork: function(a, b, c) {
            if (0 === b.expirationTime || b.expirationTime > c) return y(a, b);
            switch (b.tag) {
              case 0:
                null !== a ? D("155") : void 0;
                var d = b.type,
                  e = b.pendingProps,
                  g = fe(b);
                g = he(b, g);
                d = d(e, g);
                b.effectTag |= 1;
                "object" === typeof d &&
                null !== d &&
                "function" === typeof d.render
                  ? ((b.tag = 2),
                    (e = le(b)),
                    p(b, d),
                    t(b, c),
                    (b = h(a, b, !0, e)))
                  : ((b.tag = 1),
                    f(a, b, d),
                    (b.memoizedProps = e),
                    (b = b.child));
                return b;
              case 1:
                a: {
                  e = b.type;
                  c = b.pendingProps;
                  d = b.memoizedProps;
                  if (X.current) null === c && (c = d);
                  else if (null === c || d === c) {
                    b = n(a, b);
                    break a;
                  }
                  d = fe(b);
                  d = he(b, d);
                  e = e(c, d);
                  b.effectTag |= 1;
                  f(a, b, e);
                  b.memoizedProps = c;
                  b = b.child;
                }
                return b;
              case 2:
                return (
                  (e = le(b)),
                  (d = void 0),
                  null === a
                    ? b.stateNode
                      ? D("153")
                      : (v(b, b.pendingProps), t(b, c), (d = !0))
                    : (d = Kb(a, b, c)),
                  h(a, b, d, e)
                );
              case 3:
                return (
                  r(b),
                  (e = b.updateQueue),
                  null !== e
                    ? ((d = b.memoizedState),
                      (e = Ke(a, b, e, null, null, c)),
                      d === e
                        ? (I(), (b = n(a, b)))
                        : ((d = e.element),
                          (g = b.stateNode),
                          (null === a || null === a.child) && g.hydrate && T(b)
                            ? ((b.effectTag |= 2),
                              (b.child = af(b, b.child, d, c)))
                            : (I(), f(a, b, d)),
                          (b.memoizedState = e),
                          (b = b.child)))
                    : (I(), (b = n(a, b))),
                  b
                );
              case 5:
                L(b);
                null === a && z(b);
                e = b.type;
                var l = b.memoizedProps;
                d = b.pendingProps;
                null === d && ((d = l), null === d ? D("154") : void 0);
                g = null !== a ? a.memoizedProps : null;
                X.current || (null !== d && l !== d)
                  ? ((l = d.children),
                    u(e, d) ? (l = null) : g && u(e, g) && (b.effectTag |= 16),
                    k(a, b),
                    2147483647 !== c && !x && F(e, d)
                      ? ((b.expirationTime = 2147483647), (b = null))
                      : (f(a, b, l), (b.memoizedProps = d), (b = b.child)))
                  : (b = n(a, b));
                return b;
              case 6:
                return (
                  null === a && z(b),
                  (a = b.pendingProps),
                  null === a && (a = b.memoizedProps),
                  (b.memoizedProps = a),
                  null
                );
              case 8:
                b.tag = 7;
              case 7:
                e = b.pendingProps;
                if (X.current)
                  null === e &&
                    ((e = a && a.memoizedProps),
                    null === e ? D("154") : void 0);
                else if (null === e || b.memoizedProps === e)
                  e = b.memoizedProps;
                d = e.children;
                b.stateNode =
                  null === a
                    ? af(b, b.stateNode, d, c)
                    : a.child === b.child
                      ? Ze(b, b.stateNode, d, c)
                      : $e(b, b.stateNode, d, c);
                b.memoizedProps = e;
                return b.stateNode;
              case 9:
                return null;
              case 4:
                a: {
                  G(b, b.stateNode.containerInfo);
                  e = b.pendingProps;
                  if (X.current)
                    null === e &&
                      ((e = a && a.memoizedProps),
                      null == e ? D("154") : void 0);
                  else if (null === e || b.memoizedProps === e) {
                    b = n(a, b);
                    break a;
                  }
                  null === a ? (b.child = $e(b, b.child, e, c)) : f(a, b, e);
                  b.memoizedProps = e;
                  b = b.child;
                }
                return b;
              case 10:
                a: {
                  c = b.pendingProps;
                  if (X.current) null === c && (c = b.memoizedProps);
                  else if (null === c || b.memoizedProps === c) {
                    b = n(a, b);
                    break a;
                  }
                  f(a, b, c);
                  b.memoizedProps = c;
                  b = b.child;
                }
                return b;
              default:
                D("156");
            }
          },
          beginFailedWork: function(a, b, c) {
            switch (b.tag) {
              case 2:
                le(b);
                break;
              case 3:
                r(b);
                break;
              default:
                D("157");
            }
            b.effectTag |= 64;
            null === a
              ? (b.child = null)
              : b.child !== a.child && (b.child = a.child);
            if (0 === b.expirationTime || b.expirationTime > c) return y(a, b);
            b.firstEffect = null;
            b.lastEffect = null;
            g(a, b, null, c);
            2 === b.tag &&
              ((a = b.stateNode),
              (b.memoizedProps = a.props),
              (b.memoizedState = a.state));
            return b.child;
          }
        };
      }
      function cf(a, b, c) {
        function d(a) {
          a.effectTag |= 4;
        }
        var e = a.createInstance,
          f = a.createTextInstance,
          g = a.appendInitialChild,
          k = a.finalizeInitialChildren,
          h = a.prepareUpdate,
          r = a.persistence,
          n = b.getRootHostContainer,
          y = b.popHostContext,
          u = b.getHostContext,
          x = b.popHostContainer,
          F = c.prepareToHydrateHostInstance,
          L = c.prepareToHydrateHostTextInstance,
          G = c.popHydrationState,
          T = void 0,
          I = void 0,
          z = void 0;
        a.mutation
          ? ((T = function() {}),
            (I = function(a, b, c) {
              (b.updateQueue = c) && d(b);
            }),
            (z = function(a, b, c, e) {
              c !== e && d(b);
            }))
          : r ? D("235") : D("236");
        return {
          completeWork: function(a, b, c) {
            var p = b.pendingProps;
            if (null === p) p = b.memoizedProps;
            else if (2147483647 !== b.expirationTime || 2147483647 === c)
              b.pendingProps = null;
            switch (b.tag) {
              case 1:
                return null;
              case 2:
                return ie(b), null;
              case 3:
                x(b);
                V(X, b);
                V(de, b);
                p = b.stateNode;
                p.pendingContext &&
                  ((p.context = p.pendingContext), (p.pendingContext = null));
                if (null === a || null === a.child) G(b), (b.effectTag &= -3);
                T(b);
                return null;
              case 5:
                y(b);
                c = n();
                var v = b.type;
                if (null !== a && null != b.stateNode) {
                  var l = a.memoizedProps,
                    t = b.stateNode,
                    r = u();
                  t = h(t, v, l, p, c, r);
                  I(a, b, t, v, l, p, c);
                  a.ref !== b.ref && (b.effectTag |= 128);
                } else {
                  if (!p) return null === b.stateNode ? D("166") : void 0, null;
                  a = u();
                  if (G(b)) F(b, c, a) && d(b);
                  else {
                    a = e(v, p, c, a, b);
                    a: for (l = b.child; null !== l; ) {
                      if (5 === l.tag || 6 === l.tag) g(a, l.stateNode);
                      else if (4 !== l.tag && null !== l.child) {
                        l.child["return"] = l;
                        l = l.child;
                        continue;
                      }
                      if (l === b) break;
                      for (; null === l.sibling; ) {
                        if (null === l["return"] || l["return"] === b) break a;
                        l = l["return"];
                      }
                      l.sibling["return"] = l["return"];
                      l = l.sibling;
                    }
                    k(a, v, p, c) && d(b);
                    b.stateNode = a;
                  }
                  null !== b.ref && (b.effectTag |= 128);
                }
                return null;
              case 6:
                if (a && null != b.stateNode) z(a, b, a.memoizedProps, p);
                else {
                  if ("string" !== typeof p)
                    return null === b.stateNode ? D("166") : void 0, null;
                  a = n();
                  c = u();
                  G(b) ? L(b) && d(b) : (b.stateNode = f(p, a, c, b));
                }
                return null;
              case 7:
                (p = b.memoizedProps) ? void 0 : D("165");
                b.tag = 8;
                v = [];
                a: for ((l = b.stateNode) && (l["return"] = b); null !== l; ) {
                  if (5 === l.tag || 6 === l.tag || 4 === l.tag) D("247");
                  else if (9 === l.tag) v.push(l.type);
                  else if (null !== l.child) {
                    l.child["return"] = l;
                    l = l.child;
                    continue;
                  }
                  for (; null === l.sibling; ) {
                    if (null === l["return"] || l["return"] === b) break a;
                    l = l["return"];
                  }
                  l.sibling["return"] = l["return"];
                  l = l.sibling;
                }
                l = p.handler;
                p = l(p.props, v);
                b.child = Ze(b, null !== a ? a.child : null, p, c);
                return b.child;
              case 8:
                return (b.tag = 7), null;
              case 9:
                return null;
              case 10:
                return null;
              case 4:
                return x(b), T(b), null;
              case 0:
                D("167");
              default:
                D("156");
            }
          }
        };
      }
      function df(a, b) {
        function c(a) {
          var c = a.ref;
          if (null !== c)
            try {
              c(null);
            } catch (v) {
              b(a, v);
            }
        }
        function d(a) {
          "function" === typeof ze && ze(a);
          switch (a.tag) {
            case 2:
              c(a);
              var d = a.stateNode;
              if ("function" === typeof d.componentWillUnmount)
                try {
                  (d.props = a.memoizedProps),
                    (d.state = a.memoizedState),
                    d.componentWillUnmount();
                } catch (v) {
                  b(a, v);
                }
              break;
            case 5:
              c(a);
              break;
            case 7:
              e(a.stateNode);
              break;
            case 4:
              h && g(a);
          }
        }
        function e(a) {
          for (var b = a; ; )
            if ((d(b), null === b.child || (h && 4 === b.tag))) {
              if (b === a) break;
              for (; null === b.sibling; ) {
                if (null === b["return"] || b["return"] === a) return;
                b = b["return"];
              }
              b.sibling["return"] = b["return"];
              b = b.sibling;
            } else (b.child["return"] = b), (b = b.child);
        }
        function f(a) {
          return 5 === a.tag || 3 === a.tag || 4 === a.tag;
        }
        function g(a) {
          for (var b = a, c = !1, f = void 0, g = void 0; ; ) {
            if (!c) {
              c = b["return"];
              a: for (;;) {
                null === c ? D("160") : void 0;
                switch (c.tag) {
                  case 5:
                    f = c.stateNode;
                    g = !1;
                    break a;
                  case 3:
                    f = c.stateNode.containerInfo;
                    g = !0;
                    break a;
                  case 4:
                    f = c.stateNode.containerInfo;
                    g = !0;
                    break a;
                }
                c = c["return"];
              }
              c = !0;
            }
            if (5 === b.tag || 6 === b.tag)
              e(b), g ? I(f, b.stateNode) : T(f, b.stateNode);
            else if (
              (4 === b.tag ? (f = b.stateNode.containerInfo) : d(b),
              null !== b.child)
            ) {
              b.child["return"] = b;
              b = b.child;
              continue;
            }
            if (b === a) break;
            for (; null === b.sibling; ) {
              if (null === b["return"] || b["return"] === a) return;
              b = b["return"];
              4 === b.tag && (c = !1);
            }
            b.sibling["return"] = b["return"];
            b = b.sibling;
          }
        }
        var k = a.getPublicInstance,
          h = a.mutation;
        a = a.persistence;
        h || (a ? D("235") : D("236"));
        var r = h.commitMount,
          n = h.commitUpdate,
          y = h.resetTextContent,
          u = h.commitTextUpdate,
          x = h.appendChild,
          F = h.appendChildToContainer,
          L = h.insertBefore,
          G = h.insertInContainerBefore,
          T = h.removeChild,
          I = h.removeChildFromContainer;
        return {
          commitResetTextContent: function(a) {
            y(a.stateNode);
          },
          commitPlacement: function(a) {
            a: {
              for (var b = a["return"]; null !== b; ) {
                if (f(b)) {
                  var c = b;
                  break a;
                }
                b = b["return"];
              }
              D("160");
              c = void 0;
            }
            var d = (b = void 0);
            switch (c.tag) {
              case 5:
                b = c.stateNode;
                d = !1;
                break;
              case 3:
                b = c.stateNode.containerInfo;
                d = !0;
                break;
              case 4:
                b = c.stateNode.containerInfo;
                d = !0;
                break;
              default:
                D("161");
            }
            c.effectTag & 16 && (y(b), (c.effectTag &= -17));
            a: b: for (c = a; ; ) {
              for (; null === c.sibling; ) {
                if (null === c["return"] || f(c["return"])) {
                  c = null;
                  break a;
                }
                c = c["return"];
              }
              c.sibling["return"] = c["return"];
              for (c = c.sibling; 5 !== c.tag && 6 !== c.tag; ) {
                if (c.effectTag & 2) continue b;
                if (null === c.child || 4 === c.tag) continue b;
                else (c.child["return"] = c), (c = c.child);
              }
              if (!(c.effectTag & 2)) {
                c = c.stateNode;
                break a;
              }
            }
            for (var e = a; ; ) {
              if (5 === e.tag || 6 === e.tag)
                c
                  ? d ? G(b, e.stateNode, c) : L(b, e.stateNode, c)
                  : d ? F(b, e.stateNode) : x(b, e.stateNode);
              else if (4 !== e.tag && null !== e.child) {
                e.child["return"] = e;
                e = e.child;
                continue;
              }
              if (e === a) break;
              for (; null === e.sibling; ) {
                if (null === e["return"] || e["return"] === a) return;
                e = e["return"];
              }
              e.sibling["return"] = e["return"];
              e = e.sibling;
            }
          },
          commitDeletion: function(a) {
            g(a);
            a["return"] = null;
            a.child = null;
            a.alternate &&
              ((a.alternate.child = null), (a.alternate["return"] = null));
          },
          commitWork: function(a, b) {
            switch (b.tag) {
              case 2:
                break;
              case 5:
                var c = b.stateNode;
                if (null != c) {
                  var d = b.memoizedProps;
                  a = null !== a ? a.memoizedProps : d;
                  var e = b.type,
                    f = b.updateQueue;
                  b.updateQueue = null;
                  null !== f && n(c, f, e, a, d, b);
                }
                break;
              case 6:
                null === b.stateNode ? D("162") : void 0;
                c = b.memoizedProps;
                u(b.stateNode, null !== a ? a.memoizedProps : c, c);
                break;
              case 3:
                break;
              default:
                D("163");
            }
          },
          commitLifeCycles: function(a, b) {
            switch (b.tag) {
              case 2:
                var c = b.stateNode;
                if (b.effectTag & 4)
                  if (null === a)
                    (c.props = b.memoizedProps),
                      (c.state = b.memoizedState),
                      c.componentDidMount();
                  else {
                    var d = a.memoizedProps;
                    a = a.memoizedState;
                    c.props = b.memoizedProps;
                    c.state = b.memoizedState;
                    c.componentDidUpdate(d, a);
                  }
                b = b.updateQueue;
                null !== b && Le(b, c);
                break;
              case 3:
                c = b.updateQueue;
                null !== c &&
                  Le(c, null !== b.child ? b.child.stateNode : null);
                break;
              case 5:
                c = b.stateNode;
                null === a &&
                  b.effectTag & 4 &&
                  r(c, b.type, b.memoizedProps, b);
                break;
              case 6:
                break;
              case 4:
                break;
              default:
                D("163");
            }
          },
          commitAttachRef: function(a) {
            var b = a.ref;
            if (null !== b) {
              var c = a.stateNode;
              switch (a.tag) {
                case 5:
                  b(k(c));
                  break;
                default:
                  b(c);
              }
            }
          },
          commitDetachRef: function(a) {
            a = a.ref;
            null !== a && a(null);
          }
        };
      }
      var ef = {};
      function ff(a) {
        function b(a) {
          a === ef ? D("174") : void 0;
          return a;
        }
        var c = a.getChildHostContext,
          d = a.getRootHostContext,
          e = { current: ef },
          f = { current: ef },
          g = { current: ef };
        return {
          getHostContext: function() {
            return b(e.current);
          },
          getRootHostContainer: function() {
            return b(g.current);
          },
          popHostContainer: function(a) {
            V(e, a);
            V(f, a);
            V(g, a);
          },
          popHostContext: function(a) {
            f.current === a && (V(e, a), V(f, a));
          },
          pushHostContainer: function(a, b) {
            W(g, b, a);
            b = d(b);
            W(f, a, a);
            W(e, b, a);
          },
          pushHostContext: function(a) {
            var d = b(g.current),
              k = b(e.current);
            d = c(k, a.type, d);
            k !== d && (W(f, a, a), W(e, d, a));
          },
          resetHostContainer: function() {
            e.current = ef;
            g.current = ef;
          }
        };
      }
      function gf(a) {
        function b(a, b) {
          var c = new Y(5, null, 0);
          c.type = "DELETED";
          c.stateNode = b;
          c["return"] = a;
          c.effectTag = 8;
          null !== a.lastEffect
            ? ((a.lastEffect.nextEffect = c), (a.lastEffect = c))
            : (a.firstEffect = a.lastEffect = c);
        }
        function c(a, b) {
          switch (a.tag) {
            case 5:
              return f(b, a.type, a.pendingProps);
            case 6:
              return g(b, a.pendingProps);
            default:
              return !1;
          }
        }
        function d(a) {
          for (a = a["return"]; null !== a && 5 !== a.tag && 3 !== a.tag; )
            a = a["return"];
          y = a;
        }
        var e = a.shouldSetTextContent;
        a = a.hydration;
        if (!a)
          return {
            enterHydrationState: function() {
              return !1;
            },
            resetHydrationState: function() {},
            tryToClaimNextHydratableInstance: function() {},
            prepareToHydrateHostInstance: function() {
              D("175");
            },
            prepareToHydrateHostTextInstance: function() {
              D("176");
            },
            popHydrationState: function() {
              return !1;
            }
          };
        var f = a.canHydrateInstance,
          g = a.canHydrateTextInstance,
          k = a.getNextHydratableSibling,
          h = a.getFirstHydratableChild,
          r = a.hydrateInstance,
          n = a.hydrateTextInstance,
          y = null,
          u = null,
          x = !1;
        return {
          enterHydrationState: function(a) {
            u = h(a.stateNode.containerInfo);
            y = a;
            return (x = !0);
          },
          resetHydrationState: function() {
            u = y = null;
            x = !1;
          },
          tryToClaimNextHydratableInstance: function(a) {
            if (x) {
              var d = u;
              if (d) {
                if (!c(a, d)) {
                  d = k(d);
                  if (!d || !c(a, d)) {
                    a.effectTag |= 2;
                    x = !1;
                    y = a;
                    return;
                  }
                  b(y, u);
                }
                a.stateNode = d;
                y = a;
                u = h(d);
              } else (a.effectTag |= 2), (x = !1), (y = a);
            }
          },
          prepareToHydrateHostInstance: function(a, b, c) {
            b = r(a.stateNode, a.type, a.memoizedProps, b, c, a);
            a.updateQueue = b;
            return null !== b ? !0 : !1;
          },
          prepareToHydrateHostTextInstance: function(a) {
            return n(a.stateNode, a.memoizedProps, a);
          },
          popHydrationState: function(a) {
            if (a !== y) return !1;
            if (!x) return d(a), (x = !0), !1;
            var c = a.type;
            if (
              5 !== a.tag ||
              ("head" !== c && "body" !== c && !e(c, a.memoizedProps))
            )
              for (c = u; c; ) b(a, c), (c = k(c));
            d(a);
            u = y ? k(a.stateNode) : null;
            return !0;
          }
        };
      }
      function hf(a) {
        function b(a) {
          Lb = ma = !0;
          var b = a.stateNode;
          b.current === a ? D("177") : void 0;
          b.isReadyForCommit = !1;
          dd.current = null;
          if (1 < a.effectTag)
            if (null !== a.lastEffect) {
              a.lastEffect.nextEffect = a;
              var c = a.firstEffect;
            } else c = a;
          else c = a.firstEffect;
          ug();
          for (q = c; null !== q; ) {
            var d = !1,
              e = void 0;
            try {
              for (; null !== q; ) {
                var f = q.effectTag;
                f & 16 && vg(q);
                if (f & 128) {
                  var g = q.alternate;
                  null !== g && wg(g);
                }
                switch (f & -242) {
                  case 2:
                    Ge(q);
                    q.effectTag &= -3;
                    break;
                  case 6:
                    Ge(q);
                    q.effectTag &= -3;
                    He(q.alternate, q);
                    break;
                  case 4:
                    He(q.alternate, q);
                    break;
                  case 8:
                    (Lc = !0), xg(q), (Lc = !1);
                }
                q = q.nextEffect;
              }
            } catch (Mc) {
              (d = !0), (e = Mc);
            }
            d &&
              (null === q ? D("178") : void 0,
              k(q, e),
              null !== q && (q = q.nextEffect));
          }
          yg();
          b.current = a;
          for (q = c; null !== q; ) {
            c = !1;
            d = void 0;
            try {
              for (; null !== q; ) {
                var h = q.effectTag;
                h & 36 && zg(q.alternate, q);
                h & 128 && Ag(q);
                if (h & 64)
                  switch (((e = q),
                  (f = void 0),
                  null !== P &&
                    ((f = P.get(e)),
                    P["delete"](e),
                    null == f &&
                      null !== e.alternate &&
                      ((e = e.alternate), (f = P.get(e)), P["delete"](e))),
                  null == f ? D("184") : void 0,
                  e.tag)) {
                    case 2:
                      e.stateNode.componentDidCatch(f.error, {
                        componentStack: f.componentStack
                      });
                      break;
                    case 3:
                      null === ba && (ba = f.error);
                      break;
                    default:
                      D("157");
                  }
                var Fa = q.nextEffect;
                q.nextEffect = null;
                q = Fa;
              }
            } catch (Mc) {
              (c = !0), (d = Mc);
            }
            c &&
              (null === q ? D("178") : void 0,
              k(q, d),
              null !== q && (q = q.nextEffect));
          }
          ma = Lb = !1;
          "function" === typeof ye && ye(a.stateNode);
          fa && (fa.forEach(F), (fa = null));
          null !== ba && ((a = ba), (ba = null), v(a));
          b = b.current.expirationTime;
          0 === b && (na = P = null);
          return b;
        }
        function c(a) {
          for (;;) {
            var b = ng(a.alternate, a, J),
              c = a["return"],
              d = a.sibling;
            var e = a;
            if (2147483647 === J || 2147483647 !== e.expirationTime) {
              if (2 !== e.tag && 3 !== e.tag) var f = 0;
              else (f = e.updateQueue), (f = null === f ? 0 : f.expirationTime);
              for (var g = e.child; null !== g; )
                0 !== g.expirationTime &&
                  (0 === f || f > g.expirationTime) &&
                  (f = g.expirationTime),
                  (g = g.sibling);
              e.expirationTime = f;
            }
            if (null !== b) return b;
            null !== c &&
              (null === c.firstEffect && (c.firstEffect = a.firstEffect),
              null !== a.lastEffect &&
                (null !== c.lastEffect &&
                  (c.lastEffect.nextEffect = a.firstEffect),
                (c.lastEffect = a.lastEffect)),
              1 < a.effectTag &&
                (null !== c.lastEffect
                  ? (c.lastEffect.nextEffect = a)
                  : (c.firstEffect = a),
                (c.lastEffect = a)));
            if (null !== d) return d;
            if (null !== c) a = c;
            else {
              a.stateNode.isReadyForCommit = !0;
              break;
            }
          }
          return null;
        }
        function d(a) {
          var b = w(a.alternate, a, J);
          null === b && (b = c(a));
          dd.current = null;
          return b;
        }
        function e(a) {
          var b = mg(a.alternate, a, J);
          null === b && (b = c(a));
          dd.current = null;
          return b;
        }
        function f(a) {
          if (null !== P) {
            if (!(0 === J || J > a))
              if (J <= Nc) for (; null !== E; ) E = h(E) ? e(E) : d(E);
              else for (; null !== E && !p(); ) E = h(E) ? e(E) : d(E);
          } else if (!(0 === J || J > a))
            if (J <= Nc) for (; null !== E; ) E = d(E);
            else for (; null !== E && !p(); ) E = d(E);
        }
        function g(a, b) {
          ma ? D("243") : void 0;
          ma = !0;
          a.isReadyForCommit = !1;
          if (a !== fb || b !== J || null === E) {
            for (; -1 < ce; ) (be[ce] = null), ce--;
            ee = C;
            de.current = C;
            X.current = !1;
            lg();
            fb = a;
            J = b;
            E = ne(fb.current, null, b);
          }
          var c = !1,
            d = null;
          try {
            f(b);
          } catch (Kc) {
            (c = !0), (d = Kc);
          }
          for (; c; ) {
            if (gb) {
              ba = d;
              break;
            }
            var g = E;
            if (null === g) gb = !0;
            else {
              var h = k(g, d);
              null === h ? D("183") : void 0;
              if (!gb) {
                try {
                  c = h;
                  d = b;
                  for (h = c; null !== g; ) {
                    switch (g.tag) {
                      case 2:
                        ie(g);
                        break;
                      case 5:
                        l(g);
                        break;
                      case 3:
                        Ee(g);
                        break;
                      case 4:
                        Ee(g);
                    }
                    if (g === h || g.alternate === h) break;
                    g = g["return"];
                  }
                  E = e(c);
                  f(d);
                } catch (Kc) {
                  c = !0;
                  d = Kc;
                  continue;
                }
                break;
              }
            }
          }
          b = ba;
          gb = ma = !1;
          ba = null;
          null !== b && v(b);
          return a.isReadyForCommit ? a.current.alternate : null;
        }
        function k(a, b) {
          var c = (dd.current = null),
            d = !1,
            e = !1,
            f = null;
          if (3 === a.tag) (c = a), r(a) && (gb = !0);
          else
            for (var g = a["return"]; null !== g && null === c; ) {
              2 === g.tag
                ? "function" === typeof g.stateNode.componentDidCatch &&
                  ((d = !0), (f = ed(g)), (c = g), (e = !0))
                : 3 === g.tag && (c = g);
              if (r(g)) {
                if (
                  Lc ||
                  (null !== fa &&
                    (fa.has(g) ||
                      (null !== g.alternate && fa.has(g.alternate))))
                )
                  return null;
                c = null;
                e = !1;
              }
              g = g["return"];
            }
          if (null !== c) {
            null === na && (na = new Set());
            na.add(c);
            var h = "";
            g = a;
            do {
              a: switch (g.tag) {
                case 0:
                case 1:
                case 2:
                case 5:
                  var k = g._debugOwner,
                    l = g._debugSource;
                  var Fa = ed(g);
                  var n = null;
                  k && (n = ed(k));
                  k = l;
                  Fa =
                    "\n    in " +
                    (Fa || "Unknown") +
                    (k
                      ? " (at " +
                        k.fileName.replace(/^.*[\\\/]/, "") +
                        ":" +
                        k.lineNumber +
                        ")"
                      : n ? " (created by " + n + ")" : "");
                  break a;
                default:
                  Fa = "";
              }
              h += Fa;
              g = g["return"];
            } while (g);
            g = h;
            a = ed(a);
            null === P && (P = new Map());
            b = {
              componentName: a,
              componentStack: g,
              error: b,
              errorBoundary: d ? c.stateNode : null,
              errorBoundaryFound: d,
              errorBoundaryName: f,
              willRetry: e
            };
            P.set(c, b);
            try {
              console.error(b.error);
            } catch (Bg) {
              console.error(Bg);
            }
            Lb ? (null === fa && (fa = new Set()), fa.add(c)) : F(c);
            return c;
          }
          null === ba && (ba = b);
          return null;
        }
        function h(a) {
          return (
            null !== P &&
            (P.has(a) || (null !== a.alternate && P.has(a.alternate)))
          );
        }
        function r(a) {
          return (
            null !== na &&
            (na.has(a) || (null !== a.alternate && na.has(a.alternate)))
          );
        }
        function n() {
          return 20 * ((((L() + 100) / 20) | 0) + 1);
        }
        function y(a) {
          return 0 !== ja
            ? ja
            : ma ? (Lb ? 1 : J) : !Cg || a.internalContextTag & 1 ? n() : 1;
        }
        function u(a, b) {
          return x(a, b, !1);
        }
        function x(a, b) {
          for (; null !== a; ) {
            if (0 === a.expirationTime || a.expirationTime > b)
              a.expirationTime = b;
            null !== a.alternate &&
              (0 === a.alternate.expirationTime ||
                a.alternate.expirationTime > b) &&
              (a.alternate.expirationTime = b);
            if (null === a["return"])
              if (3 === a.tag) {
                var c = a.stateNode;
                !ma && c === fb && b <= J && ((E = fb = null), (J = 0));
                var d = b;
                Mb > Dg && D("185");
                if (null === c.nextScheduledRoot)
                  (c.remainingExpirationTime = d),
                    null === M
                      ? ((oa = M = c), (c.nextScheduledRoot = c))
                      : ((M = M.nextScheduledRoot = c),
                        (M.nextScheduledRoot = oa));
                else {
                  var e = c.remainingExpirationTime;
                  if (0 === e || d < e) c.remainingExpirationTime = d;
                }
                Ga ||
                  (ka
                    ? Nb && z(c, 1)
                    : 1 === d ? I(1, null) : hb || ((hb = !0), Ie(T)));
              } else break;
            a = a["return"];
          }
        }
        function F(a) {
          x(a, 1, !0);
        }
        function L() {
          return (Nc = (((Je() - Eg) / 10) | 0) + 2);
        }
        function G() {
          var a = 0,
            b = null;
          if (null !== M)
            for (var c = M, d = oa; null !== d; ) {
              var e = d.remainingExpirationTime;
              if (0 === e) {
                null === c || null === M ? D("244") : void 0;
                if (d === d.nextScheduledRoot) {
                  oa = M = d.nextScheduledRoot = null;
                  break;
                } else if (d === oa)
                  (oa = e = d.nextScheduledRoot),
                    (M.nextScheduledRoot = e),
                    (d.nextScheduledRoot = null);
                else if (d === M) {
                  M = c;
                  M.nextScheduledRoot = oa;
                  d.nextScheduledRoot = null;
                  break;
                } else
                  (c.nextScheduledRoot = d.nextScheduledRoot),
                    (d.nextScheduledRoot = null);
                d = c.nextScheduledRoot;
              } else {
                if (0 === a || e < a) (a = e), (b = d);
                if (d === M) break;
                c = d;
                d = d.nextScheduledRoot;
              }
            }
          c = pa;
          null !== c && c === b ? Mb++ : (Mb = 0);
          pa = b;
          Ob = a;
        }
        function T(a) {
          I(0, a);
        }
        function I(a, b) {
          ib = b;
          for (G(); null !== pa && 0 !== Ob && (0 === a || Ob <= a) && !Oc; )
            z(pa, Ob), G();
          null !== ib && (hb = !1);
          null === pa || hb || ((hb = !0), Ie(T));
          ib = null;
          Oc = !1;
          Mb = 0;
          if (Pb) throw ((a = Pc), (Pc = null), (Pb = !1), a);
        }
        function z(a, c) {
          Ga ? D("245") : void 0;
          Ga = !0;
          if (c <= L()) {
            var d = a.finishedWork;
            null !== d
              ? ((a.finishedWork = null), (a.remainingExpirationTime = b(d)))
              : ((a.finishedWork = null),
                (d = g(a, c)),
                null !== d && (a.remainingExpirationTime = b(d)));
          } else
            (d = a.finishedWork),
              null !== d
                ? ((a.finishedWork = null), (a.remainingExpirationTime = b(d)))
                : ((a.finishedWork = null),
                  (d = g(a, c)),
                  null !== d &&
                    (p()
                      ? (a.finishedWork = d)
                      : (a.remainingExpirationTime = b(d))));
          Ga = !1;
        }
        function p() {
          return null === ib || ib.timeRemaining() > Fg ? !1 : (Oc = !0);
        }
        function v(a) {
          null === pa ? D("246") : void 0;
          pa.remainingExpirationTime = 0;
          Pb || ((Pb = !0), (Pc = a));
        }
        var t = ff(a),
          Kb = gf(a),
          Ee = t.popHostContainer,
          l = t.popHostContext,
          lg = t.resetHostContainer,
          Fe = bf(a, t, Kb, u, y),
          w = Fe.beginWork,
          mg = Fe.beginFailedWork,
          ng = cf(a, t, Kb).completeWork;
        t = df(a, k);
        var vg = t.commitResetTextContent,
          Ge = t.commitPlacement,
          xg = t.commitDeletion,
          He = t.commitWork,
          zg = t.commitLifeCycles,
          Ag = t.commitAttachRef,
          wg = t.commitDetachRef,
          Je = a.now,
          Ie = a.scheduleDeferredCallback,
          Cg = a.useSyncScheduling,
          ug = a.prepareForCommit,
          yg = a.resetAfterCommit,
          Eg = Je(),
          Nc = 2,
          ja = 0,
          ma = !1,
          E = null,
          fb = null,
          J = 0,
          q = null,
          P = null,
          na = null,
          fa = null,
          ba = null,
          gb = !1,
          Lb = !1,
          Lc = !1,
          oa = null,
          M = null,
          hb = !1,
          Ga = !1,
          pa = null,
          Ob = 0,
          Oc = !1,
          Pb = !1,
          Pc = null,
          ib = null,
          ka = !1,
          Nb = !1,
          Dg = 1e3,
          Mb = 0,
          Fg = 1;
        return {
          computeAsyncExpiration: n,
          computeExpirationForFiber: y,
          scheduleWork: u,
          batchedUpdates: function(a, b) {
            var c = ka;
            ka = !0;
            try {
              return a(b);
            } finally {
              (ka = c) || Ga || I(1, null);
            }
          },
          unbatchedUpdates: function(a) {
            if (ka && !Nb) {
              Nb = !0;
              try {
                return a();
              } finally {
                Nb = !1;
              }
            }
            return a();
          },
          flushSync: function(a) {
            var b = ka;
            ka = !0;
            try {
              a: {
                var c = ja;
                ja = 1;
                try {
                  var d = a();
                  break a;
                } finally {
                  ja = c;
                }
                d = void 0;
              }
              return d;
            } finally {
              (ka = b), Ga ? D("187") : void 0, I(1, null);
            }
          },
          deferredUpdates: function(a) {
            var b = ja;
            ja = n();
            try {
              return a();
            } finally {
              ja = b;
            }
          }
        };
      }
      function jf(a) {
        function b(a) {
          a = jd(a);
          return null === a ? null : a.stateNode;
        }
        var c = a.getPublicInstance;
        a = hf(a);
        var d = a.computeAsyncExpiration,
          e = a.computeExpirationForFiber,
          f = a.scheduleWork;
        return {
          createContainer: function(a, b) {
            var c = new Y(3, null, 0);
            a = {
              current: c,
              containerInfo: a,
              pendingChildren: null,
              remainingExpirationTime: 0,
              isReadyForCommit: !1,
              finishedWork: null,
              context: null,
              pendingContext: null,
              hydrate: b,
              nextScheduledRoot: null
            };
            return (c.stateNode = a);
          },
          updateContainer: function(a, b, c, r) {
            var g = b.current;
            if (c) {
              c = c._reactInternalFiber;
              var h;
              b: {
                2 === fd(c) && 2 === c.tag ? void 0 : D("170");
                for (h = c; 3 !== h.tag; ) {
                  if (ge(h)) {
                    h = h.stateNode.__reactInternalMemoizedMergedChildContext;
                    break b;
                  }
                  (h = h["return"]) ? void 0 : D("171");
                }
                h = h.stateNode.context;
              }
              c = ge(c) ? ke(c, h) : h;
            } else c = C;
            null === b.context ? (b.context = c) : (b.pendingContext = c);
            b = r;
            b = void 0 === b ? null : b;
            r =
              null != a &&
              null != a.type &&
              null != a.type.prototype &&
              !0 === a.type.prototype.unstable_isAsyncReactComponent
                ? d()
                : e(g);
            Ce(g, {
              expirationTime: r,
              partialState: { element: a },
              callback: b,
              isReplace: !1,
              isForced: !1,
              nextCallback: null,
              next: null
            });
            f(g, r);
          },
          batchedUpdates: a.batchedUpdates,
          unbatchedUpdates: a.unbatchedUpdates,
          deferredUpdates: a.deferredUpdates,
          flushSync: a.flushSync,
          getPublicRootInstance: function(a) {
            a = a.current;
            if (!a.child) return null;
            switch (a.child.tag) {
              case 5:
                return c(a.child.stateNode);
              default:
                return a.child.stateNode;
            }
          },
          findHostInstance: b,
          findHostInstanceWithNoPortals: function(a) {
            a = kd(a);
            return null === a ? null : a.stateNode;
          },
          injectIntoDevTools: function(a) {
            var c = a.findFiberByHostInstance;
            return xe(
              A({}, a, {
                findHostInstanceByFiber: function(a) {
                  return b(a);
                },
                findFiberByHostInstance: function(a) {
                  return c ? c(a) : null;
                }
              })
            );
          }
        };
      }
      var kf = Object.freeze({ default: jf }),
        lf = (kf && jf) || kf,
        mf = lf["default"] ? lf["default"] : lf,
        nf =
          "object" === typeof performance &&
          "function" === typeof performance.now,
        of = void 0;
      of = nf
        ? function() {
            return performance.now();
          }
        : function() {
            return Date.now();
          };
      var pf = void 0;
      if (m.canUseDOM)
        if ("function" !== typeof requestIdleCallback) {
          var qf = null,
            rf = !1,
            sf = !1,
            tf = 0,
            uf = 33,
            vf = 33,
            wf;
          wf = nf
            ? {
                timeRemaining: function() {
                  return tf - performance.now();
                }
              }
            : {
                timeRemaining: function() {
                  return tf - Date.now();
                }
              };
          var xf =
            "__reactIdleCallback$" +
            Math.random()
              .toString(36)
              .slice(2);
          window.addEventListener(
            "message",
            function(a) {
              a.source === window &&
                a.data === xf &&
                ((rf = !1), (a = qf), (qf = null), null !== a && a(wf));
            },
            !1
          );
          var yf = function(a) {
            sf = !1;
            var b = a - tf + vf;
            b < vf && uf < vf
              ? (8 > b && (b = 8), (vf = b < uf ? uf : b))
              : (uf = b);
            tf = a + vf;
            rf || ((rf = !0), window.postMessage(xf, "*"));
          };
          pf = function(a) {
            qf = a;
            sf || ((sf = !0), requestAnimationFrame(yf));
            return 0;
          };
        } else pf = requestIdleCallback;
      else
        pf = function(a) {
          setTimeout(function() {
            a({
              timeRemaining: function() {
                return Infinity;
              }
            });
          });
          return 0;
        };
      var zf = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
        Af = {},
        Bf = {};
      function Cf(a) {
        if (Bf.hasOwnProperty(a)) return !0;
        if (Af.hasOwnProperty(a)) return !1;
        if (zf.test(a)) return (Bf[a] = !0);
        Af[a] = !0;
        return !1;
      }
      function Df(a, b, c) {
        var d = ua(b);
        if (d && ta(b, c)) {
          var e = d.mutationMethod;
          e
            ? e(a, c)
            : null == c ||
              (d.hasBooleanValue && !c) ||
              (d.hasNumericValue && isNaN(c)) ||
              (d.hasPositiveNumericValue && 1 > c) ||
              (d.hasOverloadedBooleanValue && !1 === c)
              ? Ef(a, b)
              : d.mustUseProperty
                ? (a[d.propertyName] = c)
                : ((b = d.attributeName),
                  (e = d.attributeNamespace)
                    ? a.setAttributeNS(e, b, "" + c)
                    : d.hasBooleanValue ||
                      (d.hasOverloadedBooleanValue && !0 === c)
                      ? a.setAttribute(b, "")
                      : a.setAttribute(b, "" + c));
        } else Ff(a, b, ta(b, c) ? c : null);
      }
      function Ff(a, b, c) {
        Cf(b) && (null == c ? a.removeAttribute(b) : a.setAttribute(b, "" + c));
      }
      function Ef(a, b) {
        var c = ua(b);
        c
          ? (b = c.mutationMethod)
            ? b(a, void 0)
            : c.mustUseProperty
              ? (a[c.propertyName] = c.hasBooleanValue ? !1 : "")
              : a.removeAttribute(c.attributeName)
          : a.removeAttribute(b);
      }
      function Gf(a, b) {
        var c = b.value,
          d = b.checked;
        return A({ type: void 0, step: void 0, min: void 0, max: void 0 }, b, {
          defaultChecked: void 0,
          defaultValue: void 0,
          value: null != c ? c : a._wrapperState.initialValue,
          checked: null != d ? d : a._wrapperState.initialChecked
        });
      }
      function Hf(a, b) {
        var c = b.defaultValue;
        a._wrapperState = {
          initialChecked: null != b.checked ? b.checked : b.defaultChecked,
          initialValue: null != b.value ? b.value : c,
          controlled:
            "checkbox" === b.type || "radio" === b.type
              ? null != b.checked
              : null != b.value
        };
      }
      function If(a, b) {
        var c = b.checked;
        null != c && Df(a, "checked", c || !1);
        c = b.value;
        if (null != c)
          if (0 === c && "" === a.value) a.value = "0";
          else if ("number" === b.type) {
            if (
              ((b = parseFloat(a.value) || 0),
              c != b || (c == b && a.value != c))
            )
              a.value = "" + c;
          } else a.value !== "" + c && (a.value = "" + c);
        else
          null == b.value &&
            null != b.defaultValue &&
            a.defaultValue !== "" + b.defaultValue &&
            (a.defaultValue = "" + b.defaultValue),
            null == b.checked &&
              null != b.defaultChecked &&
              (a.defaultChecked = !!b.defaultChecked);
      }
      function Jf(a, b) {
        switch (b.type) {
          case "submit":
          case "reset":
            break;
          case "color":
          case "date":
          case "datetime":
          case "datetime-local":
          case "month":
          case "time":
          case "week":
            a.value = "";
            a.value = a.defaultValue;
            break;
          default:
            a.value = a.value;
        }
        b = a.name;
        "" !== b && (a.name = "");
        a.defaultChecked = !a.defaultChecked;
        a.defaultChecked = !a.defaultChecked;
        "" !== b && (a.name = b);
      }
      function Kf(a) {
        var b = "";
        aa.Children.forEach(a, function(a) {
          null == a ||
            ("string" !== typeof a && "number" !== typeof a) ||
            (b += a);
        });
        return b;
      }
      function Lf(a, b) {
        a = A({ children: void 0 }, b);
        if ((b = Kf(b.children))) a.children = b;
        return a;
      }
      function Mf(a, b, c, d) {
        a = a.options;
        if (b) {
          b = {};
          for (var e = 0; e < c.length; e++) b["$" + c[e]] = !0;
          for (c = 0; c < a.length; c++)
            (e = b.hasOwnProperty("$" + a[c].value)),
              a[c].selected !== e && (a[c].selected = e),
              e && d && (a[c].defaultSelected = !0);
        } else {
          c = "" + c;
          b = null;
          for (e = 0; e < a.length; e++) {
            if (a[e].value === c) {
              a[e].selected = !0;
              d && (a[e].defaultSelected = !0);
              return;
            }
            null !== b || a[e].disabled || (b = a[e]);
          }
          null !== b && (b.selected = !0);
        }
      }
      function Nf(a, b) {
        var c = b.value;
        a._wrapperState = {
          initialValue: null != c ? c : b.defaultValue,
          wasMultiple: !!b.multiple
        };
      }
      function Of(a, b) {
        null != b.dangerouslySetInnerHTML ? D("91") : void 0;
        return A({}, b, {
          value: void 0,
          defaultValue: void 0,
          children: "" + a._wrapperState.initialValue
        });
      }
      function Pf(a, b) {
        var c = b.value,
          d = c;
        null == c &&
          ((c = b.defaultValue),
          (b = b.children),
          null != b &&
            (null != c ? D("92") : void 0,
            Array.isArray(b) && (1 >= b.length ? void 0 : D("93"), (b = b[0])),
            (c = "" + b)),
          null == c && (c = ""),
          (d = c));
        a._wrapperState = { initialValue: "" + d };
      }
      function Qf(a, b) {
        var c = b.value;
        null != c &&
          ((c = "" + c),
          c !== a.value && (a.value = c),
          null == b.defaultValue && (a.defaultValue = c));
        null != b.defaultValue && (a.defaultValue = b.defaultValue);
      }
      function Rf(a) {
        var b = a.textContent;
        b === a._wrapperState.initialValue && (a.value = b);
      }
      var Sf = {
        html: "http://www.w3.org/1999/xhtml",
        mathml: "http://www.w3.org/1998/Math/MathML",
        svg: "http://www.w3.org/2000/svg"
      };
      function Tf(a) {
        switch (a) {
          case "svg":
            return "http://www.w3.org/2000/svg";
          case "math":
            return "http://www.w3.org/1998/Math/MathML";
          default:
            return "http://www.w3.org/1999/xhtml";
        }
      }
      function Uf(a, b) {
        return null == a || "http://www.w3.org/1999/xhtml" === a
          ? Tf(b)
          : "http://www.w3.org/2000/svg" === a && "foreignObject" === b
            ? "http://www.w3.org/1999/xhtml"
            : a;
      }
      var Vf = void 0,
        Wf = (function(a) {
          return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction
            ? function(b, c, d, e) {
                MSApp.execUnsafeLocalFunction(function() {
                  return a(b, c, d, e);
                });
              }
            : a;
        })(function(a, b) {
          if (a.namespaceURI !== Sf.svg || "innerHTML" in a) a.innerHTML = b;
          else {
            Vf = Vf || document.createElement("div");
            Vf.innerHTML = "\x3csvg\x3e" + b + "\x3c/svg\x3e";
            for (b = Vf.firstChild; a.firstChild; ) a.removeChild(a.firstChild);
            for (; b.firstChild; ) a.appendChild(b.firstChild);
          }
        }),
        Xf = /["'&<>]/;
      function Yf(a, b) {
        if (b) {
          var c = a.firstChild;
          if (c && c === a.lastChild && 3 === c.nodeType) {
            c.nodeValue = b;
            return;
          }
        }
        a.textContent = b;
      }
      m.canUseDOM &&
        ("textContent" in document.documentElement ||
          (Yf = function(a, b) {
            if (3 === a.nodeType) a.nodeValue = b;
            else {
              if ("boolean" === typeof b || "number" === typeof b) b = "" + b;
              else {
                b = "" + b;
                var c = Xf.exec(b);
                if (c) {
                  var d = "",
                    e,
                    f = 0;
                  for (e = c.index; e < b.length; e++) {
                    switch (b.charCodeAt(e)) {
                      case 34:
                        c = "\x26quot;";
                        break;
                      case 38:
                        c = "\x26amp;";
                        break;
                      case 39:
                        c = "\x26#x27;";
                        break;
                      case 60:
                        c = "\x26lt;";
                        break;
                      case 62:
                        c = "\x26gt;";
                        break;
                      default:
                        continue;
                    }
                    f !== e && (d += b.substring(f, e));
                    f = e + 1;
                    d += c;
                  }
                  b = f !== e ? d + b.substring(f, e) : d;
                }
              }
              Wf(a, b);
            }
          }));
      var Zf = Yf,
        $f = {
          animationIterationCount: !0,
          borderImageOutset: !0,
          borderImageSlice: !0,
          borderImageWidth: !0,
          boxFlex: !0,
          boxFlexGroup: !0,
          boxOrdinalGroup: !0,
          columnCount: !0,
          columns: !0,
          flex: !0,
          flexGrow: !0,
          flexPositive: !0,
          flexShrink: !0,
          flexNegative: !0,
          flexOrder: !0,
          gridRow: !0,
          gridRowEnd: !0,
          gridRowSpan: !0,
          gridRowStart: !0,
          gridColumn: !0,
          gridColumnEnd: !0,
          gridColumnSpan: !0,
          gridColumnStart: !0,
          fontWeight: !0,
          lineClamp: !0,
          lineHeight: !0,
          opacity: !0,
          order: !0,
          orphans: !0,
          tabSize: !0,
          widows: !0,
          zIndex: !0,
          zoom: !0,
          fillOpacity: !0,
          floodOpacity: !0,
          stopOpacity: !0,
          strokeDasharray: !0,
          strokeDashoffset: !0,
          strokeMiterlimit: !0,
          strokeOpacity: !0,
          strokeWidth: !0
        },
        ag = ["Webkit", "ms", "Moz", "O"];
      Object.keys($f).forEach(function(a) {
        ag.forEach(function(b) {
          b = b + a.charAt(0).toUpperCase() + a.substring(1);
          $f[b] = $f[a];
        });
      });
      function bg(a, b) {
        a = a.style;
        for (var c in b)
          if (b.hasOwnProperty(c)) {
            var d = 0 === c.indexOf("--");
            var e = c;
            var f = b[c];
            e =
              null == f || "boolean" === typeof f || "" === f
                ? ""
                : d ||
                  "number" !== typeof f ||
                  0 === f ||
                  ($f.hasOwnProperty(e) && $f[e])
                  ? ("" + f).trim()
                  : f + "px";
            "float" === c && (c = "cssFloat");
            d ? a.setProperty(c, e) : (a[c] = e);
          }
      }
      var cg = A(
        { menuitem: !0 },
        {
          area: !0,
          base: !0,
          br: !0,
          col: !0,
          embed: !0,
          hr: !0,
          img: !0,
          input: !0,
          keygen: !0,
          link: !0,
          meta: !0,
          param: !0,
          source: !0,
          track: !0,
          wbr: !0
        }
      );
      function dg(a, b, c) {
        b &&
          (cg[a] &&
            (null != b.children || null != b.dangerouslySetInnerHTML
              ? D("137", a, c())
              : void 0),
          null != b.dangerouslySetInnerHTML &&
            (null != b.children ? D("60") : void 0,
            "object" === typeof b.dangerouslySetInnerHTML &&
            "__html" in b.dangerouslySetInnerHTML
              ? void 0
              : D("61")),
          null != b.style && "object" !== typeof b.style
            ? D("62", c())
            : void 0);
      }
      function eg(a, b) {
        if (-1 === a.indexOf("-")) return "string" === typeof b.is;
        switch (a) {
          case "annotation-xml":
          case "color-profile":
          case "font-face":
          case "font-face-src":
          case "font-face-uri":
          case "font-face-format":
          case "font-face-name":
          case "missing-glyph":
            return !1;
          default:
            return !0;
        }
      }
      var fg = Sf.html,
        gg = B.thatReturns("");
      function hg(a, b) {
        a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;
        var c = Cd(a);
        b = Qa[b];
        for (var d = 0; d < b.length; d++) {
          var e = b[d];
          (c.hasOwnProperty(e) && c[e]) ||
            ("topWheel" === e
              ? xc("wheel")
                ? U("topWheel", "wheel", a)
                : xc("mousewheel")
                  ? U("topWheel", "mousewheel", a)
                  : U("topWheel", "DOMMouseScroll", a)
              : "topScroll" === e
                ? rd("topScroll", "scroll", a)
                : "topFocus" === e || "topBlur" === e
                  ? (rd("topFocus", "focus", a),
                    rd("topBlur", "blur", a),
                    (c.topBlur = !0),
                    (c.topFocus = !0))
                  : "topCancel" === e
                    ? (xc("cancel", !0) && rd("topCancel", "cancel", a),
                      (c.topCancel = !0))
                    : "topClose" === e
                      ? (xc("close", !0) && rd("topClose", "close", a),
                        (c.topClose = !0))
                      : yd.hasOwnProperty(e) && U(e, yd[e], a),
            (c[e] = !0));
        }
      }
      var ig = {
        topAbort: "abort",
        topCanPlay: "canplay",
        topCanPlayThrough: "canplaythrough",
        topDurationChange: "durationchange",
        topEmptied: "emptied",
        topEncrypted: "encrypted",
        topEnded: "ended",
        topError: "error",
        topLoadedData: "loadeddata",
        topLoadedMetadata: "loadedmetadata",
        topLoadStart: "loadstart",
        topPause: "pause",
        topPlay: "play",
        topPlaying: "playing",
        topProgress: "progress",
        topRateChange: "ratechange",
        topSeeked: "seeked",
        topSeeking: "seeking",
        topStalled: "stalled",
        topSuspend: "suspend",
        topTimeUpdate: "timeupdate",
        topVolumeChange: "volumechange",
        topWaiting: "waiting"
      };
      function jg(a, b, c, d) {
        c = 9 === c.nodeType ? c : c.ownerDocument;
        d === fg && (d = Tf(a));
        d === fg
          ? "script" === a
            ? ((a = c.createElement("div")),
              (a.innerHTML = "\x3cscript\x3e\x3c/script\x3e"),
              (a = a.removeChild(a.firstChild)))
            : (a =
                "string" === typeof b.is
                  ? c.createElement(a, { is: b.is })
                  : c.createElement(a))
          : (a = c.createElementNS(d, a));
        return a;
      }
      function kg(a, b) {
        return (9 === b.nodeType ? b : b.ownerDocument).createTextNode(a);
      }
      function og(a, b, c, d) {
        var e = eg(b, c);
        switch (b) {
          case "iframe":
          case "object":
            U("topLoad", "load", a);
            var f = c;
            break;
          case "video":
          case "audio":
            for (f in ig) ig.hasOwnProperty(f) && U(f, ig[f], a);
            f = c;
            break;
          case "source":
            U("topError", "error", a);
            f = c;
            break;
          case "img":
          case "image":
            U("topError", "error", a);
            U("topLoad", "load", a);
            f = c;
            break;
          case "form":
            U("topReset", "reset", a);
            U("topSubmit", "submit", a);
            f = c;
            break;
          case "details":
            U("topToggle", "toggle", a);
            f = c;
            break;
          case "input":
            Hf(a, c);
            f = Gf(a, c);
            U("topInvalid", "invalid", a);
            hg(d, "onChange");
            break;
          case "option":
            f = Lf(a, c);
            break;
          case "select":
            Nf(a, c);
            f = A({}, c, { value: void 0 });
            U("topInvalid", "invalid", a);
            hg(d, "onChange");
            break;
          case "textarea":
            Pf(a, c);
            f = Of(a, c);
            U("topInvalid", "invalid", a);
            hg(d, "onChange");
            break;
          default:
            f = c;
        }
        dg(b, f, gg);
        var g = f,
          k;
        for (k in g)
          if (g.hasOwnProperty(k)) {
            var h = g[k];
            "style" === k
              ? bg(a, h, gg)
              : "dangerouslySetInnerHTML" === k
                ? ((h = h ? h.__html : void 0), null != h && Wf(a, h))
                : "children" === k
                  ? "string" === typeof h
                    ? ("textarea" !== b || "" !== h) && Zf(a, h)
                    : "number" === typeof h && Zf(a, "" + h)
                  : "suppressContentEditableWarning" !== k &&
                    "suppressHydrationWarning" !== k &&
                    "autoFocus" !== k &&
                    (Pa.hasOwnProperty(k)
                      ? null != h && hg(d, k)
                      : e ? Ff(a, k, h) : null != h && Df(a, k, h));
          }
        switch (b) {
          case "input":
            Ac(a);
            Jf(a, c);
            break;
          case "textarea":
            Ac(a);
            Rf(a, c);
            break;
          case "option":
            null != c.value && a.setAttribute("value", c.value);
            break;
          case "select":
            a.multiple = !!c.multiple;
            b = c.value;
            null != b
              ? Mf(a, !!c.multiple, b, !1)
              : null != c.defaultValue &&
                Mf(a, !!c.multiple, c.defaultValue, !0);
            break;
          default:
            "function" === typeof f.onClick && (a.onclick = B);
        }
      }
      function pg(a, b, c, d, e) {
        var f = null;
        switch (b) {
          case "input":
            c = Gf(a, c);
            d = Gf(a, d);
            f = [];
            break;
          case "option":
            c = Lf(a, c);
            d = Lf(a, d);
            f = [];
            break;
          case "select":
            c = A({}, c, { value: void 0 });
            d = A({}, d, { value: void 0 });
            f = [];
            break;
          case "textarea":
            c = Of(a, c);
            d = Of(a, d);
            f = [];
            break;
          default:
            "function" !== typeof c.onClick &&
              "function" === typeof d.onClick &&
              (a.onclick = B);
        }
        dg(b, d, gg);
        var g, k;
        a = null;
        for (g in c)
          if (!d.hasOwnProperty(g) && c.hasOwnProperty(g) && null != c[g])
            if ("style" === g)
              for (k in ((b = c[g]), b))
                b.hasOwnProperty(k) && (a || (a = {}), (a[k] = ""));
            else
              "dangerouslySetInnerHTML" !== g &&
                "children" !== g &&
                "suppressContentEditableWarning" !== g &&
                "suppressHydrationWarning" !== g &&
                "autoFocus" !== g &&
                (Pa.hasOwnProperty(g)
                  ? f || (f = [])
                  : (f = f || []).push(g, null));
        for (g in d) {
          var h = d[g];
          b = null != c ? c[g] : void 0;
          if (d.hasOwnProperty(g) && h !== b && (null != h || null != b))
            if ("style" === g)
              if (b) {
                for (k in b)
                  !b.hasOwnProperty(k) ||
                    (h && h.hasOwnProperty(k)) ||
                    (a || (a = {}), (a[k] = ""));
                for (k in h)
                  h.hasOwnProperty(k) &&
                    b[k] !== h[k] &&
                    (a || (a = {}), (a[k] = h[k]));
              } else a || (f || (f = []), f.push(g, a)), (a = h);
            else
              "dangerouslySetInnerHTML" === g
                ? ((h = h ? h.__html : void 0),
                  (b = b ? b.__html : void 0),
                  null != h && b !== h && (f = f || []).push(g, "" + h))
                : "children" === g
                  ? b === h ||
                    ("string" !== typeof h && "number" !== typeof h) ||
                    (f = f || []).push(g, "" + h)
                  : "suppressContentEditableWarning" !== g &&
                    "suppressHydrationWarning" !== g &&
                    (Pa.hasOwnProperty(g)
                      ? (null != h && hg(e, g), f || b === h || (f = []))
                      : (f = f || []).push(g, h));
        }
        a && (f = f || []).push("style", a);
        return f;
      }
      function qg(a, b, c, d, e) {
        eg(c, d);
        d = eg(c, e);
        for (var f = 0; f < b.length; f += 2) {
          var g = b[f],
            k = b[f + 1];
          "style" === g
            ? bg(a, k, gg)
            : "dangerouslySetInnerHTML" === g
              ? Wf(a, k)
              : "children" === g
                ? Zf(a, k)
                : d
                  ? null != k ? Ff(a, g, k) : a.removeAttribute(g)
                  : null != k ? Df(a, g, k) : Ef(a, g);
        }
        switch (c) {
          case "input":
            If(a, e);
            Bc(a);
            break;
          case "textarea":
            Qf(a, e);
            break;
          case "select":
            (a._wrapperState.initialValue = void 0),
              (b = a._wrapperState.wasMultiple),
              (a._wrapperState.wasMultiple = !!e.multiple),
              (c = e.value),
              null != c
                ? Mf(a, !!e.multiple, c, !1)
                : b !== !!e.multiple &&
                  (null != e.defaultValue
                    ? Mf(a, !!e.multiple, e.defaultValue, !0)
                    : Mf(a, !!e.multiple, e.multiple ? [] : "", !1));
        }
      }
      function rg(a, b, c, d, e) {
        switch (b) {
          case "iframe":
          case "object":
            U("topLoad", "load", a);
            break;
          case "video":
          case "audio":
            for (var f in ig) ig.hasOwnProperty(f) && U(f, ig[f], a);
            break;
          case "source":
            U("topError", "error", a);
            break;
          case "img":
          case "image":
            U("topError", "error", a);
            U("topLoad", "load", a);
            break;
          case "form":
            U("topReset", "reset", a);
            U("topSubmit", "submit", a);
            break;
          case "details":
            U("topToggle", "toggle", a);
            break;
          case "input":
            Hf(a, c);
            U("topInvalid", "invalid", a);
            hg(e, "onChange");
            break;
          case "select":
            Nf(a, c);
            U("topInvalid", "invalid", a);
            hg(e, "onChange");
            break;
          case "textarea":
            Pf(a, c), U("topInvalid", "invalid", a), hg(e, "onChange");
        }
        dg(b, c, gg);
        d = null;
        for (var g in c)
          c.hasOwnProperty(g) &&
            ((f = c[g]),
            "children" === g
              ? "string" === typeof f
                ? a.textContent !== f && (d = ["children", f])
                : "number" === typeof f &&
                  a.textContent !== "" + f &&
                  (d = ["children", "" + f])
              : Pa.hasOwnProperty(g) && null != f && hg(e, g));
        switch (b) {
          case "input":
            Ac(a);
            Jf(a, c);
            break;
          case "textarea":
            Ac(a);
            Rf(a, c);
            break;
          case "select":
          case "option":
            break;
          default:
            "function" === typeof c.onClick && (a.onclick = B);
        }
        return d;
      }
      function sg(a, b) {
        return a.nodeValue !== b;
      }
      var tg = Object.freeze({
        createElement: jg,
        createTextNode: kg,
        setInitialProperties: og,
        diffProperties: pg,
        updateProperties: qg,
        diffHydratedProperties: rg,
        diffHydratedText: sg,
        warnForUnmatchedText: function() {},
        warnForDeletedHydratableElement: function() {},
        warnForDeletedHydratableText: function() {},
        warnForInsertedHydratedElement: function() {},
        warnForInsertedHydratedText: function() {},
        restoreControlledState: function(a, b, c) {
          switch (b) {
            case "input":
              If(a, c);
              b = c.name;
              if ("radio" === c.type && null != b) {
                for (c = a; c.parentNode; ) c = c.parentNode;
                c = c.querySelectorAll(
                  "input[name\x3d" +
                    JSON.stringify("" + b) +
                    '][type\x3d"radio"]'
                );
                for (b = 0; b < c.length; b++) {
                  var d = c[b];
                  if (d !== a && d.form === a.form) {
                    var e = rb(d);
                    e ? void 0 : D("90");
                    If(d, e);
                  }
                }
              }
              break;
            case "textarea":
              Qf(a, c);
              break;
            case "select":
              (b = c.value), null != b && Mf(a, !!c.multiple, b, !1);
          }
        }
      });
      mc.injectFiberControlledHostComponent(tg);
      var Gg = null,
        Hg = null;
      function Ig(a) {
        return !(
          !a ||
          (1 !== a.nodeType &&
            9 !== a.nodeType &&
            11 !== a.nodeType &&
            (8 !== a.nodeType ||
              " react-mount-point-unstable " !== a.nodeValue))
        );
      }
      function Jg(a) {
        a = a ? (9 === a.nodeType ? a.documentElement : a.firstChild) : null;
        return !(!a || 1 !== a.nodeType || !a.hasAttribute("data-reactroot"));
      }
      var Z = mf({
        getRootHostContext: function(a) {
          var b = a.nodeType;
          switch (b) {
            case 9:
            case 11:
              a = (a = a.documentElement) ? a.namespaceURI : Uf(null, "");
              break;
            default:
              (b = 8 === b ? a.parentNode : a),
                (a = b.namespaceURI || null),
                (b = b.tagName),
                (a = Uf(a, b));
          }
          return a;
        },
        getChildHostContext: function(a, b) {
          return Uf(a, b);
        },
        getPublicInstance: function(a) {
          return a;
        },
        prepareForCommit: function() {
          Gg = od;
          var a = da();
          if (Fd(a)) {
            if ("selectionStart" in a)
              var b = { start: a.selectionStart, end: a.selectionEnd };
            else
              a: {
                var c = window.getSelection && window.getSelection();
                if (c && 0 !== c.rangeCount) {
                  b = c.anchorNode;
                  var d = c.anchorOffset,
                    e = c.focusNode;
                  c = c.focusOffset;
                  try {
                    b.nodeType, e.nodeType;
                  } catch (x) {
                    b = null;
                    break a;
                  }
                  var f = 0,
                    g = -1,
                    k = -1,
                    h = 0,
                    r = 0,
                    n = a,
                    y = null;
                  b: for (;;) {
                    for (var u; ; ) {
                      n !== b || (0 !== d && 3 !== n.nodeType) || (g = f + d);
                      n !== e || (0 !== c && 3 !== n.nodeType) || (k = f + c);
                      3 === n.nodeType && (f += n.nodeValue.length);
                      if (null === (u = n.firstChild)) break;
                      y = n;
                      n = u;
                    }
                    for (;;) {
                      if (n === a) break b;
                      y === b && ++h === d && (g = f);
                      y === e && ++r === c && (k = f);
                      if (null !== (u = n.nextSibling)) break;
                      n = y;
                      y = n.parentNode;
                    }
                    n = u;
                  }
                  b = -1 === g || -1 === k ? null : { start: g, end: k };
                } else b = null;
              }
            b = b || { start: 0, end: 0 };
          } else b = null;
          Hg = { focusedElem: a, selectionRange: b };
          pd(!1);
        },
        resetAfterCommit: function() {
          var a = Hg,
            b = da(),
            c = a.focusedElem,
            d = a.selectionRange;
          if (b !== c && ha(document.documentElement, c)) {
            if (Fd(c))
              if (
                ((b = d.start),
                (a = d.end),
                void 0 === a && (a = b),
                "selectionStart" in c)
              )
                (c.selectionStart = b),
                  (c.selectionEnd = Math.min(a, c.value.length));
              else if (window.getSelection) {
                b = window.getSelection();
                var e = c[Db()].length;
                a = Math.min(d.start, e);
                d = void 0 === d.end ? a : Math.min(d.end, e);
                !b.extend && a > d && ((e = d), (d = a), (a = e));
                e = Ed(c, a);
                var f = Ed(c, d);
                if (
                  e &&
                  f &&
                  (1 !== b.rangeCount ||
                    b.anchorNode !== e.node ||
                    b.anchorOffset !== e.offset ||
                    b.focusNode !== f.node ||
                    b.focusOffset !== f.offset)
                ) {
                  var g = document.createRange();
                  g.setStart(e.node, e.offset);
                  b.removeAllRanges();
                  a > d
                    ? (b.addRange(g), b.extend(f.node, f.offset))
                    : (g.setEnd(f.node, f.offset), b.addRange(g));
                }
              }
            b = [];
            for (a = c; (a = a.parentNode); )
              1 === a.nodeType &&
                b.push({ element: a, left: a.scrollLeft, top: a.scrollTop });
            ia(c);
            for (c = 0; c < b.length; c++)
              (a = b[c]),
                (a.element.scrollLeft = a.left),
                (a.element.scrollTop = a.top);
          }
          Hg = null;
          pd(Gg);
          Gg = null;
        },
        createInstance: function(a, b, c, d, e) {
          a = jg(a, b, c, d);
          a[O] = e;
          a[ob] = b;
          return a;
        },
        appendInitialChild: function(a, b) {
          a.appendChild(b);
        },
        finalizeInitialChildren: function(a, b, c, d) {
          og(a, b, c, d);
          a: {
            switch (b) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                a = !!c.autoFocus;
                break a;
            }
            a = !1;
          }
          return a;
        },
        prepareUpdate: function(a, b, c, d, e) {
          return pg(a, b, c, d, e);
        },
        shouldSetTextContent: function(a, b) {
          return (
            "textarea" === a ||
            "string" === typeof b.children ||
            "number" === typeof b.children ||
            ("object" === typeof b.dangerouslySetInnerHTML &&
              null !== b.dangerouslySetInnerHTML &&
              "string" === typeof b.dangerouslySetInnerHTML.__html)
          );
        },
        shouldDeprioritizeSubtree: function(a, b) {
          return !!b.hidden;
        },
        createTextInstance: function(a, b, c, d) {
          a = kg(a, b);
          a[O] = d;
          return a;
        },
        now: of,
        mutation: {
          commitMount: function(a) {
            a.focus();
          },
          commitUpdate: function(a, b, c, d, e) {
            a[ob] = e;
            qg(a, b, c, d, e);
          },
          resetTextContent: function(a) {
            a.textContent = "";
          },
          commitTextUpdate: function(a, b, c) {
            a.nodeValue = c;
          },
          appendChild: function(a, b) {
            a.appendChild(b);
          },
          appendChildToContainer: function(a, b) {
            8 === a.nodeType
              ? a.parentNode.insertBefore(b, a)
              : a.appendChild(b);
          },
          insertBefore: function(a, b, c) {
            a.insertBefore(b, c);
          },
          insertInContainerBefore: function(a, b, c) {
            8 === a.nodeType
              ? a.parentNode.insertBefore(b, c)
              : a.insertBefore(b, c);
          },
          removeChild: function(a, b) {
            a.removeChild(b);
          },
          removeChildFromContainer: function(a, b) {
            8 === a.nodeType ? a.parentNode.removeChild(b) : a.removeChild(b);
          }
        },
        hydration: {
          canHydrateInstance: function(a, b) {
            return (
              1 === a.nodeType && b.toLowerCase() === a.nodeName.toLowerCase()
            );
          },
          canHydrateTextInstance: function(a, b) {
            return "" === b ? !1 : 3 === a.nodeType;
          },
          getNextHydratableSibling: function(a) {
            for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType; )
              a = a.nextSibling;
            return a;
          },
          getFirstHydratableChild: function(a) {
            for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType; )
              a = a.nextSibling;
            return a;
          },
          hydrateInstance: function(a, b, c, d, e, f) {
            a[O] = f;
            a[ob] = c;
            return rg(a, b, c, e, d);
          },
          hydrateTextInstance: function(a, b, c) {
            a[O] = c;
            return sg(a, b);
          },
          didNotMatchHydratedContainerTextInstance: function() {},
          didNotMatchHydratedTextInstance: function() {},
          didNotHydrateContainerInstance: function() {},
          didNotHydrateInstance: function() {},
          didNotFindHydratableContainerInstance: function() {},
          didNotFindHydratableContainerTextInstance: function() {},
          didNotFindHydratableInstance: function() {},
          didNotFindHydratableTextInstance: function() {}
        },
        scheduleDeferredCallback: pf,
        useSyncScheduling: !0
      });
      qc = Z.batchedUpdates;
      function Kg(a, b, c, d, e) {
        Ig(c) ? void 0 : D("200");
        var f = c._reactRootContainer;
        if (f) Z.updateContainer(b, f, a, e);
        else {
          d = d || Jg(c);
          if (!d) for (f = void 0; (f = c.lastChild); ) c.removeChild(f);
          var g = Z.createContainer(c, d);
          f = c._reactRootContainer = g;
          Z.unbatchedUpdates(function() {
            Z.updateContainer(b, g, a, e);
          });
        }
        return Z.getPublicRootInstance(f);
      }
      function Lg(a, b) {
        var c =
          2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
        Ig(b) ? void 0 : D("200");
        return Oe(a, b, null, c);
      }
      function Mg(a, b) {
        this._reactRootContainer = Z.createContainer(a, b);
      }
      Mg.prototype.render = function(a, b) {
        Z.updateContainer(a, this._reactRootContainer, null, b);
      };
      Mg.prototype.unmount = function(a) {
        Z.updateContainer(null, this._reactRootContainer, null, a);
      };
      var Ng = {
        createPortal: Lg,
        findDOMNode: function(a) {
          if (null == a) return null;
          if (1 === a.nodeType) return a;
          var b = a._reactInternalFiber;
          if (b) return Z.findHostInstance(b);
          "function" === typeof a.render ? D("188") : D("213", Object.keys(a));
        },
        hydrate: function(a, b, c) {
          return Kg(null, a, b, !0, c);
        },
        render: function(a, b, c) {
          return Kg(null, a, b, !1, c);
        },
        unstable_renderSubtreeIntoContainer: function(a, b, c, d) {
          null == a || void 0 === a._reactInternalFiber ? D("38") : void 0;
          return Kg(a, b, c, !1, d);
        },
        unmountComponentAtNode: function(a) {
          Ig(a) ? void 0 : D("40");
          return a._reactRootContainer
            ? (Z.unbatchedUpdates(function() {
                Kg(null, null, a, !1, function() {
                  a._reactRootContainer = null;
                });
              }),
              !0)
            : !1;
        },
        unstable_createPortal: Lg,
        unstable_batchedUpdates: sc,
        unstable_deferredUpdates: Z.deferredUpdates,
        flushSync: Z.flushSync,
        __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
          EventPluginHub: mb,
          EventPluginRegistry: Ta,
          EventPropagators: Bb,
          ReactControlledComponent: pc,
          ReactDOMComponentTree: sb,
          ReactDOMEventListener: sd
        }
      };
      Z.injectIntoDevTools({
        findFiberByHostInstance: pb,
        bundleType: 0,
        version: "16.1.0",
        rendererPackageName: "react-dom"
      });
      var Og = Object.freeze({ default: Ng }),
        Pg = (Og && Ng) || Og;
      module.exports = Pg["default"] ? Pg["default"] : Pg;

      /***/
    },
    /* 14 */
    /***/ function(module, exports) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       */

      "use strict";

      var canUseDOM = !!(
        typeof window !== "undefined" &&
        window.document &&
        window.document.createElement
      );

      /**
       * Simple, lightweight module assisting with the detection and context of
       * Worker. Helps avoid circular dependencies and allows code to reason about
       * whether or not they are in a Worker, even if they never include the main
       * `ReactWorker` dependency.
       */
      var ExecutionEnvironment = {
        canUseDOM: canUseDOM,

        canUseWorkers: typeof Worker !== "undefined",

        canUseEventListeners:
          canUseDOM && !!(window.addEventListener || window.attachEvent),

        canUseViewport: canUseDOM && !!window.screen,

        isInWorker: !canUseDOM // For now, this is true - might change in the future.
      };

      module.exports = ExecutionEnvironment;

      /***/
    },
    /* 15 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       * @typechecks
       */

      var emptyFunction = __webpack_require__(6);

      /**
       * Upstream version of event listener. Does not take into account specific
       * nature of platform.
       */
      var EventListener = {
        /**
         * Listen to DOM events during the bubble phase.
         *
         * @param {DOMEventTarget} target DOM element to register listener on.
         * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
         * @param {function} callback Callback function.
         * @return {object} Object with a `remove` method.
         */
        listen: function listen(target, eventType, callback) {
          if (target.addEventListener) {
            target.addEventListener(eventType, callback, false);
            return {
              remove: function remove() {
                target.removeEventListener(eventType, callback, false);
              }
            };
          } else if (target.attachEvent) {
            target.attachEvent("on" + eventType, callback);
            return {
              remove: function remove() {
                target.detachEvent("on" + eventType, callback);
              }
            };
          }
        },

        /**
         * Listen to DOM events during the capture phase.
         *
         * @param {DOMEventTarget} target DOM element to register listener on.
         * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
         * @param {function} callback Callback function.
         * @return {object} Object with a `remove` method.
         */
        capture: function capture(target, eventType, callback) {
          if (target.addEventListener) {
            target.addEventListener(eventType, callback, true);
            return {
              remove: function remove() {
                target.removeEventListener(eventType, callback, true);
              }
            };
          } else {
            if (undefined !== "production") {
              console.error(
                "Attempted to listen to events during the capture phase on a " +
                  "browser that does not support the capture phase. Your application " +
                  "will not receive some events."
              );
            }
            return {
              remove: emptyFunction
            };
          }
        },

        registerDefault: function registerDefault() {}
      };

      module.exports = EventListener;

      /***/
    },
    /* 16 */
    /***/ function(module, exports) {
      "use strict";

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       * @typechecks
       */

      /* eslint-disable fb-www/typeof-undefined */

      /**
       * Same as document.activeElement but wraps in a try-catch block. In IE it is
       * not safe to call document.activeElement if there is nothing focused.
       *
       * The activeElement will be null only if the document or document body is not
       * yet defined.
       *
       * @param {?DOMDocument} doc Defaults to current document.
       * @return {?DOMElement}
       */
      function getActiveElement(doc) /*?DOMElement*/ {
        doc = doc || (typeof document !== "undefined" ? document : undefined);
        if (typeof doc === "undefined") {
          return null;
        }
        try {
          return doc.activeElement || doc.body;
        } catch (e) {
          return doc.body;
        }
      }

      module.exports = getActiveElement;

      /***/
    },
    /* 17 */
    /***/ function(module, exports) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       * @typechecks
       *
       */

      /*eslint-disable no-self-compare */

      "use strict";

      var hasOwnProperty = Object.prototype.hasOwnProperty;

      /**
       * inlined Object.is polyfill to avoid requiring consumers ship their own
       * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
       */
      function is(x, y) {
        // SameValue algorithm
        if (x === y) {
          // Steps 1-5, 7-10
          // Steps 6.b-6.e: +0 != -0
          // Added the nonzero y check to make Flow happy, but it is redundant
          return x !== 0 || y !== 0 || 1 / x === 1 / y;
        } else {
          // Step 6.a: NaN == NaN
          return x !== x && y !== y;
        }
      }

      /**
       * Performs equality by iterating through keys on an object and returning false
       * when any key has values which are not strictly equal between the arguments.
       * Returns true when the values of all keys are strictly equal.
       */
      function shallowEqual(objA, objB) {
        if (is(objA, objB)) {
          return true;
        }

        if (
          typeof objA !== "object" ||
          objA === null ||
          typeof objB !== "object" ||
          objB === null
        ) {
          return false;
        }

        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);

        if (keysA.length !== keysB.length) {
          return false;
        }

        // Test for A's keys different from B.
        for (var i = 0; i < keysA.length; i++) {
          if (
            !hasOwnProperty.call(objB, keysA[i]) ||
            !is(objA[keysA[i]], objB[keysA[i]])
          ) {
            return false;
          }
        }

        return true;
      }

      module.exports = shallowEqual;

      /***/
    },
    /* 18 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       *
       */

      var isTextNode = __webpack_require__(19);

      /*eslint-disable no-bitwise */

      /**
       * Checks if a given DOM node contains or is another DOM node.
       */
      function containsNode(outerNode, innerNode) {
        if (!outerNode || !innerNode) {
          return false;
        } else if (outerNode === innerNode) {
          return true;
        } else if (isTextNode(outerNode)) {
          return false;
        } else if (isTextNode(innerNode)) {
          return containsNode(outerNode, innerNode.parentNode);
        } else if ("contains" in outerNode) {
          return outerNode.contains(innerNode);
        } else if (outerNode.compareDocumentPosition) {
          return !!(outerNode.compareDocumentPosition(innerNode) & 16);
        } else {
          return false;
        }
      }

      module.exports = containsNode;

      /***/
    },
    /* 19 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       * @typechecks
       */

      var isNode = __webpack_require__(20);

      /**
       * @param {*} object The object to check.
       * @return {boolean} Whether or not the object is a DOM text node.
       */
      function isTextNode(object) {
        return isNode(object) && object.nodeType == 3;
      }

      module.exports = isTextNode;

      /***/
    },
    /* 20 */
    /***/ function(module, exports) {
      "use strict";

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       * @typechecks
       */

      /**
       * @param {*} object The object to check.
       * @return {boolean} Whether or not the object is a DOM node.
       */
      function isNode(object) {
        var doc = object ? object.ownerDocument || object : document;
        var defaultView = doc.defaultView || window;
        return !!(
          object &&
          (typeof defaultView.Node === "function"
            ? object instanceof defaultView.Node
            : typeof object === "object" &&
              typeof object.nodeType === "number" &&
              typeof object.nodeName === "string")
        );
      }

      module.exports = isNode;

      /***/
    },
    /* 21 */
    /***/ function(module, exports) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       */

      "use strict";

      /**
       * @param {DOMElement} node input/textarea to focus
       */

      function focusNode(node) {
        // IE8 can throw "Can't move focus to the control because it is invisible,
        // not enabled, or of a type that does not accept the focus." for all kinds of
        // reasons that are too expensive and fragile to test.
        try {
          node.focus();
        } catch (e) {}
      }

      module.exports = focusNode;

      /***/
    },
    /* 22 */
    /***/ function(module, exports, __webpack_require__) {
      /** @license React v16.1.0
       * react-dom.development.js
       *
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      "use strict";

      if (undefined !== "production") {
        (function() {
          "use strict";

          var React = __webpack_require__(2);
          var invariant = __webpack_require__(8);
          var warning = __webpack_require__(9);
          var ExecutionEnvironment = __webpack_require__(14);
          var _assign = __webpack_require__(4);
          var emptyFunction$1 = __webpack_require__(6);
          var EventListener = __webpack_require__(15);
          var getActiveElement = __webpack_require__(16);
          var shallowEqual = __webpack_require__(17);
          var containsNode = __webpack_require__(18);
          var focusNode = __webpack_require__(21);
          var emptyObject = __webpack_require__(5);
          var checkPropTypes = __webpack_require__(10);
          var hyphenateStyleName = __webpack_require__(23);
          var camelizeStyleName = __webpack_require__(25);

          /**
           * WARNING: DO NOT manually require this module.
           * This is a replacement for `invariant(...)` used by the error code system
           * and will _only_ be required by the corresponding babel pass.
           * It always throws.
           */

          !React
            ? invariant(
                false,
                "ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM."
              )
            : void 0;

          // These attributes should be all lowercase to allow for
          // case insensitive checks
          var RESERVED_PROPS = {
            children: true,
            dangerouslySetInnerHTML: true,
            defaultValue: true,
            defaultChecked: true,
            innerHTML: true,
            suppressContentEditableWarning: true,
            suppressHydrationWarning: true,
            style: true
          };

          function checkMask(value, bitmask) {
            return (value & bitmask) === bitmask;
          }

          var DOMPropertyInjection = {
            /**
             * Mapping from normalized, camelcased property names to a configuration that
             * specifies how the associated DOM property should be accessed or rendered.
             */
            MUST_USE_PROPERTY: 0x1,
            HAS_BOOLEAN_VALUE: 0x4,
            HAS_NUMERIC_VALUE: 0x8,
            HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
            HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
            HAS_STRING_BOOLEAN_VALUE: 0x40,

            /**
             * Inject some specialized knowledge about the DOM. This takes a config object
             * with the following properties:
             *
             * Properties: object mapping DOM property name to one of the
             * DOMPropertyInjection constants or null. If your attribute isn't in here,
             * it won't get written to the DOM.
             *
             * DOMAttributeNames: object mapping React attribute name to the DOM
             * attribute name. Attribute names not specified use the **lowercase**
             * normalized name.
             *
             * DOMAttributeNamespaces: object mapping React attribute name to the DOM
             * attribute namespace URL. (Attribute names not specified use no namespace.)
             *
             * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
             * Property names not specified use the normalized name.
             *
             * DOMMutationMethods: Properties that require special mutation methods. If
             * `value` is undefined, the mutation method should unset the property.
             *
             * @param {object} domPropertyConfig the config as described above.
             */
            injectDOMPropertyConfig: function(domPropertyConfig) {
              var Injection = DOMPropertyInjection;
              var Properties = domPropertyConfig.Properties || {};
              var DOMAttributeNamespaces =
                domPropertyConfig.DOMAttributeNamespaces || {};
              var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
              var DOMMutationMethods =
                domPropertyConfig.DOMMutationMethods || {};

              for (var propName in Properties) {
                !!properties.hasOwnProperty(propName)
                  ? invariant(
                      false,
                      "injectDOMPropertyConfig(...): You're trying to inject DOM property '%s' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.",
                      propName
                    )
                  : void 0;

                var lowerCased = propName.toLowerCase();
                var propConfig = Properties[propName];

                var propertyInfo = {
                  attributeName: lowerCased,
                  attributeNamespace: null,
                  propertyName: propName,
                  mutationMethod: null,

                  mustUseProperty: checkMask(
                    propConfig,
                    Injection.MUST_USE_PROPERTY
                  ),
                  hasBooleanValue: checkMask(
                    propConfig,
                    Injection.HAS_BOOLEAN_VALUE
                  ),
                  hasNumericValue: checkMask(
                    propConfig,
                    Injection.HAS_NUMERIC_VALUE
                  ),
                  hasPositiveNumericValue: checkMask(
                    propConfig,
                    Injection.HAS_POSITIVE_NUMERIC_VALUE
                  ),
                  hasOverloadedBooleanValue: checkMask(
                    propConfig,
                    Injection.HAS_OVERLOADED_BOOLEAN_VALUE
                  ),
                  hasStringBooleanValue: checkMask(
                    propConfig,
                    Injection.HAS_STRING_BOOLEAN_VALUE
                  )
                };
                !(
                  propertyInfo.hasBooleanValue +
                    propertyInfo.hasNumericValue +
                    propertyInfo.hasOverloadedBooleanValue <=
                  1
                )
                  ? invariant(
                      false,
                      "DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s",
                      propName
                    )
                  : void 0;

                if (DOMAttributeNames.hasOwnProperty(propName)) {
                  var attributeName = DOMAttributeNames[propName];

                  propertyInfo.attributeName = attributeName;
                }

                if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
                  propertyInfo.attributeNamespace =
                    DOMAttributeNamespaces[propName];
                }

                if (DOMMutationMethods.hasOwnProperty(propName)) {
                  propertyInfo.mutationMethod = DOMMutationMethods[propName];
                }

                // Downcase references to whitelist properties to check for membership
                // without case-sensitivity. This allows the whitelist to pick up
                // `allowfullscreen`, which should be written using the property configuration
                // for `allowFullscreen`
                properties[propName] = propertyInfo;
              }
            }
          };

          /* eslint-disable max-len */
          var ATTRIBUTE_NAME_START_CHAR =
            ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
          /* eslint-enable max-len */
          var ATTRIBUTE_NAME_CHAR =
            ATTRIBUTE_NAME_START_CHAR +
            "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";

          var ROOT_ATTRIBUTE_NAME = "data-reactroot";

          /**
           * Map from property "standard name" to an object with info about how to set
           * the property in the DOM. Each object contains:
           *
           * attributeName:
           *   Used when rendering markup or with `*Attribute()`.
           * attributeNamespace
           * propertyName:
           *   Used on DOM node instances. (This includes properties that mutate due to
           *   external factors.)
           * mutationMethod:
           *   If non-null, used instead of the property or `setAttribute()` after
           *   initial render.
           * mustUseProperty:
           *   Whether the property must be accessed and mutated as an object property.
           * hasBooleanValue:
           *   Whether the property should be removed when set to a falsey value.
           * hasNumericValue:
           *   Whether the property must be numeric or parse as a numeric and should be
           *   removed when set to a falsey value.
           * hasPositiveNumericValue:
           *   Whether the property must be positive numeric or parse as a positive
           *   numeric and should be removed when set to a falsey value.
           * hasOverloadedBooleanValue:
           *   Whether the property can be used as a flag as well as with a value.
           *   Removed when strictly equal to false; present without a value when
           *   strictly equal to true; present with a value otherwise.
           */
          var properties = {};

          /**
           * Checks whether a property name is a writeable attribute.
           * @method
           */
          function shouldSetAttribute(name, value) {
            if (isReservedProp(name)) {
              return false;
            }
            if (
              name.length > 2 &&
              (name[0] === "o" || name[0] === "O") &&
              (name[1] === "n" || name[1] === "N")
            ) {
              return false;
            }
            if (value === null) {
              return true;
            }
            switch (typeof value) {
              case "boolean":
                return shouldAttributeAcceptBooleanValue(name);
              case "undefined":
              case "number":
              case "string":
              case "object":
                return true;
              default:
                // function, symbol
                return false;
            }
          }

          function getPropertyInfo(name) {
            return properties.hasOwnProperty(name) ? properties[name] : null;
          }

          function shouldAttributeAcceptBooleanValue(name) {
            if (isReservedProp(name)) {
              return true;
            }
            var propertyInfo = getPropertyInfo(name);
            if (propertyInfo) {
              return (
                propertyInfo.hasBooleanValue ||
                propertyInfo.hasStringBooleanValue ||
                propertyInfo.hasOverloadedBooleanValue
              );
            }
            var prefix = name.toLowerCase().slice(0, 5);
            return prefix === "data-" || prefix === "aria-";
          }

          /**
           * Checks to see if a property name is within the list of properties
           * reserved for internal React operations. These properties should
           * not be set on an HTML element.
           *
           * @private
           * @param {string} name
           * @return {boolean} If the name is within reserved props
           */
          function isReservedProp(name) {
            return RESERVED_PROPS.hasOwnProperty(name);
          }

          var injection = DOMPropertyInjection;

          var MUST_USE_PROPERTY = injection.MUST_USE_PROPERTY;
          var HAS_BOOLEAN_VALUE = injection.HAS_BOOLEAN_VALUE;
          var HAS_NUMERIC_VALUE = injection.HAS_NUMERIC_VALUE;
          var HAS_POSITIVE_NUMERIC_VALUE = injection.HAS_POSITIVE_NUMERIC_VALUE;
          var HAS_OVERLOADED_BOOLEAN_VALUE =
            injection.HAS_OVERLOADED_BOOLEAN_VALUE;
          var HAS_STRING_BOOLEAN_VALUE = injection.HAS_STRING_BOOLEAN_VALUE;

          var HTMLDOMPropertyConfig = {
            // When adding attributes to this list, be sure to also add them to
            // the `possibleStandardNames` module to ensure casing and incorrect
            // name warnings.
            Properties: {
              allowFullScreen: HAS_BOOLEAN_VALUE,
              autoFocus: HAS_STRING_BOOLEAN_VALUE,
              // specifies target context for links with `preload` type
              async: HAS_BOOLEAN_VALUE,
              // autoFocus is polyfilled/normalized by AutoFocusUtils
              // autoFocus: HAS_BOOLEAN_VALUE,
              autoPlay: HAS_BOOLEAN_VALUE,
              capture: HAS_BOOLEAN_VALUE,
              checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
              cols: HAS_POSITIVE_NUMERIC_VALUE,
              contentEditable: HAS_STRING_BOOLEAN_VALUE,
              controls: HAS_BOOLEAN_VALUE,
              default: HAS_BOOLEAN_VALUE,
              defer: HAS_BOOLEAN_VALUE,
              disabled: HAS_BOOLEAN_VALUE,
              download: HAS_OVERLOADED_BOOLEAN_VALUE,
              draggable: HAS_STRING_BOOLEAN_VALUE,
              formNoValidate: HAS_BOOLEAN_VALUE,
              hidden: HAS_BOOLEAN_VALUE,
              loop: HAS_BOOLEAN_VALUE,
              // Caution; `option.selected` is not updated if `select.multiple` is
              // disabled with `removeAttribute`.
              multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
              muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
              noValidate: HAS_BOOLEAN_VALUE,
              open: HAS_BOOLEAN_VALUE,
              playsInline: HAS_BOOLEAN_VALUE,
              readOnly: HAS_BOOLEAN_VALUE,
              required: HAS_BOOLEAN_VALUE,
              reversed: HAS_BOOLEAN_VALUE,
              rows: HAS_POSITIVE_NUMERIC_VALUE,
              rowSpan: HAS_NUMERIC_VALUE,
              scoped: HAS_BOOLEAN_VALUE,
              seamless: HAS_BOOLEAN_VALUE,
              selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
              size: HAS_POSITIVE_NUMERIC_VALUE,
              start: HAS_NUMERIC_VALUE,
              // support for projecting regular DOM Elements via V1 named slots ( shadow dom )
              span: HAS_POSITIVE_NUMERIC_VALUE,
              spellCheck: HAS_STRING_BOOLEAN_VALUE,
              // Style must be explicitly set in the attribute list. React components
              // expect a style object
              style: 0,
              // Keep it in the whitelist because it is case-sensitive for SVG.
              tabIndex: 0,
              // itemScope is for for Microdata support.
              // See http://schema.org/docs/gs.html
              itemScope: HAS_BOOLEAN_VALUE,
              // These attributes must stay in the white-list because they have
              // different attribute names (see DOMAttributeNames below)
              acceptCharset: 0,
              className: 0,
              htmlFor: 0,
              httpEquiv: 0,
              // Attributes with mutation methods must be specified in the whitelist
              // Set the string boolean flag to allow the behavior
              value: HAS_STRING_BOOLEAN_VALUE
            },
            DOMAttributeNames: {
              acceptCharset: "accept-charset",
              className: "class",
              htmlFor: "for",
              httpEquiv: "http-equiv"
            },
            DOMMutationMethods: {
              value: function(node, value) {
                if (value == null) {
                  return node.removeAttribute("value");
                }

                // Number inputs get special treatment due to some edge cases in
                // Chrome. Let everything else assign the value attribute as normal.
                // https://github.com/facebook/react/issues/7253#issuecomment-236074326
                if (
                  node.type !== "number" ||
                  node.hasAttribute("value") === false
                ) {
                  node.setAttribute("value", "" + value);
                } else if (
                  node.validity &&
                  !node.validity.badInput &&
                  node.ownerDocument.activeElement !== node
                ) {
                  // Don't assign an attribute if validation reports bad
                  // input. Chrome will clear the value. Additionally, don't
                  // operate on inputs that have focus, otherwise Chrome might
                  // strip off trailing decimal places and cause the user's
                  // cursor position to jump to the beginning of the input.
                  //
                  // In ReactDOMInput, we have an onBlur event that will trigger
                  // this function again when focus is lost.
                  node.setAttribute("value", "" + value);
                }
              }
            }
          };

          var HAS_STRING_BOOLEAN_VALUE$1 = injection.HAS_STRING_BOOLEAN_VALUE;

          var NS = {
            xlink: "http://www.w3.org/1999/xlink",
            xml: "http://www.w3.org/XML/1998/namespace"
          };

          /**
           * This is a list of all SVG attributes that need special casing,
           * namespacing, or boolean value assignment.
           *
           * When adding attributes to this list, be sure to also add them to
           * the `possibleStandardNames` module to ensure casing and incorrect
           * name warnings.
           *
           * SVG Attributes List:
           * https://www.w3.org/TR/SVG/attindex.html
           * SMIL Spec:
           * https://www.w3.org/TR/smil
           */
          var ATTRS = [
            "accent-height",
            "alignment-baseline",
            "arabic-form",
            "baseline-shift",
            "cap-height",
            "clip-path",
            "clip-rule",
            "color-interpolation",
            "color-interpolation-filters",
            "color-profile",
            "color-rendering",
            "dominant-baseline",
            "enable-background",
            "fill-opacity",
            "fill-rule",
            "flood-color",
            "flood-opacity",
            "font-family",
            "font-size",
            "font-size-adjust",
            "font-stretch",
            "font-style",
            "font-variant",
            "font-weight",
            "glyph-name",
            "glyph-orientation-horizontal",
            "glyph-orientation-vertical",
            "horiz-adv-x",
            "horiz-origin-x",
            "image-rendering",
            "letter-spacing",
            "lighting-color",
            "marker-end",
            "marker-mid",
            "marker-start",
            "overline-position",
            "overline-thickness",
            "paint-order",
            "panose-1",
            "pointer-events",
            "rendering-intent",
            "shape-rendering",
            "stop-color",
            "stop-opacity",
            "strikethrough-position",
            "strikethrough-thickness",
            "stroke-dasharray",
            "stroke-dashoffset",
            "stroke-linecap",
            "stroke-linejoin",
            "stroke-miterlimit",
            "stroke-opacity",
            "stroke-width",
            "text-anchor",
            "text-decoration",
            "text-rendering",
            "underline-position",
            "underline-thickness",
            "unicode-bidi",
            "unicode-range",
            "units-per-em",
            "v-alphabetic",
            "v-hanging",
            "v-ideographic",
            "v-mathematical",
            "vector-effect",
            "vert-adv-y",
            "vert-origin-x",
            "vert-origin-y",
            "word-spacing",
            "writing-mode",
            "x-height",
            "xlink:actuate",
            "xlink:arcrole",
            "xlink:href",
            "xlink:role",
            "xlink:show",
            "xlink:title",
            "xlink:type",
            "xml:base",
            "xmlns:xlink",
            "xml:lang",
            "xml:space"
          ];

          var SVGDOMPropertyConfig = {
            Properties: {
              autoReverse: HAS_STRING_BOOLEAN_VALUE$1,
              externalResourcesRequired: HAS_STRING_BOOLEAN_VALUE$1,
              preserveAlpha: HAS_STRING_BOOLEAN_VALUE$1
            },
            DOMAttributeNames: {
              autoReverse: "autoReverse",
              externalResourcesRequired: "externalResourcesRequired",
              preserveAlpha: "preserveAlpha"
            },
            DOMAttributeNamespaces: {
              xlinkActuate: NS.xlink,
              xlinkArcrole: NS.xlink,
              xlinkHref: NS.xlink,
              xlinkRole: NS.xlink,
              xlinkShow: NS.xlink,
              xlinkTitle: NS.xlink,
              xlinkType: NS.xlink,
              xmlBase: NS.xml,
              xmlLang: NS.xml,
              xmlSpace: NS.xml
            }
          };

          var CAMELIZE = /[\-\:]([a-z])/g;
          var capitalize = function(token) {
            return token[1].toUpperCase();
          };

          ATTRS.forEach(function(original) {
            var reactName = original.replace(CAMELIZE, capitalize);

            SVGDOMPropertyConfig.Properties[reactName] = 0;
            SVGDOMPropertyConfig.DOMAttributeNames[reactName] = original;
          });

          injection.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
          injection.injectDOMPropertyConfig(SVGDOMPropertyConfig);

          var ReactErrorUtils = {
            // Used by Fiber to simulate a try-catch.
            _caughtError: null,
            _hasCaughtError: false,

            // Used by event system to capture/rethrow the first error.
            _rethrowError: null,
            _hasRethrowError: false,

            injection: {
              injectErrorUtils: function(injectedErrorUtils) {
                !(
                  typeof injectedErrorUtils.invokeGuardedCallback === "function"
                )
                  ? invariant(
                      false,
                      "Injected invokeGuardedCallback() must be a function."
                    )
                  : void 0;
                invokeGuardedCallback =
                  injectedErrorUtils.invokeGuardedCallback;
              }
            },

            /**
             * Call a function while guarding against errors that happens within it.
             * Returns an error if it throws, otherwise null.
             *
             * In production, this is implemented using a try-catch. The reason we don't
             * use a try-catch directly is so that we can swap out a different
             * implementation in DEV mode.
             *
             * @param {String} name of the guard to use for logging or debugging
             * @param {Function} func The function to invoke
             * @param {*} context The context to use when calling the function
             * @param {...*} args Arguments for function
             */
            invokeGuardedCallback: function(
              name,
              func,
              context,
              a,
              b,
              c,
              d,
              e,
              f
            ) {
              invokeGuardedCallback.apply(ReactErrorUtils, arguments);
            },

            /**
             * Same as invokeGuardedCallback, but instead of returning an error, it stores
             * it in a global so it can be rethrown by `rethrowCaughtError` later.
             * TODO: See if _caughtError and _rethrowError can be unified.
             *
             * @param {String} name of the guard to use for logging or debugging
             * @param {Function} func The function to invoke
             * @param {*} context The context to use when calling the function
             * @param {...*} args Arguments for function
             */
            invokeGuardedCallbackAndCatchFirstError: function(
              name,
              func,
              context,
              a,
              b,
              c,
              d,
              e,
              f
            ) {
              ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);
              if (ReactErrorUtils.hasCaughtError()) {
                var error = ReactErrorUtils.clearCaughtError();
                if (!ReactErrorUtils._hasRethrowError) {
                  ReactErrorUtils._hasRethrowError = true;
                  ReactErrorUtils._rethrowError = error;
                }
              }
            },

            /**
             * During execution of guarded functions we will capture the first error which
             * we will rethrow to be handled by the top level error handler.
             */
            rethrowCaughtError: function() {
              return rethrowCaughtError.apply(ReactErrorUtils, arguments);
            },

            hasCaughtError: function() {
              return ReactErrorUtils._hasCaughtError;
            },

            clearCaughtError: function() {
              if (ReactErrorUtils._hasCaughtError) {
                var error = ReactErrorUtils._caughtError;
                ReactErrorUtils._caughtError = null;
                ReactErrorUtils._hasCaughtError = false;
                return error;
              } else {
                invariant(
                  false,
                  "clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."
                );
              }
            }
          };

          var invokeGuardedCallback = function(
            name,
            func,
            context,
            a,
            b,
            c,
            d,
            e,
            f
          ) {
            ReactErrorUtils._hasCaughtError = false;
            ReactErrorUtils._caughtError = null;
            var funcArgs = Array.prototype.slice.call(arguments, 3);
            try {
              func.apply(context, funcArgs);
            } catch (error) {
              ReactErrorUtils._caughtError = error;
              ReactErrorUtils._hasCaughtError = true;
            }
          };

          {
            // In DEV mode, we swap out invokeGuardedCallback for a special version
            // that plays more nicely with the browser's DevTools. The idea is to preserve
            // "Pause on exceptions" behavior. Because React wraps all user-provided
            // functions in invokeGuardedCallback, and the production version of
            // invokeGuardedCallback uses a try-catch, all user exceptions are treated
            // like caught exceptions, and the DevTools won't pause unless the developer
            // takes the extra step of enabling pause on caught exceptions. This is
            // untintuitive, though, because even though React has caught the error, from
            // the developer's perspective, the error is uncaught.
            //
            // To preserve the expected "Pause on exceptions" behavior, we don't use a
            // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
            // DOM node, and call the user-provided callback from inside an event handler
            // for that fake event. If the callback throws, the error is "captured" using
            // a global event handler. But because the error happens in a different
            // event loop context, it does not interrupt the normal program flow.
            // Effectively, this gives us try-catch behavior without actually using
            // try-catch. Neat!

            // Check that the browser supports the APIs we need to implement our special
            // DEV version of invokeGuardedCallback
            if (
              typeof window !== "undefined" &&
              typeof window.dispatchEvent === "function" &&
              typeof document !== "undefined" &&
              typeof document.createEvent === "function"
            ) {
              var fakeNode = document.createElement("react");

              var invokeGuardedCallbackDev = function(
                name,
                func,
                context,
                a,
                b,
                c,
                d,
                e,
                f
              ) {
                // Keeps track of whether the user-provided callback threw an error. We
                // set this to true at the beginning, then set it to false right after
                // calling the function. If the function errors, `didError` will never be
                // set to false. This strategy works even if the browser is flaky and
                // fails to call our global error handler, because it doesn't rely on
                // the error event at all.
                var didError = true;

                // Create an event handler for our fake event. We will synchronously
                // dispatch our fake event using `dispatchEvent`. Inside the handler, we
                // call the user-provided callback.
                var funcArgs = Array.prototype.slice.call(arguments, 3);
                function callCallback() {
                  // We immediately remove the callback from event listeners so that
                  // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
                  // nested call would trigger the fake event handlers of any call higher
                  // in the stack.
                  fakeNode.removeEventListener(evtType, callCallback, false);
                  func.apply(context, funcArgs);
                  didError = false;
                }

                // Create a global error event handler. We use this to capture the value
                // that was thrown. It's possible that this error handler will fire more
                // than once; for example, if non-React code also calls `dispatchEvent`
                // and a handler for that event throws. We should be resilient to most of
                // those cases. Even if our error event handler fires more than once, the
                // last error event is always used. If the callback actually does error,
                // we know that the last error event is the correct one, because it's not
                // possible for anything else to have happened in between our callback
                // erroring and the code that follows the `dispatchEvent` call below. If
                // the callback doesn't error, but the error event was fired, we know to
                // ignore it because `didError` will be false, as described above.
                var error = void 0;
                // Use this to track whether the error event is ever called.
                var didSetError = false;
                var isCrossOriginError = false;

                function onError(event) {
                  error = event.error;
                  didSetError = true;
                  if (
                    error === null &&
                    event.colno === 0 &&
                    event.lineno === 0
                  ) {
                    isCrossOriginError = true;
                  }
                }

                // Create a fake event type.
                var evtType =
                  "react-" + (name ? name : "invokeguardedcallback");

                // Attach our event handlers
                window.addEventListener("error", onError);
                fakeNode.addEventListener(evtType, callCallback, false);

                // Synchronously dispatch our fake event. If the user-provided function
                // errors, it will trigger our global error handler.
                var evt = document.createEvent("Event");
                evt.initEvent(evtType, false, false);
                fakeNode.dispatchEvent(evt);

                if (didError) {
                  if (!didSetError) {
                    // The callback errored, but the error event never fired.
                    error = new Error(
                      "An error was thrown inside one of your components, but React " +
                        "doesn't know what it was. This is likely due to browser " +
                        'flakiness. React does its best to preserve the "Pause on ' +
                        'exceptions" behavior of the DevTools, which requires some ' +
                        "DEV-mode only tricks. It's possible that these don't work in " +
                        "your browser. Try triggering the error in production mode, " +
                        "or switching to a modern browser. If you suspect that this is " +
                        "actually an issue with React, please file an issue."
                    );
                  } else if (isCrossOriginError) {
                    error = new Error(
                      "A cross-origin error was thrown. React doesn't have access to " +
                        "the actual error object in development. " +
                        "See https://fb.me/react-crossorigin-error for more information."
                    );
                  }
                  ReactErrorUtils._hasCaughtError = true;
                  ReactErrorUtils._caughtError = error;
                } else {
                  ReactErrorUtils._hasCaughtError = false;
                  ReactErrorUtils._caughtError = null;
                }

                // Remove our event listeners
                window.removeEventListener("error", onError);
              };

              invokeGuardedCallback = invokeGuardedCallbackDev;
            }
          }

          var rethrowCaughtError = function() {
            if (ReactErrorUtils._hasRethrowError) {
              var error = ReactErrorUtils._rethrowError;
              ReactErrorUtils._rethrowError = null;
              ReactErrorUtils._hasRethrowError = false;
              throw error;
            }
          };

          /**
           * Injectable ordering of event plugins.
           */
          var eventPluginOrder = null;

          /**
           * Injectable mapping from names to event plugin modules.
           */
          var namesToPlugins = {};

          /**
           * Recomputes the plugin list using the injected plugins and plugin ordering.
           *
           * @private
           */
          function recomputePluginOrdering() {
            if (!eventPluginOrder) {
              // Wait until an `eventPluginOrder` is injected.
              return;
            }
            for (var pluginName in namesToPlugins) {
              var pluginModule = namesToPlugins[pluginName];
              var pluginIndex = eventPluginOrder.indexOf(pluginName);
              !(pluginIndex > -1)
                ? invariant(
                    false,
                    "EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.",
                    pluginName
                  )
                : void 0;
              if (plugins[pluginIndex]) {
                continue;
              }
              !pluginModule.extractEvents
                ? invariant(
                    false,
                    "EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.",
                    pluginName
                  )
                : void 0;
              plugins[pluginIndex] = pluginModule;
              var publishedEvents = pluginModule.eventTypes;
              for (var eventName in publishedEvents) {
                !publishEventForPlugin(
                  publishedEvents[eventName],
                  pluginModule,
                  eventName
                )
                  ? invariant(
                      false,
                      "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.",
                      eventName,
                      pluginName
                    )
                  : void 0;
              }
            }
          }

          /**
           * Publishes an event so that it can be dispatched by the supplied plugin.
           *
           * @param {object} dispatchConfig Dispatch configuration for the event.
           * @param {object} PluginModule Plugin publishing the event.
           * @return {boolean} True if the event was successfully published.
           * @private
           */
          function publishEventForPlugin(
            dispatchConfig,
            pluginModule,
            eventName
          ) {
            !!eventNameDispatchConfigs.hasOwnProperty(eventName)
              ? invariant(
                  false,
                  "EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.",
                  eventName
                )
              : void 0;
            eventNameDispatchConfigs[eventName] = dispatchConfig;

            var phasedRegistrationNames =
              dispatchConfig.phasedRegistrationNames;
            if (phasedRegistrationNames) {
              for (var phaseName in phasedRegistrationNames) {
                if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
                  var phasedRegistrationName =
                    phasedRegistrationNames[phaseName];
                  publishRegistrationName(
                    phasedRegistrationName,
                    pluginModule,
                    eventName
                  );
                }
              }
              return true;
            } else if (dispatchConfig.registrationName) {
              publishRegistrationName(
                dispatchConfig.registrationName,
                pluginModule,
                eventName
              );
              return true;
            }
            return false;
          }

          /**
           * Publishes a registration name that is used to identify dispatched events.
           *
           * @param {string} registrationName Registration name to add.
           * @param {object} PluginModule Plugin publishing the event.
           * @private
           */
          function publishRegistrationName(
            registrationName,
            pluginModule,
            eventName
          ) {
            !!registrationNameModules[registrationName]
              ? invariant(
                  false,
                  "EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.",
                  registrationName
                )
              : void 0;
            registrationNameModules[registrationName] = pluginModule;
            registrationNameDependencies[registrationName] =
              pluginModule.eventTypes[eventName].dependencies;

            {
              var lowerCasedName = registrationName.toLowerCase();
              possibleRegistrationNames[lowerCasedName] = registrationName;

              if (registrationName === "onDoubleClick") {
                possibleRegistrationNames.ondblclick = registrationName;
              }
            }
          }

          /**
           * Registers plugins so that they can extract and dispatch events.
           *
           * @see {EventPluginHub}
           */

          /**
           * Ordered list of injected plugins.
           */
          var plugins = [];

          /**
           * Mapping from event name to dispatch config
           */
          var eventNameDispatchConfigs = {};

          /**
           * Mapping from registration name to plugin module
           */
          var registrationNameModules = {};

          /**
           * Mapping from registration name to event name
           */
          var registrationNameDependencies = {};

          /**
           * Mapping from lowercase registration names to the properly cased version,
           * used to warn in the case of missing event handlers. Available
           * only in true.
           * @type {Object}
           */
          var possibleRegistrationNames = {};
          // Trust the developer to only use possibleRegistrationNames in true

          /**
           * Injects an ordering of plugins (by plugin name). This allows the ordering
           * to be decoupled from injection of the actual plugins so that ordering is
           * always deterministic regardless of packaging, on-the-fly injection, etc.
           *
           * @param {array} InjectedEventPluginOrder
           * @internal
           * @see {EventPluginHub.injection.injectEventPluginOrder}
           */
          function injectEventPluginOrder(injectedEventPluginOrder) {
            !!eventPluginOrder
              ? invariant(
                  false,
                  "EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."
                )
              : void 0;
            // Clone the ordering so it cannot be dynamically mutated.
            eventPluginOrder = Array.prototype.slice.call(
              injectedEventPluginOrder
            );
            recomputePluginOrdering();
          }

          /**
           * Injects plugins to be used by `EventPluginHub`. The plugin names must be
           * in the ordering injected by `injectEventPluginOrder`.
           *
           * Plugins can be injected as part of page initialization or on-the-fly.
           *
           * @param {object} injectedNamesToPlugins Map from names to plugin modules.
           * @internal
           * @see {EventPluginHub.injection.injectEventPluginsByName}
           */
          function injectEventPluginsByName(injectedNamesToPlugins) {
            var isOrderingDirty = false;
            for (var pluginName in injectedNamesToPlugins) {
              if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
                continue;
              }
              var pluginModule = injectedNamesToPlugins[pluginName];
              if (
                !namesToPlugins.hasOwnProperty(pluginName) ||
                namesToPlugins[pluginName] !== pluginModule
              ) {
                !!namesToPlugins[pluginName]
                  ? invariant(
                      false,
                      "EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.",
                      pluginName
                    )
                  : void 0;
                namesToPlugins[pluginName] = pluginModule;
                isOrderingDirty = true;
              }
            }
            if (isOrderingDirty) {
              recomputePluginOrdering();
            }
          }

          var EventPluginRegistry = Object.freeze({
            plugins: plugins,
            eventNameDispatchConfigs: eventNameDispatchConfigs,
            registrationNameModules: registrationNameModules,
            registrationNameDependencies: registrationNameDependencies,
            possibleRegistrationNames: possibleRegistrationNames,
            injectEventPluginOrder: injectEventPluginOrder,
            injectEventPluginsByName: injectEventPluginsByName
          });

          var getFiberCurrentPropsFromNode = null;
          var getInstanceFromNode = null;
          var getNodeFromInstance = null;

          var injection$2 = {
            injectComponentTree: function(Injected) {
              getFiberCurrentPropsFromNode =
                Injected.getFiberCurrentPropsFromNode;
              getInstanceFromNode = Injected.getInstanceFromNode;
              getNodeFromInstance = Injected.getNodeFromInstance;

              {
                warning(
                  getNodeFromInstance && getInstanceFromNode,
                  "EventPluginUtils.injection.injectComponentTree(...): Injected " +
                    "module is missing getNodeFromInstance or getInstanceFromNode."
                );
              }
            }
          };

          var validateEventDispatches;
          {
            validateEventDispatches = function(event) {
              var dispatchListeners = event._dispatchListeners;
              var dispatchInstances = event._dispatchInstances;

              var listenersIsArr = Array.isArray(dispatchListeners);
              var listenersLen = listenersIsArr
                ? dispatchListeners.length
                : dispatchListeners ? 1 : 0;

              var instancesIsArr = Array.isArray(dispatchInstances);
              var instancesLen = instancesIsArr
                ? dispatchInstances.length
                : dispatchInstances ? 1 : 0;

              warning(
                instancesIsArr === listenersIsArr &&
                  instancesLen === listenersLen,
                "EventPluginUtils: Invalid `event`."
              );
            };
          }

          /**
           * Dispatch the event to the listener.
           * @param {SyntheticEvent} event SyntheticEvent to handle
           * @param {boolean} simulated If the event is simulated (changes exn behavior)
           * @param {function} listener Application-level callback
           * @param {*} inst Internal component instance
           */
          function executeDispatch(event, simulated, listener, inst) {
            var type = event.type || "unknown-event";
            event.currentTarget = getNodeFromInstance(inst);
            ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError(
              type,
              listener,
              undefined,
              event
            );
            event.currentTarget = null;
          }

          /**
           * Standard/simple iteration through an event's collected dispatches.
           */
          function executeDispatchesInOrder(event, simulated) {
            var dispatchListeners = event._dispatchListeners;
            var dispatchInstances = event._dispatchInstances;
            {
              validateEventDispatches(event);
            }
            if (Array.isArray(dispatchListeners)) {
              for (var i = 0; i < dispatchListeners.length; i++) {
                if (event.isPropagationStopped()) {
                  break;
                }
                // Listeners and Instances are two parallel arrays that are always in sync.
                executeDispatch(
                  event,
                  simulated,
                  dispatchListeners[i],
                  dispatchInstances[i]
                );
              }
            } else if (dispatchListeners) {
              executeDispatch(
                event,
                simulated,
                dispatchListeners,
                dispatchInstances
              );
            }
            event._dispatchListeners = null;
            event._dispatchInstances = null;
          }

          /**
           * @see executeDispatchesInOrderStopAtTrueImpl
           */

          /**
           * Execution of a "direct" dispatch - there must be at most one dispatch
           * accumulated on the event or it is considered an error. It doesn't really make
           * sense for an event with multiple dispatches (bubbled) to keep track of the
           * return values at each dispatch execution, but it does tend to make sense when
           * dealing with "direct" dispatches.
           *
           * @return {*} The return value of executing the single dispatch.
           */

          /**
           * @param {SyntheticEvent} event
           * @return {boolean} True iff number of dispatches accumulated is greater than 0.
           */

          /**
           * Accumulates items that must not be null or undefined into the first one. This
           * is used to conserve memory by avoiding array allocations, and thus sacrifices
           * API cleanness. Since `current` can be null before being passed in and not
           * null after this function, make sure to assign it back to `current`:
           *
           * `a = accumulateInto(a, b);`
           *
           * This API should be sparingly used. Try `accumulate` for something cleaner.
           *
           * @return {*|array<*>} An accumulation of items.
           */

          function accumulateInto(current, next) {
            !(next != null)
              ? invariant(
                  false,
                  "accumulateInto(...): Accumulated items must not be null or undefined."
                )
              : void 0;

            if (current == null) {
              return next;
            }

            // Both are not empty. Warning: Never call x.concat(y) when you are not
            // certain that x is an Array (x could be a string with concat method).
            if (Array.isArray(current)) {
              if (Array.isArray(next)) {
                current.push.apply(current, next);
                return current;
              }
              current.push(next);
              return current;
            }

            if (Array.isArray(next)) {
              // A bit too dangerous to mutate `next`.
              return [current].concat(next);
            }

            return [current, next];
          }

          /**
           * @param {array} arr an "accumulation" of items which is either an Array or
           * a single item. Useful when paired with the `accumulate` module. This is a
           * simple utility that allows us to reason about a collection of items, but
           * handling the case when there is exactly one item (and we do not need to
           * allocate an array).
           * @param {function} cb Callback invoked with each element or a collection.
           * @param {?} [scope] Scope used as `this` in a callback.
           */
          function forEachAccumulated(arr, cb, scope) {
            if (Array.isArray(arr)) {
              arr.forEach(cb, scope);
            } else if (arr) {
              cb.call(scope, arr);
            }
          }

          /**
           * Internal queue of events that have accumulated their dispatches and are
           * waiting to have their dispatches executed.
           */
          var eventQueue = null;

          /**
           * Dispatches an event and releases it back into the pool, unless persistent.
           *
           * @param {?object} event Synthetic event to be dispatched.
           * @param {boolean} simulated If the event is simulated (changes exn behavior)
           * @private
           */
          var executeDispatchesAndRelease = function(event, simulated) {
            if (event) {
              executeDispatchesInOrder(event, simulated);

              if (!event.isPersistent()) {
                event.constructor.release(event);
              }
            }
          };
          var executeDispatchesAndReleaseSimulated = function(e) {
            return executeDispatchesAndRelease(e, true);
          };
          var executeDispatchesAndReleaseTopLevel = function(e) {
            return executeDispatchesAndRelease(e, false);
          };

          function isInteractive(tag) {
            return (
              tag === "button" ||
              tag === "input" ||
              tag === "select" ||
              tag === "textarea"
            );
          }

          function shouldPreventMouseEvent(name, type, props) {
            switch (name) {
              case "onClick":
              case "onClickCapture":
              case "onDoubleClick":
              case "onDoubleClickCapture":
              case "onMouseDown":
              case "onMouseDownCapture":
              case "onMouseMove":
              case "onMouseMoveCapture":
              case "onMouseUp":
              case "onMouseUpCapture":
                return !!(props.disabled && isInteractive(type));
              default:
                return false;
            }
          }

          /**
           * This is a unified interface for event plugins to be installed and configured.
           *
           * Event plugins can implement the following properties:
           *
           *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
           *     Required. When a top-level event is fired, this method is expected to
           *     extract synthetic events that will in turn be queued and dispatched.
           *
           *   `eventTypes` {object}
           *     Optional, plugins that fire events must publish a mapping of registration
           *     names that are used to register listeners. Values of this mapping must
           *     be objects that contain `registrationName` or `phasedRegistrationNames`.
           *
           *   `executeDispatch` {function(object, function, string)}
           *     Optional, allows plugins to override how an event gets dispatched. By
           *     default, the listener is simply invoked.
           *
           * Each plugin that is injected into `EventsPluginHub` is immediately operable.
           *
           * @public
           */

          /**
           * Methods for injecting dependencies.
           */
          var injection$1 = {
            /**
             * @param {array} InjectedEventPluginOrder
             * @public
             */
            injectEventPluginOrder: injectEventPluginOrder,

            /**
             * @param {object} injectedNamesToPlugins Map from names to plugin modules.
             */
            injectEventPluginsByName: injectEventPluginsByName
          };

          /**
           * @param {object} inst The instance, which is the source of events.
           * @param {string} registrationName Name of listener (e.g. `onClick`).
           * @return {?function} The stored callback.
           */
          function getListener(inst, registrationName) {
            var listener;

            // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
            // live here; needs to be moved to a better place soon
            var stateNode = inst.stateNode;
            if (!stateNode) {
              // Work in progress (ex: onload events in incremental mode).
              return null;
            }
            var props = getFiberCurrentPropsFromNode(stateNode);
            if (!props) {
              // Work in progress.
              return null;
            }
            listener = props[registrationName];
            if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
              return null;
            }
            !(!listener || typeof listener === "function")
              ? invariant(
                  false,
                  "Expected `%s` listener to be a function, instead got a value of `%s` type.",
                  registrationName,
                  typeof listener
                )
              : void 0;
            return listener;
          }

          /**
           * Allows registered plugins an opportunity to extract events from top-level
           * native browser events.
           *
           * @return {*} An accumulation of synthetic events.
           * @internal
           */
          function extractEvents(
            topLevelType,
            targetInst,
            nativeEvent,
            nativeEventTarget
          ) {
            var events;
            for (var i = 0; i < plugins.length; i++) {
              // Not every plugin in the ordering may be loaded at runtime.
              var possiblePlugin = plugins[i];
              if (possiblePlugin) {
                var extractedEvents = possiblePlugin.extractEvents(
                  topLevelType,
                  targetInst,
                  nativeEvent,
                  nativeEventTarget
                );
                if (extractedEvents) {
                  events = accumulateInto(events, extractedEvents);
                }
              }
            }
            return events;
          }

          /**
           * Enqueues a synthetic event that should be dispatched when
           * `processEventQueue` is invoked.
           *
           * @param {*} events An accumulation of synthetic events.
           * @internal
           */
          function enqueueEvents(events) {
            if (events) {
              eventQueue = accumulateInto(eventQueue, events);
            }
          }

          /**
           * Dispatches all synthetic events on the event queue.
           *
           * @internal
           */
          function processEventQueue(simulated) {
            // Set `eventQueue` to null before processing it so that we can tell if more
            // events get enqueued while processing.
            var processingEventQueue = eventQueue;
            eventQueue = null;
            if (simulated) {
              forEachAccumulated(
                processingEventQueue,
                executeDispatchesAndReleaseSimulated
              );
            } else {
              forEachAccumulated(
                processingEventQueue,
                executeDispatchesAndReleaseTopLevel
              );
            }
            !!eventQueue
              ? invariant(
                  false,
                  "processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."
                )
              : void 0;
            // This would be a good time to rethrow if any of the event handlers threw.
            ReactErrorUtils.rethrowCaughtError();
          }

          var EventPluginHub = Object.freeze({
            injection: injection$1,
            getListener: getListener,
            extractEvents: extractEvents,
            enqueueEvents: enqueueEvents,
            processEventQueue: processEventQueue
          });

          var IndeterminateComponent = 0; // Before we know whether it is functional or class
          var FunctionalComponent = 1;
          var ClassComponent = 2;
          var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
          var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
          var HostComponent = 5;
          var HostText = 6;
          var CallComponent = 7;
          var CallHandlerPhase = 8;
          var ReturnComponent = 9;
          var Fragment = 10;

          var randomKey = Math.random()
            .toString(36)
            .slice(2);
          var internalInstanceKey = "__reactInternalInstance$" + randomKey;
          var internalEventHandlersKey = "__reactEventHandlers$" + randomKey;

          function precacheFiberNode$1(hostInst, node) {
            node[internalInstanceKey] = hostInst;
          }

          /**
           * Given a DOM node, return the closest ReactDOMComponent or
           * ReactDOMTextComponent instance ancestor.
           */
          function getClosestInstanceFromNode(node) {
            if (node[internalInstanceKey]) {
              return node[internalInstanceKey];
            }

            // Walk up the tree until we find an ancestor whose instance we have cached.
            var parents = [];
            while (!node[internalInstanceKey]) {
              parents.push(node);
              if (node.parentNode) {
                node = node.parentNode;
              } else {
                // Top of the tree. This node must not be part of a React tree (or is
                // unmounted, potentially).
                return null;
              }
            }

            var closest = void 0;
            var inst = node[internalInstanceKey];
            if (inst.tag === HostComponent || inst.tag === HostText) {
              // In Fiber, this will always be the deepest root.
              return inst;
            }
            for (
              ;
              node && (inst = node[internalInstanceKey]);
              node = parents.pop()
            ) {
              closest = inst;
            }

            return closest;
          }

          /**
           * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
           * instance, or null if the node was not rendered by this React.
           */
          function getInstanceFromNode$1(node) {
            var inst = node[internalInstanceKey];
            if (inst) {
              if (inst.tag === HostComponent || inst.tag === HostText) {
                return inst;
              } else {
                return null;
              }
            }
            return null;
          }

          /**
           * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
           * DOM node.
           */
          function getNodeFromInstance$1(inst) {
            if (inst.tag === HostComponent || inst.tag === HostText) {
              // In Fiber this, is just the state node right now. We assume it will be
              // a host component or host text.
              return inst.stateNode;
            }

            // Without this first invariant, passing a non-DOM-component triggers the next
            // invariant for a missing parent, which is super confusing.
            invariant(false, "getNodeFromInstance: Invalid argument.");
          }

          function getFiberCurrentPropsFromNode$1(node) {
            return node[internalEventHandlersKey] || null;
          }

          function updateFiberProps$1(node, props) {
            node[internalEventHandlersKey] = props;
          }

          var ReactDOMComponentTree = Object.freeze({
            precacheFiberNode: precacheFiberNode$1,
            getClosestInstanceFromNode: getClosestInstanceFromNode,
            getInstanceFromNode: getInstanceFromNode$1,
            getNodeFromInstance: getNodeFromInstance$1,
            getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode$1,
            updateFiberProps: updateFiberProps$1
          });

          function getParent(inst) {
            do {
              inst = inst["return"];
              // TODO: If this is a HostRoot we might want to bail out.
              // That is depending on if we want nested subtrees (layers) to bubble
              // events to their parent. We could also go through parentNode on the
              // host node but that wouldn't work for React Native and doesn't let us
              // do the portal feature.
            } while (inst && inst.tag !== HostComponent);
            if (inst) {
              return inst;
            }
            return null;
          }

          /**
           * Return the lowest common ancestor of A and B, or null if they are in
           * different trees.
           */
          function getLowestCommonAncestor(instA, instB) {
            var depthA = 0;
            for (var tempA = instA; tempA; tempA = getParent(tempA)) {
              depthA++;
            }
            var depthB = 0;
            for (var tempB = instB; tempB; tempB = getParent(tempB)) {
              depthB++;
            }

            // If A is deeper, crawl up.
            while (depthA - depthB > 0) {
              instA = getParent(instA);
              depthA--;
            }

            // If B is deeper, crawl up.
            while (depthB - depthA > 0) {
              instB = getParent(instB);
              depthB--;
            }

            // Walk in lockstep until we find a match.
            var depth = depthA;
            while (depth--) {
              if (instA === instB || instA === instB.alternate) {
                return instA;
              }
              instA = getParent(instA);
              instB = getParent(instB);
            }
            return null;
          }

          /**
           * Return if A is an ancestor of B.
           */

          /**
           * Return the parent instance of the passed-in instance.
           */
          function getParentInstance(inst) {
            return getParent(inst);
          }

          /**
           * Simulates the traversal of a two-phase, capture/bubble event dispatch.
           */
          function traverseTwoPhase(inst, fn, arg) {
            var path = [];
            while (inst) {
              path.push(inst);
              inst = getParent(inst);
            }
            var i;
            for (i = path.length; i-- > 0; ) {
              fn(path[i], "captured", arg);
            }
            for (i = 0; i < path.length; i++) {
              fn(path[i], "bubbled", arg);
            }
          }

          /**
           * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
           * should would receive a `mouseEnter` or `mouseLeave` event.
           *
           * Does not invoke the callback on the nearest common ancestor because nothing
           * "entered" or "left" that element.
           */
          function traverseEnterLeave(from, to, fn, argFrom, argTo) {
            var common = from && to ? getLowestCommonAncestor(from, to) : null;
            var pathFrom = [];
            while (true) {
              if (!from) {
                break;
              }
              if (from === common) {
                break;
              }
              var alternate = from.alternate;
              if (alternate !== null && alternate === common) {
                break;
              }
              pathFrom.push(from);
              from = getParent(from);
            }
            var pathTo = [];
            while (true) {
              if (!to) {
                break;
              }
              if (to === common) {
                break;
              }
              var _alternate = to.alternate;
              if (_alternate !== null && _alternate === common) {
                break;
              }
              pathTo.push(to);
              to = getParent(to);
            }
            for (var i = 0; i < pathFrom.length; i++) {
              fn(pathFrom[i], "bubbled", argFrom);
            }
            for (var _i = pathTo.length; _i-- > 0; ) {
              fn(pathTo[_i], "captured", argTo);
            }
          }

          /**
           * Some event types have a notion of different registration names for different
           * "phases" of propagation. This finds listeners by a given phase.
           */
          function listenerAtPhase(inst, event, propagationPhase) {
            var registrationName =
              event.dispatchConfig.phasedRegistrationNames[propagationPhase];
            return getListener(inst, registrationName);
          }

          /**
           * A small set of propagation patterns, each of which will accept a small amount
           * of information, and generate a set of "dispatch ready event objects" - which
           * are sets of events that have already been annotated with a set of dispatched
           * listener functions/ids. The API is designed this way to discourage these
           * propagation strategies from actually executing the dispatches, since we
           * always want to collect the entire set of dispatches before executing even a
           * single one.
           */

          /**
           * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
           * here, allows us to not have to bind or create functions for each event.
           * Mutating the event's members allows us to not have to create a wrapping
           * "dispatch" object that pairs the event with the listener.
           */
          function accumulateDirectionalDispatches(inst, phase, event) {
            {
              warning(inst, "Dispatching inst must not be null");
            }
            var listener = listenerAtPhase(inst, event, phase);
            if (listener) {
              event._dispatchListeners = accumulateInto(
                event._dispatchListeners,
                listener
              );
              event._dispatchInstances = accumulateInto(
                event._dispatchInstances,
                inst
              );
            }
          }

          /**
           * Collect dispatches (must be entirely collected before dispatching - see unit
           * tests). Lazily allocate the array to conserve memory.  We must loop through
           * each event and perform the traversal for each one. We cannot perform a
           * single traversal for the entire collection of events because each event may
           * have a different target.
           */
          function accumulateTwoPhaseDispatchesSingle(event) {
            if (event && event.dispatchConfig.phasedRegistrationNames) {
              traverseTwoPhase(
                event._targetInst,
                accumulateDirectionalDispatches,
                event
              );
            }
          }

          /**
           * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
           */
          function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
            if (event && event.dispatchConfig.phasedRegistrationNames) {
              var targetInst = event._targetInst;
              var parentInst = targetInst
                ? getParentInstance(targetInst)
                : null;
              traverseTwoPhase(
                parentInst,
                accumulateDirectionalDispatches,
                event
              );
            }
          }

          /**
           * Accumulates without regard to direction, does not look for phased
           * registration names. Same as `accumulateDirectDispatchesSingle` but without
           * requiring that the `dispatchMarker` be the same as the dispatched ID.
           */
          function accumulateDispatches(inst, ignoredDirection, event) {
            if (inst && event && event.dispatchConfig.registrationName) {
              var registrationName = event.dispatchConfig.registrationName;
              var listener = getListener(inst, registrationName);
              if (listener) {
                event._dispatchListeners = accumulateInto(
                  event._dispatchListeners,
                  listener
                );
                event._dispatchInstances = accumulateInto(
                  event._dispatchInstances,
                  inst
                );
              }
            }
          }

          /**
           * Accumulates dispatches on an `SyntheticEvent`, but only for the
           * `dispatchMarker`.
           * @param {SyntheticEvent} event
           */
          function accumulateDirectDispatchesSingle(event) {
            if (event && event.dispatchConfig.registrationName) {
              accumulateDispatches(event._targetInst, null, event);
            }
          }

          function accumulateTwoPhaseDispatches(events) {
            forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
          }

          function accumulateTwoPhaseDispatchesSkipTarget(events) {
            forEachAccumulated(
              events,
              accumulateTwoPhaseDispatchesSingleSkipTarget
            );
          }

          function accumulateEnterLeaveDispatches(leave, enter, from, to) {
            traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
          }

          function accumulateDirectDispatches(events) {
            forEachAccumulated(events, accumulateDirectDispatchesSingle);
          }

          var EventPropagators = Object.freeze({
            accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
            accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
            accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches,
            accumulateDirectDispatches: accumulateDirectDispatches
          });

          var contentKey = null;

          /**
           * Gets the key used to access text content on a DOM node.
           *
           * @return {?string} Key used to access text content.
           * @internal
           */
          function getTextContentAccessor() {
            if (!contentKey && ExecutionEnvironment.canUseDOM) {
              // Prefer textContent to innerText because many browsers support both but
              // SVG <text> elements don't support innerText even when <div> does.
              contentKey =
                "textContent" in document.documentElement
                  ? "textContent"
                  : "innerText";
            }
            return contentKey;
          }

          /**
           * This helper object stores information about text content of a target node,
           * allowing comparison of content before and after a given event.
           *
           * Identify the node where selection currently begins, then observe
           * both its text content and its current position in the DOM. Since the
           * browser may natively replace the target node during composition, we can
           * use its position to find its replacement.
           *
           *
           */
          var compositionState = {
            _root: null,
            _startText: null,
            _fallbackText: null
          };

          function initialize(nativeEventTarget) {
            compositionState._root = nativeEventTarget;
            compositionState._startText = getText();
            return true;
          }

          function reset() {
            compositionState._root = null;
            compositionState._startText = null;
            compositionState._fallbackText = null;
          }

          function getData() {
            if (compositionState._fallbackText) {
              return compositionState._fallbackText;
            }

            var start;
            var startValue = compositionState._startText;
            var startLength = startValue.length;
            var end;
            var endValue = getText();
            var endLength = endValue.length;

            for (start = 0; start < startLength; start++) {
              if (startValue[start] !== endValue[start]) {
                break;
              }
            }

            var minEnd = startLength - start;
            for (end = 1; end <= minEnd; end++) {
              if (startValue[startLength - end] !== endValue[endLength - end]) {
                break;
              }
            }

            var sliceTail = end > 1 ? 1 - end : undefined;
            compositionState._fallbackText = endValue.slice(start, sliceTail);
            return compositionState._fallbackText;
          }

          function getText() {
            if ("value" in compositionState._root) {
              return compositionState._root.value;
            }
            return compositionState._root[getTextContentAccessor()];
          }

          /* eslint valid-typeof: 0 */

          var didWarnForAddedNewProperty = false;
          var isProxySupported = typeof Proxy === "function";
          var EVENT_POOL_SIZE = 10;

          var shouldBeReleasedProperties = [
            "dispatchConfig",
            "_targetInst",
            "nativeEvent",
            "isDefaultPrevented",
            "isPropagationStopped",
            "_dispatchListeners",
            "_dispatchInstances"
          ];

          /**
           * @interface Event
           * @see http://www.w3.org/TR/DOM-Level-3-Events/
           */
          var EventInterface = {
            type: null,
            target: null,
            // currentTarget is set when dispatching; no use in copying it here
            currentTarget: emptyFunction$1.thatReturnsNull,
            eventPhase: null,
            bubbles: null,
            cancelable: null,
            timeStamp: function(event) {
              return event.timeStamp || Date.now();
            },
            defaultPrevented: null,
            isTrusted: null
          };

          /**
           * Synthetic events are dispatched by event plugins, typically in response to a
           * top-level event delegation handler.
           *
           * These systems should generally use pooling to reduce the frequency of garbage
           * collection. The system should check `isPersistent` to determine whether the
           * event should be released into the pool after being dispatched. Users that
           * need a persisted event should invoke `persist`.
           *
           * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
           * normalizing browser quirks. Subclasses do not necessarily have to implement a
           * DOM interface; custom application-specific events can also subclass this.
           *
           * @param {object} dispatchConfig Configuration used to dispatch this event.
           * @param {*} targetInst Marker identifying the event target.
           * @param {object} nativeEvent Native browser event.
           * @param {DOMEventTarget} nativeEventTarget Target node.
           */
          function SyntheticEvent(
            dispatchConfig,
            targetInst,
            nativeEvent,
            nativeEventTarget
          ) {
            {
              // these have a getter/setter for warnings
              delete this.nativeEvent;
              delete this.preventDefault;
              delete this.stopPropagation;
            }

            this.dispatchConfig = dispatchConfig;
            this._targetInst = targetInst;
            this.nativeEvent = nativeEvent;

            var Interface = this.constructor.Interface;
            for (var propName in Interface) {
              if (!Interface.hasOwnProperty(propName)) {
                continue;
              }
              {
                delete this[propName]; // this has a getter/setter for warnings
              }
              var normalize = Interface[propName];
              if (normalize) {
                this[propName] = normalize(nativeEvent);
              } else {
                if (propName === "target") {
                  this.target = nativeEventTarget;
                } else {
                  this[propName] = nativeEvent[propName];
                }
              }
            }

            var defaultPrevented =
              nativeEvent.defaultPrevented != null
                ? nativeEvent.defaultPrevented
                : nativeEvent.returnValue === false;
            if (defaultPrevented) {
              this.isDefaultPrevented = emptyFunction$1.thatReturnsTrue;
            } else {
              this.isDefaultPrevented = emptyFunction$1.thatReturnsFalse;
            }
            this.isPropagationStopped = emptyFunction$1.thatReturnsFalse;
            return this;
          }

          _assign(SyntheticEvent.prototype, {
            preventDefault: function() {
              this.defaultPrevented = true;
              var event = this.nativeEvent;
              if (!event) {
                return;
              }

              if (event.preventDefault) {
                event.preventDefault();
              } else if (typeof event.returnValue !== "unknown") {
                event.returnValue = false;
              }
              this.isDefaultPrevented = emptyFunction$1.thatReturnsTrue;
            },

            stopPropagation: function() {
              var event = this.nativeEvent;
              if (!event) {
                return;
              }

              if (event.stopPropagation) {
                event.stopPropagation();
              } else if (typeof event.cancelBubble !== "unknown") {
                // The ChangeEventPlugin registers a "propertychange" event for
                // IE. This event does not support bubbling or cancelling, and
                // any references to cancelBubble throw "Member not found".  A
                // typeof check of "unknown" circumvents this issue (and is also
                // IE specific).
                event.cancelBubble = true;
              }

              this.isPropagationStopped = emptyFunction$1.thatReturnsTrue;
            },

            /**
             * We release all dispatched `SyntheticEvent`s after each event loop, adding
             * them back into the pool. This allows a way to hold onto a reference that
             * won't be added back into the pool.
             */
            persist: function() {
              this.isPersistent = emptyFunction$1.thatReturnsTrue;
            },

            /**
             * Checks if this event should be released back into the pool.
             *
             * @return {boolean} True if this should not be released, false otherwise.
             */
            isPersistent: emptyFunction$1.thatReturnsFalse,

            /**
             * `PooledClass` looks for `destructor` on each instance it releases.
             */
            destructor: function() {
              var Interface = this.constructor.Interface;
              for (var propName in Interface) {
                {
                  Object.defineProperty(
                    this,
                    propName,
                    getPooledWarningPropertyDefinition(
                      propName,
                      Interface[propName]
                    )
                  );
                }
              }
              for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
                this[shouldBeReleasedProperties[i]] = null;
              }
              {
                Object.defineProperty(
                  this,
                  "nativeEvent",
                  getPooledWarningPropertyDefinition("nativeEvent", null)
                );
                Object.defineProperty(
                  this,
                  "preventDefault",
                  getPooledWarningPropertyDefinition(
                    "preventDefault",
                    emptyFunction$1
                  )
                );
                Object.defineProperty(
                  this,
                  "stopPropagation",
                  getPooledWarningPropertyDefinition(
                    "stopPropagation",
                    emptyFunction$1
                  )
                );
              }
            }
          });

          SyntheticEvent.Interface = EventInterface;

          /**
           * Helper to reduce boilerplate when creating subclasses.
           *
           * @param {function} Class
           * @param {?object} Interface
           */
          SyntheticEvent.augmentClass = function(Class, Interface) {
            var Super = this;

            var E = function() {};
            E.prototype = Super.prototype;
            var prototype = new E();

            _assign(prototype, Class.prototype);
            Class.prototype = prototype;
            Class.prototype.constructor = Class;

            Class.Interface = _assign({}, Super.Interface, Interface);
            Class.augmentClass = Super.augmentClass;
            addEventPoolingTo(Class);
          };

          /** Proxying after everything set on SyntheticEvent
           * to resolve Proxy issue on some WebKit browsers
           * in which some Event properties are set to undefined (GH#10010)
           */
          {
            if (isProxySupported) {
              /*eslint-disable no-func-assign */
              SyntheticEvent = new Proxy(SyntheticEvent, {
                construct: function(target, args) {
                  return this.apply(
                    target,
                    Object.create(target.prototype),
                    args
                  );
                },
                apply: function(constructor, that, args) {
                  return new Proxy(constructor.apply(that, args), {
                    set: function(target, prop, value) {
                      if (
                        prop !== "isPersistent" &&
                        !target.constructor.Interface.hasOwnProperty(prop) &&
                        shouldBeReleasedProperties.indexOf(prop) === -1
                      ) {
                        warning(
                          didWarnForAddedNewProperty || target.isPersistent(),
                          "This synthetic event is reused for performance reasons. If you're " +
                            "seeing this, you're adding a new property in the synthetic event object. " +
                            "The property is never released. See " +
                            "https://fb.me/react-event-pooling for more information."
                        );
                        didWarnForAddedNewProperty = true;
                      }
                      target[prop] = value;
                      return true;
                    }
                  });
                }
              });
              /*eslint-enable no-func-assign */
            }
          }

          addEventPoolingTo(SyntheticEvent);

          /**
           * Helper to nullify syntheticEvent instance properties when destructing
           *
           * @param {String} propName
           * @param {?object} getVal
           * @return {object} defineProperty object
           */
          function getPooledWarningPropertyDefinition(propName, getVal) {
            var isFunction = typeof getVal === "function";
            return {
              configurable: true,
              set: set,
              get: get
            };

            function set(val) {
              var action = isFunction
                ? "setting the method"
                : "setting the property";
              warn(action, "This is effectively a no-op");
              return val;
            }

            function get() {
              var action = isFunction
                ? "accessing the method"
                : "accessing the property";
              var result = isFunction
                ? "This is a no-op function"
                : "This is set to null";
              warn(action, result);
              return getVal;
            }

            function warn(action, result) {
              var warningCondition = false;
              warning(
                warningCondition,
                "This synthetic event is reused for performance reasons. If you're seeing this, " +
                  "you're %s `%s` on a released/nullified synthetic event. %s. " +
                  "If you must keep the original synthetic event around, use event.persist(). " +
                  "See https://fb.me/react-event-pooling for more information.",
                action,
                propName,
                result
              );
            }
          }

          function getPooledEvent(
            dispatchConfig,
            targetInst,
            nativeEvent,
            nativeInst
          ) {
            var EventConstructor = this;
            if (EventConstructor.eventPool.length) {
              var instance = EventConstructor.eventPool.pop();
              EventConstructor.call(
                instance,
                dispatchConfig,
                targetInst,
                nativeEvent,
                nativeInst
              );
              return instance;
            }
            return new EventConstructor(
              dispatchConfig,
              targetInst,
              nativeEvent,
              nativeInst
            );
          }

          function releasePooledEvent(event) {
            var EventConstructor = this;
            !(event instanceof EventConstructor)
              ? invariant(
                  false,
                  "Trying to release an event instance  into a pool of a different type."
                )
              : void 0;
            event.destructor();
            if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
              EventConstructor.eventPool.push(event);
            }
          }

          function addEventPoolingTo(EventConstructor) {
            EventConstructor.eventPool = [];
            EventConstructor.getPooled = getPooledEvent;
            EventConstructor.release = releasePooledEvent;
          }

          var SyntheticEvent$1 = SyntheticEvent;

          /**
           * @interface Event
           * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
           */
          var CompositionEventInterface = {
            data: null
          };

          /**
           * @param {object} dispatchConfig Configuration used to dispatch this event.
           * @param {string} dispatchMarker Marker identifying the event target.
           * @param {object} nativeEvent Native browser event.
           * @extends {SyntheticEvent}
           */
          function SyntheticCompositionEvent(
            dispatchConfig,
            dispatchMarker,
            nativeEvent,
            nativeEventTarget
          ) {
            return SyntheticEvent$1.call(
              this,
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            );
          }

          SyntheticEvent$1.augmentClass(
            SyntheticCompositionEvent,
            CompositionEventInterface
          );

          /**
           * @interface Event
           * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
           *      /#events-inputevents
           */
          var InputEventInterface = {
            data: null
          };

          /**
           * @param {object} dispatchConfig Configuration used to dispatch this event.
           * @param {string} dispatchMarker Marker identifying the event target.
           * @param {object} nativeEvent Native browser event.
           * @extends {SyntheticEvent}
           */
          function SyntheticInputEvent(
            dispatchConfig,
            dispatchMarker,
            nativeEvent,
            nativeEventTarget
          ) {
            return SyntheticEvent$1.call(
              this,
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            );
          }

          SyntheticEvent$1.augmentClass(
            SyntheticInputEvent,
            InputEventInterface
          );

          var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
          var START_KEYCODE = 229;

          var canUseCompositionEvent =
            ExecutionEnvironment.canUseDOM && "CompositionEvent" in window;

          var documentMode = null;
          if (ExecutionEnvironment.canUseDOM && "documentMode" in document) {
            documentMode = document.documentMode;
          }

          // Webkit offers a very useful `textInput` event that can be used to
          // directly represent `beforeInput`. The IE `textinput` event is not as
          // useful, so we don't use it.
          var canUseTextInputEvent =
            ExecutionEnvironment.canUseDOM &&
            "TextEvent" in window &&
            !documentMode &&
            !isPresto();

          // In IE9+, we have access to composition events, but the data supplied
          // by the native compositionend event may be incorrect. Japanese ideographic
          // spaces, for instance (\u3000) are not recorded correctly.
          var useFallbackCompositionData =
            ExecutionEnvironment.canUseDOM &&
            (!canUseCompositionEvent ||
              (documentMode && documentMode > 8 && documentMode <= 11));

          /**
           * Opera <= 12 includes TextEvent in window, but does not fire
           * text input events. Rely on keypress instead.
           */
          function isPresto() {
            var opera = window.opera;
            return (
              typeof opera === "object" &&
              typeof opera.version === "function" &&
              parseInt(opera.version(), 10) <= 12
            );
          }

          var SPACEBAR_CODE = 32;
          var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

          // Events and their corresponding property names.
          var eventTypes = {
            beforeInput: {
              phasedRegistrationNames: {
                bubbled: "onBeforeInput",
                captured: "onBeforeInputCapture"
              },
              dependencies: [
                "topCompositionEnd",
                "topKeyPress",
                "topTextInput",
                "topPaste"
              ]
            },
            compositionEnd: {
              phasedRegistrationNames: {
                bubbled: "onCompositionEnd",
                captured: "onCompositionEndCapture"
              },
              dependencies: [
                "topBlur",
                "topCompositionEnd",
                "topKeyDown",
                "topKeyPress",
                "topKeyUp",
                "topMouseDown"
              ]
            },
            compositionStart: {
              phasedRegistrationNames: {
                bubbled: "onCompositionStart",
                captured: "onCompositionStartCapture"
              },
              dependencies: [
                "topBlur",
                "topCompositionStart",
                "topKeyDown",
                "topKeyPress",
                "topKeyUp",
                "topMouseDown"
              ]
            },
            compositionUpdate: {
              phasedRegistrationNames: {
                bubbled: "onCompositionUpdate",
                captured: "onCompositionUpdateCapture"
              },
              dependencies: [
                "topBlur",
                "topCompositionUpdate",
                "topKeyDown",
                "topKeyPress",
                "topKeyUp",
                "topMouseDown"
              ]
            }
          };

          // Track whether we've ever handled a keypress on the space key.
          var hasSpaceKeypress = false;

          /**
           * Return whether a native keypress event is assumed to be a command.
           * This is required because Firefox fires `keypress` events for key commands
           * (cut, copy, select-all, etc.) even though no character is inserted.
           */
          function isKeypressCommand(nativeEvent) {
            return (
              (nativeEvent.ctrlKey ||
                nativeEvent.altKey ||
                nativeEvent.metaKey) &&
              // ctrlKey && altKey is equivalent to AltGr, and is not a command.
              !(nativeEvent.ctrlKey && nativeEvent.altKey)
            );
          }

          /**
           * Translate native top level events into event types.
           *
           * @param {string} topLevelType
           * @return {object}
           */
          function getCompositionEventType(topLevelType) {
            switch (topLevelType) {
              case "topCompositionStart":
                return eventTypes.compositionStart;
              case "topCompositionEnd":
                return eventTypes.compositionEnd;
              case "topCompositionUpdate":
                return eventTypes.compositionUpdate;
            }
          }

          /**
           * Does our fallback best-guess model think this event signifies that
           * composition has begun?
           *
           * @param {string} topLevelType
           * @param {object} nativeEvent
           * @return {boolean}
           */
          function isFallbackCompositionStart(topLevelType, nativeEvent) {
            return (
              topLevelType === "topKeyDown" &&
              nativeEvent.keyCode === START_KEYCODE
            );
          }

          /**
           * Does our fallback mode think that this event is the end of composition?
           *
           * @param {string} topLevelType
           * @param {object} nativeEvent
           * @return {boolean}
           */
          function isFallbackCompositionEnd(topLevelType, nativeEvent) {
            switch (topLevelType) {
              case "topKeyUp":
                // Command keys insert or clear IME input.
                return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
              case "topKeyDown":
                // Expect IME keyCode on each keydown. If we get any other
                // code we must have exited earlier.
                return nativeEvent.keyCode !== START_KEYCODE;
              case "topKeyPress":
              case "topMouseDown":
              case "topBlur":
                // Events are not possible without cancelling IME.
                return true;
              default:
                return false;
            }
          }

          /**
           * Google Input Tools provides composition data via a CustomEvent,
           * with the `data` property populated in the `detail` object. If this
           * is available on the event object, use it. If not, this is a plain
           * composition event and we have nothing special to extract.
           *
           * @param {object} nativeEvent
           * @return {?string}
           */
          function getDataFromCustomEvent(nativeEvent) {
            var detail = nativeEvent.detail;
            if (typeof detail === "object" && "data" in detail) {
              return detail.data;
            }
            return null;
          }

          // Track the current IME composition status, if any.
          var isComposing = false;

          /**
           * @return {?object} A SyntheticCompositionEvent.
           */
          function extractCompositionEvent(
            topLevelType,
            targetInst,
            nativeEvent,
            nativeEventTarget
          ) {
            var eventType;
            var fallbackData;

            if (canUseCompositionEvent) {
              eventType = getCompositionEventType(topLevelType);
            } else if (!isComposing) {
              if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
                eventType = eventTypes.compositionStart;
              }
            } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
              eventType = eventTypes.compositionEnd;
            }

            if (!eventType) {
              return null;
            }

            if (useFallbackCompositionData) {
              // The current composition is stored statically and must not be
              // overwritten while composition continues.
              if (!isComposing && eventType === eventTypes.compositionStart) {
                isComposing = initialize(nativeEventTarget);
              } else if (eventType === eventTypes.compositionEnd) {
                if (isComposing) {
                  fallbackData = getData();
                }
              }
            }

            var event = SyntheticCompositionEvent.getPooled(
              eventType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            );

            if (fallbackData) {
              // Inject data generated from fallback path into the synthetic event.
              // This matches the property of native CompositionEventInterface.
              event.data = fallbackData;
            } else {
              var customData = getDataFromCustomEvent(nativeEvent);
              if (customData !== null) {
                event.data = customData;
              }
            }

            accumulateTwoPhaseDispatches(event);
            return event;
          }

          /**
           * @param {TopLevelTypes} topLevelType Record from `BrowserEventConstants`.
           * @param {object} nativeEvent Native browser event.
           * @return {?string} The string corresponding to this `beforeInput` event.
           */
          function getNativeBeforeInputChars(topLevelType, nativeEvent) {
            switch (topLevelType) {
              case "topCompositionEnd":
                return getDataFromCustomEvent(nativeEvent);
              case "topKeyPress":
                /**
                 * If native `textInput` events are available, our goal is to make
                 * use of them. However, there is a special case: the spacebar key.
                 * In Webkit, preventing default on a spacebar `textInput` event
                 * cancels character insertion, but it *also* causes the browser
                 * to fall back to its default spacebar behavior of scrolling the
                 * page.
                 *
                 * Tracking at:
                 * https://code.google.com/p/chromium/issues/detail?id=355103
                 *
                 * To avoid this issue, use the keypress event as if no `textInput`
                 * event is available.
                 */
                var which = nativeEvent.which;
                if (which !== SPACEBAR_CODE) {
                  return null;
                }

                hasSpaceKeypress = true;
                return SPACEBAR_CHAR;

              case "topTextInput":
                // Record the characters to be added to the DOM.
                var chars = nativeEvent.data;

                // If it's a spacebar character, assume that we have already handled
                // it at the keypress level and bail immediately. Android Chrome
                // doesn't give us keycodes, so we need to blacklist it.
                if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
                  return null;
                }

                return chars;

              default:
                // For other native event types, do nothing.
                return null;
            }
          }

          /**
           * For browsers that do not provide the `textInput` event, extract the
           * appropriate string to use for SyntheticInputEvent.
           *
           * @param {string} topLevelType Record from `BrowserEventConstants`.
           * @param {object} nativeEvent Native browser event.
           * @return {?string} The fallback string for this `beforeInput` event.
           */
          function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
            // If we are currently composing (IME) and using a fallback to do so,
            // try to extract the composed characters from the fallback object.
            // If composition event is available, we extract a string only at
            // compositionevent, otherwise extract it at fallback events.
            if (isComposing) {
              if (
                topLevelType === "topCompositionEnd" ||
                (!canUseCompositionEvent &&
                  isFallbackCompositionEnd(topLevelType, nativeEvent))
              ) {
                var chars = getData();
                reset();
                isComposing = false;
                return chars;
              }
              return null;
            }

            switch (topLevelType) {
              case "topPaste":
                // If a paste event occurs after a keypress, throw out the input
                // chars. Paste events should not lead to BeforeInput events.
                return null;
              case "topKeyPress":
                /**
                 * As of v27, Firefox may fire keypress events even when no character
                 * will be inserted. A few possibilities:
                 *
                 * - `which` is `0`. Arrow keys, Esc key, etc.
                 *
                 * - `which` is the pressed key code, but no char is available.
                 *   Ex: 'AltGr + d` in Polish. There is no modified character for
                 *   this key combination and no character is inserted into the
                 *   document, but FF fires the keypress for char code `100` anyway.
                 *   No `input` event will occur.
                 *
                 * - `which` is the pressed key code, but a command combination is
                 *   being used. Ex: `Cmd+C`. No character is inserted, and no
                 *   `input` event will occur.
                 */
                if (!isKeypressCommand(nativeEvent)) {
                  // IE fires the `keypress` event when a user types an emoji via
                  // Touch keyboard of Windows.  In such a case, the `char` property
                  // holds an emoji character like `\uD83D\uDE0A`.  Because its length
                  // is 2, the property `which` does not represent an emoji correctly.
                  // In such a case, we directly return the `char` property instead of
                  // using `which`.
                  if (nativeEvent.char && nativeEvent.char.length > 1) {
                    return nativeEvent.char;
                  } else if (nativeEvent.which) {
                    return String.fromCharCode(nativeEvent.which);
                  }
                }
                return null;
              case "topCompositionEnd":
                return useFallbackCompositionData ? null : nativeEvent.data;
              default:
                return null;
            }
          }

          /**
           * Extract a SyntheticInputEvent for `beforeInput`, based on either native
           * `textInput` or fallback behavior.
           *
           * @return {?object} A SyntheticInputEvent.
           */
          function extractBeforeInputEvent(
            topLevelType,
            targetInst,
            nativeEvent,
            nativeEventTarget
          ) {
            var chars;

            if (canUseTextInputEvent) {
              chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
            } else {
              chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
            }

            // If no characters are being inserted, no BeforeInput event should
            // be fired.
            if (!chars) {
              return null;
            }

            var event = SyntheticInputEvent.getPooled(
              eventTypes.beforeInput,
              targetInst,
              nativeEvent,
              nativeEventTarget
            );

            event.data = chars;
            accumulateTwoPhaseDispatches(event);
            return event;
          }

          /**
           * Create an `onBeforeInput` event to match
           * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
           *
           * This event plugin is based on the native `textInput` event
           * available in Chrome, Safari, Opera, and IE. This event fires after
           * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
           *
           * `beforeInput` is spec'd but not implemented in any browsers, and
           * the `input` event does not provide any useful information about what has
           * actually been added, contrary to the spec. Thus, `textInput` is the best
           * available event to identify the characters that have actually been inserted
           * into the target node.
           *
           * This plugin is also responsible for emitting `composition` events, thus
           * allowing us to share composition fallback code for both `beforeInput` and
           * `composition` event types.
           */
          var BeforeInputEventPlugin = {
            eventTypes: eventTypes,

            extractEvents: function(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            ) {
              return [
                extractCompositionEvent(
                  topLevelType,
                  targetInst,
                  nativeEvent,
                  nativeEventTarget
                ),
                extractBeforeInputEvent(
                  topLevelType,
                  targetInst,
                  nativeEvent,
                  nativeEventTarget
                )
              ];
            }
          };

          // Use to restore controlled state after a change event has fired.

          var fiberHostComponent = null;

          var ReactControlledComponentInjection = {
            injectFiberControlledHostComponent: function(hostComponentImpl) {
              // The fiber implementation doesn't use dynamic dispatch so we need to
              // inject the implementation.
              fiberHostComponent = hostComponentImpl;
            }
          };

          var restoreTarget = null;
          var restoreQueue = null;

          function restoreStateOfTarget(target) {
            // We perform this translation at the end of the event loop so that we
            // always receive the correct fiber here
            var internalInstance = getInstanceFromNode(target);
            if (!internalInstance) {
              // Unmounted
              return;
            }
            !(
              fiberHostComponent &&
              typeof fiberHostComponent.restoreControlledState === "function"
            )
              ? invariant(
                  false,
                  "Fiber needs to be injected to handle a fiber target for controlled events. This error is likely caused by a bug in React. Please file an issue."
                )
              : void 0;
            var props = getFiberCurrentPropsFromNode(
              internalInstance.stateNode
            );
            fiberHostComponent.restoreControlledState(
              internalInstance.stateNode,
              internalInstance.type,
              props
            );
          }

          var injection$3 = ReactControlledComponentInjection;

          function enqueueStateRestore(target) {
            if (restoreTarget) {
              if (restoreQueue) {
                restoreQueue.push(target);
              } else {
                restoreQueue = [target];
              }
            } else {
              restoreTarget = target;
            }
          }

          function restoreStateIfNeeded() {
            if (!restoreTarget) {
              return;
            }
            var target = restoreTarget;
            var queuedTargets = restoreQueue;
            restoreTarget = null;
            restoreQueue = null;

            restoreStateOfTarget(target);
            if (queuedTargets) {
              for (var i = 0; i < queuedTargets.length; i++) {
                restoreStateOfTarget(queuedTargets[i]);
              }
            }
          }

          var ReactControlledComponent = Object.freeze({
            injection: injection$3,
            enqueueStateRestore: enqueueStateRestore,
            restoreStateIfNeeded: restoreStateIfNeeded
          });

          // Used as a way to call batchedUpdates when we don't have a reference to
          // the renderer. Such as when we're dispatching events or if third party
          // libraries need to call batchedUpdates. Eventually, this API will go away when
          // everything is batched by default. We'll then have a similar API to opt-out of
          // scheduled work and instead do synchronous work.

          // Defaults
          var fiberBatchedUpdates = function(fn, bookkeeping) {
            return fn(bookkeeping);
          };

          var isNestingBatched = false;
          function batchedUpdates(fn, bookkeeping) {
            if (isNestingBatched) {
              // If we are currently inside another batch, we need to wait until it
              // fully completes before restoring state. Therefore, we add the target to
              // a queue of work.
              return fiberBatchedUpdates(fn, bookkeeping);
            }
            isNestingBatched = true;
            try {
              return fiberBatchedUpdates(fn, bookkeeping);
            } finally {
              // Here we wait until all updates have propagated, which is important
              // when using controlled components within layers:
              // https://github.com/facebook/react/issues/1698
              // Then we restore state of any controlled component.
              isNestingBatched = false;
              restoreStateIfNeeded();
            }
          }

          var ReactGenericBatchingInjection = {
            injectFiberBatchedUpdates: function(_batchedUpdates) {
              fiberBatchedUpdates = _batchedUpdates;
            }
          };

          var injection$4 = ReactGenericBatchingInjection;

          /**
           * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
           */
          var supportedInputTypes = {
            color: true,
            date: true,
            datetime: true,
            "datetime-local": true,
            email: true,
            month: true,
            number: true,
            password: true,
            range: true,
            search: true,
            tel: true,
            text: true,
            time: true,
            url: true,
            week: true
          };

          function isTextInputElement(elem) {
            var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

            if (nodeName === "input") {
              return !!supportedInputTypes[elem.type];
            }

            if (nodeName === "textarea") {
              return true;
            }

            return false;
          }

          /**
           * HTML nodeType values that represent the type of the node
           */

          var ELEMENT_NODE = 1;
          var TEXT_NODE = 3;
          var COMMENT_NODE = 8;
          var DOCUMENT_NODE = 9;
          var DOCUMENT_FRAGMENT_NODE = 11;

          /**
           * Gets the target node from a native browser event by accounting for
           * inconsistencies in browser DOM APIs.
           *
           * @param {object} nativeEvent Native browser event.
           * @return {DOMEventTarget} Target node.
           */
          function getEventTarget(nativeEvent) {
            var target = nativeEvent.target || nativeEvent.srcElement || window;

            // Normalize SVG <use> element events #4963
            if (target.correspondingUseElement) {
              target = target.correspondingUseElement;
            }

            // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
            // @see http://www.quirksmode.org/js/events_properties.html
            return target.nodeType === TEXT_NODE ? target.parentNode : target;
          }

          var useHasFeature;
          if (ExecutionEnvironment.canUseDOM) {
            useHasFeature =
              document.implementation &&
              document.implementation.hasFeature &&
              // always returns true in newer browsers as per the standard.
              // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
              document.implementation.hasFeature("", "") !== true;
          }

          /**
           * Checks if an event is supported in the current execution environment.
           *
           * NOTE: This will not work correctly for non-generic events such as `change`,
           * `reset`, `load`, `error`, and `select`.
           *
           * Borrows from Modernizr.
           *
           * @param {string} eventNameSuffix Event name, e.g. "click".
           * @param {?boolean} capture Check if the capture phase is supported.
           * @return {boolean} True if the event is supported.
           * @internal
           * @license Modernizr 3.0.0pre (Custom Build) | MIT
           */
          function isEventSupported(eventNameSuffix, capture) {
            if (
              !ExecutionEnvironment.canUseDOM ||
              (capture && !("addEventListener" in document))
            ) {
              return false;
            }

            var eventName = "on" + eventNameSuffix;
            var isSupported = eventName in document;

            if (!isSupported) {
              var element = document.createElement("div");
              element.setAttribute(eventName, "return;");
              isSupported = typeof element[eventName] === "function";
            }

            if (!isSupported && useHasFeature && eventNameSuffix === "wheel") {
              // This is the only way to test support for the `wheel` event in IE9+.
              isSupported = document.implementation.hasFeature(
                "Events.wheel",
                "3.0"
              );
            }

            return isSupported;
          }

          function isCheckable(elem) {
            var type = elem.type;
            var nodeName = elem.nodeName;
            return (
              nodeName &&
              nodeName.toLowerCase() === "input" &&
              (type === "checkbox" || type === "radio")
            );
          }

          function getTracker(node) {
            return node._valueTracker;
          }

          function detachTracker(node) {
            node._valueTracker = null;
          }

          function getValueFromNode(node) {
            var value = "";
            if (!node) {
              return value;
            }

            if (isCheckable(node)) {
              value = node.checked ? "true" : "false";
            } else {
              value = node.value;
            }

            return value;
          }

          function trackValueOnNode(node) {
            var valueField = isCheckable(node) ? "checked" : "value";
            var descriptor = Object.getOwnPropertyDescriptor(
              node.constructor.prototype,
              valueField
            );

            var currentValue = "" + node[valueField];

            // if someone has already defined a value or Safari, then bail
            // and don't track value will cause over reporting of changes,
            // but it's better then a hard failure
            // (needed for certain tests that spyOn input values and Safari)
            if (
              node.hasOwnProperty(valueField) ||
              typeof descriptor.get !== "function" ||
              typeof descriptor.set !== "function"
            ) {
              return;
            }

            Object.defineProperty(node, valueField, {
              enumerable: descriptor.enumerable,
              configurable: true,
              get: function() {
                return descriptor.get.call(this);
              },
              set: function(value) {
                currentValue = "" + value;
                descriptor.set.call(this, value);
              }
            });

            var tracker = {
              getValue: function() {
                return currentValue;
              },
              setValue: function(value) {
                currentValue = "" + value;
              },
              stopTracking: function() {
                detachTracker(node);
                delete node[valueField];
              }
            };
            return tracker;
          }

          function track(node) {
            if (getTracker(node)) {
              return;
            }

            // TODO: Once it's just Fiber we can move this to node._wrapperState
            node._valueTracker = trackValueOnNode(node);
          }

          function updateValueIfChanged(node) {
            if (!node) {
              return false;
            }

            var tracker = getTracker(node);
            // if there is no tracker at this point it's unlikely
            // that trying again will succeed
            if (!tracker) {
              return true;
            }

            var lastValue = tracker.getValue();
            var nextValue = getValueFromNode(node);
            if (nextValue !== lastValue) {
              tracker.setValue(nextValue);
              return true;
            }
            return false;
          }

          var eventTypes$1 = {
            change: {
              phasedRegistrationNames: {
                bubbled: "onChange",
                captured: "onChangeCapture"
              },
              dependencies: [
                "topBlur",
                "topChange",
                "topClick",
                "topFocus",
                "topInput",
                "topKeyDown",
                "topKeyUp",
                "topSelectionChange"
              ]
            }
          };

          function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
            var event = SyntheticEvent$1.getPooled(
              eventTypes$1.change,
              inst,
              nativeEvent,
              target
            );
            event.type = "change";
            // Flag this event loop as needing state restore.
            enqueueStateRestore(target);
            accumulateTwoPhaseDispatches(event);
            return event;
          }
          /**
           * For IE shims
           */
          var activeElement = null;
          var activeElementInst = null;

          /**
           * SECTION: handle `change` event
           */
          function shouldUseChangeEvent(elem) {
            var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
            return (
              nodeName === "select" ||
              (nodeName === "input" && elem.type === "file")
            );
          }

          function manualDispatchChangeEvent(nativeEvent) {
            var event = createAndAccumulateChangeEvent(
              activeElementInst,
              nativeEvent,
              getEventTarget(nativeEvent)
            );

            // If change and propertychange bubbled, we'd just bind to it like all the
            // other events and have it go through ReactBrowserEventEmitter. Since it
            // doesn't, we manually listen for the events and so we have to enqueue and
            // process the abstract event manually.
            //
            // Batching is necessary here in order to ensure that all event handlers run
            // before the next rerender (including event handlers attached to ancestor
            // elements instead of directly on the input). Without this, controlled
            // components don't work properly in conjunction with event bubbling because
            // the component is rerendered and the value reverted before all the event
            // handlers can run. See https://github.com/facebook/react/issues/708.
            batchedUpdates(runEventInBatch, event);
          }

          function runEventInBatch(event) {
            enqueueEvents(event);
            processEventQueue(false);
          }

          function getInstIfValueChanged(targetInst) {
            var targetNode = getNodeFromInstance$1(targetInst);
            if (updateValueIfChanged(targetNode)) {
              return targetInst;
            }
          }

          function getTargetInstForChangeEvent(topLevelType, targetInst) {
            if (topLevelType === "topChange") {
              return targetInst;
            }
          }

          /**
           * SECTION: handle `input` event
           */
          var isInputEventSupported = false;
          if (ExecutionEnvironment.canUseDOM) {
            // IE9 claims to support the input event but fails to trigger it when
            // deleting text, so we ignore its input events.
            isInputEventSupported =
              isEventSupported("input") &&
              (!document.documentMode || document.documentMode > 9);
          }

          /**
           * (For IE <=9) Starts tracking propertychange events on the passed-in element
           * and override the value property so that we can distinguish user events from
           * value changes in JS.
           */
          function startWatchingForValueChange(target, targetInst) {
            activeElement = target;
            activeElementInst = targetInst;
            activeElement.attachEvent("onpropertychange", handlePropertyChange);
          }

          /**
           * (For IE <=9) Removes the event listeners from the currently-tracked element,
           * if any exists.
           */
          function stopWatchingForValueChange() {
            if (!activeElement) {
              return;
            }
            activeElement.detachEvent("onpropertychange", handlePropertyChange);
            activeElement = null;
            activeElementInst = null;
          }

          /**
           * (For IE <=9) Handles a propertychange event, sending a `change` event if
           * the value of the active element has changed.
           */
          function handlePropertyChange(nativeEvent) {
            if (nativeEvent.propertyName !== "value") {
              return;
            }
            if (getInstIfValueChanged(activeElementInst)) {
              manualDispatchChangeEvent(nativeEvent);
            }
          }

          function handleEventsForInputEventPolyfill(
            topLevelType,
            target,
            targetInst
          ) {
            if (topLevelType === "topFocus") {
              // In IE9, propertychange fires for most input events but is buggy and
              // doesn't fire when text is deleted, but conveniently, selectionchange
              // appears to fire in all of the remaining cases so we catch those and
              // forward the event if the value has changed
              // In either case, we don't want to call the event handler if the value
              // is changed from JS so we redefine a setter for `.value` that updates
              // our activeElementValue variable, allowing us to ignore those changes
              //
              // stopWatching() should be a noop here but we call it just in case we
              // missed a blur event somehow.
              stopWatchingForValueChange();
              startWatchingForValueChange(target, targetInst);
            } else if (topLevelType === "topBlur") {
              stopWatchingForValueChange();
            }
          }

          // For IE8 and IE9.
          function getTargetInstForInputEventPolyfill(
            topLevelType,
            targetInst
          ) {
            if (
              topLevelType === "topSelectionChange" ||
              topLevelType === "topKeyUp" ||
              topLevelType === "topKeyDown"
            ) {
              // On the selectionchange event, the target is just document which isn't
              // helpful for us so just check activeElement instead.
              //
              // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
              // propertychange on the first input event after setting `value` from a
              // script and fires only keydown, keypress, keyup. Catching keyup usually
              // gets it and catching keydown lets us fire an event for the first
              // keystroke if user does a key repeat (it'll be a little delayed: right
              // before the second keystroke). Other input methods (e.g., paste) seem to
              // fire selectionchange normally.
              return getInstIfValueChanged(activeElementInst);
            }
          }

          /**
           * SECTION: handle `click` event
           */
          function shouldUseClickEvent(elem) {
            // Use the `click` event to detect changes to checkbox and radio inputs.
            // This approach works across all browsers, whereas `change` does not fire
            // until `blur` in IE8.
            var nodeName = elem.nodeName;
            return (
              nodeName &&
              nodeName.toLowerCase() === "input" &&
              (elem.type === "checkbox" || elem.type === "radio")
            );
          }

          function getTargetInstForClickEvent(topLevelType, targetInst) {
            if (topLevelType === "topClick") {
              return getInstIfValueChanged(targetInst);
            }
          }

          function getTargetInstForInputOrChangeEvent(
            topLevelType,
            targetInst
          ) {
            if (topLevelType === "topInput" || topLevelType === "topChange") {
              return getInstIfValueChanged(targetInst);
            }
          }

          function handleControlledInputBlur(inst, node) {
            // TODO: In IE, inst is occasionally null. Why?
            if (inst == null) {
              return;
            }

            // Fiber and ReactDOM keep wrapper state in separate places
            var state = inst._wrapperState || node._wrapperState;

            if (!state || !state.controlled || node.type !== "number") {
              return;
            }

            // If controlled, assign the value attribute to the current value on blur
            var value = "" + node.value;
            if (node.getAttribute("value") !== value) {
              node.setAttribute("value", value);
            }
          }

          /**
           * This plugin creates an `onChange` event that normalizes change events
           * across form elements. This event fires at a time when it's possible to
           * change the element's value without seeing a flicker.
           *
           * Supported elements are:
           * - input (see `isTextInputElement`)
           * - textarea
           * - select
           */
          var ChangeEventPlugin = {
            eventTypes: eventTypes$1,

            _isInputEventSupported: isInputEventSupported,

            extractEvents: function(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            ) {
              var targetNode = targetInst
                ? getNodeFromInstance$1(targetInst)
                : window;

              var getTargetInstFunc, handleEventFunc;
              if (shouldUseChangeEvent(targetNode)) {
                getTargetInstFunc = getTargetInstForChangeEvent;
              } else if (isTextInputElement(targetNode)) {
                if (isInputEventSupported) {
                  getTargetInstFunc = getTargetInstForInputOrChangeEvent;
                } else {
                  getTargetInstFunc = getTargetInstForInputEventPolyfill;
                  handleEventFunc = handleEventsForInputEventPolyfill;
                }
              } else if (shouldUseClickEvent(targetNode)) {
                getTargetInstFunc = getTargetInstForClickEvent;
              }

              if (getTargetInstFunc) {
                var inst = getTargetInstFunc(topLevelType, targetInst);
                if (inst) {
                  var event = createAndAccumulateChangeEvent(
                    inst,
                    nativeEvent,
                    nativeEventTarget
                  );
                  return event;
                }
              }

              if (handleEventFunc) {
                handleEventFunc(topLevelType, targetNode, targetInst);
              }

              // When blurring, set the value attribute for number inputs
              if (topLevelType === "topBlur") {
                handleControlledInputBlur(targetInst, targetNode);
              }
            }
          };

          /**
           * Module that is injectable into `EventPluginHub`, that specifies a
           * deterministic ordering of `EventPlugin`s. A convenient way to reason about
           * plugins, without having to package every one of them. This is better than
           * having plugins be ordered in the same order that they are injected because
           * that ordering would be influenced by the packaging order.
           * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
           * preventing default on events is convenient in `SimpleEventPlugin` handlers.
           */
          var DOMEventPluginOrder = [
            "ResponderEventPlugin",
            "SimpleEventPlugin",
            "TapEventPlugin",
            "EnterLeaveEventPlugin",
            "ChangeEventPlugin",
            "SelectEventPlugin",
            "BeforeInputEventPlugin"
          ];

          /**
           * @interface UIEvent
           * @see http://www.w3.org/TR/DOM-Level-3-Events/
           */
          var UIEventInterface = {
            view: null,
            detail: null
          };

          /**
           * @param {object} dispatchConfig Configuration used to dispatch this event.
           * @param {string} dispatchMarker Marker identifying the event target.
           * @param {object} nativeEvent Native browser event.
           * @extends {SyntheticEvent}
           */
          function SyntheticUIEvent(
            dispatchConfig,
            dispatchMarker,
            nativeEvent,
            nativeEventTarget
          ) {
            return SyntheticEvent$1.call(
              this,
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            );
          }

          SyntheticEvent$1.augmentClass(SyntheticUIEvent, UIEventInterface);

          /**
           * Translation from modifier key to the associated property in the event.
           * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
           */

          var modifierKeyToProp = {
            Alt: "altKey",
            Control: "ctrlKey",
            Meta: "metaKey",
            Shift: "shiftKey"
          };

          // IE8 does not implement getModifierState so we simply map it to the only
          // modifier keys exposed by the event itself, does not support Lock-keys.
          // Currently, all major browsers except Chrome seems to support Lock-keys.
          function modifierStateGetter(keyArg) {
            var syntheticEvent = this;
            var nativeEvent = syntheticEvent.nativeEvent;
            if (nativeEvent.getModifierState) {
              return nativeEvent.getModifierState(keyArg);
            }
            var keyProp = modifierKeyToProp[keyArg];
            return keyProp ? !!nativeEvent[keyProp] : false;
          }

          function getEventModifierState(nativeEvent) {
            return modifierStateGetter;
          }

          /**
           * @interface MouseEvent
           * @see http://www.w3.org/TR/DOM-Level-3-Events/
           */
          var MouseEventInterface = {
            screenX: null,
            screenY: null,
            clientX: null,
            clientY: null,
            pageX: null,
            pageY: null,
            ctrlKey: null,
            shiftKey: null,
            altKey: null,
            metaKey: null,
            getModifierState: getEventModifierState,
            button: null,
            buttons: null,
            relatedTarget: function(event) {
              return (
                event.relatedTarget ||
                (event.fromElement === event.srcElement
                  ? event.toElement
                  : event.fromElement)
              );
            }
          };

          /**
           * @param {object} dispatchConfig Configuration used to dispatch this event.
           * @param {string} dispatchMarker Marker identifying the event target.
           * @param {object} nativeEvent Native browser event.
           * @extends {SyntheticUIEvent}
           */
          function SyntheticMouseEvent(
            dispatchConfig,
            dispatchMarker,
            nativeEvent,
            nativeEventTarget
          ) {
            return SyntheticUIEvent.call(
              this,
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            );
          }

          SyntheticUIEvent.augmentClass(
            SyntheticMouseEvent,
            MouseEventInterface
          );

          var eventTypes$2 = {
            mouseEnter: {
              registrationName: "onMouseEnter",
              dependencies: ["topMouseOut", "topMouseOver"]
            },
            mouseLeave: {
              registrationName: "onMouseLeave",
              dependencies: ["topMouseOut", "topMouseOver"]
            }
          };

          var EnterLeaveEventPlugin = {
            eventTypes: eventTypes$2,

            /**
             * For almost every interaction we care about, there will be both a top-level
             * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
             * we do not extract duplicate events. However, moving the mouse into the
             * browser from outside will not fire a `mouseout` event. In this case, we use
             * the `mouseover` top-level event.
             */
            extractEvents: function(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            ) {
              if (
                topLevelType === "topMouseOver" &&
                (nativeEvent.relatedTarget || nativeEvent.fromElement)
              ) {
                return null;
              }
              if (
                topLevelType !== "topMouseOut" &&
                topLevelType !== "topMouseOver"
              ) {
                // Must not be a mouse in or mouse out - ignoring.
                return null;
              }

              var win;
              if (nativeEventTarget.window === nativeEventTarget) {
                // `nativeEventTarget` is probably a window object.
                win = nativeEventTarget;
              } else {
                // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
                var doc = nativeEventTarget.ownerDocument;
                if (doc) {
                  win = doc.defaultView || doc.parentWindow;
                } else {
                  win = window;
                }
              }

              var from;
              var to;
              if (topLevelType === "topMouseOut") {
                from = targetInst;
                var related =
                  nativeEvent.relatedTarget || nativeEvent.toElement;
                to = related ? getClosestInstanceFromNode(related) : null;
              } else {
                // Moving to a node from outside the window.
                from = null;
                to = targetInst;
              }

              if (from === to) {
                // Nothing pertains to our managed components.
                return null;
              }

              var fromNode = from == null ? win : getNodeFromInstance$1(from);
              var toNode = to == null ? win : getNodeFromInstance$1(to);

              var leave = SyntheticMouseEvent.getPooled(
                eventTypes$2.mouseLeave,
                from,
                nativeEvent,
                nativeEventTarget
              );
              leave.type = "mouseleave";
              leave.target = fromNode;
              leave.relatedTarget = toNode;

              var enter = SyntheticMouseEvent.getPooled(
                eventTypes$2.mouseEnter,
                to,
                nativeEvent,
                nativeEventTarget
              );
              enter.type = "mouseenter";
              enter.target = toNode;
              enter.relatedTarget = fromNode;

              accumulateEnterLeaveDispatches(leave, enter, from, to);

              return [leave, enter];
            }
          };

          /**
           * `ReactInstanceMap` maintains a mapping from a public facing stateful
           * instance (key) and the internal representation (value). This allows public
           * methods to accept the user facing instance as an argument and map them back
           * to internal methods.
           *
           * Note that this module is currently shared and assumed to be stateless.
           * If this becomes an actual Map, that will break.
           */

          /**
           * This API should be called `delete` but we'd have to make sure to always
           * transform these to strings for IE support. When this transform is fully
           * supported we can rename it.
           */

          function get(key) {
            return key._reactInternalFiber;
          }

          function has(key) {
            return key._reactInternalFiber !== undefined;
          }

          function set(key, value) {
            key._reactInternalFiber = value;
          }

          var ReactInternals =
            React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

          var ReactCurrentOwner = ReactInternals.ReactCurrentOwner;
          var ReactDebugCurrentFrame = ReactInternals.ReactDebugCurrentFrame;

          function getComponentName(fiber) {
            var type = fiber.type;

            if (typeof type === "string") {
              return type;
            }
            if (typeof type === "function") {
              return type.displayName || type.name;
            }
            return null;
          }

          // Don't change these two values:
          var NoEffect = 0; //           0b00000000
          var PerformedWork = 1; //      0b00000001

          // You can change the rest (and add more).
          var Placement = 2; //          0b00000010
          var Update = 4; //             0b00000100
          var PlacementAndUpdate = 6; // 0b00000110
          var Deletion = 8; //           0b00001000
          var ContentReset = 16; //      0b00010000
          var Callback = 32; //          0b00100000
          var Err = 64; //               0b01000000
          var Ref = 128; //              0b10000000

          var MOUNTING = 1;
          var MOUNTED = 2;
          var UNMOUNTED = 3;

          function isFiberMountedImpl(fiber) {
            var node = fiber;
            if (!fiber.alternate) {
              // If there is no alternate, this might be a new tree that isn't inserted
              // yet. If it is, then it will have a pending insertion effect on it.
              if ((node.effectTag & Placement) !== NoEffect) {
                return MOUNTING;
              }
              while (node["return"]) {
                node = node["return"];
                if ((node.effectTag & Placement) !== NoEffect) {
                  return MOUNTING;
                }
              }
            } else {
              while (node["return"]) {
                node = node["return"];
              }
            }
            if (node.tag === HostRoot) {
              // TODO: Check if this was a nested HostRoot when used with
              // renderContainerIntoSubtree.
              return MOUNTED;
            }
            // If we didn't hit the root, that means that we're in an disconnected tree
            // that has been unmounted.
            return UNMOUNTED;
          }

          function isFiberMounted(fiber) {
            return isFiberMountedImpl(fiber) === MOUNTED;
          }

          function isMounted(component) {
            {
              var owner = ReactCurrentOwner.current;
              if (owner !== null && owner.tag === ClassComponent) {
                var ownerFiber = owner;
                var instance = ownerFiber.stateNode;
                warning(
                  instance._warnedAboutRefsInRender,
                  "%s is accessing isMounted inside its render() function. " +
                    "render() should be a pure function of props and state. It should " +
                    "never access something that requires stale data from the previous " +
                    "render, such as refs. Move this logic to componentDidMount and " +
                    "componentDidUpdate instead.",
                  getComponentName(ownerFiber) || "A component"
                );
                instance._warnedAboutRefsInRender = true;
              }
            }

            var fiber = get(component);
            if (!fiber) {
              return false;
            }
            return isFiberMountedImpl(fiber) === MOUNTED;
          }

          function assertIsMounted(fiber) {
            !(isFiberMountedImpl(fiber) === MOUNTED)
              ? invariant(
                  false,
                  "Unable to find node on an unmounted component."
                )
              : void 0;
          }

          function findCurrentFiberUsingSlowPath(fiber) {
            var alternate = fiber.alternate;
            if (!alternate) {
              // If there is no alternate, then we only need to check if it is mounted.
              var state = isFiberMountedImpl(fiber);
              !(state !== UNMOUNTED)
                ? invariant(
                    false,
                    "Unable to find node on an unmounted component."
                  )
                : void 0;
              if (state === MOUNTING) {
                return null;
              }
              return fiber;
            }
            // If we have two possible branches, we'll walk backwards up to the root
            // to see what path the root points to. On the way we may hit one of the
            // special cases and we'll deal with them.
            var a = fiber;
            var b = alternate;
            while (true) {
              var parentA = a["return"];
              var parentB = parentA ? parentA.alternate : null;
              if (!parentA || !parentB) {
                // We're at the root.
                break;
              }

              // If both copies of the parent fiber point to the same child, we can
              // assume that the child is current. This happens when we bailout on low
              // priority: the bailed out fiber's child reuses the current child.
              if (parentA.child === parentB.child) {
                var child = parentA.child;
                while (child) {
                  if (child === a) {
                    // We've determined that A is the current branch.
                    assertIsMounted(parentA);
                    return fiber;
                  }
                  if (child === b) {
                    // We've determined that B is the current branch.
                    assertIsMounted(parentA);
                    return alternate;
                  }
                  child = child.sibling;
                }
                // We should never have an alternate for any mounting node. So the only
                // way this could possibly happen is if this was unmounted, if at all.
                invariant(
                  false,
                  "Unable to find node on an unmounted component."
                );
              }

              if (a["return"] !== b["return"]) {
                // The return pointer of A and the return pointer of B point to different
                // fibers. We assume that return pointers never criss-cross, so A must
                // belong to the child set of A.return, and B must belong to the child
                // set of B.return.
                a = parentA;
                b = parentB;
              } else {
                // The return pointers point to the same fiber. We'll have to use the
                // default, slow path: scan the child sets of each parent alternate to see
                // which child belongs to which set.
                //
                // Search parent A's child set
                var didFindChild = false;
                var _child = parentA.child;
                while (_child) {
                  if (_child === a) {
                    didFindChild = true;
                    a = parentA;
                    b = parentB;
                    break;
                  }
                  if (_child === b) {
                    didFindChild = true;
                    b = parentA;
                    a = parentB;
                    break;
                  }
                  _child = _child.sibling;
                }
                if (!didFindChild) {
                  // Search parent B's child set
                  _child = parentB.child;
                  while (_child) {
                    if (_child === a) {
                      didFindChild = true;
                      a = parentB;
                      b = parentA;
                      break;
                    }
                    if (_child === b) {
                      didFindChild = true;
                      b = parentB;
                      a = parentA;
                      break;
                    }
                    _child = _child.sibling;
                  }
                  !didFindChild
                    ? invariant(
                        false,
                        "Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."
                      )
                    : void 0;
                }
              }

              !(a.alternate === b)
                ? invariant(
                    false,
                    "Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;
            }
            // If the root is not a host container, we're in a disconnected tree. I.e.
            // unmounted.
            !(a.tag === HostRoot)
              ? invariant(
                  false,
                  "Unable to find node on an unmounted component."
                )
              : void 0;
            if (a.stateNode.current === a) {
              // We've determined that A is the current branch.
              return fiber;
            }
            // Otherwise B has to be current branch.
            return alternate;
          }

          function findCurrentHostFiber(parent) {
            var currentParent = findCurrentFiberUsingSlowPath(parent);
            if (!currentParent) {
              return null;
            }

            // Next we'll drill down this component to find the first HostComponent/Text.
            var node = currentParent;
            while (true) {
              if (node.tag === HostComponent || node.tag === HostText) {
                return node;
              } else if (node.child) {
                node.child["return"] = node;
                node = node.child;
                continue;
              }
              if (node === currentParent) {
                return null;
              }
              while (!node.sibling) {
                if (!node["return"] || node["return"] === currentParent) {
                  return null;
                }
                node = node["return"];
              }
              node.sibling["return"] = node["return"];
              node = node.sibling;
            }
            // Flow needs the return null here, but ESLint complains about it.
            // eslint-disable-next-line no-unreachable
            return null;
          }

          function findCurrentHostFiberWithNoPortals(parent) {
            var currentParent = findCurrentFiberUsingSlowPath(parent);
            if (!currentParent) {
              return null;
            }

            // Next we'll drill down this component to find the first HostComponent/Text.
            var node = currentParent;
            while (true) {
              if (node.tag === HostComponent || node.tag === HostText) {
                return node;
              } else if (node.child && node.tag !== HostPortal) {
                node.child["return"] = node;
                node = node.child;
                continue;
              }
              if (node === currentParent) {
                return null;
              }
              while (!node.sibling) {
                if (!node["return"] || node["return"] === currentParent) {
                  return null;
                }
                node = node["return"];
              }
              node.sibling["return"] = node["return"];
              node = node.sibling;
            }
            // Flow needs the return null here, but ESLint complains about it.
            // eslint-disable-next-line no-unreachable
            return null;
          }

          var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
          var callbackBookkeepingPool = [];

          /**
           * Find the deepest React component completely containing the root of the
           * passed-in instance (for use when entire React trees are nested within each
           * other). If React trees are not nested, returns null.
           */
          function findRootContainerNode(inst) {
            // TODO: It may be a good idea to cache this to prevent unnecessary DOM
            // traversal, but caching is difficult to do correctly without using a
            // mutation observer to listen for all DOM changes.
            while (inst["return"]) {
              inst = inst["return"];
            }
            if (inst.tag !== HostRoot) {
              // This can happen if we're in a detached tree.
              return null;
            }
            return inst.stateNode.containerInfo;
          }

          // Used to store ancestor hierarchy in top level callback
          function getTopLevelCallbackBookKeeping(
            topLevelType,
            nativeEvent,
            targetInst
          ) {
            if (callbackBookkeepingPool.length) {
              var instance = callbackBookkeepingPool.pop();
              instance.topLevelType = topLevelType;
              instance.nativeEvent = nativeEvent;
              instance.targetInst = targetInst;
              return instance;
            }
            return {
              topLevelType: topLevelType,
              nativeEvent: nativeEvent,
              targetInst: targetInst,
              ancestors: []
            };
          }

          function releaseTopLevelCallbackBookKeeping(instance) {
            instance.topLevelType = null;
            instance.nativeEvent = null;
            instance.targetInst = null;
            instance.ancestors.length = 0;
            if (
              callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE
            ) {
              callbackBookkeepingPool.push(instance);
            }
          }

          function handleTopLevelImpl(bookKeeping) {
            var targetInst = bookKeeping.targetInst;

            // Loop through the hierarchy, in case there's any nested components.
            // It's important that we build the array of ancestors before calling any
            // event handlers, because event handlers can modify the DOM, leading to
            // inconsistencies with ReactMount's node cache. See #1105.
            var ancestor = targetInst;
            do {
              if (!ancestor) {
                bookKeeping.ancestors.push(ancestor);
                break;
              }
              var root = findRootContainerNode(ancestor);
              if (!root) {
                break;
              }
              bookKeeping.ancestors.push(ancestor);
              ancestor = getClosestInstanceFromNode(root);
            } while (ancestor);

            for (var i = 0; i < bookKeeping.ancestors.length; i++) {
              targetInst = bookKeeping.ancestors[i];
              _handleTopLevel(
                bookKeeping.topLevelType,
                targetInst,
                bookKeeping.nativeEvent,
                getEventTarget(bookKeeping.nativeEvent)
              );
            }
          }

          // TODO: can we stop exporting these?
          var _enabled = true;
          var _handleTopLevel = void 0;

          function setHandleTopLevel(handleTopLevel) {
            _handleTopLevel = handleTopLevel;
          }

          function setEnabled(enabled) {
            _enabled = !!enabled;
          }

          function isEnabled() {
            return _enabled;
          }

          /**
           * Traps top-level events by using event bubbling.
           *
           * @param {string} topLevelType Record from `BrowserEventConstants`.
           * @param {string} handlerBaseName Event name (e.g. "click").
           * @param {object} element Element on which to attach listener.
           * @return {?object} An object with a remove function which will forcefully
           *                  remove the listener.
           * @internal
           */
          function trapBubbledEvent(topLevelType, handlerBaseName, element) {
            if (!element) {
              return null;
            }
            return EventListener.listen(
              element,
              handlerBaseName,
              dispatchEvent.bind(null, topLevelType)
            );
          }

          /**
           * Traps a top-level event by using event capturing.
           *
           * @param {string} topLevelType Record from `BrowserEventConstants`.
           * @param {string} handlerBaseName Event name (e.g. "click").
           * @param {object} element Element on which to attach listener.
           * @return {?object} An object with a remove function which will forcefully
           *                  remove the listener.
           * @internal
           */
          function trapCapturedEvent(topLevelType, handlerBaseName, element) {
            if (!element) {
              return null;
            }
            return EventListener.capture(
              element,
              handlerBaseName,
              dispatchEvent.bind(null, topLevelType)
            );
          }

          function dispatchEvent(topLevelType, nativeEvent) {
            if (!_enabled) {
              return;
            }

            var nativeEventTarget = getEventTarget(nativeEvent);
            var targetInst = getClosestInstanceFromNode(nativeEventTarget);
            if (
              targetInst !== null &&
              typeof targetInst.tag === "number" &&
              !isFiberMounted(targetInst)
            ) {
              // If we get an event (ex: img onload) before committing that
              // component's mount, ignore it for now (that is, treat it as if it was an
              // event on a non-React tree). We might also consider queueing events and
              // dispatching them after the mount.
              targetInst = null;
            }

            var bookKeeping = getTopLevelCallbackBookKeeping(
              topLevelType,
              nativeEvent,
              targetInst
            );

            try {
              // Event queue being processed in the same cycle allows
              // `preventDefault`.
              batchedUpdates(handleTopLevelImpl, bookKeeping);
            } finally {
              releaseTopLevelCallbackBookKeeping(bookKeeping);
            }
          }

          var ReactDOMEventListener = Object.freeze({
            get _enabled() {
              return _enabled;
            },
            get _handleTopLevel() {
              return _handleTopLevel;
            },
            setHandleTopLevel: setHandleTopLevel,
            setEnabled: setEnabled,
            isEnabled: isEnabled,
            trapBubbledEvent: trapBubbledEvent,
            trapCapturedEvent: trapCapturedEvent,
            dispatchEvent: dispatchEvent
          });

          /**
           * Generate a mapping of standard vendor prefixes using the defined style property and event name.
           *
           * @param {string} styleProp
           * @param {string} eventName
           * @returns {object}
           */
          function makePrefixMap(styleProp, eventName) {
            var prefixes = {};

            prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
            prefixes["Webkit" + styleProp] = "webkit" + eventName;
            prefixes["Moz" + styleProp] = "moz" + eventName;
            prefixes["ms" + styleProp] = "MS" + eventName;
            prefixes["O" + styleProp] = "o" + eventName.toLowerCase();

            return prefixes;
          }

          /**
           * A list of event names to a configurable list of vendor prefixes.
           */
          var vendorPrefixes = {
            animationend: makePrefixMap("Animation", "AnimationEnd"),
            animationiteration: makePrefixMap(
              "Animation",
              "AnimationIteration"
            ),
            animationstart: makePrefixMap("Animation", "AnimationStart"),
            transitionend: makePrefixMap("Transition", "TransitionEnd")
          };

          /**
           * Event names that have already been detected and prefixed (if applicable).
           */
          var prefixedEventNames = {};

          /**
           * Element to check for prefixes on.
           */
          var style = {};

          /**
           * Bootstrap if a DOM exists.
           */
          if (ExecutionEnvironment.canUseDOM) {
            style = document.createElement("div").style;

            // On some platforms, in particular some releases of Android 4.x,
            // the un-prefixed "animation" and "transition" properties are defined on the
            // style object but the events that fire will still be prefixed, so we need
            // to check if the un-prefixed events are usable, and if not remove them from the map.
            if (!("AnimationEvent" in window)) {
              delete vendorPrefixes.animationend.animation;
              delete vendorPrefixes.animationiteration.animation;
              delete vendorPrefixes.animationstart.animation;
            }

            // Same as above
            if (!("TransitionEvent" in window)) {
              delete vendorPrefixes.transitionend.transition;
            }
          }

          /**
           * Attempts to determine the correct vendor prefixed event name.
           *
           * @param {string} eventName
           * @returns {string}
           */
          function getVendorPrefixedEventName(eventName) {
            if (prefixedEventNames[eventName]) {
              return prefixedEventNames[eventName];
            } else if (!vendorPrefixes[eventName]) {
              return eventName;
            }

            var prefixMap = vendorPrefixes[eventName];

            for (var styleProp in prefixMap) {
              if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
                return (prefixedEventNames[eventName] = prefixMap[styleProp]);
              }
            }

            return "";
          }

          /**
           * Types of raw signals from the browser caught at the top level.
           *
           * For events like 'submit' which don't consistently bubble (which we
           * trap at a lower node than `document`), binding at `document` would
           * cause duplicate events so we don't include them here.
           */
          var topLevelTypes$1 = {
            topAbort: "abort",
            topAnimationEnd:
              getVendorPrefixedEventName("animationend") || "animationend",
            topAnimationIteration:
              getVendorPrefixedEventName("animationiteration") ||
              "animationiteration",
            topAnimationStart:
              getVendorPrefixedEventName("animationstart") || "animationstart",
            topBlur: "blur",
            topCancel: "cancel",
            topCanPlay: "canplay",
            topCanPlayThrough: "canplaythrough",
            topChange: "change",
            topClick: "click",
            topClose: "close",
            topCompositionEnd: "compositionend",
            topCompositionStart: "compositionstart",
            topCompositionUpdate: "compositionupdate",
            topContextMenu: "contextmenu",
            topCopy: "copy",
            topCut: "cut",
            topDoubleClick: "dblclick",
            topDrag: "drag",
            topDragEnd: "dragend",
            topDragEnter: "dragenter",
            topDragExit: "dragexit",
            topDragLeave: "dragleave",
            topDragOver: "dragover",
            topDragStart: "dragstart",
            topDrop: "drop",
            topDurationChange: "durationchange",
            topEmptied: "emptied",
            topEncrypted: "encrypted",
            topEnded: "ended",
            topError: "error",
            topFocus: "focus",
            topInput: "input",
            topKeyDown: "keydown",
            topKeyPress: "keypress",
            topKeyUp: "keyup",
            topLoadedData: "loadeddata",
            topLoad: "load",
            topLoadedMetadata: "loadedmetadata",
            topLoadStart: "loadstart",
            topMouseDown: "mousedown",
            topMouseMove: "mousemove",
            topMouseOut: "mouseout",
            topMouseOver: "mouseover",
            topMouseUp: "mouseup",
            topPaste: "paste",
            topPause: "pause",
            topPlay: "play",
            topPlaying: "playing",
            topProgress: "progress",
            topRateChange: "ratechange",
            topScroll: "scroll",
            topSeeked: "seeked",
            topSeeking: "seeking",
            topSelectionChange: "selectionchange",
            topStalled: "stalled",
            topSuspend: "suspend",
            topTextInput: "textInput",
            topTimeUpdate: "timeupdate",
            topToggle: "toggle",
            topTouchCancel: "touchcancel",
            topTouchEnd: "touchend",
            topTouchMove: "touchmove",
            topTouchStart: "touchstart",
            topTransitionEnd:
              getVendorPrefixedEventName("transitionend") || "transitionend",
            topVolumeChange: "volumechange",
            topWaiting: "waiting",
            topWheel: "wheel"
          };

          var BrowserEventConstants = {
            topLevelTypes: topLevelTypes$1
          };

          function runEventQueueInBatch(events) {
            enqueueEvents(events);
            processEventQueue(false);
          }

          /**
           * Streams a fired top-level event to `EventPluginHub` where plugins have the
           * opportunity to create `ReactEvent`s to be dispatched.
           */
          function handleTopLevel(
            topLevelType,
            targetInst,
            nativeEvent,
            nativeEventTarget
          ) {
            var events = extractEvents(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            );
            runEventQueueInBatch(events);
          }

          var topLevelTypes = BrowserEventConstants.topLevelTypes;

          /**
           * Summary of `ReactBrowserEventEmitter` event handling:
           *
           *  - Top-level delegation is used to trap most native browser events. This
           *    may only occur in the main thread and is the responsibility of
           *    ReactDOMEventListener, which is injected and can therefore support
           *    pluggable event sources. This is the only work that occurs in the main
           *    thread.
           *
           *  - We normalize and de-duplicate events to account for browser quirks. This
           *    may be done in the worker thread.
           *
           *  - Forward these native events (with the associated top-level type used to
           *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
           *    to extract any synthetic events.
           *
           *  - The `EventPluginHub` will then process each event by annotating them with
           *    "dispatches", a sequence of listeners and IDs that care about that event.
           *
           *  - The `EventPluginHub` then dispatches the events.
           *
           * Overview of React and the event system:
           *
           * +------------+    .
           * |    DOM     |    .
           * +------------+    .
           *       |           .
           *       v           .
           * +------------+    .
           * | ReactEvent |    .
           * |  Listener  |    .
           * +------------+    .                         +-----------+
           *       |           .               +--------+|SimpleEvent|
           *       |           .               |         |Plugin     |
           * +-----|------+    .               v         +-----------+
           * |     |      |    .    +--------------+                    +------------+
           * |     +-----------.--->|EventPluginHub|                    |    Event   |
           * |            |    .    |              |     +-----------+  | Propagators|
           * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
           * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
           * |            |    .    |              |     +-----------+  |  utilities |
           * |     +-----------.--->|              |                    +------------+
           * |     |      |    .    +--------------+
           * +-----|------+    .                ^        +-----------+
           *       |           .                |        |Enter/Leave|
           *       +           .                +-------+|Plugin     |
           * +-------------+   .                         +-----------+
           * | application |   .
           * |-------------|   .
           * |             |   .
           * |             |   .
           * +-------------+   .
           *                   .
           *    React Core     .  General Purpose Event Plugin System
           */

          var alreadyListeningTo = {};
          var reactTopListenersCounter = 0;

          /**
           * To ensure no conflicts with other potential React instances on the page
           */
          var topListenersIDKey =
            "_reactListenersID" + ("" + Math.random()).slice(2);

          function getListeningForDocument(mountAt) {
            // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
            // directly.
            if (
              !Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)
            ) {
              mountAt[topListenersIDKey] = reactTopListenersCounter++;
              alreadyListeningTo[mountAt[topListenersIDKey]] = {};
            }
            return alreadyListeningTo[mountAt[topListenersIDKey]];
          }

          /**
           * We listen for bubbled touch events on the document object.
           *
           * Firefox v8.01 (and possibly others) exhibited strange behavior when
           * mounting `onmousemove` events at some node that was not the document
           * element. The symptoms were that if your mouse is not moving over something
           * contained within that mount point (for example on the background) the
           * top-level listeners for `onmousemove` won't be called. However, if you
           * register the `mousemove` on the document object, then it will of course
           * catch all `mousemove`s. This along with iOS quirks, justifies restricting
           * top-level listeners to the document object only, at least for these
           * movement types of events and possibly all events.
           *
           * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
           *
           * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
           * they bubble to document.
           *
           * @param {string} registrationName Name of listener (e.g. `onClick`).
           * @param {object} contentDocumentHandle Document which owns the container
           */
          function listenTo(registrationName, contentDocumentHandle) {
            var mountAt = contentDocumentHandle;
            var isListening = getListeningForDocument(mountAt);
            var dependencies = registrationNameDependencies[registrationName];

            for (var i = 0; i < dependencies.length; i++) {
              var dependency = dependencies[i];
              if (
                !(
                  isListening.hasOwnProperty(dependency) &&
                  isListening[dependency]
                )
              ) {
                if (dependency === "topWheel") {
                  if (isEventSupported("wheel")) {
                    trapBubbledEvent("topWheel", "wheel", mountAt);
                  } else if (isEventSupported("mousewheel")) {
                    trapBubbledEvent("topWheel", "mousewheel", mountAt);
                  } else {
                    // Firefox needs to capture a different mouse scroll event.
                    // @see http://www.quirksmode.org/dom/events/tests/scroll.html
                    trapBubbledEvent("topWheel", "DOMMouseScroll", mountAt);
                  }
                } else if (dependency === "topScroll") {
                  trapCapturedEvent("topScroll", "scroll", mountAt);
                } else if (
                  dependency === "topFocus" ||
                  dependency === "topBlur"
                ) {
                  trapCapturedEvent("topFocus", "focus", mountAt);
                  trapCapturedEvent("topBlur", "blur", mountAt);

                  // to make sure blur and focus event listeners are only attached once
                  isListening.topBlur = true;
                  isListening.topFocus = true;
                } else if (dependency === "topCancel") {
                  if (isEventSupported("cancel", true)) {
                    trapCapturedEvent("topCancel", "cancel", mountAt);
                  }
                  isListening.topCancel = true;
                } else if (dependency === "topClose") {
                  if (isEventSupported("close", true)) {
                    trapCapturedEvent("topClose", "close", mountAt);
                  }
                  isListening.topClose = true;
                } else if (topLevelTypes.hasOwnProperty(dependency)) {
                  trapBubbledEvent(
                    dependency,
                    topLevelTypes[dependency],
                    mountAt
                  );
                }

                isListening[dependency] = true;
              }
            }
          }

          function isListeningToAllDependencies(registrationName, mountAt) {
            var isListening = getListeningForDocument(mountAt);
            var dependencies = registrationNameDependencies[registrationName];
            for (var i = 0; i < dependencies.length; i++) {
              var dependency = dependencies[i];
              if (
                !(
                  isListening.hasOwnProperty(dependency) &&
                  isListening[dependency]
                )
              ) {
                return false;
              }
            }
            return true;
          }

          /**
           * Given any node return the first leaf node without children.
           *
           * @param {DOMElement|DOMTextNode} node
           * @return {DOMElement|DOMTextNode}
           */
          function getLeafNode(node) {
            while (node && node.firstChild) {
              node = node.firstChild;
            }
            return node;
          }

          /**
           * Get the next sibling within a container. This will walk up the
           * DOM if a node's siblings have been exhausted.
           *
           * @param {DOMElement|DOMTextNode} node
           * @return {?DOMElement|DOMTextNode}
           */
          function getSiblingNode(node) {
            while (node) {
              if (node.nextSibling) {
                return node.nextSibling;
              }
              node = node.parentNode;
            }
          }

          /**
           * Get object describing the nodes which contain characters at offset.
           *
           * @param {DOMElement|DOMTextNode} root
           * @param {number} offset
           * @return {?object}
           */
          function getNodeForCharacterOffset(root, offset) {
            var node = getLeafNode(root);
            var nodeStart = 0;
            var nodeEnd = 0;

            while (node) {
              if (node.nodeType === TEXT_NODE) {
                nodeEnd = nodeStart + node.textContent.length;

                if (nodeStart <= offset && nodeEnd >= offset) {
                  return {
                    node: node,
                    offset: offset - nodeStart
                  };
                }

                nodeStart = nodeEnd;
              }

              node = getLeafNode(getSiblingNode(node));
            }
          }

          /**
           * @param {DOMElement} outerNode
           * @return {?object}
           */
          function getOffsets(outerNode) {
            var selection = window.getSelection && window.getSelection();

            if (!selection || selection.rangeCount === 0) {
              return null;
            }

            var anchorNode = selection.anchorNode;
            var anchorOffset = selection.anchorOffset;
            var focusNode$$1 = selection.focusNode;
            var focusOffset = selection.focusOffset;

            // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
            // up/down buttons on an <input type="number">. Anonymous divs do not seem to
            // expose properties, triggering a "Permission denied error" if any of its
            // properties are accessed. The only seemingly possible way to avoid erroring
            // is to access a property that typically works for non-anonymous divs and
            // catch any error that may otherwise arise. See
            // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
            try {
              /* eslint-disable no-unused-expressions */
              anchorNode.nodeType;
              focusNode$$1.nodeType;
              /* eslint-enable no-unused-expressions */
            } catch (e) {
              return null;
            }

            return getModernOffsetsFromPoints(
              outerNode,
              anchorNode,
              anchorOffset,
              focusNode$$1,
              focusOffset
            );
          }

          /**
           * Returns {start, end} where `start` is the character/codepoint index of
           * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
           * `end` is the index of (focusNode, focusOffset).
           *
           * Returns null if you pass in garbage input but we should probably just crash.
           *
           * Exported only for testing.
           */
          function getModernOffsetsFromPoints(
            outerNode,
            anchorNode,
            anchorOffset,
            focusNode$$1,
            focusOffset
          ) {
            var length = 0;
            var start = -1;
            var end = -1;
            var indexWithinAnchor = 0;
            var indexWithinFocus = 0;
            var node = outerNode;
            var parentNode = null;

            outer: while (true) {
              var next = null;

              while (true) {
                if (
                  node === anchorNode &&
                  (anchorOffset === 0 || node.nodeType === TEXT_NODE)
                ) {
                  start = length + anchorOffset;
                }
                if (
                  node === focusNode$$1 &&
                  (focusOffset === 0 || node.nodeType === TEXT_NODE)
                ) {
                  end = length + focusOffset;
                }

                if (node.nodeType === TEXT_NODE) {
                  length += node.nodeValue.length;
                }

                if ((next = node.firstChild) === null) {
                  break;
                }
                // Moving from `node` to its first child `next`.
                parentNode = node;
                node = next;
              }

              while (true) {
                if (node === outerNode) {
                  // If `outerNode` has children, this is always the second time visiting
                  // it. If it has no children, this is still the first loop, and the only
                  // valid selection is anchorNode and focusNode both equal to this node
                  // and both offsets 0, in which case we will have handled above.
                  break outer;
                }
                if (
                  parentNode === anchorNode &&
                  ++indexWithinAnchor === anchorOffset
                ) {
                  start = length;
                }
                if (
                  parentNode === focusNode$$1 &&
                  ++indexWithinFocus === focusOffset
                ) {
                  end = length;
                }
                if ((next = node.nextSibling) !== null) {
                  break;
                }
                node = parentNode;
                parentNode = node.parentNode;
              }

              // Moving from `node` to its next sibling `next`.
              node = next;
            }

            if (start === -1 || end === -1) {
              // This should never happen. (Would happen if the anchor/focus nodes aren't
              // actually inside the passed-in node.)
              return null;
            }

            return {
              start: start,
              end: end
            };
          }

          /**
           * In modern non-IE browsers, we can support both forward and backward
           * selections.
           *
           * Note: IE10+ supports the Selection object, but it does not support
           * the `extend` method, which means that even in modern IE, it's not possible
           * to programmatically create a backward selection. Thus, for all IE
           * versions, we use the old IE API to create our selections.
           *
           * @param {DOMElement|DOMTextNode} node
           * @param {object} offsets
           */
          function setOffsets(node, offsets) {
            if (!window.getSelection) {
              return;
            }

            var selection = window.getSelection();
            var length = node[getTextContentAccessor()].length;
            var start = Math.min(offsets.start, length);
            var end =
              offsets.end === undefined ? start : Math.min(offsets.end, length);

            // IE 11 uses modern selection, but doesn't support the extend method.
            // Flip backward selections, so we can set with a single range.
            if (!selection.extend && start > end) {
              var temp = end;
              end = start;
              start = temp;
            }

            var startMarker = getNodeForCharacterOffset(node, start);
            var endMarker = getNodeForCharacterOffset(node, end);

            if (startMarker && endMarker) {
              if (
                selection.rangeCount === 1 &&
                selection.anchorNode === startMarker.node &&
                selection.anchorOffset === startMarker.offset &&
                selection.focusNode === endMarker.node &&
                selection.focusOffset === endMarker.offset
              ) {
                return;
              }
              var range = document.createRange();
              range.setStart(startMarker.node, startMarker.offset);
              selection.removeAllRanges();

              if (start > end) {
                selection.addRange(range);
                selection.extend(endMarker.node, endMarker.offset);
              } else {
                range.setEnd(endMarker.node, endMarker.offset);
                selection.addRange(range);
              }
            }
          }

          function isInDocument(node) {
            return containsNode(document.documentElement, node);
          }

          /**
           * @ReactInputSelection: React input selection module. Based on Selection.js,
           * but modified to be suitable for react and has a couple of bug fixes (doesn't
           * assume buttons have range selections allowed).
           * Input selection module for React.
           */

          function hasSelectionCapabilities(elem) {
            var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
            return (
              nodeName &&
              ((nodeName === "input" && elem.type === "text") ||
                nodeName === "textarea" ||
                elem.contentEditable === "true")
            );
          }

          function getSelectionInformation() {
            var focusedElem = getActiveElement();
            return {
              focusedElem: focusedElem,
              selectionRange: hasSelectionCapabilities(focusedElem)
                ? getSelection$1(focusedElem)
                : null
            };
          }

          /**
           * @restoreSelection: If any selection information was potentially lost,
           * restore it. This is useful when performing operations that could remove dom
           * nodes and place them back in, resulting in focus being lost.
           */
          function restoreSelection(priorSelectionInformation) {
            var curFocusedElem = getActiveElement();
            var priorFocusedElem = priorSelectionInformation.focusedElem;
            var priorSelectionRange = priorSelectionInformation.selectionRange;
            if (
              curFocusedElem !== priorFocusedElem &&
              isInDocument(priorFocusedElem)
            ) {
              if (hasSelectionCapabilities(priorFocusedElem)) {
                setSelection(priorFocusedElem, priorSelectionRange);
              }

              // Focusing a node can change the scroll position, which is undesirable
              var ancestors = [];
              var ancestor = priorFocusedElem;
              while ((ancestor = ancestor.parentNode)) {
                if (ancestor.nodeType === ELEMENT_NODE) {
                  ancestors.push({
                    element: ancestor,
                    left: ancestor.scrollLeft,
                    top: ancestor.scrollTop
                  });
                }
              }

              focusNode(priorFocusedElem);

              for (var i = 0; i < ancestors.length; i++) {
                var info = ancestors[i];
                info.element.scrollLeft = info.left;
                info.element.scrollTop = info.top;
              }
            }
          }

          /**
           * @getSelection: Gets the selection bounds of a focused textarea, input or
           * contentEditable node.
           * -@input: Look up selection bounds of this input
           * -@return {start: selectionStart, end: selectionEnd}
           */
          function getSelection$1(input) {
            var selection = void 0;

            if ("selectionStart" in input) {
              // Modern browser with input or textarea.
              selection = {
                start: input.selectionStart,
                end: input.selectionEnd
              };
            } else {
              // Content editable or old IE textarea.
              selection = getOffsets(input);
            }

            return selection || { start: 0, end: 0 };
          }

          /**
           * @setSelection: Sets the selection bounds of a textarea or input and focuses
           * the input.
           * -@input     Set selection bounds of this input or textarea
           * -@offsets   Object of same form that is returned from get*
           */
          function setSelection(input, offsets) {
            var start = offsets.start,
              end = offsets.end;

            if (end === undefined) {
              end = start;
            }

            if ("selectionStart" in input) {
              input.selectionStart = start;
              input.selectionEnd = Math.min(end, input.value.length);
            } else {
              setOffsets(input, offsets);
            }
          }

          var skipSelectionChangeEvent =
            ExecutionEnvironment.canUseDOM &&
            "documentMode" in document &&
            document.documentMode <= 11;

          var eventTypes$3 = {
            select: {
              phasedRegistrationNames: {
                bubbled: "onSelect",
                captured: "onSelectCapture"
              },
              dependencies: [
                "topBlur",
                "topContextMenu",
                "topFocus",
                "topKeyDown",
                "topKeyUp",
                "topMouseDown",
                "topMouseUp",
                "topSelectionChange"
              ]
            }
          };

          var activeElement$1 = null;
          var activeElementInst$1 = null;
          var lastSelection = null;
          var mouseDown = false;

          /**
           * Get an object which is a unique representation of the current selection.
           *
           * The return value will not be consistent across nodes or browsers, but
           * two identical selections on the same node will return identical objects.
           *
           * @param {DOMElement} node
           * @return {object}
           */
          function getSelection(node) {
            if ("selectionStart" in node && hasSelectionCapabilities(node)) {
              return {
                start: node.selectionStart,
                end: node.selectionEnd
              };
            } else if (window.getSelection) {
              var selection = window.getSelection();
              return {
                anchorNode: selection.anchorNode,
                anchorOffset: selection.anchorOffset,
                focusNode: selection.focusNode,
                focusOffset: selection.focusOffset
              };
            }
          }

          /**
           * Poll selection to see whether it's changed.
           *
           * @param {object} nativeEvent
           * @return {?SyntheticEvent}
           */
          function constructSelectEvent(nativeEvent, nativeEventTarget) {
            // Ensure we have the right element, and that the user is not dragging a
            // selection (this matches native `select` event behavior). In HTML5, select
            // fires only on input and textarea thus if there's no focused element we
            // won't dispatch.
            if (
              mouseDown ||
              activeElement$1 == null ||
              activeElement$1 !== getActiveElement()
            ) {
              return null;
            }

            // Only fire when selection has actually changed.
            var currentSelection = getSelection(activeElement$1);
            if (
              !lastSelection ||
              !shallowEqual(lastSelection, currentSelection)
            ) {
              lastSelection = currentSelection;

              var syntheticEvent = SyntheticEvent$1.getPooled(
                eventTypes$3.select,
                activeElementInst$1,
                nativeEvent,
                nativeEventTarget
              );

              syntheticEvent.type = "select";
              syntheticEvent.target = activeElement$1;

              accumulateTwoPhaseDispatches(syntheticEvent);

              return syntheticEvent;
            }

            return null;
          }

          /**
           * This plugin creates an `onSelect` event that normalizes select events
           * across form elements.
           *
           * Supported elements are:
           * - input (see `isTextInputElement`)
           * - textarea
           * - contentEditable
           *
           * This differs from native browser implementations in the following ways:
           * - Fires on contentEditable fields as well as inputs.
           * - Fires for collapsed selection.
           * - Fires after user input.
           */
          var SelectEventPlugin = {
            eventTypes: eventTypes$3,

            extractEvents: function(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            ) {
              var doc =
                nativeEventTarget.window === nativeEventTarget
                  ? nativeEventTarget.document
                  : nativeEventTarget.nodeType === DOCUMENT_NODE
                    ? nativeEventTarget
                    : nativeEventTarget.ownerDocument;
              // Track whether all listeners exists for this plugin. If none exist, we do
              // not extract events. See #3639.
              if (!doc || !isListeningToAllDependencies("onSelect", doc)) {
                return null;
              }

              var targetNode = targetInst
                ? getNodeFromInstance$1(targetInst)
                : window;

              switch (topLevelType) {
                // Track the input node that has focus.
                case "topFocus":
                  if (
                    isTextInputElement(targetNode) ||
                    targetNode.contentEditable === "true"
                  ) {
                    activeElement$1 = targetNode;
                    activeElementInst$1 = targetInst;
                    lastSelection = null;
                  }
                  break;
                case "topBlur":
                  activeElement$1 = null;
                  activeElementInst$1 = null;
                  lastSelection = null;
                  break;
                // Don't fire the event while the user is dragging. This matches the
                // semantics of the native select event.
                case "topMouseDown":
                  mouseDown = true;
                  break;
                case "topContextMenu":
                case "topMouseUp":
                  mouseDown = false;
                  return constructSelectEvent(nativeEvent, nativeEventTarget);
                // Chrome and IE fire non-standard event when selection is changed (and
                // sometimes when it hasn't). IE's event fires out of order with respect
                // to key and input events on deletion, so we discard it.
                //
                // Firefox doesn't support selectionchange, so check selection status
                // after each key entry. The selection changes after keydown and before
                // keyup, but we check on keydown as well in the case of holding down a
                // key, when multiple keydown events are fired but only one keyup is.
                // This is also our approach for IE handling, for the reason above.
                case "topSelectionChange":
                  if (skipSelectionChangeEvent) {
                    break;
                  }
                // falls through
                case "topKeyDown":
                case "topKeyUp":
                  return constructSelectEvent(nativeEvent, nativeEventTarget);
              }

              return null;
            }
          };

          /**
           * @interface Event
           * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
           * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
           */
          var AnimationEventInterface = {
            animationName: null,
            elapsedTime: null,
            pseudoElement: null
          };

          /**
           * @param {object} dispatchConfig Configuration used to dispatch this event.
           * @param {string} dispatchMarker Marker identifying the event target.
           * @param {object} nativeEvent Native browser event.
           * @extends {SyntheticEvent}
           */
          function SyntheticAnimationEvent(
            dispatchConfig,
            dispatchMarker,
            nativeEvent,
            nativeEventTarget
          ) {
            return SyntheticEvent$1.call(
              this,
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            );
          }

          SyntheticEvent$1.augmentClass(
            SyntheticAnimationEvent,
            AnimationEventInterface
          );

          /**
           * @interface Event
           * @see http://www.w3.org/TR/clipboard-apis/
           */
          var ClipboardEventInterface = {
            clipboardData: function(event) {
              return "clipboardData" in event
                ? event.clipboardData
                : window.clipboardData;
            }
          };

          /**
           * @param {object} dispatchConfig Configuration used to dispatch this event.
           * @param {string} dispatchMarker Marker identifying the event target.
           * @param {object} nativeEvent Native browser event.
           * @extends {SyntheticEvent}
           */
          function SyntheticClipboardEvent(
            dispatchConfig,
            dispatchMarker,
            nativeEvent,
            nativeEventTarget
          ) {
            return SyntheticEvent$1.call(
              this,
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            );
          }

          SyntheticEvent$1.augmentClass(
            SyntheticClipboardEvent,
            ClipboardEventInterface
          );

          /**
           * @interface FocusEvent
           * @see http://www.w3.org/TR/DOM-Level-3-Events/
           */
          var FocusEventInterface = {
            relatedTarget: null
          };

          /**
           * @param {object} dispatchConfig Configuration used to dispatch this event.
           * @param {string} dispatchMarker Marker identifying the event target.
           * @param {object} nativeEvent Native browser event.
           * @extends {SyntheticUIEvent}
           */
          function SyntheticFocusEvent(
            dispatchConfig,
            dispatchMarker,
            nativeEvent,
            nativeEventTarget
          ) {
            return SyntheticUIEvent.call(
              this,
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            );
          }

          SyntheticUIEvent.augmentClass(
            SyntheticFocusEvent,
            FocusEventInterface
          );

          /**
           * `charCode` represents the actual "character code" and is safe to use with
           * `String.fromCharCode`. As such, only keys that correspond to printable
           * characters produce a valid `charCode`, the only exception to this is Enter.
           * The Tab-key is considered non-printable and does not have a `charCode`,
           * presumably because it does not produce a tab-character in browsers.
           *
           * @param {object} nativeEvent Native browser event.
           * @return {number} Normalized `charCode` property.
           */
          function getEventCharCode(nativeEvent) {
            var charCode;
            var keyCode = nativeEvent.keyCode;

            if ("charCode" in nativeEvent) {
              charCode = nativeEvent.charCode;

              // FF does not set `charCode` for the Enter-key, check against `keyCode`.
              if (charCode === 0 && keyCode === 13) {
                charCode = 13;
              }
            } else {
              // IE8 does not implement `charCode`, but `keyCode` has the correct value.
              charCode = keyCode;
            }

            // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
            // Must not discard the (non-)printable Enter-key.
            if (charCode >= 32 || charCode === 13) {
              return charCode;
            }

            return 0;
          }

          /**
           * Normalization of deprecated HTML5 `key` values
           * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
           */
          var normalizeKey = {
            Esc: "Escape",
            Spacebar: " ",
            Left: "ArrowLeft",
            Up: "ArrowUp",
            Right: "ArrowRight",
            Down: "ArrowDown",
            Del: "Delete",
            Win: "OS",
            Menu: "ContextMenu",
            Apps: "ContextMenu",
            Scroll: "ScrollLock",
            MozPrintableKey: "Unidentified"
          };

          /**
           * Translation from legacy `keyCode` to HTML5 `key`
           * Only special keys supported, all others depend on keyboard layout or browser
           * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
           */
          var translateToKey = {
            "8": "Backspace",
            "9": "Tab",
            "12": "Clear",
            "13": "Enter",
            "16": "Shift",
            "17": "Control",
            "18": "Alt",
            "19": "Pause",
            "20": "CapsLock",
            "27": "Escape",
            "32": " ",
            "33": "PageUp",
            "34": "PageDown",
            "35": "End",
            "36": "Home",
            "37": "ArrowLeft",
            "38": "ArrowUp",
            "39": "ArrowRight",
            "40": "ArrowDown",
            "45": "Insert",
            "46": "Delete",
            "112": "F1",
            "113": "F2",
            "114": "F3",
            "115": "F4",
            "116": "F5",
            "117": "F6",
            "118": "F7",
            "119": "F8",
            "120": "F9",
            "121": "F10",
            "122": "F11",
            "123": "F12",
            "144": "NumLock",
            "145": "ScrollLock",
            "224": "Meta"
          };

          /**
           * @param {object} nativeEvent Native browser event.
           * @return {string} Normalized `key` property.
           */
          function getEventKey(nativeEvent) {
            if (nativeEvent.key) {
              // Normalize inconsistent values reported by browsers due to
              // implementations of a working draft specification.

              // FireFox implements `key` but returns `MozPrintableKey` for all
              // printable characters (normalized to `Unidentified`), ignore it.
              var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
              if (key !== "Unidentified") {
                return key;
              }
            }

            // Browser does not implement `key`, polyfill as much of it as we can.
            if (nativeEvent.type === "keypress") {
              var charCode = getEventCharCode(nativeEvent);

              // The enter-key is technically both printable and non-printable and can
              // thus be captured by `keypress`, no other non-printable key should.
              return charCode === 13 ? "Enter" : String.fromCharCode(charCode);
            }
            if (
              nativeEvent.type === "keydown" ||
              nativeEvent.type === "keyup"
            ) {
              // While user keyboard layout determines the actual meaning of each
              // `keyCode` value, almost all function keys have a universal value.
              return translateToKey[nativeEvent.keyCode] || "Unidentified";
            }
            return "";
          }

          /**
           * @interface KeyboardEvent
           * @see http://www.w3.org/TR/DOM-Level-3-Events/
           */
          var KeyboardEventInterface = {
            key: getEventKey,
            location: null,
            ctrlKey: null,
            shiftKey: null,
            altKey: null,
            metaKey: null,
            repeat: null,
            locale: null,
            getModifierState: getEventModifierState,
            // Legacy Interface
            charCode: function(event) {
              // `charCode` is the result of a KeyPress event and represents the value of
              // the actual printable character.

              // KeyPress is deprecated, but its replacement is not yet final and not
              // implemented in any major browser. Only KeyPress has charCode.
              if (event.type === "keypress") {
                return getEventCharCode(event);
              }
              return 0;
            },
            keyCode: function(event) {
              // `keyCode` is the result of a KeyDown/Up event and represents the value of
              // physical keyboard key.

              // The actual meaning of the value depends on the users' keyboard layout
              // which cannot be detected. Assuming that it is a US keyboard layout
              // provides a surprisingly accurate mapping for US and European users.
              // Due to this, it is left to the user to implement at this time.
              if (event.type === "keydown" || event.type === "keyup") {
                return event.keyCode;
              }
              return 0;
            },
            which: function(event) {
              // `which` is an alias for either `keyCode` or `charCode` depending on the
              // type of the event.
              if (event.type === "keypress") {
                return getEventCharCode(event);
              }
              if (event.type === "keydown" || event.type === "keyup") {
                return event.keyCode;
              }
              return 0;
            }
          };

          /**
           * @param {object} dispatchConfig Configuration used to dispatch this event.
           * @param {string} dispatchMarker Marker identifying the event target.
           * @param {object} nativeEvent Native browser event.
           * @extends {SyntheticUIEvent}
           */
          function SyntheticKeyboardEvent(
            dispatchConfig,
            dispatchMarker,
            nativeEvent,
            nativeEventTarget
          ) {
            return SyntheticUIEvent.call(
              this,
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            );
          }

          SyntheticUIEvent.augmentClass(
            SyntheticKeyboardEvent,
            KeyboardEventInterface
          );

          /**
           * @interface DragEvent
           * @see http://www.w3.org/TR/DOM-Level-3-Events/
           */
          var DragEventInterface = {
            dataTransfer: null
          };

          /**
           * @param {object} dispatchConfig Configuration used to dispatch this event.
           * @param {string} dispatchMarker Marker identifying the event target.
           * @param {object} nativeEvent Native browser event.
           * @extends {SyntheticMouseEvent}
           */
          function SyntheticDragEvent(
            dispatchConfig,
            dispatchMarker,
            nativeEvent,
            nativeEventTarget
          ) {
            return SyntheticMouseEvent.call(
              this,
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            );
          }

          SyntheticMouseEvent.augmentClass(
            SyntheticDragEvent,
            DragEventInterface
          );

          /**
           * @interface TouchEvent
           * @see http://www.w3.org/TR/touch-events/
           */
          var TouchEventInterface = {
            touches: null,
            targetTouches: null,
            changedTouches: null,
            altKey: null,
            metaKey: null,
            ctrlKey: null,
            shiftKey: null,
            getModifierState: getEventModifierState
          };

          /**
           * @param {object} dispatchConfig Configuration used to dispatch this event.
           * @param {string} dispatchMarker Marker identifying the event target.
           * @param {object} nativeEvent Native browser event.
           * @extends {SyntheticUIEvent}
           */
          function SyntheticTouchEvent(
            dispatchConfig,
            dispatchMarker,
            nativeEvent,
            nativeEventTarget
          ) {
            return SyntheticUIEvent.call(
              this,
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            );
          }

          SyntheticUIEvent.augmentClass(
            SyntheticTouchEvent,
            TouchEventInterface
          );

          /**
           * @interface Event
           * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
           * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
           */
          var TransitionEventInterface = {
            propertyName: null,
            elapsedTime: null,
            pseudoElement: null
          };

          /**
           * @param {object} dispatchConfig Configuration used to dispatch this event.
           * @param {string} dispatchMarker Marker identifying the event target.
           * @param {object} nativeEvent Native browser event.
           * @extends {SyntheticEvent}
           */
          function SyntheticTransitionEvent(
            dispatchConfig,
            dispatchMarker,
            nativeEvent,
            nativeEventTarget
          ) {
            return SyntheticEvent$1.call(
              this,
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            );
          }

          SyntheticEvent$1.augmentClass(
            SyntheticTransitionEvent,
            TransitionEventInterface
          );

          /**
           * @interface WheelEvent
           * @see http://www.w3.org/TR/DOM-Level-3-Events/
           */
          var WheelEventInterface = {
            deltaX: function(event) {
              return "deltaX" in event
                ? event.deltaX // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
                : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
            },
            deltaY: function(event) {
              return "deltaY" in event
                ? event.deltaY // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
                : "wheelDeltaY" in event
                  ? -event.wheelDeltaY // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
                  : "wheelDelta" in event ? -event.wheelDelta : 0;
            },
            deltaZ: null,

            // Browsers without "deltaMode" is reporting in raw wheel delta where one
            // notch on the scroll is always +/- 120, roughly equivalent to pixels.
            // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
            // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
            deltaMode: null
          };

          /**
           * @param {object} dispatchConfig Configuration used to dispatch this event.
           * @param {string} dispatchMarker Marker identifying the event target.
           * @param {object} nativeEvent Native browser event.
           * @extends {SyntheticMouseEvent}
           */
          function SyntheticWheelEvent(
            dispatchConfig,
            dispatchMarker,
            nativeEvent,
            nativeEventTarget
          ) {
            return SyntheticMouseEvent.call(
              this,
              dispatchConfig,
              dispatchMarker,
              nativeEvent,
              nativeEventTarget
            );
          }

          SyntheticMouseEvent.augmentClass(
            SyntheticWheelEvent,
            WheelEventInterface
          );

          /**
           * Turns
           * ['abort', ...]
           * into
           * eventTypes = {
           *   'abort': {
           *     phasedRegistrationNames: {
           *       bubbled: 'onAbort',
           *       captured: 'onAbortCapture',
           *     },
           *     dependencies: ['topAbort'],
           *   },
           *   ...
           * };
           * topLevelEventsToDispatchConfig = {
           *   'topAbort': { sameConfig }
           * };
           */
          var eventTypes$4 = {};
          var topLevelEventsToDispatchConfig = {};
          [
            "abort",
            "animationEnd",
            "animationIteration",
            "animationStart",
            "blur",
            "cancel",
            "canPlay",
            "canPlayThrough",
            "click",
            "close",
            "contextMenu",
            "copy",
            "cut",
            "doubleClick",
            "drag",
            "dragEnd",
            "dragEnter",
            "dragExit",
            "dragLeave",
            "dragOver",
            "dragStart",
            "drop",
            "durationChange",
            "emptied",
            "encrypted",
            "ended",
            "error",
            "focus",
            "input",
            "invalid",
            "keyDown",
            "keyPress",
            "keyUp",
            "load",
            "loadedData",
            "loadedMetadata",
            "loadStart",
            "mouseDown",
            "mouseMove",
            "mouseOut",
            "mouseOver",
            "mouseUp",
            "paste",
            "pause",
            "play",
            "playing",
            "progress",
            "rateChange",
            "reset",
            "scroll",
            "seeked",
            "seeking",
            "stalled",
            "submit",
            "suspend",
            "timeUpdate",
            "toggle",
            "touchCancel",
            "touchEnd",
            "touchMove",
            "touchStart",
            "transitionEnd",
            "volumeChange",
            "waiting",
            "wheel"
          ].forEach(function(event) {
            var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
            var onEvent = "on" + capitalizedEvent;
            var topEvent = "top" + capitalizedEvent;

            var type = {
              phasedRegistrationNames: {
                bubbled: onEvent,
                captured: onEvent + "Capture"
              },
              dependencies: [topEvent]
            };
            eventTypes$4[event] = type;
            topLevelEventsToDispatchConfig[topEvent] = type;
          });

          // Only used in DEV for exhaustiveness validation.
          var knownHTMLTopLevelTypes = [
            "topAbort",
            "topCancel",
            "topCanPlay",
            "topCanPlayThrough",
            "topClose",
            "topDurationChange",
            "topEmptied",
            "topEncrypted",
            "topEnded",
            "topError",
            "topInput",
            "topInvalid",
            "topLoad",
            "topLoadedData",
            "topLoadedMetadata",
            "topLoadStart",
            "topPause",
            "topPlay",
            "topPlaying",
            "topProgress",
            "topRateChange",
            "topReset",
            "topSeeked",
            "topSeeking",
            "topStalled",
            "topSubmit",
            "topSuspend",
            "topTimeUpdate",
            "topToggle",
            "topVolumeChange",
            "topWaiting"
          ];

          var SimpleEventPlugin = {
            eventTypes: eventTypes$4,

            extractEvents: function(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            ) {
              var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
              if (!dispatchConfig) {
                return null;
              }
              var EventConstructor;
              switch (topLevelType) {
                case "topKeyPress":
                  // Firefox creates a keypress event for function keys too. This removes
                  // the unwanted keypress events. Enter is however both printable and
                  // non-printable. One would expect Tab to be as well (but it isn't).
                  if (getEventCharCode(nativeEvent) === 0) {
                    return null;
                  }
                /* falls through */
                case "topKeyDown":
                case "topKeyUp":
                  EventConstructor = SyntheticKeyboardEvent;
                  break;
                case "topBlur":
                case "topFocus":
                  EventConstructor = SyntheticFocusEvent;
                  break;
                case "topClick":
                  // Firefox creates a click event on right mouse clicks. This removes the
                  // unwanted click events.
                  if (nativeEvent.button === 2) {
                    return null;
                  }
                /* falls through */
                case "topDoubleClick":
                case "topMouseDown":
                case "topMouseMove":
                case "topMouseUp":
                // TODO: Disabled elements should not respond to mouse events
                /* falls through */
                case "topMouseOut":
                case "topMouseOver":
                case "topContextMenu":
                  EventConstructor = SyntheticMouseEvent;
                  break;
                case "topDrag":
                case "topDragEnd":
                case "topDragEnter":
                case "topDragExit":
                case "topDragLeave":
                case "topDragOver":
                case "topDragStart":
                case "topDrop":
                  EventConstructor = SyntheticDragEvent;
                  break;
                case "topTouchCancel":
                case "topTouchEnd":
                case "topTouchMove":
                case "topTouchStart":
                  EventConstructor = SyntheticTouchEvent;
                  break;
                case "topAnimationEnd":
                case "topAnimationIteration":
                case "topAnimationStart":
                  EventConstructor = SyntheticAnimationEvent;
                  break;
                case "topTransitionEnd":
                  EventConstructor = SyntheticTransitionEvent;
                  break;
                case "topScroll":
                  EventConstructor = SyntheticUIEvent;
                  break;
                case "topWheel":
                  EventConstructor = SyntheticWheelEvent;
                  break;
                case "topCopy":
                case "topCut":
                case "topPaste":
                  EventConstructor = SyntheticClipboardEvent;
                  break;
                default:
                  {
                    if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
                      warning(
                        false,
                        "SimpleEventPlugin: Unhandled event type, `%s`. This warning " +
                          "is likely caused by a bug in React. Please file an issue.",
                        topLevelType
                      );
                    }
                  }
                  // HTML Events
                  // @see http://www.w3.org/TR/html5/index.html#events-0
                  EventConstructor = SyntheticEvent$1;
                  break;
              }
              var event = EventConstructor.getPooled(
                dispatchConfig,
                targetInst,
                nativeEvent,
                nativeEventTarget
              );
              accumulateTwoPhaseDispatches(event);
              return event;
            }
          };

          setHandleTopLevel(handleTopLevel);

          /**
           * Inject modules for resolving DOM hierarchy and plugin ordering.
           */
          injection$1.injectEventPluginOrder(DOMEventPluginOrder);
          injection$2.injectComponentTree(ReactDOMComponentTree);

          /**
           * Some important event plugins included by default (without having to require
           * them).
           */
          injection$1.injectEventPluginsByName({
            SimpleEventPlugin: SimpleEventPlugin,
            EnterLeaveEventPlugin: EnterLeaveEventPlugin,
            ChangeEventPlugin: ChangeEventPlugin,
            SelectEventPlugin: SelectEventPlugin,
            BeforeInputEventPlugin: BeforeInputEventPlugin
          });

          var enableAsyncSubtreeAPI = true;
          var enableAsyncSchedulingByDefaultInReactDOM = false;
          // Exports React.Fragment
          var enableReactFragment = false;
          // Exports ReactDOM.createRoot
          var enableCreateRoot = false;
          var enableUserTimingAPI = true;

          // Mutating mode (React DOM, React ART, React Native):
          var enableMutatingReconciler = true;
          // Experimental noop mode (currently unused):
          var enableNoopReconciler = false;
          // Experimental persistent mode (CS):
          var enablePersistentReconciler = false;

          // Only used in www builds.

          var valueStack = [];

          {
            var fiberStack = [];
          }

          var index = -1;

          function createCursor(defaultValue) {
            return {
              current: defaultValue
            };
          }

          function pop(cursor, fiber) {
            if (index < 0) {
              {
                warning(false, "Unexpected pop.");
              }
              return;
            }

            {
              if (fiber !== fiberStack[index]) {
                warning(false, "Unexpected Fiber popped.");
              }
            }

            cursor.current = valueStack[index];

            valueStack[index] = null;

            {
              fiberStack[index] = null;
            }

            index--;
          }

          function push(cursor, value, fiber) {
            index++;

            valueStack[index] = cursor.current;

            {
              fiberStack[index] = fiber;
            }

            cursor.current = value;
          }

          function reset$1() {
            while (index > -1) {
              valueStack[index] = null;

              {
                fiberStack[index] = null;
              }

              index--;
            }
          }

          var describeComponentFrame = function(name, source, ownerName) {
            return (
              "\n    in " +
              (name || "Unknown") +
              (source
                ? " (at " +
                  source.fileName.replace(/^.*[\\\/]/, "") +
                  ":" +
                  source.lineNumber +
                  ")"
                : ownerName ? " (created by " + ownerName + ")" : "")
            );
          };

          function describeFiber(fiber) {
            switch (fiber.tag) {
              case IndeterminateComponent:
              case FunctionalComponent:
              case ClassComponent:
              case HostComponent:
                var owner = fiber._debugOwner;
                var source = fiber._debugSource;
                var name = getComponentName(fiber);
                var ownerName = null;
                if (owner) {
                  ownerName = getComponentName(owner);
                }
                return describeComponentFrame(name, source, ownerName);
              default:
                return "";
            }
          }

          // This function can only be called with a work-in-progress fiber and
          // only during begin or complete phase. Do not call it under any other
          // circumstances.
          function getStackAddendumByWorkInProgressFiber(workInProgress) {
            var info = "";
            var node = workInProgress;
            do {
              info += describeFiber(node);
              // Otherwise this return pointer might point to the wrong tree:
              node = node["return"];
            } while (node);
            return info;
          }

          function getCurrentFiberOwnerName() {
            {
              var fiber = ReactDebugCurrentFiber.current;
              if (fiber === null) {
                return null;
              }
              var owner = fiber._debugOwner;
              if (owner !== null && typeof owner !== "undefined") {
                return getComponentName(owner);
              }
            }
            return null;
          }

          function getCurrentFiberStackAddendum() {
            {
              var fiber = ReactDebugCurrentFiber.current;
              if (fiber === null) {
                return null;
              }
              // Safe because if current fiber exists, we are reconciling,
              // and it is guaranteed to be the work-in-progress version.
              return getStackAddendumByWorkInProgressFiber(fiber);
            }
            return null;
          }

          function resetCurrentFiber() {
            ReactDebugCurrentFrame.getCurrentStack = null;
            ReactDebugCurrentFiber.current = null;
            ReactDebugCurrentFiber.phase = null;
          }

          function setCurrentFiber(fiber) {
            ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackAddendum;
            ReactDebugCurrentFiber.current = fiber;
            ReactDebugCurrentFiber.phase = null;
          }

          function setCurrentPhase(phase) {
            ReactDebugCurrentFiber.phase = phase;
          }

          var ReactDebugCurrentFiber = {
            current: null,
            phase: null,
            resetCurrentFiber: resetCurrentFiber,
            setCurrentFiber: setCurrentFiber,
            setCurrentPhase: setCurrentPhase,
            getCurrentFiberOwnerName: getCurrentFiberOwnerName,
            getCurrentFiberStackAddendum: getCurrentFiberStackAddendum
          };

          // Prefix measurements so that it's possible to filter them.
          // Longer prefixes are hard to read in DevTools.
          var reactEmoji = "\u269B";
          var warningEmoji = "\u26D4";
          var supportsUserTiming =
            typeof performance !== "undefined" &&
            typeof performance.mark === "function" &&
            typeof performance.clearMarks === "function" &&
            typeof performance.measure === "function" &&
            typeof performance.clearMeasures === "function";

          // Keep track of current fiber so that we know the path to unwind on pause.
          // TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?
          var currentFiber = null;
          // If we're in the middle of user code, which fiber and method is it?
          // Reusing `currentFiber` would be confusing for this because user code fiber
          // can change during commit phase too, but we don't need to unwind it (since
          // lifecycles in the commit phase don't resemble a tree).
          var currentPhase = null;
          var currentPhaseFiber = null;
          // Did lifecycle hook schedule an update? This is often a performance problem,
          // so we will keep track of it, and include it in the report.
          // Track commits caused by cascading updates.
          var isCommitting = false;
          var hasScheduledUpdateInCurrentCommit = false;
          var hasScheduledUpdateInCurrentPhase = false;
          var commitCountInCurrentWorkLoop = 0;
          var effectCountInCurrentCommit = 0;
          // During commits, we only show a measurement once per method name
          // to avoid stretch the commit phase with measurement overhead.
          var labelsInCurrentCommit = new Set();

          var formatMarkName = function(markName) {
            return reactEmoji + " " + markName;
          };

          var formatLabel = function(label, warning$$1) {
            var prefix = warning$$1 ? warningEmoji + " " : reactEmoji + " ";
            var suffix = warning$$1 ? " Warning: " + warning$$1 : "";
            return "" + prefix + label + suffix;
          };

          var beginMark = function(markName) {
            performance.mark(formatMarkName(markName));
          };

          var clearMark = function(markName) {
            performance.clearMarks(formatMarkName(markName));
          };

          var endMark = function(label, markName, warning$$1) {
            var formattedMarkName = formatMarkName(markName);
            var formattedLabel = formatLabel(label, warning$$1);
            try {
              performance.measure(formattedLabel, formattedMarkName);
            } catch (err) {}
            // If previous mark was missing for some reason, this will throw.
            // This could only happen if React crashed in an unexpected place earlier.
            // Don't pile on with more errors.

            // Clear marks immediately to avoid growing buffer.
            performance.clearMarks(formattedMarkName);
            performance.clearMeasures(formattedLabel);
          };

          var getFiberMarkName = function(label, debugID) {
            return label + " (#" + debugID + ")";
          };

          var getFiberLabel = function(componentName, isMounted, phase) {
            if (phase === null) {
              // These are composite component total time measurements.
              return (
                componentName + " [" + (isMounted ? "update" : "mount") + "]"
              );
            } else {
              // Composite component methods.
              return componentName + "." + phase;
            }
          };

          var beginFiberMark = function(fiber, phase) {
            var componentName = getComponentName(fiber) || "Unknown";
            var debugID = fiber._debugID;
            var isMounted = fiber.alternate !== null;
            var label = getFiberLabel(componentName, isMounted, phase);

            if (isCommitting && labelsInCurrentCommit.has(label)) {
              // During the commit phase, we don't show duplicate labels because
              // there is a fixed overhead for every measurement, and we don't
              // want to stretch the commit phase beyond necessary.
              return false;
            }
            labelsInCurrentCommit.add(label);

            var markName = getFiberMarkName(label, debugID);
            beginMark(markName);
            return true;
          };

          var clearFiberMark = function(fiber, phase) {
            var componentName = getComponentName(fiber) || "Unknown";
            var debugID = fiber._debugID;
            var isMounted = fiber.alternate !== null;
            var label = getFiberLabel(componentName, isMounted, phase);
            var markName = getFiberMarkName(label, debugID);
            clearMark(markName);
          };

          var endFiberMark = function(fiber, phase, warning$$1) {
            var componentName = getComponentName(fiber) || "Unknown";
            var debugID = fiber._debugID;
            var isMounted = fiber.alternate !== null;
            var label = getFiberLabel(componentName, isMounted, phase);
            var markName = getFiberMarkName(label, debugID);
            endMark(label, markName, warning$$1);
          };

          var shouldIgnoreFiber = function(fiber) {
            // Host components should be skipped in the timeline.
            // We could check typeof fiber.type, but does this work with RN?
            switch (fiber.tag) {
              case HostRoot:
              case HostComponent:
              case HostText:
              case HostPortal:
              case ReturnComponent:
              case Fragment:
                return true;
              default:
                return false;
            }
          };

          var clearPendingPhaseMeasurement = function() {
            if (currentPhase !== null && currentPhaseFiber !== null) {
              clearFiberMark(currentPhaseFiber, currentPhase);
            }
            currentPhaseFiber = null;
            currentPhase = null;
            hasScheduledUpdateInCurrentPhase = false;
          };

          var pauseTimers = function() {
            // Stops all currently active measurements so that they can be resumed
            // if we continue in a later deferred loop from the same unit of work.
            var fiber = currentFiber;
            while (fiber) {
              if (fiber._debugIsCurrentlyTiming) {
                endFiberMark(fiber, null, null);
              }
              fiber = fiber["return"];
            }
          };

          var resumeTimersRecursively = function(fiber) {
            if (fiber["return"] !== null) {
              resumeTimersRecursively(fiber["return"]);
            }
            if (fiber._debugIsCurrentlyTiming) {
              beginFiberMark(fiber, null);
            }
          };

          var resumeTimers = function() {
            // Resumes all measurements that were active during the last deferred loop.
            if (currentFiber !== null) {
              resumeTimersRecursively(currentFiber);
            }
          };

          function recordEffect() {
            if (enableUserTimingAPI) {
              effectCountInCurrentCommit++;
            }
          }

          function recordScheduleUpdate() {
            if (enableUserTimingAPI) {
              if (isCommitting) {
                hasScheduledUpdateInCurrentCommit = true;
              }
              if (
                currentPhase !== null &&
                currentPhase !== "componentWillMount" &&
                currentPhase !== "componentWillReceiveProps"
              ) {
                hasScheduledUpdateInCurrentPhase = true;
              }
            }
          }

          function startWorkTimer(fiber) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                return;
              }
              // If we pause, this is the fiber to unwind from.
              currentFiber = fiber;
              if (!beginFiberMark(fiber, null)) {
                return;
              }
              fiber._debugIsCurrentlyTiming = true;
            }
          }

          function cancelWorkTimer(fiber) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                return;
              }
              // Remember we shouldn't complete measurement for this fiber.
              // Otherwise flamechart will be deep even for small updates.
              fiber._debugIsCurrentlyTiming = false;
              clearFiberMark(fiber, null);
            }
          }

          function stopWorkTimer(fiber) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                return;
              }
              // If we pause, its parent is the fiber to unwind from.
              currentFiber = fiber["return"];
              if (!fiber._debugIsCurrentlyTiming) {
                return;
              }
              fiber._debugIsCurrentlyTiming = false;
              endFiberMark(fiber, null, null);
            }
          }

          function stopFailedWorkTimer(fiber) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                return;
              }
              // If we pause, its parent is the fiber to unwind from.
              currentFiber = fiber["return"];
              if (!fiber._debugIsCurrentlyTiming) {
                return;
              }
              fiber._debugIsCurrentlyTiming = false;
              var warning$$1 = "An error was thrown inside this error boundary";
              endFiberMark(fiber, null, warning$$1);
            }
          }

          function startPhaseTimer(fiber, phase) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              clearPendingPhaseMeasurement();
              if (!beginFiberMark(fiber, phase)) {
                return;
              }
              currentPhaseFiber = fiber;
              currentPhase = phase;
            }
          }

          function stopPhaseTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              if (currentPhase !== null && currentPhaseFiber !== null) {
                var warning$$1 = hasScheduledUpdateInCurrentPhase
                  ? "Scheduled a cascading update"
                  : null;
                endFiberMark(currentPhaseFiber, currentPhase, warning$$1);
              }
              currentPhase = null;
              currentPhaseFiber = null;
            }
          }

          function startWorkLoopTimer(nextUnitOfWork) {
            if (enableUserTimingAPI) {
              currentFiber = nextUnitOfWork;
              if (!supportsUserTiming) {
                return;
              }
              commitCountInCurrentWorkLoop = 0;
              // This is top level call.
              // Any other measurements are performed within.
              beginMark("(React Tree Reconciliation)");
              // Resume any measurements that were in progress during the last loop.
              resumeTimers();
            }
          }

          function stopWorkLoopTimer(interruptedBy) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              var warning$$1 = null;
              if (interruptedBy !== null) {
                if (interruptedBy.tag === HostRoot) {
                  warning$$1 =
                    "A top-level update interrupted the previous render";
                } else {
                  var componentName =
                    getComponentName(interruptedBy) || "Unknown";
                  warning$$1 =
                    "An update to " +
                    componentName +
                    " interrupted the previous render";
                }
              } else if (commitCountInCurrentWorkLoop > 1) {
                warning$$1 = "There were cascading updates";
              }
              commitCountInCurrentWorkLoop = 0;
              // Pause any measurements until the next loop.
              pauseTimers();
              endMark(
                "(React Tree Reconciliation)",
                "(React Tree Reconciliation)",
                warning$$1
              );
            }
          }

          function startCommitTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              isCommitting = true;
              hasScheduledUpdateInCurrentCommit = false;
              labelsInCurrentCommit.clear();
              beginMark("(Committing Changes)");
            }
          }

          function stopCommitTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }

              var warning$$1 = null;
              if (hasScheduledUpdateInCurrentCommit) {
                warning$$1 = "Lifecycle hook scheduled a cascading update";
              } else if (commitCountInCurrentWorkLoop > 0) {
                warning$$1 = "Caused by a cascading update in earlier commit";
              }
              hasScheduledUpdateInCurrentCommit = false;
              commitCountInCurrentWorkLoop++;
              isCommitting = false;
              labelsInCurrentCommit.clear();

              endMark(
                "(Committing Changes)",
                "(Committing Changes)",
                warning$$1
              );
            }
          }

          function startCommitHostEffectsTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              effectCountInCurrentCommit = 0;
              beginMark("(Committing Host Effects)");
            }
          }

          function stopCommitHostEffectsTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              var count = effectCountInCurrentCommit;
              effectCountInCurrentCommit = 0;
              endMark(
                "(Committing Host Effects: " + count + " Total)",
                "(Committing Host Effects)",
                null
              );
            }
          }

          function startCommitLifeCyclesTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              effectCountInCurrentCommit = 0;
              beginMark("(Calling Lifecycle Methods)");
            }
          }

          function stopCommitLifeCyclesTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              var count = effectCountInCurrentCommit;
              effectCountInCurrentCommit = 0;
              endMark(
                "(Calling Lifecycle Methods: " + count + " Total)",
                "(Calling Lifecycle Methods)",
                null
              );
            }
          }

          {
            var warnedAboutMissingGetChildContext = {};
          }

          // A cursor to the current merged context object on the stack.
          var contextStackCursor = createCursor(emptyObject);
          // A cursor to a boolean indicating whether the context has changed.
          var didPerformWorkStackCursor = createCursor(false);
          // Keep track of the previous context object that was on the stack.
          // We use this to get access to the parent context after we have already
          // pushed the next context provider, and now need to merge their contexts.
          var previousContext = emptyObject;

          function getUnmaskedContext(workInProgress) {
            var hasOwnContext = isContextProvider(workInProgress);
            if (hasOwnContext) {
              // If the fiber is a context provider itself, when we read its context
              // we have already pushed its own child context on the stack. A context
              // provider should not "see" its own child context. Therefore we read the
              // previous (parent) context instead for a context provider.
              return previousContext;
            }
            return contextStackCursor.current;
          }

          function cacheContext(
            workInProgress,
            unmaskedContext,
            maskedContext
          ) {
            var instance = workInProgress.stateNode;
            instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
            instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
          }

          function getMaskedContext(workInProgress, unmaskedContext) {
            var type = workInProgress.type;
            var contextTypes = type.contextTypes;
            if (!contextTypes) {
              return emptyObject;
            }

            // Avoid recreating masked context unless unmasked context has changed.
            // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
            // This may trigger infinite loops if componentWillReceiveProps calls setState.
            var instance = workInProgress.stateNode;
            if (
              instance &&
              instance.__reactInternalMemoizedUnmaskedChildContext ===
                unmaskedContext
            ) {
              return instance.__reactInternalMemoizedMaskedChildContext;
            }

            var context = {};
            for (var key in contextTypes) {
              context[key] = unmaskedContext[key];
            }

            {
              var name = getComponentName(workInProgress) || "Unknown";
              checkPropTypes(
                contextTypes,
                context,
                "context",
                name,
                ReactDebugCurrentFiber.getCurrentFiberStackAddendum
              );
            }

            // Cache unmasked context so we can avoid recreating masked context unless necessary.
            // Context is created before the class component is instantiated so check for instance.
            if (instance) {
              cacheContext(workInProgress, unmaskedContext, context);
            }

            return context;
          }

          function hasContextChanged() {
            return didPerformWorkStackCursor.current;
          }

          function isContextConsumer(fiber) {
            return (
              fiber.tag === ClassComponent && fiber.type.contextTypes != null
            );
          }

          function isContextProvider(fiber) {
            return (
              fiber.tag === ClassComponent &&
              fiber.type.childContextTypes != null
            );
          }

          function popContextProvider(fiber) {
            if (!isContextProvider(fiber)) {
              return;
            }

            pop(didPerformWorkStackCursor, fiber);
            pop(contextStackCursor, fiber);
          }

          function popTopLevelContextObject(fiber) {
            pop(didPerformWorkStackCursor, fiber);
            pop(contextStackCursor, fiber);
          }

          function pushTopLevelContextObject(fiber, context, didChange) {
            !(contextStackCursor.cursor == null)
              ? invariant(
                  false,
                  "Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."
                )
              : void 0;

            push(contextStackCursor, context, fiber);
            push(didPerformWorkStackCursor, didChange, fiber);
          }

          function processChildContext(fiber, parentContext) {
            var instance = fiber.stateNode;
            var childContextTypes = fiber.type.childContextTypes;

            // TODO (bvaughn) Replace this behavior with an invariant() in the future.
            // It has only been added in Fiber to match the (unintentional) behavior in Stack.
            if (typeof instance.getChildContext !== "function") {
              {
                var componentName = getComponentName(fiber) || "Unknown";

                if (!warnedAboutMissingGetChildContext[componentName]) {
                  warnedAboutMissingGetChildContext[componentName] = true;
                  warning(
                    false,
                    "%s.childContextTypes is specified but there is no getChildContext() method " +
                      "on the instance. You can either define getChildContext() on %s or remove " +
                      "childContextTypes from it.",
                    componentName,
                    componentName
                  );
                }
              }
              return parentContext;
            }

            var childContext = void 0;
            {
              ReactDebugCurrentFiber.setCurrentPhase("getChildContext");
            }
            startPhaseTimer(fiber, "getChildContext");
            childContext = instance.getChildContext();
            stopPhaseTimer();
            {
              ReactDebugCurrentFiber.setCurrentPhase(null);
            }
            for (var contextKey in childContext) {
              !(contextKey in childContextTypes)
                ? invariant(
                    false,
                    '%s.getChildContext(): key "%s" is not defined in childContextTypes.',
                    getComponentName(fiber) || "Unknown",
                    contextKey
                  )
                : void 0;
            }
            {
              var name = getComponentName(fiber) || "Unknown";
              checkPropTypes(
                childContextTypes,
                childContext,
                "child context",
                name,
                // In practice, there is one case in which we won't get a stack. It's when
                // somebody calls unstable_renderSubtreeIntoContainer() and we process
                // context from the parent component instance. The stack will be missing
                // because it's outside of the reconciliation, and so the pointer has not
                // been set. This is rare and doesn't matter. We'll also remove that API.
                ReactDebugCurrentFiber.getCurrentFiberStackAddendum
              );
            }

            return _assign({}, parentContext, childContext);
          }

          function pushContextProvider(workInProgress) {
            if (!isContextProvider(workInProgress)) {
              return false;
            }

            var instance = workInProgress.stateNode;
            // We push the context as early as possible to ensure stack integrity.
            // If the instance does not exist yet, we will push null at first,
            // and replace it on the stack later when invalidating the context.
            var memoizedMergedChildContext =
              (instance &&
                instance.__reactInternalMemoizedMergedChildContext) ||
              emptyObject;

            // Remember the parent context so we can merge with it later.
            // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
            previousContext = contextStackCursor.current;
            push(
              contextStackCursor,
              memoizedMergedChildContext,
              workInProgress
            );
            push(
              didPerformWorkStackCursor,
              didPerformWorkStackCursor.current,
              workInProgress
            );

            return true;
          }

          function invalidateContextProvider(workInProgress, didChange) {
            var instance = workInProgress.stateNode;
            !instance
              ? invariant(
                  false,
                  "Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."
                )
              : void 0;

            if (didChange) {
              // Merge parent and own context.
              // Skip this if we're not updating due to sCU.
              // This avoids unnecessarily recomputing memoized values.
              var mergedContext = processChildContext(
                workInProgress,
                previousContext
              );
              instance.__reactInternalMemoizedMergedChildContext = mergedContext;

              // Replace the old (or empty) context with the new one.
              // It is important to unwind the context in the reverse order.
              pop(didPerformWorkStackCursor, workInProgress);
              pop(contextStackCursor, workInProgress);
              // Now push the new context and mark that it has changed.
              push(contextStackCursor, mergedContext, workInProgress);
              push(didPerformWorkStackCursor, didChange, workInProgress);
            } else {
              pop(didPerformWorkStackCursor, workInProgress);
              push(didPerformWorkStackCursor, didChange, workInProgress);
            }
          }

          function resetContext() {
            previousContext = emptyObject;
            contextStackCursor.current = emptyObject;
            didPerformWorkStackCursor.current = false;
          }

          function findCurrentUnmaskedContext(fiber) {
            // Currently this is only used with renderSubtreeIntoContainer; not sure if it
            // makes sense elsewhere
            !(isFiberMounted(fiber) && fiber.tag === ClassComponent)
              ? invariant(
                  false,
                  "Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."
                )
              : void 0;

            var node = fiber;
            while (node.tag !== HostRoot) {
              if (isContextProvider(node)) {
                return node.stateNode.__reactInternalMemoizedMergedChildContext;
              }
              var parent = node["return"];
              !parent
                ? invariant(
                    false,
                    "Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;
              node = parent;
            }
            return node.stateNode.context;
          }

          var NoWork = 0; // TODO: Use an opaque type once ESLint et al support the syntax

          var Sync = 1;
          var Never = 2147483647; // Max int32: Math.pow(2, 31) - 1

          var UNIT_SIZE = 10;
          var MAGIC_NUMBER_OFFSET = 2;

          // 1 unit of expiration time represents 10ms.
          function msToExpirationTime(ms) {
            // Always add an offset so that we don't clash with the magic number for NoWork.
            return ((ms / UNIT_SIZE) | 0) + MAGIC_NUMBER_OFFSET;
          }

          function ceiling(num, precision) {
            return (((num / precision) | 0) + 1) * precision;
          }

          function computeExpirationBucket(
            currentTime,
            expirationInMs,
            bucketSizeMs
          ) {
            return ceiling(
              currentTime + expirationInMs / UNIT_SIZE,
              bucketSizeMs / UNIT_SIZE
            );
          }

          var NoContext = 0;
          var AsyncUpdates = 1;

          {
            var hasBadMapPolyfill = false;
            try {
              var nonExtensibleObject = Object.preventExtensions({});
              /* eslint-disable no-new */
              new Map([[nonExtensibleObject, null]]);
              new Set([nonExtensibleObject]);
              /* eslint-enable no-new */
            } catch (e) {
              // TODO: Consider warning about bad polyfills
              hasBadMapPolyfill = true;
            }
          }

          // A Fiber is work on a Component that needs to be done or was done. There can
          // be more than one per component.

          {
            var debugCounter = 1;
          }

          function FiberNode(tag, key, internalContextTag) {
            // Instance
            this.tag = tag;
            this.key = key;
            this.type = null;
            this.stateNode = null;

            // Fiber
            this["return"] = null;
            this.child = null;
            this.sibling = null;
            this.index = 0;

            this.ref = null;

            this.pendingProps = null;
            this.memoizedProps = null;
            this.updateQueue = null;
            this.memoizedState = null;

            this.internalContextTag = internalContextTag;

            // Effects
            this.effectTag = NoEffect;
            this.nextEffect = null;

            this.firstEffect = null;
            this.lastEffect = null;

            this.expirationTime = NoWork;

            this.alternate = null;

            {
              this._debugID = debugCounter++;
              this._debugSource = null;
              this._debugOwner = null;
              this._debugIsCurrentlyTiming = false;
              if (
                !hasBadMapPolyfill &&
                typeof Object.preventExtensions === "function"
              ) {
                Object.preventExtensions(this);
              }
            }
          }

          // This is a constructor function, rather than a POJO constructor, still
          // please ensure we do the following:
          // 1) Nobody should add any instance methods on this. Instance methods can be
          //    more difficult to predict when they get optimized and they are almost
          //    never inlined properly in static compilers.
          // 2) Nobody should rely on `instanceof Fiber` for type testing. We should
          //    always know when it is a fiber.
          // 3) We might want to experiment with using numeric keys since they are easier
          //    to optimize in a non-JIT environment.
          // 4) We can easily go from a constructor to a createFiber object literal if that
          //    is faster.
          // 5) It should be easy to port this to a C struct and keep a C implementation
          //    compatible.
          var createFiber = function(tag, key, internalContextTag) {
            // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
            return new FiberNode(tag, key, internalContextTag);
          };

          function shouldConstruct(Component) {
            return !!(
              Component.prototype && Component.prototype.isReactComponent
            );
          }

          // This is used to create an alternate fiber to do work on.
          function createWorkInProgress(current, pendingProps, expirationTime) {
            var workInProgress = current.alternate;
            if (workInProgress === null) {
              // We use a double buffering pooling technique because we know that we'll
              // only ever need at most two versions of a tree. We pool the "other" unused
              // node that we're free to reuse. This is lazily created to avoid allocating
              // extra objects for things that are never updated. It also allow us to
              // reclaim the extra memory if needed.
              workInProgress = createFiber(
                current.tag,
                current.key,
                current.internalContextTag
              );
              workInProgress.type = current.type;
              workInProgress.stateNode = current.stateNode;

              {
                // DEV-only fields
                workInProgress._debugID = current._debugID;
                workInProgress._debugSource = current._debugSource;
                workInProgress._debugOwner = current._debugOwner;
              }

              workInProgress.alternate = current;
              current.alternate = workInProgress;
            } else {
              // We already have an alternate.
              // Reset the effect tag.
              workInProgress.effectTag = NoEffect;

              // The effect list is no longer valid.
              workInProgress.nextEffect = null;
              workInProgress.firstEffect = null;
              workInProgress.lastEffect = null;
            }

            workInProgress.expirationTime = expirationTime;
            workInProgress.pendingProps = pendingProps;

            workInProgress.child = current.child;
            workInProgress.memoizedProps = current.memoizedProps;
            workInProgress.memoizedState = current.memoizedState;
            workInProgress.updateQueue = current.updateQueue;

            // These will be overridden during the parent's reconciliation
            workInProgress.sibling = current.sibling;
            workInProgress.index = current.index;
            workInProgress.ref = current.ref;

            return workInProgress;
          }

          function createHostRootFiber() {
            var fiber = createFiber(HostRoot, null, NoContext);
            return fiber;
          }

          function createFiberFromElement(
            element,
            internalContextTag,
            expirationTime
          ) {
            var owner = null;
            {
              owner = element._owner;
            }

            var fiber = void 0;
            var type = element.type,
              key = element.key;

            if (typeof type === "function") {
              fiber = shouldConstruct(type)
                ? createFiber(ClassComponent, key, internalContextTag)
                : createFiber(IndeterminateComponent, key, internalContextTag);
              fiber.type = type;
              fiber.pendingProps = element.props;
            } else if (typeof type === "string") {
              fiber = createFiber(HostComponent, key, internalContextTag);
              fiber.type = type;
              fiber.pendingProps = element.props;
            } else if (
              typeof type === "object" &&
              type !== null &&
              typeof type.tag === "number"
            ) {
              // Currently assumed to be a continuation and therefore is a fiber already.
              // TODO: The yield system is currently broken for updates in some cases.
              // The reified yield stores a fiber, but we don't know which fiber that is;
              // the current or a workInProgress? When the continuation gets rendered here
              // we don't know if we can reuse that fiber or if we need to clone it.
              // There is probably a clever way to restructure this.
              fiber = type;
              fiber.pendingProps = element.props;
            } else {
              var info = "";
              {
                if (
                  type === undefined ||
                  (typeof type === "object" &&
                    type !== null &&
                    Object.keys(type).length === 0)
                ) {
                  info +=
                    " You likely forgot to export your component from the file " +
                    "it's defined in.";
                }
                var ownerName = owner ? getComponentName(owner) : null;
                if (ownerName) {
                  info += "\n\nCheck the render method of `" + ownerName + "`.";
                }
              }
              invariant(
                false,
                "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s",
                type == null ? type : typeof type,
                info
              );
            }

            {
              fiber._debugSource = element._source;
              fiber._debugOwner = element._owner;
            }

            fiber.expirationTime = expirationTime;

            return fiber;
          }

          function createFiberFromFragment(
            elements,
            internalContextTag,
            expirationTime,
            key
          ) {
            var fiber = createFiber(Fragment, key, internalContextTag);
            fiber.pendingProps = elements;
            fiber.expirationTime = expirationTime;
            return fiber;
          }

          function createFiberFromText(
            content,
            internalContextTag,
            expirationTime
          ) {
            var fiber = createFiber(HostText, null, internalContextTag);
            fiber.pendingProps = content;
            fiber.expirationTime = expirationTime;
            return fiber;
          }

          function createFiberFromHostInstanceForDeletion() {
            var fiber = createFiber(HostComponent, null, NoContext);
            fiber.type = "DELETED";
            return fiber;
          }

          function createFiberFromCall(
            call,
            internalContextTag,
            expirationTime
          ) {
            var fiber = createFiber(
              CallComponent,
              call.key,
              internalContextTag
            );
            fiber.type = call.handler;
            fiber.pendingProps = call;
            fiber.expirationTime = expirationTime;
            return fiber;
          }

          function createFiberFromReturn(
            returnNode,
            internalContextTag,
            expirationTime
          ) {
            var fiber = createFiber(ReturnComponent, null, internalContextTag);
            fiber.expirationTime = expirationTime;
            return fiber;
          }

          function createFiberFromPortal(
            portal,
            internalContextTag,
            expirationTime
          ) {
            var fiber = createFiber(HostPortal, portal.key, internalContextTag);
            fiber.pendingProps = portal.children || [];
            fiber.expirationTime = expirationTime;
            fiber.stateNode = {
              containerInfo: portal.containerInfo,
              pendingChildren: null, // Used by persistent updates
              implementation: portal.implementation
            };
            return fiber;
          }

          function createFiberRoot(containerInfo, hydrate) {
            // Cyclic construction. This cheats the type system right now because
            // stateNode is any.
            var uninitializedFiber = createHostRootFiber();
            var root = {
              current: uninitializedFiber,
              containerInfo: containerInfo,
              pendingChildren: null,
              remainingExpirationTime: NoWork,
              isReadyForCommit: false,
              finishedWork: null,
              context: null,
              pendingContext: null,
              hydrate: hydrate,
              nextScheduledRoot: null
            };
            uninitializedFiber.stateNode = root;
            return root;
          }

          var onCommitFiberRoot = null;
          var onCommitFiberUnmount = null;
          var hasLoggedError = false;

          function catchErrors(fn) {
            return function(arg) {
              try {
                return fn(arg);
              } catch (err) {
                if (true && !hasLoggedError) {
                  hasLoggedError = true;
                  warning(
                    false,
                    "React DevTools encountered an error: %s",
                    err
                  );
                }
              }
            };
          }

          function injectInternals(internals) {
            if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined") {
              // No DevTools
              return false;
            }
            var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (hook.isDisabled) {
              // This isn't a real property on the hook, but it can be set to opt out
              // of DevTools integration and associated warnings and logs.
              // https://github.com/facebook/react/issues/3877
              return true;
            }
            if (!hook.supportsFiber) {
              {
                warning(
                  false,
                  "The installed version of React DevTools is too old and will not work " +
                    "with the current version of React. Please update React DevTools. " +
                    "https://fb.me/react-devtools"
                );
              }
              // DevTools exists, even though it doesn't support Fiber.
              return true;
            }
            try {
              var rendererID = hook.inject(internals);
              // We have successfully injected, so now it is safe to set up hooks.
              onCommitFiberRoot = catchErrors(function(root) {
                return hook.onCommitFiberRoot(rendererID, root);
              });
              onCommitFiberUnmount = catchErrors(function(fiber) {
                return hook.onCommitFiberUnmount(rendererID, fiber);
              });
            } catch (err) {
              // Catch all errors because it is unsafe to throw during initialization.
              {
                warning(false, "React DevTools encountered an error: %s.", err);
              }
            }
            // DevTools exists
            return true;
          }

          function onCommitRoot(root) {
            if (typeof onCommitFiberRoot === "function") {
              onCommitFiberRoot(root);
            }
          }

          function onCommitUnmount(fiber) {
            if (typeof onCommitFiberUnmount === "function") {
              onCommitFiberUnmount(fiber);
            }
          }

          {
            var didWarnUpdateInsideUpdate = false;
          }

          // Callbacks are not validated until invocation

          // Singly linked-list of updates. When an update is scheduled, it is added to
          // the queue of the current fiber and the work-in-progress fiber. The two queues
          // are separate but they share a persistent structure.
          //
          // During reconciliation, updates are removed from the work-in-progress fiber,
          // but they remain on the current fiber. That ensures that if a work-in-progress
          // is aborted, the aborted updates are recovered by cloning from current.
          //
          // The work-in-progress queue is always a subset of the current queue.
          //
          // When the tree is committed, the work-in-progress becomes the current.

          function createUpdateQueue(baseState) {
            var queue = {
              baseState: baseState,
              expirationTime: NoWork,
              first: null,
              last: null,
              callbackList: null,
              hasForceUpdate: false,
              isInitialized: false
            };
            {
              queue.isProcessing = false;
            }
            return queue;
          }

          function insertUpdateIntoQueue(queue, update) {
            // Append the update to the end of the list.
            if (queue.last === null) {
              // Queue is empty
              queue.first = queue.last = update;
            } else {
              queue.last.next = update;
              queue.last = update;
            }
            if (
              queue.expirationTime === NoWork ||
              queue.expirationTime > update.expirationTime
            ) {
              queue.expirationTime = update.expirationTime;
            }
          }

          function insertUpdateIntoFiber(fiber, update) {
            // We'll have at least one and at most two distinct update queues.
            var alternateFiber = fiber.alternate;
            var queue1 = fiber.updateQueue;
            if (queue1 === null) {
              // TODO: We don't know what the base state will be until we begin work.
              // It depends on which fiber is the next current. Initialize with an empty
              // base state, then set to the memoizedState when rendering. Not super
              // happy with this approach.
              queue1 = fiber.updateQueue = createUpdateQueue(null);
            }

            var queue2 = void 0;
            if (alternateFiber !== null) {
              queue2 = alternateFiber.updateQueue;
              if (queue2 === null) {
                queue2 = alternateFiber.updateQueue = createUpdateQueue(null);
              }
            } else {
              queue2 = null;
            }
            queue2 = queue2 !== queue1 ? queue2 : null;

            // Warn if an update is scheduled from inside an updater function.
            {
              if (
                (queue1.isProcessing ||
                  (queue2 !== null && queue2.isProcessing)) &&
                !didWarnUpdateInsideUpdate
              ) {
                warning(
                  false,
                  "An update (setState, replaceState, or forceUpdate) was scheduled " +
                    "from inside an update function. Update functions should be pure, " +
                    "with zero side-effects. Consider using componentDidUpdate or a " +
                    "callback."
                );
                didWarnUpdateInsideUpdate = true;
              }
            }

            // If there's only one queue, add the update to that queue and exit.
            if (queue2 === null) {
              insertUpdateIntoQueue(queue1, update);
              return;
            }

            // If either queue is empty, we need to add to both queues.
            if (queue1.last === null || queue2.last === null) {
              insertUpdateIntoQueue(queue1, update);
              insertUpdateIntoQueue(queue2, update);
              return;
            }

            // If both lists are not empty, the last update is the same for both lists
            // because of structural sharing. So, we should only append to one of
            // the lists.
            insertUpdateIntoQueue(queue1, update);
            // But we still need to update the `last` pointer of queue2.
            queue2.last = update;
          }

          function getUpdateExpirationTime(fiber) {
            if (fiber.tag !== ClassComponent && fiber.tag !== HostRoot) {
              return NoWork;
            }
            var updateQueue = fiber.updateQueue;
            if (updateQueue === null) {
              return NoWork;
            }
            return updateQueue.expirationTime;
          }

          function getStateFromUpdate(update, instance, prevState, props) {
            var partialState = update.partialState;
            if (typeof partialState === "function") {
              var updateFn = partialState;
              return updateFn.call(instance, prevState, props);
            } else {
              return partialState;
            }
          }

          function processUpdateQueue(
            current,
            workInProgress,
            queue,
            instance,
            props,
            renderExpirationTime
          ) {
            if (current !== null && current.updateQueue === queue) {
              // We need to create a work-in-progress queue, by cloning the current queue.
              var currentQueue = queue;
              queue = workInProgress.updateQueue = {
                baseState: currentQueue.baseState,
                expirationTime: currentQueue.expirationTime,
                first: currentQueue.first,
                last: currentQueue.last,
                isInitialized: currentQueue.isInitialized,
                // These fields are no longer valid because they were already committed.
                // Reset them.
                callbackList: null,
                hasForceUpdate: false
              };
            }

            {
              // Set this flag so we can warn if setState is called inside the update
              // function of another setState.
              queue.isProcessing = true;
            }

            // Reset the remaining expiration time. If we skip over any updates, we'll
            // increase this accordingly.
            queue.expirationTime = NoWork;

            // TODO: We don't know what the base state will be until we begin work.
            // It depends on which fiber is the next current. Initialize with an empty
            // base state, then set to the memoizedState when rendering. Not super
            // happy with this approach.
            var state = void 0;
            if (queue.isInitialized) {
              state = queue.baseState;
            } else {
              state = queue.baseState = workInProgress.memoizedState;
              queue.isInitialized = true;
            }
            var dontMutatePrevState = true;
            var update = queue.first;
            var didSkip = false;
            while (update !== null) {
              var updateExpirationTime = update.expirationTime;
              if (updateExpirationTime > renderExpirationTime) {
                // This update does not have sufficient priority. Skip it.
                var remainingExpirationTime = queue.expirationTime;
                if (
                  remainingExpirationTime === NoWork ||
                  remainingExpirationTime > updateExpirationTime
                ) {
                  // Update the remaining expiration time.
                  queue.expirationTime = updateExpirationTime;
                }
                if (!didSkip) {
                  didSkip = true;
                  queue.baseState = state;
                }
                // Continue to the next update.
                update = update.next;
                continue;
              }

              // This update does have sufficient priority.

              // If no previous updates were skipped, drop this update from the queue by
              // advancing the head of the list.
              if (!didSkip) {
                queue.first = update.next;
                if (queue.first === null) {
                  queue.last = null;
                }
              }

              // Process the update
              var _partialState = void 0;
              if (update.isReplace) {
                state = getStateFromUpdate(update, instance, state, props);
                dontMutatePrevState = true;
              } else {
                _partialState = getStateFromUpdate(
                  update,
                  instance,
                  state,
                  props
                );
                if (_partialState) {
                  if (dontMutatePrevState) {
                    // $FlowFixMe: Idk how to type this properly.
                    state = _assign({}, state, _partialState);
                  } else {
                    state = _assign(state, _partialState);
                  }
                  dontMutatePrevState = false;
                }
              }
              if (update.isForced) {
                queue.hasForceUpdate = true;
              }
              if (update.callback !== null) {
                // Append to list of callbacks.
                var _callbackList = queue.callbackList;
                if (_callbackList === null) {
                  _callbackList = queue.callbackList = [];
                }
                _callbackList.push(update);
              }
              update = update.next;
            }

            if (queue.callbackList !== null) {
              workInProgress.effectTag |= Callback;
            } else if (queue.first === null && !queue.hasForceUpdate) {
              // The queue is empty. We can reset it.
              workInProgress.updateQueue = null;
            }

            if (!didSkip) {
              didSkip = true;
              queue.baseState = state;
            }

            {
              // No longer processing.
              queue.isProcessing = false;
            }

            return state;
          }

          function commitCallbacks(queue, context) {
            var callbackList = queue.callbackList;
            if (callbackList === null) {
              return;
            }
            // Set the list to null to make sure they don't get called more than once.
            queue.callbackList = null;
            for (var i = 0; i < callbackList.length; i++) {
              var update = callbackList[i];
              var _callback = update.callback;
              // This update might be processed again. Clear the callback so it's only
              // called once.
              update.callback = null;
              !(typeof _callback === "function")
                ? invariant(
                    false,
                    "Invalid argument passed as callback. Expected a function. Instead received: %s",
                    _callback
                  )
                : void 0;
              _callback.call(context);
            }
          }

          var fakeInternalInstance = {};
          var isArray = Array.isArray;

          {
            var didWarnAboutStateAssignmentForComponent = {};

            var warnOnInvalidCallback = function(callback, callerName) {
              warning(
                callback === null || typeof callback === "function",
                "%s(...): Expected the last optional `callback` argument to be a " +
                  "function. Instead received: %s.",
                callerName,
                callback
              );
            };

            // This is so gross but it's at least non-critical and can be removed if
            // it causes problems. This is meant to give a nicer error message for
            // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
            // ...)) which otherwise throws a "_processChildContext is not a function"
            // exception.
            Object.defineProperty(
              fakeInternalInstance,
              "_processChildContext",
              {
                enumerable: false,
                value: function() {
                  invariant(
                    false,
                    "_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal)."
                  );
                }
              }
            );
            Object.freeze(fakeInternalInstance);
          }

          var ReactFiberClassComponent = function(
            scheduleWork,
            computeExpirationForFiber,
            memoizeProps,
            memoizeState
          ) {
            // Class component state updater
            var updater = {
              isMounted: isMounted,
              enqueueSetState: function(instance, partialState, callback) {
                var fiber = get(instance);
                callback = callback === undefined ? null : callback;
                {
                  warnOnInvalidCallback(callback, "setState");
                }
                var expirationTime = computeExpirationForFiber(fiber);
                var update = {
                  expirationTime: expirationTime,
                  partialState: partialState,
                  callback: callback,
                  isReplace: false,
                  isForced: false,
                  nextCallback: null,
                  next: null
                };
                insertUpdateIntoFiber(fiber, update);
                scheduleWork(fiber, expirationTime);
              },
              enqueueReplaceState: function(instance, state, callback) {
                var fiber = get(instance);
                callback = callback === undefined ? null : callback;
                {
                  warnOnInvalidCallback(callback, "replaceState");
                }
                var expirationTime = computeExpirationForFiber(fiber);
                var update = {
                  expirationTime: expirationTime,
                  partialState: state,
                  callback: callback,
                  isReplace: true,
                  isForced: false,
                  nextCallback: null,
                  next: null
                };
                insertUpdateIntoFiber(fiber, update);
                scheduleWork(fiber, expirationTime);
              },
              enqueueForceUpdate: function(instance, callback) {
                var fiber = get(instance);
                callback = callback === undefined ? null : callback;
                {
                  warnOnInvalidCallback(callback, "forceUpdate");
                }
                var expirationTime = computeExpirationForFiber(fiber);
                var update = {
                  expirationTime: expirationTime,
                  partialState: null,
                  callback: callback,
                  isReplace: false,
                  isForced: true,
                  nextCallback: null,
                  next: null
                };
                insertUpdateIntoFiber(fiber, update);
                scheduleWork(fiber, expirationTime);
              }
            };

            function checkShouldComponentUpdate(
              workInProgress,
              oldProps,
              newProps,
              oldState,
              newState,
              newContext
            ) {
              if (
                oldProps === null ||
                (workInProgress.updateQueue !== null &&
                  workInProgress.updateQueue.hasForceUpdate)
              ) {
                // If the workInProgress already has an Update effect, return true
                return true;
              }

              var instance = workInProgress.stateNode;
              var type = workInProgress.type;
              if (typeof instance.shouldComponentUpdate === "function") {
                startPhaseTimer(workInProgress, "shouldComponentUpdate");
                var shouldUpdate = instance.shouldComponentUpdate(
                  newProps,
                  newState,
                  newContext
                );
                stopPhaseTimer();

                {
                  warning(
                    shouldUpdate !== undefined,
                    "%s.shouldComponentUpdate(): Returned undefined instead of a " +
                      "boolean value. Make sure to return true or false.",
                    getComponentName(workInProgress) || "Unknown"
                  );
                }

                return shouldUpdate;
              }

              if (type.prototype && type.prototype.isPureReactComponent) {
                return (
                  !shallowEqual(oldProps, newProps) ||
                  !shallowEqual(oldState, newState)
                );
              }

              return true;
            }

            function checkClassInstance(workInProgress) {
              var instance = workInProgress.stateNode;
              var type = workInProgress.type;
              {
                var name = getComponentName(workInProgress);
                var renderPresent = instance.render;

                if (!renderPresent) {
                  if (
                    type.prototype &&
                    typeof type.prototype.render === "function"
                  ) {
                    warning(
                      false,
                      "%s(...): No `render` method found on the returned component " +
                        "instance: did you accidentally return an object from the constructor?",
                      name
                    );
                  } else {
                    warning(
                      false,
                      "%s(...): No `render` method found on the returned component " +
                        "instance: you may have forgotten to define `render`.",
                      name
                    );
                  }
                }

                var noGetInitialStateOnES6 =
                  !instance.getInitialState ||
                  instance.getInitialState.isReactClassApproved ||
                  instance.state;
                warning(
                  noGetInitialStateOnES6,
                  "getInitialState was defined on %s, a plain JavaScript class. " +
                    "This is only supported for classes created using React.createClass. " +
                    "Did you mean to define a state property instead?",
                  name
                );
                var noGetDefaultPropsOnES6 =
                  !instance.getDefaultProps ||
                  instance.getDefaultProps.isReactClassApproved;
                warning(
                  noGetDefaultPropsOnES6,
                  "getDefaultProps was defined on %s, a plain JavaScript class. " +
                    "This is only supported for classes created using React.createClass. " +
                    "Use a static property to define defaultProps instead.",
                  name
                );
                var noInstancePropTypes = !instance.propTypes;
                warning(
                  noInstancePropTypes,
                  "propTypes was defined as an instance property on %s. Use a static " +
                    "property to define propTypes instead.",
                  name
                );
                var noInstanceContextTypes = !instance.contextTypes;
                warning(
                  noInstanceContextTypes,
                  "contextTypes was defined as an instance property on %s. Use a static " +
                    "property to define contextTypes instead.",
                  name
                );
                var noComponentShouldUpdate =
                  typeof instance.componentShouldUpdate !== "function";
                warning(
                  noComponentShouldUpdate,
                  "%s has a method called " +
                    "componentShouldUpdate(). Did you mean shouldComponentUpdate()? " +
                    "The name is phrased as a question because the function is " +
                    "expected to return a value.",
                  name
                );
                if (
                  type.prototype &&
                  type.prototype.isPureReactComponent &&
                  typeof instance.shouldComponentUpdate !== "undefined"
                ) {
                  warning(
                    false,
                    "%s has a method called shouldComponentUpdate(). " +
                      "shouldComponentUpdate should not be used when extending React.PureComponent. " +
                      "Please extend React.Component if shouldComponentUpdate is used.",
                    getComponentName(workInProgress) || "A pure component"
                  );
                }
                var noComponentDidUnmount =
                  typeof instance.componentDidUnmount !== "function";
                warning(
                  noComponentDidUnmount,
                  "%s has a method called " +
                    "componentDidUnmount(). But there is no such lifecycle method. " +
                    "Did you mean componentWillUnmount()?",
                  name
                );
                var noComponentDidReceiveProps =
                  typeof instance.componentDidReceiveProps !== "function";
                warning(
                  noComponentDidReceiveProps,
                  "%s has a method called " +
                    "componentDidReceiveProps(). But there is no such lifecycle method. " +
                    "If you meant to update the state in response to changing props, " +
                    "use componentWillReceiveProps(). If you meant to fetch data or " +
                    "run side-effects or mutations after React has updated the UI, use componentDidUpdate().",
                  name
                );
                var noComponentWillRecieveProps =
                  typeof instance.componentWillRecieveProps !== "function";
                warning(
                  noComponentWillRecieveProps,
                  "%s has a method called " +
                    "componentWillRecieveProps(). Did you mean componentWillReceiveProps()?",
                  name
                );
                var hasMutatedProps =
                  instance.props !== workInProgress.pendingProps;
                warning(
                  instance.props === undefined || !hasMutatedProps,
                  "%s(...): When calling super() in `%s`, make sure to pass " +
                    "up the same props that your component's constructor was passed.",
                  name,
                  name
                );
                var noInstanceDefaultProps = !instance.defaultProps;
                warning(
                  noInstanceDefaultProps,
                  "Setting defaultProps as an instance property on %s is not supported and will be ignored." +
                    " Instead, define defaultProps as a static property on %s.",
                  name,
                  name
                );
              }

              var state = instance.state;
              if (state && (typeof state !== "object" || isArray(state))) {
                invariant(
                  false,
                  "%s.state: must be set to an object or null",
                  getComponentName(workInProgress)
                );
              }
              if (typeof instance.getChildContext === "function") {
                !(typeof workInProgress.type.childContextTypes === "object")
                  ? invariant(
                      false,
                      "%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().",
                      getComponentName(workInProgress)
                    )
                  : void 0;
              }
            }

            function resetInputPointers(workInProgress, instance) {
              instance.props = workInProgress.memoizedProps;
              instance.state = workInProgress.memoizedState;
            }

            function adoptClassInstance(workInProgress, instance) {
              instance.updater = updater;
              workInProgress.stateNode = instance;
              // The instance needs access to the fiber so that it can schedule updates
              set(instance, workInProgress);
              {
                instance._reactInternalInstance = fakeInternalInstance;
              }
            }

            function constructClassInstance(workInProgress, props) {
              var ctor = workInProgress.type;
              var unmaskedContext = getUnmaskedContext(workInProgress);
              var needsContext = isContextConsumer(workInProgress);
              var context = needsContext
                ? getMaskedContext(workInProgress, unmaskedContext)
                : emptyObject;
              var instance = new ctor(props, context);
              adoptClassInstance(workInProgress, instance);

              // Cache unmasked context so we can avoid recreating masked context unless necessary.
              // ReactFiberContext usually updates this cache but can't for newly-created instances.
              if (needsContext) {
                cacheContext(workInProgress, unmaskedContext, context);
              }

              return instance;
            }

            function callComponentWillMount(workInProgress, instance) {
              startPhaseTimer(workInProgress, "componentWillMount");
              var oldState = instance.state;
              instance.componentWillMount();

              stopPhaseTimer();

              if (oldState !== instance.state) {
                {
                  warning(
                    false,
                    "%s.componentWillMount(): Assigning directly to this.state is " +
                      "deprecated (except inside a component's " +
                      "constructor). Use setState instead.",
                    getComponentName(workInProgress)
                  );
                }
                updater.enqueueReplaceState(instance, instance.state, null);
              }
            }

            function callComponentWillReceiveProps(
              workInProgress,
              instance,
              newProps,
              newContext
            ) {
              startPhaseTimer(workInProgress, "componentWillReceiveProps");
              var oldState = instance.state;
              instance.componentWillReceiveProps(newProps, newContext);
              stopPhaseTimer();

              if (instance.state !== oldState) {
                {
                  var componentName =
                    getComponentName(workInProgress) || "Component";
                  if (!didWarnAboutStateAssignmentForComponent[componentName]) {
                    warning(
                      false,
                      "%s.componentWillReceiveProps(): Assigning directly to " +
                        "this.state is deprecated (except inside a component's " +
                        "constructor). Use setState instead.",
                      componentName
                    );
                    didWarnAboutStateAssignmentForComponent[
                      componentName
                    ] = true;
                  }
                }
                updater.enqueueReplaceState(instance, instance.state, null);
              }
            }

            // Invokes the mount life-cycles on a previously never rendered instance.
            function mountClassInstance(workInProgress, renderExpirationTime) {
              var current = workInProgress.alternate;

              {
                checkClassInstance(workInProgress);
              }

              var instance = workInProgress.stateNode;
              var state = instance.state || null;

              var props = workInProgress.pendingProps;
              !props
                ? invariant(
                    false,
                    "There must be pending props for an initial mount. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;

              var unmaskedContext = getUnmaskedContext(workInProgress);

              instance.props = props;
              instance.state = workInProgress.memoizedState = state;
              instance.refs = emptyObject;
              instance.context = getMaskedContext(
                workInProgress,
                unmaskedContext
              );

              if (
                enableAsyncSubtreeAPI &&
                workInProgress.type != null &&
                workInProgress.type.prototype != null &&
                workInProgress.type.prototype.unstable_isAsyncReactComponent ===
                  true
              ) {
                workInProgress.internalContextTag |= AsyncUpdates;
              }

              if (typeof instance.componentWillMount === "function") {
                callComponentWillMount(workInProgress, instance);
                // If we had additional state updates during this life-cycle, let's
                // process them now.
                var updateQueue = workInProgress.updateQueue;
                if (updateQueue !== null) {
                  instance.state = processUpdateQueue(
                    current,
                    workInProgress,
                    updateQueue,
                    instance,
                    props,
                    renderExpirationTime
                  );
                }
              }
              if (typeof instance.componentDidMount === "function") {
                workInProgress.effectTag |= Update;
              }
            }

            // Called on a preexisting class instance. Returns false if a resumed render
            // could be reused.
            // function resumeMountClassInstance(
            //   workInProgress: Fiber,
            //   priorityLevel: PriorityLevel,
            // ): boolean {
            //   const instance = workInProgress.stateNode;
            //   resetInputPointers(workInProgress, instance);

            //   let newState = workInProgress.memoizedState;
            //   let newProps = workInProgress.pendingProps;
            //   if (!newProps) {
            //     // If there isn't any new props, then we'll reuse the memoized props.
            //     // This could be from already completed work.
            //     newProps = workInProgress.memoizedProps;
            //     invariant(
            //       newProps != null,
            //       'There should always be pending or memoized props. This error is ' +
            //         'likely caused by a bug in React. Please file an issue.',
            //     );
            //   }
            //   const newUnmaskedContext = getUnmaskedContext(workInProgress);
            //   const newContext = getMaskedContext(workInProgress, newUnmaskedContext);

            //   const oldContext = instance.context;
            //   const oldProps = workInProgress.memoizedProps;

            //   if (
            //     typeof instance.componentWillReceiveProps === 'function' &&
            //     (oldProps !== newProps || oldContext !== newContext)
            //   ) {
            //     callComponentWillReceiveProps(
            //       workInProgress,
            //       instance,
            //       newProps,
            //       newContext,
            //     );
            //   }

            //   // Process the update queue before calling shouldComponentUpdate
            //   const updateQueue = workInProgress.updateQueue;
            //   if (updateQueue !== null) {
            //     newState = processUpdateQueue(
            //       workInProgress,
            //       updateQueue,
            //       instance,
            //       newState,
            //       newProps,
            //       priorityLevel,
            //     );
            //   }

            //   // TODO: Should we deal with a setState that happened after the last
            //   // componentWillMount and before this componentWillMount? Probably
            //   // unsupported anyway.

            //   if (
            //     !checkShouldComponentUpdate(
            //       workInProgress,
            //       workInProgress.memoizedProps,
            //       newProps,
            //       workInProgress.memoizedState,
            //       newState,
            //       newContext,
            //     )
            //   ) {
            //     // Update the existing instance's state, props, and context pointers even
            //     // though we're bailing out.
            //     instance.props = newProps;
            //     instance.state = newState;
            //     instance.context = newContext;
            //     return false;
            //   }

            //   // Update the input pointers now so that they are correct when we call
            //   // componentWillMount
            //   instance.props = newProps;
            //   instance.state = newState;
            //   instance.context = newContext;

            //   if (typeof instance.componentWillMount === 'function') {
            //     callComponentWillMount(workInProgress, instance);
            //     // componentWillMount may have called setState. Process the update queue.
            //     const newUpdateQueue = workInProgress.updateQueue;
            //     if (newUpdateQueue !== null) {
            //       newState = processUpdateQueue(
            //         workInProgress,
            //         newUpdateQueue,
            //         instance,
            //         newState,
            //         newProps,
            //         priorityLevel,
            //       );
            //     }
            //   }

            //   if (typeof instance.componentDidMount === 'function') {
            //     workInProgress.effectTag |= Update;
            //   }

            //   instance.state = newState;

            //   return true;
            // }

            // Invokes the update life-cycles and returns false if it shouldn't rerender.
            function updateClassInstance(
              current,
              workInProgress,
              renderExpirationTime
            ) {
              var instance = workInProgress.stateNode;
              resetInputPointers(workInProgress, instance);

              var oldProps = workInProgress.memoizedProps;
              var newProps = workInProgress.pendingProps;
              if (!newProps) {
                // If there aren't any new props, then we'll reuse the memoized props.
                // This could be from already completed work.
                newProps = oldProps;
                !(newProps != null)
                  ? invariant(
                      false,
                      "There should always be pending or memoized props. This error is likely caused by a bug in React. Please file an issue."
                    )
                  : void 0;
              }
              var oldContext = instance.context;
              var newUnmaskedContext = getUnmaskedContext(workInProgress);
              var newContext = getMaskedContext(
                workInProgress,
                newUnmaskedContext
              );

              // Note: During these life-cycles, instance.props/instance.state are what
              // ever the previously attempted to render - not the "current". However,
              // during componentDidUpdate we pass the "current" props.

              if (
                typeof instance.componentWillReceiveProps === "function" &&
                (oldProps !== newProps || oldContext !== newContext)
              ) {
                callComponentWillReceiveProps(
                  workInProgress,
                  instance,
                  newProps,
                  newContext
                );
              }

              // Compute the next state using the memoized state and the update queue.
              var oldState = workInProgress.memoizedState;
              // TODO: Previous state can be null.
              var newState = void 0;
              if (workInProgress.updateQueue !== null) {
                newState = processUpdateQueue(
                  current,
                  workInProgress,
                  workInProgress.updateQueue,
                  instance,
                  newProps,
                  renderExpirationTime
                );
              } else {
                newState = oldState;
              }

              if (
                oldProps === newProps &&
                oldState === newState &&
                !hasContextChanged() &&
                !(
                  workInProgress.updateQueue !== null &&
                  workInProgress.updateQueue.hasForceUpdate
                )
              ) {
                // If an update was already in progress, we should schedule an Update
                // effect even though we're bailing out, so that cWU/cDU are called.
                if (typeof instance.componentDidUpdate === "function") {
                  if (
                    oldProps !== current.memoizedProps ||
                    oldState !== current.memoizedState
                  ) {
                    workInProgress.effectTag |= Update;
                  }
                }
                return false;
              }

              var shouldUpdate = checkShouldComponentUpdate(
                workInProgress,
                oldProps,
                newProps,
                oldState,
                newState,
                newContext
              );

              if (shouldUpdate) {
                if (typeof instance.componentWillUpdate === "function") {
                  startPhaseTimer(workInProgress, "componentWillUpdate");
                  instance.componentWillUpdate(newProps, newState, newContext);
                  stopPhaseTimer();
                }
                if (typeof instance.componentDidUpdate === "function") {
                  workInProgress.effectTag |= Update;
                }
              } else {
                // If an update was already in progress, we should schedule an Update
                // effect even though we're bailing out, so that cWU/cDU are called.
                if (typeof instance.componentDidUpdate === "function") {
                  if (
                    oldProps !== current.memoizedProps ||
                    oldState !== current.memoizedState
                  ) {
                    workInProgress.effectTag |= Update;
                  }
                }

                // If shouldComponentUpdate returned false, we should still update the
                // memoized props/state to indicate that this work can be reused.
                memoizeProps(workInProgress, newProps);
                memoizeState(workInProgress, newState);
              }

              // Update the existing instance's state, props, and context pointers even
              // if shouldComponentUpdate returns false.
              instance.props = newProps;
              instance.state = newState;
              instance.context = newContext;

              return shouldUpdate;
            }

            return {
              adoptClassInstance: adoptClassInstance,
              constructClassInstance: constructClassInstance,
              mountClassInstance: mountClassInstance,
              // resumeMountClassInstance,
              updateClassInstance: updateClassInstance
            };
          };

          // The Symbol used to tag the special React types. If there is no native Symbol
          // nor polyfill, then a plain number is used for performance.
          var REACT_PORTAL_TYPE =
            (typeof Symbol === "function" &&
              Symbol["for"] &&
              Symbol["for"]("react.portal")) ||
            0xeaca;

          function createPortal$1(
            children,
            containerInfo,
            // TODO: figure out the API for cross-renderer implementation.
            implementation
          ) {
            var key =
              arguments.length > 3 && arguments[3] !== undefined
                ? arguments[3]
                : null;

            return {
              // This tag allow us to uniquely identify this as a React Portal
              $$typeof: REACT_PORTAL_TYPE,
              key: key == null ? null : "" + key,
              children: children,
              containerInfo: containerInfo,
              implementation: implementation
            };
          }

          var getCurrentFiberStackAddendum$1 =
            ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

          {
            var didWarnAboutMaps = false;
            /**
             * Warn if there's no key explicitly set on dynamic arrays of children or
             * object keys are not valid. This allows us to keep track of children between
             * updates.
             */
            var ownerHasKeyUseWarning = {};
            var ownerHasFunctionTypeWarning = {};

            var warnForMissingKey = function(child) {
              if (child === null || typeof child !== "object") {
                return;
              }
              if (
                !child._store ||
                child._store.validated ||
                child.key != null
              ) {
                return;
              }
              !(typeof child._store === "object")
                ? invariant(
                    false,
                    "React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;
              child._store.validated = true;

              var currentComponentErrorInfo =
                "Each child in an array or iterator should have a unique " +
                '"key" prop. See https://fb.me/react-warning-keys for ' +
                "more information." +
                (getCurrentFiberStackAddendum$1() || "");
              if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
                return;
              }
              ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

              warning(
                false,
                "Each child in an array or iterator should have a unique " +
                  '"key" prop. See https://fb.me/react-warning-keys for ' +
                  "more information.%s",
                getCurrentFiberStackAddendum$1()
              );
            };
          }

          var isArray$1 = Array.isArray;

          var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL = "@@iterator"; // Before Symbol spec.

          // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
          // nor polyfill, then a plain number is used for performance.
          var REACT_ELEMENT_TYPE;
          var REACT_CALL_TYPE;
          var REACT_RETURN_TYPE;
          var REACT_FRAGMENT_TYPE;
          if (typeof Symbol === "function" && Symbol["for"]) {
            REACT_ELEMENT_TYPE = Symbol["for"]("react.element");
            REACT_CALL_TYPE = Symbol["for"]("react.call");
            REACT_RETURN_TYPE = Symbol["for"]("react.return");
            REACT_FRAGMENT_TYPE = Symbol["for"]("react.fragment");
          } else {
            REACT_ELEMENT_TYPE = 0xeac7;
            REACT_CALL_TYPE = 0xeac8;
            REACT_RETURN_TYPE = 0xeac9;
            REACT_FRAGMENT_TYPE = 0xeacb;
          }

          function getIteratorFn(maybeIterable) {
            if (
              maybeIterable === null ||
              typeof maybeIterable === "undefined"
            ) {
              return null;
            }
            var iteratorFn =
              (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||
              maybeIterable[FAUX_ITERATOR_SYMBOL];
            if (typeof iteratorFn === "function") {
              return iteratorFn;
            }
            return null;
          }

          function coerceRef(current, element) {
            var mixedRef = element.ref;
            if (mixedRef !== null && typeof mixedRef !== "function") {
              if (element._owner) {
                var owner = element._owner;
                var inst = void 0;
                if (owner) {
                  var ownerFiber = owner;
                  !(ownerFiber.tag === ClassComponent)
                    ? invariant(
                        false,
                        "Stateless function components cannot have refs."
                      )
                    : void 0;
                  inst = ownerFiber.stateNode;
                }
                !inst
                  ? invariant(
                      false,
                      "Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.",
                      mixedRef
                    )
                  : void 0;
                var stringRef = "" + mixedRef;
                // Check if previous string ref matches new string ref
                if (
                  current !== null &&
                  current.ref !== null &&
                  current.ref._stringRef === stringRef
                ) {
                  return current.ref;
                }
                var ref = function(value) {
                  var refs =
                    inst.refs === emptyObject ? (inst.refs = {}) : inst.refs;
                  if (value === null) {
                    delete refs[stringRef];
                  } else {
                    refs[stringRef] = value;
                  }
                };
                ref._stringRef = stringRef;
                return ref;
              } else {
                !(typeof mixedRef === "string")
                  ? invariant(
                      false,
                      "Expected ref to be a function or a string."
                    )
                  : void 0;
                !element._owner
                  ? invariant(
                      false,
                      "Element ref was specified as a string (%s) but no owner was set. You may have multiple copies of React loaded. (details: https://fb.me/react-refs-must-have-owner).",
                      mixedRef
                    )
                  : void 0;
              }
            }
            return mixedRef;
          }

          function throwOnInvalidObjectType(returnFiber, newChild) {
            if (returnFiber.type !== "textarea") {
              var addendum = "";
              {
                addendum =
                  " If you meant to render a collection of children, use an array " +
                  "instead." +
                  (getCurrentFiberStackAddendum$1() || "");
              }
              invariant(
                false,
                "Objects are not valid as a React child (found: %s).%s",
                Object.prototype.toString.call(newChild) === "[object Object]"
                  ? "object with keys {" +
                    Object.keys(newChild).join(", ") +
                    "}"
                  : newChild,
                addendum
              );
            }
          }

          function warnOnFunctionType() {
            var currentComponentErrorInfo =
              "Functions are not valid as a React child. This may happen if " +
              "you return a Component instead of <Component /> from render. " +
              "Or maybe you meant to call this function rather than return it." +
              (getCurrentFiberStackAddendum$1() || "");

            if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;

            warning(
              false,
              "Functions are not valid as a React child. This may happen if " +
                "you return a Component instead of <Component /> from render. " +
                "Or maybe you meant to call this function rather than return it.%s",
              getCurrentFiberStackAddendum$1() || ""
            );
          }

          // This wrapper function exists because I expect to clone the code in each path
          // to be able to optimize each path individually by branching early. This needs
          // a compiler or we can do it manually. Helpers that don't need this branching
          // live outside of this function.
          function ChildReconciler(shouldClone, shouldTrackSideEffects) {
            function deleteChild(returnFiber, childToDelete) {
              if (!shouldTrackSideEffects) {
                // Noop.
                return;
              }
              if (!shouldClone) {
                // When we're reconciling in place we have a work in progress copy. We
                // actually want the current copy. If there is no current copy, then we
                // don't need to track deletion side-effects.
                if (childToDelete.alternate === null) {
                  return;
                }
                childToDelete = childToDelete.alternate;
              }
              // Deletions are added in reversed order so we add it to the front.
              // At this point, the return fiber's effect list is empty except for
              // deletions, so we can just append the deletion to the list. The remaining
              // effects aren't added until the complete phase. Once we implement
              // resuming, this may not be true.
              var last = returnFiber.lastEffect;
              if (last !== null) {
                last.nextEffect = childToDelete;
                returnFiber.lastEffect = childToDelete;
              } else {
                returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
              }
              childToDelete.nextEffect = null;
              childToDelete.effectTag = Deletion;
            }

            function deleteRemainingChildren(returnFiber, currentFirstChild) {
              if (!shouldTrackSideEffects) {
                // Noop.
                return null;
              }

              // TODO: For the shouldClone case, this could be micro-optimized a bit by
              // assuming that after the first child we've already added everything.
              var childToDelete = currentFirstChild;
              while (childToDelete !== null) {
                deleteChild(returnFiber, childToDelete);
                childToDelete = childToDelete.sibling;
              }
              return null;
            }

            function mapRemainingChildren(returnFiber, currentFirstChild) {
              // Add the remaining children to a temporary map so that we can find them by
              // keys quickly. Implicit (null) keys get added to this set with their index
              var existingChildren = new Map();

              var existingChild = currentFirstChild;
              while (existingChild !== null) {
                if (existingChild.key !== null) {
                  existingChildren.set(existingChild.key, existingChild);
                } else {
                  existingChildren.set(existingChild.index, existingChild);
                }
                existingChild = existingChild.sibling;
              }
              return existingChildren;
            }

            function useFiber(fiber, pendingProps, expirationTime) {
              // We currently set sibling to null and index to 0 here because it is easy
              // to forget to do before returning it. E.g. for the single child case.
              if (shouldClone) {
                var clone = createWorkInProgress(
                  fiber,
                  pendingProps,
                  expirationTime
                );
                clone.index = 0;
                clone.sibling = null;
                return clone;
              } else {
                // We override the expiration time even if it is earlier, because if
                // we're reconciling at a later time that means that this was
                // down-prioritized.
                fiber.expirationTime = expirationTime;
                fiber.effectTag = NoEffect;
                fiber.index = 0;
                fiber.sibling = null;
                fiber.pendingProps = pendingProps;
                return fiber;
              }
            }

            function placeChild(newFiber, lastPlacedIndex, newIndex) {
              newFiber.index = newIndex;
              if (!shouldTrackSideEffects) {
                // Noop.
                return lastPlacedIndex;
              }
              var current = newFiber.alternate;
              if (current !== null) {
                var oldIndex = current.index;
                if (oldIndex < lastPlacedIndex) {
                  // This is a move.
                  newFiber.effectTag = Placement;
                  return lastPlacedIndex;
                } else {
                  // This item can stay in place.
                  return oldIndex;
                }
              } else {
                // This is an insertion.
                newFiber.effectTag = Placement;
                return lastPlacedIndex;
              }
            }

            function placeSingleChild(newFiber) {
              // This is simpler for the single child case. We only need to do a
              // placement for inserting new children.
              if (shouldTrackSideEffects && newFiber.alternate === null) {
                newFiber.effectTag = Placement;
              }
              return newFiber;
            }

            function updateTextNode(
              returnFiber,
              current,
              textContent,
              expirationTime
            ) {
              if (current === null || current.tag !== HostText) {
                // Insert
                var created = createFiberFromText(
                  textContent,
                  returnFiber.internalContextTag,
                  expirationTime
                );
                created["return"] = returnFiber;
                return created;
              } else {
                // Update
                var existing = useFiber(current, textContent, expirationTime);
                existing["return"] = returnFiber;
                return existing;
              }
            }

            function updateElement(
              returnFiber,
              current,
              element,
              expirationTime
            ) {
              if (current !== null && current.type === element.type) {
                // Move based on index
                var existing = useFiber(current, element.props, expirationTime);
                existing.ref = coerceRef(current, element);
                existing["return"] = returnFiber;
                {
                  existing._debugSource = element._source;
                  existing._debugOwner = element._owner;
                }
                return existing;
              } else {
                // Insert
                var created = createFiberFromElement(
                  element,
                  returnFiber.internalContextTag,
                  expirationTime
                );
                created.ref = coerceRef(current, element);
                created["return"] = returnFiber;
                return created;
              }
            }

            function updateCall(returnFiber, current, call, expirationTime) {
              // TODO: Should this also compare handler to determine whether to reuse?
              if (current === null || current.tag !== CallComponent) {
                // Insert
                var created = createFiberFromCall(
                  call,
                  returnFiber.internalContextTag,
                  expirationTime
                );
                created["return"] = returnFiber;
                return created;
              } else {
                // Move based on index
                var existing = useFiber(current, call, expirationTime);
                existing["return"] = returnFiber;
                return existing;
              }
            }

            function updateReturn(
              returnFiber,
              current,
              returnNode,
              expirationTime
            ) {
              if (current === null || current.tag !== ReturnComponent) {
                // Insert
                var created = createFiberFromReturn(
                  returnNode,
                  returnFiber.internalContextTag,
                  expirationTime
                );
                created.type = returnNode.value;
                created["return"] = returnFiber;
                return created;
              } else {
                // Move based on index
                var existing = useFiber(current, null, expirationTime);
                existing.type = returnNode.value;
                existing["return"] = returnFiber;
                return existing;
              }
            }

            function updatePortal(
              returnFiber,
              current,
              portal,
              expirationTime
            ) {
              if (
                current === null ||
                current.tag !== HostPortal ||
                current.stateNode.containerInfo !== portal.containerInfo ||
                current.stateNode.implementation !== portal.implementation
              ) {
                // Insert
                var created = createFiberFromPortal(
                  portal,
                  returnFiber.internalContextTag,
                  expirationTime
                );
                created["return"] = returnFiber;
                return created;
              } else {
                // Update
                var existing = useFiber(
                  current,
                  portal.children || [],
                  expirationTime
                );
                existing["return"] = returnFiber;
                return existing;
              }
            }

            function updateFragment(
              returnFiber,
              current,
              fragment,
              expirationTime,
              key
            ) {
              if (current === null || current.tag !== Fragment) {
                // Insert
                var created = createFiberFromFragment(
                  fragment,
                  returnFiber.internalContextTag,
                  expirationTime,
                  key
                );
                created["return"] = returnFiber;
                return created;
              } else {
                // Update
                var existing = useFiber(current, fragment, expirationTime);
                existing["return"] = returnFiber;
                return existing;
              }
            }

            function createChild(returnFiber, newChild, expirationTime) {
              if (
                typeof newChild === "string" ||
                typeof newChild === "number"
              ) {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                var created = createFiberFromText(
                  "" + newChild,
                  returnFiber.internalContextTag,
                  expirationTime
                );
                created["return"] = returnFiber;
                return created;
              }

              if (typeof newChild === "object" && newChild !== null) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE: {
                    if (newChild.type === REACT_FRAGMENT_TYPE) {
                      var _created = createFiberFromFragment(
                        newChild.props.children,
                        returnFiber.internalContextTag,
                        expirationTime,
                        newChild.key
                      );
                      _created["return"] = returnFiber;
                      return _created;
                    } else {
                      var _created2 = createFiberFromElement(
                        newChild,
                        returnFiber.internalContextTag,
                        expirationTime
                      );
                      _created2.ref = coerceRef(null, newChild);
                      _created2["return"] = returnFiber;
                      return _created2;
                    }
                  }

                  case REACT_CALL_TYPE: {
                    var _created3 = createFiberFromCall(
                      newChild,
                      returnFiber.internalContextTag,
                      expirationTime
                    );
                    _created3["return"] = returnFiber;
                    return _created3;
                  }

                  case REACT_RETURN_TYPE: {
                    var _created4 = createFiberFromReturn(
                      newChild,
                      returnFiber.internalContextTag,
                      expirationTime
                    );
                    _created4.type = newChild.value;
                    _created4["return"] = returnFiber;
                    return _created4;
                  }

                  case REACT_PORTAL_TYPE: {
                    var _created5 = createFiberFromPortal(
                      newChild,
                      returnFiber.internalContextTag,
                      expirationTime
                    );
                    _created5["return"] = returnFiber;
                    return _created5;
                  }
                }

                if (isArray$1(newChild) || getIteratorFn(newChild)) {
                  var _created6 = createFiberFromFragment(
                    newChild,
                    returnFiber.internalContextTag,
                    expirationTime,
                    null
                  );
                  _created6["return"] = returnFiber;
                  return _created6;
                }

                throwOnInvalidObjectType(returnFiber, newChild);
              }

              {
                if (typeof newChild === "function") {
                  warnOnFunctionType();
                }
              }

              return null;
            }

            function updateSlot(
              returnFiber,
              oldFiber,
              newChild,
              expirationTime
            ) {
              // Update the fiber if the keys match, otherwise return null.

              var key = oldFiber !== null ? oldFiber.key : null;

              if (
                typeof newChild === "string" ||
                typeof newChild === "number"
              ) {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                if (key !== null) {
                  return null;
                }
                return updateTextNode(
                  returnFiber,
                  oldFiber,
                  "" + newChild,
                  expirationTime
                );
              }

              if (typeof newChild === "object" && newChild !== null) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE: {
                    if (newChild.key === key) {
                      if (newChild.type === REACT_FRAGMENT_TYPE) {
                        return updateFragment(
                          returnFiber,
                          oldFiber,
                          newChild.props.children,
                          expirationTime,
                          key
                        );
                      }
                      return updateElement(
                        returnFiber,
                        oldFiber,
                        newChild,
                        expirationTime
                      );
                    } else {
                      return null;
                    }
                  }

                  case REACT_CALL_TYPE: {
                    if (newChild.key === key) {
                      return updateCall(
                        returnFiber,
                        oldFiber,
                        newChild,
                        expirationTime
                      );
                    } else {
                      return null;
                    }
                  }

                  case REACT_RETURN_TYPE: {
                    // Returns don't have keys. If the previous node is implicitly keyed
                    // we can continue to replace it without aborting even if it is not a
                    // yield.
                    if (key === null) {
                      return updateReturn(
                        returnFiber,
                        oldFiber,
                        newChild,
                        expirationTime
                      );
                    } else {
                      return null;
                    }
                  }

                  case REACT_PORTAL_TYPE: {
                    if (newChild.key === key) {
                      return updatePortal(
                        returnFiber,
                        oldFiber,
                        newChild,
                        expirationTime
                      );
                    } else {
                      return null;
                    }
                  }
                }

                if (isArray$1(newChild) || getIteratorFn(newChild)) {
                  if (key !== null) {
                    return null;
                  }

                  return updateFragment(
                    returnFiber,
                    oldFiber,
                    newChild,
                    expirationTime,
                    null
                  );
                }

                throwOnInvalidObjectType(returnFiber, newChild);
              }

              {
                if (typeof newChild === "function") {
                  warnOnFunctionType();
                }
              }

              return null;
            }

            function updateFromMap(
              existingChildren,
              returnFiber,
              newIdx,
              newChild,
              expirationTime
            ) {
              if (
                typeof newChild === "string" ||
                typeof newChild === "number"
              ) {
                // Text nodes don't have keys, so we neither have to check the old nor
                // new node for the key. If both are text nodes, they match.
                var matchedFiber = existingChildren.get(newIdx) || null;
                return updateTextNode(
                  returnFiber,
                  matchedFiber,
                  "" + newChild,
                  expirationTime
                );
              }

              if (typeof newChild === "object" && newChild !== null) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE: {
                    var _matchedFiber =
                      existingChildren.get(
                        newChild.key === null ? newIdx : newChild.key
                      ) || null;
                    if (newChild.type === REACT_FRAGMENT_TYPE) {
                      return updateFragment(
                        returnFiber,
                        _matchedFiber,
                        newChild.props.children,
                        expirationTime,
                        newChild.key
                      );
                    }
                    return updateElement(
                      returnFiber,
                      _matchedFiber,
                      newChild,
                      expirationTime
                    );
                  }

                  case REACT_CALL_TYPE: {
                    var _matchedFiber2 =
                      existingChildren.get(
                        newChild.key === null ? newIdx : newChild.key
                      ) || null;
                    return updateCall(
                      returnFiber,
                      _matchedFiber2,
                      newChild,
                      expirationTime
                    );
                  }

                  case REACT_RETURN_TYPE: {
                    // Returns don't have keys, so we neither have to check the old nor
                    // new node for the key. If both are returns, they match.
                    var _matchedFiber3 = existingChildren.get(newIdx) || null;
                    return updateReturn(
                      returnFiber,
                      _matchedFiber3,
                      newChild,
                      expirationTime
                    );
                  }

                  case REACT_PORTAL_TYPE: {
                    var _matchedFiber4 =
                      existingChildren.get(
                        newChild.key === null ? newIdx : newChild.key
                      ) || null;
                    return updatePortal(
                      returnFiber,
                      _matchedFiber4,
                      newChild,
                      expirationTime
                    );
                  }
                }

                if (isArray$1(newChild) || getIteratorFn(newChild)) {
                  var _matchedFiber5 = existingChildren.get(newIdx) || null;
                  return updateFragment(
                    returnFiber,
                    _matchedFiber5,
                    newChild,
                    expirationTime,
                    null
                  );
                }

                throwOnInvalidObjectType(returnFiber, newChild);
              }

              {
                if (typeof newChild === "function") {
                  warnOnFunctionType();
                }
              }

              return null;
            }

            /**
             * Warns if there is a duplicate or missing key
             */
            function warnOnInvalidKey(child, knownKeys) {
              {
                if (typeof child !== "object" || child === null) {
                  return knownKeys;
                }
                switch (child.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                  case REACT_CALL_TYPE:
                  case REACT_PORTAL_TYPE:
                    warnForMissingKey(child);
                    var key = child.key;
                    if (typeof key !== "string") {
                      break;
                    }
                    if (knownKeys === null) {
                      knownKeys = new Set();
                      knownKeys.add(key);
                      break;
                    }
                    if (!knownKeys.has(key)) {
                      knownKeys.add(key);
                      break;
                    }
                    warning(
                      false,
                      "Encountered two children with the same key, `%s`. " +
                        "Keys should be unique so that components maintain their identity " +
                        "across updates. Non-unique keys may cause children to be " +
                        "duplicated and/or omitted — the behavior is unsupported and " +
                        "could change in a future version.%s",
                      key,
                      getCurrentFiberStackAddendum$1()
                    );
                    break;
                  default:
                    break;
                }
              }
              return knownKeys;
            }

            function reconcileChildrenArray(
              returnFiber,
              currentFirstChild,
              newChildren,
              expirationTime
            ) {
              // This algorithm can't optimize by searching from boths ends since we
              // don't have backpointers on fibers. I'm trying to see how far we can get
              // with that model. If it ends up not being worth the tradeoffs, we can
              // add it later.

              // Even with a two ended optimization, we'd want to optimize for the case
              // where there are few changes and brute force the comparison instead of
              // going for the Map. It'd like to explore hitting that path first in
              // forward-only mode and only go for the Map once we notice that we need
              // lots of look ahead. This doesn't handle reversal as well as two ended
              // search but that's unusual. Besides, for the two ended optimization to
              // work on Iterables, we'd need to copy the whole set.

              // In this first iteration, we'll just live with hitting the bad case
              // (adding everything to a Map) in for every insert/move.

              // If you change this code, also update reconcileChildrenIterator() which
              // uses the same algorithm.

              {
                // First, validate keys.
                var knownKeys = null;
                for (var i = 0; i < newChildren.length; i++) {
                  var child = newChildren[i];
                  knownKeys = warnOnInvalidKey(child, knownKeys);
                }
              }

              var resultingFirstChild = null;
              var previousNewFiber = null;

              var oldFiber = currentFirstChild;
              var lastPlacedIndex = 0;
              var newIdx = 0;
              var nextOldFiber = null;
              for (
                ;
                oldFiber !== null && newIdx < newChildren.length;
                newIdx++
              ) {
                if (oldFiber.index > newIdx) {
                  nextOldFiber = oldFiber;
                  oldFiber = null;
                } else {
                  nextOldFiber = oldFiber.sibling;
                }
                var newFiber = updateSlot(
                  returnFiber,
                  oldFiber,
                  newChildren[newIdx],
                  expirationTime
                );
                if (newFiber === null) {
                  // TODO: This breaks on empty slots like null children. That's
                  // unfortunate because it triggers the slow path all the time. We need
                  // a better way to communicate whether this was a miss or null,
                  // boolean, undefined, etc.
                  if (oldFiber === null) {
                    oldFiber = nextOldFiber;
                  }
                  break;
                }
                if (shouldTrackSideEffects) {
                  if (oldFiber && newFiber.alternate === null) {
                    // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                  }
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  // TODO: Move out of the loop. This only happens for the first run.
                  resultingFirstChild = newFiber;
                } else {
                  // TODO: Defer siblings if we're not at the right index for this slot.
                  // I.e. if we had null values before, then we want to defer this
                  // for each null value. However, we also don't want to call updateSlot
                  // with the previous one.
                  previousNewFiber.sibling = newFiber;
                }
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
              }

              if (newIdx === newChildren.length) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                return resultingFirstChild;
              }

              if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for (; newIdx < newChildren.length; newIdx++) {
                  var _newFiber = createChild(
                    returnFiber,
                    newChildren[newIdx],
                    expirationTime
                  );
                  if (!_newFiber) {
                    continue;
                  }
                  lastPlacedIndex = placeChild(
                    _newFiber,
                    lastPlacedIndex,
                    newIdx
                  );
                  if (previousNewFiber === null) {
                    // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber;
                  } else {
                    previousNewFiber.sibling = _newFiber;
                  }
                  previousNewFiber = _newFiber;
                }
                return resultingFirstChild;
              }

              // Add all children to a key map for quick lookups.
              var existingChildren = mapRemainingChildren(
                returnFiber,
                oldFiber
              );

              // Keep scanning and use the map to restore deleted items as moves.
              for (; newIdx < newChildren.length; newIdx++) {
                var _newFiber2 = updateFromMap(
                  existingChildren,
                  returnFiber,
                  newIdx,
                  newChildren[newIdx],
                  expirationTime
                );
                if (_newFiber2) {
                  if (shouldTrackSideEffects) {
                    if (_newFiber2.alternate !== null) {
                      // The new fiber is a work in progress, but if there exists a
                      // current, that means that we reused the fiber. We need to delete
                      // it from the child list so that we don't add it to the deletion
                      // list.
                      existingChildren["delete"](
                        _newFiber2.key === null ? newIdx : _newFiber2.key
                      );
                    }
                  }
                  lastPlacedIndex = placeChild(
                    _newFiber2,
                    lastPlacedIndex,
                    newIdx
                  );
                  if (previousNewFiber === null) {
                    resultingFirstChild = _newFiber2;
                  } else {
                    previousNewFiber.sibling = _newFiber2;
                  }
                  previousNewFiber = _newFiber2;
                }
              }

              if (shouldTrackSideEffects) {
                // Any existing children that weren't consumed above were deleted. We need
                // to add them to the deletion list.
                existingChildren.forEach(function(child) {
                  return deleteChild(returnFiber, child);
                });
              }

              return resultingFirstChild;
            }

            function reconcileChildrenIterator(
              returnFiber,
              currentFirstChild,
              newChildrenIterable,
              expirationTime
            ) {
              // This is the same implementation as reconcileChildrenArray(),
              // but using the iterator instead.

              var iteratorFn = getIteratorFn(newChildrenIterable);
              !(typeof iteratorFn === "function")
                ? invariant(
                    false,
                    "An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;

              {
                // Warn about using Maps as children
                if (typeof newChildrenIterable.entries === "function") {
                  var possibleMap = newChildrenIterable;
                  if (possibleMap.entries === iteratorFn) {
                    warning(
                      didWarnAboutMaps,
                      "Using Maps as children is unsupported and will likely yield " +
                        "unexpected results. Convert it to a sequence/iterable of keyed " +
                        "ReactElements instead.%s",
                      getCurrentFiberStackAddendum$1()
                    );
                    didWarnAboutMaps = true;
                  }
                }

                // First, validate keys.
                // We'll get a different iterator later for the main pass.
                var _newChildren = iteratorFn.call(newChildrenIterable);
                if (_newChildren) {
                  var knownKeys = null;
                  var _step = _newChildren.next();
                  for (; !_step.done; _step = _newChildren.next()) {
                    var child = _step.value;
                    knownKeys = warnOnInvalidKey(child, knownKeys);
                  }
                }
              }

              var newChildren = iteratorFn.call(newChildrenIterable);
              !(newChildren != null)
                ? invariant(false, "An iterable object provided no iterator.")
                : void 0;

              var resultingFirstChild = null;
              var previousNewFiber = null;

              var oldFiber = currentFirstChild;
              var lastPlacedIndex = 0;
              var newIdx = 0;
              var nextOldFiber = null;

              var step = newChildren.next();
              for (
                ;
                oldFiber !== null && !step.done;
                newIdx++, step = newChildren.next()
              ) {
                if (oldFiber.index > newIdx) {
                  nextOldFiber = oldFiber;
                  oldFiber = null;
                } else {
                  nextOldFiber = oldFiber.sibling;
                }
                var newFiber = updateSlot(
                  returnFiber,
                  oldFiber,
                  step.value,
                  expirationTime
                );
                if (newFiber === null) {
                  // TODO: This breaks on empty slots like null children. That's
                  // unfortunate because it triggers the slow path all the time. We need
                  // a better way to communicate whether this was a miss or null,
                  // boolean, undefined, etc.
                  if (!oldFiber) {
                    oldFiber = nextOldFiber;
                  }
                  break;
                }
                if (shouldTrackSideEffects) {
                  if (oldFiber && newFiber.alternate === null) {
                    // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                  }
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  // TODO: Move out of the loop. This only happens for the first run.
                  resultingFirstChild = newFiber;
                } else {
                  // TODO: Defer siblings if we're not at the right index for this slot.
                  // I.e. if we had null values before, then we want to defer this
                  // for each null value. However, we also don't want to call updateSlot
                  // with the previous one.
                  previousNewFiber.sibling = newFiber;
                }
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
              }

              if (step.done) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                return resultingFirstChild;
              }

              if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for (; !step.done; newIdx++, step = newChildren.next()) {
                  var _newFiber3 = createChild(
                    returnFiber,
                    step.value,
                    expirationTime
                  );
                  if (_newFiber3 === null) {
                    continue;
                  }
                  lastPlacedIndex = placeChild(
                    _newFiber3,
                    lastPlacedIndex,
                    newIdx
                  );
                  if (previousNewFiber === null) {
                    // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber3;
                  } else {
                    previousNewFiber.sibling = _newFiber3;
                  }
                  previousNewFiber = _newFiber3;
                }
                return resultingFirstChild;
              }

              // Add all children to a key map for quick lookups.
              var existingChildren = mapRemainingChildren(
                returnFiber,
                oldFiber
              );

              // Keep scanning and use the map to restore deleted items as moves.
              for (; !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber4 = updateFromMap(
                  existingChildren,
                  returnFiber,
                  newIdx,
                  step.value,
                  expirationTime
                );
                if (_newFiber4 !== null) {
                  if (shouldTrackSideEffects) {
                    if (_newFiber4.alternate !== null) {
                      // The new fiber is a work in progress, but if there exists a
                      // current, that means that we reused the fiber. We need to delete
                      // it from the child list so that we don't add it to the deletion
                      // list.
                      existingChildren["delete"](
                        _newFiber4.key === null ? newIdx : _newFiber4.key
                      );
                    }
                  }
                  lastPlacedIndex = placeChild(
                    _newFiber4,
                    lastPlacedIndex,
                    newIdx
                  );
                  if (previousNewFiber === null) {
                    resultingFirstChild = _newFiber4;
                  } else {
                    previousNewFiber.sibling = _newFiber4;
                  }
                  previousNewFiber = _newFiber4;
                }
              }

              if (shouldTrackSideEffects) {
                // Any existing children that weren't consumed above were deleted. We need
                // to add them to the deletion list.
                existingChildren.forEach(function(child) {
                  return deleteChild(returnFiber, child);
                });
              }

              return resultingFirstChild;
            }

            function reconcileSingleTextNode(
              returnFiber,
              currentFirstChild,
              textContent,
              expirationTime
            ) {
              // There's no need to check for keys on text nodes since we don't have a
              // way to define them.
              if (
                currentFirstChild !== null &&
                currentFirstChild.tag === HostText
              ) {
                // We already have an existing node so let's just update it and delete
                // the rest.
                deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                var existing = useFiber(
                  currentFirstChild,
                  textContent,
                  expirationTime
                );
                existing["return"] = returnFiber;
                return existing;
              }
              // The existing first child is not a text node so we need to create one
              // and delete the existing ones.
              deleteRemainingChildren(returnFiber, currentFirstChild);
              var created = createFiberFromText(
                textContent,
                returnFiber.internalContextTag,
                expirationTime
              );
              created["return"] = returnFiber;
              return created;
            }

            function reconcileSingleElement(
              returnFiber,
              currentFirstChild,
              element,
              expirationTime
            ) {
              var key = element.key;
              var child = currentFirstChild;
              while (child !== null) {
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                  if (
                    child.tag === Fragment
                      ? element.type === REACT_FRAGMENT_TYPE
                      : child.type === element.type
                  ) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(
                      child,
                      element.type === REACT_FRAGMENT_TYPE
                        ? element.props.children
                        : element.props,
                      expirationTime
                    );
                    existing.ref = coerceRef(child, element);
                    existing["return"] = returnFiber;
                    {
                      existing._debugSource = element._source;
                      existing._debugOwner = element._owner;
                    }
                    return existing;
                  } else {
                    deleteRemainingChildren(returnFiber, child);
                    break;
                  }
                } else {
                  deleteChild(returnFiber, child);
                }
                child = child.sibling;
              }

              if (element.type === REACT_FRAGMENT_TYPE) {
                var created = createFiberFromFragment(
                  element.props.children,
                  returnFiber.internalContextTag,
                  expirationTime,
                  element.key
                );
                created["return"] = returnFiber;
                return created;
              } else {
                var _created7 = createFiberFromElement(
                  element,
                  returnFiber.internalContextTag,
                  expirationTime
                );
                _created7.ref = coerceRef(currentFirstChild, element);
                _created7["return"] = returnFiber;
                return _created7;
              }
            }

            function reconcileSingleCall(
              returnFiber,
              currentFirstChild,
              call,
              expirationTime
            ) {
              var key = call.key;
              var child = currentFirstChild;
              while (child !== null) {
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                  if (child.tag === CallComponent) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, call, expirationTime);
                    existing["return"] = returnFiber;
                    return existing;
                  } else {
                    deleteRemainingChildren(returnFiber, child);
                    break;
                  }
                } else {
                  deleteChild(returnFiber, child);
                }
                child = child.sibling;
              }

              var created = createFiberFromCall(
                call,
                returnFiber.internalContextTag,
                expirationTime
              );
              created["return"] = returnFiber;
              return created;
            }

            function reconcileSingleReturn(
              returnFiber,
              currentFirstChild,
              returnNode,
              expirationTime
            ) {
              // There's no need to check for keys on yields since they're stateless.
              var child = currentFirstChild;
              if (child !== null) {
                if (child.tag === ReturnComponent) {
                  deleteRemainingChildren(returnFiber, child.sibling);
                  var existing = useFiber(child, null, expirationTime);
                  existing.type = returnNode.value;
                  existing["return"] = returnFiber;
                  return existing;
                } else {
                  deleteRemainingChildren(returnFiber, child);
                }
              }

              var created = createFiberFromReturn(
                returnNode,
                returnFiber.internalContextTag,
                expirationTime
              );
              created.type = returnNode.value;
              created["return"] = returnFiber;
              return created;
            }

            function reconcileSinglePortal(
              returnFiber,
              currentFirstChild,
              portal,
              expirationTime
            ) {
              var key = portal.key;
              var child = currentFirstChild;
              while (child !== null) {
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                  if (
                    child.tag === HostPortal &&
                    child.stateNode.containerInfo === portal.containerInfo &&
                    child.stateNode.implementation === portal.implementation
                  ) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(
                      child,
                      portal.children || [],
                      expirationTime
                    );
                    existing["return"] = returnFiber;
                    return existing;
                  } else {
                    deleteRemainingChildren(returnFiber, child);
                    break;
                  }
                } else {
                  deleteChild(returnFiber, child);
                }
                child = child.sibling;
              }

              var created = createFiberFromPortal(
                portal,
                returnFiber.internalContextTag,
                expirationTime
              );
              created["return"] = returnFiber;
              return created;
            }

            // This API will tag the children with the side-effect of the reconciliation
            // itself. They will be added to the side-effect list as we pass through the
            // children and the parent.
            function reconcileChildFibers(
              returnFiber,
              currentFirstChild,
              newChild,
              expirationTime
            ) {
              // This function is not recursive.
              // If the top level item is an array, we treat it as a set of children,
              // not as a fragment. Nested arrays on the other hand will be treated as
              // fragment nodes. Recursion happens at the normal flow.

              // Handle top level unkeyed fragments as if they were arrays.
              // This leads to an ambiguity between <>{[...]}</> and <>...</>.
              // We treat the ambiguous cases above the same.
              if (
                enableReactFragment &&
                typeof newChild === "object" &&
                newChild !== null &&
                newChild.type === REACT_FRAGMENT_TYPE &&
                newChild.key === null
              ) {
                newChild = newChild.props.children;
              }

              // Handle object types
              var isObject = typeof newChild === "object" && newChild !== null;

              if (isObject) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                    return placeSingleChild(
                      reconcileSingleElement(
                        returnFiber,
                        currentFirstChild,
                        newChild,
                        expirationTime
                      )
                    );

                  case REACT_CALL_TYPE:
                    return placeSingleChild(
                      reconcileSingleCall(
                        returnFiber,
                        currentFirstChild,
                        newChild,
                        expirationTime
                      )
                    );
                  case REACT_RETURN_TYPE:
                    return placeSingleChild(
                      reconcileSingleReturn(
                        returnFiber,
                        currentFirstChild,
                        newChild,
                        expirationTime
                      )
                    );
                  case REACT_PORTAL_TYPE:
                    return placeSingleChild(
                      reconcileSinglePortal(
                        returnFiber,
                        currentFirstChild,
                        newChild,
                        expirationTime
                      )
                    );
                }
              }

              if (
                typeof newChild === "string" ||
                typeof newChild === "number"
              ) {
                return placeSingleChild(
                  reconcileSingleTextNode(
                    returnFiber,
                    currentFirstChild,
                    "" + newChild,
                    expirationTime
                  )
                );
              }

              if (isArray$1(newChild)) {
                return reconcileChildrenArray(
                  returnFiber,
                  currentFirstChild,
                  newChild,
                  expirationTime
                );
              }

              if (getIteratorFn(newChild)) {
                return reconcileChildrenIterator(
                  returnFiber,
                  currentFirstChild,
                  newChild,
                  expirationTime
                );
              }

              if (isObject) {
                throwOnInvalidObjectType(returnFiber, newChild);
              }

              {
                if (typeof newChild === "function") {
                  warnOnFunctionType();
                }
              }
              if (typeof newChild === "undefined") {
                // If the new child is undefined, and the return fiber is a composite
                // component, throw an error. If Fiber return types are disabled,
                // we already threw above.
                switch (returnFiber.tag) {
                  case ClassComponent: {
                    {
                      var instance = returnFiber.stateNode;
                      if (instance.render._isMockFunction) {
                        // We allow auto-mocks to proceed as if they're returning null.
                        break;
                      }
                    }
                  }
                  // Intentionally fall through to the next case, which handles both
                  // functions and classes
                  // eslint-disable-next-lined no-fallthrough
                  case FunctionalComponent: {
                    var Component = returnFiber.type;
                    invariant(
                      false,
                      "%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.",
                      Component.displayName || Component.name || "Component"
                    );
                  }
                }
              }

              // Remaining cases are all treated as empty.
              return deleteRemainingChildren(returnFiber, currentFirstChild);
            }

            return reconcileChildFibers;
          }

          var reconcileChildFibers = ChildReconciler(true, true);

          var reconcileChildFibersInPlace = ChildReconciler(false, true);

          var mountChildFibersInPlace = ChildReconciler(false, false);

          function cloneChildFibers(current, workInProgress) {
            !(current === null || workInProgress.child === current.child)
              ? invariant(false, "Resuming work not yet implemented.")
              : void 0;

            if (workInProgress.child === null) {
              return;
            }

            var currentChild = workInProgress.child;
            var newChild = createWorkInProgress(
              currentChild,
              currentChild.pendingProps,
              currentChild.expirationTime
            );
            workInProgress.child = newChild;

            newChild["return"] = workInProgress;
            while (currentChild.sibling !== null) {
              currentChild = currentChild.sibling;
              newChild = newChild.sibling = createWorkInProgress(
                currentChild,
                currentChild.pendingProps,
                currentChild.expirationTime
              );
              newChild["return"] = workInProgress;
            }
            newChild.sibling = null;
          }

          {
            var warnedAboutStatelessRefs = {};
          }

          var ReactFiberBeginWork = function(
            config,
            hostContext,
            hydrationContext,
            scheduleWork,
            computeExpirationForFiber
          ) {
            var shouldSetTextContent = config.shouldSetTextContent,
              useSyncScheduling = config.useSyncScheduling,
              shouldDeprioritizeSubtree = config.shouldDeprioritizeSubtree;
            var pushHostContext = hostContext.pushHostContext,
              pushHostContainer = hostContext.pushHostContainer;
            var enterHydrationState = hydrationContext.enterHydrationState,
              resetHydrationState = hydrationContext.resetHydrationState,
              tryToClaimNextHydratableInstance =
                hydrationContext.tryToClaimNextHydratableInstance;

            var _ReactFiberClassCompo = ReactFiberClassComponent(
                scheduleWork,
                computeExpirationForFiber,
                memoizeProps,
                memoizeState
              ),
              adoptClassInstance = _ReactFiberClassCompo.adoptClassInstance,
              constructClassInstance =
                _ReactFiberClassCompo.constructClassInstance,
              mountClassInstance = _ReactFiberClassCompo.mountClassInstance,
              updateClassInstance = _ReactFiberClassCompo.updateClassInstance;

            // TODO: Remove this and use reconcileChildrenAtExpirationTime directly.

            function reconcileChildren(current, workInProgress, nextChildren) {
              reconcileChildrenAtExpirationTime(
                current,
                workInProgress,
                nextChildren,
                workInProgress.expirationTime
              );
            }

            function reconcileChildrenAtExpirationTime(
              current,
              workInProgress,
              nextChildren,
              renderExpirationTime
            ) {
              if (current === null) {
                // If this is a fresh new component that hasn't been rendered yet, we
                // won't update its child set by applying minimal side-effects. Instead,
                // we will add them all to the child before it gets rendered. That means
                // we can optimize this reconciliation pass by not tracking side-effects.
                workInProgress.child = mountChildFibersInPlace(
                  workInProgress,
                  workInProgress.child,
                  nextChildren,
                  renderExpirationTime
                );
              } else if (current.child === workInProgress.child) {
                // If the current child is the same as the work in progress, it means that
                // we haven't yet started any work on these children. Therefore, we use
                // the clone algorithm to create a copy of all the current children.

                // If we had any progressed work already, that is invalid at this point so
                // let's throw it out.
                workInProgress.child = reconcileChildFibers(
                  workInProgress,
                  workInProgress.child,
                  nextChildren,
                  renderExpirationTime
                );
              } else {
                // If, on the other hand, it is already using a clone, that means we've
                // already begun some work on this tree and we can continue where we left
                // off by reconciling against the existing children.
                workInProgress.child = reconcileChildFibersInPlace(
                  workInProgress,
                  workInProgress.child,
                  nextChildren,
                  renderExpirationTime
                );
              }
            }

            function updateFragment(current, workInProgress) {
              var nextChildren = workInProgress.pendingProps;
              if (hasContextChanged()) {
                // Normally we can bail out on props equality but if context has changed
                // we don't do the bailout and we have to reuse existing props instead.
                if (nextChildren === null) {
                  nextChildren = workInProgress.memoizedProps;
                }
              } else if (
                nextChildren === null ||
                workInProgress.memoizedProps === nextChildren
              ) {
                return bailoutOnAlreadyFinishedWork(current, workInProgress);
              }
              reconcileChildren(current, workInProgress, nextChildren);
              memoizeProps(workInProgress, nextChildren);
              return workInProgress.child;
            }

            function markRef(current, workInProgress) {
              var ref = workInProgress.ref;
              if (ref !== null && (!current || current.ref !== ref)) {
                // Schedule a Ref effect
                workInProgress.effectTag |= Ref;
              }
            }

            function updateFunctionalComponent(current, workInProgress) {
              var fn = workInProgress.type;
              var nextProps = workInProgress.pendingProps;

              var memoizedProps = workInProgress.memoizedProps;
              if (hasContextChanged()) {
                // Normally we can bail out on props equality but if context has changed
                // we don't do the bailout and we have to reuse existing props instead.
                if (nextProps === null) {
                  nextProps = memoizedProps;
                }
              } else {
                if (nextProps === null || memoizedProps === nextProps) {
                  return bailoutOnAlreadyFinishedWork(current, workInProgress);
                }
                // TODO: consider bringing fn.shouldComponentUpdate() back.
                // It used to be here.
              }

              var unmaskedContext = getUnmaskedContext(workInProgress);
              var context = getMaskedContext(workInProgress, unmaskedContext);

              var nextChildren;

              {
                ReactCurrentOwner.current = workInProgress;
                ReactDebugCurrentFiber.setCurrentPhase("render");
                nextChildren = fn(nextProps, context);
                ReactDebugCurrentFiber.setCurrentPhase(null);
              }
              // React DevTools reads this flag.
              workInProgress.effectTag |= PerformedWork;
              reconcileChildren(current, workInProgress, nextChildren);
              memoizeProps(workInProgress, nextProps);
              return workInProgress.child;
            }

            function updateClassComponent(
              current,
              workInProgress,
              renderExpirationTime
            ) {
              // Push context providers early to prevent context stack mismatches.
              // During mounting we don't know the child context yet as the instance doesn't exist.
              // We will invalidate the child context in finishClassComponent() right after rendering.
              var hasContext = pushContextProvider(workInProgress);

              var shouldUpdate = void 0;
              if (current === null) {
                if (!workInProgress.stateNode) {
                  // In the initial pass we might need to construct the instance.
                  constructClassInstance(
                    workInProgress,
                    workInProgress.pendingProps
                  );
                  mountClassInstance(workInProgress, renderExpirationTime);
                  shouldUpdate = true;
                } else {
                  invariant(false, "Resuming work not yet implemented.");
                  // In a resume, we'll already have an instance we can reuse.
                  // shouldUpdate = resumeMountClassInstance(workInProgress, renderExpirationTime);
                }
              } else {
                shouldUpdate = updateClassInstance(
                  current,
                  workInProgress,
                  renderExpirationTime
                );
              }
              return finishClassComponent(
                current,
                workInProgress,
                shouldUpdate,
                hasContext
              );
            }

            function finishClassComponent(
              current,
              workInProgress,
              shouldUpdate,
              hasContext
            ) {
              // Refs should update even if shouldComponentUpdate returns false
              markRef(current, workInProgress);

              if (!shouldUpdate) {
                // Context providers should defer to sCU for rendering
                if (hasContext) {
                  invalidateContextProvider(workInProgress, false);
                }

                return bailoutOnAlreadyFinishedWork(current, workInProgress);
              }

              var instance = workInProgress.stateNode;

              // Rerender
              ReactCurrentOwner.current = workInProgress;
              var nextChildren = void 0;
              {
                ReactDebugCurrentFiber.setCurrentPhase("render");
                nextChildren = instance.render();
                ReactDebugCurrentFiber.setCurrentPhase(null);
              }
              // React DevTools reads this flag.
              workInProgress.effectTag |= PerformedWork;
              reconcileChildren(current, workInProgress, nextChildren);
              // Memoize props and state using the values we just used to render.
              // TODO: Restructure so we never read values from the instance.
              memoizeState(workInProgress, instance.state);
              memoizeProps(workInProgress, instance.props);

              // The context might have changed so we need to recalculate it.
              if (hasContext) {
                invalidateContextProvider(workInProgress, true);
              }

              return workInProgress.child;
            }

            function pushHostRootContext(workInProgress) {
              var root = workInProgress.stateNode;
              if (root.pendingContext) {
                pushTopLevelContextObject(
                  workInProgress,
                  root.pendingContext,
                  root.pendingContext !== root.context
                );
              } else if (root.context) {
                // Should always be set
                pushTopLevelContextObject(workInProgress, root.context, false);
              }
              pushHostContainer(workInProgress, root.containerInfo);
            }

            function updateHostRoot(
              current,
              workInProgress,
              renderExpirationTime
            ) {
              pushHostRootContext(workInProgress);
              var updateQueue = workInProgress.updateQueue;
              if (updateQueue !== null) {
                var prevState = workInProgress.memoizedState;
                var state = processUpdateQueue(
                  current,
                  workInProgress,
                  updateQueue,
                  null,
                  null,
                  renderExpirationTime
                );
                if (prevState === state) {
                  // If the state is the same as before, that's a bailout because we had
                  // no work that expires at this time.
                  resetHydrationState();
                  return bailoutOnAlreadyFinishedWork(current, workInProgress);
                }
                var element = state.element;
                var root = workInProgress.stateNode;
                if (
                  (current === null || current.child === null) &&
                  root.hydrate &&
                  enterHydrationState(workInProgress)
                ) {
                  // If we don't have any current children this might be the first pass.
                  // We always try to hydrate. If this isn't a hydration pass there won't
                  // be any children to hydrate which is effectively the same thing as
                  // not hydrating.

                  // This is a bit of a hack. We track the host root as a placement to
                  // know that we're currently in a mounting state. That way isMounted
                  // works as expected. We must reset this before committing.
                  // TODO: Delete this when we delete isMounted and findDOMNode.
                  workInProgress.effectTag |= Placement;

                  // Ensure that children mount into this root without tracking
                  // side-effects. This ensures that we don't store Placement effects on
                  // nodes that will be hydrated.
                  workInProgress.child = mountChildFibersInPlace(
                    workInProgress,
                    workInProgress.child,
                    element,
                    renderExpirationTime
                  );
                } else {
                  // Otherwise reset hydration state in case we aborted and resumed another
                  // root.
                  resetHydrationState();
                  reconcileChildren(current, workInProgress, element);
                }
                memoizeState(workInProgress, state);
                return workInProgress.child;
              }
              resetHydrationState();
              // If there is no update queue, that's a bailout because the root has no props.
              return bailoutOnAlreadyFinishedWork(current, workInProgress);
            }

            function updateHostComponent(
              current,
              workInProgress,
              renderExpirationTime
            ) {
              pushHostContext(workInProgress);

              if (current === null) {
                tryToClaimNextHydratableInstance(workInProgress);
              }

              var type = workInProgress.type;
              var memoizedProps = workInProgress.memoizedProps;
              var nextProps = workInProgress.pendingProps;
              if (nextProps === null) {
                nextProps = memoizedProps;
                !(nextProps !== null)
                  ? invariant(
                      false,
                      "We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue."
                    )
                  : void 0;
              }
              var prevProps = current !== null ? current.memoizedProps : null;

              if (hasContextChanged()) {
                // Normally we can bail out on props equality but if context has changed
                // we don't do the bailout and we have to reuse existing props instead.
              } else if (nextProps === null || memoizedProps === nextProps) {
                return bailoutOnAlreadyFinishedWork(current, workInProgress);
              }

              var nextChildren = nextProps.children;
              var isDirectTextChild = shouldSetTextContent(type, nextProps);

              if (isDirectTextChild) {
                // We special case a direct text child of a host node. This is a common
                // case. We won't handle it as a reified child. We will instead handle
                // this in the host environment that also have access to this prop. That
                // avoids allocating another HostText fiber and traversing it.
                nextChildren = null;
              } else if (prevProps && shouldSetTextContent(type, prevProps)) {
                // If we're switching from a direct text child to a normal child, or to
                // empty, we need to schedule the text content to be reset.
                workInProgress.effectTag |= ContentReset;
              }

              markRef(current, workInProgress);

              // Check the host config to see if the children are offscreen/hidden.
              if (
                renderExpirationTime !== Never &&
                !useSyncScheduling &&
                shouldDeprioritizeSubtree(type, nextProps)
              ) {
                // Down-prioritize the children.
                workInProgress.expirationTime = Never;
                // Bailout and come back to this fiber later.
                return null;
              }

              reconcileChildren(current, workInProgress, nextChildren);
              memoizeProps(workInProgress, nextProps);
              return workInProgress.child;
            }

            function updateHostText(current, workInProgress) {
              if (current === null) {
                tryToClaimNextHydratableInstance(workInProgress);
              }
              var nextProps = workInProgress.pendingProps;
              if (nextProps === null) {
                nextProps = workInProgress.memoizedProps;
              }
              memoizeProps(workInProgress, nextProps);
              // Nothing to do here. This is terminal. We'll do the completion step
              // immediately after.
              return null;
            }

            function mountIndeterminateComponent(
              current,
              workInProgress,
              renderExpirationTime
            ) {
              !(current === null)
                ? invariant(
                    false,
                    "An indeterminate component should never have mounted. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;
              var fn = workInProgress.type;
              var props = workInProgress.pendingProps;
              var unmaskedContext = getUnmaskedContext(workInProgress);
              var context = getMaskedContext(workInProgress, unmaskedContext);

              var value;

              {
                if (fn.prototype && typeof fn.prototype.render === "function") {
                  var componentName = getComponentName(workInProgress);
                  warning(
                    false,
                    "The <%s /> component appears to have a render method, but doesn't extend React.Component. " +
                      "This is likely to cause errors. Change %s to extend React.Component instead.",
                    componentName,
                    componentName
                  );
                }
                ReactCurrentOwner.current = workInProgress;
                value = fn(props, context);
              }
              // React DevTools reads this flag.
              workInProgress.effectTag |= PerformedWork;

              if (
                typeof value === "object" &&
                value !== null &&
                typeof value.render === "function"
              ) {
                // Proceed under the assumption that this is a class instance
                workInProgress.tag = ClassComponent;

                // Push context providers early to prevent context stack mismatches.
                // During mounting we don't know the child context yet as the instance doesn't exist.
                // We will invalidate the child context in finishClassComponent() right after rendering.
                var hasContext = pushContextProvider(workInProgress);
                adoptClassInstance(workInProgress, value);
                mountClassInstance(workInProgress, renderExpirationTime);
                return finishClassComponent(
                  current,
                  workInProgress,
                  true,
                  hasContext
                );
              } else {
                // Proceed under the assumption that this is a functional component
                workInProgress.tag = FunctionalComponent;
                {
                  var Component = workInProgress.type;

                  if (Component) {
                    warning(
                      !Component.childContextTypes,
                      "%s(...): childContextTypes cannot be defined on a functional component.",
                      Component.displayName || Component.name || "Component"
                    );
                  }
                  if (workInProgress.ref !== null) {
                    var info = "";
                    var ownerName = ReactDebugCurrentFiber.getCurrentFiberOwnerName();
                    if (ownerName) {
                      info +=
                        "\n\nCheck the render method of `" + ownerName + "`.";
                    }

                    var warningKey = ownerName || workInProgress._debugID || "";
                    var debugSource = workInProgress._debugSource;
                    if (debugSource) {
                      warningKey =
                        debugSource.fileName + ":" + debugSource.lineNumber;
                    }
                    if (!warnedAboutStatelessRefs[warningKey]) {
                      warnedAboutStatelessRefs[warningKey] = true;
                      warning(
                        false,
                        "Stateless function components cannot be given refs. " +
                          "Attempts to access this ref will fail.%s%s",
                        info,
                        ReactDebugCurrentFiber.getCurrentFiberStackAddendum()
                      );
                    }
                  }
                }
                reconcileChildren(current, workInProgress, value);
                memoizeProps(workInProgress, props);
                return workInProgress.child;
              }
            }

            function updateCallComponent(
              current,
              workInProgress,
              renderExpirationTime
            ) {
              var nextCall = workInProgress.pendingProps;
              if (hasContextChanged()) {
                // Normally we can bail out on props equality but if context has changed
                // we don't do the bailout and we have to reuse existing props instead.
                if (nextCall === null) {
                  nextCall = current && current.memoizedProps;
                  !(nextCall !== null)
                    ? invariant(
                        false,
                        "We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue."
                      )
                    : void 0;
                }
              } else if (
                nextCall === null ||
                workInProgress.memoizedProps === nextCall
              ) {
                nextCall = workInProgress.memoizedProps;
                // TODO: When bailing out, we might need to return the stateNode instead
                // of the child. To check it for work.
                // return bailoutOnAlreadyFinishedWork(current, workInProgress);
              }

              var nextChildren = nextCall.children;

              // The following is a fork of reconcileChildrenAtExpirationTime but using
              // stateNode to store the child.
              if (current === null) {
                workInProgress.stateNode = mountChildFibersInPlace(
                  workInProgress,
                  workInProgress.stateNode,
                  nextChildren,
                  renderExpirationTime
                );
              } else if (current.child === workInProgress.child) {
                workInProgress.stateNode = reconcileChildFibers(
                  workInProgress,
                  workInProgress.stateNode,
                  nextChildren,
                  renderExpirationTime
                );
              } else {
                workInProgress.stateNode = reconcileChildFibersInPlace(
                  workInProgress,
                  workInProgress.stateNode,
                  nextChildren,
                  renderExpirationTime
                );
              }

              memoizeProps(workInProgress, nextCall);
              // This doesn't take arbitrary time so we could synchronously just begin
              // eagerly do the work of workInProgress.child as an optimization.
              return workInProgress.stateNode;
            }

            function updatePortalComponent(
              current,
              workInProgress,
              renderExpirationTime
            ) {
              pushHostContainer(
                workInProgress,
                workInProgress.stateNode.containerInfo
              );
              var nextChildren = workInProgress.pendingProps;
              if (hasContextChanged()) {
                // Normally we can bail out on props equality but if context has changed
                // we don't do the bailout and we have to reuse existing props instead.
                if (nextChildren === null) {
                  nextChildren = current && current.memoizedProps;
                  !(nextChildren != null)
                    ? invariant(
                        false,
                        "We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue."
                      )
                    : void 0;
                }
              } else if (
                nextChildren === null ||
                workInProgress.memoizedProps === nextChildren
              ) {
                return bailoutOnAlreadyFinishedWork(current, workInProgress);
              }

              if (current === null) {
                // Portals are special because we don't append the children during mount
                // but at commit. Therefore we need to track insertions which the normal
                // flow doesn't do during mount. This doesn't happen at the root because
                // the root always starts with a "current" with a null child.
                // TODO: Consider unifying this with how the root works.
                workInProgress.child = reconcileChildFibersInPlace(
                  workInProgress,
                  workInProgress.child,
                  nextChildren,
                  renderExpirationTime
                );
                memoizeProps(workInProgress, nextChildren);
              } else {
                reconcileChildren(current, workInProgress, nextChildren);
                memoizeProps(workInProgress, nextChildren);
              }
              return workInProgress.child;
            }

            /*
	  function reuseChildrenEffects(returnFiber : Fiber, firstChild : Fiber) {
	    let child = firstChild;
	    do {
	      // Ensure that the first and last effect of the parent corresponds
	      // to the children's first and last effect.
	      if (!returnFiber.firstEffect) {
	        returnFiber.firstEffect = child.firstEffect;
	      }
	      if (child.lastEffect) {
	        if (returnFiber.lastEffect) {
	          returnFiber.lastEffect.nextEffect = child.firstEffect;
	        }
	        returnFiber.lastEffect = child.lastEffect;
	      }
	    } while (child = child.sibling);
	  }
	  */

            function bailoutOnAlreadyFinishedWork(current, workInProgress) {
              cancelWorkTimer(workInProgress);

              // TODO: We should ideally be able to bail out early if the children have no
              // more work to do. However, since we don't have a separation of this
              // Fiber's priority and its children yet - we don't know without doing lots
              // of the same work we do anyway. Once we have that separation we can just
              // bail out here if the children has no more work at this priority level.
              // if (workInProgress.priorityOfChildren <= priorityLevel) {
              //   // If there are side-effects in these children that have not yet been
              //   // committed we need to ensure that they get properly transferred up.
              //   if (current && current.child !== workInProgress.child) {
              //     reuseChildrenEffects(workInProgress, child);
              //   }
              //   return null;
              // }

              cloneChildFibers(current, workInProgress);
              return workInProgress.child;
            }

            function bailoutOnLowPriority(current, workInProgress) {
              cancelWorkTimer(workInProgress);

              // TODO: Handle HostComponent tags here as well and call pushHostContext()?
              // See PR 8590 discussion for context
              switch (workInProgress.tag) {
                case HostRoot:
                  pushHostRootContext(workInProgress);
                  break;
                case ClassComponent:
                  pushContextProvider(workInProgress);
                  break;
                case HostPortal:
                  pushHostContainer(
                    workInProgress,
                    workInProgress.stateNode.containerInfo
                  );
                  break;
              }
              // TODO: What if this is currently in progress?
              // How can that happen? How is this not being cloned?
              return null;
            }

            // TODO: Delete memoizeProps/State and move to reconcile/bailout instead
            function memoizeProps(workInProgress, nextProps) {
              workInProgress.memoizedProps = nextProps;
            }

            function memoizeState(workInProgress, nextState) {
              workInProgress.memoizedState = nextState;
              // Don't reset the updateQueue, in case there are pending updates. Resetting
              // is handled by processUpdateQueue.
            }

            function beginWork(current, workInProgress, renderExpirationTime) {
              if (
                workInProgress.expirationTime === NoWork ||
                workInProgress.expirationTime > renderExpirationTime
              ) {
                return bailoutOnLowPriority(current, workInProgress);
              }

              switch (workInProgress.tag) {
                case IndeterminateComponent:
                  return mountIndeterminateComponent(
                    current,
                    workInProgress,
                    renderExpirationTime
                  );
                case FunctionalComponent:
                  return updateFunctionalComponent(current, workInProgress);
                case ClassComponent:
                  return updateClassComponent(
                    current,
                    workInProgress,
                    renderExpirationTime
                  );
                case HostRoot:
                  return updateHostRoot(
                    current,
                    workInProgress,
                    renderExpirationTime
                  );
                case HostComponent:
                  return updateHostComponent(
                    current,
                    workInProgress,
                    renderExpirationTime
                  );
                case HostText:
                  return updateHostText(current, workInProgress);
                case CallHandlerPhase:
                  // This is a restart. Reset the tag to the initial phase.
                  workInProgress.tag = CallComponent;
                // Intentionally fall through since this is now the same.
                case CallComponent:
                  return updateCallComponent(
                    current,
                    workInProgress,
                    renderExpirationTime
                  );
                case ReturnComponent:
                  // A return component is just a placeholder, we can just run through the
                  // next one immediately.
                  return null;
                case HostPortal:
                  return updatePortalComponent(
                    current,
                    workInProgress,
                    renderExpirationTime
                  );
                case Fragment:
                  return updateFragment(current, workInProgress);
                default:
                  invariant(
                    false,
                    "Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."
                  );
              }
            }

            function beginFailedWork(
              current,
              workInProgress,
              renderExpirationTime
            ) {
              // Push context providers here to avoid a push/pop context mismatch.
              switch (workInProgress.tag) {
                case ClassComponent:
                  pushContextProvider(workInProgress);
                  break;
                case HostRoot:
                  pushHostRootContext(workInProgress);
                  break;
                default:
                  invariant(
                    false,
                    "Invalid type of work. This error is likely caused by a bug in React. Please file an issue."
                  );
              }

              // Add an error effect so we can handle the error during the commit phase
              workInProgress.effectTag |= Err;

              // This is a weird case where we do "resume" work — work that failed on
              // our first attempt. Because we no longer have a notion of "progressed
              // deletions," reset the child to the current child to make sure we delete
              // it again. TODO: Find a better way to handle this, perhaps during a more
              // general overhaul of error handling.
              if (current === null) {
                workInProgress.child = null;
              } else if (workInProgress.child !== current.child) {
                workInProgress.child = current.child;
              }

              if (
                workInProgress.expirationTime === NoWork ||
                workInProgress.expirationTime > renderExpirationTime
              ) {
                return bailoutOnLowPriority(current, workInProgress);
              }

              // If we don't bail out, we're going be recomputing our children so we need
              // to drop our effect list.
              workInProgress.firstEffect = null;
              workInProgress.lastEffect = null;

              // Unmount the current children as if the component rendered null
              var nextChildren = null;
              reconcileChildrenAtExpirationTime(
                current,
                workInProgress,
                nextChildren,
                renderExpirationTime
              );

              if (workInProgress.tag === ClassComponent) {
                var instance = workInProgress.stateNode;
                workInProgress.memoizedProps = instance.props;
                workInProgress.memoizedState = instance.state;
              }

              return workInProgress.child;
            }

            return {
              beginWork: beginWork,
              beginFailedWork: beginFailedWork
            };
          };

          var ReactFiberCompleteWork = function(
            config,
            hostContext,
            hydrationContext
          ) {
            var createInstance = config.createInstance,
              createTextInstance = config.createTextInstance,
              appendInitialChild = config.appendInitialChild,
              finalizeInitialChildren = config.finalizeInitialChildren,
              prepareUpdate = config.prepareUpdate,
              mutation = config.mutation,
              persistence = config.persistence;
            var getRootHostContainer = hostContext.getRootHostContainer,
              popHostContext = hostContext.popHostContext,
              getHostContext = hostContext.getHostContext,
              popHostContainer = hostContext.popHostContainer;
            var prepareToHydrateHostInstance =
                hydrationContext.prepareToHydrateHostInstance,
              prepareToHydrateHostTextInstance =
                hydrationContext.prepareToHydrateHostTextInstance,
              popHydrationState = hydrationContext.popHydrationState;

            function markUpdate(workInProgress) {
              // Tag the fiber with an update effect. This turns a Placement into
              // an UpdateAndPlacement.
              workInProgress.effectTag |= Update;
            }

            function markRef(workInProgress) {
              workInProgress.effectTag |= Ref;
            }

            function appendAllReturns(returns, workInProgress) {
              var node = workInProgress.stateNode;
              if (node) {
                node["return"] = workInProgress;
              }
              while (node !== null) {
                if (
                  node.tag === HostComponent ||
                  node.tag === HostText ||
                  node.tag === HostPortal
                ) {
                  invariant(
                    false,
                    "A call cannot have host component children."
                  );
                } else if (node.tag === ReturnComponent) {
                  returns.push(node.type);
                } else if (node.child !== null) {
                  node.child["return"] = node;
                  node = node.child;
                  continue;
                }
                while (node.sibling === null) {
                  if (
                    node["return"] === null ||
                    node["return"] === workInProgress
                  ) {
                    return;
                  }
                  node = node["return"];
                }
                node.sibling["return"] = node["return"];
                node = node.sibling;
              }
            }

            function moveCallToHandlerPhase(
              current,
              workInProgress,
              renderExpirationTime
            ) {
              var call = workInProgress.memoizedProps;
              !call
                ? invariant(
                    false,
                    "Should be resolved by now. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;

              // First step of the call has completed. Now we need to do the second.
              // TODO: It would be nice to have a multi stage call represented by a
              // single component, or at least tail call optimize nested ones. Currently
              // that requires additional fields that we don't want to add to the fiber.
              // So this requires nested handlers.
              // Note: This doesn't mutate the alternate node. I don't think it needs to
              // since this stage is reset for every pass.
              workInProgress.tag = CallHandlerPhase;

              // Build up the returns.
              // TODO: Compare this to a generator or opaque helpers like Children.
              var returns = [];
              appendAllReturns(returns, workInProgress);
              var fn = call.handler;
              var props = call.props;
              var nextChildren = fn(props, returns);

              var currentFirstChild = current !== null ? current.child : null;
              workInProgress.child = reconcileChildFibers(
                workInProgress,
                currentFirstChild,
                nextChildren,
                renderExpirationTime
              );
              return workInProgress.child;
            }

            function appendAllChildren(parent, workInProgress) {
              // We only have the top Fiber that was created but we need recurse down its
              // children to find all the terminal nodes.
              var node = workInProgress.child;
              while (node !== null) {
                if (node.tag === HostComponent || node.tag === HostText) {
                  appendInitialChild(parent, node.stateNode);
                } else if (node.tag === HostPortal) {
                  // If we have a portal child, then we don't want to traverse
                  // down its children. Instead, we'll get insertions from each child in
                  // the portal directly.
                } else if (node.child !== null) {
                  node.child["return"] = node;
                  node = node.child;
                  continue;
                }
                if (node === workInProgress) {
                  return;
                }
                while (node.sibling === null) {
                  if (
                    node["return"] === null ||
                    node["return"] === workInProgress
                  ) {
                    return;
                  }
                  node = node["return"];
                }
                node.sibling["return"] = node["return"];
                node = node.sibling;
              }
            }

            var updateHostContainer = void 0;
            var updateHostComponent = void 0;
            var updateHostText = void 0;
            if (mutation) {
              if (enableMutatingReconciler) {
                // Mutation mode
                updateHostContainer = function(workInProgress) {
                  // Noop
                };
                updateHostComponent = function(
                  current,
                  workInProgress,
                  updatePayload,
                  type,
                  oldProps,
                  newProps,
                  rootContainerInstance
                ) {
                  // TODO: Type this specific to this type of component.
                  workInProgress.updateQueue = updatePayload;
                  // If the update payload indicates that there is a change or if there
                  // is a new ref we mark this as an update. All the work is done in commitWork.
                  if (updatePayload) {
                    markUpdate(workInProgress);
                  }
                };
                updateHostText = function(
                  current,
                  workInProgress,
                  oldText,
                  newText
                ) {
                  // If the text differs, mark it as an update. All the work in done in commitWork.
                  if (oldText !== newText) {
                    markUpdate(workInProgress);
                  }
                };
              } else {
                invariant(false, "Mutating reconciler is disabled.");
              }
            } else if (persistence) {
              if (enablePersistentReconciler) {
                // Persistent host tree mode
                var cloneInstance = persistence.cloneInstance,
                  createContainerChildSet = persistence.createContainerChildSet,
                  appendChildToContainerChildSet =
                    persistence.appendChildToContainerChildSet,
                  finalizeContainerChildren =
                    persistence.finalizeContainerChildren;

                // An unfortunate fork of appendAllChildren because we have two different parent types.

                var appendAllChildrenToContainer = function(
                  containerChildSet,
                  workInProgress
                ) {
                  // We only have the top Fiber that was created but we need recurse down its
                  // children to find all the terminal nodes.
                  var node = workInProgress.child;
                  while (node !== null) {
                    if (node.tag === HostComponent || node.tag === HostText) {
                      appendChildToContainerChildSet(
                        containerChildSet,
                        node.stateNode
                      );
                    } else if (node.tag === HostPortal) {
                      // If we have a portal child, then we don't want to traverse
                      // down its children. Instead, we'll get insertions from each child in
                      // the portal directly.
                    } else if (node.child !== null) {
                      node.child["return"] = node;
                      node = node.child;
                      continue;
                    }
                    if (node === workInProgress) {
                      return;
                    }
                    while (node.sibling === null) {
                      if (
                        node["return"] === null ||
                        node["return"] === workInProgress
                      ) {
                        return;
                      }
                      node = node["return"];
                    }
                    node.sibling["return"] = node["return"];
                    node = node.sibling;
                  }
                };
                updateHostContainer = function(workInProgress) {
                  var portalOrRoot = workInProgress.stateNode;
                  var childrenUnchanged = workInProgress.firstEffect === null;
                  if (childrenUnchanged) {
                    // No changes, just reuse the existing instance.
                  } else {
                    var container = portalOrRoot.containerInfo;
                    var newChildSet = createContainerChildSet(container);
                    if (finalizeContainerChildren(container, newChildSet)) {
                      markUpdate(workInProgress);
                    }
                    portalOrRoot.pendingChildren = newChildSet;
                    // If children might have changed, we have to add them all to the set.
                    appendAllChildrenToContainer(newChildSet, workInProgress);
                    // Schedule an update on the container to swap out the container.
                    markUpdate(workInProgress);
                  }
                };
                updateHostComponent = function(
                  current,
                  workInProgress,
                  updatePayload,
                  type,
                  oldProps,
                  newProps,
                  rootContainerInstance
                ) {
                  // If there are no effects associated with this node, then none of our children had any updates.
                  // This guarantees that we can reuse all of them.
                  var childrenUnchanged = workInProgress.firstEffect === null;
                  var currentInstance = current.stateNode;
                  if (childrenUnchanged && updatePayload === null) {
                    // No changes, just reuse the existing instance.
                    // Note that this might release a previous clone.
                    workInProgress.stateNode = currentInstance;
                  } else {
                    var recyclableInstance = workInProgress.stateNode;
                    var newInstance = cloneInstance(
                      currentInstance,
                      updatePayload,
                      type,
                      oldProps,
                      newProps,
                      workInProgress,
                      childrenUnchanged,
                      recyclableInstance
                    );
                    if (
                      finalizeInitialChildren(
                        newInstance,
                        type,
                        newProps,
                        rootContainerInstance
                      )
                    ) {
                      markUpdate(workInProgress);
                    }
                    workInProgress.stateNode = newInstance;
                    if (childrenUnchanged) {
                      // If there are no other effects in this tree, we need to flag this node as having one.
                      // Even though we're not going to use it for anything.
                      // Otherwise parents won't know that there are new children to propagate upwards.
                      markUpdate(workInProgress);
                    } else {
                      // If children might have changed, we have to add them all to the set.
                      appendAllChildren(newInstance, workInProgress);
                    }
                  }
                };
                updateHostText = function(
                  current,
                  workInProgress,
                  oldText,
                  newText
                ) {
                  if (oldText !== newText) {
                    // If the text content differs, we'll create a new text instance for it.
                    var rootContainerInstance = getRootHostContainer();
                    var currentHostContext = getHostContext();
                    workInProgress.stateNode = createTextInstance(
                      newText,
                      rootContainerInstance,
                      currentHostContext,
                      workInProgress
                    );
                    // We'll have to mark it as having an effect, even though we won't use the effect for anything.
                    // This lets the parents know that at least one of their children has changed.
                    markUpdate(workInProgress);
                  }
                };
              } else {
                invariant(false, "Persistent reconciler is disabled.");
              }
            } else {
              if (enableNoopReconciler) {
                // No host operations
                updateHostContainer = function(workInProgress) {
                  // Noop
                };
                updateHostComponent = function(
                  current,
                  workInProgress,
                  updatePayload,
                  type,
                  oldProps,
                  newProps,
                  rootContainerInstance
                ) {
                  // Noop
                };
                updateHostText = function(
                  current,
                  workInProgress,
                  oldText,
                  newText
                ) {
                  // Noop
                };
              } else {
                invariant(false, "Noop reconciler is disabled.");
              }
            }

            function completeWork(
              current,
              workInProgress,
              renderExpirationTime
            ) {
              // Get the latest props.
              var newProps = workInProgress.pendingProps;
              if (newProps === null) {
                newProps = workInProgress.memoizedProps;
              } else if (
                workInProgress.expirationTime !== Never ||
                renderExpirationTime === Never
              ) {
                // Reset the pending props, unless this was a down-prioritization.
                workInProgress.pendingProps = null;
              }

              switch (workInProgress.tag) {
                case FunctionalComponent:
                  return null;
                case ClassComponent: {
                  // We are leaving this subtree, so pop context if any.
                  popContextProvider(workInProgress);
                  return null;
                }
                case HostRoot: {
                  popHostContainer(workInProgress);
                  popTopLevelContextObject(workInProgress);
                  var fiberRoot = workInProgress.stateNode;
                  if (fiberRoot.pendingContext) {
                    fiberRoot.context = fiberRoot.pendingContext;
                    fiberRoot.pendingContext = null;
                  }

                  if (current === null || current.child === null) {
                    // If we hydrated, pop so that we can delete any remaining children
                    // that weren't hydrated.
                    popHydrationState(workInProgress);
                    // This resets the hacky state to fix isMounted before committing.
                    // TODO: Delete this when we delete isMounted and findDOMNode.
                    workInProgress.effectTag &= ~Placement;
                  }
                  updateHostContainer(workInProgress);
                  return null;
                }
                case HostComponent: {
                  popHostContext(workInProgress);
                  var rootContainerInstance = getRootHostContainer();
                  var type = workInProgress.type;
                  if (current !== null && workInProgress.stateNode != null) {
                    // If we have an alternate, that means this is an update and we need to
                    // schedule a side-effect to do the updates.
                    var oldProps = current.memoizedProps;
                    // If we get updated because one of our children updated, we don't
                    // have newProps so we'll have to reuse them.
                    // TODO: Split the update API as separate for the props vs. children.
                    // Even better would be if children weren't special cased at all tho.
                    var instance = workInProgress.stateNode;
                    var currentHostContext = getHostContext();
                    var updatePayload = prepareUpdate(
                      instance,
                      type,
                      oldProps,
                      newProps,
                      rootContainerInstance,
                      currentHostContext
                    );

                    updateHostComponent(
                      current,
                      workInProgress,
                      updatePayload,
                      type,
                      oldProps,
                      newProps,
                      rootContainerInstance
                    );

                    if (current.ref !== workInProgress.ref) {
                      markRef(workInProgress);
                    }
                  } else {
                    if (!newProps) {
                      !(workInProgress.stateNode !== null)
                        ? invariant(
                            false,
                            "We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."
                          )
                        : void 0;
                      // This can happen when we abort work.
                      return null;
                    }

                    var _currentHostContext = getHostContext();
                    // TODO: Move createInstance to beginWork and keep it on a context
                    // "stack" as the parent. Then append children as we go in beginWork
                    // or completeWork depending on we want to add then top->down or
                    // bottom->up. Top->down is faster in IE11.
                    var wasHydrated = popHydrationState(workInProgress);
                    if (wasHydrated) {
                      // TODO: Move this and createInstance step into the beginPhase
                      // to consolidate.
                      if (
                        prepareToHydrateHostInstance(
                          workInProgress,
                          rootContainerInstance,
                          _currentHostContext
                        )
                      ) {
                        // If changes to the hydrated node needs to be applied at the
                        // commit-phase we mark this as such.
                        markUpdate(workInProgress);
                      }
                    } else {
                      var _instance = createInstance(
                        type,
                        newProps,
                        rootContainerInstance,
                        _currentHostContext,
                        workInProgress
                      );

                      appendAllChildren(_instance, workInProgress);

                      // Certain renderers require commit-time effects for initial mount.
                      // (eg DOM renderer supports auto-focus for certain elements).
                      // Make sure such renderers get scheduled for later work.
                      if (
                        finalizeInitialChildren(
                          _instance,
                          type,
                          newProps,
                          rootContainerInstance
                        )
                      ) {
                        markUpdate(workInProgress);
                      }
                      workInProgress.stateNode = _instance;
                    }

                    if (workInProgress.ref !== null) {
                      // If there is a ref on a host node we need to schedule a callback
                      markRef(workInProgress);
                    }
                  }
                  return null;
                }
                case HostText: {
                  var newText = newProps;
                  if (current && workInProgress.stateNode != null) {
                    var oldText = current.memoizedProps;
                    // If we have an alternate, that means this is an update and we need
                    // to schedule a side-effect to do the updates.
                    updateHostText(current, workInProgress, oldText, newText);
                  } else {
                    if (typeof newText !== "string") {
                      !(workInProgress.stateNode !== null)
                        ? invariant(
                            false,
                            "We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."
                          )
                        : void 0;
                      // This can happen when we abort work.
                      return null;
                    }
                    var _rootContainerInstance = getRootHostContainer();
                    var _currentHostContext2 = getHostContext();
                    var _wasHydrated = popHydrationState(workInProgress);
                    if (_wasHydrated) {
                      if (prepareToHydrateHostTextInstance(workInProgress)) {
                        markUpdate(workInProgress);
                      }
                    } else {
                      workInProgress.stateNode = createTextInstance(
                        newText,
                        _rootContainerInstance,
                        _currentHostContext2,
                        workInProgress
                      );
                    }
                  }
                  return null;
                }
                case CallComponent:
                  return moveCallToHandlerPhase(
                    current,
                    workInProgress,
                    renderExpirationTime
                  );
                case CallHandlerPhase:
                  // Reset the tag to now be a first phase call.
                  workInProgress.tag = CallComponent;
                  return null;
                case ReturnComponent:
                  // Does nothing.
                  return null;
                case Fragment:
                  return null;
                case HostPortal:
                  popHostContainer(workInProgress);
                  updateHostContainer(workInProgress);
                  return null;
                // Error cases
                case IndeterminateComponent:
                  invariant(
                    false,
                    "An indeterminate component should have become determinate before completing. This error is likely caused by a bug in React. Please file an issue."
                  );
                // eslint-disable-next-line no-fallthrough
                default:
                  invariant(
                    false,
                    "Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."
                  );
              }
            }

            return {
              completeWork: completeWork
            };
          };

          var invokeGuardedCallback$2 = ReactErrorUtils.invokeGuardedCallback;
          var hasCaughtError$1 = ReactErrorUtils.hasCaughtError;
          var clearCaughtError$1 = ReactErrorUtils.clearCaughtError;

          var ReactFiberCommitWork = function(config, captureError) {
            var getPublicInstance = config.getPublicInstance,
              mutation = config.mutation,
              persistence = config.persistence;

            var callComponentWillUnmountWithTimer = function(
              current,
              instance
            ) {
              startPhaseTimer(current, "componentWillUnmount");
              instance.props = current.memoizedProps;
              instance.state = current.memoizedState;
              instance.componentWillUnmount();
              stopPhaseTimer();
            };

            // Capture errors so they don't interrupt unmounting.
            function safelyCallComponentWillUnmount(current, instance) {
              {
                invokeGuardedCallback$2(
                  null,
                  callComponentWillUnmountWithTimer,
                  null,
                  current,
                  instance
                );
                if (hasCaughtError$1()) {
                  var unmountError = clearCaughtError$1();
                  captureError(current, unmountError);
                }
              }
            }

            function safelyDetachRef(current) {
              var ref = current.ref;
              if (ref !== null) {
                {
                  invokeGuardedCallback$2(null, ref, null, null);
                  if (hasCaughtError$1()) {
                    var refError = clearCaughtError$1();
                    captureError(current, refError);
                  }
                }
              }
            }

            function commitLifeCycles(current, finishedWork) {
              switch (finishedWork.tag) {
                case ClassComponent: {
                  var instance = finishedWork.stateNode;
                  if (finishedWork.effectTag & Update) {
                    if (current === null) {
                      startPhaseTimer(finishedWork, "componentDidMount");
                      instance.props = finishedWork.memoizedProps;
                      instance.state = finishedWork.memoizedState;
                      instance.componentDidMount();
                      stopPhaseTimer();
                    } else {
                      var prevProps = current.memoizedProps;
                      var prevState = current.memoizedState;
                      startPhaseTimer(finishedWork, "componentDidUpdate");
                      instance.props = finishedWork.memoizedProps;
                      instance.state = finishedWork.memoizedState;
                      instance.componentDidUpdate(prevProps, prevState);
                      stopPhaseTimer();
                    }
                  }
                  var updateQueue = finishedWork.updateQueue;
                  if (updateQueue !== null) {
                    commitCallbacks(updateQueue, instance);
                  }
                  return;
                }
                case HostRoot: {
                  var _updateQueue = finishedWork.updateQueue;
                  if (_updateQueue !== null) {
                    var _instance =
                      finishedWork.child !== null
                        ? finishedWork.child.stateNode
                        : null;
                    commitCallbacks(_updateQueue, _instance);
                  }
                  return;
                }
                case HostComponent: {
                  var _instance2 = finishedWork.stateNode;

                  // Renderers may schedule work to be done after host components are mounted
                  // (eg DOM renderer may schedule auto-focus for inputs and form controls).
                  // These effects should only be committed when components are first mounted,
                  // aka when there is no current/alternate.
                  if (current === null && finishedWork.effectTag & Update) {
                    var type = finishedWork.type;
                    var props = finishedWork.memoizedProps;
                    commitMount(_instance2, type, props, finishedWork);
                  }

                  return;
                }
                case HostText: {
                  // We have no life-cycles associated with text.
                  return;
                }
                case HostPortal: {
                  // We have no life-cycles associated with portals.
                  return;
                }
                default: {
                  invariant(
                    false,
                    "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."
                  );
                }
              }
            }

            function commitAttachRef(finishedWork) {
              var ref = finishedWork.ref;
              if (ref !== null) {
                var instance = finishedWork.stateNode;
                switch (finishedWork.tag) {
                  case HostComponent:
                    ref(getPublicInstance(instance));
                    break;
                  default:
                    ref(instance);
                }
              }
            }

            function commitDetachRef(current) {
              var currentRef = current.ref;
              if (currentRef !== null) {
                currentRef(null);
              }
            }

            // User-originating errors (lifecycles and refs) should not interrupt
            // deletion, so don't let them throw. Host-originating errors should
            // interrupt deletion, so it's okay
            function commitUnmount(current) {
              if (typeof onCommitUnmount === "function") {
                onCommitUnmount(current);
              }

              switch (current.tag) {
                case ClassComponent: {
                  safelyDetachRef(current);
                  var instance = current.stateNode;
                  if (typeof instance.componentWillUnmount === "function") {
                    safelyCallComponentWillUnmount(current, instance);
                  }
                  return;
                }
                case HostComponent: {
                  safelyDetachRef(current);
                  return;
                }
                case CallComponent: {
                  commitNestedUnmounts(current.stateNode);
                  return;
                }
                case HostPortal: {
                  // TODO: this is recursive.
                  // We are also not using this parent because
                  // the portal will get pushed immediately.
                  if (enableMutatingReconciler && mutation) {
                    unmountHostComponents(current);
                  } else if (enablePersistentReconciler && persistence) {
                    emptyPortalContainer(current);
                  }
                  return;
                }
              }
            }

            function commitNestedUnmounts(root) {
              // While we're inside a removed host node we don't want to call
              // removeChild on the inner nodes because they're removed by the top
              // call anyway. We also want to call componentWillUnmount on all
              // composites before this host node is removed from the tree. Therefore
              var node = root;
              while (true) {
                commitUnmount(node);
                // Visit children because they may contain more composite or host nodes.
                // Skip portals because commitUnmount() currently visits them recursively.
                if (
                  node.child !== null &&
                  // If we use mutation we drill down into portals using commitUnmount above.
                  // If we don't use mutation we drill down into portals here instead.
                  (!mutation || node.tag !== HostPortal)
                ) {
                  node.child["return"] = node;
                  node = node.child;
                  continue;
                }
                if (node === root) {
                  return;
                }
                while (node.sibling === null) {
                  if (node["return"] === null || node["return"] === root) {
                    return;
                  }
                  node = node["return"];
                }
                node.sibling["return"] = node["return"];
                node = node.sibling;
              }
            }

            function detachFiber(current) {
              // Cut off the return pointers to disconnect it from the tree. Ideally, we
              // should clear the child pointer of the parent alternate to let this
              // get GC:ed but we don't know which for sure which parent is the current
              // one so we'll settle for GC:ing the subtree of this child. This child
              // itself will be GC:ed when the parent updates the next time.
              current["return"] = null;
              current.child = null;
              if (current.alternate) {
                current.alternate.child = null;
                current.alternate["return"] = null;
              }
            }

            if (!mutation) {
              var commitContainer = void 0;
              if (persistence) {
                var replaceContainerChildren =
                    persistence.replaceContainerChildren,
                  createContainerChildSet = persistence.createContainerChildSet;

                var emptyPortalContainer = function(current) {
                  var portal = current.stateNode;
                  var containerInfo = portal.containerInfo;

                  var emptyChildSet = createContainerChildSet(containerInfo);
                  replaceContainerChildren(containerInfo, emptyChildSet);
                };
                commitContainer = function(finishedWork) {
                  switch (finishedWork.tag) {
                    case ClassComponent: {
                      return;
                    }
                    case HostComponent: {
                      return;
                    }
                    case HostText: {
                      return;
                    }
                    case HostRoot:
                    case HostPortal: {
                      var portalOrRoot = finishedWork.stateNode;
                      var containerInfo = portalOrRoot.containerInfo,
                        _pendingChildren = portalOrRoot.pendingChildren;

                      replaceContainerChildren(containerInfo, _pendingChildren);
                      return;
                    }
                    default: {
                      invariant(
                        false,
                        "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."
                      );
                    }
                  }
                };
              } else {
                commitContainer = function(finishedWork) {
                  // Noop
                };
              }
              if (enablePersistentReconciler || enableNoopReconciler) {
                return {
                  commitResetTextContent: function(finishedWork) {},
                  commitPlacement: function(finishedWork) {},
                  commitDeletion: function(current) {
                    // Detach refs and call componentWillUnmount() on the whole subtree.
                    commitNestedUnmounts(current);
                    detachFiber(current);
                  },
                  commitWork: function(current, finishedWork) {
                    commitContainer(finishedWork);
                  },

                  commitLifeCycles: commitLifeCycles,
                  commitAttachRef: commitAttachRef,
                  commitDetachRef: commitDetachRef
                };
              } else if (persistence) {
                invariant(false, "Persistent reconciler is disabled.");
              } else {
                invariant(false, "Noop reconciler is disabled.");
              }
            }
            var commitMount = mutation.commitMount,
              commitUpdate = mutation.commitUpdate,
              resetTextContent = mutation.resetTextContent,
              commitTextUpdate = mutation.commitTextUpdate,
              appendChild = mutation.appendChild,
              appendChildToContainer = mutation.appendChildToContainer,
              insertBefore = mutation.insertBefore,
              insertInContainerBefore = mutation.insertInContainerBefore,
              removeChild = mutation.removeChild,
              removeChildFromContainer = mutation.removeChildFromContainer;

            function getHostParentFiber(fiber) {
              var parent = fiber["return"];
              while (parent !== null) {
                if (isHostParent(parent)) {
                  return parent;
                }
                parent = parent["return"];
              }
              invariant(
                false,
                "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."
              );
            }

            function isHostParent(fiber) {
              return (
                fiber.tag === HostComponent ||
                fiber.tag === HostRoot ||
                fiber.tag === HostPortal
              );
            }

            function getHostSibling(fiber) {
              // We're going to search forward into the tree until we find a sibling host
              // node. Unfortunately, if multiple insertions are done in a row we have to
              // search past them. This leads to exponential search for the next sibling.
              var node = fiber;
              siblings: while (true) {
                // If we didn't find anything, let's try the next sibling.
                while (node.sibling === null) {
                  if (node["return"] === null || isHostParent(node["return"])) {
                    // If we pop out of the root or hit the parent the fiber we are the
                    // last sibling.
                    return null;
                  }
                  node = node["return"];
                }
                node.sibling["return"] = node["return"];
                node = node.sibling;
                while (node.tag !== HostComponent && node.tag !== HostText) {
                  // If it is not host node and, we might have a host node inside it.
                  // Try to search down until we find one.
                  if (node.effectTag & Placement) {
                    // If we don't have a child, try the siblings instead.
                    continue siblings;
                  }
                  // If we don't have a child, try the siblings instead.
                  // We also skip portals because they are not part of this host tree.
                  if (node.child === null || node.tag === HostPortal) {
                    continue siblings;
                  } else {
                    node.child["return"] = node;
                    node = node.child;
                  }
                }
                // Check if this host node is stable or about to be placed.
                if (!(node.effectTag & Placement)) {
                  // Found it!
                  return node.stateNode;
                }
              }
            }

            function commitPlacement(finishedWork) {
              // Recursively insert all host nodes into the parent.
              var parentFiber = getHostParentFiber(finishedWork);
              var parent = void 0;
              var isContainer = void 0;
              switch (parentFiber.tag) {
                case HostComponent:
                  parent = parentFiber.stateNode;
                  isContainer = false;
                  break;
                case HostRoot:
                  parent = parentFiber.stateNode.containerInfo;
                  isContainer = true;
                  break;
                case HostPortal:
                  parent = parentFiber.stateNode.containerInfo;
                  isContainer = true;
                  break;
                default:
                  invariant(
                    false,
                    "Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."
                  );
              }
              if (parentFiber.effectTag & ContentReset) {
                // Reset the text content of the parent before doing any insertions
                resetTextContent(parent);
                // Clear ContentReset from the effect tag
                parentFiber.effectTag &= ~ContentReset;
              }

              var before = getHostSibling(finishedWork);
              // We only have the top Fiber that was inserted but we need recurse down its
              // children to find all the terminal nodes.
              var node = finishedWork;
              while (true) {
                if (node.tag === HostComponent || node.tag === HostText) {
                  if (before) {
                    if (isContainer) {
                      insertInContainerBefore(parent, node.stateNode, before);
                    } else {
                      insertBefore(parent, node.stateNode, before);
                    }
                  } else {
                    if (isContainer) {
                      appendChildToContainer(parent, node.stateNode);
                    } else {
                      appendChild(parent, node.stateNode);
                    }
                  }
                } else if (node.tag === HostPortal) {
                  // If the insertion itself is a portal, then we don't want to traverse
                  // down its children. Instead, we'll get insertions from each child in
                  // the portal directly.
                } else if (node.child !== null) {
                  node.child["return"] = node;
                  node = node.child;
                  continue;
                }
                if (node === finishedWork) {
                  return;
                }
                while (node.sibling === null) {
                  if (
                    node["return"] === null ||
                    node["return"] === finishedWork
                  ) {
                    return;
                  }
                  node = node["return"];
                }
                node.sibling["return"] = node["return"];
                node = node.sibling;
              }
            }

            function unmountHostComponents(current) {
              // We only have the top Fiber that was inserted but we need recurse down its
              var node = current;

              // Each iteration, currentParent is populated with node's host parent if not
              // currentParentIsValid.
              var currentParentIsValid = false;
              var currentParent = void 0;
              var currentParentIsContainer = void 0;

              while (true) {
                if (!currentParentIsValid) {
                  var parent = node["return"];
                  findParent: while (true) {
                    !(parent !== null)
                      ? invariant(
                          false,
                          "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."
                        )
                      : void 0;
                    switch (parent.tag) {
                      case HostComponent:
                        currentParent = parent.stateNode;
                        currentParentIsContainer = false;
                        break findParent;
                      case HostRoot:
                        currentParent = parent.stateNode.containerInfo;
                        currentParentIsContainer = true;
                        break findParent;
                      case HostPortal:
                        currentParent = parent.stateNode.containerInfo;
                        currentParentIsContainer = true;
                        break findParent;
                    }
                    parent = parent["return"];
                  }
                  currentParentIsValid = true;
                }

                if (node.tag === HostComponent || node.tag === HostText) {
                  commitNestedUnmounts(node);
                  // After all the children have unmounted, it is now safe to remove the
                  // node from the tree.
                  if (currentParentIsContainer) {
                    removeChildFromContainer(currentParent, node.stateNode);
                  } else {
                    removeChild(currentParent, node.stateNode);
                  }
                  // Don't visit children because we already visited them.
                } else if (node.tag === HostPortal) {
                  // When we go into a portal, it becomes the parent to remove from.
                  // We will reassign it back when we pop the portal on the way up.
                  currentParent = node.stateNode.containerInfo;
                  // Visit children because portals might contain host components.
                  if (node.child !== null) {
                    node.child["return"] = node;
                    node = node.child;
                    continue;
                  }
                } else {
                  commitUnmount(node);
                  // Visit children because we may find more host components below.
                  if (node.child !== null) {
                    node.child["return"] = node;
                    node = node.child;
                    continue;
                  }
                }
                if (node === current) {
                  return;
                }
                while (node.sibling === null) {
                  if (node["return"] === null || node["return"] === current) {
                    return;
                  }
                  node = node["return"];
                  if (node.tag === HostPortal) {
                    // When we go out of the portal, we need to restore the parent.
                    // Since we don't keep a stack of them, we will search for it.
                    currentParentIsValid = false;
                  }
                }
                node.sibling["return"] = node["return"];
                node = node.sibling;
              }
            }

            function commitDeletion(current) {
              // Recursively delete all host nodes from the parent.
              // Detach refs and call componentWillUnmount() on the whole subtree.
              unmountHostComponents(current);
              detachFiber(current);
            }

            function commitWork(current, finishedWork) {
              switch (finishedWork.tag) {
                case ClassComponent: {
                  return;
                }
                case HostComponent: {
                  var instance = finishedWork.stateNode;
                  if (instance != null) {
                    // Commit the work prepared earlier.
                    var newProps = finishedWork.memoizedProps;
                    // For hydration we reuse the update path but we treat the oldProps
                    // as the newProps. The updatePayload will contain the real change in
                    // this case.
                    var oldProps =
                      current !== null ? current.memoizedProps : newProps;
                    var type = finishedWork.type;
                    // TODO: Type the updateQueue to be specific to host components.
                    var updatePayload = finishedWork.updateQueue;
                    finishedWork.updateQueue = null;
                    if (updatePayload !== null) {
                      commitUpdate(
                        instance,
                        updatePayload,
                        type,
                        oldProps,
                        newProps,
                        finishedWork
                      );
                    }
                  }
                  return;
                }
                case HostText: {
                  !(finishedWork.stateNode !== null)
                    ? invariant(
                        false,
                        "This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."
                      )
                    : void 0;
                  var textInstance = finishedWork.stateNode;
                  var newText = finishedWork.memoizedProps;
                  // For hydration we reuse the update path but we treat the oldProps
                  // as the newProps. The updatePayload will contain the real change in
                  // this case.
                  var oldText =
                    current !== null ? current.memoizedProps : newText;
                  commitTextUpdate(textInstance, oldText, newText);
                  return;
                }
                case HostRoot: {
                  return;
                }
                default: {
                  invariant(
                    false,
                    "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."
                  );
                }
              }
            }

            function commitResetTextContent(current) {
              resetTextContent(current.stateNode);
            }

            if (enableMutatingReconciler) {
              return {
                commitResetTextContent: commitResetTextContent,
                commitPlacement: commitPlacement,
                commitDeletion: commitDeletion,
                commitWork: commitWork,
                commitLifeCycles: commitLifeCycles,
                commitAttachRef: commitAttachRef,
                commitDetachRef: commitDetachRef
              };
            } else {
              invariant(false, "Mutating reconciler is disabled.");
            }
          };

          var NO_CONTEXT = {};

          var ReactFiberHostContext = function(config) {
            var getChildHostContext = config.getChildHostContext,
              getRootHostContext = config.getRootHostContext;

            var contextStackCursor = createCursor(NO_CONTEXT);
            var contextFiberStackCursor = createCursor(NO_CONTEXT);
            var rootInstanceStackCursor = createCursor(NO_CONTEXT);

            function requiredContext(c) {
              !(c !== NO_CONTEXT)
                ? invariant(
                    false,
                    "Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;
              return c;
            }

            function getRootHostContainer() {
              var rootInstance = requiredContext(
                rootInstanceStackCursor.current
              );
              return rootInstance;
            }

            function pushHostContainer(fiber, nextRootInstance) {
              // Push current root instance onto the stack;
              // This allows us to reset root when portals are popped.
              push(rootInstanceStackCursor, nextRootInstance, fiber);

              var nextRootContext = getRootHostContext(nextRootInstance);

              // Track the context and the Fiber that provided it.
              // This enables us to pop only Fibers that provide unique contexts.
              push(contextFiberStackCursor, fiber, fiber);
              push(contextStackCursor, nextRootContext, fiber);
            }

            function popHostContainer(fiber) {
              pop(contextStackCursor, fiber);
              pop(contextFiberStackCursor, fiber);
              pop(rootInstanceStackCursor, fiber);
            }

            function getHostContext() {
              var context = requiredContext(contextStackCursor.current);
              return context;
            }

            function pushHostContext(fiber) {
              var rootInstance = requiredContext(
                rootInstanceStackCursor.current
              );
              var context = requiredContext(contextStackCursor.current);
              var nextContext = getChildHostContext(
                context,
                fiber.type,
                rootInstance
              );

              // Don't push this Fiber's context unless it's unique.
              if (context === nextContext) {
                return;
              }

              // Track the context and the Fiber that provided it.
              // This enables us to pop only Fibers that provide unique contexts.
              push(contextFiberStackCursor, fiber, fiber);
              push(contextStackCursor, nextContext, fiber);
            }

            function popHostContext(fiber) {
              // Do not pop unless this Fiber provided the current context.
              // pushHostContext() only pushes Fibers that provide unique contexts.
              if (contextFiberStackCursor.current !== fiber) {
                return;
              }

              pop(contextStackCursor, fiber);
              pop(contextFiberStackCursor, fiber);
            }

            function resetHostContainer() {
              contextStackCursor.current = NO_CONTEXT;
              rootInstanceStackCursor.current = NO_CONTEXT;
            }

            return {
              getHostContext: getHostContext,
              getRootHostContainer: getRootHostContainer,
              popHostContainer: popHostContainer,
              popHostContext: popHostContext,
              pushHostContainer: pushHostContainer,
              pushHostContext: pushHostContext,
              resetHostContainer: resetHostContainer
            };
          };

          var ReactFiberHydrationContext = function(config) {
            var shouldSetTextContent = config.shouldSetTextContent,
              hydration = config.hydration;

            // If this doesn't have hydration mode.

            if (!hydration) {
              return {
                enterHydrationState: function() {
                  return false;
                },
                resetHydrationState: function() {},
                tryToClaimNextHydratableInstance: function() {},
                prepareToHydrateHostInstance: function() {
                  invariant(
                    false,
                    "Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue."
                  );
                },
                prepareToHydrateHostTextInstance: function() {
                  invariant(
                    false,
                    "Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue."
                  );
                },
                popHydrationState: function(fiber) {
                  return false;
                }
              };
            }

            var canHydrateInstance = hydration.canHydrateInstance,
              canHydrateTextInstance = hydration.canHydrateTextInstance,
              getNextHydratableSibling = hydration.getNextHydratableSibling,
              getFirstHydratableChild = hydration.getFirstHydratableChild,
              hydrateInstance = hydration.hydrateInstance,
              hydrateTextInstance = hydration.hydrateTextInstance,
              didNotMatchHydratedContainerTextInstance =
                hydration.didNotMatchHydratedContainerTextInstance,
              didNotMatchHydratedTextInstance =
                hydration.didNotMatchHydratedTextInstance,
              didNotHydrateContainerInstance =
                hydration.didNotHydrateContainerInstance,
              didNotHydrateInstance = hydration.didNotHydrateInstance,
              didNotFindHydratableContainerInstance =
                hydration.didNotFindHydratableContainerInstance,
              didNotFindHydratableContainerTextInstance =
                hydration.didNotFindHydratableContainerTextInstance,
              didNotFindHydratableInstance =
                hydration.didNotFindHydratableInstance,
              didNotFindHydratableTextInstance =
                hydration.didNotFindHydratableTextInstance;

            // The deepest Fiber on the stack involved in a hydration context.
            // This may have been an insertion or a hydration.

            var hydrationParentFiber = null;
            var nextHydratableInstance = null;
            var isHydrating = false;

            function enterHydrationState(fiber) {
              var parentInstance = fiber.stateNode.containerInfo;
              nextHydratableInstance = getFirstHydratableChild(parentInstance);
              hydrationParentFiber = fiber;
              isHydrating = true;
              return true;
            }

            function deleteHydratableInstance(returnFiber, instance) {
              {
                switch (returnFiber.tag) {
                  case HostRoot:
                    didNotHydrateContainerInstance(
                      returnFiber.stateNode.containerInfo,
                      instance
                    );
                    break;
                  case HostComponent:
                    didNotHydrateInstance(
                      returnFiber.type,
                      returnFiber.memoizedProps,
                      returnFiber.stateNode,
                      instance
                    );
                    break;
                }
              }

              var childToDelete = createFiberFromHostInstanceForDeletion();
              childToDelete.stateNode = instance;
              childToDelete["return"] = returnFiber;
              childToDelete.effectTag = Deletion;

              // This might seem like it belongs on progressedFirstDeletion. However,
              // these children are not part of the reconciliation list of children.
              // Even if we abort and rereconcile the children, that will try to hydrate
              // again and the nodes are still in the host tree so these will be
              // recreated.
              if (returnFiber.lastEffect !== null) {
                returnFiber.lastEffect.nextEffect = childToDelete;
                returnFiber.lastEffect = childToDelete;
              } else {
                returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
              }
            }

            function insertNonHydratedInstance(returnFiber, fiber) {
              fiber.effectTag |= Placement;
              {
                switch (returnFiber.tag) {
                  case HostRoot: {
                    var parentContainer = returnFiber.stateNode.containerInfo;
                    switch (fiber.tag) {
                      case HostComponent:
                        var type = fiber.type;
                        var props = fiber.pendingProps;
                        didNotFindHydratableContainerInstance(
                          parentContainer,
                          type,
                          props
                        );
                        break;
                      case HostText:
                        var text = fiber.pendingProps;
                        didNotFindHydratableContainerTextInstance(
                          parentContainer,
                          text
                        );
                        break;
                    }
                    break;
                  }
                  case HostComponent: {
                    var parentType = returnFiber.type;
                    var parentProps = returnFiber.memoizedProps;
                    var parentInstance = returnFiber.stateNode;
                    switch (fiber.tag) {
                      case HostComponent:
                        var _type = fiber.type;
                        var _props = fiber.pendingProps;
                        didNotFindHydratableInstance(
                          parentType,
                          parentProps,
                          parentInstance,
                          _type,
                          _props
                        );
                        break;
                      case HostText:
                        var _text = fiber.pendingProps;
                        didNotFindHydratableTextInstance(
                          parentType,
                          parentProps,
                          parentInstance,
                          _text
                        );
                        break;
                    }
                    break;
                  }
                  default:
                    return;
                }
              }
            }

            function canHydrate(fiber, nextInstance) {
              switch (fiber.tag) {
                case HostComponent: {
                  var type = fiber.type;
                  var props = fiber.pendingProps;
                  return canHydrateInstance(nextInstance, type, props);
                }
                case HostText: {
                  var text = fiber.pendingProps;
                  return canHydrateTextInstance(nextInstance, text);
                }
                default:
                  return false;
              }
            }

            function tryToClaimNextHydratableInstance(fiber) {
              if (!isHydrating) {
                return;
              }
              var nextInstance = nextHydratableInstance;
              if (!nextInstance) {
                // Nothing to hydrate. Make it an insertion.
                insertNonHydratedInstance(hydrationParentFiber, fiber);
                isHydrating = false;
                hydrationParentFiber = fiber;
                return;
              }
              if (!canHydrate(fiber, nextInstance)) {
                // If we can't hydrate this instance let's try the next one.
                // We use this as a heuristic. It's based on intuition and not data so it
                // might be flawed or unnecessary.
                nextInstance = getNextHydratableSibling(nextInstance);
                if (!nextInstance || !canHydrate(fiber, nextInstance)) {
                  // Nothing to hydrate. Make it an insertion.
                  insertNonHydratedInstance(hydrationParentFiber, fiber);
                  isHydrating = false;
                  hydrationParentFiber = fiber;
                  return;
                }
                // We matched the next one, we'll now assume that the first one was
                // superfluous and we'll delete it. Since we can't eagerly delete it
                // we'll have to schedule a deletion. To do that, this node needs a dummy
                // fiber associated with it.
                deleteHydratableInstance(
                  hydrationParentFiber,
                  nextHydratableInstance
                );
              }
              fiber.stateNode = nextInstance;
              hydrationParentFiber = fiber;
              nextHydratableInstance = getFirstHydratableChild(nextInstance);
            }

            function prepareToHydrateHostInstance(
              fiber,
              rootContainerInstance,
              hostContext
            ) {
              var instance = fiber.stateNode;
              var updatePayload = hydrateInstance(
                instance,
                fiber.type,
                fiber.memoizedProps,
                rootContainerInstance,
                hostContext,
                fiber
              );
              // TODO: Type this specific to this type of component.
              fiber.updateQueue = updatePayload;
              // If the update payload indicates that there is a change or if there
              // is a new ref we mark this as an update.
              if (updatePayload !== null) {
                return true;
              }
              return false;
            }

            function prepareToHydrateHostTextInstance(fiber) {
              var textInstance = fiber.stateNode;
              var textContent = fiber.memoizedProps;
              var shouldUpdate = hydrateTextInstance(
                textInstance,
                textContent,
                fiber
              );
              {
                if (shouldUpdate) {
                  // We assume that prepareToHydrateHostTextInstance is called in a context where the
                  // hydration parent is the parent host component of this host text.
                  var returnFiber = hydrationParentFiber;
                  if (returnFiber !== null) {
                    switch (returnFiber.tag) {
                      case HostRoot: {
                        var parentContainer =
                          returnFiber.stateNode.containerInfo;
                        didNotMatchHydratedContainerTextInstance(
                          parentContainer,
                          textInstance,
                          textContent
                        );
                        break;
                      }
                      case HostComponent: {
                        var parentType = returnFiber.type;
                        var parentProps = returnFiber.memoizedProps;
                        var parentInstance = returnFiber.stateNode;
                        didNotMatchHydratedTextInstance(
                          parentType,
                          parentProps,
                          parentInstance,
                          textInstance,
                          textContent
                        );
                        break;
                      }
                    }
                  }
                }
              }
              return shouldUpdate;
            }

            function popToNextHostParent(fiber) {
              var parent = fiber["return"];
              while (
                parent !== null &&
                parent.tag !== HostComponent &&
                parent.tag !== HostRoot
              ) {
                parent = parent["return"];
              }
              hydrationParentFiber = parent;
            }

            function popHydrationState(fiber) {
              if (fiber !== hydrationParentFiber) {
                // We're deeper than the current hydration context, inside an inserted
                // tree.
                return false;
              }
              if (!isHydrating) {
                // If we're not currently hydrating but we're in a hydration context, then
                // we were an insertion and now need to pop up reenter hydration of our
                // siblings.
                popToNextHostParent(fiber);
                isHydrating = true;
                return false;
              }

              var type = fiber.type;

              // If we have any remaining hydratable nodes, we need to delete them now.
              // We only do this deeper than head and body since they tend to have random
              // other nodes in them. We also ignore components with pure text content in
              // side of them.
              // TODO: Better heuristic.
              if (
                fiber.tag !== HostComponent ||
                (type !== "head" &&
                  type !== "body" &&
                  !shouldSetTextContent(type, fiber.memoizedProps))
              ) {
                var nextInstance = nextHydratableInstance;
                while (nextInstance) {
                  deleteHydratableInstance(fiber, nextInstance);
                  nextInstance = getNextHydratableSibling(nextInstance);
                }
              }

              popToNextHostParent(fiber);
              nextHydratableInstance = hydrationParentFiber
                ? getNextHydratableSibling(fiber.stateNode)
                : null;
              return true;
            }

            function resetHydrationState() {
              hydrationParentFiber = null;
              nextHydratableInstance = null;
              isHydrating = false;
            }

            return {
              enterHydrationState: enterHydrationState,
              resetHydrationState: resetHydrationState,
              tryToClaimNextHydratableInstance: tryToClaimNextHydratableInstance,
              prepareToHydrateHostInstance: prepareToHydrateHostInstance,
              prepareToHydrateHostTextInstance: prepareToHydrateHostTextInstance,
              popHydrationState: popHydrationState
            };
          };

          // This lets us hook into Fiber to debug what it's doing.
          // See https://github.com/facebook/react/pull/8033.
          // This is not part of the public API, not even for React DevTools.
          // You may only inject a debugTool if you work on React Fiber itself.
          var ReactFiberInstrumentation = {
            debugTool: null
          };

          var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;

          var defaultShowDialog = function(capturedError) {
            return true;
          };

          var showDialog = defaultShowDialog;

          function logCapturedError(capturedError) {
            var logError = showDialog(capturedError);

            // Allow injected showDialog() to prevent default console.error logging.
            // This enables renderers like ReactNative to better manage redbox behavior.
            if (logError === false) {
              return;
            }

            {
              var componentName = capturedError.componentName,
                componentStack = capturedError.componentStack,
                errorBoundaryName = capturedError.errorBoundaryName,
                errorBoundaryFound = capturedError.errorBoundaryFound,
                willRetry = capturedError.willRetry;

              var componentNameMessage = componentName
                ? "The above error occurred in the <" +
                  componentName +
                  "> component:"
                : "The above error occurred in one of your React components:";

              var errorBoundaryMessage = void 0;
              // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.
              if (errorBoundaryFound && errorBoundaryName) {
                if (willRetry) {
                  errorBoundaryMessage =
                    "React will try to recreate this component tree from scratch " +
                    ("using the error boundary you provided, " +
                      errorBoundaryName +
                      ".");
                } else {
                  errorBoundaryMessage =
                    "This error was initially handled by the error boundary " +
                    errorBoundaryName +
                    ".\n" +
                    "Recreating the tree from scratch failed so React will unmount the tree.";
                }
              } else {
                errorBoundaryMessage =
                  "Consider adding an error boundary to your tree to customize error handling behavior.\n" +
                  "Visit https://fb.me/react-error-boundaries to learn more about error boundaries.";
              }
              var combinedMessage =
                "" +
                componentNameMessage +
                componentStack +
                "\n\n" +
                ("" + errorBoundaryMessage);

              // In development, we provide our own message with just the component stack.
              // We don't include the original error message and JS stack because the browser
              // has already printed it. Even if the application swallows the error, it is still
              // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
              console.error(combinedMessage);
            }
          }

          var invokeGuardedCallback$1 = ReactErrorUtils.invokeGuardedCallback;
          var hasCaughtError = ReactErrorUtils.hasCaughtError;
          var clearCaughtError = ReactErrorUtils.clearCaughtError;

          {
            var didWarnAboutStateTransition = false;
            var didWarnSetStateChildContext = false;
            var didWarnStateUpdateForUnmountedComponent = {};

            var warnAboutUpdateOnUnmounted = function(fiber) {
              var componentName = getComponentName(fiber) || "ReactClass";
              if (didWarnStateUpdateForUnmountedComponent[componentName]) {
                return;
              }
              warning(
                false,
                "Can only update a mounted or mounting " +
                  "component. This usually means you called setState, replaceState, " +
                  "or forceUpdate on an unmounted component. This is a no-op.\n\nPlease " +
                  "check the code for the %s component.",
                componentName
              );
              didWarnStateUpdateForUnmountedComponent[componentName] = true;
            };

            var warnAboutInvalidUpdates = function(instance) {
              switch (ReactDebugCurrentFiber.phase) {
                case "getChildContext":
                  if (didWarnSetStateChildContext) {
                    return;
                  }
                  warning(
                    false,
                    "setState(...): Cannot call setState() inside getChildContext()"
                  );
                  didWarnSetStateChildContext = true;
                  break;
                case "render":
                  if (didWarnAboutStateTransition) {
                    return;
                  }
                  warning(
                    false,
                    "Cannot update during an existing state transition (such as within " +
                      "`render` or another component's constructor). Render methods should " +
                      "be a pure function of props and state; constructor side-effects are " +
                      "an anti-pattern, but can be moved to `componentWillMount`."
                  );
                  didWarnAboutStateTransition = true;
                  break;
              }
            };
          }

          var ReactFiberScheduler = function(config) {
            var hostContext = ReactFiberHostContext(config);
            var hydrationContext = ReactFiberHydrationContext(config);
            var popHostContainer = hostContext.popHostContainer,
              popHostContext = hostContext.popHostContext,
              resetHostContainer = hostContext.resetHostContainer;

            var _ReactFiberBeginWork = ReactFiberBeginWork(
                config,
                hostContext,
                hydrationContext,
                scheduleWork,
                computeExpirationForFiber
              ),
              beginWork = _ReactFiberBeginWork.beginWork,
              beginFailedWork = _ReactFiberBeginWork.beginFailedWork;

            var _ReactFiberCompleteWo = ReactFiberCompleteWork(
                config,
                hostContext,
                hydrationContext
              ),
              completeWork = _ReactFiberCompleteWo.completeWork;

            var _ReactFiberCommitWork = ReactFiberCommitWork(
                config,
                captureError
              ),
              commitResetTextContent =
                _ReactFiberCommitWork.commitResetTextContent,
              commitPlacement = _ReactFiberCommitWork.commitPlacement,
              commitDeletion = _ReactFiberCommitWork.commitDeletion,
              commitWork = _ReactFiberCommitWork.commitWork,
              commitLifeCycles = _ReactFiberCommitWork.commitLifeCycles,
              commitAttachRef = _ReactFiberCommitWork.commitAttachRef,
              commitDetachRef = _ReactFiberCommitWork.commitDetachRef;

            var now = config.now,
              scheduleDeferredCallback = config.scheduleDeferredCallback,
              useSyncScheduling = config.useSyncScheduling,
              prepareForCommit = config.prepareForCommit,
              resetAfterCommit = config.resetAfterCommit;

            // Represents the current time in ms.

            var startTime = now();
            var mostRecentCurrentTime = msToExpirationTime(0);

            // Represents the expiration time that incoming updates should use. (If this
            // is NoWork, use the default strategy: async updates in async mode, sync
            // updates in sync mode.)
            var expirationContext = NoWork;

            var isWorking = false;

            // The next work in progress fiber that we're currently working on.
            var nextUnitOfWork = null;
            var nextRoot = null;
            // The time at which we're currently rendering work.
            var nextRenderExpirationTime = NoWork;

            // The next fiber with an effect that we're currently committing.
            var nextEffect = null;

            // Keep track of which fibers have captured an error that need to be handled.
            // Work is removed from this collection after componentDidCatch is called.
            var capturedErrors = null;
            // Keep track of which fibers have failed during the current batch of work.
            // This is a different set than capturedErrors, because it is not reset until
            // the end of the batch. This is needed to propagate errors correctly if a
            // subtree fails more than once.
            var failedBoundaries = null;
            // Error boundaries that captured an error during the current commit.
            var commitPhaseBoundaries = null;
            var firstUncaughtError = null;
            var didFatal = false;

            var isCommitting = false;
            var isUnmounting = false;

            // Used for performance tracking.
            var interruptedBy = null;

            function resetContextStack() {
              // Reset the stack
              reset$1();
              // Reset the cursors
              resetContext();
              resetHostContainer();
            }

            function commitAllHostEffects() {
              while (nextEffect !== null) {
                {
                  ReactDebugCurrentFiber.setCurrentFiber(nextEffect);
                }
                recordEffect();

                var effectTag = nextEffect.effectTag;
                if (effectTag & ContentReset) {
                  commitResetTextContent(nextEffect);
                }

                if (effectTag & Ref) {
                  var current = nextEffect.alternate;
                  if (current !== null) {
                    commitDetachRef(current);
                  }
                }

                // The following switch statement is only concerned about placement,
                // updates, and deletions. To avoid needing to add a case for every
                // possible bitmap value, we remove the secondary effects from the
                // effect tag and switch on that value.
                var primaryEffectTag =
                  effectTag &
                  ~(Callback | Err | ContentReset | Ref | PerformedWork);
                switch (primaryEffectTag) {
                  case Placement: {
                    commitPlacement(nextEffect);
                    // Clear the "placement" from effect tag so that we know that this is inserted, before
                    // any life-cycles like componentDidMount gets called.
                    // TODO: findDOMNode doesn't rely on this any more but isMounted
                    // does and isMounted is deprecated anyway so we should be able
                    // to kill this.
                    nextEffect.effectTag &= ~Placement;
                    break;
                  }
                  case PlacementAndUpdate: {
                    // Placement
                    commitPlacement(nextEffect);
                    // Clear the "placement" from effect tag so that we know that this is inserted, before
                    // any life-cycles like componentDidMount gets called.
                    nextEffect.effectTag &= ~Placement;

                    // Update
                    var _current = nextEffect.alternate;
                    commitWork(_current, nextEffect);
                    break;
                  }
                  case Update: {
                    var _current2 = nextEffect.alternate;
                    commitWork(_current2, nextEffect);
                    break;
                  }
                  case Deletion: {
                    isUnmounting = true;
                    commitDeletion(nextEffect);
                    isUnmounting = false;
                    break;
                  }
                }
                nextEffect = nextEffect.nextEffect;
              }

              {
                ReactDebugCurrentFiber.resetCurrentFiber();
              }
            }

            function commitAllLifeCycles() {
              while (nextEffect !== null) {
                var effectTag = nextEffect.effectTag;

                if (effectTag & (Update | Callback)) {
                  recordEffect();
                  var current = nextEffect.alternate;
                  commitLifeCycles(current, nextEffect);
                }

                if (effectTag & Ref) {
                  recordEffect();
                  commitAttachRef(nextEffect);
                }

                if (effectTag & Err) {
                  recordEffect();
                  commitErrorHandling(nextEffect);
                }

                var next = nextEffect.nextEffect;
                // Ensure that we clean these up so that we don't accidentally keep them.
                // I'm not actually sure this matters because we can't reset firstEffect
                // and lastEffect since they're on every node, not just the effectful
                // ones. So we have to clean everything as we reuse nodes anyway.
                nextEffect.nextEffect = null;
                // Ensure that we reset the effectTag here so that we can rely on effect
                // tags to reason about the current life-cycle.
                nextEffect = next;
              }
            }

            function commitRoot(finishedWork) {
              // We keep track of this so that captureError can collect any boundaries
              // that capture an error during the commit phase. The reason these aren't
              // local to this function is because errors that occur during cWU are
              // captured elsewhere, to prevent the unmount from being interrupted.
              isWorking = true;
              isCommitting = true;
              startCommitTimer();

              var root = finishedWork.stateNode;
              !(root.current !== finishedWork)
                ? invariant(
                    false,
                    "Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;
              root.isReadyForCommit = false;

              // Reset this to null before calling lifecycles
              ReactCurrentOwner.current = null;

              var firstEffect = void 0;
              if (finishedWork.effectTag > PerformedWork) {
                // A fiber's effect list consists only of its children, not itself. So if
                // the root has an effect, we need to add it to the end of the list. The
                // resulting list is the set that would belong to the root's parent, if
                // it had one; that is, all the effects in the tree including the root.
                if (finishedWork.lastEffect !== null) {
                  finishedWork.lastEffect.nextEffect = finishedWork;
                  firstEffect = finishedWork.firstEffect;
                } else {
                  firstEffect = finishedWork;
                }
              } else {
                // There is no effect on the root.
                firstEffect = finishedWork.firstEffect;
              }

              prepareForCommit();

              // Commit all the side-effects within a tree. We'll do this in two passes.
              // The first pass performs all the host insertions, updates, deletions and
              // ref unmounts.
              nextEffect = firstEffect;
              startCommitHostEffectsTimer();
              while (nextEffect !== null) {
                var didError = false;
                var _error = void 0;
                {
                  invokeGuardedCallback$1(null, commitAllHostEffects, null);
                  if (hasCaughtError()) {
                    didError = true;
                    _error = clearCaughtError();
                  }
                }
                if (didError) {
                  !(nextEffect !== null)
                    ? invariant(
                        false,
                        "Should have next effect. This error is likely caused by a bug in React. Please file an issue."
                      )
                    : void 0;
                  captureError(nextEffect, _error);
                  // Clean-up
                  if (nextEffect !== null) {
                    nextEffect = nextEffect.nextEffect;
                  }
                }
              }
              stopCommitHostEffectsTimer();

              resetAfterCommit();

              // The work-in-progress tree is now the current tree. This must come after
              // the first pass of the commit phase, so that the previous tree is still
              // current during componentWillUnmount, but before the second pass, so that
              // the finished work is current during componentDidMount/Update.
              root.current = finishedWork;

              // In the second pass we'll perform all life-cycles and ref callbacks.
              // Life-cycles happen as a separate pass so that all placements, updates,
              // and deletions in the entire tree have already been invoked.
              // This pass also triggers any renderer-specific initial effects.
              nextEffect = firstEffect;
              startCommitLifeCyclesTimer();
              while (nextEffect !== null) {
                var _didError = false;
                var _error2 = void 0;
                {
                  invokeGuardedCallback$1(null, commitAllLifeCycles, null);
                  if (hasCaughtError()) {
                    _didError = true;
                    _error2 = clearCaughtError();
                  }
                }
                if (_didError) {
                  !(nextEffect !== null)
                    ? invariant(
                        false,
                        "Should have next effect. This error is likely caused by a bug in React. Please file an issue."
                      )
                    : void 0;
                  captureError(nextEffect, _error2);
                  if (nextEffect !== null) {
                    nextEffect = nextEffect.nextEffect;
                  }
                }
              }

              isCommitting = false;
              isWorking = false;
              stopCommitLifeCyclesTimer();
              stopCommitTimer();
              if (typeof onCommitRoot === "function") {
                onCommitRoot(finishedWork.stateNode);
              }
              if (true && ReactFiberInstrumentation_1.debugTool) {
                ReactFiberInstrumentation_1.debugTool.onCommitWork(
                  finishedWork
                );
              }

              // If we caught any errors during this commit, schedule their boundaries
              // to update.
              if (commitPhaseBoundaries) {
                commitPhaseBoundaries.forEach(scheduleErrorRecovery);
                commitPhaseBoundaries = null;
              }

              if (firstUncaughtError !== null) {
                var _error3 = firstUncaughtError;
                firstUncaughtError = null;
                onUncaughtError(_error3);
              }

              var remainingTime = root.current.expirationTime;

              if (remainingTime === NoWork) {
                capturedErrors = null;
                failedBoundaries = null;
              }

              return remainingTime;
            }

            function resetExpirationTime(workInProgress, renderTime) {
              if (
                renderTime !== Never &&
                workInProgress.expirationTime === Never
              ) {
                // The children of this component are hidden. Don't bubble their
                // expiration times.
                return;
              }

              // Check for pending updates.
              var newExpirationTime = getUpdateExpirationTime(workInProgress);

              // TODO: Calls need to visit stateNode

              // Bubble up the earliest expiration time.
              var child = workInProgress.child;
              while (child !== null) {
                if (
                  child.expirationTime !== NoWork &&
                  (newExpirationTime === NoWork ||
                    newExpirationTime > child.expirationTime)
                ) {
                  newExpirationTime = child.expirationTime;
                }
                child = child.sibling;
              }
              workInProgress.expirationTime = newExpirationTime;
            }

            function completeUnitOfWork(workInProgress) {
              while (true) {
                // The current, flushed, state of this fiber is the alternate.
                // Ideally nothing should rely on this, but relying on it here
                // means that we don't need an additional field on the work in
                // progress.
                var current = workInProgress.alternate;
                {
                  ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
                }
                var next = completeWork(
                  current,
                  workInProgress,
                  nextRenderExpirationTime
                );
                {
                  ReactDebugCurrentFiber.resetCurrentFiber();
                }

                var returnFiber = workInProgress["return"];
                var siblingFiber = workInProgress.sibling;

                resetExpirationTime(workInProgress, nextRenderExpirationTime);

                if (next !== null) {
                  stopWorkTimer(workInProgress);
                  if (true && ReactFiberInstrumentation_1.debugTool) {
                    ReactFiberInstrumentation_1.debugTool.onCompleteWork(
                      workInProgress
                    );
                  }
                  // If completing this work spawned new work, do that next. We'll come
                  // back here again.
                  return next;
                }

                if (returnFiber !== null) {
                  // Append all the effects of the subtree and this fiber onto the effect
                  // list of the parent. The completion order of the children affects the
                  // side-effect order.
                  if (returnFiber.firstEffect === null) {
                    returnFiber.firstEffect = workInProgress.firstEffect;
                  }
                  if (workInProgress.lastEffect !== null) {
                    if (returnFiber.lastEffect !== null) {
                      returnFiber.lastEffect.nextEffect =
                        workInProgress.firstEffect;
                    }
                    returnFiber.lastEffect = workInProgress.lastEffect;
                  }

                  // If this fiber had side-effects, we append it AFTER the children's
                  // side-effects. We can perform certain side-effects earlier if
                  // needed, by doing multiple passes over the effect list. We don't want
                  // to schedule our own side-effect on our own list because if end up
                  // reusing children we'll schedule this effect onto itself since we're
                  // at the end.
                  var effectTag = workInProgress.effectTag;
                  // Skip both NoWork and PerformedWork tags when creating the effect list.
                  // PerformedWork effect is read by React DevTools but shouldn't be committed.
                  if (effectTag > PerformedWork) {
                    if (returnFiber.lastEffect !== null) {
                      returnFiber.lastEffect.nextEffect = workInProgress;
                    } else {
                      returnFiber.firstEffect = workInProgress;
                    }
                    returnFiber.lastEffect = workInProgress;
                  }
                }

                stopWorkTimer(workInProgress);
                if (true && ReactFiberInstrumentation_1.debugTool) {
                  ReactFiberInstrumentation_1.debugTool.onCompleteWork(
                    workInProgress
                  );
                }

                if (siblingFiber !== null) {
                  // If there is more work to do in this returnFiber, do that next.
                  return siblingFiber;
                } else if (returnFiber !== null) {
                  // If there's no more work in this returnFiber. Complete the returnFiber.
                  workInProgress = returnFiber;
                  continue;
                } else {
                  // We've reached the root.
                  var root = workInProgress.stateNode;
                  root.isReadyForCommit = true;
                  return null;
                }
              }

              // Without this explicit null return Flow complains of invalid return type
              // TODO Remove the above while(true) loop
              // eslint-disable-next-line no-unreachable
              return null;
            }

            function performUnitOfWork(workInProgress) {
              // The current, flushed, state of this fiber is the alternate.
              // Ideally nothing should rely on this, but relying on it here
              // means that we don't need an additional field on the work in
              // progress.
              var current = workInProgress.alternate;

              // See if beginning this work spawns more work.
              startWorkTimer(workInProgress);
              {
                ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
              }
              var next = beginWork(
                current,
                workInProgress,
                nextRenderExpirationTime
              );
              {
                ReactDebugCurrentFiber.resetCurrentFiber();
              }
              if (true && ReactFiberInstrumentation_1.debugTool) {
                ReactFiberInstrumentation_1.debugTool.onBeginWork(
                  workInProgress
                );
              }

              if (next === null) {
                // If this doesn't spawn new work, complete the current work.
                next = completeUnitOfWork(workInProgress);
              }

              ReactCurrentOwner.current = null;

              return next;
            }

            function performFailedUnitOfWork(workInProgress) {
              // The current, flushed, state of this fiber is the alternate.
              // Ideally nothing should rely on this, but relying on it here
              // means that we don't need an additional field on the work in
              // progress.
              var current = workInProgress.alternate;

              // See if beginning this work spawns more work.
              startWorkTimer(workInProgress);
              {
                ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
              }
              var next = beginFailedWork(
                current,
                workInProgress,
                nextRenderExpirationTime
              );
              {
                ReactDebugCurrentFiber.resetCurrentFiber();
              }
              if (true && ReactFiberInstrumentation_1.debugTool) {
                ReactFiberInstrumentation_1.debugTool.onBeginWork(
                  workInProgress
                );
              }

              if (next === null) {
                // If this doesn't spawn new work, complete the current work.
                next = completeUnitOfWork(workInProgress);
              }

              ReactCurrentOwner.current = null;

              return next;
            }

            function workLoop(expirationTime) {
              if (capturedErrors !== null) {
                // If there are unhandled errors, switch to the slow work loop.
                // TODO: How to avoid this check in the fast path? Maybe the renderer
                // could keep track of which roots have unhandled errors and call a
                // forked version of renderRoot.
                slowWorkLoopThatChecksForFailedWork(expirationTime);
                return;
              }
              if (
                nextRenderExpirationTime === NoWork ||
                nextRenderExpirationTime > expirationTime
              ) {
                return;
              }

              if (nextRenderExpirationTime <= mostRecentCurrentTime) {
                // Flush all expired work.
                while (nextUnitOfWork !== null) {
                  nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
                }
              } else {
                // Flush asynchronous work until the deadline runs out of time.
                while (nextUnitOfWork !== null && !shouldYield()) {
                  nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
                }
              }
            }

            function slowWorkLoopThatChecksForFailedWork(expirationTime) {
              if (
                nextRenderExpirationTime === NoWork ||
                nextRenderExpirationTime > expirationTime
              ) {
                return;
              }

              if (nextRenderExpirationTime <= mostRecentCurrentTime) {
                // Flush all expired work.
                while (nextUnitOfWork !== null) {
                  if (hasCapturedError(nextUnitOfWork)) {
                    // Use a forked version of performUnitOfWork
                    nextUnitOfWork = performFailedUnitOfWork(nextUnitOfWork);
                  } else {
                    nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
                  }
                }
              } else {
                // Flush asynchronous work until the deadline runs out of time.
                while (nextUnitOfWork !== null && !shouldYield()) {
                  if (hasCapturedError(nextUnitOfWork)) {
                    // Use a forked version of performUnitOfWork
                    nextUnitOfWork = performFailedUnitOfWork(nextUnitOfWork);
                  } else {
                    nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
                  }
                }
              }
            }

            function renderRootCatchBlock(
              root,
              failedWork,
              boundary,
              expirationTime
            ) {
              // We're going to restart the error boundary that captured the error.
              // Conceptually, we're unwinding the stack. We need to unwind the
              // context stack, too.
              unwindContexts(failedWork, boundary);

              // Restart the error boundary using a forked version of
              // performUnitOfWork that deletes the boundary's children. The entire
              // failed subree will be unmounted. During the commit phase, a special
              // lifecycle method is called on the error boundary, which triggers
              // a re-render.
              nextUnitOfWork = performFailedUnitOfWork(boundary);

              // Continue working.
              workLoop(expirationTime);
            }

            function renderRoot(root, expirationTime) {
              !!isWorking
                ? invariant(
                    false,
                    "renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;
              isWorking = true;

              // We're about to mutate the work-in-progress tree. If the root was pending
              // commit, it no longer is: we'll need to complete it again.
              root.isReadyForCommit = false;

              // Check if we're starting from a fresh stack, or if we're resuming from
              // previously yielded work.
              if (
                root !== nextRoot ||
                expirationTime !== nextRenderExpirationTime ||
                nextUnitOfWork === null
              ) {
                // Reset the stack and start working from the root.
                resetContextStack();
                nextRoot = root;
                nextRenderExpirationTime = expirationTime;
                nextUnitOfWork = createWorkInProgress(
                  nextRoot.current,
                  null,
                  expirationTime
                );
              }

              startWorkLoopTimer(nextUnitOfWork);

              var didError = false;
              var error = null;
              {
                invokeGuardedCallback$1(null, workLoop, null, expirationTime);
                if (hasCaughtError()) {
                  didError = true;
                  error = clearCaughtError();
                }
              }

              // An error was thrown during the render phase.
              while (didError) {
                if (didFatal) {
                  // This was a fatal error. Don't attempt to recover from it.
                  firstUncaughtError = error;
                  break;
                }

                var failedWork = nextUnitOfWork;
                if (failedWork === null) {
                  // An error was thrown but there's no current unit of work. This can
                  // happen during the commit phase if there's a bug in the renderer.
                  didFatal = true;
                  continue;
                }

                // "Capture" the error by finding the nearest boundary. If there is no
                // error boundary, we use the root.
                var boundary = captureError(failedWork, error);
                !(boundary !== null)
                  ? invariant(
                      false,
                      "Should have found an error boundary. This error is likely caused by a bug in React. Please file an issue."
                    )
                  : void 0;

                if (didFatal) {
                  // The error we just captured was a fatal error. This happens
                  // when the error propagates to the root more than once.
                  continue;
                }

                didError = false;
                error = null;
                {
                  invokeGuardedCallback$1(
                    null,
                    renderRootCatchBlock,
                    null,
                    root,
                    failedWork,
                    boundary,
                    expirationTime
                  );
                  if (hasCaughtError()) {
                    didError = true;
                    error = clearCaughtError();
                    continue;
                  }
                }
                // We're finished working. Exit the error loop.
                break;
              }

              var uncaughtError = firstUncaughtError;

              // We're done performing work. Time to clean up.
              stopWorkLoopTimer(interruptedBy);
              interruptedBy = null;
              isWorking = false;
              didFatal = false;
              firstUncaughtError = null;

              if (uncaughtError !== null) {
                onUncaughtError(uncaughtError);
              }

              return root.isReadyForCommit ? root.current.alternate : null;
            }

            // Returns the boundary that captured the error, or null if the error is ignored
            function captureError(failedWork, error) {
              // It is no longer valid because we exited the user code.
              ReactCurrentOwner.current = null;
              {
                ReactDebugCurrentFiber.resetCurrentFiber();
              }

              // Search for the nearest error boundary.
              var boundary = null;

              // Passed to logCapturedError()
              var errorBoundaryFound = false;
              var willRetry = false;
              var errorBoundaryName = null;

              // Host containers are a special case. If the failed work itself is a host
              // container, then it acts as its own boundary. In all other cases, we
              // ignore the work itself and only search through the parents.
              if (failedWork.tag === HostRoot) {
                boundary = failedWork;

                if (isFailedBoundary(failedWork)) {
                  // If this root already failed, there must have been an error when
                  // attempting to unmount it. This is a worst-case scenario and
                  // should only be possible if there's a bug in the renderer.
                  didFatal = true;
                }
              } else {
                var node = failedWork["return"];
                while (node !== null && boundary === null) {
                  if (node.tag === ClassComponent) {
                    var instance = node.stateNode;
                    if (typeof instance.componentDidCatch === "function") {
                      errorBoundaryFound = true;
                      errorBoundaryName = getComponentName(node);

                      // Found an error boundary!
                      boundary = node;
                      willRetry = true;
                    }
                  } else if (node.tag === HostRoot) {
                    // Treat the root like a no-op error boundary
                    boundary = node;
                  }

                  if (isFailedBoundary(node)) {
                    // This boundary is already in a failed state.

                    // If we're currently unmounting, that means this error was
                    // thrown while unmounting a failed subtree. We should ignore
                    // the error.
                    if (isUnmounting) {
                      return null;
                    }

                    // If we're in the commit phase, we should check to see if
                    // this boundary already captured an error during this commit.
                    // This case exists because multiple errors can be thrown during
                    // a single commit without interruption.
                    if (
                      commitPhaseBoundaries !== null &&
                      (commitPhaseBoundaries.has(node) ||
                        (node.alternate !== null &&
                          commitPhaseBoundaries.has(node.alternate)))
                    ) {
                      // If so, we should ignore this error.
                      return null;
                    }

                    // The error should propagate to the next boundary -— we keep looking.
                    boundary = null;
                    willRetry = false;
                  }

                  node = node["return"];
                }
              }

              if (boundary !== null) {
                // Add to the collection of failed boundaries. This lets us know that
                // subsequent errors in this subtree should propagate to the next boundary.
                if (failedBoundaries === null) {
                  failedBoundaries = new Set();
                }
                failedBoundaries.add(boundary);

                // This method is unsafe outside of the begin and complete phases.
                // We might be in the commit phase when an error is captured.
                // The risk is that the return path from this Fiber may not be accurate.
                // That risk is acceptable given the benefit of providing users more context.
                var _componentStack = getStackAddendumByWorkInProgressFiber(
                  failedWork
                );
                var _componentName = getComponentName(failedWork);

                // Add to the collection of captured errors. This is stored as a global
                // map of errors and their component stack location keyed by the boundaries
                // that capture them. We mostly use this Map as a Set; it's a Map only to
                // avoid adding a field to Fiber to store the error.
                if (capturedErrors === null) {
                  capturedErrors = new Map();
                }

                var capturedError = {
                  componentName: _componentName,
                  componentStack: _componentStack,
                  error: error,
                  errorBoundary: errorBoundaryFound ? boundary.stateNode : null,
                  errorBoundaryFound: errorBoundaryFound,
                  errorBoundaryName: errorBoundaryName,
                  willRetry: willRetry
                };

                capturedErrors.set(boundary, capturedError);

                try {
                  logCapturedError(capturedError);
                } catch (e) {
                  // Prevent cycle if logCapturedError() throws.
                  // A cycle may still occur if logCapturedError renders a component that throws.
                  console.error(e);
                }

                // If we're in the commit phase, defer scheduling an update on the
                // boundary until after the commit is complete
                if (isCommitting) {
                  if (commitPhaseBoundaries === null) {
                    commitPhaseBoundaries = new Set();
                  }
                  commitPhaseBoundaries.add(boundary);
                } else {
                  // Otherwise, schedule an update now.
                  // TODO: Is this actually necessary during the render phase? Is it
                  // possible to unwind and continue rendering at the same priority,
                  // without corrupting internal state?
                  scheduleErrorRecovery(boundary);
                }
                return boundary;
              } else if (firstUncaughtError === null) {
                // If no boundary is found, we'll need to throw the error
                firstUncaughtError = error;
              }
              return null;
            }

            function hasCapturedError(fiber) {
              // TODO: capturedErrors should store the boundary instance, to avoid needing
              // to check the alternate.
              return (
                capturedErrors !== null &&
                (capturedErrors.has(fiber) ||
                  (fiber.alternate !== null &&
                    capturedErrors.has(fiber.alternate)))
              );
            }

            function isFailedBoundary(fiber) {
              // TODO: failedBoundaries should store the boundary instance, to avoid
              // needing to check the alternate.
              return (
                failedBoundaries !== null &&
                (failedBoundaries.has(fiber) ||
                  (fiber.alternate !== null &&
                    failedBoundaries.has(fiber.alternate)))
              );
            }

            function commitErrorHandling(effectfulFiber) {
              var capturedError = void 0;
              if (capturedErrors !== null) {
                capturedError = capturedErrors.get(effectfulFiber);
                capturedErrors["delete"](effectfulFiber);
                if (capturedError == null) {
                  if (effectfulFiber.alternate !== null) {
                    effectfulFiber = effectfulFiber.alternate;
                    capturedError = capturedErrors.get(effectfulFiber);
                    capturedErrors["delete"](effectfulFiber);
                  }
                }
              }

              !(capturedError != null)
                ? invariant(
                    false,
                    "No error for given unit of work. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;

              switch (effectfulFiber.tag) {
                case ClassComponent:
                  var instance = effectfulFiber.stateNode;

                  var info = {
                    componentStack: capturedError.componentStack
                  };

                  // Allow the boundary to handle the error, usually by scheduling
                  // an update to itself
                  instance.componentDidCatch(capturedError.error, info);
                  return;
                case HostRoot:
                  if (firstUncaughtError === null) {
                    firstUncaughtError = capturedError.error;
                  }
                  return;
                default:
                  invariant(
                    false,
                    "Invalid type of work. This error is likely caused by a bug in React. Please file an issue."
                  );
              }
            }

            function unwindContexts(from, to) {
              var node = from;
              while (node !== null) {
                switch (node.tag) {
                  case ClassComponent:
                    popContextProvider(node);
                    break;
                  case HostComponent:
                    popHostContext(node);
                    break;
                  case HostRoot:
                    popHostContainer(node);
                    break;
                  case HostPortal:
                    popHostContainer(node);
                    break;
                }
                if (node === to || node.alternate === to) {
                  stopFailedWorkTimer(node);
                  break;
                } else {
                  stopWorkTimer(node);
                }
                node = node["return"];
              }
            }

            function computeAsyncExpiration() {
              // Given the current clock time, returns an expiration time. We use rounding
              // to batch like updates together.
              // Should complete within ~1000ms. 1200ms max.
              var currentTime = recalculateCurrentTime();
              var expirationMs = 1000;
              var bucketSizeMs = 200;
              return computeExpirationBucket(
                currentTime,
                expirationMs,
                bucketSizeMs
              );
            }

            function computeExpirationForFiber(fiber) {
              var expirationTime = void 0;
              if (expirationContext !== NoWork) {
                // An explicit expiration context was set;
                expirationTime = expirationContext;
              } else if (isWorking) {
                if (isCommitting) {
                  // Updates that occur during the commit phase should have sync priority
                  // by default.
                  expirationTime = Sync;
                } else {
                  // Updates during the render phase should expire at the same time as
                  // the work that is being rendered.
                  expirationTime = nextRenderExpirationTime;
                }
              } else {
                // No explicit expiration context was set, and we're not currently
                // performing work. Calculate a new expiration time.
                if (
                  useSyncScheduling &&
                  !(fiber.internalContextTag & AsyncUpdates)
                ) {
                  // This is a sync update
                  expirationTime = Sync;
                } else {
                  // This is an async update
                  expirationTime = computeAsyncExpiration();
                }
              }
              return expirationTime;
            }

            function scheduleWork(fiber, expirationTime) {
              return scheduleWorkImpl(fiber, expirationTime, false);
            }

            function scheduleWorkImpl(fiber, expirationTime, isErrorRecovery) {
              recordScheduleUpdate();

              {
                if (!isErrorRecovery && fiber.tag === ClassComponent) {
                  var instance = fiber.stateNode;
                  warnAboutInvalidUpdates(instance);
                }
              }

              var node = fiber;
              while (node !== null) {
                // Walk the parent path to the root and update each node's
                // expiration time.
                if (
                  node.expirationTime === NoWork ||
                  node.expirationTime > expirationTime
                ) {
                  node.expirationTime = expirationTime;
                }
                if (node.alternate !== null) {
                  if (
                    node.alternate.expirationTime === NoWork ||
                    node.alternate.expirationTime > expirationTime
                  ) {
                    node.alternate.expirationTime = expirationTime;
                  }
                }
                if (node["return"] === null) {
                  if (node.tag === HostRoot) {
                    var root = node.stateNode;
                    if (
                      !isWorking &&
                      root === nextRoot &&
                      expirationTime <= nextRenderExpirationTime
                    ) {
                      // Restart the root from the top.
                      if (nextUnitOfWork !== null) {
                        // This is an interruption. (Used for performance tracking.)
                        interruptedBy = fiber;
                      }
                      nextRoot = null;
                      nextUnitOfWork = null;
                      nextRenderExpirationTime = NoWork;
                    }
                    requestWork(root, expirationTime);
                  } else {
                    {
                      if (!isErrorRecovery && fiber.tag === ClassComponent) {
                        warnAboutUpdateOnUnmounted(fiber);
                      }
                    }
                    return;
                  }
                }
                node = node["return"];
              }
            }

            function scheduleErrorRecovery(fiber) {
              scheduleWorkImpl(fiber, Sync, true);
            }

            function recalculateCurrentTime() {
              // Subtract initial time so it fits inside 32bits
              var ms = now() - startTime;
              mostRecentCurrentTime = msToExpirationTime(ms);
              return mostRecentCurrentTime;
            }

            function deferredUpdates(fn) {
              var previousExpirationContext = expirationContext;
              expirationContext = computeAsyncExpiration();
              try {
                return fn();
              } finally {
                expirationContext = previousExpirationContext;
              }
            }

            function syncUpdates(fn) {
              var previousExpirationContext = expirationContext;
              expirationContext = Sync;
              try {
                return fn();
              } finally {
                expirationContext = previousExpirationContext;
              }
            }

            // TODO: Everything below this is written as if it has been lifted to the
            // renderers. I'll do this in a follow-up.

            // Linked-list of roots
            var firstScheduledRoot = null;
            var lastScheduledRoot = null;

            var isCallbackScheduled = false;
            var isRendering = false;
            var nextFlushedRoot = null;
            var nextFlushedExpirationTime = NoWork;
            var deadlineDidExpire = false;
            var hasUnhandledError = false;
            var unhandledError = null;
            var deadline = null;

            var isBatchingUpdates = false;
            var isUnbatchingUpdates = false;

            // Use these to prevent an infinite loop of nested updates
            var NESTED_UPDATE_LIMIT = 1000;
            var nestedUpdateCount = 0;

            var timeHeuristicForUnitOfWork = 1;

            // requestWork is called by the scheduler whenever a root receives an update.
            // It's up to the renderer to call renderRoot at some point in the future.
            function requestWork(root, expirationTime) {
              if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
                invariant(
                  false,
                  "Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."
                );
              }

              // Add the root to the schedule.
              // Check if this root is already part of the schedule.
              if (root.nextScheduledRoot === null) {
                // This root is not already scheduled. Add it.
                root.remainingExpirationTime = expirationTime;
                if (lastScheduledRoot === null) {
                  firstScheduledRoot = lastScheduledRoot = root;
                  root.nextScheduledRoot = root;
                } else {
                  lastScheduledRoot.nextScheduledRoot = root;
                  lastScheduledRoot = root;
                  lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
                }
              } else {
                // This root is already scheduled, but its priority may have increased.
                var remainingExpirationTime = root.remainingExpirationTime;
                if (
                  remainingExpirationTime === NoWork ||
                  expirationTime < remainingExpirationTime
                ) {
                  // Update the priority.
                  root.remainingExpirationTime = expirationTime;
                }
              }

              if (isRendering) {
                // Prevent reentrancy. Remaining work will be scheduled at the end of
                // the currently rendering batch.
                return;
              }

              if (isBatchingUpdates) {
                // Flush work at the end of the batch.
                if (isUnbatchingUpdates) {
                  // ...unless we're inside unbatchedUpdates, in which case we should
                  // flush it now.
                  performWorkOnRoot(root, Sync);
                }
                return;
              }

              // TODO: Get rid of Sync and use current time?
              if (expirationTime === Sync) {
                performWork(Sync, null);
              } else if (!isCallbackScheduled) {
                isCallbackScheduled = true;
                scheduleDeferredCallback(performAsyncWork);
              }
            }

            function findHighestPriorityRoot() {
              var highestPriorityWork = NoWork;
              var highestPriorityRoot = null;

              if (lastScheduledRoot !== null) {
                var previousScheduledRoot = lastScheduledRoot;
                var root = firstScheduledRoot;
                while (root !== null) {
                  var remainingExpirationTime = root.remainingExpirationTime;
                  if (remainingExpirationTime === NoWork) {
                    // This root no longer has work. Remove it from the scheduler.

                    // TODO: This check is redudant, but Flow is confused by the branch
                    // below where we set lastScheduledRoot to null, even though we break
                    // from the loop right after.
                    !(
                      previousScheduledRoot !== null &&
                      lastScheduledRoot !== null
                    )
                      ? invariant(
                          false,
                          "Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue."
                        )
                      : void 0;
                    if (root === root.nextScheduledRoot) {
                      // This is the only root in the list.
                      root.nextScheduledRoot = null;
                      firstScheduledRoot = lastScheduledRoot = null;
                      break;
                    } else if (root === firstScheduledRoot) {
                      // This is the first root in the list.
                      var next = root.nextScheduledRoot;
                      firstScheduledRoot = next;
                      lastScheduledRoot.nextScheduledRoot = next;
                      root.nextScheduledRoot = null;
                    } else if (root === lastScheduledRoot) {
                      // This is the last root in the list.
                      lastScheduledRoot = previousScheduledRoot;
                      lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
                      root.nextScheduledRoot = null;
                      break;
                    } else {
                      previousScheduledRoot.nextScheduledRoot =
                        root.nextScheduledRoot;
                      root.nextScheduledRoot = null;
                    }
                    root = previousScheduledRoot.nextScheduledRoot;
                  } else {
                    if (
                      highestPriorityWork === NoWork ||
                      remainingExpirationTime < highestPriorityWork
                    ) {
                      // Update the priority, if it's higher
                      highestPriorityWork = remainingExpirationTime;
                      highestPriorityRoot = root;
                    }
                    if (root === lastScheduledRoot) {
                      break;
                    }
                    previousScheduledRoot = root;
                    root = root.nextScheduledRoot;
                  }
                }
              }

              // If the next root is the same as the previous root, this is a nested
              // update. To prevent an infinite loop, increment the nested update count.
              var previousFlushedRoot = nextFlushedRoot;
              if (
                previousFlushedRoot !== null &&
                previousFlushedRoot === highestPriorityRoot
              ) {
                nestedUpdateCount++;
              } else {
                // Reset whenever we switch roots.
                nestedUpdateCount = 0;
              }
              nextFlushedRoot = highestPriorityRoot;
              nextFlushedExpirationTime = highestPriorityWork;
            }

            function performAsyncWork(dl) {
              performWork(NoWork, dl);
            }

            function performWork(minExpirationTime, dl) {
              deadline = dl;

              // Keep working on roots until there's no more work, or until the we reach
              // the deadlne.
              findHighestPriorityRoot();
              while (
                nextFlushedRoot !== null &&
                nextFlushedExpirationTime !== NoWork &&
                (minExpirationTime === NoWork ||
                  nextFlushedExpirationTime <= minExpirationTime) &&
                !deadlineDidExpire
              ) {
                performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime);
                // Find the next highest priority work.
                findHighestPriorityRoot();
              }

              // We're done flushing work. Either we ran out of time in this callback,
              // or there's no more work left with sufficient priority.

              // If we're inside a callback, set this to false since we just completed it.
              if (deadline !== null) {
                isCallbackScheduled = false;
              }
              // If there's work left over, schedule a new callback.
              if (nextFlushedRoot !== null && !isCallbackScheduled) {
                isCallbackScheduled = true;
                scheduleDeferredCallback(performAsyncWork);
              }

              // Clean-up.
              deadline = null;
              deadlineDidExpire = false;
              nestedUpdateCount = 0;

              if (hasUnhandledError) {
                var _error4 = unhandledError;
                unhandledError = null;
                hasUnhandledError = false;
                throw _error4;
              }
            }

            function performWorkOnRoot(root, expirationTime) {
              !!isRendering
                ? invariant(
                    false,
                    "performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;

              isRendering = true;

              // Check if this is async work or sync/expired work.
              // TODO: Pass current time as argument to renderRoot, commitRoot
              if (expirationTime <= recalculateCurrentTime()) {
                // Flush sync work.
                var finishedWork = root.finishedWork;
                if (finishedWork !== null) {
                  // This root is already complete. We can commit it.
                  root.finishedWork = null;
                  root.remainingExpirationTime = commitRoot(finishedWork);
                } else {
                  root.finishedWork = null;
                  finishedWork = renderRoot(root, expirationTime);
                  if (finishedWork !== null) {
                    // We've completed the root. Commit it.
                    root.remainingExpirationTime = commitRoot(finishedWork);
                  }
                }
              } else {
                // Flush async work.
                var _finishedWork = root.finishedWork;
                if (_finishedWork !== null) {
                  // This root is already complete. We can commit it.
                  root.finishedWork = null;
                  root.remainingExpirationTime = commitRoot(_finishedWork);
                } else {
                  root.finishedWork = null;
                  _finishedWork = renderRoot(root, expirationTime);
                  if (_finishedWork !== null) {
                    // We've completed the root. Check the deadline one more time
                    // before committing.
                    if (!shouldYield()) {
                      // Still time left. Commit the root.
                      root.remainingExpirationTime = commitRoot(_finishedWork);
                    } else {
                      // There's no time left. Mark this root as complete. We'll come
                      // back and commit it later.
                      root.finishedWork = _finishedWork;
                    }
                  }
                }
              }

              isRendering = false;
            }

            // When working on async work, the reconciler asks the renderer if it should
            // yield execution. For DOM, we implement this with requestIdleCallback.
            function shouldYield() {
              if (deadline === null) {
                return false;
              }
              if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
                return false;
              }
              deadlineDidExpire = true;
              return true;
            }

            // TODO: Not happy about this hook. Conceptually, renderRoot should return a
            // tuple of (isReadyForCommit, didError, error)
            function onUncaughtError(error) {
              !(nextFlushedRoot !== null)
                ? invariant(
                    false,
                    "Should be working on a root. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;
              // Unschedule this root so we don't work on it again until there's
              // another update.
              nextFlushedRoot.remainingExpirationTime = NoWork;
              if (!hasUnhandledError) {
                hasUnhandledError = true;
                unhandledError = error;
              }
            }

            // TODO: Batching should be implemented at the renderer level, not inside
            // the reconciler.
            function batchedUpdates(fn, a) {
              var previousIsBatchingUpdates = isBatchingUpdates;
              isBatchingUpdates = true;
              try {
                return fn(a);
              } finally {
                isBatchingUpdates = previousIsBatchingUpdates;
                if (!isBatchingUpdates && !isRendering) {
                  performWork(Sync, null);
                }
              }
            }

            // TODO: Batching should be implemented at the renderer level, not inside
            // the reconciler.
            function unbatchedUpdates(fn) {
              if (isBatchingUpdates && !isUnbatchingUpdates) {
                isUnbatchingUpdates = true;
                try {
                  return fn();
                } finally {
                  isUnbatchingUpdates = false;
                }
              }
              return fn();
            }

            // TODO: Batching should be implemented at the renderer level, not within
            // the reconciler.
            function flushSync(fn) {
              var previousIsBatchingUpdates = isBatchingUpdates;
              isBatchingUpdates = true;
              try {
                return syncUpdates(fn);
              } finally {
                isBatchingUpdates = previousIsBatchingUpdates;
                !!isRendering
                  ? invariant(
                      false,
                      "flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering."
                    )
                  : void 0;
                performWork(Sync, null);
              }
            }

            return {
              computeAsyncExpiration: computeAsyncExpiration,
              computeExpirationForFiber: computeExpirationForFiber,
              scheduleWork: scheduleWork,
              batchedUpdates: batchedUpdates,
              unbatchedUpdates: unbatchedUpdates,
              flushSync: flushSync,
              deferredUpdates: deferredUpdates
            };
          };

          {
            var didWarnAboutNestedUpdates = false;
          }

          // 0 is PROD, 1 is DEV.
          // Might add PROFILE later.

          function getContextForSubtree(parentComponent) {
            if (!parentComponent) {
              return emptyObject;
            }

            var fiber = get(parentComponent);
            var parentContext = findCurrentUnmaskedContext(fiber);
            return isContextProvider(fiber)
              ? processChildContext(fiber, parentContext)
              : parentContext;
          }

          var ReactFiberReconciler$1 = function(config) {
            var getPublicInstance = config.getPublicInstance;

            var _ReactFiberScheduler = ReactFiberScheduler(config),
              computeAsyncExpiration =
                _ReactFiberScheduler.computeAsyncExpiration,
              computeExpirationForFiber =
                _ReactFiberScheduler.computeExpirationForFiber,
              scheduleWork = _ReactFiberScheduler.scheduleWork,
              batchedUpdates = _ReactFiberScheduler.batchedUpdates,
              unbatchedUpdates = _ReactFiberScheduler.unbatchedUpdates,
              flushSync = _ReactFiberScheduler.flushSync,
              deferredUpdates = _ReactFiberScheduler.deferredUpdates;

            function scheduleTopLevelUpdate(current, element, callback) {
              {
                if (
                  ReactDebugCurrentFiber.phase === "render" &&
                  ReactDebugCurrentFiber.current !== null &&
                  !didWarnAboutNestedUpdates
                ) {
                  didWarnAboutNestedUpdates = true;
                  warning(
                    false,
                    "Render methods should be a pure function of props and state; " +
                      "triggering nested component updates from render is not allowed. " +
                      "If necessary, trigger nested updates in componentDidUpdate.\n\n" +
                      "Check the render method of %s.",
                    getComponentName(ReactDebugCurrentFiber.current) ||
                      "Unknown"
                  );
                }
              }

              callback = callback === undefined ? null : callback;
              {
                warning(
                  callback === null || typeof callback === "function",
                  "render(...): Expected the last optional `callback` argument to be a " +
                    "function. Instead received: %s.",
                  callback
                );
              }

              var expirationTime = void 0;
              // Check if the top-level element is an async wrapper component. If so,
              // treat updates to the root as async. This is a bit weird but lets us
              // avoid a separate `renderAsync` API.
              if (
                enableAsyncSubtreeAPI &&
                element != null &&
                element.type != null &&
                element.type.prototype != null &&
                element.type.prototype.unstable_isAsyncReactComponent === true
              ) {
                expirationTime = computeAsyncExpiration();
              } else {
                expirationTime = computeExpirationForFiber(current);
              }

              var update = {
                expirationTime: expirationTime,
                partialState: { element: element },
                callback: callback,
                isReplace: false,
                isForced: false,
                nextCallback: null,
                next: null
              };
              insertUpdateIntoFiber(current, update);
              scheduleWork(current, expirationTime);
            }

            function findHostInstance(fiber) {
              var hostFiber = findCurrentHostFiber(fiber);
              if (hostFiber === null) {
                return null;
              }
              return hostFiber.stateNode;
            }

            return {
              createContainer: function(containerInfo, hydrate) {
                return createFiberRoot(containerInfo, hydrate);
              },
              updateContainer: function(
                element,
                container,
                parentComponent,
                callback
              ) {
                // TODO: If this is a nested container, this won't be the root.
                var current = container.current;

                {
                  if (ReactFiberInstrumentation_1.debugTool) {
                    if (current.alternate === null) {
                      ReactFiberInstrumentation_1.debugTool.onMountContainer(
                        container
                      );
                    } else if (element === null) {
                      ReactFiberInstrumentation_1.debugTool.onUnmountContainer(
                        container
                      );
                    } else {
                      ReactFiberInstrumentation_1.debugTool.onUpdateContainer(
                        container
                      );
                    }
                  }
                }

                var context = getContextForSubtree(parentComponent);
                if (container.context === null) {
                  container.context = context;
                } else {
                  container.pendingContext = context;
                }

                scheduleTopLevelUpdate(current, element, callback);
              },

              batchedUpdates: batchedUpdates,

              unbatchedUpdates: unbatchedUpdates,

              deferredUpdates: deferredUpdates,

              flushSync: flushSync,

              getPublicRootInstance: function(container) {
                var containerFiber = container.current;
                if (!containerFiber.child) {
                  return null;
                }
                switch (containerFiber.child.tag) {
                  case HostComponent:
                    return getPublicInstance(containerFiber.child.stateNode);
                  default:
                    return containerFiber.child.stateNode;
                }
              },

              findHostInstance: findHostInstance,

              findHostInstanceWithNoPortals: function(fiber) {
                var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
                if (hostFiber === null) {
                  return null;
                }
                return hostFiber.stateNode;
              },
              injectIntoDevTools: function(devToolsConfig) {
                var findFiberByHostInstance =
                  devToolsConfig.findFiberByHostInstance;

                return injectInternals(
                  _assign({}, devToolsConfig, {
                    findHostInstanceByFiber: function(fiber) {
                      return findHostInstance(fiber);
                    },
                    findFiberByHostInstance: function(instance) {
                      if (!findFiberByHostInstance) {
                        // Might not be implemented by the renderer.
                        return null;
                      }
                      return findFiberByHostInstance(instance);
                    }
                  })
                );
              }
            };
          };

          var ReactFiberReconciler$2 = Object.freeze({
            default: ReactFiberReconciler$1
          });

          var ReactFiberReconciler$3 =
            (ReactFiberReconciler$2 && ReactFiberReconciler$1) ||
            ReactFiberReconciler$2;

          // TODO: bundle Flow types with the package.

          // TODO: decide on the top-level export form.
          // This is hacky but makes it work with both Rollup and Jest.
          var reactReconciler = ReactFiberReconciler$3["default"]
            ? ReactFiberReconciler$3["default"]
            : ReactFiberReconciler$3;

          // TODO: this is special because it gets imported during build.

          var ReactVersion = "16.1.0";

          // a requestAnimationFrame, storing the time for the start of the frame, then
          // scheduling a postMessage which gets scheduled after paint. Within the
          // postMessage handler do as much work as possible until time + frame rate.
          // By separating the idle call into a separate event tick we ensure that
          // layout, paint and other browser work is counted against the available time.
          // The frame rate is dynamically adjusted.

          {
            if (
              ExecutionEnvironment.canUseDOM &&
              typeof requestAnimationFrame !== "function"
            ) {
              warning(
                false,
                "React depends on requestAnimationFrame. Make sure that you load a " +
                  "polyfill in older browsers. http://fb.me/react-polyfills"
              );
            }
          }

          var hasNativePerformanceNow =
            typeof performance === "object" &&
            typeof performance.now === "function";

          var now = void 0;
          if (hasNativePerformanceNow) {
            now = function() {
              return performance.now();
            };
          } else {
            now = function() {
              return Date.now();
            };
          }

          // TODO: There's no way to cancel, because Fiber doesn't atm.
          var rIC = void 0;

          if (!ExecutionEnvironment.canUseDOM) {
            rIC = function(frameCallback) {
              setTimeout(function() {
                frameCallback({
                  timeRemaining: function() {
                    return Infinity;
                  }
                });
              });
              return 0;
            };
          } else if (typeof requestIdleCallback !== "function") {
            // Polyfill requestIdleCallback.

            var scheduledRICCallback = null;

            var isIdleScheduled = false;
            var isAnimationFrameScheduled = false;

            var frameDeadline = 0;
            // We start out assuming that we run at 30fps but then the heuristic tracking
            // will adjust this value to a faster fps if we get more frequent animation
            // frames.
            var previousFrameTime = 33;
            var activeFrameTime = 33;

            var frameDeadlineObject;
            if (hasNativePerformanceNow) {
              frameDeadlineObject = {
                timeRemaining: function() {
                  // We assume that if we have a performance timer that the rAF callback
                  // gets a performance timer value. Not sure if this is always true.
                  return frameDeadline - performance.now();
                }
              };
            } else {
              frameDeadlineObject = {
                timeRemaining: function() {
                  // Fallback to Date.now()
                  return frameDeadline - Date.now();
                }
              };
            }

            // We use the postMessage trick to defer idle work until after the repaint.
            var messageKey =
              "__reactIdleCallback$" +
              Math.random()
                .toString(36)
                .slice(2);
            var idleTick = function(event) {
              if (event.source !== window || event.data !== messageKey) {
                return;
              }
              isIdleScheduled = false;
              var callback = scheduledRICCallback;
              scheduledRICCallback = null;
              if (callback !== null) {
                callback(frameDeadlineObject);
              }
            };
            // Assumes that we have addEventListener in this environment. Might need
            // something better for old IE.
            window.addEventListener("message", idleTick, false);

            var animationTick = function(rafTime) {
              isAnimationFrameScheduled = false;
              var nextFrameTime = rafTime - frameDeadline + activeFrameTime;
              if (
                nextFrameTime < activeFrameTime &&
                previousFrameTime < activeFrameTime
              ) {
                if (nextFrameTime < 8) {
                  // Defensive coding. We don't support higher frame rates than 120hz.
                  // If we get lower than that, it is probably a bug.
                  nextFrameTime = 8;
                }
                // If one frame goes long, then the next one can be short to catch up.
                // If two frames are short in a row, then that's an indication that we
                // actually have a higher frame rate than what we're currently optimizing.
                // We adjust our heuristic dynamically accordingly. For example, if we're
                // running on 120hz display or 90hz VR display.
                // Take the max of the two in case one of them was an anomaly due to
                // missed frame deadlines.
                activeFrameTime =
                  nextFrameTime < previousFrameTime
                    ? previousFrameTime
                    : nextFrameTime;
              } else {
                previousFrameTime = nextFrameTime;
              }
              frameDeadline = rafTime + activeFrameTime;
              if (!isIdleScheduled) {
                isIdleScheduled = true;
                window.postMessage(messageKey, "*");
              }
            };

            rIC = function(callback) {
              // This assumes that we only schedule one callback at a time because that's
              // how Fiber uses it.
              scheduledRICCallback = callback;
              if (!isAnimationFrameScheduled) {
                // If rAF didn't already schedule one, we need to schedule a frame.
                // TODO: If this rAF doesn't materialize because the browser throttles, we
                // might want to still have setTimeout trigger rIC as a backup to ensure
                // that we keep performing work.
                isAnimationFrameScheduled = true;
                requestAnimationFrame(animationTick);
              }
              return 0;
            };
          } else {
            rIC = requestIdleCallback;
          }

          /**
           * Forked from fbjs/warning:
           * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
           *
           * Only change is we use console.warn instead of console.error,
           * and do nothing when 'console' is not supported.
           * This really simplifies the code.
           * ---
           * Similar to invariant but only logs a warning if the condition is not met.
           * This can be used to log issues in development environments in critical
           * paths. Removing the logging code for production environments will keep the
           * same logic and follow the same code paths.
           */

          var lowPriorityWarning = function() {};

          {
            var printWarning = function(format) {
              for (
                var _len = arguments.length,
                  args = Array(_len > 1 ? _len - 1 : 0),
                  _key = 1;
                _key < _len;
                _key++
              ) {
                args[_key - 1] = arguments[_key];
              }

              var argIndex = 0;
              var message =
                "Warning: " +
                format.replace(/%s/g, function() {
                  return args[argIndex++];
                });
              if (typeof console !== "undefined") {
                console.warn(message);
              }
              try {
                // --- Welcome to debugging React ---
                // This error was thrown as a convenience so that you can use this stack
                // to find the callsite that caused this warning to fire.
                throw new Error(message);
              } catch (x) {}
            };

            lowPriorityWarning = function(condition, format) {
              if (format === undefined) {
                throw new Error(
                  "`warning(condition, format, ...args)` requires a warning " +
                    "message argument"
                );
              }
              if (!condition) {
                for (
                  var _len2 = arguments.length,
                    args = Array(_len2 > 2 ? _len2 - 2 : 0),
                    _key2 = 2;
                  _key2 < _len2;
                  _key2++
                ) {
                  args[_key2 - 2] = arguments[_key2];
                }

                printWarning.apply(undefined, [format].concat(args));
              }
            };
          }

          var lowPriorityWarning$1 = lowPriorityWarning;

          // isAttributeNameSafe() is currently duplicated in DOMMarkupOperations.
          // TODO: Find a better place for this.
          var VALID_ATTRIBUTE_NAME_REGEX = new RegExp(
            "^[" +
              ATTRIBUTE_NAME_START_CHAR +
              "][" +
              ATTRIBUTE_NAME_CHAR +
              "]*$"
          );
          var illegalAttributeNameCache = {};
          var validatedAttributeNameCache = {};
          function isAttributeNameSafe(attributeName) {
            if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
              return true;
            }
            if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
              return false;
            }
            if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
              validatedAttributeNameCache[attributeName] = true;
              return true;
            }
            illegalAttributeNameCache[attributeName] = true;
            {
              warning(false, "Invalid attribute name: `%s`", attributeName);
            }
            return false;
          }

          // shouldIgnoreValue() is currently duplicated in DOMMarkupOperations.
          // TODO: Find a better place for this.
          function shouldIgnoreValue(propertyInfo, value) {
            return (
              value == null ||
              (propertyInfo.hasBooleanValue && !value) ||
              (propertyInfo.hasNumericValue && isNaN(value)) ||
              (propertyInfo.hasPositiveNumericValue && value < 1) ||
              (propertyInfo.hasOverloadedBooleanValue && value === false)
            );
          }

          /**
           * Operations for dealing with DOM properties.
           */

          /**
           * Get the value for a property on a node. Only used in DEV for SSR validation.
           * The "expected" argument is used as a hint of what the expected value is.
           * Some properties have multiple equivalent values.
           */
          function getValueForProperty(node, name, expected) {
            {
              var propertyInfo = getPropertyInfo(name);
              if (propertyInfo) {
                var mutationMethod = propertyInfo.mutationMethod;
                if (mutationMethod || propertyInfo.mustUseProperty) {
                  return node[propertyInfo.propertyName];
                } else {
                  var attributeName = propertyInfo.attributeName;

                  var stringValue = null;

                  if (propertyInfo.hasOverloadedBooleanValue) {
                    if (node.hasAttribute(attributeName)) {
                      var value = node.getAttribute(attributeName);
                      if (value === "") {
                        return true;
                      }
                      if (shouldIgnoreValue(propertyInfo, expected)) {
                        return value;
                      }
                      if (value === "" + expected) {
                        return expected;
                      }
                      return value;
                    }
                  } else if (node.hasAttribute(attributeName)) {
                    if (shouldIgnoreValue(propertyInfo, expected)) {
                      // We had an attribute but shouldn't have had one, so read it
                      // for the error message.
                      return node.getAttribute(attributeName);
                    }
                    if (propertyInfo.hasBooleanValue) {
                      // If this was a boolean, it doesn't matter what the value is
                      // the fact that we have it is the same as the expected.
                      return expected;
                    }
                    // Even if this property uses a namespace we use getAttribute
                    // because we assume its namespaced name is the same as our config.
                    // To use getAttributeNS we need the local name which we don't have
                    // in our config atm.
                    stringValue = node.getAttribute(attributeName);
                  }

                  if (shouldIgnoreValue(propertyInfo, expected)) {
                    return stringValue === null ? expected : stringValue;
                  } else if (stringValue === "" + expected) {
                    return expected;
                  } else {
                    return stringValue;
                  }
                }
              }
            }
          }

          /**
           * Get the value for a attribute on a node. Only used in DEV for SSR validation.
           * The third argument is used as a hint of what the expected value is. Some
           * attributes have multiple equivalent values.
           */
          function getValueForAttribute(node, name, expected) {
            {
              if (!isAttributeNameSafe(name)) {
                return;
              }
              if (!node.hasAttribute(name)) {
                return expected === undefined ? undefined : null;
              }
              var value = node.getAttribute(name);
              if (value === "" + expected) {
                return expected;
              }
              return value;
            }
          }

          /**
           * Sets the value for a property on a node.
           *
           * @param {DOMElement} node
           * @param {string} name
           * @param {*} value
           */
          function setValueForProperty(node, name, value) {
            var propertyInfo = getPropertyInfo(name);

            if (propertyInfo && shouldSetAttribute(name, value)) {
              var mutationMethod = propertyInfo.mutationMethod;
              if (mutationMethod) {
                mutationMethod(node, value);
              } else if (shouldIgnoreValue(propertyInfo, value)) {
                deleteValueForProperty(node, name);
                return;
              } else if (propertyInfo.mustUseProperty) {
                // Contrary to `setAttribute`, object properties are properly
                // `toString`ed by IE8/9.
                node[propertyInfo.propertyName] = value;
              } else {
                var attributeName = propertyInfo.attributeName;
                var namespace = propertyInfo.attributeNamespace;
                // `setAttribute` with objects becomes only `[object]` in IE8/9,
                // ('' + value) makes it output the correct toString()-value.
                if (namespace) {
                  node.setAttributeNS(namespace, attributeName, "" + value);
                } else if (
                  propertyInfo.hasBooleanValue ||
                  (propertyInfo.hasOverloadedBooleanValue && value === true)
                ) {
                  node.setAttribute(attributeName, "");
                } else {
                  node.setAttribute(attributeName, "" + value);
                }
              }
            } else {
              setValueForAttribute(
                node,
                name,
                shouldSetAttribute(name, value) ? value : null
              );
              return;
            }

            {
            }
          }

          function setValueForAttribute(node, name, value) {
            if (!isAttributeNameSafe(name)) {
              return;
            }
            if (value == null) {
              node.removeAttribute(name);
            } else {
              node.setAttribute(name, "" + value);
            }

            {
            }
          }

          /**
           * Deletes an attributes from a node.
           *
           * @param {DOMElement} node
           * @param {string} name
           */
          function deleteValueForAttribute(node, name) {
            node.removeAttribute(name);
          }

          /**
           * Deletes the value for a property on a node.
           *
           * @param {DOMElement} node
           * @param {string} name
           */
          function deleteValueForProperty(node, name) {
            var propertyInfo = getPropertyInfo(name);
            if (propertyInfo) {
              var mutationMethod = propertyInfo.mutationMethod;
              if (mutationMethod) {
                mutationMethod(node, undefined);
              } else if (propertyInfo.mustUseProperty) {
                var propName = propertyInfo.propertyName;
                if (propertyInfo.hasBooleanValue) {
                  node[propName] = false;
                } else {
                  node[propName] = "";
                }
              } else {
                node.removeAttribute(propertyInfo.attributeName);
              }
            } else {
              node.removeAttribute(name);
            }
          }

          var ReactControlledValuePropTypes = {
            checkPropTypes: null
          };

          {
            var hasReadOnlyValue = {
              button: true,
              checkbox: true,
              image: true,
              hidden: true,
              radio: true,
              reset: true,
              submit: true
            };

            var propTypes = {
              value: function(props, propName, componentName) {
                if (
                  !props[propName] ||
                  hasReadOnlyValue[props.type] ||
                  props.onChange ||
                  props.readOnly ||
                  props.disabled
                ) {
                  return null;
                }
                return new Error(
                  "You provided a `value` prop to a form field without an " +
                    "`onChange` handler. This will render a read-only field. If " +
                    "the field should be mutable use `defaultValue`. Otherwise, " +
                    "set either `onChange` or `readOnly`."
                );
              },
              checked: function(props, propName, componentName) {
                if (
                  !props[propName] ||
                  props.onChange ||
                  props.readOnly ||
                  props.disabled
                ) {
                  return null;
                }
                return new Error(
                  "You provided a `checked` prop to a form field without an " +
                    "`onChange` handler. This will render a read-only field. If " +
                    "the field should be mutable use `defaultChecked`. Otherwise, " +
                    "set either `onChange` or `readOnly`."
                );
              }
            };

            /**
             * Provide a linked `value` attribute for controlled forms. You should not use
             * this outside of the ReactDOM controlled form components.
             */
            ReactControlledValuePropTypes.checkPropTypes = function(
              tagName,
              props,
              getStack
            ) {
              checkPropTypes(propTypes, props, "prop", tagName, getStack);
            };
          }

          // TODO: direct imports like some-package/src/* are bad. Fix me.
          var getCurrentFiberOwnerName$2 =
            ReactDebugCurrentFiber.getCurrentFiberOwnerName;
          var getCurrentFiberStackAddendum$3 =
            ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

          var didWarnValueDefaultValue = false;
          var didWarnCheckedDefaultChecked = false;
          var didWarnControlledToUncontrolled = false;
          var didWarnUncontrolledToControlled = false;

          function isControlled(props) {
            var usesChecked =
              props.type === "checkbox" || props.type === "radio";
            return usesChecked ? props.checked != null : props.value != null;
          }

          /**
           * Implements an <input> host component that allows setting these optional
           * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
           *
           * If `checked` or `value` are not supplied (or null/undefined), user actions
           * that affect the checked state or value will trigger updates to the element.
           *
           * If they are supplied (and not null/undefined), the rendered element will not
           * trigger updates to the element. Instead, the props must change in order for
           * the rendered element to be updated.
           *
           * The rendered element will be initialized as unchecked (or `defaultChecked`)
           * with an empty value (or `defaultValue`).
           *
           * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
           */

          function getHostProps(element, props) {
            var node = element;
            var value = props.value;
            var checked = props.checked;

            var hostProps = _assign(
              {
                // Make sure we set .type before any other properties (setting .value
                // before .type means .value is lost in IE11 and below)
                type: undefined,
                // Make sure we set .step before .value (setting .value before .step
                // means .value is rounded on mount, based upon step precision)
                step: undefined,
                // Make sure we set .min & .max before .value (to ensure proper order
                // in corner cases such as min or max deriving from value, e.g. Issue #7170)
                min: undefined,
                max: undefined
              },
              props,
              {
                defaultChecked: undefined,
                defaultValue: undefined,
                value: value != null ? value : node._wrapperState.initialValue,
                checked:
                  checked != null ? checked : node._wrapperState.initialChecked
              }
            );

            return hostProps;
          }

          function initWrapperState(element, props) {
            {
              ReactControlledValuePropTypes.checkPropTypes(
                "input",
                props,
                getCurrentFiberStackAddendum$3
              );

              if (
                props.checked !== undefined &&
                props.defaultChecked !== undefined &&
                !didWarnCheckedDefaultChecked
              ) {
                warning(
                  false,
                  "%s contains an input of type %s with both checked and defaultChecked props. " +
                    "Input elements must be either controlled or uncontrolled " +
                    "(specify either the checked prop, or the defaultChecked prop, but not " +
                    "both). Decide between using a controlled or uncontrolled input " +
                    "element and remove one of these props. More info: " +
                    "https://fb.me/react-controlled-components",
                  getCurrentFiberOwnerName$2() || "A component",
                  props.type
                );
                didWarnCheckedDefaultChecked = true;
              }
              if (
                props.value !== undefined &&
                props.defaultValue !== undefined &&
                !didWarnValueDefaultValue
              ) {
                warning(
                  false,
                  "%s contains an input of type %s with both value and defaultValue props. " +
                    "Input elements must be either controlled or uncontrolled " +
                    "(specify either the value prop, or the defaultValue prop, but not " +
                    "both). Decide between using a controlled or uncontrolled input " +
                    "element and remove one of these props. More info: " +
                    "https://fb.me/react-controlled-components",
                  getCurrentFiberOwnerName$2() || "A component",
                  props.type
                );
                didWarnValueDefaultValue = true;
              }
            }

            var defaultValue = props.defaultValue;
            var node = element;
            node._wrapperState = {
              initialChecked:
                props.checked != null ? props.checked : props.defaultChecked,
              initialValue: props.value != null ? props.value : defaultValue,
              controlled: isControlled(props)
            };
          }

          function updateWrapper(element, props) {
            var node = element;
            {
              var controlled = isControlled(props);

              if (
                !node._wrapperState.controlled &&
                controlled &&
                !didWarnUncontrolledToControlled
              ) {
                warning(
                  false,
                  "A component is changing an uncontrolled input of type %s to be controlled. " +
                    "Input elements should not switch from uncontrolled to controlled (or vice versa). " +
                    "Decide between using a controlled or uncontrolled input " +
                    "element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s",
                  props.type,
                  getCurrentFiberStackAddendum$3()
                );
                didWarnUncontrolledToControlled = true;
              }
              if (
                node._wrapperState.controlled &&
                !controlled &&
                !didWarnControlledToUncontrolled
              ) {
                warning(
                  false,
                  "A component is changing a controlled input of type %s to be uncontrolled. " +
                    "Input elements should not switch from controlled to uncontrolled (or vice versa). " +
                    "Decide between using a controlled or uncontrolled input " +
                    "element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s",
                  props.type,
                  getCurrentFiberStackAddendum$3()
                );
                didWarnControlledToUncontrolled = true;
              }
            }

            var checked = props.checked;
            if (checked != null) {
              setValueForProperty(node, "checked", checked || false);
            }

            var value = props.value;
            if (value != null) {
              if (value === 0 && node.value === "") {
                node.value = "0";
                // Note: IE9 reports a number inputs as 'text', so check props instead.
              } else if (props.type === "number") {
                // Simulate `input.valueAsNumber`. IE9 does not support it
                var valueAsNumber = parseFloat(node.value) || 0;

                if (
                  // eslint-disable-next-line
                  value != valueAsNumber ||
                  // eslint-disable-next-line
                  (value == valueAsNumber && node.value != value)
                ) {
                  // Cast `value` to a string to ensure the value is set correctly. While
                  // browsers typically do this as necessary, jsdom doesn't.
                  node.value = "" + value;
                }
              } else if (node.value !== "" + value) {
                // Cast `value` to a string to ensure the value is set correctly. While
                // browsers typically do this as necessary, jsdom doesn't.
                node.value = "" + value;
              }
            } else {
              if (props.value == null && props.defaultValue != null) {
                // In Chrome, assigning defaultValue to certain input types triggers input validation.
                // For number inputs, the display value loses trailing decimal points. For email inputs,
                // Chrome raises "The specified value <x> is not a valid email address".
                //
                // Here we check to see if the defaultValue has actually changed, avoiding these problems
                // when the user is inputting text
                //
                // https://github.com/facebook/react/issues/7253
                if (node.defaultValue !== "" + props.defaultValue) {
                  node.defaultValue = "" + props.defaultValue;
                }
              }
              if (props.checked == null && props.defaultChecked != null) {
                node.defaultChecked = !!props.defaultChecked;
              }
            }
          }

          function postMountWrapper(element, props) {
            var node = element;

            // Detach value from defaultValue. We won't do anything if we're working on
            // submit or reset inputs as those values & defaultValues are linked. They
            // are not resetable nodes so this operation doesn't matter and actually
            // removes browser-default values (eg "Submit Query") when no value is
            // provided.

            switch (props.type) {
              case "submit":
              case "reset":
                break;
              case "color":
              case "date":
              case "datetime":
              case "datetime-local":
              case "month":
              case "time":
              case "week":
                // This fixes the no-show issue on iOS Safari and Android Chrome:
                // https://github.com/facebook/react/issues/7233
                node.value = "";
                node.value = node.defaultValue;
                break;
              default:
                node.value = node.value;
                break;
            }

            // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
            // this is needed to work around a chrome bug where setting defaultChecked
            // will sometimes influence the value of checked (even after detachment).
            // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
            // We need to temporarily unset name to avoid disrupting radio button groups.
            var name = node.name;
            if (name !== "") {
              node.name = "";
            }
            node.defaultChecked = !node.defaultChecked;
            node.defaultChecked = !node.defaultChecked;
            if (name !== "") {
              node.name = name;
            }
          }

          function restoreControlledState$1(element, props) {
            var node = element;
            updateWrapper(node, props);
            updateNamedCousins(node, props);
          }

          function updateNamedCousins(rootNode, props) {
            var name = props.name;
            if (props.type === "radio" && name != null) {
              var queryRoot = rootNode;

              while (queryRoot.parentNode) {
                queryRoot = queryRoot.parentNode;
              }

              // If `rootNode.form` was non-null, then we could try `form.elements`,
              // but that sometimes behaves strangely in IE8. We could also try using
              // `form.getElementsByName`, but that will only return direct children
              // and won't include inputs that use the HTML5 `form=` attribute. Since
              // the input might not even be in a form. It might not even be in the
              // document. Let's just use the local `querySelectorAll` to ensure we don't
              // miss anything.
              var group = queryRoot.querySelectorAll(
                "input[name=" + JSON.stringify("" + name) + '][type="radio"]'
              );

              for (var i = 0; i < group.length; i++) {
                var otherNode = group[i];
                if (
                  otherNode === rootNode ||
                  otherNode.form !== rootNode.form
                ) {
                  continue;
                }
                // This will throw if radio buttons rendered by different copies of React
                // and the same name are rendered into the same form (same as #1939).
                // That's probably okay; we don't support it just as we don't support
                // mixing React radio buttons with non-React ones.
                var otherProps = getFiberCurrentPropsFromNode$1(otherNode);
                !otherProps
                  ? invariant(
                      false,
                      "ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported."
                    )
                  : void 0;
                // If this is a controlled radio button group, forcing the input that
                // was previously checked to update will cause it to be come re-checked
                // as appropriate.
                updateWrapper(otherNode, otherProps);
              }
            }
          }

          function flattenChildren(children) {
            var content = "";

            // Flatten children and warn if they aren't strings or numbers;
            // invalid types are ignored.
            // We can silently skip them because invalid DOM nesting warning
            // catches these cases in Fiber.
            React.Children.forEach(children, function(child) {
              if (child == null) {
                return;
              }
              if (typeof child === "string" || typeof child === "number") {
                content += child;
              }
            });

            return content;
          }

          /**
           * Implements an <option> host component that warns when `selected` is set.
           */

          function validateProps(element, props) {
            // TODO (yungsters): Remove support for `selected` in <option>.
            {
              warning(
                props.selected == null,
                "Use the `defaultValue` or `value` props on <select> instead of " +
                  "setting `selected` on <option>."
              );
            }
          }

          function postMountWrapper$1(element, props) {
            // value="" should make a value attribute (#6219)
            if (props.value != null) {
              element.setAttribute("value", props.value);
            }
          }

          function getHostProps$1(element, props) {
            var hostProps = _assign({ children: undefined }, props);

            var content = flattenChildren(props.children);

            if (content) {
              hostProps.children = content;
            }

            return hostProps;
          }

          // TODO: direct imports like some-package/src/* are bad. Fix me.
          var getCurrentFiberOwnerName$3 =
            ReactDebugCurrentFiber.getCurrentFiberOwnerName;
          var getCurrentFiberStackAddendum$4 =
            ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

          {
            var didWarnValueDefaultValue$1 = false;
          }

          function getDeclarationErrorAddendum() {
            var ownerName = getCurrentFiberOwnerName$3();
            if (ownerName) {
              return "\n\nCheck the render method of `" + ownerName + "`.";
            }
            return "";
          }

          var valuePropNames = ["value", "defaultValue"];

          /**
           * Validation function for `value` and `defaultValue`.
           */
          function checkSelectPropTypes(props) {
            ReactControlledValuePropTypes.checkPropTypes(
              "select",
              props,
              getCurrentFiberStackAddendum$4
            );

            for (var i = 0; i < valuePropNames.length; i++) {
              var propName = valuePropNames[i];
              if (props[propName] == null) {
                continue;
              }
              var isArray = Array.isArray(props[propName]);
              if (props.multiple && !isArray) {
                warning(
                  false,
                  "The `%s` prop supplied to <select> must be an array if " +
                    "`multiple` is true.%s",
                  propName,
                  getDeclarationErrorAddendum()
                );
              } else if (!props.multiple && isArray) {
                warning(
                  false,
                  "The `%s` prop supplied to <select> must be a scalar " +
                    "value if `multiple` is false.%s",
                  propName,
                  getDeclarationErrorAddendum()
                );
              }
            }
          }

          function updateOptions(
            node,
            multiple,
            propValue,
            setDefaultSelected
          ) {
            var options = node.options;

            if (multiple) {
              var selectedValues = propValue;
              var selectedValue = {};
              for (var i = 0; i < selectedValues.length; i++) {
                // Prefix to avoid chaos with special keys.
                selectedValue["$" + selectedValues[i]] = true;
              }
              for (var _i = 0; _i < options.length; _i++) {
                var selected = selectedValue.hasOwnProperty(
                  "$" + options[_i].value
                );
                if (options[_i].selected !== selected) {
                  options[_i].selected = selected;
                }
                if (selected && setDefaultSelected) {
                  options[_i].defaultSelected = true;
                }
              }
            } else {
              // Do not set `select.value` as exact behavior isn't consistent across all
              // browsers for all cases.
              var _selectedValue = "" + propValue;
              var defaultSelected = null;
              for (var _i2 = 0; _i2 < options.length; _i2++) {
                if (options[_i2].value === _selectedValue) {
                  options[_i2].selected = true;
                  if (setDefaultSelected) {
                    options[_i2].defaultSelected = true;
                  }
                  return;
                }
                if (defaultSelected === null && !options[_i2].disabled) {
                  defaultSelected = options[_i2];
                }
              }
              if (defaultSelected !== null) {
                defaultSelected.selected = true;
              }
            }
          }

          /**
           * Implements a <select> host component that allows optionally setting the
           * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
           * stringable. If `multiple` is true, the prop must be an array of stringables.
           *
           * If `value` is not supplied (or null/undefined), user actions that change the
           * selected option will trigger updates to the rendered options.
           *
           * If it is supplied (and not null/undefined), the rendered options will not
           * update in response to user actions. Instead, the `value` prop must change in
           * order for the rendered options to update.
           *
           * If `defaultValue` is provided, any options with the supplied values will be
           * selected.
           */

          function getHostProps$2(element, props) {
            return _assign({}, props, {
              value: undefined
            });
          }

          function initWrapperState$1(element, props) {
            var node = element;
            {
              checkSelectPropTypes(props);
            }

            var value = props.value;
            node._wrapperState = {
              initialValue: value != null ? value : props.defaultValue,
              wasMultiple: !!props.multiple
            };

            {
              if (
                props.value !== undefined &&
                props.defaultValue !== undefined &&
                !didWarnValueDefaultValue$1
              ) {
                warning(
                  false,
                  "Select elements must be either controlled or uncontrolled " +
                    "(specify either the value prop, or the defaultValue prop, but not " +
                    "both). Decide between using a controlled or uncontrolled select " +
                    "element and remove one of these props. More info: " +
                    "https://fb.me/react-controlled-components"
                );
                didWarnValueDefaultValue$1 = true;
              }
            }
          }

          function postMountWrapper$2(element, props) {
            var node = element;
            node.multiple = !!props.multiple;
            var value = props.value;
            if (value != null) {
              updateOptions(node, !!props.multiple, value, false);
            } else if (props.defaultValue != null) {
              updateOptions(node, !!props.multiple, props.defaultValue, true);
            }
          }

          function postUpdateWrapper(element, props) {
            var node = element;
            // After the initial mount, we control selected-ness manually so don't pass
            // this value down
            node._wrapperState.initialValue = undefined;

            var wasMultiple = node._wrapperState.wasMultiple;
            node._wrapperState.wasMultiple = !!props.multiple;

            var value = props.value;
            if (value != null) {
              updateOptions(node, !!props.multiple, value, false);
            } else if (wasMultiple !== !!props.multiple) {
              // For simplicity, reapply `defaultValue` if `multiple` is toggled.
              if (props.defaultValue != null) {
                updateOptions(node, !!props.multiple, props.defaultValue, true);
              } else {
                // Revert the select back to its default unselected state.
                updateOptions(
                  node,
                  !!props.multiple,
                  props.multiple ? [] : "",
                  false
                );
              }
            }
          }

          function restoreControlledState$2(element, props) {
            var node = element;
            var value = props.value;

            if (value != null) {
              updateOptions(node, !!props.multiple, value, false);
            }
          }

          // TODO: direct imports like some-package/src/* are bad. Fix me.
          var getCurrentFiberStackAddendum$5 =
            ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

          var didWarnValDefaultVal = false;

          /**
           * Implements a <textarea> host component that allows setting `value`, and
           * `defaultValue`. This differs from the traditional DOM API because value is
           * usually set as PCDATA children.
           *
           * If `value` is not supplied (or null/undefined), user actions that affect the
           * value will trigger updates to the element.
           *
           * If `value` is supplied (and not null/undefined), the rendered element will
           * not trigger updates to the element. Instead, the `value` prop must change in
           * order for the rendered element to be updated.
           *
           * The rendered element will be initialized with an empty value, the prop
           * `defaultValue` if specified, or the children content (deprecated).
           */

          function getHostProps$3(element, props) {
            var node = element;
            !(props.dangerouslySetInnerHTML == null)
              ? invariant(
                  false,
                  "`dangerouslySetInnerHTML` does not make sense on <textarea>."
                )
              : void 0;

            // Always set children to the same thing. In IE9, the selection range will
            // get reset if `textContent` is mutated.  We could add a check in setTextContent
            // to only set the value if/when the value differs from the node value (which would
            // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
            // solution. The value can be a boolean or object so that's why it's forced
            // to be a string.
            var hostProps = _assign({}, props, {
              value: undefined,
              defaultValue: undefined,
              children: "" + node._wrapperState.initialValue
            });

            return hostProps;
          }

          function initWrapperState$2(element, props) {
            var node = element;
            {
              ReactControlledValuePropTypes.checkPropTypes(
                "textarea",
                props,
                getCurrentFiberStackAddendum$5
              );
              if (
                props.value !== undefined &&
                props.defaultValue !== undefined &&
                !didWarnValDefaultVal
              ) {
                warning(
                  false,
                  "Textarea elements must be either controlled or uncontrolled " +
                    "(specify either the value prop, or the defaultValue prop, but not " +
                    "both). Decide between using a controlled or uncontrolled textarea " +
                    "and remove one of these props. More info: " +
                    "https://fb.me/react-controlled-components"
                );
                didWarnValDefaultVal = true;
              }
            }

            var value = props.value;
            var initialValue = value;

            // Only bother fetching default value if we're going to use it
            if (value == null) {
              var defaultValue = props.defaultValue;
              // TODO (yungsters): Remove support for children content in <textarea>.
              var children = props.children;
              if (children != null) {
                {
                  warning(
                    false,
                    "Use the `defaultValue` or `value` props instead of setting " +
                      "children on <textarea>."
                  );
                }
                !(defaultValue == null)
                  ? invariant(
                      false,
                      "If you supply `defaultValue` on a <textarea>, do not pass children."
                    )
                  : void 0;
                if (Array.isArray(children)) {
                  !(children.length <= 1)
                    ? invariant(
                        false,
                        "<textarea> can only have at most one child."
                      )
                    : void 0;
                  children = children[0];
                }

                defaultValue = "" + children;
              }
              if (defaultValue == null) {
                defaultValue = "";
              }
              initialValue = defaultValue;
            }

            node._wrapperState = {
              initialValue: "" + initialValue
            };
          }

          function updateWrapper$1(element, props) {
            var node = element;
            var value = props.value;
            if (value != null) {
              // Cast `value` to a string to ensure the value is set correctly. While
              // browsers typically do this as necessary, jsdom doesn't.
              var newValue = "" + value;

              // To avoid side effects (such as losing text selection), only set value if changed
              if (newValue !== node.value) {
                node.value = newValue;
              }
              if (props.defaultValue == null) {
                node.defaultValue = newValue;
              }
            }
            if (props.defaultValue != null) {
              node.defaultValue = props.defaultValue;
            }
          }

          function postMountWrapper$3(element, props) {
            var node = element;
            // This is in postMount because we need access to the DOM node, which is not
            // available until after the component has mounted.
            var textContent = node.textContent;

            // Only set node.value if textContent is equal to the expected
            // initial value. In IE10/IE11 there is a bug where the placeholder attribute
            // will populate textContent as well.
            // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
            if (textContent === node._wrapperState.initialValue) {
              node.value = textContent;
            }
          }

          function restoreControlledState$3(element, props) {
            // DOM component is still mounted; update
            updateWrapper$1(element, props);
          }

          var HTML_NAMESPACE$1 = "http://www.w3.org/1999/xhtml";
          var MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
          var SVG_NAMESPACE = "http://www.w3.org/2000/svg";

          var Namespaces = {
            html: HTML_NAMESPACE$1,
            mathml: MATH_NAMESPACE,
            svg: SVG_NAMESPACE
          };

          // Assumes there is no parent namespace.
          function getIntrinsicNamespace(type) {
            switch (type) {
              case "svg":
                return SVG_NAMESPACE;
              case "math":
                return MATH_NAMESPACE;
              default:
                return HTML_NAMESPACE$1;
            }
          }

          function getChildNamespace(parentNamespace, type) {
            if (
              parentNamespace == null ||
              parentNamespace === HTML_NAMESPACE$1
            ) {
              // No (or default) parent namespace: potential entry point.
              return getIntrinsicNamespace(type);
            }
            if (parentNamespace === SVG_NAMESPACE && type === "foreignObject") {
              // We're leaving SVG.
              return HTML_NAMESPACE$1;
            }
            // By default, pass namespace below.
            return parentNamespace;
          }

          /* globals MSApp */

          /**
           * Create a function which has 'unsafe' privileges (required by windows8 apps)
           */
          var createMicrosoftUnsafeLocalFunction = function(func) {
            if (typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction) {
              return function(arg0, arg1, arg2, arg3) {
                MSApp.execUnsafeLocalFunction(function() {
                  return func(arg0, arg1, arg2, arg3);
                });
              };
            } else {
              return func;
            }
          };

          // SVG temp container for IE lacking innerHTML
          var reusableSVGContainer = void 0;

          /**
           * Set the innerHTML property of a node
           *
           * @param {DOMElement} node
           * @param {string} html
           * @internal
           */
          var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(
            node,
            html
          ) {
            // IE does not have innerHTML for SVG nodes, so instead we inject the
            // new markup in a temp node and then move the child nodes across into
            // the target node

            if (
              node.namespaceURI === Namespaces.svg &&
              !("innerHTML" in node)
            ) {
              reusableSVGContainer =
                reusableSVGContainer || document.createElement("div");
              reusableSVGContainer.innerHTML = "<svg>" + html + "</svg>";
              var svgNode = reusableSVGContainer.firstChild;
              while (node.firstChild) {
                node.removeChild(node.firstChild);
              }
              while (svgNode.firstChild) {
                node.appendChild(svgNode.firstChild);
              }
            } else {
              node.innerHTML = html;
            }
          });

          // code copied and modified from escape-html
          /**
           * Module variables.
           * @private
           */

          var matchHtmlRegExp = /["'&<>]/;

          /**
           * Escape special characters in the given string of html.
           *
           * @param  {string} string The string to escape for inserting into HTML
           * @return {string}
           * @public
           */

          function escapeHtml(string) {
            var str = "" + string;
            var match = matchHtmlRegExp.exec(str);

            if (!match) {
              return str;
            }

            var escape;
            var html = "";
            var index = 0;
            var lastIndex = 0;

            for (index = match.index; index < str.length; index++) {
              switch (str.charCodeAt(index)) {
                case 34:
                  // "
                  escape = "&quot;";
                  break;
                case 38:
                  // &
                  escape = "&amp;";
                  break;
                case 39:
                  // '
                  escape = "&#x27;"; // modified from escape-html; used to be '&#39'
                  break;
                case 60:
                  // <
                  escape = "&lt;";
                  break;
                case 62:
                  // >
                  escape = "&gt;";
                  break;
                default:
                  continue;
              }

              if (lastIndex !== index) {
                html += str.substring(lastIndex, index);
              }

              lastIndex = index + 1;
              html += escape;
            }

            return lastIndex !== index
              ? html + str.substring(lastIndex, index)
              : html;
          }
          // end code copied and modified from escape-html

          /**
           * Escapes text to prevent scripting attacks.
           *
           * @param {*} text Text value to escape.
           * @return {string} An escaped string.
           */
          function escapeTextContentForBrowser(text) {
            if (typeof text === "boolean" || typeof text === "number") {
              // this shortcircuit helps perf for types that we know will never have
              // special characters, especially given that this function is used often
              // for numeric dom ids.
              return "" + text;
            }
            return escapeHtml(text);
          }

          /**
           * Set the textContent property of a node, ensuring that whitespace is preserved
           * even in IE8. innerText is a poor substitute for textContent and, among many
           * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
           * as it should.
           *
           * @param {DOMElement} node
           * @param {string} text
           * @internal
           */
          var setTextContent = function(node, text) {
            if (text) {
              var firstChild = node.firstChild;

              if (
                firstChild &&
                firstChild === node.lastChild &&
                firstChild.nodeType === TEXT_NODE
              ) {
                firstChild.nodeValue = text;
                return;
              }
            }
            node.textContent = text;
          };

          if (ExecutionEnvironment.canUseDOM) {
            if (!("textContent" in document.documentElement)) {
              setTextContent = function(node, text) {
                if (node.nodeType === TEXT_NODE) {
                  node.nodeValue = text;
                  return;
                }
                setInnerHTML(node, escapeTextContentForBrowser(text));
              };
            }
          }

          var setTextContent$1 = setTextContent;

          /**
           * CSS properties which accept numbers but are not in units of "px".
           */
          var isUnitlessNumber = {
            animationIterationCount: true,
            borderImageOutset: true,
            borderImageSlice: true,
            borderImageWidth: true,
            boxFlex: true,
            boxFlexGroup: true,
            boxOrdinalGroup: true,
            columnCount: true,
            columns: true,
            flex: true,
            flexGrow: true,
            flexPositive: true,
            flexShrink: true,
            flexNegative: true,
            flexOrder: true,
            gridRow: true,
            gridRowEnd: true,
            gridRowSpan: true,
            gridRowStart: true,
            gridColumn: true,
            gridColumnEnd: true,
            gridColumnSpan: true,
            gridColumnStart: true,
            fontWeight: true,
            lineClamp: true,
            lineHeight: true,
            opacity: true,
            order: true,
            orphans: true,
            tabSize: true,
            widows: true,
            zIndex: true,
            zoom: true,

            // SVG-related properties
            fillOpacity: true,
            floodOpacity: true,
            stopOpacity: true,
            strokeDasharray: true,
            strokeDashoffset: true,
            strokeMiterlimit: true,
            strokeOpacity: true,
            strokeWidth: true
          };

          /**
           * @param {string} prefix vendor-specific prefix, eg: Webkit
           * @param {string} key style name, eg: transitionDuration
           * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
           * WebkitTransitionDuration
           */
          function prefixKey(prefix, key) {
            return prefix + key.charAt(0).toUpperCase() + key.substring(1);
          }

          /**
           * Support style names that may come passed in prefixed by adding permutations
           * of vendor prefixes.
           */
          var prefixes = ["Webkit", "ms", "Moz", "O"];

          // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
          // infinite loop, because it iterates over the newly added props too.
          Object.keys(isUnitlessNumber).forEach(function(prop) {
            prefixes.forEach(function(prefix) {
              isUnitlessNumber[prefixKey(prefix, prop)] =
                isUnitlessNumber[prop];
            });
          });

          /**
           * Convert a value into the proper css writable value. The style name `name`
           * should be logical (no hyphens), as specified
           * in `CSSProperty.isUnitlessNumber`.
           *
           * @param {string} name CSS property name such as `topMargin`.
           * @param {*} value CSS property value such as `10px`.
           * @return {string} Normalized style value with dimensions applied.
           */
          function dangerousStyleValue(name, value, isCustomProperty) {
            // Note that we've removed escapeTextForBrowser() calls here since the
            // whole string will be escaped when the attribute is injected into
            // the markup. If you provide unsafe user data here they can inject
            // arbitrary CSS which may be problematic (I couldn't repro this):
            // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
            // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
            // This is not an XSS hole but instead a potential CSS injection issue
            // which has lead to a greater discussion about how we're going to
            // trust URLs moving forward. See #2115901

            var isEmpty =
              value == null || typeof value === "boolean" || value === "";
            if (isEmpty) {
              return "";
            }

            if (
              !isCustomProperty &&
              typeof value === "number" &&
              value !== 0 &&
              !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])
            ) {
              return value + "px"; // Presumes implicit 'px' suffix for unitless numbers
            }

            return ("" + value).trim();
          }

          var warnValidStyle = emptyFunction$1;

          {
            // 'msTransform' is correct, but the other prefixes should be capitalized
            var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

            // style values shouldn't contain a semicolon
            var badStyleValueWithSemicolonPattern = /;\s*$/;

            var warnedStyleNames = {};
            var warnedStyleValues = {};
            var warnedForNaNValue = false;
            var warnedForInfinityValue = false;

            var warnHyphenatedStyleName = function(name, getStack) {
              if (
                warnedStyleNames.hasOwnProperty(name) &&
                warnedStyleNames[name]
              ) {
                return;
              }

              warnedStyleNames[name] = true;
              warning(
                false,
                "Unsupported style property %s. Did you mean %s?%s",
                name,
                camelizeStyleName(name),
                getStack()
              );
            };

            var warnBadVendoredStyleName = function(name, getStack) {
              if (
                warnedStyleNames.hasOwnProperty(name) &&
                warnedStyleNames[name]
              ) {
                return;
              }

              warnedStyleNames[name] = true;
              warning(
                false,
                "Unsupported vendor-prefixed style property %s. Did you mean %s?%s",
                name,
                name.charAt(0).toUpperCase() + name.slice(1),
                getStack()
              );
            };

            var warnStyleValueWithSemicolon = function(name, value, getStack) {
              if (
                warnedStyleValues.hasOwnProperty(value) &&
                warnedStyleValues[value]
              ) {
                return;
              }

              warnedStyleValues[value] = true;
              warning(
                false,
                "Style property values shouldn't contain a semicolon. " +
                  'Try "%s: %s" instead.%s',
                name,
                value.replace(badStyleValueWithSemicolonPattern, ""),
                getStack()
              );
            };

            var warnStyleValueIsNaN = function(name, value, getStack) {
              if (warnedForNaNValue) {
                return;
              }

              warnedForNaNValue = true;
              warning(
                false,
                "`NaN` is an invalid value for the `%s` css style property.%s",
                name,
                getStack()
              );
            };

            var warnStyleValueIsInfinity = function(name, value, getStack) {
              if (warnedForInfinityValue) {
                return;
              }

              warnedForInfinityValue = true;
              warning(
                false,
                "`Infinity` is an invalid value for the `%s` css style property.%s",
                name,
                getStack()
              );
            };

            warnValidStyle = function(name, value, getStack) {
              if (name.indexOf("-") > -1) {
                warnHyphenatedStyleName(name, getStack);
              } else if (badVendoredStyleNamePattern.test(name)) {
                warnBadVendoredStyleName(name, getStack);
              } else if (badStyleValueWithSemicolonPattern.test(value)) {
                warnStyleValueWithSemicolon(name, value, getStack);
              }

              if (typeof value === "number") {
                if (isNaN(value)) {
                  warnStyleValueIsNaN(name, value, getStack);
                } else if (!isFinite(value)) {
                  warnStyleValueIsInfinity(name, value, getStack);
                }
              }
            };
          }

          var warnValidStyle$1 = warnValidStyle;

          /**
           * Operations for dealing with CSS properties.
           */

          /**
           * This creates a string that is expected to be equivalent to the style
           * attribute generated by server-side rendering. It by-passes warnings and
           * security checks so it's not safe to use this value for anything other than
           * comparison. It is only used in DEV for SSR validation.
           */
          function createDangerousStringForStyles(styles) {
            {
              var serialized = "";
              var delimiter = "";
              for (var styleName in styles) {
                if (!styles.hasOwnProperty(styleName)) {
                  continue;
                }
                var styleValue = styles[styleName];
                if (styleValue != null) {
                  var isCustomProperty = styleName.indexOf("--") === 0;
                  serialized += delimiter + hyphenateStyleName(styleName) + ":";
                  serialized += dangerousStyleValue(
                    styleName,
                    styleValue,
                    isCustomProperty
                  );

                  delimiter = ";";
                }
              }
              return serialized || null;
            }
          }

          /**
           * Sets the value for multiple styles on a node.  If a value is specified as
           * '' (empty string), the corresponding style property will be unset.
           *
           * @param {DOMElement} node
           * @param {object} styles
           */
          function setValueForStyles(node, styles, getStack) {
            var style = node.style;
            for (var styleName in styles) {
              if (!styles.hasOwnProperty(styleName)) {
                continue;
              }
              var isCustomProperty = styleName.indexOf("--") === 0;
              {
                if (!isCustomProperty) {
                  warnValidStyle$1(styleName, styles[styleName], getStack);
                }
              }
              var styleValue = dangerousStyleValue(
                styleName,
                styles[styleName],
                isCustomProperty
              );
              if (styleName === "float") {
                styleName = "cssFloat";
              }
              if (isCustomProperty) {
                style.setProperty(styleName, styleValue);
              } else {
                style[styleName] = styleValue;
              }
            }
          }

          // For HTML, certain tags should omit their close tag. We keep a whitelist for
          // those special-case tags.

          var omittedCloseTags = {
            area: true,
            base: true,
            br: true,
            col: true,
            embed: true,
            hr: true,
            img: true,
            input: true,
            keygen: true,
            link: true,
            meta: true,
            param: true,
            source: true,
            track: true,
            wbr: true
          };

          // For HTML, certain tags cannot have children. This has the same purpose as
          // `omittedCloseTags` except that `menuitem` should still have its closing tag.

          var voidElementTags = _assign(
            {
              menuitem: true
            },
            omittedCloseTags
          );

          var HTML$1 = "__html";

          function assertValidProps(tag, props, getStack) {
            if (!props) {
              return;
            }
            // Note the use of `==` which checks for null or undefined.
            if (voidElementTags[tag]) {
              !(props.children == null && props.dangerouslySetInnerHTML == null)
                ? invariant(
                    false,
                    "%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s",
                    tag,
                    getStack()
                  )
                : void 0;
            }
            if (props.dangerouslySetInnerHTML != null) {
              !(props.children == null)
                ? invariant(
                    false,
                    "Can only set one of `children` or `props.dangerouslySetInnerHTML`."
                  )
                : void 0;
              !(
                typeof props.dangerouslySetInnerHTML === "object" &&
                HTML$1 in props.dangerouslySetInnerHTML
              )
                ? invariant(
                    false,
                    "`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information."
                  )
                : void 0;
            }
            {
              warning(
                props.suppressContentEditableWarning ||
                  !props.contentEditable ||
                  props.children == null,
                "A component is `contentEditable` and contains `children` managed by " +
                  "React. It is now your responsibility to guarantee that none of " +
                  "those nodes are unexpectedly modified or duplicated. This is " +
                  "probably not intentional.%s",
                getStack()
              );
            }
            !(props.style == null || typeof props.style === "object")
              ? invariant(
                  false,
                  "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.%s",
                  getStack()
                )
              : void 0;
          }

          function isCustomComponent(tagName, props) {
            if (tagName.indexOf("-") === -1) {
              return typeof props.is === "string";
            }
            switch (tagName) {
              // These are reserved SVG and MathML elements.
              // We don't mind this whitelist too much because we expect it to never grow.
              // The alternative is to track the namespace in a few places which is convoluted.
              // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
              case "annotation-xml":
              case "color-profile":
              case "font-face":
              case "font-face-src":
              case "font-face-uri":
              case "font-face-format":
              case "font-face-name":
              case "missing-glyph":
                return false;
              default:
                return true;
            }
          }

          var ariaProperties = {
            "aria-current": 0, // state
            "aria-details": 0,
            "aria-disabled": 0, // state
            "aria-hidden": 0, // state
            "aria-invalid": 0, // state
            "aria-keyshortcuts": 0,
            "aria-label": 0,
            "aria-roledescription": 0,
            // Widget Attributes
            "aria-autocomplete": 0,
            "aria-checked": 0,
            "aria-expanded": 0,
            "aria-haspopup": 0,
            "aria-level": 0,
            "aria-modal": 0,
            "aria-multiline": 0,
            "aria-multiselectable": 0,
            "aria-orientation": 0,
            "aria-placeholder": 0,
            "aria-pressed": 0,
            "aria-readonly": 0,
            "aria-required": 0,
            "aria-selected": 0,
            "aria-sort": 0,
            "aria-valuemax": 0,
            "aria-valuemin": 0,
            "aria-valuenow": 0,
            "aria-valuetext": 0,
            // Live Region Attributes
            "aria-atomic": 0,
            "aria-busy": 0,
            "aria-live": 0,
            "aria-relevant": 0,
            // Drag-and-Drop Attributes
            "aria-dropeffect": 0,
            "aria-grabbed": 0,
            // Relationship Attributes
            "aria-activedescendant": 0,
            "aria-colcount": 0,
            "aria-colindex": 0,
            "aria-colspan": 0,
            "aria-controls": 0,
            "aria-describedby": 0,
            "aria-errormessage": 0,
            "aria-flowto": 0,
            "aria-labelledby": 0,
            "aria-owns": 0,
            "aria-posinset": 0,
            "aria-rowcount": 0,
            "aria-rowindex": 0,
            "aria-rowspan": 0,
            "aria-setsize": 0
          };

          var warnedProperties = {};
          var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
          var rARIACamel = new RegExp(
            "^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$"
          );

          var hasOwnProperty = Object.prototype.hasOwnProperty;

          function getStackAddendum() {
            var stack = ReactDebugCurrentFrame.getStackAddendum();
            return stack != null ? stack : "";
          }

          function validateProperty(tagName, name) {
            if (
              hasOwnProperty.call(warnedProperties, name) &&
              warnedProperties[name]
            ) {
              return true;
            }

            if (rARIACamel.test(name)) {
              var ariaName = "aria-" + name.slice(4).toLowerCase();
              var correctName = ariaProperties.hasOwnProperty(ariaName)
                ? ariaName
                : null;

              // If this is an aria-* attribute, but is not listed in the known DOM
              // DOM properties, then it is an invalid aria-* attribute.
              if (correctName == null) {
                warning(
                  false,
                  "Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.%s",
                  name,
                  getStackAddendum()
                );
                warnedProperties[name] = true;
                return true;
              }
              // aria-* attributes should be lowercase; suggest the lowercase version.
              if (name !== correctName) {
                warning(
                  false,
                  "Invalid ARIA attribute `%s`. Did you mean `%s`?%s",
                  name,
                  correctName,
                  getStackAddendum()
                );
                warnedProperties[name] = true;
                return true;
              }
            }

            if (rARIA.test(name)) {
              var lowerCasedName = name.toLowerCase();
              var standardName = ariaProperties.hasOwnProperty(lowerCasedName)
                ? lowerCasedName
                : null;

              // If this is an aria-* attribute, but is not listed in the known DOM
              // DOM properties, then it is an invalid aria-* attribute.
              if (standardName == null) {
                warnedProperties[name] = true;
                return false;
              }
              // aria-* attributes should be lowercase; suggest the lowercase version.
              if (name !== standardName) {
                warning(
                  false,
                  "Unknown ARIA attribute `%s`. Did you mean `%s`?%s",
                  name,
                  standardName,
                  getStackAddendum()
                );
                warnedProperties[name] = true;
                return true;
              }
            }

            return true;
          }

          function warnInvalidARIAProps(type, props) {
            var invalidProps = [];

            for (var key in props) {
              var isValid = validateProperty(type, key);
              if (!isValid) {
                invalidProps.push(key);
              }
            }

            var unknownPropString = invalidProps
              .map(function(prop) {
                return "`" + prop + "`";
              })
              .join(", ");

            if (invalidProps.length === 1) {
              warning(
                false,
                "Invalid aria prop %s on <%s> tag. " +
                  "For details, see https://fb.me/invalid-aria-prop%s",
                unknownPropString,
                type,
                getStackAddendum()
              );
            } else if (invalidProps.length > 1) {
              warning(
                false,
                "Invalid aria props %s on <%s> tag. " +
                  "For details, see https://fb.me/invalid-aria-prop%s",
                unknownPropString,
                type,
                getStackAddendum()
              );
            }
          }

          function validateProperties(type, props) {
            if (isCustomComponent(type, props)) {
              return;
            }
            warnInvalidARIAProps(type, props);
          }

          var didWarnValueNull = false;

          function getStackAddendum$1() {
            var stack = ReactDebugCurrentFrame.getStackAddendum();
            return stack != null ? stack : "";
          }

          function validateProperties$1(type, props) {
            if (type !== "input" && type !== "textarea" && type !== "select") {
              return;
            }

            if (props != null && props.value === null && !didWarnValueNull) {
              didWarnValueNull = true;
              if (type === "select" && props.multiple) {
                warning(
                  false,
                  "`value` prop on `%s` should not be null. " +
                    "Consider using an empty array when `multiple` is set to `true` " +
                    "to clear the component or `undefined` for uncontrolled components.%s",
                  type,
                  getStackAddendum$1()
                );
              } else {
                warning(
                  false,
                  "`value` prop on `%s` should not be null. " +
                    "Consider using an empty string to clear the component or `undefined` " +
                    "for uncontrolled components.%s",
                  type,
                  getStackAddendum$1()
                );
              }
            }
          }

          // When adding attributes to the HTML or SVG whitelist, be sure to
          // also add them to this module to ensure casing and incorrect name
          // warnings.
          var possibleStandardNames = {
            // HTML
            accept: "accept",
            acceptcharset: "acceptCharset",
            "accept-charset": "acceptCharset",
            accesskey: "accessKey",
            action: "action",
            allowfullscreen: "allowFullScreen",
            alt: "alt",
            as: "as",
            async: "async",
            autocapitalize: "autoCapitalize",
            autocomplete: "autoComplete",
            autocorrect: "autoCorrect",
            autofocus: "autoFocus",
            autoplay: "autoPlay",
            autosave: "autoSave",
            capture: "capture",
            cellpadding: "cellPadding",
            cellspacing: "cellSpacing",
            challenge: "challenge",
            charset: "charSet",
            checked: "checked",
            children: "children",
            cite: "cite",
            class: "className",
            classid: "classID",
            classname: "className",
            cols: "cols",
            colspan: "colSpan",
            content: "content",
            contenteditable: "contentEditable",
            contextmenu: "contextMenu",
            controls: "controls",
            controlslist: "controlsList",
            coords: "coords",
            crossorigin: "crossOrigin",
            dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
            data: "data",
            datetime: "dateTime",
            default: "default",
            defaultchecked: "defaultChecked",
            defaultvalue: "defaultValue",
            defer: "defer",
            dir: "dir",
            disabled: "disabled",
            download: "download",
            draggable: "draggable",
            enctype: "encType",
            for: "htmlFor",
            form: "form",
            formmethod: "formMethod",
            formaction: "formAction",
            formenctype: "formEncType",
            formnovalidate: "formNoValidate",
            formtarget: "formTarget",
            frameborder: "frameBorder",
            headers: "headers",
            height: "height",
            hidden: "hidden",
            high: "high",
            href: "href",
            hreflang: "hrefLang",
            htmlfor: "htmlFor",
            httpequiv: "httpEquiv",
            "http-equiv": "httpEquiv",
            icon: "icon",
            id: "id",
            innerhtml: "innerHTML",
            inputmode: "inputMode",
            integrity: "integrity",
            is: "is",
            itemid: "itemID",
            itemprop: "itemProp",
            itemref: "itemRef",
            itemscope: "itemScope",
            itemtype: "itemType",
            keyparams: "keyParams",
            keytype: "keyType",
            kind: "kind",
            label: "label",
            lang: "lang",
            list: "list",
            loop: "loop",
            low: "low",
            manifest: "manifest",
            marginwidth: "marginWidth",
            marginheight: "marginHeight",
            max: "max",
            maxlength: "maxLength",
            media: "media",
            mediagroup: "mediaGroup",
            method: "method",
            min: "min",
            minlength: "minLength",
            multiple: "multiple",
            muted: "muted",
            name: "name",
            nonce: "nonce",
            novalidate: "noValidate",
            open: "open",
            optimum: "optimum",
            pattern: "pattern",
            placeholder: "placeholder",
            playsinline: "playsInline",
            poster: "poster",
            preload: "preload",
            profile: "profile",
            radiogroup: "radioGroup",
            readonly: "readOnly",
            referrerpolicy: "referrerPolicy",
            rel: "rel",
            required: "required",
            reversed: "reversed",
            role: "role",
            rows: "rows",
            rowspan: "rowSpan",
            sandbox: "sandbox",
            scope: "scope",
            scoped: "scoped",
            scrolling: "scrolling",
            seamless: "seamless",
            selected: "selected",
            shape: "shape",
            size: "size",
            sizes: "sizes",
            span: "span",
            spellcheck: "spellCheck",
            src: "src",
            srcdoc: "srcDoc",
            srclang: "srcLang",
            srcset: "srcSet",
            start: "start",
            step: "step",
            style: "style",
            summary: "summary",
            tabindex: "tabIndex",
            target: "target",
            title: "title",
            type: "type",
            usemap: "useMap",
            value: "value",
            width: "width",
            wmode: "wmode",
            wrap: "wrap",

            // SVG
            about: "about",
            accentheight: "accentHeight",
            "accent-height": "accentHeight",
            accumulate: "accumulate",
            additive: "additive",
            alignmentbaseline: "alignmentBaseline",
            "alignment-baseline": "alignmentBaseline",
            allowreorder: "allowReorder",
            alphabetic: "alphabetic",
            amplitude: "amplitude",
            arabicform: "arabicForm",
            "arabic-form": "arabicForm",
            ascent: "ascent",
            attributename: "attributeName",
            attributetype: "attributeType",
            autoreverse: "autoReverse",
            azimuth: "azimuth",
            basefrequency: "baseFrequency",
            baselineshift: "baselineShift",
            "baseline-shift": "baselineShift",
            baseprofile: "baseProfile",
            bbox: "bbox",
            begin: "begin",
            bias: "bias",
            by: "by",
            calcmode: "calcMode",
            capheight: "capHeight",
            "cap-height": "capHeight",
            clip: "clip",
            clippath: "clipPath",
            "clip-path": "clipPath",
            clippathunits: "clipPathUnits",
            cliprule: "clipRule",
            "clip-rule": "clipRule",
            color: "color",
            colorinterpolation: "colorInterpolation",
            "color-interpolation": "colorInterpolation",
            colorinterpolationfilters: "colorInterpolationFilters",
            "color-interpolation-filters": "colorInterpolationFilters",
            colorprofile: "colorProfile",
            "color-profile": "colorProfile",
            colorrendering: "colorRendering",
            "color-rendering": "colorRendering",
            contentscripttype: "contentScriptType",
            contentstyletype: "contentStyleType",
            cursor: "cursor",
            cx: "cx",
            cy: "cy",
            d: "d",
            datatype: "datatype",
            decelerate: "decelerate",
            descent: "descent",
            diffuseconstant: "diffuseConstant",
            direction: "direction",
            display: "display",
            divisor: "divisor",
            dominantbaseline: "dominantBaseline",
            "dominant-baseline": "dominantBaseline",
            dur: "dur",
            dx: "dx",
            dy: "dy",
            edgemode: "edgeMode",
            elevation: "elevation",
            enablebackground: "enableBackground",
            "enable-background": "enableBackground",
            end: "end",
            exponent: "exponent",
            externalresourcesrequired: "externalResourcesRequired",
            fill: "fill",
            fillopacity: "fillOpacity",
            "fill-opacity": "fillOpacity",
            fillrule: "fillRule",
            "fill-rule": "fillRule",
            filter: "filter",
            filterres: "filterRes",
            filterunits: "filterUnits",
            floodopacity: "floodOpacity",
            "flood-opacity": "floodOpacity",
            floodcolor: "floodColor",
            "flood-color": "floodColor",
            focusable: "focusable",
            fontfamily: "fontFamily",
            "font-family": "fontFamily",
            fontsize: "fontSize",
            "font-size": "fontSize",
            fontsizeadjust: "fontSizeAdjust",
            "font-size-adjust": "fontSizeAdjust",
            fontstretch: "fontStretch",
            "font-stretch": "fontStretch",
            fontstyle: "fontStyle",
            "font-style": "fontStyle",
            fontvariant: "fontVariant",
            "font-variant": "fontVariant",
            fontweight: "fontWeight",
            "font-weight": "fontWeight",
            format: "format",
            from: "from",
            fx: "fx",
            fy: "fy",
            g1: "g1",
            g2: "g2",
            glyphname: "glyphName",
            "glyph-name": "glyphName",
            glyphorientationhorizontal: "glyphOrientationHorizontal",
            "glyph-orientation-horizontal": "glyphOrientationHorizontal",
            glyphorientationvertical: "glyphOrientationVertical",
            "glyph-orientation-vertical": "glyphOrientationVertical",
            glyphref: "glyphRef",
            gradienttransform: "gradientTransform",
            gradientunits: "gradientUnits",
            hanging: "hanging",
            horizadvx: "horizAdvX",
            "horiz-adv-x": "horizAdvX",
            horizoriginx: "horizOriginX",
            "horiz-origin-x": "horizOriginX",
            ideographic: "ideographic",
            imagerendering: "imageRendering",
            "image-rendering": "imageRendering",
            in2: "in2",
            in: "in",
            inlist: "inlist",
            intercept: "intercept",
            k1: "k1",
            k2: "k2",
            k3: "k3",
            k4: "k4",
            k: "k",
            kernelmatrix: "kernelMatrix",
            kernelunitlength: "kernelUnitLength",
            kerning: "kerning",
            keypoints: "keyPoints",
            keysplines: "keySplines",
            keytimes: "keyTimes",
            lengthadjust: "lengthAdjust",
            letterspacing: "letterSpacing",
            "letter-spacing": "letterSpacing",
            lightingcolor: "lightingColor",
            "lighting-color": "lightingColor",
            limitingconeangle: "limitingConeAngle",
            local: "local",
            markerend: "markerEnd",
            "marker-end": "markerEnd",
            markerheight: "markerHeight",
            markermid: "markerMid",
            "marker-mid": "markerMid",
            markerstart: "markerStart",
            "marker-start": "markerStart",
            markerunits: "markerUnits",
            markerwidth: "markerWidth",
            mask: "mask",
            maskcontentunits: "maskContentUnits",
            maskunits: "maskUnits",
            mathematical: "mathematical",
            mode: "mode",
            numoctaves: "numOctaves",
            offset: "offset",
            opacity: "opacity",
            operator: "operator",
            order: "order",
            orient: "orient",
            orientation: "orientation",
            origin: "origin",
            overflow: "overflow",
            overlineposition: "overlinePosition",
            "overline-position": "overlinePosition",
            overlinethickness: "overlineThickness",
            "overline-thickness": "overlineThickness",
            paintorder: "paintOrder",
            "paint-order": "paintOrder",
            panose1: "panose1",
            "panose-1": "panose1",
            pathlength: "pathLength",
            patterncontentunits: "patternContentUnits",
            patterntransform: "patternTransform",
            patternunits: "patternUnits",
            pointerevents: "pointerEvents",
            "pointer-events": "pointerEvents",
            points: "points",
            pointsatx: "pointsAtX",
            pointsaty: "pointsAtY",
            pointsatz: "pointsAtZ",
            prefix: "prefix",
            preservealpha: "preserveAlpha",
            preserveaspectratio: "preserveAspectRatio",
            primitiveunits: "primitiveUnits",
            property: "property",
            r: "r",
            radius: "radius",
            refx: "refX",
            refy: "refY",
            renderingintent: "renderingIntent",
            "rendering-intent": "renderingIntent",
            repeatcount: "repeatCount",
            repeatdur: "repeatDur",
            requiredextensions: "requiredExtensions",
            requiredfeatures: "requiredFeatures",
            resource: "resource",
            restart: "restart",
            result: "result",
            results: "results",
            rotate: "rotate",
            rx: "rx",
            ry: "ry",
            scale: "scale",
            security: "security",
            seed: "seed",
            shaperendering: "shapeRendering",
            "shape-rendering": "shapeRendering",
            slope: "slope",
            spacing: "spacing",
            specularconstant: "specularConstant",
            specularexponent: "specularExponent",
            speed: "speed",
            spreadmethod: "spreadMethod",
            startoffset: "startOffset",
            stddeviation: "stdDeviation",
            stemh: "stemh",
            stemv: "stemv",
            stitchtiles: "stitchTiles",
            stopcolor: "stopColor",
            "stop-color": "stopColor",
            stopopacity: "stopOpacity",
            "stop-opacity": "stopOpacity",
            strikethroughposition: "strikethroughPosition",
            "strikethrough-position": "strikethroughPosition",
            strikethroughthickness: "strikethroughThickness",
            "strikethrough-thickness": "strikethroughThickness",
            string: "string",
            stroke: "stroke",
            strokedasharray: "strokeDasharray",
            "stroke-dasharray": "strokeDasharray",
            strokedashoffset: "strokeDashoffset",
            "stroke-dashoffset": "strokeDashoffset",
            strokelinecap: "strokeLinecap",
            "stroke-linecap": "strokeLinecap",
            strokelinejoin: "strokeLinejoin",
            "stroke-linejoin": "strokeLinejoin",
            strokemiterlimit: "strokeMiterlimit",
            "stroke-miterlimit": "strokeMiterlimit",
            strokewidth: "strokeWidth",
            "stroke-width": "strokeWidth",
            strokeopacity: "strokeOpacity",
            "stroke-opacity": "strokeOpacity",
            suppresscontenteditablewarning: "suppressContentEditableWarning",
            suppresshydrationwarning: "suppressHydrationWarning",
            surfacescale: "surfaceScale",
            systemlanguage: "systemLanguage",
            tablevalues: "tableValues",
            targetx: "targetX",
            targety: "targetY",
            textanchor: "textAnchor",
            "text-anchor": "textAnchor",
            textdecoration: "textDecoration",
            "text-decoration": "textDecoration",
            textlength: "textLength",
            textrendering: "textRendering",
            "text-rendering": "textRendering",
            to: "to",
            transform: "transform",
            typeof: "typeof",
            u1: "u1",
            u2: "u2",
            underlineposition: "underlinePosition",
            "underline-position": "underlinePosition",
            underlinethickness: "underlineThickness",
            "underline-thickness": "underlineThickness",
            unicode: "unicode",
            unicodebidi: "unicodeBidi",
            "unicode-bidi": "unicodeBidi",
            unicoderange: "unicodeRange",
            "unicode-range": "unicodeRange",
            unitsperem: "unitsPerEm",
            "units-per-em": "unitsPerEm",
            unselectable: "unselectable",
            valphabetic: "vAlphabetic",
            "v-alphabetic": "vAlphabetic",
            values: "values",
            vectoreffect: "vectorEffect",
            "vector-effect": "vectorEffect",
            version: "version",
            vertadvy: "vertAdvY",
            "vert-adv-y": "vertAdvY",
            vertoriginx: "vertOriginX",
            "vert-origin-x": "vertOriginX",
            vertoriginy: "vertOriginY",
            "vert-origin-y": "vertOriginY",
            vhanging: "vHanging",
            "v-hanging": "vHanging",
            videographic: "vIdeographic",
            "v-ideographic": "vIdeographic",
            viewbox: "viewBox",
            viewtarget: "viewTarget",
            visibility: "visibility",
            vmathematical: "vMathematical",
            "v-mathematical": "vMathematical",
            vocab: "vocab",
            widths: "widths",
            wordspacing: "wordSpacing",
            "word-spacing": "wordSpacing",
            writingmode: "writingMode",
            "writing-mode": "writingMode",
            x1: "x1",
            x2: "x2",
            x: "x",
            xchannelselector: "xChannelSelector",
            xheight: "xHeight",
            "x-height": "xHeight",
            xlinkactuate: "xlinkActuate",
            "xlink:actuate": "xlinkActuate",
            xlinkarcrole: "xlinkArcrole",
            "xlink:arcrole": "xlinkArcrole",
            xlinkhref: "xlinkHref",
            "xlink:href": "xlinkHref",
            xlinkrole: "xlinkRole",
            "xlink:role": "xlinkRole",
            xlinkshow: "xlinkShow",
            "xlink:show": "xlinkShow",
            xlinktitle: "xlinkTitle",
            "xlink:title": "xlinkTitle",
            xlinktype: "xlinkType",
            "xlink:type": "xlinkType",
            xmlbase: "xmlBase",
            "xml:base": "xmlBase",
            xmllang: "xmlLang",
            "xml:lang": "xmlLang",
            xmlns: "xmlns",
            "xml:space": "xmlSpace",
            xmlnsxlink: "xmlnsXlink",
            "xmlns:xlink": "xmlnsXlink",
            xmlspace: "xmlSpace",
            y1: "y1",
            y2: "y2",
            y: "y",
            ychannelselector: "yChannelSelector",
            z: "z",
            zoomandpan: "zoomAndPan"
          };

          function getStackAddendum$2() {
            var stack = ReactDebugCurrentFrame.getStackAddendum();
            return stack != null ? stack : "";
          }

          {
            var warnedProperties$1 = {};
            var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
            var EVENT_NAME_REGEX = /^on[A-Z]/;
            var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
            var rARIACamel$1 = new RegExp(
              "^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$"
            );

            var validateProperty$1 = function(tagName, name, value) {
              if (
                hasOwnProperty$1.call(warnedProperties$1, name) &&
                warnedProperties$1[name]
              ) {
                return true;
              }

              if (registrationNameModules.hasOwnProperty(name)) {
                return true;
              }

              if (plugins.length === 0 && EVENT_NAME_REGEX.test(name)) {
                // If no event plugins have been injected, we might be in a server environment.
                // Don't check events in this case.
                return true;
              }

              var lowerCasedName = name.toLowerCase();
              var registrationName = possibleRegistrationNames.hasOwnProperty(
                lowerCasedName
              )
                ? possibleRegistrationNames[lowerCasedName]
                : null;

              if (registrationName != null) {
                warning(
                  false,
                  "Invalid event handler property `%s`. Did you mean `%s`?%s",
                  name,
                  registrationName,
                  getStackAddendum$2()
                );
                warnedProperties$1[name] = true;
                return true;
              }

              if (
                lowerCasedName.indexOf("on") === 0 &&
                lowerCasedName.length > 2
              ) {
                warning(
                  false,
                  "Unknown event handler property `%s`. It will be ignored.%s",
                  name,
                  getStackAddendum$2()
                );
                warnedProperties$1[name] = true;
                return true;
              }

              // Let the ARIA attribute hook validate ARIA attributes
              if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
                return true;
              }

              if (
                lowerCasedName === "onfocusin" ||
                lowerCasedName === "onfocusout"
              ) {
                warning(
                  false,
                  "React uses onFocus and onBlur instead of onFocusIn and onFocusOut. " +
                    "All React events are normalized to bubble, so onFocusIn and onFocusOut " +
                    "are not needed/supported by React."
                );
                warnedProperties$1[name] = true;
                return true;
              }

              if (lowerCasedName === "innerhtml") {
                warning(
                  false,
                  "Directly setting property `innerHTML` is not permitted. " +
                    "For more information, lookup documentation on `dangerouslySetInnerHTML`."
                );
                warnedProperties$1[name] = true;
                return true;
              }

              if (lowerCasedName === "aria") {
                warning(
                  false,
                  "The `aria` attribute is reserved for future use in React. " +
                    "Pass individual `aria-` attributes instead."
                );
                warnedProperties$1[name] = true;
                return true;
              }

              if (
                lowerCasedName === "is" &&
                value !== null &&
                value !== undefined &&
                typeof value !== "string"
              ) {
                warning(
                  false,
                  "Received a `%s` for a string attribute `is`. If this is expected, cast " +
                    "the value to a string.%s",
                  typeof value,
                  getStackAddendum$2()
                );
                warnedProperties$1[name] = true;
                return true;
              }

              if (typeof value === "number" && isNaN(value)) {
                warning(
                  false,
                  "Received NaN for the `%s` attribute. If this is expected, cast " +
                    "the value to a string.%s",
                  name,
                  getStackAddendum$2()
                );
                warnedProperties$1[name] = true;
                return true;
              }

              var isReserved = isReservedProp(name);

              // Known attributes should match the casing specified in the property config.
              if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
                var standardName = possibleStandardNames[lowerCasedName];
                if (standardName !== name) {
                  warning(
                    false,
                    "Invalid DOM property `%s`. Did you mean `%s`?%s",
                    name,
                    standardName,
                    getStackAddendum$2()
                  );
                  warnedProperties$1[name] = true;
                  return true;
                }
              } else if (!isReserved && name !== lowerCasedName) {
                // Unknown attributes should have lowercase casing since that's how they
                // will be cased anyway with server rendering.
                warning(
                  false,
                  "React does not recognize the `%s` prop on a DOM element. If you " +
                    "intentionally want it to appear in the DOM as a custom " +
                    "attribute, spell it as lowercase `%s` instead. " +
                    "If you accidentally passed it from a parent component, remove " +
                    "it from the DOM element.%s",
                  name,
                  lowerCasedName,
                  getStackAddendum$2()
                );
                warnedProperties$1[name] = true;
                return true;
              }

              if (
                typeof value === "boolean" &&
                !shouldAttributeAcceptBooleanValue(name)
              ) {
                if (value) {
                  warning(
                    false,
                    "Received `%s` for a non-boolean attribute `%s`.\n\n" +
                      "If you want to write it to the DOM, pass a string instead: " +
                      '%s="%s" or %s={value.toString()}.%s',
                    value,
                    name,
                    name,
                    value,
                    name,
                    getStackAddendum$2()
                  );
                } else {
                  warning(
                    false,
                    "Received `%s` for a non-boolean attribute `%s`.\n\n" +
                      "If you want to write it to the DOM, pass a string instead: " +
                      '%s="%s" or %s={value.toString()}.\n\n' +
                      "If you used to conditionally omit it with %s={condition && value}, " +
                      "pass %s={condition ? value : undefined} instead.%s",
                    value,
                    name,
                    name,
                    value,
                    name,
                    name,
                    name,
                    getStackAddendum$2()
                  );
                }
                warnedProperties$1[name] = true;
                return true;
              }

              // Now that we've validated casing, do not validate
              // data types for reserved props
              if (isReserved) {
                return true;
              }

              // Warn when a known attribute is a bad type
              if (!shouldSetAttribute(name, value)) {
                warnedProperties$1[name] = true;
                return false;
              }

              return true;
            };
          }

          var warnUnknownProperties = function(type, props) {
            var unknownProps = [];
            for (var key in props) {
              var isValid = validateProperty$1(type, key, props[key]);
              if (!isValid) {
                unknownProps.push(key);
              }
            }

            var unknownPropString = unknownProps
              .map(function(prop) {
                return "`" + prop + "`";
              })
              .join(", ");
            if (unknownProps.length === 1) {
              warning(
                false,
                "Invalid value for prop %s on <%s> tag. Either remove it from the element, " +
                  "or pass a string or number value to keep it in the DOM. " +
                  "For details, see https://fb.me/react-attribute-behavior%s",
                unknownPropString,
                type,
                getStackAddendum$2()
              );
            } else if (unknownProps.length > 1) {
              warning(
                false,
                "Invalid values for props %s on <%s> tag. Either remove them from the element, " +
                  "or pass a string or number value to keep them in the DOM. " +
                  "For details, see https://fb.me/react-attribute-behavior%s",
                unknownPropString,
                type,
                getStackAddendum$2()
              );
            }
          };

          function validateProperties$2(type, props) {
            if (isCustomComponent(type, props)) {
              return;
            }
            warnUnknownProperties(type, props);
          }

          // TODO: direct imports like some-package/src/* are bad. Fix me.
          var getCurrentFiberOwnerName$1 =
            ReactDebugCurrentFiber.getCurrentFiberOwnerName;
          var getCurrentFiberStackAddendum$2 =
            ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

          var didWarnInvalidHydration = false;
          var didWarnShadyDOM = false;

          var DANGEROUSLY_SET_INNER_HTML = "dangerouslySetInnerHTML";
          var SUPPRESS_CONTENT_EDITABLE_WARNING =
            "suppressContentEditableWarning";
          var SUPPRESS_HYDRATION_WARNING$1 = "suppressHydrationWarning";
          var AUTOFOCUS = "autoFocus";
          var CHILDREN = "children";
          var STYLE = "style";
          var HTML = "__html";

          var HTML_NAMESPACE = Namespaces.html;

          var getStack = emptyFunction$1.thatReturns("");

          {
            getStack = getCurrentFiberStackAddendum$2;

            var warnedUnknownTags = {
              // Chrome is the only major browser not shipping <time>. But as of July
              // 2017 it intends to ship it due to widespread usage. We intentionally
              // *don't* warn for <time> even if it's unrecognized by Chrome because
              // it soon will be, and many apps have been using it anyway.
              time: true,
              // There are working polyfills for <dialog>. Let people use it.
              dialog: true
            };

            var validatePropertiesInDevelopment = function(type, props) {
              validateProperties(type, props);
              validateProperties$1(type, props);
              validateProperties$2(type, props);
            };

            // HTML parsing normalizes CR and CRLF to LF.
            // It also can turn \u0000 into \uFFFD inside attributes.
            // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
            // If we have a mismatch, it might be caused by that.
            // We will still patch up in this case but not fire the warning.
            var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
            var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

            var normalizeMarkupForTextOrAttribute = function(markup) {
              var markupString =
                typeof markup === "string" ? markup : "" + markup;
              return markupString
                .replace(NORMALIZE_NEWLINES_REGEX, "\n")
                .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
            };

            var warnForTextDifference = function(serverText, clientText) {
              if (didWarnInvalidHydration) {
                return;
              }
              var normalizedClientText = normalizeMarkupForTextOrAttribute(
                clientText
              );
              var normalizedServerText = normalizeMarkupForTextOrAttribute(
                serverText
              );
              if (normalizedServerText === normalizedClientText) {
                return;
              }
              didWarnInvalidHydration = true;
              warning(
                false,
                'Text content did not match. Server: "%s" Client: "%s"',
                normalizedServerText,
                normalizedClientText
              );
            };

            var warnForPropDifference = function(
              propName,
              serverValue,
              clientValue
            ) {
              if (didWarnInvalidHydration) {
                return;
              }
              var normalizedClientValue = normalizeMarkupForTextOrAttribute(
                clientValue
              );
              var normalizedServerValue = normalizeMarkupForTextOrAttribute(
                serverValue
              );
              if (normalizedServerValue === normalizedClientValue) {
                return;
              }
              didWarnInvalidHydration = true;
              warning(
                false,
                "Prop `%s` did not match. Server: %s Client: %s",
                propName,
                JSON.stringify(normalizedServerValue),
                JSON.stringify(normalizedClientValue)
              );
            };

            var warnForExtraAttributes = function(attributeNames) {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              var names = [];
              attributeNames.forEach(function(name) {
                names.push(name);
              });
              warning(false, "Extra attributes from the server: %s", names);
            };

            var warnForInvalidEventListener = function(
              registrationName,
              listener
            ) {
              if (listener === false) {
                warning(
                  false,
                  "Expected `%s` listener to be a function, instead got `false`.\n\n" +
                    "If you used to conditionally omit it with %s={condition && value}, " +
                    "pass %s={condition ? value : undefined} instead.%s",
                  registrationName,
                  registrationName,
                  registrationName,
                  getCurrentFiberStackAddendum$2()
                );
              } else {
                warning(
                  false,
                  "Expected `%s` listener to be a function, instead got a value of `%s` type.%s",
                  registrationName,
                  typeof listener,
                  getCurrentFiberStackAddendum$2()
                );
              }
            };

            // Parse the HTML and read it back to normalize the HTML string so that it
            // can be used for comparison.
            var normalizeHTML = function(parent, html) {
              // We could have created a separate document here to avoid
              // re-initializing custom elements if they exist. But this breaks
              // how <noscript> is being handled. So we use the same document.
              // See the discussion in https://github.com/facebook/react/pull/11157.
              var testElement =
                parent.namespaceURI === HTML_NAMESPACE
                  ? parent.ownerDocument.createElement(parent.tagName)
                  : parent.ownerDocument.createElementNS(
                      parent.namespaceURI,
                      parent.tagName
                    );
              testElement.innerHTML = html;
              return testElement.innerHTML;
            };
          }

          function ensureListeningTo(rootContainerElement, registrationName) {
            var isDocumentOrFragment =
              rootContainerElement.nodeType === DOCUMENT_NODE ||
              rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
            var doc = isDocumentOrFragment
              ? rootContainerElement
              : rootContainerElement.ownerDocument;
            listenTo(registrationName, doc);
          }

          function getOwnerDocumentFromRootContainer(rootContainerElement) {
            return rootContainerElement.nodeType === DOCUMENT_NODE
              ? rootContainerElement
              : rootContainerElement.ownerDocument;
          }

          // There are so many media events, it makes sense to just
          // maintain a list rather than create a `trapBubbledEvent` for each
          var mediaEvents = {
            topAbort: "abort",
            topCanPlay: "canplay",
            topCanPlayThrough: "canplaythrough",
            topDurationChange: "durationchange",
            topEmptied: "emptied",
            topEncrypted: "encrypted",
            topEnded: "ended",
            topError: "error",
            topLoadedData: "loadeddata",
            topLoadedMetadata: "loadedmetadata",
            topLoadStart: "loadstart",
            topPause: "pause",
            topPlay: "play",
            topPlaying: "playing",
            topProgress: "progress",
            topRateChange: "ratechange",
            topSeeked: "seeked",
            topSeeking: "seeking",
            topStalled: "stalled",
            topSuspend: "suspend",
            topTimeUpdate: "timeupdate",
            topVolumeChange: "volumechange",
            topWaiting: "waiting"
          };

          function trapClickOnNonInteractiveElement(node) {
            // Mobile Safari does not fire properly bubble click events on
            // non-interactive elements, which means delegated click listeners do not
            // fire. The workaround for this bug involves attaching an empty click
            // listener on the target node.
            // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
            // Just set it using the onclick property so that we don't have to manage any
            // bookkeeping for it. Not sure if we need to clear it when the listener is
            // removed.
            // TODO: Only do this for the relevant Safaris maybe?
            node.onclick = emptyFunction$1;
          }

          function setInitialDOMProperties(
            tag,
            domElement,
            rootContainerElement,
            nextProps,
            isCustomComponentTag
          ) {
            for (var propKey in nextProps) {
              if (!nextProps.hasOwnProperty(propKey)) {
                continue;
              }
              var nextProp = nextProps[propKey];
              if (propKey === STYLE) {
                {
                  if (nextProp) {
                    // Freeze the next style object so that we can assume it won't be
                    // mutated. We have already warned for this in the past.
                    Object.freeze(nextProp);
                  }
                }
                // Relies on `updateStylesByID` not mutating `styleUpdates`.
                setValueForStyles(domElement, nextProp, getStack);
              } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML] : undefined;
                if (nextHtml != null) {
                  setInnerHTML(domElement, nextHtml);
                }
              } else if (propKey === CHILDREN) {
                if (typeof nextProp === "string") {
                  // Avoid setting initial textContent when the text is empty. In IE11 setting
                  // textContent on a <textarea> will cause the placeholder to not
                  // show within the <textarea> until it has been focused and blurred again.
                  // https://github.com/facebook/react/issues/6731#issuecomment-254874553
                  var canSetTextContent = tag !== "textarea" || nextProp !== "";
                  if (canSetTextContent) {
                    setTextContent$1(domElement, nextProp);
                  }
                } else if (typeof nextProp === "number") {
                  setTextContent$1(domElement, "" + nextProp);
                }
              } else if (
                propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||
                propKey === SUPPRESS_HYDRATION_WARNING$1
              ) {
                // Noop
              } else if (propKey === AUTOFOCUS) {
                // We polyfill it separately on the client during commit.
                // We blacklist it here rather than in the property list because we emit it in SSR.
              } else if (registrationNameModules.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                  if (true && typeof nextProp !== "function") {
                    warnForInvalidEventListener(propKey, nextProp);
                  }
                  ensureListeningTo(rootContainerElement, propKey);
                }
              } else if (isCustomComponentTag) {
                setValueForAttribute(domElement, propKey, nextProp);
              } else if (nextProp != null) {
                // If we're updating to null or undefined, we should remove the property
                // from the DOM node instead of inadvertently setting to a string. This
                // brings us in line with the same behavior we have on initial render.
                setValueForProperty(domElement, propKey, nextProp);
              }
            }
          }

          function updateDOMProperties(
            domElement,
            updatePayload,
            wasCustomComponentTag,
            isCustomComponentTag
          ) {
            // TODO: Handle wasCustomComponentTag
            for (var i = 0; i < updatePayload.length; i += 2) {
              var propKey = updatePayload[i];
              var propValue = updatePayload[i + 1];
              if (propKey === STYLE) {
                setValueForStyles(domElement, propValue, getStack);
              } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                setInnerHTML(domElement, propValue);
              } else if (propKey === CHILDREN) {
                setTextContent$1(domElement, propValue);
              } else if (isCustomComponentTag) {
                if (propValue != null) {
                  setValueForAttribute(domElement, propKey, propValue);
                } else {
                  deleteValueForAttribute(domElement, propKey);
                }
              } else if (propValue != null) {
                setValueForProperty(domElement, propKey, propValue);
              } else {
                // If we're updating to null or undefined, we should remove the property
                // from the DOM node instead of inadvertently setting to a string. This
                // brings us in line with the same behavior we have on initial render.
                deleteValueForProperty(domElement, propKey);
              }
            }
          }

          function createElement$1(
            type,
            props,
            rootContainerElement,
            parentNamespace
          ) {
            // We create tags in the namespace of their parent container, except HTML
            var ownerDocument = getOwnerDocumentFromRootContainer(
              rootContainerElement
            );
            var domElement;
            var namespaceURI = parentNamespace;
            if (namespaceURI === HTML_NAMESPACE) {
              namespaceURI = getIntrinsicNamespace(type);
            }
            if (namespaceURI === HTML_NAMESPACE) {
              {
                var isCustomComponentTag = isCustomComponent(type, props);
                // Should this check be gated by parent namespace? Not sure we want to
                // allow <SVG> or <mATH>.
                warning(
                  isCustomComponentTag || type === type.toLowerCase(),
                  "<%s /> is using uppercase HTML. Always use lowercase HTML tags " +
                    "in React.",
                  type
                );
              }

              if (type === "script") {
                // Create the script via .innerHTML so its "parser-inserted" flag is
                // set to true and it does not execute
                var div = ownerDocument.createElement("div");
                div.innerHTML = "<script><" + "/script>"; // eslint-disable-line
                // This is guaranteed to yield a script element.
                var firstChild = div.firstChild;
                domElement = div.removeChild(firstChild);
              } else if (typeof props.is === "string") {
                // $FlowIssue `createElement` should be updated for Web Components
                domElement = ownerDocument.createElement(type, {
                  is: props.is
                });
              } else {
                // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
                // See discussion in https://github.com/facebook/react/pull/6896
                // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
                domElement = ownerDocument.createElement(type);
              }
            } else {
              domElement = ownerDocument.createElementNS(namespaceURI, type);
            }

            {
              if (namespaceURI === HTML_NAMESPACE) {
                if (
                  !isCustomComponentTag &&
                  Object.prototype.toString.call(domElement) ===
                    "[object HTMLUnknownElement]" &&
                  !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)
                ) {
                  warnedUnknownTags[type] = true;
                  warning(
                    false,
                    "The tag <%s> is unrecognized in this browser. " +
                      "If you meant to render a React component, start its name with " +
                      "an uppercase letter.",
                    type
                  );
                }
              }
            }

            return domElement;
          }

          function createTextNode$1(text, rootContainerElement) {
            return getOwnerDocumentFromRootContainer(
              rootContainerElement
            ).createTextNode(text);
          }

          function setInitialProperties$1(
            domElement,
            tag,
            rawProps,
            rootContainerElement
          ) {
            var isCustomComponentTag = isCustomComponent(tag, rawProps);
            {
              validatePropertiesInDevelopment(tag, rawProps);
              if (
                isCustomComponentTag &&
                !didWarnShadyDOM &&
                domElement.shadyRoot
              ) {
                warning(
                  false,
                  "%s is using shady DOM. Using shady DOM with React can " +
                    "cause things to break subtly.",
                  getCurrentFiberOwnerName$1() || "A component"
                );
                didWarnShadyDOM = true;
              }
            }

            // TODO: Make sure that we check isMounted before firing any of these events.
            var props;
            switch (tag) {
              case "iframe":
              case "object":
                trapBubbledEvent("topLoad", "load", domElement);
                props = rawProps;
                break;
              case "video":
              case "audio":
                // Create listener for each media event
                for (var event in mediaEvents) {
                  if (mediaEvents.hasOwnProperty(event)) {
                    trapBubbledEvent(event, mediaEvents[event], domElement);
                  }
                }
                props = rawProps;
                break;
              case "source":
                trapBubbledEvent("topError", "error", domElement);
                props = rawProps;
                break;
              case "img":
              case "image":
                trapBubbledEvent("topError", "error", domElement);
                trapBubbledEvent("topLoad", "load", domElement);
                props = rawProps;
                break;
              case "form":
                trapBubbledEvent("topReset", "reset", domElement);
                trapBubbledEvent("topSubmit", "submit", domElement);
                props = rawProps;
                break;
              case "details":
                trapBubbledEvent("topToggle", "toggle", domElement);
                props = rawProps;
                break;
              case "input":
                initWrapperState(domElement, rawProps);
                props = getHostProps(domElement, rawProps);
                trapBubbledEvent("topInvalid", "invalid", domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, "onChange");
                break;
              case "option":
                validateProps(domElement, rawProps);
                props = getHostProps$1(domElement, rawProps);
                break;
              case "select":
                initWrapperState$1(domElement, rawProps);
                props = getHostProps$2(domElement, rawProps);
                trapBubbledEvent("topInvalid", "invalid", domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, "onChange");
                break;
              case "textarea":
                initWrapperState$2(domElement, rawProps);
                props = getHostProps$3(domElement, rawProps);
                trapBubbledEvent("topInvalid", "invalid", domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, "onChange");
                break;
              default:
                props = rawProps;
            }

            assertValidProps(tag, props, getStack);

            setInitialDOMProperties(
              tag,
              domElement,
              rootContainerElement,
              props,
              isCustomComponentTag
            );

            switch (tag) {
              case "input":
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps);
                break;
              case "textarea":
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement, rawProps);
                break;
              case "option":
                postMountWrapper$1(domElement, rawProps);
                break;
              case "select":
                postMountWrapper$2(domElement, rawProps);
                break;
              default:
                if (typeof props.onClick === "function") {
                  // TODO: This cast may not be sound for SVG, MathML or custom elements.
                  trapClickOnNonInteractiveElement(domElement);
                }
                break;
            }
          }

          // Calculate the diff between the two objects.
          function diffProperties$1(
            domElement,
            tag,
            lastRawProps,
            nextRawProps,
            rootContainerElement
          ) {
            {
              validatePropertiesInDevelopment(tag, nextRawProps);
            }

            var updatePayload = null;

            var lastProps;
            var nextProps;
            switch (tag) {
              case "input":
                lastProps = getHostProps(domElement, lastRawProps);
                nextProps = getHostProps(domElement, nextRawProps);
                updatePayload = [];
                break;
              case "option":
                lastProps = getHostProps$1(domElement, lastRawProps);
                nextProps = getHostProps$1(domElement, nextRawProps);
                updatePayload = [];
                break;
              case "select":
                lastProps = getHostProps$2(domElement, lastRawProps);
                nextProps = getHostProps$2(domElement, nextRawProps);
                updatePayload = [];
                break;
              case "textarea":
                lastProps = getHostProps$3(domElement, lastRawProps);
                nextProps = getHostProps$3(domElement, nextRawProps);
                updatePayload = [];
                break;
              default:
                lastProps = lastRawProps;
                nextProps = nextRawProps;
                if (
                  typeof lastProps.onClick !== "function" &&
                  typeof nextProps.onClick === "function"
                ) {
                  // TODO: This cast may not be sound for SVG, MathML or custom elements.
                  trapClickOnNonInteractiveElement(domElement);
                }
                break;
            }

            assertValidProps(tag, nextProps, getStack);

            var propKey;
            var styleName;
            var styleUpdates = null;
            for (propKey in lastProps) {
              if (
                nextProps.hasOwnProperty(propKey) ||
                !lastProps.hasOwnProperty(propKey) ||
                lastProps[propKey] == null
              ) {
                continue;
              }
              if (propKey === STYLE) {
                var lastStyle = lastProps[propKey];
                for (styleName in lastStyle) {
                  if (lastStyle.hasOwnProperty(styleName)) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = "";
                  }
                }
              } else if (
                propKey === DANGEROUSLY_SET_INNER_HTML ||
                propKey === CHILDREN
              ) {
                // Noop. This is handled by the clear text mechanism.
              } else if (
                propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||
                propKey === SUPPRESS_HYDRATION_WARNING$1
              ) {
                // Noop
              } else if (propKey === AUTOFOCUS) {
                // Noop. It doesn't work on updates anyway.
              } else if (registrationNameModules.hasOwnProperty(propKey)) {
                // This is a special case. If any listener updates we need to ensure
                // that the "current" fiber pointer gets updated so we need a commit
                // to update this element.
                if (!updatePayload) {
                  updatePayload = [];
                }
              } else {
                // For all other deleted properties we add it to the queue. We use
                // the whitelist in the commit phase instead.
                (updatePayload = updatePayload || []).push(propKey, null);
              }
            }
            for (propKey in nextProps) {
              var nextProp = nextProps[propKey];
              var lastProp = lastProps != null ? lastProps[propKey] : undefined;
              if (
                !nextProps.hasOwnProperty(propKey) ||
                nextProp === lastProp ||
                (nextProp == null && lastProp == null)
              ) {
                continue;
              }
              if (propKey === STYLE) {
                {
                  if (nextProp) {
                    // Freeze the next style object so that we can assume it won't be
                    // mutated. We have already warned for this in the past.
                    Object.freeze(nextProp);
                  }
                }
                if (lastProp) {
                  // Unset styles on `lastProp` but not on `nextProp`.
                  for (styleName in lastProp) {
                    if (
                      lastProp.hasOwnProperty(styleName) &&
                      (!nextProp || !nextProp.hasOwnProperty(styleName))
                    ) {
                      if (!styleUpdates) {
                        styleUpdates = {};
                      }
                      styleUpdates[styleName] = "";
                    }
                  }
                  // Update styles that changed since `lastProp`.
                  for (styleName in nextProp) {
                    if (
                      nextProp.hasOwnProperty(styleName) &&
                      lastProp[styleName] !== nextProp[styleName]
                    ) {
                      if (!styleUpdates) {
                        styleUpdates = {};
                      }
                      styleUpdates[styleName] = nextProp[styleName];
                    }
                  }
                } else {
                  // Relies on `updateStylesByID` not mutating `styleUpdates`.
                  if (!styleUpdates) {
                    if (!updatePayload) {
                      updatePayload = [];
                    }
                    updatePayload.push(propKey, styleUpdates);
                  }
                  styleUpdates = nextProp;
                }
              } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML] : undefined;
                var lastHtml = lastProp ? lastProp[HTML] : undefined;
                if (nextHtml != null) {
                  if (lastHtml !== nextHtml) {
                    (updatePayload = updatePayload || []).push(
                      propKey,
                      "" + nextHtml
                    );
                  }
                } else {
                  // TODO: It might be too late to clear this if we have children
                  // inserted already.
                }
              } else if (propKey === CHILDREN) {
                if (
                  lastProp !== nextProp &&
                  (typeof nextProp === "string" || typeof nextProp === "number")
                ) {
                  (updatePayload = updatePayload || []).push(
                    propKey,
                    "" + nextProp
                  );
                }
              } else if (
                propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||
                propKey === SUPPRESS_HYDRATION_WARNING$1
              ) {
                // Noop
              } else if (registrationNameModules.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                  // We eagerly listen to this even though we haven't committed yet.
                  if (true && typeof nextProp !== "function") {
                    warnForInvalidEventListener(propKey, nextProp);
                  }
                  ensureListeningTo(rootContainerElement, propKey);
                }
                if (!updatePayload && lastProp !== nextProp) {
                  // This is a special case. If any listener updates we need to ensure
                  // that the "current" props pointer gets updated so we need a commit
                  // to update this element.
                  updatePayload = [];
                }
              } else {
                // For any other property we always add it to the queue and then we
                // filter it out using the whitelist during the commit.
                (updatePayload = updatePayload || []).push(propKey, nextProp);
              }
            }
            if (styleUpdates) {
              (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
            }
            return updatePayload;
          }

          // Apply the diff.
          function updateProperties$1(
            domElement,
            updatePayload,
            tag,
            lastRawProps,
            nextRawProps
          ) {
            var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
            var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
            // Apply the diff.
            updateDOMProperties(
              domElement,
              updatePayload,
              wasCustomComponentTag,
              isCustomComponentTag
            );

            // TODO: Ensure that an update gets scheduled if any of the special props
            // changed.
            switch (tag) {
              case "input":
                // Update the wrapper around inputs *after* updating props. This has to
                // happen after `updateDOMProperties`. Otherwise HTML5 input validations
                // raise warnings and prevent the new value from being assigned.
                updateWrapper(domElement, nextRawProps);

                // We also check that we haven't missed a value update, such as a
                // Radio group shifting the checked value to another named radio input.
                updateValueIfChanged(domElement);
                break;
              case "textarea":
                updateWrapper$1(domElement, nextRawProps);
                break;
              case "select":
                // <select> value update needs to occur after <option> children
                // reconciliation
                postUpdateWrapper(domElement, nextRawProps);
                break;
            }
          }

          function diffHydratedProperties$1(
            domElement,
            tag,
            rawProps,
            parentNamespace,
            rootContainerElement
          ) {
            {
              var suppressHydrationWarning =
                rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
              var isCustomComponentTag = isCustomComponent(tag, rawProps);
              validatePropertiesInDevelopment(tag, rawProps);
              if (
                isCustomComponentTag &&
                !didWarnShadyDOM &&
                domElement.shadyRoot
              ) {
                warning(
                  false,
                  "%s is using shady DOM. Using shady DOM with React can " +
                    "cause things to break subtly.",
                  getCurrentFiberOwnerName$1() || "A component"
                );
                didWarnShadyDOM = true;
              }
            }

            // TODO: Make sure that we check isMounted before firing any of these events.
            switch (tag) {
              case "iframe":
              case "object":
                trapBubbledEvent("topLoad", "load", domElement);
                break;
              case "video":
              case "audio":
                // Create listener for each media event
                for (var event in mediaEvents) {
                  if (mediaEvents.hasOwnProperty(event)) {
                    trapBubbledEvent(event, mediaEvents[event], domElement);
                  }
                }
                break;
              case "source":
                trapBubbledEvent("topError", "error", domElement);
                break;
              case "img":
              case "image":
                trapBubbledEvent("topError", "error", domElement);
                trapBubbledEvent("topLoad", "load", domElement);
                break;
              case "form":
                trapBubbledEvent("topReset", "reset", domElement);
                trapBubbledEvent("topSubmit", "submit", domElement);
                break;
              case "details":
                trapBubbledEvent("topToggle", "toggle", domElement);
                break;
              case "input":
                initWrapperState(domElement, rawProps);
                trapBubbledEvent("topInvalid", "invalid", domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, "onChange");
                break;
              case "option":
                validateProps(domElement, rawProps);
                break;
              case "select":
                initWrapperState$1(domElement, rawProps);
                trapBubbledEvent("topInvalid", "invalid", domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, "onChange");
                break;
              case "textarea":
                initWrapperState$2(domElement, rawProps);
                trapBubbledEvent("topInvalid", "invalid", domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, "onChange");
                break;
            }

            assertValidProps(tag, rawProps, getStack);

            {
              var extraAttributeNames = new Set();
              var attributes = domElement.attributes;
              for (var i = 0; i < attributes.length; i++) {
                var name = attributes[i].name.toLowerCase();
                switch (name) {
                  // Built-in SSR attribute is whitelisted
                  case "data-reactroot":
                    break;
                  // Controlled attributes are not validated
                  // TODO: Only ignore them on controlled tags.
                  case "value":
                    break;
                  case "checked":
                    break;
                  case "selected":
                    break;
                  default:
                    // Intentionally use the original name.
                    // See discussion in https://github.com/facebook/react/pull/10676.
                    extraAttributeNames.add(attributes[i].name);
                }
              }
            }

            var updatePayload = null;
            for (var propKey in rawProps) {
              if (!rawProps.hasOwnProperty(propKey)) {
                continue;
              }
              var nextProp = rawProps[propKey];
              if (propKey === CHILDREN) {
                // For text content children we compare against textContent. This
                // might match additional HTML that is hidden when we read it using
                // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
                // satisfies our requirement. Our requirement is not to produce perfect
                // HTML and attributes. Ideally we should preserve structure but it's
                // ok not to if the visible content is still enough to indicate what
                // even listeners these nodes might be wired up to.
                // TODO: Warn if there is more than a single textNode as a child.
                // TODO: Should we use domElement.firstChild.nodeValue to compare?
                if (typeof nextProp === "string") {
                  if (domElement.textContent !== nextProp) {
                    if (true && !suppressHydrationWarning) {
                      warnForTextDifference(domElement.textContent, nextProp);
                    }
                    updatePayload = [CHILDREN, nextProp];
                  }
                } else if (typeof nextProp === "number") {
                  if (domElement.textContent !== "" + nextProp) {
                    if (true && !suppressHydrationWarning) {
                      warnForTextDifference(domElement.textContent, nextProp);
                    }
                    updatePayload = [CHILDREN, "" + nextProp];
                  }
                }
              } else if (registrationNameModules.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                  if (true && typeof nextProp !== "function") {
                    warnForInvalidEventListener(propKey, nextProp);
                  }
                  ensureListeningTo(rootContainerElement, propKey);
                }
              } else {
                // Validate that the properties correspond to their expected values.
                var serverValue;
                var propertyInfo;
                if (suppressHydrationWarning) {
                  // Don't bother comparing. We're ignoring all these warnings.
                } else if (
                  propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||
                  propKey === SUPPRESS_HYDRATION_WARNING$1 ||
                  // Controlled attributes are not validated
                  // TODO: Only ignore them on controlled tags.
                  propKey === "value" ||
                  propKey === "checked" ||
                  propKey === "selected"
                ) {
                  // Noop
                } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                  var rawHtml = nextProp ? nextProp[HTML] || "" : "";
                  var serverHTML = domElement.innerHTML;
                  var expectedHTML = normalizeHTML(domElement, rawHtml);
                  if (expectedHTML !== serverHTML) {
                    warnForPropDifference(propKey, serverHTML, expectedHTML);
                  }
                } else if (propKey === STYLE) {
                  // $FlowFixMe - Should be inferred as not undefined.
                  extraAttributeNames["delete"](propKey);
                  var expectedStyle = createDangerousStringForStyles(nextProp);
                  serverValue = domElement.getAttribute("style");
                  if (expectedStyle !== serverValue) {
                    warnForPropDifference(propKey, serverValue, expectedStyle);
                  }
                } else if (isCustomComponentTag) {
                  // $FlowFixMe - Should be inferred as not undefined.
                  extraAttributeNames["delete"](propKey.toLowerCase());
                  serverValue = getValueForAttribute(
                    domElement,
                    propKey,
                    nextProp
                  );

                  if (nextProp !== serverValue) {
                    warnForPropDifference(propKey, serverValue, nextProp);
                  }
                } else if (shouldSetAttribute(propKey, nextProp)) {
                  if ((propertyInfo = getPropertyInfo(propKey))) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames["delete"](propertyInfo.attributeName);
                    serverValue = getValueForProperty(
                      domElement,
                      propKey,
                      nextProp
                    );
                  } else {
                    var ownNamespace = parentNamespace;
                    if (ownNamespace === HTML_NAMESPACE) {
                      ownNamespace = getIntrinsicNamespace(tag);
                    }
                    if (ownNamespace === HTML_NAMESPACE) {
                      // $FlowFixMe - Should be inferred as not undefined.
                      extraAttributeNames["delete"](propKey.toLowerCase());
                    } else {
                      // $FlowFixMe - Should be inferred as not undefined.
                      extraAttributeNames["delete"](propKey);
                    }
                    serverValue = getValueForAttribute(
                      domElement,
                      propKey,
                      nextProp
                    );
                  }

                  if (nextProp !== serverValue) {
                    warnForPropDifference(propKey, serverValue, nextProp);
                  }
                }
              }
            }

            {
              // $FlowFixMe - Should be inferred as not undefined.
              if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
                // $FlowFixMe - Should be inferred as not undefined.
                warnForExtraAttributes(extraAttributeNames);
              }
            }

            switch (tag) {
              case "input":
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps);
                break;
              case "textarea":
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement, rawProps);
                break;
              case "select":
              case "option":
                // For input and textarea we current always set the value property at
                // post mount to force it to diverge from attributes. However, for
                // option and select we don't quite do the same thing and select
                // is not resilient to the DOM state changing so we don't do that here.
                // TODO: Consider not doing this for input and textarea.
                break;
              default:
                if (typeof rawProps.onClick === "function") {
                  // TODO: This cast may not be sound for SVG, MathML or custom elements.
                  trapClickOnNonInteractiveElement(domElement);
                }
                break;
            }

            return updatePayload;
          }

          function diffHydratedText$1(textNode, text) {
            var isDifferent = textNode.nodeValue !== text;
            return isDifferent;
          }

          function warnForUnmatchedText$1(textNode, text) {
            {
              warnForTextDifference(textNode.nodeValue, text);
            }
          }

          function warnForDeletedHydratableElement$1(parentNode, child) {
            {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              warning(
                false,
                "Did not expect server HTML to contain a <%s> in <%s>.",
                child.nodeName.toLowerCase(),
                parentNode.nodeName.toLowerCase()
              );
            }
          }

          function warnForDeletedHydratableText$1(parentNode, child) {
            {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              warning(
                false,
                'Did not expect server HTML to contain the text node "%s" in <%s>.',
                child.nodeValue,
                parentNode.nodeName.toLowerCase()
              );
            }
          }

          function warnForInsertedHydratedElement$1(parentNode, tag, props) {
            {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              warning(
                false,
                "Expected server HTML to contain a matching <%s> in <%s>.",
                tag,
                parentNode.nodeName.toLowerCase()
              );
            }
          }

          function warnForInsertedHydratedText$1(parentNode, text) {
            {
              if (text === "") {
                // We expect to insert empty text nodes since they're not represented in
                // the HTML.
                // TODO: Remove this special case if we can just avoid inserting empty
                // text nodes.
                return;
              }
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              warning(
                false,
                'Expected server HTML to contain a matching text node for "%s" in <%s>.',
                text,
                parentNode.nodeName.toLowerCase()
              );
            }
          }

          function restoreControlledState(domElement, tag, props) {
            switch (tag) {
              case "input":
                restoreControlledState$1(domElement, props);
                return;
              case "textarea":
                restoreControlledState$3(domElement, props);
                return;
              case "select":
                restoreControlledState$2(domElement, props);
                return;
            }
          }

          var ReactDOMFiberComponent = Object.freeze({
            createElement: createElement$1,
            createTextNode: createTextNode$1,
            setInitialProperties: setInitialProperties$1,
            diffProperties: diffProperties$1,
            updateProperties: updateProperties$1,
            diffHydratedProperties: diffHydratedProperties$1,
            diffHydratedText: diffHydratedText$1,
            warnForUnmatchedText: warnForUnmatchedText$1,
            warnForDeletedHydratableElement: warnForDeletedHydratableElement$1,
            warnForDeletedHydratableText: warnForDeletedHydratableText$1,
            warnForInsertedHydratedElement: warnForInsertedHydratedElement$1,
            warnForInsertedHydratedText: warnForInsertedHydratedText$1,
            restoreControlledState: restoreControlledState
          });

          // TODO: direct imports like some-package/src/* are bad. Fix me.
          var getCurrentFiberStackAddendum$6 =
            ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

          var validateDOMNesting = emptyFunction$1;

          {
            // This validation code was written based on the HTML5 parsing spec:
            // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
            //
            // Note: this does not catch all invalid nesting, nor does it try to (as it's
            // not clear what practical benefit doing so provides); instead, we warn only
            // for cases where the parser will give a parse tree differing from what React
            // intended. For example, <b><div></div></b> is invalid but we don't warn
            // because it still parses correctly; we do warn for other cases like nested
            // <p> tags where the beginning of the second element implicitly closes the
            // first, causing a confusing mess.

            // https://html.spec.whatwg.org/multipage/syntax.html#special
            var specialTags = [
              "address",
              "applet",
              "area",
              "article",
              "aside",
              "base",
              "basefont",
              "bgsound",
              "blockquote",
              "body",
              "br",
              "button",
              "caption",
              "center",
              "col",
              "colgroup",
              "dd",
              "details",
              "dir",
              "div",
              "dl",
              "dt",
              "embed",
              "fieldset",
              "figcaption",
              "figure",
              "footer",
              "form",
              "frame",
              "frameset",
              "h1",
              "h2",
              "h3",
              "h4",
              "h5",
              "h6",
              "head",
              "header",
              "hgroup",
              "hr",
              "html",
              "iframe",
              "img",
              "input",
              "isindex",
              "li",
              "link",
              "listing",
              "main",
              "marquee",
              "menu",
              "menuitem",
              "meta",
              "nav",
              "noembed",
              "noframes",
              "noscript",
              "object",
              "ol",
              "p",
              "param",
              "plaintext",
              "pre",
              "script",
              "section",
              "select",
              "source",
              "style",
              "summary",
              "table",
              "tbody",
              "td",
              "template",
              "textarea",
              "tfoot",
              "th",
              "thead",
              "title",
              "tr",
              "track",
              "ul",
              "wbr",
              "xmp"
            ];

            // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
            var inScopeTags = [
              "applet",
              "caption",
              "html",
              "table",
              "td",
              "th",
              "marquee",
              "object",
              "template",

              // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
              // TODO: Distinguish by namespace here -- for <title>, including it here
              // errs on the side of fewer warnings
              "foreignObject",
              "desc",
              "title"
            ];

            // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
            var buttonScopeTags = inScopeTags.concat(["button"]);

            // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
            var impliedEndTags = [
              "dd",
              "dt",
              "li",
              "option",
              "optgroup",
              "p",
              "rp",
              "rt"
            ];

            var emptyAncestorInfo = {
              current: null,

              formTag: null,
              aTagInScope: null,
              buttonTagInScope: null,
              nobrTagInScope: null,
              pTagInButtonScope: null,

              listItemTagAutoclosing: null,
              dlItemTagAutoclosing: null
            };

            var updatedAncestorInfo$1 = function(oldInfo, tag, instance) {
              var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
              var info = { tag: tag, instance: instance };

              if (inScopeTags.indexOf(tag) !== -1) {
                ancestorInfo.aTagInScope = null;
                ancestorInfo.buttonTagInScope = null;
                ancestorInfo.nobrTagInScope = null;
              }
              if (buttonScopeTags.indexOf(tag) !== -1) {
                ancestorInfo.pTagInButtonScope = null;
              }

              // See rules for 'li', 'dd', 'dt' start tags in
              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
              if (
                specialTags.indexOf(tag) !== -1 &&
                tag !== "address" &&
                tag !== "div" &&
                tag !== "p"
              ) {
                ancestorInfo.listItemTagAutoclosing = null;
                ancestorInfo.dlItemTagAutoclosing = null;
              }

              ancestorInfo.current = info;

              if (tag === "form") {
                ancestorInfo.formTag = info;
              }
              if (tag === "a") {
                ancestorInfo.aTagInScope = info;
              }
              if (tag === "button") {
                ancestorInfo.buttonTagInScope = info;
              }
              if (tag === "nobr") {
                ancestorInfo.nobrTagInScope = info;
              }
              if (tag === "p") {
                ancestorInfo.pTagInButtonScope = info;
              }
              if (tag === "li") {
                ancestorInfo.listItemTagAutoclosing = info;
              }
              if (tag === "dd" || tag === "dt") {
                ancestorInfo.dlItemTagAutoclosing = info;
              }

              return ancestorInfo;
            };

            /**
             * Returns whether
             */
            var isTagValidWithParent = function(tag, parentTag) {
              // First, let's check if we're in an unusual parsing mode...
              switch (parentTag) {
                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
                case "select":
                  return (
                    tag === "option" || tag === "optgroup" || tag === "#text"
                  );
                case "optgroup":
                  return tag === "option" || tag === "#text";
                // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
                // but
                case "option":
                  return tag === "#text";
                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
                // No special behavior since these rules fall back to "in body" mode for
                // all except special table nodes which cause bad parsing behavior anyway.

                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
                case "tr":
                  return (
                    tag === "th" ||
                    tag === "td" ||
                    tag === "style" ||
                    tag === "script" ||
                    tag === "template"
                  );
                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
                case "tbody":
                case "thead":
                case "tfoot":
                  return (
                    tag === "tr" ||
                    tag === "style" ||
                    tag === "script" ||
                    tag === "template"
                  );
                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
                case "colgroup":
                  return tag === "col" || tag === "template";
                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
                case "table":
                  return (
                    tag === "caption" ||
                    tag === "colgroup" ||
                    tag === "tbody" ||
                    tag === "tfoot" ||
                    tag === "thead" ||
                    tag === "style" ||
                    tag === "script" ||
                    tag === "template"
                  );
                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
                case "head":
                  return (
                    tag === "base" ||
                    tag === "basefont" ||
                    tag === "bgsound" ||
                    tag === "link" ||
                    tag === "meta" ||
                    tag === "title" ||
                    tag === "noscript" ||
                    tag === "noframes" ||
                    tag === "style" ||
                    tag === "script" ||
                    tag === "template"
                  );
                // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
                case "html":
                  return tag === "head" || tag === "body";
                case "#document":
                  return tag === "html";
              }

              // Probably in the "in body" parsing mode, so we outlaw only tag combos
              // where the parsing rules cause implicit opens or closes to be added.
              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
              switch (tag) {
                case "h1":
                case "h2":
                case "h3":
                case "h4":
                case "h5":
                case "h6":
                  return (
                    parentTag !== "h1" &&
                    parentTag !== "h2" &&
                    parentTag !== "h3" &&
                    parentTag !== "h4" &&
                    parentTag !== "h5" &&
                    parentTag !== "h6"
                  );

                case "rp":
                case "rt":
                  return impliedEndTags.indexOf(parentTag) === -1;

                case "body":
                case "caption":
                case "col":
                case "colgroup":
                case "frame":
                case "head":
                case "html":
                case "tbody":
                case "td":
                case "tfoot":
                case "th":
                case "thead":
                case "tr":
                  // These tags are only valid with a few parents that have special child
                  // parsing rules -- if we're down here, then none of those matched and
                  // so we allow it only if we don't know what the parent is, as all other
                  // cases are invalid.
                  return parentTag == null;
              }

              return true;
            };

            /**
             * Returns whether
             */
            var findInvalidAncestorForTag = function(tag, ancestorInfo) {
              switch (tag) {
                case "address":
                case "article":
                case "aside":
                case "blockquote":
                case "center":
                case "details":
                case "dialog":
                case "dir":
                case "div":
                case "dl":
                case "fieldset":
                case "figcaption":
                case "figure":
                case "footer":
                case "header":
                case "hgroup":
                case "main":
                case "menu":
                case "nav":
                case "ol":
                case "p":
                case "section":
                case "summary":
                case "ul":
                case "pre":
                case "listing":
                case "table":
                case "hr":
                case "xmp":
                case "h1":
                case "h2":
                case "h3":
                case "h4":
                case "h5":
                case "h6":
                  return ancestorInfo.pTagInButtonScope;

                case "form":
                  return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

                case "li":
                  return ancestorInfo.listItemTagAutoclosing;

                case "dd":
                case "dt":
                  return ancestorInfo.dlItemTagAutoclosing;

                case "button":
                  return ancestorInfo.buttonTagInScope;

                case "a":
                  // Spec says something about storing a list of markers, but it sounds
                  // equivalent to this check.
                  return ancestorInfo.aTagInScope;

                case "nobr":
                  return ancestorInfo.nobrTagInScope;
              }

              return null;
            };

            var didWarn = {};

            validateDOMNesting = function(childTag, childText, ancestorInfo) {
              ancestorInfo = ancestorInfo || emptyAncestorInfo;
              var parentInfo = ancestorInfo.current;
              var parentTag = parentInfo && parentInfo.tag;

              if (childText != null) {
                warning(
                  childTag == null,
                  "validateDOMNesting: when childText is passed, childTag should be null"
                );
                childTag = "#text";
              }

              var invalidParent = isTagValidWithParent(childTag, parentTag)
                ? null
                : parentInfo;
              var invalidAncestor = invalidParent
                ? null
                : findInvalidAncestorForTag(childTag, ancestorInfo);
              var invalidParentOrAncestor = invalidParent || invalidAncestor;
              if (!invalidParentOrAncestor) {
                return;
              }

              var ancestorTag = invalidParentOrAncestor.tag;
              var addendum = getCurrentFiberStackAddendum$6();

              var warnKey =
                !!invalidParent +
                "|" +
                childTag +
                "|" +
                ancestorTag +
                "|" +
                addendum;
              if (didWarn[warnKey]) {
                return;
              }
              didWarn[warnKey] = true;

              var tagDisplayName = childTag;
              var whitespaceInfo = "";
              if (childTag === "#text") {
                if (/\S/.test(childText)) {
                  tagDisplayName = "Text nodes";
                } else {
                  tagDisplayName = "Whitespace text nodes";
                  whitespaceInfo =
                    " Make sure you don't have any extra whitespace between tags on " +
                    "each line of your source code.";
                }
              } else {
                tagDisplayName = "<" + childTag + ">";
              }

              if (invalidParent) {
                var info = "";
                if (ancestorTag === "table" && childTag === "tr") {
                  info +=
                    " Add a <tbody> to your code to match the DOM tree generated by " +
                    "the browser.";
                }
                warning(
                  false,
                  "validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s",
                  tagDisplayName,
                  ancestorTag,
                  whitespaceInfo,
                  info,
                  addendum
                );
              } else {
                warning(
                  false,
                  "validateDOMNesting(...): %s cannot appear as a descendant of " +
                    "<%s>.%s",
                  tagDisplayName,
                  ancestorTag,
                  addendum
                );
              }
            };

            // TODO: turn this into a named export
            validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo$1;

            // For testing
            validateDOMNesting.isTagValidInContext = function(
              tag,
              ancestorInfo
            ) {
              ancestorInfo = ancestorInfo || emptyAncestorInfo;
              var parentInfo = ancestorInfo.current;
              var parentTag = parentInfo && parentInfo.tag;
              return (
                isTagValidWithParent(tag, parentTag) &&
                !findInvalidAncestorForTag(tag, ancestorInfo)
              );
            };
          }

          var validateDOMNesting$1 = validateDOMNesting;

          // TODO: direct imports like some-package/src/* are bad. Fix me.
          var createElement = createElement$1;
          var createTextNode = createTextNode$1;
          var setInitialProperties = setInitialProperties$1;
          var diffProperties = diffProperties$1;
          var updateProperties = updateProperties$1;
          var diffHydratedProperties = diffHydratedProperties$1;
          var diffHydratedText = diffHydratedText$1;
          var warnForUnmatchedText = warnForUnmatchedText$1;
          var warnForDeletedHydratableElement = warnForDeletedHydratableElement$1;
          var warnForDeletedHydratableText = warnForDeletedHydratableText$1;
          var warnForInsertedHydratedElement = warnForInsertedHydratedElement$1;
          var warnForInsertedHydratedText = warnForInsertedHydratedText$1;
          var updatedAncestorInfo = validateDOMNesting$1.updatedAncestorInfo;
          var precacheFiberNode = precacheFiberNode$1;
          var updateFiberProps = updateFiberProps$1;

          {
            var SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning";
            if (
              typeof Map !== "function" ||
              Map.prototype == null ||
              typeof Map.prototype.forEach !== "function" ||
              typeof Set !== "function" ||
              Set.prototype == null ||
              typeof Set.prototype.clear !== "function" ||
              typeof Set.prototype.forEach !== "function"
            ) {
              warning(
                false,
                "React depends on Map and Set built-in types. Make sure that you load a " +
                  "polyfill in older browsers. http://fb.me/react-polyfills"
              );
            }
          }

          injection$3.injectFiberControlledHostComponent(
            ReactDOMFiberComponent
          );

          var eventsEnabled = null;
          var selectionInformation = null;

          /**
           * True if the supplied DOM node is a valid node element.
           *
           * @param {?DOMElement} node The candidate DOM node.
           * @return {boolean} True if the DOM is a valid DOM node.
           * @internal
           */
          function isValidContainer(node) {
            return !!(
              node &&
              (node.nodeType === ELEMENT_NODE ||
                node.nodeType === DOCUMENT_NODE ||
                node.nodeType === DOCUMENT_FRAGMENT_NODE ||
                (node.nodeType === COMMENT_NODE &&
                  node.nodeValue === " react-mount-point-unstable "))
            );
          }

          function getReactRootElementInContainer(container) {
            if (!container) {
              return null;
            }

            if (container.nodeType === DOCUMENT_NODE) {
              return container.documentElement;
            } else {
              return container.firstChild;
            }
          }

          function shouldHydrateDueToLegacyHeuristic(container) {
            var rootElement = getReactRootElementInContainer(container);
            return !!(
              rootElement &&
              rootElement.nodeType === ELEMENT_NODE &&
              rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME)
            );
          }

          function shouldAutoFocusHostComponent(type, props) {
            switch (type) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                return !!props.autoFocus;
            }
            return false;
          }

          var DOMRenderer = reactReconciler({
            getRootHostContext: function(rootContainerInstance) {
              var type = void 0;
              var namespace = void 0;
              var nodeType = rootContainerInstance.nodeType;
              switch (nodeType) {
                case DOCUMENT_NODE:
                case DOCUMENT_FRAGMENT_NODE: {
                  type = nodeType === DOCUMENT_NODE ? "#document" : "#fragment";
                  var root = rootContainerInstance.documentElement;
                  namespace = root
                    ? root.namespaceURI
                    : getChildNamespace(null, "");
                  break;
                }
                default: {
                  var container =
                    nodeType === COMMENT_NODE
                      ? rootContainerInstance.parentNode
                      : rootContainerInstance;
                  var ownNamespace = container.namespaceURI || null;
                  type = container.tagName;
                  namespace = getChildNamespace(ownNamespace, type);
                  break;
                }
              }
              {
                var validatedTag = type.toLowerCase();
                var _ancestorInfo = updatedAncestorInfo(
                  null,
                  validatedTag,
                  null
                );
                return { namespace: namespace, ancestorInfo: _ancestorInfo };
              }
              return namespace;
            },
            getChildHostContext: function(parentHostContext, type) {
              {
                var parentHostContextDev = parentHostContext;
                var _namespace = getChildNamespace(
                  parentHostContextDev.namespace,
                  type
                );
                var _ancestorInfo2 = updatedAncestorInfo(
                  parentHostContextDev.ancestorInfo,
                  type,
                  null
                );
                return { namespace: _namespace, ancestorInfo: _ancestorInfo2 };
              }
              var parentNamespace = parentHostContext;
              return getChildNamespace(parentNamespace, type);
            },
            getPublicInstance: function(instance) {
              return instance;
            },
            prepareForCommit: function() {
              eventsEnabled = isEnabled();
              selectionInformation = getSelectionInformation();
              setEnabled(false);
            },
            resetAfterCommit: function() {
              restoreSelection(selectionInformation);
              selectionInformation = null;
              setEnabled(eventsEnabled);
              eventsEnabled = null;
            },
            createInstance: function(
              type,
              props,
              rootContainerInstance,
              hostContext,
              internalInstanceHandle
            ) {
              var parentNamespace = void 0;
              {
                // TODO: take namespace into account when validating.
                var hostContextDev = hostContext;
                validateDOMNesting$1(type, null, hostContextDev.ancestorInfo);
                if (
                  typeof props.children === "string" ||
                  typeof props.children === "number"
                ) {
                  var string = "" + props.children;
                  var ownAncestorInfo = updatedAncestorInfo(
                    hostContextDev.ancestorInfo,
                    type,
                    null
                  );
                  validateDOMNesting$1(null, string, ownAncestorInfo);
                }
                parentNamespace = hostContextDev.namespace;
              }
              var domElement = createElement(
                type,
                props,
                rootContainerInstance,
                parentNamespace
              );
              precacheFiberNode(internalInstanceHandle, domElement);
              updateFiberProps(domElement, props);
              return domElement;
            },
            appendInitialChild: function(parentInstance, child) {
              parentInstance.appendChild(child);
            },
            finalizeInitialChildren: function(
              domElement,
              type,
              props,
              rootContainerInstance
            ) {
              setInitialProperties(
                domElement,
                type,
                props,
                rootContainerInstance
              );
              return shouldAutoFocusHostComponent(type, props);
            },
            prepareUpdate: function(
              domElement,
              type,
              oldProps,
              newProps,
              rootContainerInstance,
              hostContext
            ) {
              {
                var hostContextDev = hostContext;
                if (
                  typeof newProps.children !== typeof oldProps.children &&
                  (typeof newProps.children === "string" ||
                    typeof newProps.children === "number")
                ) {
                  var string = "" + newProps.children;
                  var ownAncestorInfo = updatedAncestorInfo(
                    hostContextDev.ancestorInfo,
                    type,
                    null
                  );
                  validateDOMNesting$1(null, string, ownAncestorInfo);
                }
              }
              return diffProperties(
                domElement,
                type,
                oldProps,
                newProps,
                rootContainerInstance
              );
            },
            shouldSetTextContent: function(type, props) {
              return (
                type === "textarea" ||
                typeof props.children === "string" ||
                typeof props.children === "number" ||
                (typeof props.dangerouslySetInnerHTML === "object" &&
                  props.dangerouslySetInnerHTML !== null &&
                  typeof props.dangerouslySetInnerHTML.__html === "string")
              );
            },
            shouldDeprioritizeSubtree: function(type, props) {
              return !!props.hidden;
            },
            createTextInstance: function(
              text,
              rootContainerInstance,
              hostContext,
              internalInstanceHandle
            ) {
              {
                var hostContextDev = hostContext;
                validateDOMNesting$1(null, text, hostContextDev.ancestorInfo);
              }
              var textNode = createTextNode(text, rootContainerInstance);
              precacheFiberNode(internalInstanceHandle, textNode);
              return textNode;
            },

            now: now,

            mutation: {
              commitMount: function(
                domElement,
                type,
                newProps,
                internalInstanceHandle
              ) {
                domElement.focus();
              },
              commitUpdate: function(
                domElement,
                updatePayload,
                type,
                oldProps,
                newProps,
                internalInstanceHandle
              ) {
                // Update the props handle so that we know which props are the ones with
                // with current event handlers.
                updateFiberProps(domElement, newProps);
                // Apply the diff to the DOM node.
                updateProperties(
                  domElement,
                  updatePayload,
                  type,
                  oldProps,
                  newProps
                );
              },
              resetTextContent: function(domElement) {
                domElement.textContent = "";
              },
              commitTextUpdate: function(textInstance, oldText, newText) {
                textInstance.nodeValue = newText;
              },
              appendChild: function(parentInstance, child) {
                parentInstance.appendChild(child);
              },
              appendChildToContainer: function(container, child) {
                if (container.nodeType === COMMENT_NODE) {
                  container.parentNode.insertBefore(child, container);
                } else {
                  container.appendChild(child);
                }
              },
              insertBefore: function(parentInstance, child, beforeChild) {
                parentInstance.insertBefore(child, beforeChild);
              },
              insertInContainerBefore: function(container, child, beforeChild) {
                if (container.nodeType === COMMENT_NODE) {
                  container.parentNode.insertBefore(child, beforeChild);
                } else {
                  container.insertBefore(child, beforeChild);
                }
              },
              removeChild: function(parentInstance, child) {
                parentInstance.removeChild(child);
              },
              removeChildFromContainer: function(container, child) {
                if (container.nodeType === COMMENT_NODE) {
                  container.parentNode.removeChild(child);
                } else {
                  container.removeChild(child);
                }
              }
            },

            hydration: {
              canHydrateInstance: function(instance, type, props) {
                return (
                  instance.nodeType === ELEMENT_NODE &&
                  type.toLowerCase() === instance.nodeName.toLowerCase()
                );
              },
              canHydrateTextInstance: function(instance, text) {
                if (text === "") {
                  // Empty strings are not parsed by HTML so there won't be a correct match here.
                  return false;
                }
                return instance.nodeType === TEXT_NODE;
              },
              getNextHydratableSibling: function(instance) {
                var node = instance.nextSibling;
                // Skip non-hydratable nodes.
                while (
                  node &&
                  node.nodeType !== ELEMENT_NODE &&
                  node.nodeType !== TEXT_NODE
                ) {
                  node = node.nextSibling;
                }
                return node;
              },
              getFirstHydratableChild: function(parentInstance) {
                var next = parentInstance.firstChild;
                // Skip non-hydratable nodes.
                while (
                  next &&
                  next.nodeType !== ELEMENT_NODE &&
                  next.nodeType !== TEXT_NODE
                ) {
                  next = next.nextSibling;
                }
                return next;
              },
              hydrateInstance: function(
                instance,
                type,
                props,
                rootContainerInstance,
                hostContext,
                internalInstanceHandle
              ) {
                precacheFiberNode(internalInstanceHandle, instance);
                // TODO: Possibly defer this until the commit phase where all the events
                // get attached.
                updateFiberProps(instance, props);
                var parentNamespace = void 0;
                {
                  var hostContextDev = hostContext;
                  parentNamespace = hostContextDev.namespace;
                }
                return diffHydratedProperties(
                  instance,
                  type,
                  props,
                  parentNamespace,
                  rootContainerInstance
                );
              },
              hydrateTextInstance: function(
                textInstance,
                text,
                internalInstanceHandle
              ) {
                precacheFiberNode(internalInstanceHandle, textInstance);
                return diffHydratedText(textInstance, text);
              },
              didNotMatchHydratedContainerTextInstance: function(
                parentContainer,
                textInstance,
                text
              ) {
                {
                  warnForUnmatchedText(textInstance, text);
                }
              },
              didNotMatchHydratedTextInstance: function(
                parentType,
                parentProps,
                parentInstance,
                textInstance,
                text
              ) {
                if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                  warnForUnmatchedText(textInstance, text);
                }
              },
              didNotHydrateContainerInstance: function(
                parentContainer,
                instance
              ) {
                {
                  if (instance.nodeType === 1) {
                    warnForDeletedHydratableElement(parentContainer, instance);
                  } else {
                    warnForDeletedHydratableText(parentContainer, instance);
                  }
                }
              },
              didNotHydrateInstance: function(
                parentType,
                parentProps,
                parentInstance,
                instance
              ) {
                if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                  if (instance.nodeType === 1) {
                    warnForDeletedHydratableElement(parentInstance, instance);
                  } else {
                    warnForDeletedHydratableText(parentInstance, instance);
                  }
                }
              },
              didNotFindHydratableContainerInstance: function(
                parentContainer,
                type,
                props
              ) {
                {
                  warnForInsertedHydratedElement(parentContainer, type, props);
                }
              },
              didNotFindHydratableContainerTextInstance: function(
                parentContainer,
                text
              ) {
                {
                  warnForInsertedHydratedText(parentContainer, text);
                }
              },
              didNotFindHydratableInstance: function(
                parentType,
                parentProps,
                parentInstance,
                type,
                props
              ) {
                if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                  warnForInsertedHydratedElement(parentInstance, type, props);
                }
              },
              didNotFindHydratableTextInstance: function(
                parentType,
                parentProps,
                parentInstance,
                text
              ) {
                if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                  warnForInsertedHydratedText(parentInstance, text);
                }
              }
            },

            scheduleDeferredCallback: rIC,

            useSyncScheduling: !enableAsyncSchedulingByDefaultInReactDOM
          });

          injection$4.injectFiberBatchedUpdates(DOMRenderer.batchedUpdates);

          var warnedAboutHydrateAPI = false;

          function renderSubtreeIntoContainer(
            parentComponent,
            children,
            container,
            forceHydrate,
            callback
          ) {
            !isValidContainer(container)
              ? invariant(false, "Target container is not a DOM element.")
              : void 0;

            {
              if (
                container._reactRootContainer &&
                container.nodeType !== COMMENT_NODE
              ) {
                var hostInstance = DOMRenderer.findHostInstanceWithNoPortals(
                  container._reactRootContainer.current
                );
                if (hostInstance) {
                  warning(
                    hostInstance.parentNode === container,
                    "render(...): It looks like the React-rendered content of this " +
                      "container was removed without using React. This is not " +
                      "supported and will cause errors. Instead, call " +
                      "ReactDOM.unmountComponentAtNode to empty a container."
                  );
                }
              }

              var isRootRenderedBySomeReact = !!container._reactRootContainer;
              var rootEl = getReactRootElementInContainer(container);
              var hasNonRootReactChild = !!(
                rootEl && getInstanceFromNode$1(rootEl)
              );

              warning(
                !hasNonRootReactChild || isRootRenderedBySomeReact,
                "render(...): Replacing React-rendered children with a new root " +
                  "component. If you intended to update the children of this node, " +
                  "you should instead have the existing children update their state " +
                  "and render the new components instead of calling ReactDOM.render."
              );

              warning(
                container.nodeType !== ELEMENT_NODE ||
                  !container.tagName ||
                  container.tagName.toUpperCase() !== "BODY",
                "render(): Rendering components directly into document.body is " +
                  "discouraged, since its children are often manipulated by third-party " +
                  "scripts and browser extensions. This may lead to subtle " +
                  "reconciliation issues. Try rendering into a container element created " +
                  "for your app."
              );
            }

            var root = container._reactRootContainer;
            if (!root) {
              var shouldHydrate =
                forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
              // First clear any existing content.
              if (!shouldHydrate) {
                var warned = false;
                var rootSibling = void 0;
                while ((rootSibling = container.lastChild)) {
                  {
                    if (
                      !warned &&
                      rootSibling.nodeType === ELEMENT_NODE &&
                      rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)
                    ) {
                      warned = true;
                      warning(
                        false,
                        "render(): Target node has markup rendered by React, but there " +
                          "are unrelated nodes as well. This is most commonly caused by " +
                          "white-space inserted around server-rendered markup."
                      );
                    }
                  }
                  container.removeChild(rootSibling);
                }
              }
              {
                if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
                  warnedAboutHydrateAPI = true;
                  lowPriorityWarning$1(
                    false,
                    "render(): Calling ReactDOM.render() to hydrate server-rendered markup " +
                      "will stop working in React v17. Replace the ReactDOM.render() call " +
                      "with ReactDOM.hydrate() if you want React to attach to the server HTML."
                  );
                }
              }
              var newRoot = DOMRenderer.createContainer(
                container,
                shouldHydrate
              );
              root = container._reactRootContainer = newRoot;
              // Initial mount should not be batched.
              DOMRenderer.unbatchedUpdates(function() {
                DOMRenderer.updateContainer(
                  children,
                  newRoot,
                  parentComponent,
                  callback
                );
              });
            } else {
              DOMRenderer.updateContainer(
                children,
                root,
                parentComponent,
                callback
              );
            }
            return DOMRenderer.getPublicRootInstance(root);
          }

          function createPortal(children, container) {
            var key =
              arguments.length > 2 && arguments[2] !== undefined
                ? arguments[2]
                : null;

            !isValidContainer(container)
              ? invariant(false, "Target container is not a DOM element.")
              : void 0;
            // TODO: pass ReactDOM portal implementation as third argument
            return createPortal$1(children, container, null, key);
          }

          function ReactRoot(container, hydrate) {
            var root = DOMRenderer.createContainer(container, hydrate);
            this._reactRootContainer = root;
          }
          ReactRoot.prototype.render = function(children, callback) {
            var root = this._reactRootContainer;
            DOMRenderer.updateContainer(children, root, null, callback);
          };
          ReactRoot.prototype.unmount = function(callback) {
            var root = this._reactRootContainer;
            DOMRenderer.updateContainer(null, root, null, callback);
          };

          var ReactDOM = {
            createPortal: createPortal,

            findDOMNode: function(componentOrElement) {
              {
                var owner = ReactCurrentOwner.current;
                if (owner !== null) {
                  var warnedAboutRefsInRender =
                    owner.stateNode._warnedAboutRefsInRender;
                  warning(
                    warnedAboutRefsInRender,
                    "%s is accessing findDOMNode inside its render(). " +
                      "render() should be a pure function of props and state. It should " +
                      "never access something that requires stale data from the previous " +
                      "render, such as refs. Move this logic to componentDidMount and " +
                      "componentDidUpdate instead.",
                    getComponentName(owner) || "A component"
                  );
                  owner.stateNode._warnedAboutRefsInRender = true;
                }
              }
              if (componentOrElement == null) {
                return null;
              }
              if (componentOrElement.nodeType === ELEMENT_NODE) {
                return componentOrElement;
              }

              var inst = get(componentOrElement);
              if (inst) {
                return DOMRenderer.findHostInstance(inst);
              }

              if (typeof componentOrElement.render === "function") {
                invariant(
                  false,
                  "Unable to find node on an unmounted component."
                );
              } else {
                invariant(
                  false,
                  "Element appears to be neither ReactComponent nor DOMNode. Keys: %s",
                  Object.keys(componentOrElement)
                );
              }
            },
            hydrate: function(element, container, callback) {
              // TODO: throw or warn if we couldn't hydrate?
              return renderSubtreeIntoContainer(
                null,
                element,
                container,
                true,
                callback
              );
            },
            render: function(element, container, callback) {
              return renderSubtreeIntoContainer(
                null,
                element,
                container,
                false,
                callback
              );
            },
            unstable_renderSubtreeIntoContainer: function(
              parentComponent,
              element,
              containerNode,
              callback
            ) {
              !(parentComponent != null && has(parentComponent))
                ? invariant(
                    false,
                    "parentComponent must be a valid React Component"
                  )
                : void 0;
              return renderSubtreeIntoContainer(
                parentComponent,
                element,
                containerNode,
                false,
                callback
              );
            },
            unmountComponentAtNode: function(container) {
              !isValidContainer(container)
                ? invariant(
                    false,
                    "unmountComponentAtNode(...): Target container is not a DOM element."
                  )
                : void 0;

              if (container._reactRootContainer) {
                {
                  var rootEl = getReactRootElementInContainer(container);
                  var renderedByDifferentReact =
                    rootEl && !getInstanceFromNode$1(rootEl);
                  warning(
                    !renderedByDifferentReact,
                    "unmountComponentAtNode(): The node you're attempting to unmount " +
                      "was rendered by another copy of React."
                  );
                }

                // Unmount should not be batched.
                DOMRenderer.unbatchedUpdates(function() {
                  renderSubtreeIntoContainer(
                    null,
                    null,
                    container,
                    false,
                    function() {
                      container._reactRootContainer = null;
                    }
                  );
                });
                // If you call unmountComponentAtNode twice in quick succession, you'll
                // get `true` twice. That's probably fine?
                return true;
              } else {
                {
                  var _rootEl = getReactRootElementInContainer(container);
                  var hasNonRootReactChild = !!(
                    _rootEl && getInstanceFromNode$1(_rootEl)
                  );

                  // Check if the container itself is a React root node.
                  var isContainerReactRoot =
                    container.nodeType === 1 &&
                    isValidContainer(container.parentNode) &&
                    !!container.parentNode._reactRootContainer;

                  warning(
                    !hasNonRootReactChild,
                    "unmountComponentAtNode(): The node you're attempting to unmount " +
                      "was rendered by React and is not a top-level container. %s",
                    isContainerReactRoot
                      ? "You may have accidentally passed in a React root node instead " +
                        "of its container."
                      : "Instead, have the parent component update its state and " +
                        "rerender in order to remove this component."
                  );
                }

                return false;
              }
            },

            // Temporary alias since we already shipped React 16 RC with it.
            // TODO: remove in React 17.
            unstable_createPortal: createPortal,

            unstable_batchedUpdates: batchedUpdates,

            unstable_deferredUpdates: DOMRenderer.deferredUpdates,

            flushSync: DOMRenderer.flushSync,

            __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
              // For TapEventPlugin which is popular in open source
              EventPluginHub: EventPluginHub,
              // Used by test-utils
              EventPluginRegistry: EventPluginRegistry,
              EventPropagators: EventPropagators,
              ReactControlledComponent: ReactControlledComponent,
              ReactDOMComponentTree: ReactDOMComponentTree,
              ReactDOMEventListener: ReactDOMEventListener
            }
          };

          if (enableCreateRoot) {
            ReactDOM.createRoot = function createRoot(container, options) {
              var hydrate = options != null && options.hydrate === true;
              return new ReactRoot(container, hydrate);
            };
          }

          var foundDevTools = DOMRenderer.injectIntoDevTools({
            findFiberByHostInstance: getClosestInstanceFromNode,
            bundleType: 1,
            version: ReactVersion,
            rendererPackageName: "react-dom"
          });

          {
            if (
              !foundDevTools &&
              ExecutionEnvironment.canUseDOM &&
              window.top === window.self
            ) {
              // If we're in Chrome or Firefox, provide a download link if not installed.
              if (
                (navigator.userAgent.indexOf("Chrome") > -1 &&
                  navigator.userAgent.indexOf("Edge") === -1) ||
                navigator.userAgent.indexOf("Firefox") > -1
              ) {
                var protocol = window.location.protocol;
                // Don't warn in exotic cases like chrome-extension://.
                if (/^(https?|file):$/.test(protocol)) {
                  console.info(
                    "%cDownload the React DevTools " +
                      "for a better development experience: " +
                      "https://fb.me/react-devtools" +
                      (protocol === "file:"
                        ? "\nYou might need to use a local HTTP server (instead of file://): " +
                          "https://fb.me/react-devtools-faq"
                        : ""),
                    "font-weight:bold"
                  );
                }
              }
            }
          }

          var ReactDOM$2 = Object.freeze({
            default: ReactDOM
          });

          var ReactDOM$3 = (ReactDOM$2 && ReactDOM) || ReactDOM$2;

          // TODO: decide on the top-level export form.
          // This is hacky but makes it work with both Rollup and Jest.
          var reactDom = ReactDOM$3["default"]
            ? ReactDOM$3["default"]
            : ReactDOM$3;

          module.exports = reactDom;
        })();
      }

      /***/
    },
    /* 23 */
    /***/ function(module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       * @typechecks
       */

      "use strict";

      var hyphenate = __webpack_require__(24);

      var msPattern = /^ms-/;

      /**
       * Hyphenates a camelcased CSS property name, for example:
       *
       *   > hyphenateStyleName('backgroundColor')
       *   < "background-color"
       *   > hyphenateStyleName('MozTransition')
       *   < "-moz-transition"
       *   > hyphenateStyleName('msTransition')
       *   < "-ms-transition"
       *
       * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
       * is converted to `-ms-`.
       *
       * @param {string} string
       * @return {string}
       */
      function hyphenateStyleName(string) {
        return hyphenate(string).replace(msPattern, "-ms-");
      }

      module.exports = hyphenateStyleName;

      /***/
    },
    /* 24 */
    /***/ function(module, exports) {
      "use strict";

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       * @typechecks
       */

      var _uppercasePattern = /([A-Z])/g;

      /**
       * Hyphenates a camelcased string, for example:
       *
       *   > hyphenate('backgroundColor')
       *   < "background-color"
       *
       * For CSS style names, use `hyphenateStyleName` instead which works properly
       * with all vendor prefixes, including `ms`.
       *
       * @param {string} string
       * @return {string}
       */
      function hyphenate(string) {
        return string.replace(_uppercasePattern, "-$1").toLowerCase();
      }

      module.exports = hyphenate;

      /***/
    },
    /* 25 */
    /***/ function(module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       * @typechecks
       */

      "use strict";

      var camelize = __webpack_require__(26);

      var msPattern = /^-ms-/;

      /**
       * Camelcases a hyphenated CSS property name, for example:
       *
       *   > camelizeStyleName('background-color')
       *   < "backgroundColor"
       *   > camelizeStyleName('-moz-transition')
       *   < "MozTransition"
       *   > camelizeStyleName('-ms-transition')
       *   < "msTransition"
       *
       * As Andi Smith suggests
       * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
       * is converted to lowercase `ms`.
       *
       * @param {string} string
       * @return {string}
       */
      function camelizeStyleName(string) {
        return camelize(string.replace(msPattern, "ms-"));
      }

      module.exports = camelizeStyleName;

      /***/
    },
    /* 26 */
    /***/ function(module, exports) {
      "use strict";

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       * @typechecks
       */

      var _hyphenPattern = /-(.)/g;

      /**
       * Camelcases a hyphenated string, for example:
       *
       *   > camelize('background-color')
       *   < "backgroundColor"
       *
       * @param {string} string
       * @return {string}
       */
      function camelize(string) {
        return string.replace(_hyphenPattern, function(_, character) {
          return character.toUpperCase();
        });
      }

      module.exports = camelize;

      /***/
    },
    /* 27 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _example_components = __webpack_require__(28);

      var _example_components2 = _interopRequireDefault(_example_components);

      var _hero_example = __webpack_require__(400);

      var _hero_example2 = _interopRequireDefault(_hero_example);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Root = (function(_React$Component) {
        _inherits(Root, _React$Component);

        function Root() {
          _classCallCheck(this, Root);

          return _possibleConstructorReturn(
            this,
            _React$Component.apply(this, arguments)
          );
        }

        Root.prototype.componentDidMount = function componentDidMount() {
          window.scrollTo(0, 0);
        };

        Root.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement(
              "div",
              { className: "hero" },
              _react2.default.createElement(
                "div",
                { className: "hero__content" },
                _react2.default.createElement(
                  "h1",
                  { className: "hero__title" },
                  "ReactJS Datepicker"
                ),
                _react2.default.createElement(
                  "div",
                  { className: "hero__crafted-by" },
                  _react2.default.createElement(
                    "a",
                    {
                      href: "https://hackerone.com",
                      className: "hero__crafted-by-link"
                    },
                    "Crafted by ",
                    _react2.default.createElement("img", {
                      src: "images/logo.png",
                      className: "hero__image",
                      alt: "HackerOne",
                      title: "HackerOne"
                    })
                  )
                ),
                _react2.default.createElement(
                  "div",
                  { className: "hero__example" },
                  _react2.default.createElement(_hero_example2.default, null)
                )
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "wrapper" },
              _react2.default.createElement("h1", null, "ReactJS Datepicker"),
              _react2.default.createElement(
                "p",
                { className: "badges" },
                _react2.default.createElement(
                  "a",
                  { href: "https://npmjs.org/package/react-datepicker" },
                  _react2.default.createElement("img", {
                    src: "https://badge.fury.io/js/react-datepicker.svg",
                    className: "badge"
                  })
                ),
                _react2.default.createElement(
                  "a",
                  { href: "https://travis-ci.org/Hacker0x01/react-datepicker" },
                  _react2.default.createElement("img", {
                    src:
                      "https://travis-ci.org/Hacker0x01/react-datepicker.svg?branch=master",
                    className: "badge"
                  })
                ),
                _react2.default.createElement(
                  "a",
                  { href: "https://david-dm.org/Hacker0x01/react-datepicker" },
                  _react2.default.createElement("img", {
                    src: "https://david-dm.org/Hacker0x01/react-datepicker.svg",
                    className: "badge"
                  })
                ),
                _react2.default.createElement(
                  "a",
                  {
                    href:
                      "https://npmjs.org/package/react-datepicker" +
                      "?__hstc=72727564.ca821b01b5b29b1831f0936a681f0483.1428679773810.1435582678273.1438354735499.5" +
                      "&__hssc=72727564.1.1438354735499" +
                      "&__hsfp=2497064007"
                  },
                  _react2.default.createElement("img", {
                    src: "https://img.shields.io/npm/dm/react-datepicker.svg",
                    className: "badge"
                  })
                )
              ),
              _react2.default.createElement(
                "p",
                null,
                "A simple and reusable datepicker component for React."
              ),
              _react2.default.createElement("h2", null, "Installation"),
              _react2.default.createElement(
                "p",
                null,
                "The package can be installed via NPM:"
              ),
              _react2.default.createElement(
                "p",
                null,
                _react2.default.createElement(
                  "code",
                  null,
                  "npm install react-datepicker --save"
                )
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "wrapper" },
              _react2.default.createElement(_example_components2.default, null)
            ),
            _react2.default.createElement(
              "a",
              { href: "https://github.com/Hacker0x01/react-datepicker/" },
              _react2.default.createElement("img", {
                className: "github-ribbon",
                src: "images/ribbon.png",
                alt: "Fork me on GitHub"
              })
            )
          );
        };

        return Root;
      })(_react2.default.Component);

      exports.default = Root;

      /***/
    },
    /* 28 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _highlight = __webpack_require__(29);

      var _highlight2 = _interopRequireDefault(_highlight);

      var _default = __webpack_require__(207);

      var _default2 = _interopRequireDefault(_default);

      var _code_example_component = __webpack_require__(355);

      var _code_example_component2 = _interopRequireDefault(
        _code_example_component
      );

      var _custom_date_format = __webpack_require__(356);

      var _custom_date_format2 = _interopRequireDefault(_custom_date_format);

      var _custom_class_name = __webpack_require__(357);

      var _custom_class_name2 = _interopRequireDefault(_custom_class_name);

      var _custom_calendar_class_name = __webpack_require__(358);

      var _custom_calendar_class_name2 = _interopRequireDefault(
        _custom_calendar_class_name
      );

      var _custom_day_class_names = __webpack_require__(359);

      var _custom_day_class_names2 = _interopRequireDefault(
        _custom_day_class_names
      );

      var _placeholder_text = __webpack_require__(360);

      var _placeholder_text2 = _interopRequireDefault(_placeholder_text);

      var _specific_date_range = __webpack_require__(361);

      var _specific_date_range2 = _interopRequireDefault(_specific_date_range);

      var _locale = __webpack_require__(362);

      var _locale2 = _interopRequireDefault(_locale);

      var _exclude_dates = __webpack_require__(363);

      var _exclude_dates2 = _interopRequireDefault(_exclude_dates);

      var _highlight_dates = __webpack_require__(364);

      var _highlight_dates2 = _interopRequireDefault(_highlight_dates);

      var _highlight_dates_with_ranges = __webpack_require__(365);

      var _highlight_dates_with_ranges2 = _interopRequireDefault(
        _highlight_dates_with_ranges
      );

      var _include_dates = __webpack_require__(366);

      var _include_dates2 = _interopRequireDefault(_include_dates);

      var _filter_dates = __webpack_require__(367);

      var _filter_dates2 = _interopRequireDefault(_filter_dates);

      var _disabled = __webpack_require__(368);

      var _disabled2 = _interopRequireDefault(_disabled);

      var _disabled_keyboard_navigation = __webpack_require__(369);

      var _disabled_keyboard_navigation2 = _interopRequireDefault(
        _disabled_keyboard_navigation
      );

      var _clear_input = __webpack_require__(370);

      var _clear_input2 = _interopRequireDefault(_clear_input);

      var _on_blur_callbacks = __webpack_require__(371);

      var _on_blur_callbacks2 = _interopRequireDefault(_on_blur_callbacks);

      var _configurePopper = __webpack_require__(372);

      var _configurePopper2 = _interopRequireDefault(_configurePopper);

      var _date_range = __webpack_require__(373);

      var _date_range2 = _interopRequireDefault(_date_range);

      var _tab_index = __webpack_require__(374);

      var _tab_index2 = _interopRequireDefault(_tab_index);

      var _year_dropdown = __webpack_require__(375);

      var _year_dropdown2 = _interopRequireDefault(_year_dropdown);

      var _month_dropdown = __webpack_require__(376);

      var _month_dropdown2 = _interopRequireDefault(_month_dropdown);

      var _month_year_dropdown = __webpack_require__(377);

      var _month_year_dropdown2 = _interopRequireDefault(_month_year_dropdown);

      var _month_dropdown_short = __webpack_require__(378);

      var _month_dropdown_short2 = _interopRequireDefault(
        _month_dropdown_short
      );

      var _year_select_dropdown = __webpack_require__(379);

      var _year_select_dropdown2 = _interopRequireDefault(
        _year_select_dropdown
      );

      var _today = __webpack_require__(380);

      var _today2 = _interopRequireDefault(_today);

      var _timezone_date = __webpack_require__(381);

      var _timezone_date2 = _interopRequireDefault(_timezone_date);

      var _inline = __webpack_require__(382);

      var _inline2 = _interopRequireDefault(_inline);

      var _open_to_date = __webpack_require__(383);

      var _open_to_date2 = _interopRequireDefault(_open_to_date);

      var _fixed_calendar = __webpack_require__(384);

      var _fixed_calendar2 = _interopRequireDefault(_fixed_calendar);

      var _week_numbers = __webpack_require__(385);

      var _week_numbers2 = _interopRequireDefault(_week_numbers);

      var _custom_input = __webpack_require__(386);

      var _custom_input2 = _interopRequireDefault(_custom_input);

      var _multi_month = __webpack_require__(387);

      var _multi_month2 = _interopRequireDefault(_multi_month);

      var _multi_month_drp = __webpack_require__(388);

      var _multi_month_drp2 = _interopRequireDefault(_multi_month_drp);

      var _children = __webpack_require__(389);

      var _children2 = _interopRequireDefault(_children);

      var _portal = __webpack_require__(390);

      var _portal2 = _interopRequireDefault(_portal);

      var _inline_portal = __webpack_require__(391);

      var _inline_portal2 = _interopRequireDefault(_inline_portal);

      var _raw_change = __webpack_require__(392);

      var _raw_change2 = _interopRequireDefault(_raw_change);

      var _show_time = __webpack_require__(393);

      var _show_time2 = _interopRequireDefault(_show_time);

      var _exclude_times = __webpack_require__(394);

      var _exclude_times2 = _interopRequireDefault(_exclude_times);

      var _exclude_time_period = __webpack_require__(395);

      var _exclude_time_period2 = _interopRequireDefault(_exclude_time_period);

      var _dont_close_onSelect = __webpack_require__(396);

      var _dont_close_onSelect2 = _interopRequireDefault(_dont_close_onSelect);

      var _open_by_default = __webpack_require__(397);

      var _open_by_default2 = _interopRequireDefault(_open_by_default);

      __webpack_require__(398);

      __webpack_require__(399);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var exampleComponents = (function(_React$Component) {
        _inherits(exampleComponents, _React$Component);

        function exampleComponents() {
          var _temp, _this, _ret;

          _classCallCheck(this, exampleComponents);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.examples = [
              {
                title: "Default",
                component: _react2.default.createElement(
                  _default2.default,
                  null
                )
              },
              {
                title: "Select Time",
                component: _react2.default.createElement(
                  _show_time2.default,
                  null
                )
              },
              {
                title: "Exclude Times",
                component: _react2.default.createElement(
                  _exclude_times2.default,
                  null
                )
              },
              {
                title: "Specific Time Range",
                component: _react2.default.createElement(
                  _exclude_time_period2.default,
                  null
                )
              },
              {
                title: "Custom date format",
                component: _react2.default.createElement(
                  _custom_date_format2.default,
                  null
                )
              },
              {
                title: "Custom class name",
                component: _react2.default.createElement(
                  _custom_class_name2.default,
                  null
                )
              },
              {
                title: "Custom calendar class name",
                component: _react2.default.createElement(
                  _custom_calendar_class_name2.default,
                  null
                )
              },
              {
                title: "Custom day class names",
                component: _react2.default.createElement(
                  _custom_day_class_names2.default,
                  null
                )
              },
              {
                title: "Today button",
                component: _react2.default.createElement(_today2.default, null)
              },
              {
                title: "TimeZone date",
                component: _react2.default.createElement(
                  _timezone_date2.default,
                  null
                )
              },
              {
                title: "Placeholder text",
                component: _react2.default.createElement(
                  _placeholder_text2.default,
                  null
                )
              },
              {
                title: "Specific date range",
                component: _react2.default.createElement(
                  _specific_date_range2.default,
                  null
                )
              },
              {
                title: "Locale",
                component: _react2.default.createElement(_locale2.default, null)
              },
              {
                title: "Exclude dates",
                component: _react2.default.createElement(
                  _exclude_dates2.default,
                  null
                )
              },
              {
                title: "Highlight dates",
                component: _react2.default.createElement(
                  _highlight_dates2.default,
                  null
                )
              },
              {
                title: "Highlight dates with custom class names and ranges",
                component: _react2.default.createElement(
                  _highlight_dates_with_ranges2.default,
                  null
                )
              },
              {
                title: "Include dates",
                component: _react2.default.createElement(
                  _include_dates2.default,
                  null
                )
              },
              {
                title: "Filter dates",
                component: _react2.default.createElement(
                  _filter_dates2.default,
                  null
                )
              },
              {
                title: "Date Range",
                component: _react2.default.createElement(
                  _date_range2.default,
                  null
                )
              },
              {
                title: "Disable datepicker",
                component: _react2.default.createElement(
                  _disabled2.default,
                  null
                )
              },
              {
                title: "Disable keyboard navigation",
                component: _react2.default.createElement(
                  _disabled_keyboard_navigation2.default,
                  null
                )
              },
              {
                title: "Clear datepicker input",
                component: _react2.default.createElement(
                  _clear_input2.default,
                  null
                )
              },
              {
                title: "onBlur callbacks in console",
                component: _react2.default.createElement(
                  _on_blur_callbacks2.default,
                  null
                )
              },
              {
                title: "Configure Popper Properties",
                component: _react2.default.createElement(
                  _configurePopper2.default,
                  null
                )
              },
              {
                title: "Portal version",
                component: _react2.default.createElement(_portal2.default, null)
              },
              {
                title: "Inline portal version",
                component: _react2.default.createElement(
                  _inline_portal2.default,
                  null
                )
              },
              {
                title: "TabIndex",
                component: _react2.default.createElement(
                  _tab_index2.default,
                  null
                )
              },
              {
                title: "Year dropdown",
                component: _react2.default.createElement(
                  _year_dropdown2.default,
                  null
                )
              },
              {
                title: "Month dropdown",
                component: _react2.default.createElement(
                  _month_dropdown2.default,
                  null
                )
              },
              {
                title: "Month dropdown short month",
                component: _react2.default.createElement(
                  _month_dropdown_short2.default,
                  null
                )
              },
              {
                title: "MonthYear dropdown",
                component: _react2.default.createElement(
                  _month_year_dropdown2.default,
                  null
                )
              },
              {
                title: "Year select dropdown",
                component: _react2.default.createElement(
                  _year_select_dropdown2.default,
                  null
                )
              },
              {
                title: "Inline version",
                component: _react2.default.createElement(_inline2.default, null)
              },
              {
                title: "Open to date",
                component: _react2.default.createElement(
                  _open_to_date2.default,
                  null
                )
              },
              {
                title: "Fixed height of Calendar",
                component: _react2.default.createElement(
                  _fixed_calendar2.default,
                  null
                )
              },
              {
                title: "Display Week Numbers",
                component: _react2.default.createElement(
                  _week_numbers2.default,
                  null
                )
              },
              {
                title: "Custom input",
                component: _react2.default.createElement(
                  _custom_input2.default,
                  null
                )
              },
              {
                title: "Multiple months",
                component: _react2.default.createElement(
                  _multi_month2.default,
                  null
                )
              },
              {
                title: "Multiple months with year dropdown",
                component: _react2.default.createElement(
                  _multi_month_drp2.default,
                  null
                )
              },
              {
                title: "Children",
                component: _react2.default.createElement(
                  _children2.default,
                  null
                )
              },
              {
                title: "Get raw input value on change",
                component: _react2.default.createElement(
                  _raw_change2.default,
                  null
                )
              },
              {
                title: "Don't hide calendar on date selection",
                component: _react2.default.createElement(
                  _dont_close_onSelect2.default,
                  null
                )
              },
              {
                title: "Open calendar by default",
                component: _react2.default.createElement(
                  _open_by_default2.default,
                  null
                )
              }
            ]),
            (_this.renderExamples = function() {
              return _this.examples.map(function(example, index) {
                return _react2.default.createElement(
                  _code_example_component2.default,
                  { key: "example-" + index, id: index, title: example.title },
                  example.component
                );
              });
            }),
            (_this.renderLeftColumn = function() {
              return _this.examples.map(function(example, index) {
                return _react2.default.createElement(
                  "li",
                  {
                    className: "examples__navigation-item",
                    key: "link-" + index
                  },
                  _react2.default.createElement(
                    "a",
                    { href: "#example-" + index },
                    example.title
                  )
                );
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        exampleComponents.prototype.componentDidMount = function componentDidMount() {
          _highlight2.default.initHighlightingOnLoad();
        };

        exampleComponents.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            null,
            _react2.default.createElement("h1", null, "Examples"),
            _react2.default.createElement(
              "ul",
              { className: "examples__navigation" },
              this.renderLeftColumn()
            ),
            _react2.default.createElement(
              "div",
              { className: "examples" },
              this.renderExamples()
            )
          );
        };

        return exampleComponents;
      })(_react2.default.Component);

      exports.default = exampleComponents;

      /***/
    },
    /* 29 */
    /***/ function(module, exports, __webpack_require__) {
      var hljs = __webpack_require__(30);

      hljs.registerLanguage("1c", __webpack_require__(31));
      hljs.registerLanguage("abnf", __webpack_require__(32));
      hljs.registerLanguage("accesslog", __webpack_require__(33));
      hljs.registerLanguage("actionscript", __webpack_require__(34));
      hljs.registerLanguage("ada", __webpack_require__(35));
      hljs.registerLanguage("apache", __webpack_require__(36));
      hljs.registerLanguage("applescript", __webpack_require__(37));
      hljs.registerLanguage("cpp", __webpack_require__(38));
      hljs.registerLanguage("arduino", __webpack_require__(39));
      hljs.registerLanguage("armasm", __webpack_require__(40));
      hljs.registerLanguage("xml", __webpack_require__(41));
      hljs.registerLanguage("asciidoc", __webpack_require__(42));
      hljs.registerLanguage("aspectj", __webpack_require__(43));
      hljs.registerLanguage("autohotkey", __webpack_require__(44));
      hljs.registerLanguage("autoit", __webpack_require__(45));
      hljs.registerLanguage("avrasm", __webpack_require__(46));
      hljs.registerLanguage("awk", __webpack_require__(47));
      hljs.registerLanguage("axapta", __webpack_require__(48));
      hljs.registerLanguage("bash", __webpack_require__(49));
      hljs.registerLanguage("basic", __webpack_require__(50));
      hljs.registerLanguage("bnf", __webpack_require__(51));
      hljs.registerLanguage("brainfuck", __webpack_require__(52));
      hljs.registerLanguage("cal", __webpack_require__(53));
      hljs.registerLanguage("capnproto", __webpack_require__(54));
      hljs.registerLanguage("ceylon", __webpack_require__(55));
      hljs.registerLanguage("clean", __webpack_require__(56));
      hljs.registerLanguage("clojure", __webpack_require__(57));
      hljs.registerLanguage("clojure-repl", __webpack_require__(58));
      hljs.registerLanguage("cmake", __webpack_require__(59));
      hljs.registerLanguage("coffeescript", __webpack_require__(60));
      hljs.registerLanguage("coq", __webpack_require__(61));
      hljs.registerLanguage("cos", __webpack_require__(62));
      hljs.registerLanguage("crmsh", __webpack_require__(63));
      hljs.registerLanguage("crystal", __webpack_require__(64));
      hljs.registerLanguage("cs", __webpack_require__(65));
      hljs.registerLanguage("csp", __webpack_require__(66));
      hljs.registerLanguage("css", __webpack_require__(67));
      hljs.registerLanguage("d", __webpack_require__(68));
      hljs.registerLanguage("markdown", __webpack_require__(69));
      hljs.registerLanguage("dart", __webpack_require__(70));
      hljs.registerLanguage("delphi", __webpack_require__(71));
      hljs.registerLanguage("diff", __webpack_require__(72));
      hljs.registerLanguage("django", __webpack_require__(73));
      hljs.registerLanguage("dns", __webpack_require__(74));
      hljs.registerLanguage("dockerfile", __webpack_require__(75));
      hljs.registerLanguage("dos", __webpack_require__(76));
      hljs.registerLanguage("dsconfig", __webpack_require__(77));
      hljs.registerLanguage("dts", __webpack_require__(78));
      hljs.registerLanguage("dust", __webpack_require__(79));
      hljs.registerLanguage("ebnf", __webpack_require__(80));
      hljs.registerLanguage("elixir", __webpack_require__(81));
      hljs.registerLanguage("elm", __webpack_require__(82));
      hljs.registerLanguage("ruby", __webpack_require__(83));
      hljs.registerLanguage("erb", __webpack_require__(84));
      hljs.registerLanguage("erlang-repl", __webpack_require__(85));
      hljs.registerLanguage("erlang", __webpack_require__(86));
      hljs.registerLanguage("excel", __webpack_require__(87));
      hljs.registerLanguage("fix", __webpack_require__(88));
      hljs.registerLanguage("flix", __webpack_require__(89));
      hljs.registerLanguage("fortran", __webpack_require__(90));
      hljs.registerLanguage("fsharp", __webpack_require__(91));
      hljs.registerLanguage("gams", __webpack_require__(92));
      hljs.registerLanguage("gauss", __webpack_require__(93));
      hljs.registerLanguage("gcode", __webpack_require__(94));
      hljs.registerLanguage("gherkin", __webpack_require__(95));
      hljs.registerLanguage("glsl", __webpack_require__(96));
      hljs.registerLanguage("go", __webpack_require__(97));
      hljs.registerLanguage("golo", __webpack_require__(98));
      hljs.registerLanguage("gradle", __webpack_require__(99));
      hljs.registerLanguage("groovy", __webpack_require__(100));
      hljs.registerLanguage("haml", __webpack_require__(101));
      hljs.registerLanguage("handlebars", __webpack_require__(102));
      hljs.registerLanguage("haskell", __webpack_require__(103));
      hljs.registerLanguage("haxe", __webpack_require__(104));
      hljs.registerLanguage("hsp", __webpack_require__(105));
      hljs.registerLanguage("htmlbars", __webpack_require__(106));
      hljs.registerLanguage("http", __webpack_require__(107));
      hljs.registerLanguage("hy", __webpack_require__(108));
      hljs.registerLanguage("inform7", __webpack_require__(109));
      hljs.registerLanguage("ini", __webpack_require__(110));
      hljs.registerLanguage("irpf90", __webpack_require__(111));
      hljs.registerLanguage("java", __webpack_require__(112));
      hljs.registerLanguage("javascript", __webpack_require__(113));
      hljs.registerLanguage("jboss-cli", __webpack_require__(114));
      hljs.registerLanguage("json", __webpack_require__(115));
      hljs.registerLanguage("julia", __webpack_require__(116));
      hljs.registerLanguage("julia-repl", __webpack_require__(117));
      hljs.registerLanguage("kotlin", __webpack_require__(118));
      hljs.registerLanguage("lasso", __webpack_require__(119));
      hljs.registerLanguage("ldif", __webpack_require__(120));
      hljs.registerLanguage("leaf", __webpack_require__(121));
      hljs.registerLanguage("less", __webpack_require__(122));
      hljs.registerLanguage("lisp", __webpack_require__(123));
      hljs.registerLanguage("livecodeserver", __webpack_require__(124));
      hljs.registerLanguage("livescript", __webpack_require__(125));
      hljs.registerLanguage("llvm", __webpack_require__(126));
      hljs.registerLanguage("lsl", __webpack_require__(127));
      hljs.registerLanguage("lua", __webpack_require__(128));
      hljs.registerLanguage("makefile", __webpack_require__(129));
      hljs.registerLanguage("mathematica", __webpack_require__(130));
      hljs.registerLanguage("matlab", __webpack_require__(131));
      hljs.registerLanguage("maxima", __webpack_require__(132));
      hljs.registerLanguage("mel", __webpack_require__(133));
      hljs.registerLanguage("mercury", __webpack_require__(134));
      hljs.registerLanguage("mipsasm", __webpack_require__(135));
      hljs.registerLanguage("mizar", __webpack_require__(136));
      hljs.registerLanguage("perl", __webpack_require__(137));
      hljs.registerLanguage("mojolicious", __webpack_require__(138));
      hljs.registerLanguage("monkey", __webpack_require__(139));
      hljs.registerLanguage("moonscript", __webpack_require__(140));
      hljs.registerLanguage("n1ql", __webpack_require__(141));
      hljs.registerLanguage("nginx", __webpack_require__(142));
      hljs.registerLanguage("nimrod", __webpack_require__(143));
      hljs.registerLanguage("nix", __webpack_require__(144));
      hljs.registerLanguage("nsis", __webpack_require__(145));
      hljs.registerLanguage("objectivec", __webpack_require__(146));
      hljs.registerLanguage("ocaml", __webpack_require__(147));
      hljs.registerLanguage("openscad", __webpack_require__(148));
      hljs.registerLanguage("oxygene", __webpack_require__(149));
      hljs.registerLanguage("parser3", __webpack_require__(150));
      hljs.registerLanguage("pf", __webpack_require__(151));
      hljs.registerLanguage("php", __webpack_require__(152));
      hljs.registerLanguage("pony", __webpack_require__(153));
      hljs.registerLanguage("powershell", __webpack_require__(154));
      hljs.registerLanguage("processing", __webpack_require__(155));
      hljs.registerLanguage("profile", __webpack_require__(156));
      hljs.registerLanguage("prolog", __webpack_require__(157));
      hljs.registerLanguage("protobuf", __webpack_require__(158));
      hljs.registerLanguage("puppet", __webpack_require__(159));
      hljs.registerLanguage("purebasic", __webpack_require__(160));
      hljs.registerLanguage("python", __webpack_require__(161));
      hljs.registerLanguage("q", __webpack_require__(162));
      hljs.registerLanguage("qml", __webpack_require__(163));
      hljs.registerLanguage("r", __webpack_require__(164));
      hljs.registerLanguage("rib", __webpack_require__(165));
      hljs.registerLanguage("roboconf", __webpack_require__(166));
      hljs.registerLanguage("routeros", __webpack_require__(167));
      hljs.registerLanguage("rsl", __webpack_require__(168));
      hljs.registerLanguage("ruleslanguage", __webpack_require__(169));
      hljs.registerLanguage("rust", __webpack_require__(170));
      hljs.registerLanguage("scala", __webpack_require__(171));
      hljs.registerLanguage("scheme", __webpack_require__(172));
      hljs.registerLanguage("scilab", __webpack_require__(173));
      hljs.registerLanguage("scss", __webpack_require__(174));
      hljs.registerLanguage("shell", __webpack_require__(175));
      hljs.registerLanguage("smali", __webpack_require__(176));
      hljs.registerLanguage("smalltalk", __webpack_require__(177));
      hljs.registerLanguage("sml", __webpack_require__(178));
      hljs.registerLanguage("sqf", __webpack_require__(179));
      hljs.registerLanguage("sql", __webpack_require__(180));
      hljs.registerLanguage("stan", __webpack_require__(181));
      hljs.registerLanguage("stata", __webpack_require__(182));
      hljs.registerLanguage("step21", __webpack_require__(183));
      hljs.registerLanguage("stylus", __webpack_require__(184));
      hljs.registerLanguage("subunit", __webpack_require__(185));
      hljs.registerLanguage("swift", __webpack_require__(186));
      hljs.registerLanguage("taggerscript", __webpack_require__(187));
      hljs.registerLanguage("yaml", __webpack_require__(188));
      hljs.registerLanguage("tap", __webpack_require__(189));
      hljs.registerLanguage("tcl", __webpack_require__(190));
      hljs.registerLanguage("tex", __webpack_require__(191));
      hljs.registerLanguage("thrift", __webpack_require__(192));
      hljs.registerLanguage("tp", __webpack_require__(193));
      hljs.registerLanguage("twig", __webpack_require__(194));
      hljs.registerLanguage("typescript", __webpack_require__(195));
      hljs.registerLanguage("vala", __webpack_require__(196));
      hljs.registerLanguage("vbnet", __webpack_require__(197));
      hljs.registerLanguage("vbscript", __webpack_require__(198));
      hljs.registerLanguage("vbscript-html", __webpack_require__(199));
      hljs.registerLanguage("verilog", __webpack_require__(200));
      hljs.registerLanguage("vhdl", __webpack_require__(201));
      hljs.registerLanguage("vim", __webpack_require__(202));
      hljs.registerLanguage("x86asm", __webpack_require__(203));
      hljs.registerLanguage("xl", __webpack_require__(204));
      hljs.registerLanguage("xquery", __webpack_require__(205));
      hljs.registerLanguage("zephir", __webpack_require__(206));

      module.exports = hljs;

      /***/
    },
    /* 30 */
    /***/ function(module, exports, __webpack_require__) {
      /*
	Syntax highlighting with language autodetection.
	https://highlightjs.org/
	*/

      (function(factory) {
        // Find the global object for export to both the browser and web workers.
        var globalObject =
          (typeof window === "object" && window) ||
          (typeof self === "object" && self);

        // Setup highlight.js for different environments. First is Node.js or
        // CommonJS.
        if (true) {
          factory(exports);
        } else if (globalObject) {
          // Export hljs globally even when using AMD for cases when this script
          // is loaded with others that may still expect a global hljs.
          globalObject.hljs = factory({});

          // Finally register the global hljs with AMD.
          if (typeof define === "function" && define.amd) {
            define([], function() {
              return globalObject.hljs;
            });
          }
        }
      })(function(hljs) {
        // Convenience variables for build-in objects
        var ArrayProto = [],
          objectKeys = Object.keys;

        // Global internal variables used within the highlight.js library.
        var languages = {},
          aliases = {};

        // Regular expressions used throughout the highlight.js library.
        var noHighlightRe = /^(no-?highlight|plain|text)$/i,
          languagePrefixRe = /\blang(?:uage)?-([\w-]+)\b/i,
          fixMarkupRe = /((^(<[^>]+>|\t|)+|(?:\n)))/gm;

        var spanEndTag = "</span>";

        // Global options used when within external APIs. This is modified when
        // calling the `hljs.configure` function.
        var options = {
          classPrefix: "hljs-",
          tabReplace: null,
          useBR: false,
          languages: undefined
        };

        /* Utility functions */

        function escape(value) {
          return value
            .replace(/&/g, "&amp;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;");
        }

        function tag(node) {
          return node.nodeName.toLowerCase();
        }

        function testRe(re, lexeme) {
          var match = re && re.exec(lexeme);
          return match && match.index === 0;
        }

        function isNotHighlighted(language) {
          return noHighlightRe.test(language);
        }

        function blockLanguage(block) {
          var i, match, length, _class;
          var classes = block.className + " ";

          classes += block.parentNode ? block.parentNode.className : "";

          // language-* takes precedence over non-prefixed class names.
          match = languagePrefixRe.exec(classes);
          if (match) {
            return getLanguage(match[1]) ? match[1] : "no-highlight";
          }

          classes = classes.split(/\s+/);

          for (i = 0, length = classes.length; i < length; i++) {
            _class = classes[i];

            if (isNotHighlighted(_class) || getLanguage(_class)) {
              return _class;
            }
          }
        }

        function inherit(parent) {
          // inherit(parent, override_obj, override_obj, ...)
          var key;
          var result = {};
          var objects = Array.prototype.slice.call(arguments, 1);

          for (key in parent) result[key] = parent[key];
          objects.forEach(function(obj) {
            for (key in obj) result[key] = obj[key];
          });
          return result;
        }

        /* Stream merging */

        function nodeStream(node) {
          var result = [];
          (function _nodeStream(node, offset) {
            for (
              var child = node.firstChild;
              child;
              child = child.nextSibling
            ) {
              if (child.nodeType === 3) offset += child.nodeValue.length;
              else if (child.nodeType === 1) {
                result.push({
                  event: "start",
                  offset: offset,
                  node: child
                });
                offset = _nodeStream(child, offset);
                // Prevent void elements from having an end tag that would actually
                // double them in the output. There are more void elements in HTML
                // but we list only those realistically expected in code display.
                if (!tag(child).match(/br|hr|img|input/)) {
                  result.push({
                    event: "stop",
                    offset: offset,
                    node: child
                  });
                }
              }
            }
            return offset;
          })(node, 0);
          return result;
        }

        function mergeStreams(original, highlighted, value) {
          var processed = 0;
          var result = "";
          var nodeStack = [];

          function selectStream() {
            if (!original.length || !highlighted.length) {
              return original.length ? original : highlighted;
            }
            if (original[0].offset !== highlighted[0].offset) {
              return original[0].offset < highlighted[0].offset
                ? original
                : highlighted;
            }

            /*
	      To avoid starting the stream just before it should stop the order is
	      ensured that original always starts first and closes last:

	      if (event1 == 'start' && event2 == 'start')
	        return original;
	      if (event1 == 'start' && event2 == 'stop')
	        return highlighted;
	      if (event1 == 'stop' && event2 == 'start')
	        return original;
	      if (event1 == 'stop' && event2 == 'stop')
	        return highlighted;

	      ... which is collapsed to:
	      */
            return highlighted[0].event === "start" ? original : highlighted;
          }

          function open(node) {
            function attr_str(a) {
              return (
                " " +
                a.nodeName +
                '="' +
                escape(a.value).replace('"', "&quot;") +
                '"'
              );
            }
            result +=
              "<" +
              tag(node) +
              ArrayProto.map.call(node.attributes, attr_str).join("") +
              ">";
          }

          function close(node) {
            result += "</" + tag(node) + ">";
          }

          function render(event) {
            (event.event === "start" ? open : close)(event.node);
          }

          while (original.length || highlighted.length) {
            var stream = selectStream();
            result += escape(value.substring(processed, stream[0].offset));
            processed = stream[0].offset;
            if (stream === original) {
              /*
	        On any opening or closing tag of the original markup we first close
	        the entire highlighted node stack, then render the original tag along
	        with all the following original tags at the same offset and then
	        reopen all the tags on the highlighted stack.
	        */
              nodeStack.reverse().forEach(close);
              do {
                render(stream.splice(0, 1)[0]);
                stream = selectStream();
              } while (
                stream === original &&
                stream.length &&
                stream[0].offset === processed
              );
              nodeStack.reverse().forEach(open);
            } else {
              if (stream[0].event === "start") {
                nodeStack.push(stream[0].node);
              } else {
                nodeStack.pop();
              }
              render(stream.splice(0, 1)[0]);
            }
          }
          return result + escape(value.substr(processed));
        }

        /* Initialization */

        function expand_mode(mode) {
          if (mode.variants && !mode.cached_variants) {
            mode.cached_variants = mode.variants.map(function(variant) {
              return inherit(mode, { variants: null }, variant);
            });
          }
          return (
            mode.cached_variants ||
            (mode.endsWithParent && [inherit(mode)]) || [mode]
          );
        }

        function compileLanguage(language) {
          function reStr(re) {
            return (re && re.source) || re;
          }

          function langRe(value, global) {
            return new RegExp(
              reStr(value),
              "m" + (language.case_insensitive ? "i" : "") + (global ? "g" : "")
            );
          }

          function compileMode(mode, parent) {
            if (mode.compiled) return;
            mode.compiled = true;

            mode.keywords = mode.keywords || mode.beginKeywords;
            if (mode.keywords) {
              var compiled_keywords = {};

              var flatten = function(className, str) {
                if (language.case_insensitive) {
                  str = str.toLowerCase();
                }
                str.split(" ").forEach(function(kw) {
                  var pair = kw.split("|");
                  compiled_keywords[pair[0]] = [
                    className,
                    pair[1] ? Number(pair[1]) : 1
                  ];
                });
              };

              if (typeof mode.keywords === "string") {
                // string
                flatten("keyword", mode.keywords);
              } else {
                objectKeys(mode.keywords).forEach(function(className) {
                  flatten(className, mode.keywords[className]);
                });
              }
              mode.keywords = compiled_keywords;
            }
            mode.lexemesRe = langRe(mode.lexemes || /\w+/, true);

            if (parent) {
              if (mode.beginKeywords) {
                mode.begin =
                  "\\b(" + mode.beginKeywords.split(" ").join("|") + ")\\b";
              }
              if (!mode.begin) mode.begin = /\B|\b/;
              mode.beginRe = langRe(mode.begin);
              if (!mode.end && !mode.endsWithParent) mode.end = /\B|\b/;
              if (mode.end) mode.endRe = langRe(mode.end);
              mode.terminator_end = reStr(mode.end) || "";
              if (mode.endsWithParent && parent.terminator_end)
                mode.terminator_end +=
                  (mode.end ? "|" : "") + parent.terminator_end;
            }
            if (mode.illegal) mode.illegalRe = langRe(mode.illegal);
            if (mode.relevance == null) mode.relevance = 1;
            if (!mode.contains) {
              mode.contains = [];
            }
            mode.contains = Array.prototype.concat.apply(
              [],
              mode.contains.map(function(c) {
                return expand_mode(c === "self" ? mode : c);
              })
            );
            mode.contains.forEach(function(c) {
              compileMode(c, mode);
            });

            if (mode.starts) {
              compileMode(mode.starts, parent);
            }

            var terminators = mode.contains
              .map(function(c) {
                return c.beginKeywords ? "\\.?(" + c.begin + ")\\.?" : c.begin;
              })
              .concat([mode.terminator_end, mode.illegal])
              .map(reStr)
              .filter(Boolean);
            mode.terminators = terminators.length
              ? langRe(terminators.join("|"), true)
              : {
                  exec: function(/*s*/) {
                    return null;
                  }
                };
          }

          compileMode(language);
        }

        /*
	  Core highlighting function. Accepts a language name, or an alias, and a
	  string with the code to highlight. Returns an object with the following
	  properties:

	  - relevance (int)
	  - value (an HTML string with highlighting markup)

	  */
        function highlight(name, value, ignore_illegals, continuation) {
          function subMode(lexeme, mode) {
            var i, length;

            for (i = 0, length = mode.contains.length; i < length; i++) {
              if (testRe(mode.contains[i].beginRe, lexeme)) {
                return mode.contains[i];
              }
            }
          }

          function endOfMode(mode, lexeme) {
            if (testRe(mode.endRe, lexeme)) {
              while (mode.endsParent && mode.parent) {
                mode = mode.parent;
              }
              return mode;
            }
            if (mode.endsWithParent) {
              return endOfMode(mode.parent, lexeme);
            }
          }

          function isIllegal(lexeme, mode) {
            return !ignore_illegals && testRe(mode.illegalRe, lexeme);
          }

          function keywordMatch(mode, match) {
            var match_str = language.case_insensitive
              ? match[0].toLowerCase()
              : match[0];
            return (
              mode.keywords.hasOwnProperty(match_str) &&
              mode.keywords[match_str]
            );
          }

          function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {
            var classPrefix = noPrefix ? "" : options.classPrefix,
              openSpan = '<span class="' + classPrefix,
              closeSpan = leaveOpen ? "" : spanEndTag;

            openSpan += classname + '">';

            return openSpan + insideSpan + closeSpan;
          }

          function processKeywords() {
            var keyword_match, last_index, match, result;

            if (!top.keywords) return escape(mode_buffer);

            result = "";
            last_index = 0;
            top.lexemesRe.lastIndex = 0;
            match = top.lexemesRe.exec(mode_buffer);

            while (match) {
              result += escape(mode_buffer.substring(last_index, match.index));
              keyword_match = keywordMatch(top, match);
              if (keyword_match) {
                relevance += keyword_match[1];
                result += buildSpan(keyword_match[0], escape(match[0]));
              } else {
                result += escape(match[0]);
              }
              last_index = top.lexemesRe.lastIndex;
              match = top.lexemesRe.exec(mode_buffer);
            }
            return result + escape(mode_buffer.substr(last_index));
          }

          function processSubLanguage() {
            var explicit = typeof top.subLanguage === "string";
            if (explicit && !languages[top.subLanguage]) {
              return escape(mode_buffer);
            }

            var result = explicit
              ? highlight(
                  top.subLanguage,
                  mode_buffer,
                  true,
                  continuations[top.subLanguage]
                )
              : highlightAuto(
                  mode_buffer,
                  top.subLanguage.length ? top.subLanguage : undefined
                );

            // Counting embedded language score towards the host language may be disabled
            // with zeroing the containing mode relevance. Usecase in point is Markdown that
            // allows XML everywhere and makes every XML snippet to have a much larger Markdown
            // score.
            if (top.relevance > 0) {
              relevance += result.relevance;
            }
            if (explicit) {
              continuations[top.subLanguage] = result.top;
            }
            return buildSpan(result.language, result.value, false, true);
          }

          function processBuffer() {
            result +=
              top.subLanguage != null
                ? processSubLanguage()
                : processKeywords();
            mode_buffer = "";
          }

          function startNewMode(mode) {
            result += mode.className ? buildSpan(mode.className, "", true) : "";
            top = Object.create(mode, { parent: { value: top } });
          }

          function processLexeme(buffer, lexeme) {
            mode_buffer += buffer;

            if (lexeme == null) {
              processBuffer();
              return 0;
            }

            var new_mode = subMode(lexeme, top);
            if (new_mode) {
              if (new_mode.skip) {
                mode_buffer += lexeme;
              } else {
                if (new_mode.excludeBegin) {
                  mode_buffer += lexeme;
                }
                processBuffer();
                if (!new_mode.returnBegin && !new_mode.excludeBegin) {
                  mode_buffer = lexeme;
                }
              }
              startNewMode(new_mode, lexeme);
              return new_mode.returnBegin ? 0 : lexeme.length;
            }

            var end_mode = endOfMode(top, lexeme);
            if (end_mode) {
              var origin = top;
              if (origin.skip) {
                mode_buffer += lexeme;
              } else {
                if (!(origin.returnEnd || origin.excludeEnd)) {
                  mode_buffer += lexeme;
                }
                processBuffer();
                if (origin.excludeEnd) {
                  mode_buffer = lexeme;
                }
              }
              do {
                if (top.className) {
                  result += spanEndTag;
                }
                if (!top.skip) {
                  relevance += top.relevance;
                }
                top = top.parent;
              } while (top !== end_mode.parent);
              if (end_mode.starts) {
                startNewMode(end_mode.starts, "");
              }
              return origin.returnEnd ? 0 : lexeme.length;
            }

            if (isIllegal(lexeme, top))
              throw new Error(
                'Illegal lexeme "' +
                  lexeme +
                  '" for mode "' +
                  (top.className || "<unnamed>") +
                  '"'
              );

            /*
	      Parser should not reach this point as all types of lexemes should be caught
	      earlier, but if it does due to some bug make sure it advances at least one
	      character forward to prevent infinite looping.
	      */
            mode_buffer += lexeme;
            return lexeme.length || 1;
          }

          var language = getLanguage(name);
          if (!language) {
            throw new Error('Unknown language: "' + name + '"');
          }

          compileLanguage(language);
          var top = continuation || language;
          var continuations = {}; // keep continuations for sub-languages
          var result = "",
            current;
          for (current = top; current !== language; current = current.parent) {
            if (current.className) {
              result = buildSpan(current.className, "", true) + result;
            }
          }
          var mode_buffer = "";
          var relevance = 0;
          try {
            var match,
              count,
              index = 0;
            while (true) {
              top.terminators.lastIndex = index;
              match = top.terminators.exec(value);
              if (!match) break;
              count = processLexeme(
                value.substring(index, match.index),
                match[0]
              );
              index = match.index + count;
            }
            processLexeme(value.substr(index));
            for (current = top; current.parent; current = current.parent) {
              // close dangling modes
              if (current.className) {
                result += spanEndTag;
              }
            }
            return {
              relevance: relevance,
              value: result,
              language: name,
              top: top
            };
          } catch (e) {
            if (e.message && e.message.indexOf("Illegal") !== -1) {
              return {
                relevance: 0,
                value: escape(value)
              };
            } else {
              throw e;
            }
          }
        }

        /*
	  Highlighting with language detection. Accepts a string with the code to
	  highlight. Returns an object with the following properties:

	  - language (detected language)
	  - relevance (int)
	  - value (an HTML string with highlighting markup)
	  - second_best (object with the same structure for second-best heuristically
	    detected language, may be absent)

	  */
        function highlightAuto(text, languageSubset) {
          languageSubset =
            languageSubset || options.languages || objectKeys(languages);
          var result = {
            relevance: 0,
            value: escape(text)
          };
          var second_best = result;
          languageSubset.filter(getLanguage).forEach(function(name) {
            var current = highlight(name, text, false);
            current.language = name;
            if (current.relevance > second_best.relevance) {
              second_best = current;
            }
            if (current.relevance > result.relevance) {
              second_best = result;
              result = current;
            }
          });
          if (second_best.language) {
            result.second_best = second_best;
          }
          return result;
        }

        /*
	  Post-processing of the highlighted markup:

	  - replace TABs with something more useful
	  - replace real line-breaks with '<br>' for non-pre containers

	  */
        function fixMarkup(value) {
          return !(options.tabReplace || options.useBR)
            ? value
            : value.replace(fixMarkupRe, function(match, p1) {
                if (options.useBR && match === "\n") {
                  return "<br>";
                } else if (options.tabReplace) {
                  return p1.replace(/\t/g, options.tabReplace);
                }
                return "";
              });
        }

        function buildClassName(prevClassName, currentLang, resultLang) {
          var language = currentLang ? aliases[currentLang] : resultLang,
            result = [prevClassName.trim()];

          if (!prevClassName.match(/\bhljs\b/)) {
            result.push("hljs");
          }

          if (prevClassName.indexOf(language) === -1) {
            result.push(language);
          }

          return result.join(" ").trim();
        }

        /*
	  Applies highlighting to a DOM node containing code. Accepts a DOM node and
	  two optional parameters for fixMarkup.
	  */
        function highlightBlock(block) {
          var node, originalStream, result, resultNode, text;
          var language = blockLanguage(block);

          if (isNotHighlighted(language)) return;

          if (options.useBR) {
            node = document.createElementNS(
              "http://www.w3.org/1999/xhtml",
              "div"
            );
            node.innerHTML = block.innerHTML
              .replace(/\n/g, "")
              .replace(/<br[ \/]*>/g, "\n");
          } else {
            node = block;
          }
          text = node.textContent;
          result = language
            ? highlight(language, text, true)
            : highlightAuto(text);

          originalStream = nodeStream(node);
          if (originalStream.length) {
            resultNode = document.createElementNS(
              "http://www.w3.org/1999/xhtml",
              "div"
            );
            resultNode.innerHTML = result.value;
            result.value = mergeStreams(
              originalStream,
              nodeStream(resultNode),
              text
            );
          }
          result.value = fixMarkup(result.value);

          block.innerHTML = result.value;
          block.className = buildClassName(
            block.className,
            language,
            result.language
          );
          block.result = {
            language: result.language,
            re: result.relevance
          };
          if (result.second_best) {
            block.second_best = {
              language: result.second_best.language,
              re: result.second_best.relevance
            };
          }
        }

        /*
	  Updates highlight.js global options with values passed in the form of an object.
	  */
        function configure(user_options) {
          options = inherit(options, user_options);
        }

        /*
	  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.
	  */
        function initHighlighting() {
          if (initHighlighting.called) return;
          initHighlighting.called = true;

          var blocks = document.querySelectorAll("pre code");
          ArrayProto.forEach.call(blocks, highlightBlock);
        }

        /*
	  Attaches highlighting to the page load event.
	  */
        function initHighlightingOnLoad() {
          addEventListener("DOMContentLoaded", initHighlighting, false);
          addEventListener("load", initHighlighting, false);
        }

        function registerLanguage(name, language) {
          var lang = (languages[name] = language(hljs));
          if (lang.aliases) {
            lang.aliases.forEach(function(alias) {
              aliases[alias] = name;
            });
          }
        }

        function listLanguages() {
          return objectKeys(languages);
        }

        function getLanguage(name) {
          name = (name || "").toLowerCase();
          return languages[name] || languages[aliases[name]];
        }

        /* Interface definition */

        hljs.highlight = highlight;
        hljs.highlightAuto = highlightAuto;
        hljs.fixMarkup = fixMarkup;
        hljs.highlightBlock = highlightBlock;
        hljs.configure = configure;
        hljs.initHighlighting = initHighlighting;
        hljs.initHighlightingOnLoad = initHighlightingOnLoad;
        hljs.registerLanguage = registerLanguage;
        hljs.listLanguages = listLanguages;
        hljs.getLanguage = getLanguage;
        hljs.inherit = inherit;

        // Common regexps
        hljs.IDENT_RE = "[a-zA-Z]\\w*";
        hljs.UNDERSCORE_IDENT_RE = "[a-zA-Z_]\\w*";
        hljs.NUMBER_RE = "\\b\\d+(\\.\\d+)?";
        hljs.C_NUMBER_RE =
          "(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)"; // 0x..., 0..., decimal, float
        hljs.BINARY_NUMBER_RE = "\\b(0b[01]+)"; // 0b...
        hljs.RE_STARTERS_RE =
          "!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~";

        // Common modes
        hljs.BACKSLASH_ESCAPE = {
          begin: "\\\\[\\s\\S]",
          relevance: 0
        };
        hljs.APOS_STRING_MODE = {
          className: "string",
          begin: "'",
          end: "'",
          illegal: "\\n",
          contains: [hljs.BACKSLASH_ESCAPE]
        };
        hljs.QUOTE_STRING_MODE = {
          className: "string",
          begin: '"',
          end: '"',
          illegal: "\\n",
          contains: [hljs.BACKSLASH_ESCAPE]
        };
        hljs.PHRASAL_WORDS_MODE = {
          begin: /\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/
        };
        hljs.COMMENT = function(begin, end, inherits) {
          var mode = hljs.inherit(
            {
              className: "comment",
              begin: begin,
              end: end,
              contains: []
            },
            inherits || {}
          );
          mode.contains.push(hljs.PHRASAL_WORDS_MODE);
          mode.contains.push({
            className: "doctag",
            begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
            relevance: 0
          });
          return mode;
        };
        hljs.C_LINE_COMMENT_MODE = hljs.COMMENT("//", "$");
        hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT("/\\*", "\\*/");
        hljs.HASH_COMMENT_MODE = hljs.COMMENT("#", "$");
        hljs.NUMBER_MODE = {
          className: "number",
          begin: hljs.NUMBER_RE,
          relevance: 0
        };
        hljs.C_NUMBER_MODE = {
          className: "number",
          begin: hljs.C_NUMBER_RE,
          relevance: 0
        };
        hljs.BINARY_NUMBER_MODE = {
          className: "number",
          begin: hljs.BINARY_NUMBER_RE,
          relevance: 0
        };
        hljs.CSS_NUMBER_MODE = {
          className: "number",
          begin:
            hljs.NUMBER_RE +
            "(" +
            "%|em|ex|ch|rem" +
            "|vw|vh|vmin|vmax" +
            "|cm|mm|in|pt|pc|px" +
            "|deg|grad|rad|turn" +
            "|s|ms" +
            "|Hz|kHz" +
            "|dpi|dpcm|dppx" +
            ")?",
          relevance: 0
        };
        hljs.REGEXP_MODE = {
          className: "regexp",
          begin: /\//,
          end: /\/[gimuy]*/,
          illegal: /\n/,
          contains: [
            hljs.BACKSLASH_ESCAPE,
            {
              begin: /\[/,
              end: /\]/,
              relevance: 0,
              contains: [hljs.BACKSLASH_ESCAPE]
            }
          ]
        };
        hljs.TITLE_MODE = {
          className: "title",
          begin: hljs.IDENT_RE,
          relevance: 0
        };
        hljs.UNDERSCORE_TITLE_MODE = {
          className: "title",
          begin: hljs.UNDERSCORE_IDENT_RE,
          relevance: 0
        };
        hljs.METHOD_GUARD = {
          // excludes method names from keyword processing
          begin: "\\.\\s*" + hljs.UNDERSCORE_IDENT_RE,
          relevance: 0
        };

        return hljs;
      });

      /***/
    },
    /* 31 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        // общий паттерн для определения идентификаторов
        var UNDERSCORE_IDENT_RE = "[A-Za-zА-Яа-яёЁ_][A-Za-zА-Яа-яёЁ_0-9]+";

        // v7 уникальные ключевые слова, отсутствующие в v8 ==> keyword
        var v7_keywords = "далее ";

        // v8 ключевые слова ==> keyword
        var v8_keywords =
          "возврат вызватьисключение выполнить для если и из или иначе иначеесли исключение каждого конецесли " +
          "конецпопытки конеццикла не новый перейти перем по пока попытка прервать продолжить тогда цикл экспорт ";

        // keyword : ключевые слова
        var KEYWORD = v7_keywords + v8_keywords;

        // v7 уникальные директивы, отсутствующие в v8 ==> meta-keyword
        var v7_meta_keywords = "загрузитьизфайла ";

        // v8 ключевые слова в инструкциях препроцессора, директивах компиляции, аннотациях ==> meta-keyword
        var v8_meta_keywords =
          "вебклиент вместо внешнеесоединение клиент конецобласти мобильноеприложениеклиент мобильноеприложениесервер " +
          "наклиенте наклиентенасервере наклиентенасерверебезконтекста насервере насерверебезконтекста область перед " +
          "после сервер толстыйклиентобычноеприложение толстыйклиентуправляемоеприложение тонкийклиент ";

        // meta-keyword : ключевые слова в инструкциях препроцессора, директивах компиляции, аннотациях
        var METAKEYWORD = v7_meta_keywords + v8_meta_keywords;

        // v7 системные константы ==> built_in
        var v7_system_constants =
          "разделительстраниц разделительстрок символтабуляции ";

        // v7 уникальные методы глобального контекста, отсутствующие в v8 ==> built_in
        var v7_global_context_methods =
          "ansitooem oemtoansi ввестивидсубконто ввестиперечисление ввестипериод ввестиплансчетов выбранныйплансчетов " +
          "датагод датамесяц датачисло заголовоксистемы значениевстроку значениеизстроки каталогиб каталогпользователя " +
          "кодсимв конгода конецпериодаби конецрассчитанногопериодаби конецстандартногоинтервала конквартала конмесяца " +
          "коннедели лог лог10 максимальноеколичествосубконто названиеинтерфейса названиенабораправ назначитьвид " +
          "назначитьсчет найтиссылки началопериодаби началостандартногоинтервала начгода начквартала начмесяца " +
          "начнедели номерднягода номерднянедели номернеделигода обработкаожидания основнойжурналрасчетов " +
          "основнойплансчетов основнойязык очиститьокносообщений периодстр получитьвремята получитьдатута " +
          "получитьдокументта получитьзначенияотбора получитьпозициюта получитьпустоезначение получитьта " +
          "префиксавтонумерации пропись пустоезначение разм разобратьпозициюдокумента рассчитатьрегистрына " +
          "рассчитатьрегистрыпо симв создатьобъект статусвозврата стрколичествострок сформироватьпозициюдокумента " +
          "счетпокоду текущеевремя типзначения типзначениястр установитьтана установитьтапо фиксшаблон шаблон ";

        // v8 методы глобального контекста ==> built_in
        var v8_global_context_methods =
          "acos asin atan base64значение base64строка cos exp log log10 pow sin sqrt tan xmlзначение xmlстрока " +
          "xmlтип xmlтипзнч активноеокно безопасныйрежим безопасныйрежимразделенияданных булево ввестидату ввестизначение " +
          "ввестистроку ввестичисло возможностьчтенияxml вопрос восстановитьзначение врег выгрузитьжурналрегистрации " +
          "выполнитьобработкуоповещения выполнитьпроверкуправдоступа вычислить год данныеформывзначение дата день деньгода " +
          "деньнедели добавитьмесяц заблокироватьданныедляредактирования заблокироватьработупользователя завершитьработусистемы " +
          "загрузитьвнешнююкомпоненту закрытьсправку записатьjson записатьxml записатьдатуjson записьжурналарегистрации " +
          "заполнитьзначениясвойств запроситьразрешениепользователя запуститьприложение запуститьсистему зафиксироватьтранзакцию " +
          "значениевданныеформы значениевстрокувнутр значениевфайл значениезаполнено значениеизстрокивнутр значениеизфайла " +
          "изxmlтипа импортмоделиxdto имякомпьютера имяпользователя инициализироватьпредопределенныеданные информацияобошибке " +
          "каталогбиблиотекимобильногоустройства каталогвременныхфайлов каталогдокументов каталогпрограммы кодироватьстроку " +
          "кодлокализацииинформационнойбазы кодсимвола командасистемы конецгода конецдня конецквартала конецмесяца конецминуты " +
          "конецнедели конецчаса конфигурациябазыданныхизмененадинамически конфигурацияизменена копироватьданныеформы " +
          "копироватьфайл краткоепредставлениеошибки лев макс местноевремя месяц мин минута монопольныйрежим найти " +
          "найтинедопустимыесимволыxml найтиокнопонавигационнойссылке найтипомеченныенаудаление найтипоссылкам найтифайлы " +
          "началогода началодня началоквартала началомесяца началоминуты началонедели началочаса начатьзапросразрешенияпользователя " +
          "начатьзапускприложения начатькопированиефайла начатьперемещениефайла начатьподключениевнешнейкомпоненты " +
          "начатьподключениерасширенияработыскриптографией начатьподключениерасширенияработысфайлами начатьпоискфайлов " +
          "начатьполучениекаталогавременныхфайлов начатьполучениекаталогадокументов начатьполучениерабочегокаталогаданныхпользователя " +
          "начатьполучениефайлов начатьпомещениефайла начатьпомещениефайлов начатьсозданиедвоичныхданныхизфайла начатьсозданиекаталога " +
          "начатьтранзакцию начатьудалениефайлов начатьустановкувнешнейкомпоненты начатьустановкурасширенияработыскриптографией " +
          "начатьустановкурасширенияработысфайлами неделягода необходимостьзавершениясоединения номерсеансаинформационнойбазы " +
          "номерсоединенияинформационнойбазы нрег нстр обновитьинтерфейс обновитьнумерациюобъектов обновитьповторноиспользуемыезначения " +
          "обработкапрерыванияпользователя объединитьфайлы окр описаниеошибки оповестить оповеститьобизменении " +
          "отключитьобработчикзапросанастроекклиенталицензирования отключитьобработчикожидания отключитьобработчикоповещения " +
          "открытьзначение открытьиндекссправки открытьсодержаниесправки открытьсправку открытьформу открытьформумодально " +
          "отменитьтранзакцию очиститьжурналрегистрации очиститьнастройкипользователя очиститьсообщения параметрыдоступа " +
          "перейтипонавигационнойссылке переместитьфайл подключитьвнешнююкомпоненту " +
          "подключитьобработчикзапросанастроекклиенталицензирования подключитьобработчикожидания подключитьобработчикоповещения " +
          "подключитьрасширениеработыскриптографией подключитьрасширениеработысфайлами подробноепредставлениеошибки " +
          "показатьвводдаты показатьвводзначения показатьвводстроки показатьвводчисла показатьвопрос показатьзначение " +
          "показатьинформациюобошибке показатьнакарте показатьоповещениепользователя показатьпредупреждение полноеимяпользователя " +
          "получитьcomобъект получитьxmlтип получитьадреспоместоположению получитьблокировкусеансов получитьвремязавершенияспящегосеанса " +
          "получитьвремязасыпанияпассивногосеанса получитьвремяожиданияблокировкиданных получитьданныевыбора " +
          "получитьдополнительныйпараметрклиенталицензирования получитьдопустимыекодылокализации получитьдопустимыечасовыепояса " +
          "получитьзаголовокклиентскогоприложения получитьзаголовоксистемы получитьзначенияотборажурналарегистрации " +
          "получитьидентификаторконфигурации получитьизвременногохранилища получитьимявременногофайла " +
          "получитьимяклиенталицензирования получитьинформациюэкрановклиента получитьиспользованиежурналарегистрации " +
          "получитьиспользованиесобытияжурналарегистрации получитькраткийзаголовокприложения получитьмакетоформления " +
          "получитьмаскувсефайлы получитьмаскувсефайлыклиента получитьмаскувсефайлысервера получитьместоположениепоадресу " +
          "получитьминимальнуюдлинупаролейпользователей получитьнавигационнуюссылку получитьнавигационнуюссылкуинформационнойбазы " +
          "получитьобновлениеконфигурациибазыданных получитьобновлениепредопределенныхданныхинформационнойбазы получитьобщиймакет " +
          "получитьобщуюформу получитьокна получитьоперативнуюотметкувремени получитьотключениебезопасногорежима " +
          "получитьпараметрыфункциональныхопцийинтерфейса получитьполноеимяпредопределенногозначения " +
          "получитьпредставлениянавигационныхссылок получитьпроверкусложностипаролейпользователей получитьразделительпути " +
          "получитьразделительпутиклиента получитьразделительпутисервера получитьсеансыинформационнойбазы " +
          "получитьскоростьклиентскогосоединения получитьсоединенияинформационнойбазы получитьсообщенияпользователю " +
          "получитьсоответствиеобъектаиформы получитьсоставстандартногоинтерфейсаodata получитьструктурухранениябазыданных " +
          "получитьтекущийсеансинформационнойбазы получитьфайл получитьфайлы получитьформу получитьфункциональнуюопцию " +
          "получитьфункциональнуюопциюинтерфейса получитьчасовойпоясинформационнойбазы пользователиос поместитьвовременноехранилище " +
          "поместитьфайл поместитьфайлы прав праводоступа предопределенноезначение представлениекодалокализации представлениепериода " +
          "представлениеправа представлениеприложения представлениесобытияжурналарегистрации представлениечасовогопояса предупреждение " +
          "прекратитьработусистемы привилегированныйрежим продолжитьвызов прочитатьjson прочитатьxml прочитатьдатуjson пустаястрока " +
          "рабочийкаталогданныхпользователя разблокироватьданныедляредактирования разделитьфайл разорватьсоединениесвнешнимисточникомданных " +
          "раскодироватьстроку рольдоступна секунда сигнал символ скопироватьжурналрегистрации смещениелетнеговремени " +
          "смещениестандартноговремени соединитьбуферыдвоичныхданных создатькаталог создатьфабрикуxdto сокрл сокрлп сокрп сообщить " +
          "состояние сохранитьзначение сохранитьнастройкипользователя сред стрдлина стрзаканчиваетсяна стрзаменить стрнайти стрначинаетсяс " +
          "строка строкасоединенияинформационнойбазы стрполучитьстроку стрразделить стрсоединить стрсравнить стрчисловхождений " +
          "стрчислострок стршаблон текущаядата текущаядатасеанса текущаяуниверсальнаядата текущаяуниверсальнаядатавмиллисекундах " +
          "текущийвариантинтерфейсаклиентскогоприложения текущийвариантосновногошрифтаклиентскогоприложения текущийкодлокализации " +
          "текущийрежимзапуска текущийязык текущийязыксистемы тип типзнч транзакцияактивна трег удалитьданныеинформационнойбазы " +
          "удалитьизвременногохранилища удалитьобъекты удалитьфайлы универсальноевремя установитьбезопасныйрежим " +
          "установитьбезопасныйрежимразделенияданных установитьблокировкусеансов установитьвнешнююкомпоненту " +
          "установитьвремязавершенияспящегосеанса установитьвремязасыпанияпассивногосеанса установитьвремяожиданияблокировкиданных " +
          "установитьзаголовокклиентскогоприложения установитьзаголовоксистемы установитьиспользованиежурналарегистрации " +
          "установитьиспользованиесобытияжурналарегистрации установитькраткийзаголовокприложения " +
          "установитьминимальнуюдлинупаролейпользователей установитьмонопольныйрежим установитьнастройкиклиенталицензирования " +
          "установитьобновлениепредопределенныхданныхинформационнойбазы установитьотключениебезопасногорежима " +
          "установитьпараметрыфункциональныхопцийинтерфейса установитьпривилегированныйрежим " +
          "установитьпроверкусложностипаролейпользователей установитьрасширениеработыскриптографией " +
          "установитьрасширениеработысфайлами установитьсоединениесвнешнимисточникомданных установитьсоответствиеобъектаиформы " +
          "установитьсоставстандартногоинтерфейсаodata установитьчасовойпоясинформационнойбазы установитьчасовойпояссеанса " +
          "формат цел час часовойпояс часовойпояссеанса число числопрописью этоадресвременногохранилища ";

        // v8 свойства глобального контекста ==> built_in
        var v8_global_context_property =
          "wsссылки библиотекакартинок библиотекамакетовоформлениякомпоновкиданных библиотекастилей бизнеспроцессы " +
          "внешниеисточникиданных внешниеобработки внешниеотчеты встроенныепокупки главныйинтерфейс главныйстиль " +
          "документы доставляемыеуведомления журналыдокументов задачи информацияобинтернетсоединении использованиерабочейдаты " +
          "историяработыпользователя константы критерииотбора метаданные обработки отображениерекламы отправкадоставляемыхуведомлений " +
          "отчеты панельзадачос параметрзапуска параметрысеанса перечисления планывидоврасчета планывидовхарактеристик " +
          "планыобмена планысчетов полнотекстовыйпоиск пользователиинформационнойбазы последовательности проверкавстроенныхпокупок " +
          "рабочаядата расширенияконфигурации регистрыбухгалтерии регистрынакопления регистрырасчета регистрысведений " +
          "регламентныезадания сериализаторxdto справочники средствагеопозиционирования средствакриптографии средствамультимедиа " +
          "средстваотображениярекламы средствапочты средствателефонии фабрикаxdto файловыепотоки фоновыезадания хранилищанастроек " +
          "хранилищевариантовотчетов хранилищенастроекданныхформ хранилищеобщихнастроек хранилищепользовательскихнастроекдинамическихсписков " +
          "хранилищепользовательскихнастроекотчетов хранилищесистемныхнастроек ";

        // built_in : встроенные или библиотечные объекты (константы, классы, функции)
        var BUILTIN =
          v7_system_constants +
          v7_global_context_methods +
          v8_global_context_methods +
          v8_global_context_property;

        // v8 системные наборы значений ==> class
        var v8_system_sets_of_values =
          "webцвета windowsцвета windowsшрифты библиотекакартинок рамкистиля символы цветастиля шрифтыстиля ";

        // v8 системные перечисления - интерфейсные ==> class
        var v8_system_enums_interface =
          "автоматическоесохранениеданныхформывнастройках автонумерациявформе автораздвижениесерий " +
          "анимациядиаграммы вариантвыравниванияэлементовизаголовков вариантуправлениявысотойтаблицы " +
          "вертикальнаяпрокруткаформы вертикальноеположение вертикальноеположениеэлемента видгруппыформы " +
          "виддекорацииформы виддополненияэлементаформы видизмененияданных видкнопкиформы видпереключателя " +
          "видподписейкдиаграмме видполяформы видфлажка влияниеразмеранапузырекдиаграммы горизонтальноеположение " +
          "горизонтальноеположениеэлемента группировкаколонок группировкаподчиненныхэлементовформы " +
          "группыиэлементы действиеперетаскивания дополнительныйрежимотображения допустимыедействияперетаскивания " +
          "интервалмеждуэлементамиформы использованиевывода использованиеполосыпрокрутки " +
          "используемоезначениеточкибиржевойдиаграммы историявыборапривводе источникзначенийоситочекдиаграммы " +
          "источникзначенияразмерапузырькадиаграммы категориягруппыкоманд максимумсерий начальноеотображениедерева " +
          "начальноеотображениесписка обновлениетекстаредактирования ориентациядендрограммы ориентациядиаграммы " +
          "ориентацияметокдиаграммы ориентацияметоксводнойдиаграммы ориентацияэлементаформы отображениевдиаграмме " +
          "отображениевлегендедиаграммы отображениегруппыкнопок отображениезаголовкашкалыдиаграммы " +
          "отображениезначенийсводнойдиаграммы отображениезначенияизмерительнойдиаграммы " +
          "отображениеинтерваладиаграммыганта отображениекнопки отображениекнопкивыбора отображениеобсужденийформы " +
          "отображениеобычнойгруппы отображениеотрицательныхзначенийпузырьковойдиаграммы отображениепанелипоиска " +
          "отображениеподсказки отображениепредупрежденияприредактировании отображениеразметкиполосырегулирования " +
          "отображениестраницформы отображениетаблицы отображениетекстазначениядиаграммыганта " +
          "отображениеуправленияобычнойгруппы отображениефигурыкнопки палитрацветовдиаграммы поведениеобычнойгруппы " +
          "поддержкамасштабадендрограммы поддержкамасштабадиаграммыганта поддержкамасштабасводнойдиаграммы " +
          "поисквтаблицепривводе положениезаголовкаэлементаформы положениекартинкикнопкиформы " +
          "положениекартинкиэлементаграфическойсхемы положениекоманднойпанелиформы положениекоманднойпанелиэлементаформы " +
          "положениеопорнойточкиотрисовки положениеподписейкдиаграмме положениеподписейшкалызначенийизмерительнойдиаграммы " +
          "положениесостоянияпросмотра положениестрокипоиска положениетекстасоединительнойлинии положениеуправленияпоиском " +
          "положениешкалывремени порядокотображенияточекгоризонтальнойгистограммы порядоксерийвлегендедиаграммы " +
          "размеркартинки расположениезаголовкашкалыдиаграммы растягиваниеповертикалидиаграммыганта " +
          "режимавтоотображениясостояния режимвводастроктаблицы режимвыборанезаполненного режимвыделениядаты " +
          "режимвыделениястрокитаблицы режимвыделениятаблицы режимизмененияразмера режимизменениясвязанногозначения " +
          "режимиспользованиядиалогапечати режимиспользованияпараметракоманды режиммасштабированияпросмотра " +
          "режимосновногоокнаклиентскогоприложения режимоткрытияокнаформы режимотображениявыделения " +
          "режимотображениягеографическойсхемы режимотображениязначенийсерии режимотрисовкисеткиграфическойсхемы " +
          "режимполупрозрачностидиаграммы режимпробеловдиаграммы режимразмещениянастранице режимредактированияколонки " +
          "режимсглаживаниядиаграммы режимсглаживанияиндикатора режимсписказадач сквозноевыравнивание " +
          "сохранениеданныхформывнастройках способзаполнениятекстазаголовкашкалыдиаграммы " +
          "способопределенияограничивающегозначениядиаграммы стандартнаягруппакоманд стандартноеоформление " +
          "статусоповещенияпользователя стильстрелки типаппроксимациилиниитрендадиаграммы типдиаграммы " +
          "типединицышкалывремени типимпортасерийслоягеографическойсхемы типлиниигеографическойсхемы типлиниидиаграммы " +
          "типмаркерагеографическойсхемы типмаркерадиаграммы типобластиоформления " +
          "типорганизацииисточникаданныхгеографическойсхемы типотображениясериислоягеографическойсхемы " +
          "типотображенияточечногообъектагеографическойсхемы типотображенияшкалыэлементалегендыгеографическойсхемы " +
          "типпоискаобъектовгеографическойсхемы типпроекциигеографическойсхемы типразмещенияизмерений " +
          "типразмещенияреквизитовизмерений типрамкиэлементауправления типсводнойдиаграммы " +
          "типсвязидиаграммыганта типсоединениязначенийпосериямдиаграммы типсоединенияточекдиаграммы " +
          "типсоединительнойлинии типстороныэлементаграфическойсхемы типформыотчета типшкалырадарнойдиаграммы " +
          "факторлиниитрендадиаграммы фигуракнопки фигурыграфическойсхемы фиксациявтаблице форматдняшкалывремени " +
          "форматкартинки ширинаподчиненныхэлементовформы ";

        // v8 системные перечисления - свойства прикладных объектов ==> class
        var v8_system_enums_objects_properties =
          "виддвижениябухгалтерии виддвижениянакопления видпериодарегистрарасчета видсчета видточкимаршрутабизнеспроцесса " +
          "использованиеагрегатарегистранакопления использованиегруппиэлементов использованиережимапроведения " +
          "использованиесреза периодичностьагрегатарегистранакопления режимавтовремя режимзаписидокумента режимпроведениядокумента ";

        // v8 системные перечисления - планы обмена ==> class
        var v8_system_enums_exchange_plans =
          "авторегистрацияизменений допустимыйномерсообщения отправкаэлементаданных получениеэлементаданных ";

        // v8 системные перечисления - табличный документ ==> class
        var v8_system_enums_tabular_document =
          "использованиерасшифровкитабличногодокумента ориентациястраницы положениеитоговколоноксводнойтаблицы " +
          "положениеитоговстроксводнойтаблицы положениетекстаотносительнокартинки расположениезаголовкагруппировкитабличногодокумента " +
          "способчтениязначенийтабличногодокумента типдвустороннейпечати типзаполненияобластитабличногодокумента " +
          "типкурсоровтабличногодокумента типлиниирисункатабличногодокумента типлинииячейкитабличногодокумента " +
          "типнаправленияпереходатабличногодокумента типотображениявыделениятабличногодокумента типотображениялинийсводнойтаблицы " +
          "типразмещениятекстатабличногодокумента типрисункатабличногодокумента типсмещениятабличногодокумента " +
          "типузоратабличногодокумента типфайлатабличногодокумента точностьпечати чередованиерасположениястраниц ";

        // v8 системные перечисления - планировщик ==> class
        var v8_system_enums_sheduler =
          "отображениевремениэлементовпланировщика ";

        // v8 системные перечисления - форматированный документ ==> class
        var v8_system_enums_formatted_document =
          "типфайлаформатированногодокумента ";

        // v8 системные перечисления - запрос ==> class
        var v8_system_enums_query = "обходрезультатазапроса типзаписизапроса ";

        // v8 системные перечисления - построитель отчета ==> class
        var v8_system_enums_report_builder =
          "видзаполнениярасшифровкипостроителяотчета типдобавленияпредставлений типизмеренияпостроителяотчета типразмещенияитогов ";

        // v8 системные перечисления - работа с файлами ==> class
        var v8_system_enums_files =
          "доступкфайлу режимдиалогавыборафайла режимоткрытияфайла ";

        // v8 системные перечисления - построитель запроса ==> class
        var v8_system_enums_query_builder = "типизмеренияпостроителязапроса ";

        // v8 системные перечисления - анализ данных ==> class
        var v8_system_enums_data_analysis =
          "видданныханализа методкластеризации типединицыинтервалавременианализаданных типзаполнениятаблицырезультатаанализаданных " +
          "типиспользованиячисловыхзначенийанализаданных типисточникаданныхпоискаассоциаций типколонкианализаданныхдереворешений " +
          "типколонкианализаданныхкластеризация типколонкианализаданныхобщаястатистика типколонкианализаданныхпоискассоциаций " +
          "типколонкианализаданныхпоискпоследовательностей типколонкимоделипрогноза типмерырасстоянияанализаданных " +
          "типотсеченияправилассоциации типполяанализаданных типстандартизациианализаданных типупорядочиванияправилассоциациианализаданных " +
          "типупорядочиванияшаблоновпоследовательностейанализаданных типупрощениядереварешений ";

        // v8 системные перечисления - xml, json, xs, dom, xdto, web-сервисы ==> class
        var v8_system_enums_xml_json_xs_dom_xdto_ws =
          "wsнаправлениепараметра вариантxpathxs вариантзаписидатыjson вариантпростоготипаxs видгруппымоделиxs видфасетаxdto " +
          "действиепостроителяdom завершенностьпростоготипаxs завершенностьсоставноготипаxs завершенностьсхемыxs запрещенныеподстановкиxs " +
          "исключениягруппподстановкиxs категорияиспользованияатрибутаxs категорияограниченияидентичностиxs категорияограниченияпространствименxs " +
          "методнаследованияxs модельсодержимогоxs назначениетипаxml недопустимыеподстановкиxs обработкапробельныхсимволовxs обработкасодержимогоxs " +
          "ограничениезначенияxs параметрыотбораузловdom переносстрокjson позициявдокументеdom пробельныесимволыxml типатрибутаxml типзначенияjson " +
          "типканоническогоxml типкомпонентыxs типпроверкиxml типрезультатаdomxpath типузлаdom типузлаxml формаxml формапредставленияxs " +
          "форматдатыjson экранированиесимволовjson ";

        // v8 системные перечисления - система компоновки данных ==> class
        var v8_system_enums_data_composition_system =
          "видсравнениякомпоновкиданных действиеобработкирасшифровкикомпоновкиданных направлениесортировкикомпоновкиданных " +
          "расположениевложенныхэлементоврезультатакомпоновкиданных расположениеитоговкомпоновкиданных расположениегруппировкикомпоновкиданных " +
          "расположениеполейгруппировкикомпоновкиданных расположениеполякомпоновкиданных расположениереквизитовкомпоновкиданных " +
          "расположениересурсовкомпоновкиданных типбухгалтерскогоостаткакомпоновкиданных типвыводатекстакомпоновкиданных " +
          "типгруппировкикомпоновкиданных типгруппыэлементовотборакомпоновкиданных типдополненияпериодакомпоновкиданных " +
          "типзаголовкаполейкомпоновкиданных типмакетагруппировкикомпоновкиданных типмакетаобластикомпоновкиданных типостаткакомпоновкиданных " +
          "типпериодакомпоновкиданных типразмещениятекстакомпоновкиданных типсвязинаборовданныхкомпоновкиданных типэлементарезультатакомпоновкиданных " +
          "расположениелегендыдиаграммыкомпоновкиданных типпримененияотборакомпоновкиданных режимотображенияэлементанастройкикомпоновкиданных " +
          "режимотображениянастроеккомпоновкиданных состояниеэлементанастройкикомпоновкиданных способвосстановлениянастроеккомпоновкиданных " +
          "режимкомпоновкирезультата использованиепараметракомпоновкиданных автопозицияресурсовкомпоновкиданных " +
          "вариантиспользованиягруппировкикомпоновкиданных расположениересурсоввдиаграммекомпоновкиданных фиксациякомпоновкиданных " +
          "использованиеусловногооформлениякомпоновкиданных ";

        // v8 системные перечисления - почта ==> class
        var v8_system_enums_email =
          "важностьинтернетпочтовогосообщения обработкатекстаинтернетпочтовогосообщения способкодированияинтернетпочтовоговложения " +
          "способкодированиянеasciiсимволовинтернетпочтовогосообщения типтекстапочтовогосообщения протоколинтернетпочты " +
          "статусразборапочтовогосообщения ";

        // v8 системные перечисления - журнал регистрации ==> class
        var v8_system_enums_logbook =
          "режимтранзакциизаписижурналарегистрации статустранзакциизаписижурналарегистрации уровеньжурналарегистрации ";

        // v8 системные перечисления - криптография ==> class
        var v8_system_enums_cryptography =
          "расположениехранилищасертификатовкриптографии режимвключениясертификатовкриптографии режимпроверкисертификатакриптографии " +
          "типхранилищасертификатовкриптографии ";

        // v8 системные перечисления - ZIP ==> class
        var v8_system_enums_zip =
          "кодировкаименфайловвzipфайле методсжатияzip методшифрованияzip режимвосстановленияпутейфайловzip режимобработкиподкаталоговzip " +
          "режимсохраненияпутейzip уровеньсжатияzip ";

        // v8 системные перечисления -
        // Блокировка данных, Фоновые задания, Автоматизированное тестирование,
        // Доставляемые уведомления, Встроенные покупки, Интернет, Работа с двоичными данными ==> class
        var v8_system_enums_other =
          "звуковоеоповещение направлениепереходакстроке позициявпотоке порядокбайтов режимблокировкиданных режимуправленияблокировкойданных " +
          "сервисвстроенныхпокупок состояниефоновогозадания типподписчикадоставляемыхуведомлений уровеньиспользованиязащищенногосоединенияftp ";

        // v8 системные перечисления - схема запроса ==> class
        var v8_system_enums_request_schema =
          "направлениепорядкасхемызапроса типдополненияпериодамисхемызапроса типконтрольнойточкисхемызапроса типобъединениясхемызапроса " +
          "типпараметрадоступнойтаблицысхемызапроса типсоединениясхемызапроса ";

        // v8 системные перечисления - свойства объектов метаданных ==> class
        var v8_system_enums_properties_of_metadata_objects =
          "httpметод автоиспользованиеобщегореквизита автопрефиксномеразадачи вариантвстроенногоязыка видиерархии видрегистранакопления " +
          "видтаблицывнешнегоисточникаданных записьдвиженийприпроведении заполнениепоследовательностей индексирование " +
          "использованиебазыпланавидоврасчета использованиебыстроговыбора использованиеобщегореквизита использованиеподчинения " +
          "использованиеполнотекстовогопоиска использованиеразделяемыхданныхобщегореквизита использованиереквизита " +
          "назначениеиспользованияприложения назначениерасширенияконфигурации направлениепередачи обновлениепредопределенныхданных " +
          "оперативноепроведение основноепредставлениевидарасчета основноепредставлениевидахарактеристики основноепредставлениезадачи " +
          "основноепредставлениепланаобмена основноепредставлениесправочника основноепредставлениесчета перемещениеграницыприпроведении " +
          "периодичностьномерабизнеспроцесса периодичностьномерадокумента периодичностьрегистрарасчета периодичностьрегистрасведений " +
          "повторноеиспользованиевозвращаемыхзначений полнотекстовыйпоискпривводепостроке принадлежностьобъекта проведение " +
          "разделениеаутентификацииобщегореквизита разделениеданныхобщегореквизита разделениерасширенийконфигурацииобщегореквизита " +
          "режимавтонумерацииобъектов режимзаписирегистра режимиспользованиямодальности " +
          "режимиспользованиясинхронныхвызововрасширенийплатформыивнешнихкомпонент режимповторногоиспользованиясеансов " +
          "режимполученияданныхвыборапривводепостроке режимсовместимости режимсовместимостиинтерфейса " +
          "режимуправленияблокировкойданныхпоумолчанию сериикодовпланавидовхарактеристик сериикодовпланасчетов " +
          "сериикодовсправочника созданиепривводе способвыбора способпоискастрокипривводепостроке способредактирования " +
          "типданныхтаблицывнешнегоисточникаданных типкодапланавидоврасчета типкодасправочника типмакета типномерабизнеспроцесса " +
          "типномерадокумента типномеразадачи типформы удалениедвижений ";

        // v8 системные перечисления - разные ==> class
        var v8_system_enums_differents =
          "важностьпроблемыприменениярасширенияконфигурации вариантинтерфейсаклиентскогоприложения вариантмасштабаформклиентскогоприложения " +
          "вариантосновногошрифтаклиентскогоприложения вариантстандартногопериода вариантстандартнойдатыначала видграницы видкартинки " +
          "видотображенияполнотекстовогопоиска видрамки видсравнения видцвета видчисловогозначения видшрифта допустимаядлина допустимыйзнак " +
          "использованиеbyteordermark использованиеметаданныхполнотекстовогопоиска источникрасширенийконфигурации клавиша кодвозвратадиалога " +
          "кодировкаxbase кодировкатекста направлениепоиска направлениесортировки обновлениепредопределенныхданных обновлениеприизмененииданных " +
          "отображениепанелиразделов проверказаполнения режимдиалогавопрос режимзапускаклиентскогоприложения режимокругления режимоткрытияформприложения " +
          "режимполнотекстовогопоиска скоростьклиентскогосоединения состояниевнешнегоисточникаданных состояниеобновленияконфигурациибазыданных " +
          "способвыборасертификатаwindows способкодированиястроки статуссообщения типвнешнейкомпоненты типплатформы типповеденияклавишиenter " +
          "типэлементаинформацииовыполненииобновленияконфигурациибазыданных уровеньизоляциитранзакций хешфункция частидаты";

        // class: встроенные наборы значений, системные перечисления (содержат дочерние значения, обращения к которым через разыменование)
        var CLASS =
          v8_system_sets_of_values +
          v8_system_enums_interface +
          v8_system_enums_objects_properties +
          v8_system_enums_exchange_plans +
          v8_system_enums_tabular_document +
          v8_system_enums_sheduler +
          v8_system_enums_formatted_document +
          v8_system_enums_query +
          v8_system_enums_report_builder +
          v8_system_enums_files +
          v8_system_enums_query_builder +
          v8_system_enums_data_analysis +
          v8_system_enums_xml_json_xs_dom_xdto_ws +
          v8_system_enums_data_composition_system +
          v8_system_enums_email +
          v8_system_enums_logbook +
          v8_system_enums_cryptography +
          v8_system_enums_zip +
          v8_system_enums_other +
          v8_system_enums_request_schema +
          v8_system_enums_properties_of_metadata_objects +
          v8_system_enums_differents;

        // v8 общие объекты (у объектов есть конструктор, экземпляры создаются методом НОВЫЙ) ==> type
        var v8_shared_object =
          "comобъект ftpсоединение httpзапрос httpсервисответ httpсоединение wsопределения wsпрокси xbase анализданных аннотацияxs " +
          "блокировкаданных буфердвоичныхданных включениеxs выражениекомпоновкиданных генераторслучайныхчисел географическаясхема " +
          "географическиекоординаты графическаясхема группамоделиxs данныерасшифровкикомпоновкиданных двоичныеданные дендрограмма " +
          "диаграмма диаграммаганта диалогвыборафайла диалогвыборацвета диалогвыборашрифта диалограсписаниярегламентногозадания " +
          "диалогредактированиястандартногопериода диапазон документdom документhtml документацияxs доставляемоеуведомление " +
          "записьdom записьfastinfoset записьhtml записьjson записьxml записьzipфайла записьданных записьтекста записьузловdom " +
          "запрос защищенноесоединениеopenssl значенияполейрасшифровкикомпоновкиданных извлечениетекста импортxs интернетпочта " +
          "интернетпочтовоесообщение интернетпочтовыйпрофиль интернетпрокси интернетсоединение информациядляприложенияxs " +
          "использованиеатрибутаxs использованиесобытияжурналарегистрации источникдоступныхнастроеккомпоновкиданных " +
          "итераторузловdom картинка квалификаторыдаты квалификаторыдвоичныхданных квалификаторыстроки квалификаторычисла " +
          "компоновщикмакетакомпоновкиданных компоновщикнастроеккомпоновкиданных конструктормакетаоформлениякомпоновкиданных " +
          "конструкторнастроеккомпоновкиданных конструкторформатнойстроки линия макеткомпоновкиданных макетобластикомпоновкиданных " +
          "макетоформлениякомпоновкиданных маскаxs менеджеркриптографии наборсхемxml настройкикомпоновкиданных настройкисериализацииjson " +
          "обработкакартинок обработкарасшифровкикомпоновкиданных обходдереваdom объявлениеатрибутаxs объявлениенотацииxs " +
          "объявлениеэлементаxs описаниеиспользованиясобытиядоступжурналарегистрации " +
          "описаниеиспользованиясобытияотказвдоступежурналарегистрации описаниеобработкирасшифровкикомпоновкиданных " +
          "описаниепередаваемогофайла описаниетипов определениегруппыатрибутовxs определениегруппымоделиxs " +
          "определениеограниченияидентичностиxs определениепростоготипаxs определениесоставноготипаxs определениетипадокументаdom " +
          "определенияxpathxs отборкомпоновкиданных пакетотображаемыхдокументов параметрвыбора параметркомпоновкиданных " +
          "параметрызаписиjson параметрызаписиxml параметрычтенияxml переопределениеxs планировщик полеанализаданных " +
          "полекомпоновкиданных построительdom построительзапроса построительотчета построительотчетаанализаданных " +
          "построительсхемxml поток потоквпамяти почта почтовоесообщение преобразованиеxsl преобразованиекканоническомуxml " +
          "процессорвыводарезультатакомпоновкиданныхвколлекциюзначений процессорвыводарезультатакомпоновкиданныхвтабличныйдокумент " +
          "процессоркомпоновкиданных разыменовательпространствименdom рамка расписаниерегламентногозадания расширенноеимяxml " +
          "результатчтенияданных своднаядиаграмма связьпараметравыбора связьпотипу связьпотипукомпоновкиданных сериализаторxdto " +
          "сертификатклиентаwindows сертификатклиентафайл сертификаткриптографии сертификатыудостоверяющихцентровwindows " +
          "сертификатыудостоверяющихцентровфайл сжатиеданных системнаяинформация сообщениепользователю сочетаниеклавиш " +
          "сравнениезначений стандартнаядатаначала стандартныйпериод схемаxml схемакомпоновкиданных табличныйдокумент " +
          "текстовыйдокумент тестируемоеприложение типданныхxml уникальныйидентификатор фабрикаxdto файл файловыйпоток " +
          "фасетдлиныxs фасетколичестваразрядовдробнойчастиxs фасетмаксимальноговключающегозначенияxs " +
          "фасетмаксимальногоисключающегозначенияxs фасетмаксимальнойдлиныxs фасетминимальноговключающегозначенияxs " +
          "фасетминимальногоисключающегозначенияxs фасетминимальнойдлиныxs фасетобразцаxs фасетобщегоколичестваразрядовxs " +
          "фасетперечисленияxs фасетпробельныхсимволовxs фильтрузловdom форматированнаястрока форматированныйдокумент " +
          "фрагментxs хешированиеданных хранилищезначения цвет чтениеfastinfoset чтениеhtml чтениеjson чтениеxml чтениеzipфайла " +
          "чтениеданных чтениетекста чтениеузловdom шрифт элементрезультатакомпоновкиданных ";

        // v8 универсальные коллекции значений ==> type
        var v8_universal_collection =
          "comsafearray деревозначений массив соответствие списокзначений структура таблицазначений фиксированнаяструктура " +
          "фиксированноесоответствие фиксированныймассив ";

        // type : встроенные типы
        var TYPE = v8_shared_object + v8_universal_collection;

        // literal : примитивные типы
        var LITERAL = "null истина ложь неопределено";

        // number : числа
        var NUMBERS = hljs.inherit(hljs.NUMBER_MODE);

        // string : строки
        var STRINGS = {
          className: "string",
          begin: '"|\\|',
          end: '"|$',
          contains: [{ begin: '""' }]
        };

        // number : даты
        var DATE = {
          begin: "'",
          end: "'",
          excludeBegin: true,
          excludeEnd: true,
          contains: [
            {
              className: "number",
              begin: "\\d{4}([\\.\\\\/:-]?\\d{2}){0,5}"
            }
          ]
        };

        // comment : комментарии
        var COMMENTS = hljs.inherit(hljs.C_LINE_COMMENT_MODE);

        // meta : инструкции препроцессора, директивы компиляции
        var META = {
          className: "meta",
          lexemes: UNDERSCORE_IDENT_RE,
          begin: "#|&",
          end: "$",
          keywords: { "meta-keyword": KEYWORD + METAKEYWORD },
          contains: [COMMENTS]
        };

        // symbol : метка goto
        var SYMBOL = {
          className: "symbol",
          begin: "~",
          end: ";|:",
          excludeEnd: true
        };

        // function : объявление процедур и функций
        var FUNCTION = {
          className: "function",
          lexemes: UNDERSCORE_IDENT_RE,
          variants: [
            {
              begin: "процедура|функция",
              end: "\\)",
              keywords: "процедура функция"
            },
            {
              begin: "конецпроцедуры|конецфункции",
              keywords: "конецпроцедуры конецфункции"
            }
          ],
          contains: [
            {
              begin: "\\(",
              end: "\\)",
              endsParent: true,
              contains: [
                {
                  className: "params",
                  lexemes: UNDERSCORE_IDENT_RE,
                  begin: UNDERSCORE_IDENT_RE,
                  end: ",",
                  excludeEnd: true,
                  endsWithParent: true,
                  keywords: {
                    keyword: "знач",
                    literal: LITERAL
                  },
                  contains: [NUMBERS, STRINGS, DATE]
                },
                COMMENTS
              ]
            },
            hljs.inherit(hljs.TITLE_MODE, { begin: UNDERSCORE_IDENT_RE })
          ]
        };

        return {
          case_insensitive: true,
          lexemes: UNDERSCORE_IDENT_RE,
          keywords: {
            keyword: KEYWORD,
            built_in: BUILTIN,
            class: CLASS,
            type: TYPE,
            literal: LITERAL
          },
          contains: [META, FUNCTION, COMMENTS, SYMBOL, NUMBERS, STRINGS, DATE]
        };
      };

      /***/
    },
    /* 32 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var regexes = {
          ruleDeclaration: "^[a-zA-Z][a-zA-Z0-9-]*",
          unexpectedChars: "[!@#$^&',?+~`|:]"
        };

        var keywords = [
          "ALPHA",
          "BIT",
          "CHAR",
          "CR",
          "CRLF",
          "CTL",
          "DIGIT",
          "DQUOTE",
          "HEXDIG",
          "HTAB",
          "LF",
          "LWSP",
          "OCTET",
          "SP",
          "VCHAR",
          "WSP"
        ];

        var commentMode = hljs.COMMENT(";", "$");

        var terminalBinaryMode = {
          className: "symbol",
          begin: /%b[0-1]+(-[0-1]+|(\.[0-1]+)+){0,1}/
        };

        var terminalDecimalMode = {
          className: "symbol",
          begin: /%d[0-9]+(-[0-9]+|(\.[0-9]+)+){0,1}/
        };

        var terminalHexadecimalMode = {
          className: "symbol",
          begin: /%x[0-9A-F]+(-[0-9A-F]+|(\.[0-9A-F]+)+){0,1}/
        };

        var caseSensitivityIndicatorMode = {
          className: "symbol",
          begin: /%[si]/
        };

        var ruleDeclarationMode = {
          begin: regexes.ruleDeclaration + "\\s*=",
          returnBegin: true,
          end: /=/,
          relevance: 0,
          contains: [{ className: "attribute", begin: regexes.ruleDeclaration }]
        };

        return {
          illegal: regexes.unexpectedChars,
          keywords: keywords.join(" "),
          contains: [
            ruleDeclarationMode,
            commentMode,
            terminalBinaryMode,
            terminalDecimalMode,
            terminalHexadecimalMode,
            caseSensitivityIndicatorMode,
            hljs.QUOTE_STRING_MODE,
            hljs.NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 33 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            // IP
            {
              className: "number",
              begin:
                "\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b"
            },
            // Other numbers
            {
              className: "number",
              begin: "\\b\\d+\\b",
              relevance: 0
            },
            // Requests
            {
              className: "string",
              begin: '"(GET|POST|HEAD|PUT|DELETE|CONNECT|OPTIONS|PATCH|TRACE)',
              end: '"',
              keywords: "GET POST HEAD PUT DELETE CONNECT OPTIONS PATCH TRACE",
              illegal: "\\n",
              relevance: 10
            },
            // Dates
            {
              className: "string",
              begin: /\[/,
              end: /\]/,
              illegal: "\\n"
            },
            // Strings
            {
              className: "string",
              begin: '"',
              end: '"',
              illegal: "\\n"
            }
          ]
        };
      };

      /***/
    },
    /* 34 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENT_RE = "[a-zA-Z_$][a-zA-Z0-9_$]*";
        var IDENT_FUNC_RETURN_TYPE_RE = "([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)";

        var AS3_REST_ARG_MODE = {
          className: "rest_arg",
          begin: "[.]{3}",
          end: IDENT_RE,
          relevance: 10
        };

        return {
          aliases: ["as"],
          keywords: {
            keyword:
              "as break case catch class const continue default delete do dynamic each " +
              "else extends final finally for function get if implements import in include " +
              "instanceof interface internal is namespace native new override package private " +
              "protected public return set static super switch this throw try typeof use var void " +
              "while with",
            literal: "true false null undefined"
          },
          contains: [
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.C_NUMBER_MODE,
            {
              className: "class",
              beginKeywords: "package",
              end: "{",
              contains: [hljs.TITLE_MODE]
            },
            {
              className: "class",
              beginKeywords: "class interface",
              end: "{",
              excludeEnd: true,
              contains: [
                {
                  beginKeywords: "extends implements"
                },
                hljs.TITLE_MODE
              ]
            },
            {
              className: "meta",
              beginKeywords: "import include",
              end: ";",
              keywords: { "meta-keyword": "import include" }
            },
            {
              className: "function",
              beginKeywords: "function",
              end: "[{;]",
              excludeEnd: true,
              illegal: "\\S",
              contains: [
                hljs.TITLE_MODE,
                {
                  className: "params",
                  begin: "\\(",
                  end: "\\)",
                  contains: [
                    hljs.APOS_STRING_MODE,
                    hljs.QUOTE_STRING_MODE,
                    hljs.C_LINE_COMMENT_MODE,
                    hljs.C_BLOCK_COMMENT_MODE,
                    AS3_REST_ARG_MODE
                  ]
                },
                {
                  begin: ":\\s*" + IDENT_FUNC_RETURN_TYPE_RE
                }
              ]
            },
            hljs.METHOD_GUARD
          ],
          illegal: /#/
        };
      };

      /***/
    },
    /* 35 */
    /***/ function(module, exports) {
      module.exports = // We try to support full Ada2012
        //
        // We highlight all appearances of types, keywords, literals (string, char, number, bool)
        // and titles (user defined function/procedure/package)
        // CSS classes are set accordingly
        //
        // Languages causing problems for language detection:
        // xml (broken by Foo : Bar type), elm (broken by Foo : Bar type), vbscript-html (broken by body keyword)
        // sql (ada default.txt has a lot of sql keywords)

        function(hljs) {
          // Regular expression for Ada numeric literals.
          // stolen form the VHDL highlighter

          // Decimal literal:
          var INTEGER_RE = "\\d(_|\\d)*";
          var EXPONENT_RE = "[eE][-+]?" + INTEGER_RE;
          var DECIMAL_LITERAL_RE =
            INTEGER_RE + "(\\." + INTEGER_RE + ")?" + "(" + EXPONENT_RE + ")?";

          // Based literal:
          var BASED_INTEGER_RE = "\\w+";
          var BASED_LITERAL_RE =
            INTEGER_RE +
            "#" +
            BASED_INTEGER_RE +
            "(\\." +
            BASED_INTEGER_RE +
            ")?" +
            "#" +
            "(" +
            EXPONENT_RE +
            ")?";

          var NUMBER_RE =
            "\\b(" + BASED_LITERAL_RE + "|" + DECIMAL_LITERAL_RE + ")";

          // Identifier regex
          var ID_REGEX = "[A-Za-z](_?[A-Za-z0-9.])*";

          // bad chars, only allowed in literals
          var BAD_CHARS = "[]{}%#'\"";

          // Ada doesn't have block comments, only line comments
          var COMMENTS = hljs.COMMENT("--", "$");

          // variable declarations of the form
          // Foo : Bar := Baz;
          // where only Bar will be highlighted
          var VAR_DECLS = {
            // TODO: These spaces are not required by the Ada syntax
            // however, I have yet to see handwritten Ada code where
            // someone does not put spaces around :
            begin: "\\s+:\\s+",
            end: "\\s*(:=|;|\\)|=>|$)",
            // endsWithParent: true,
            // returnBegin: true,
            illegal: BAD_CHARS,
            contains: [
              {
                // workaround to avoid highlighting
                // named loops and declare blocks
                beginKeywords: "loop for declare others",
                endsParent: true
              },
              {
                // properly highlight all modifiers
                className: "keyword",
                beginKeywords:
                  "not null constant access function procedure in out aliased exception"
              },
              {
                className: "type",
                begin: ID_REGEX,
                endsParent: true,
                relevance: 0
              }
            ]
          };

          return {
            case_insensitive: true,
            keywords: {
              keyword:
                "abort else new return abs elsif not reverse abstract end " +
                "accept entry select access exception of separate aliased exit or some " +
                "all others subtype and for out synchronized array function overriding " +
                "at tagged generic package task begin goto pragma terminate " +
                "body private then if procedure type case in protected constant interface " +
                "is raise use declare range delay limited record when delta loop rem while " +
                "digits renames with do mod requeue xor",
              literal: "True False"
            },
            contains: [
              COMMENTS,
              // strings "foobar"
              {
                className: "string",
                begin: /"/,
                end: /"/,
                contains: [{ begin: /""/, relevance: 0 }]
              },
              // characters ''
              {
                // character literals always contain one char
                className: "string",
                begin: /'.'/
              },
              {
                // number literals
                className: "number",
                begin: NUMBER_RE,
                relevance: 0
              },
              {
                // Attributes
                className: "symbol",
                begin: "'" + ID_REGEX
              },
              {
                // package definition, maybe inside generic
                className: "title",
                begin:
                  "(\\bwith\\s+)?(\\bprivate\\s+)?\\bpackage\\s+(\\bbody\\s+)?",
                end: "(is|$)",
                keywords: "package body",
                excludeBegin: true,
                excludeEnd: true,
                illegal: BAD_CHARS
              },
              {
                // function/procedure declaration/definition
                // maybe inside generic
                begin: "(\\b(with|overriding)\\s+)?\\b(function|procedure)\\s+",
                end: "(\\bis|\\bwith|\\brenames|\\)\\s*;)",
                keywords:
                  "overriding function procedure with is renames return",
                // we need to re-match the 'function' keyword, so that
                // the title mode below matches only exactly once
                returnBegin: true,
                contains: [
                  COMMENTS,
                  {
                    // name of the function/procedure
                    className: "title",
                    begin: "(\\bwith\\s+)?\\b(function|procedure)\\s+",
                    end: "(\\(|\\s+|$)",
                    excludeBegin: true,
                    excludeEnd: true,
                    illegal: BAD_CHARS
                  },
                  // 'self'
                  // // parameter types
                  VAR_DECLS,
                  {
                    // return type
                    className: "type",
                    begin: "\\breturn\\s+",
                    end: "(\\s+|;|$)",
                    keywords: "return",
                    excludeBegin: true,
                    excludeEnd: true,
                    // we are done with functions
                    endsParent: true,
                    illegal: BAD_CHARS
                  }
                ]
              },
              {
                // new type declarations
                // maybe inside generic
                className: "type",
                begin: "\\b(sub)?type\\s+",
                end: "\\s+",
                keywords: "type",
                excludeBegin: true,
                illegal: BAD_CHARS
              },

              // see comment above the definition
              VAR_DECLS

              // no markup
              // relevance boosters for small snippets
              // {begin: '\\s*=>\\s*'},
              // {begin: '\\s*:=\\s*'},
              // {begin: '\\s+:=\\s+'},
            ]
          };
        };

      /***/
    },
    /* 36 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var NUMBER = { className: "number", begin: "[\\$%]\\d+" };
        return {
          aliases: ["apacheconf"],
          case_insensitive: true,
          contains: [
            hljs.HASH_COMMENT_MODE,
            { className: "section", begin: "</?", end: ">" },
            {
              className: "attribute",
              begin: /\w+/,
              relevance: 0,
              // keywords aren’t needed for highlighting per se, they only boost relevance
              // for a very generally defined mode (starts with a word, ends with line-end
              keywords: {
                nomarkup:
                  "order deny allow setenv rewriterule rewriteengine rewritecond documentroot " +
                  "sethandler errordocument loadmodule options header listen serverroot " +
                  "servername"
              },
              starts: {
                end: /$/,
                relevance: 0,
                keywords: {
                  literal: "on off all"
                },
                contains: [
                  {
                    className: "meta",
                    begin: "\\s\\[",
                    end: "\\]$"
                  },
                  {
                    className: "variable",
                    begin: "[\\$%]\\{",
                    end: "\\}",
                    contains: ["self", NUMBER]
                  },
                  NUMBER,
                  hljs.QUOTE_STRING_MODE
                ]
              }
            }
          ],
          illegal: /\S/
        };
      };

      /***/
    },
    /* 37 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: "" });
        var PARAMS = {
          className: "params",
          begin: "\\(",
          end: "\\)",
          contains: ["self", hljs.C_NUMBER_MODE, STRING]
        };
        var COMMENT_MODE_1 = hljs.COMMENT("--", "$");
        var COMMENT_MODE_2 = hljs.COMMENT("\\(\\*", "\\*\\)", {
          contains: ["self", COMMENT_MODE_1] //allow nesting
        });
        var COMMENTS = [COMMENT_MODE_1, COMMENT_MODE_2, hljs.HASH_COMMENT_MODE];

        return {
          aliases: ["osascript"],
          keywords: {
            keyword:
              "about above after against and around as at back before beginning " +
              "behind below beneath beside between but by considering " +
              "contain contains continue copy div does eighth else end equal " +
              "equals error every exit fifth first for fourth from front " +
              "get given global if ignoring in into is it its last local me " +
              "middle mod my ninth not of on onto or over prop property put ref " +
              "reference repeat returning script second set seventh since " +
              "sixth some tell tenth that the|0 then third through thru " +
              "timeout times to transaction try until where while whose with " +
              "without",
            literal:
              "AppleScript false linefeed return pi quote result space tab true",
            built_in:
              "alias application boolean class constant date file integer list " +
              "number real record string text " +
              "activate beep count delay launch log offset read round " +
              "run say summarize write " +
              "character characters contents day frontmost id item length " +
              "month name paragraph paragraphs rest reverse running time version " +
              "weekday word words year"
          },
          contains: [
            STRING,
            hljs.C_NUMBER_MODE,
            {
              className: "built_in",
              begin:
                "\\b(clipboard info|the clipboard|info for|list (disks|folder)|" +
                "mount volume|path to|(close|open for) access|(get|set) eof|" +
                "current date|do shell script|get volume settings|random number|" +
                "set volume|system attribute|system info|time to GMT|" +
                "(load|run|store) script|scripting components|" +
                "ASCII (character|number)|localized string|" +
                "choose (application|color|file|file name|" +
                "folder|from list|remote application|URL)|" +
                "display (alert|dialog))\\b|^\\s*return\\b"
            },
            {
              className: "literal",
              begin:
                "\\b(text item delimiters|current application|missing value)\\b"
            },
            {
              className: "keyword",
              begin:
                "\\b(apart from|aside from|instead of|out of|greater than|" +
                "isn't|(doesn't|does not) (equal|come before|come after|contain)|" +
                "(greater|less) than( or equal)?|(starts?|ends|begins?) with|" +
                "contained by|comes (before|after)|a (ref|reference)|POSIX file|" +
                "POSIX path|(date|time) string|quoted form)\\b"
            },
            {
              beginKeywords: "on",
              illegal: "[${=;\\n]",
              contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]
            }
          ].concat(COMMENTS),
          illegal: "//|->|=>|\\[\\["
        };
      };

      /***/
    },
    /* 38 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var CPP_PRIMITIVE_TYPES = {
          className: "keyword",
          begin: "\\b[a-z\\d_]*_t\\b"
        };

        var STRINGS = {
          className: "string",
          variants: [
            {
              begin: '(u8?|U)?L?"',
              end: '"',
              illegal: "\\n",
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              begin: '(u8?|U)?R"',
              end: '"',
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              begin: "'\\\\?.",
              end: "'",
              illegal: "."
            }
          ]
        };

        var NUMBERS = {
          className: "number",
          variants: [
            { begin: "\\b(0b[01']+)" },
            {
              begin:
                "(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)(u|U|l|L|ul|UL|f|F|b|B)"
            },
            {
              begin:
                "(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"
            }
          ],
          relevance: 0
        };

        var PREPROCESSOR = {
          className: "meta",
          begin: /#\s*[a-z]+\b/,
          end: /$/,
          keywords: {
            "meta-keyword":
              "if else elif endif define undef warning error line " +
              "pragma ifdef ifndef include"
          },
          contains: [
            {
              begin: /\\\n/,
              relevance: 0
            },
            hljs.inherit(STRINGS, { className: "meta-string" }),
            {
              className: "meta-string",
              begin: /<[^\n>]*>/,
              end: /$/,
              illegal: "\\n"
            },
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE
          ]
        };

        var FUNCTION_TITLE = hljs.IDENT_RE + "\\s*\\(";

        var CPP_KEYWORDS = {
          keyword:
            "int float while private char catch import module export virtual operator sizeof " +
            "dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace " +
            "unsigned long volatile static protected bool template mutable if public friend " +
            "do goto auto void enum else break extern using asm case typeid " +
            "short reinterpret_cast|10 default double register explicit signed typename try this " +
            "switch continue inline delete alignof constexpr decltype " +
            "noexcept static_assert thread_local restrict _Bool complex _Complex _Imaginary " +
            "atomic_bool atomic_char atomic_schar " +
            "atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong " +
            "atomic_ullong new throw return " +
            "and or not",
          built_in:
            "std string cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream " +
            "auto_ptr deque list queue stack vector map set bitset multiset multimap unordered_set " +
            "unordered_map unordered_multiset unordered_multimap array shared_ptr abort abs acos " +
            "asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp " +
            "fscanf isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper " +
            "isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow " +
            "printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp " +
            "strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan " +
            "vfprintf vprintf vsprintf endl initializer_list unique_ptr",
          literal: "true false nullptr NULL"
        };

        var EXPRESSION_CONTAINS = [
          CPP_PRIMITIVE_TYPES,
          hljs.C_LINE_COMMENT_MODE,
          hljs.C_BLOCK_COMMENT_MODE,
          NUMBERS,
          STRINGS
        ];

        return {
          aliases: ["c", "cc", "h", "c++", "h++", "hpp"],
          keywords: CPP_KEYWORDS,
          illegal: "</",
          contains: EXPRESSION_CONTAINS.concat([
            PREPROCESSOR,
            {
              begin:
                "\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*<",
              end: ">",
              keywords: CPP_KEYWORDS,
              contains: ["self", CPP_PRIMITIVE_TYPES]
            },
            {
              begin: hljs.IDENT_RE + "::",
              keywords: CPP_KEYWORDS
            },
            {
              // This mode covers expression context where we can't expect a function
              // definition and shouldn't highlight anything that looks like one:
              // `return some()`, `else if()`, `(x*sum(1, 2))`
              variants: [
                { begin: /=/, end: /;/ },
                { begin: /\(/, end: /\)/ },
                { beginKeywords: "new throw return else", end: /;/ }
              ],
              keywords: CPP_KEYWORDS,
              contains: EXPRESSION_CONTAINS.concat([
                {
                  begin: /\(/,
                  end: /\)/,
                  keywords: CPP_KEYWORDS,
                  contains: EXPRESSION_CONTAINS.concat(["self"]),
                  relevance: 0
                }
              ]),
              relevance: 0
            },
            {
              className: "function",
              begin: "(" + hljs.IDENT_RE + "[\\*&\\s]+)+" + FUNCTION_TITLE,
              returnBegin: true,
              end: /[{;=]/,
              excludeEnd: true,
              keywords: CPP_KEYWORDS,
              illegal: /[^\w\s\*&]/,
              contains: [
                {
                  begin: FUNCTION_TITLE,
                  returnBegin: true,
                  contains: [hljs.TITLE_MODE],
                  relevance: 0
                },
                {
                  className: "params",
                  begin: /\(/,
                  end: /\)/,
                  keywords: CPP_KEYWORDS,
                  relevance: 0,
                  contains: [
                    hljs.C_LINE_COMMENT_MODE,
                    hljs.C_BLOCK_COMMENT_MODE,
                    STRINGS,
                    NUMBERS,
                    CPP_PRIMITIVE_TYPES
                  ]
                },
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                PREPROCESSOR
              ]
            },
            {
              className: "class",
              beginKeywords: "class struct",
              end: /[{;:]/,
              contains: [
                { begin: /</, end: />/, contains: ["self"] }, // skip generic stuff
                hljs.TITLE_MODE
              ]
            }
          ]),
          exports: {
            preprocessor: PREPROCESSOR,
            strings: STRINGS,
            keywords: CPP_KEYWORDS
          }
        };
      };

      /***/
    },
    /* 39 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var CPP = hljs.getLanguage("cpp").exports;
        return {
          keywords: {
            keyword:
              "boolean byte word string String array " + CPP.keywords.keyword,
            built_in:
              "setup loop while catch for if do goto try switch case else " +
              "default break continue return " +
              "KeyboardController MouseController SoftwareSerial " +
              "EthernetServer EthernetClient LiquidCrystal " +
              "RobotControl GSMVoiceCall EthernetUDP EsploraTFT " +
              "HttpClient RobotMotor WiFiClient GSMScanner " +
              "FileSystem Scheduler GSMServer YunClient YunServer " +
              "IPAddress GSMClient GSMModem Keyboard Ethernet " +
              "Console GSMBand Esplora Stepper Process " +
              "WiFiUDP GSM_SMS Mailbox USBHost Firmata PImage " +
              "Client Server GSMPIN FileIO Bridge Serial " +
              "EEPROM Stream Mouse Audio Servo File Task " +
              "GPRS WiFi Wire TFT GSM SPI SD " +
              "runShellCommandAsynchronously analogWriteResolution " +
              "retrieveCallingNumber printFirmwareVersion " +
              "analogReadResolution sendDigitalPortPair " +
              "noListenOnLocalhost readJoystickButton setFirmwareVersion " +
              "readJoystickSwitch scrollDisplayRight getVoiceCallStatus " +
              "scrollDisplayLeft writeMicroseconds delayMicroseconds " +
              "beginTransmission getSignalStrength runAsynchronously " +
              "getAsynchronously listenOnLocalhost getCurrentCarrier " +
              "readAccelerometer messageAvailable sendDigitalPorts " +
              "lineFollowConfig countryNameWrite runShellCommand " +
              "readStringUntil rewindDirectory readTemperature " +
              "setClockDivider readLightSensor endTransmission " +
              "analogReference detachInterrupt countryNameRead " +
              "attachInterrupt encryptionType readBytesUntil " +
              "robotNameWrite readMicrophone robotNameRead cityNameWrite " +
              "userNameWrite readJoystickY readJoystickX mouseReleased " +
              "openNextFile scanNetworks noInterrupts digitalWrite " +
              "beginSpeaker mousePressed isActionDone mouseDragged " +
              "displayLogos noAutoscroll addParameter remoteNumber " +
              "getModifiers keyboardRead userNameRead waitContinue " +
              "processInput parseCommand printVersion readNetworks " +
              "writeMessage blinkVersion cityNameRead readMessage " +
              "setDataMode parsePacket isListening setBitOrder " +
              "beginPacket isDirectory motorsWrite drawCompass " +
              "digitalRead clearScreen serialEvent rightToLeft " +
              "setTextSize leftToRight requestFrom keyReleased " +
              "compassRead analogWrite interrupts WiFiServer " +
              "disconnect playMelody parseFloat autoscroll " +
              "getPINUsed setPINUsed setTimeout sendAnalog " +
              "readSlider analogRead beginWrite createChar " +
              "motorsStop keyPressed tempoWrite readButton " +
              "subnetMask debugPrint macAddress writeGreen " +
              "randomSeed attachGPRS readString sendString " +
              "remotePort releaseAll mouseMoved background " +
              "getXChange getYChange answerCall getResult " +
              "voiceCall endPacket constrain getSocket writeJSON " +
              "getButton available connected findUntil readBytes " +
              "exitValue readGreen writeBlue startLoop IPAddress " +
              "isPressed sendSysex pauseMode gatewayIP setCursor " +
              "getOemKey tuneWrite noDisplay loadImage switchPIN " +
              "onRequest onReceive changePIN playFile noBuffer " +
              "parseInt overflow checkPIN knobRead beginTFT " +
              "bitClear updateIR bitWrite position writeRGB " +
              "highByte writeRed setSpeed readBlue noStroke " +
              "remoteIP transfer shutdown hangCall beginSMS " +
              "endWrite attached maintain noCursor checkReg " +
              "checkPUK shiftOut isValid shiftIn pulseIn " +
              "connect println localIP pinMode getIMEI " +
              "display noBlink process getBand running beginSD " +
              "drawBMP lowByte setBand release bitRead prepare " +
              "pointTo readRed setMode noFill remove listen " +
              "stroke detach attach noTone exists buffer " +
              "height bitSet circle config cursor random " +
              "IRread setDNS endSMS getKey micros " +
              "millis begin print write ready flush width " +
              "isPIN blink clear press mkdir rmdir close " +
              "point yield image BSSID click delay " +
              "read text move peek beep rect line open " +
              "seek fill size turn stop home find " +
              "step tone sqrt RSSI SSID " +
              "end bit tan cos sin pow map abs max " +
              "min get run put",
            literal:
              "DIGITAL_MESSAGE FIRMATA_STRING ANALOG_MESSAGE " +
              "REPORT_DIGITAL REPORT_ANALOG INPUT_PULLUP " +
              "SET_PIN_MODE INTERNAL2V56 SYSTEM_RESET LED_BUILTIN " +
              "INTERNAL1V1 SYSEX_START INTERNAL EXTERNAL " +
              "DEFAULT OUTPUT INPUT HIGH LOW"
          },
          contains: [
            CPP.preprocessor,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 40 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        //local labels: %?[FB]?[AT]?\d{1,2}\w+
        return {
          case_insensitive: true,
          aliases: ["arm"],
          lexemes: "\\.?" + hljs.IDENT_RE,
          keywords: {
            meta:
              //GNU preprocs
              ".2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .arm .thumb .code16 .code32 .force_thumb .thumb_func .ltorg " +
              //ARM directives
              "ALIAS ALIGN ARM AREA ASSERT ATTR CN CODE CODE16 CODE32 COMMON CP DATA DCB DCD DCDU DCDO DCFD DCFDU DCI DCQ DCQU DCW DCWU DN ELIF ELSE END ENDFUNC ENDIF ENDP ENTRY EQU EXPORT EXPORTAS EXTERN FIELD FILL FUNCTION GBLA GBLL GBLS GET GLOBAL IF IMPORT INCBIN INCLUDE INFO KEEP LCLA LCLL LCLS LTORG MACRO MAP MEND MEXIT NOFP OPT PRESERVE8 PROC QN READONLY RELOC REQUIRE REQUIRE8 RLIST FN ROUT SETA SETL SETS SN SPACE SUBT THUMB THUMBX TTL WHILE WEND ",
            built_in:
              "r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 " + //standard registers
              "pc lr sp ip sl sb fp " + //typical regs plus backward compatibility
              "a1 a2 a3 a4 v1 v2 v3 v4 v5 v6 v7 v8 f0 f1 f2 f3 f4 f5 f6 f7 " + //more regs and fp
              "p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 " + //coprocessor regs
              "c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 " + //more coproc
              "q0 q1 q2 q3 q4 q5 q6 q7 q8 q9 q10 q11 q12 q13 q14 q15 " + //advanced SIMD NEON regs
              //program status registers
              "cpsr_c cpsr_x cpsr_s cpsr_f cpsr_cx cpsr_cxs cpsr_xs cpsr_xsf cpsr_sf cpsr_cxsf " +
              "spsr_c spsr_x spsr_s spsr_f spsr_cx spsr_cxs spsr_xs spsr_xsf spsr_sf spsr_cxsf " +
              //NEON and VFP registers
              "s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 " +
              "s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 " +
              "d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 " +
              "d16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 d30 d31 " +
              "{PC} {VAR} {TRUE} {FALSE} {OPT} {CONFIG} {ENDIAN} {CODESIZE} {CPU} {FPU} {ARCHITECTURE} {PCSTOREOFFSET} {ARMASM_VERSION} {INTER} {ROPI} {RWPI} {SWST} {NOSWST} . @"
          },
          contains: [
            {
              className: "keyword",
              begin:
                "\\b(" + //mnemonics
                "adc|" +
                "(qd?|sh?|u[qh]?)?add(8|16)?|usada?8|(q|sh?|u[qh]?)?(as|sa)x|" +
                "and|adrl?|sbc|rs[bc]|asr|b[lx]?|blx|bxj|cbn?z|tb[bh]|bic|" +
                "bfc|bfi|[su]bfx|bkpt|cdp2?|clz|clrex|cmp|cmn|cpsi[ed]|cps|" +
                "setend|dbg|dmb|dsb|eor|isb|it[te]{0,3}|lsl|lsr|ror|rrx|" +
                "ldm(([id][ab])|f[ds])?|ldr((s|ex)?[bhd])?|movt?|mvn|mra|mar|" +
                "mul|[us]mull|smul[bwt][bt]|smu[as]d|smmul|smmla|" +
                "mla|umlaal|smlal?([wbt][bt]|d)|mls|smlsl?[ds]|smc|svc|sev|" +
                "mia([bt]{2}|ph)?|mrr?c2?|mcrr2?|mrs|msr|orr|orn|pkh(tb|bt)|rbit|" +
                "rev(16|sh)?|sel|[su]sat(16)?|nop|pop|push|rfe([id][ab])?|" +
                "stm([id][ab])?|str(ex)?[bhd]?|(qd?)?sub|(sh?|q|u[qh]?)?sub(8|16)|" +
                "[su]xt(a?h|a?b(16)?)|srs([id][ab])?|swpb?|swi|smi|tst|teq|" +
                "wfe|wfi|yield" +
                ")" +
                "(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al|hs|lo)?" + //condition codes
                "[sptrx]?", //legal postfixes
              end: "\\s"
            },
            hljs.COMMENT("[;@]", "$", { relevance: 0 }),
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: "string",
              begin: "'",
              end: "[^\\\\]'",
              relevance: 0
            },
            {
              className: "title",
              begin: "\\|",
              end: "\\|",
              illegal: "\\n",
              relevance: 0
            },
            {
              className: "number",
              variants: [
                { begin: "[#$=]?0x[0-9a-f]+" }, //hex
                { begin: "[#$=]?0b[01]+" }, //bin
                { begin: "[#$=]\\d+" }, //literal
                { begin: "\\b\\d+" } //bare number
              ],
              relevance: 0
            },
            {
              className: "symbol",
              variants: [
                { begin: "^[a-z_\\.\\$][a-z0-9_\\.\\$]+" }, //ARM syntax
                { begin: "^\\s*[a-z_\\.\\$][a-z0-9_\\.\\$]+:" }, //GNU ARM syntax
                { begin: "[=#]\\w+" } //label reference
              ],
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 41 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var XML_IDENT_RE = "[A-Za-z0-9\\._:-]+";
        var TAG_INTERNALS = {
          endsWithParent: true,
          illegal: /</,
          relevance: 0,
          contains: [
            {
              className: "attr",
              begin: XML_IDENT_RE,
              relevance: 0
            },
            {
              begin: /=\s*/,
              relevance: 0,
              contains: [
                {
                  className: "string",
                  endsParent: true,
                  variants: [
                    { begin: /"/, end: /"/ },
                    { begin: /'/, end: /'/ },
                    { begin: /[^\s"'=<>`]+/ }
                  ]
                }
              ]
            }
          ]
        };
        return {
          aliases: [
            "html",
            "xhtml",
            "rss",
            "atom",
            "xjb",
            "xsd",
            "xsl",
            "plist"
          ],
          case_insensitive: true,
          contains: [
            {
              className: "meta",
              begin: "<!DOCTYPE",
              end: ">",
              relevance: 10,
              contains: [{ begin: "\\[", end: "\\]" }]
            },
            hljs.COMMENT("<!--", "-->", {
              relevance: 10
            }),
            {
              begin: "<\\!\\[CDATA\\[",
              end: "\\]\\]>",
              relevance: 10
            },
            {
              begin: /<\?(php)?/,
              end: /\?>/,
              subLanguage: "php",
              contains: [{ begin: "/\\*", end: "\\*/", skip: true }]
            },
            {
              className: "tag",
              /*
	        The lookahead pattern (?=...) ensures that 'begin' only matches
	        '<style' as a single word, followed by a whitespace or an
	        ending braket. The '$' is needed for the lexeme to be recognized
	        by hljs.subMode() that tests lexemes outside the stream.
	        */
              begin: "<style(?=\\s|>|$)",
              end: ">",
              keywords: { name: "style" },
              contains: [TAG_INTERNALS],
              starts: {
                end: "</style>",
                returnEnd: true,
                subLanguage: ["css", "xml"]
              }
            },
            {
              className: "tag",
              // See the comment in the <style tag about the lookahead pattern
              begin: "<script(?=\\s|>|$)",
              end: ">",
              keywords: { name: "script" },
              contains: [TAG_INTERNALS],
              starts: {
                end: "</script>",
                returnEnd: true,
                subLanguage: ["actionscript", "javascript", "handlebars", "xml"]
              }
            },
            {
              className: "meta",
              variants: [
                { begin: /<\?xml/, end: /\?>/, relevance: 10 },
                { begin: /<\?\w+/, end: /\?>/ }
              ]
            },
            {
              className: "tag",
              begin: "</?",
              end: "/?>",
              contains: [
                {
                  className: "name",
                  begin: /[^\/><\s]+/,
                  relevance: 0
                },
                TAG_INTERNALS
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 42 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["adoc"],
          contains: [
            // block comment
            hljs.COMMENT(
              "^/{4,}\\n",
              "\\n/{4,}$",
              // can also be done as...
              //'^/{4,}$',
              //'^/{4,}$',
              {
                relevance: 10
              }
            ),
            // line comment
            hljs.COMMENT("^//", "$", {
              relevance: 0
            }),
            // title
            {
              className: "title",
              begin: "^\\.\\w.*$"
            },
            // example, admonition & sidebar blocks
            {
              begin: "^[=\\*]{4,}\\n",
              end: "\\n^[=\\*]{4,}$",
              relevance: 10
            },
            // headings
            {
              className: "section",
              relevance: 10,
              variants: [
                { begin: "^(={1,5}) .+?( \\1)?$" },
                { begin: "^[^\\[\\]\\n]+?\\n[=\\-~\\^\\+]{2,}$" }
              ]
            },
            // document attributes
            {
              className: "meta",
              begin: "^:.+?:",
              end: "\\s",
              excludeEnd: true,
              relevance: 10
            },
            // block attributes
            {
              className: "meta",
              begin: "^\\[.+?\\]$",
              relevance: 0
            },
            // quoteblocks
            {
              className: "quote",
              begin: "^_{4,}\\n",
              end: "\\n_{4,}$",
              relevance: 10
            },
            // listing and literal blocks
            {
              className: "code",
              begin: "^[\\-\\.]{4,}\\n",
              end: "\\n[\\-\\.]{4,}$",
              relevance: 10
            },
            // passthrough blocks
            {
              begin: "^\\+{4,}\\n",
              end: "\\n\\+{4,}$",
              contains: [
                {
                  begin: "<",
                  end: ">",
                  subLanguage: "xml",
                  relevance: 0
                }
              ],
              relevance: 10
            },
            // lists (can only capture indicators)
            {
              className: "bullet",
              begin: "^(\\*+|\\-+|\\.+|[^\\n]+?::)\\s+"
            },
            // admonition
            {
              className: "symbol",
              begin: "^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\s+",
              relevance: 10
            },
            // inline strong
            {
              className: "strong",
              // must not follow a word character or be followed by an asterisk or space
              begin: "\\B\\*(?![\\*\\s])",
              end: "(\\n{2}|\\*)",
              // allow escaped asterisk followed by word char
              contains: [
                {
                  begin: "\\\\*\\w",
                  relevance: 0
                }
              ]
            },
            // inline emphasis
            {
              className: "emphasis",
              // must not follow a word character or be followed by a single quote or space
              begin: "\\B'(?!['\\s])",
              end: "(\\n{2}|')",
              // allow escaped single quote followed by word char
              contains: [
                {
                  begin: "\\\\'\\w",
                  relevance: 0
                }
              ],
              relevance: 0
            },
            // inline emphasis (alt)
            {
              className: "emphasis",
              // must not follow a word character or be followed by an underline or space
              begin: "_(?![_\\s])",
              end: "(\\n{2}|_)",
              relevance: 0
            },
            // inline smart quotes
            {
              className: "string",
              variants: [{ begin: "``.+?''" }, { begin: "`.+?'" }]
            },
            // inline code snippets (TODO should get same treatment as strong and emphasis)
            {
              className: "code",
              begin: "(`.+?`|\\+.+?\\+)",
              relevance: 0
            },
            // indented literal block
            {
              className: "code",
              begin: "^[ \\t]",
              end: "$",
              relevance: 0
            },
            // horizontal rules
            {
              begin: "^'{3,}[ \\t]*$",
              relevance: 10
            },
            // images and links
            {
              begin: "(link:)?(http|https|ftp|file|irc|image:?):\\S+\\[.*?\\]",
              returnBegin: true,
              contains: [
                {
                  begin: "(link|image:?):",
                  relevance: 0
                },
                {
                  className: "link",
                  begin: "\\w",
                  end: "[^\\[]+",
                  relevance: 0
                },
                {
                  className: "string",
                  begin: "\\[",
                  end: "\\]",
                  excludeBegin: true,
                  excludeEnd: true,
                  relevance: 0
                }
              ],
              relevance: 10
            }
          ]
        };
      };

      /***/
    },
    /* 43 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS =
          "false synchronized int abstract float private char boolean static null if const " +
          "for true while long throw strictfp finally protected import native final return void " +
          "enum else extends implements break transient new catch instanceof byte super volatile case " +
          "assert short package default double public try this switch continue throws privileged " +
          "aspectOf adviceexecution proceed cflowbelow cflow initialization preinitialization " +
          "staticinitialization withincode target within execution getWithinTypeName handler " +
          "thisJoinPoint thisJoinPointStaticPart thisEnclosingJoinPointStaticPart declare parents " +
          "warning error soft precedence thisAspectInstance";
        var SHORTKEYS = "get set args call";
        return {
          keywords: KEYWORDS,
          illegal: /<\/|#/,
          contains: [
            hljs.COMMENT("/\\*\\*", "\\*/", {
              relevance: 0,
              contains: [
                {
                  // eat up @'s in emails to prevent them to be recognized as doctags
                  begin: /\w+@/,
                  relevance: 0
                },
                {
                  className: "doctag",
                  begin: "@[A-Za-z]+"
                }
              ]
            }),
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: "class",
              beginKeywords: "aspect",
              end: /[{;=]/,
              excludeEnd: true,
              illegal: /[:;"\[\]]/,
              contains: [
                {
                  beginKeywords:
                    "extends implements pertypewithin perthis pertarget percflowbelow percflow issingleton"
                },
                hljs.UNDERSCORE_TITLE_MODE,
                {
                  begin: /\([^\)]*/,
                  end: /[)]+/,
                  keywords: KEYWORDS + " " + SHORTKEYS,
                  excludeEnd: false
                }
              ]
            },
            {
              className: "class",
              beginKeywords: "class interface",
              end: /[{;=]/,
              excludeEnd: true,
              relevance: 0,
              keywords: "class interface",
              illegal: /[:"\[\]]/,
              contains: [
                { beginKeywords: "extends implements" },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            },
            {
              // AspectJ Constructs
              beginKeywords: "pointcut after before around throwing returning",
              end: /[)]/,
              excludeEnd: false,
              illegal: /["\[\]]/,
              contains: [
                {
                  begin: hljs.UNDERSCORE_IDENT_RE + "\\s*\\(",
                  returnBegin: true,
                  contains: [hljs.UNDERSCORE_TITLE_MODE]
                }
              ]
            },
            {
              begin: /[:]/,
              returnBegin: true,
              end: /[{;]/,
              relevance: 0,
              excludeEnd: false,
              keywords: KEYWORDS,
              illegal: /["\[\]]/,
              contains: [
                {
                  begin: hljs.UNDERSCORE_IDENT_RE + "\\s*\\(",
                  keywords: KEYWORDS + " " + SHORTKEYS,
                  relevance: 0
                },
                hljs.QUOTE_STRING_MODE
              ]
            },
            {
              // this prevents 'new Name(...), or throw ...' from being recognized as a function definition
              beginKeywords: "new throw",
              relevance: 0
            },
            {
              // the function class is a bit different for AspectJ compared to the Java language
              className: "function",
              begin: /\w+ +\w+(\.)?\w+\s*\([^\)]*\)\s*((throws)[\w\s,]+)?[\{;]/,
              returnBegin: true,
              end: /[{;=]/,
              keywords: KEYWORDS,
              excludeEnd: true,
              contains: [
                {
                  begin: hljs.UNDERSCORE_IDENT_RE + "\\s*\\(",
                  returnBegin: true,
                  relevance: 0,
                  contains: [hljs.UNDERSCORE_TITLE_MODE]
                },
                {
                  className: "params",
                  begin: /\(/,
                  end: /\)/,
                  relevance: 0,
                  keywords: KEYWORDS,
                  contains: [
                    hljs.APOS_STRING_MODE,
                    hljs.QUOTE_STRING_MODE,
                    hljs.C_NUMBER_MODE,
                    hljs.C_BLOCK_COMMENT_MODE
                  ]
                },
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },
            hljs.C_NUMBER_MODE,
            {
              // annotation is also used in this language
              className: "meta",
              begin: "@[A-Za-z]+"
            }
          ]
        };
      };

      /***/
    },
    /* 44 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var BACKTICK_ESCAPE = {
          begin: "`[\\s\\S]"
        };

        return {
          case_insensitive: true,
          aliases: ["ahk"],
          keywords: {
            keyword:
              "Break Continue Critical Exit ExitApp Gosub Goto New OnExit Pause return SetBatchLines SetTimer Suspend Thread Throw Until ahk_id ahk_class ahk_pid ahk_exe ahk_group",
            literal: "A|0 true false NOT AND OR",
            built_in: "ComSpec Clipboard ClipboardAll ErrorLevel"
          },
          contains: [
            {
              className: "built_in",
              begin: "A_[a-zA-Z0-9]+"
            },
            BACKTICK_ESCAPE,
            hljs.inherit(hljs.QUOTE_STRING_MODE, {
              contains: [BACKTICK_ESCAPE]
            }),
            hljs.COMMENT(";", "$", { relevance: 0 }),
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: "number",
              begin: hljs.NUMBER_RE,
              relevance: 0
            },
            {
              className: "subst", // FIXED
              begin: "%(?=[a-zA-Z0-9#_$@])",
              end: "%",
              illegal: "[^a-zA-Z0-9#_$@]"
            },
            {
              className: "built_in",
              begin: "^\\s*\\w+\\s*,"
              //I don't really know if this is totally relevant
            },
            {
              className: "meta",
              begin: "^\\s*#w+",
              end: "$",
              relevance: 0
            },
            {
              className: "symbol",
              contains: [BACKTICK_ESCAPE],
              variants: [
                { begin: '^[^\\n";]+::(?!=)' },
                { begin: '^[^\\n";]+:(?!=)', relevance: 0 } // zero relevance as it catches a lot of things
                // followed by a single ':' in many languages
              ]
            },
            {
              // consecutive commas, not for highlighting but just for relevance
              begin: ",\\s*,"
            }
          ]
        };
      };

      /***/
    },
    /* 45 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS =
            "ByRef Case Const ContinueCase ContinueLoop " +
            "Default Dim Do Else ElseIf EndFunc EndIf EndSelect " +
            "EndSwitch EndWith Enum Exit ExitLoop For Func " +
            "Global If In Local Next ReDim Return Select Static " +
            "Step Switch Then To Until Volatile WEnd While With",
          LITERAL = "True False And Null Not Or",
          BUILT_IN =
            "Abs ACos AdlibRegister AdlibUnRegister Asc AscW ASin Assign ATan AutoItSetOption AutoItWinGetTitle AutoItWinSetTitle Beep Binary BinaryLen BinaryMid BinaryToString BitAND BitNOT BitOR BitRotate BitShift BitXOR BlockInput Break Call CDTray Ceiling Chr ChrW ClipGet ClipPut ConsoleRead ConsoleWrite ConsoleWriteError ControlClick ControlCommand ControlDisable ControlEnable ControlFocus ControlGetFocus ControlGetHandle ControlGetPos ControlGetText ControlHide ControlListView ControlMove ControlSend ControlSetText ControlShow ControlTreeView Cos Dec DirCopy DirCreate DirGetSize DirMove DirRemove DllCall DllCallAddress DllCallbackFree DllCallbackGetPtr DllCallbackRegister DllClose DllOpen DllStructCreate DllStructGetData DllStructGetPtr DllStructGetSize DllStructSetData DriveGetDrive DriveGetFileSystem DriveGetLabel DriveGetSerial DriveGetType DriveMapAdd DriveMapDel DriveMapGet DriveSetLabel DriveSpaceFree DriveSpaceTotal DriveStatus EnvGet EnvSet EnvUpdate Eval Execute Exp FileChangeDir FileClose FileCopy FileCreateNTFSLink FileCreateShortcut FileDelete FileExists FileFindFirstFile FileFindNextFile FileFlush FileGetAttrib FileGetEncoding FileGetLongName FileGetPos FileGetShortcut FileGetShortName FileGetSize FileGetTime FileGetVersion FileInstall FileMove FileOpen FileOpenDialog FileRead FileReadLine FileReadToArray FileRecycle FileRecycleEmpty FileSaveDialog FileSelectFolder FileSetAttrib FileSetEnd FileSetPos FileSetTime FileWrite FileWriteLine Floor FtpSetProxy FuncName GUICreate GUICtrlCreateAvi GUICtrlCreateButton GUICtrlCreateCheckbox GUICtrlCreateCombo GUICtrlCreateContextMenu GUICtrlCreateDate GUICtrlCreateDummy GUICtrlCreateEdit GUICtrlCreateGraphic GUICtrlCreateGroup GUICtrlCreateIcon GUICtrlCreateInput GUICtrlCreateLabel GUICtrlCreateList GUICtrlCreateListView GUICtrlCreateListViewItem GUICtrlCreateMenu GUICtrlCreateMenuItem GUICtrlCreateMonthCal GUICtrlCreateObj GUICtrlCreatePic GUICtrlCreateProgress GUICtrlCreateRadio GUICtrlCreateSlider GUICtrlCreateTab GUICtrlCreateTabItem GUICtrlCreateTreeView GUICtrlCreateTreeViewItem GUICtrlCreateUpdown GUICtrlDelete GUICtrlGetHandle GUICtrlGetState GUICtrlRead GUICtrlRecvMsg GUICtrlRegisterListViewSort GUICtrlSendMsg GUICtrlSendToDummy GUICtrlSetBkColor GUICtrlSetColor GUICtrlSetCursor GUICtrlSetData GUICtrlSetDefBkColor GUICtrlSetDefColor GUICtrlSetFont GUICtrlSetGraphic GUICtrlSetImage GUICtrlSetLimit GUICtrlSetOnEvent GUICtrlSetPos GUICtrlSetResizing GUICtrlSetState GUICtrlSetStyle GUICtrlSetTip GUIDelete GUIGetCursorInfo GUIGetMsg GUIGetStyle GUIRegisterMsg GUISetAccelerators GUISetBkColor GUISetCoord GUISetCursor GUISetFont GUISetHelp GUISetIcon GUISetOnEvent GUISetState GUISetStyle GUIStartGroup GUISwitch Hex HotKeySet HttpSetProxy HttpSetUserAgent HWnd InetClose InetGet InetGetInfo InetGetSize InetRead IniDelete IniRead IniReadSection IniReadSectionNames IniRenameSection IniWrite IniWriteSection InputBox Int IsAdmin IsArray IsBinary IsBool IsDeclared IsDllStruct IsFloat IsFunc IsHWnd IsInt IsKeyword IsNumber IsObj IsPtr IsString Log MemGetStats Mod MouseClick MouseClickDrag MouseDown MouseGetCursor MouseGetPos MouseMove MouseUp MouseWheel MsgBox Number ObjCreate ObjCreateInterface ObjEvent ObjGet ObjName OnAutoItExitRegister OnAutoItExitUnRegister Ping PixelChecksum PixelGetColor PixelSearch ProcessClose ProcessExists ProcessGetStats ProcessList ProcessSetPriority ProcessWait ProcessWaitClose ProgressOff ProgressOn ProgressSet Ptr Random RegDelete RegEnumKey RegEnumVal RegRead RegWrite Round Run RunAs RunAsWait RunWait Send SendKeepActive SetError SetExtended ShellExecute ShellExecuteWait Shutdown Sin Sleep SoundPlay SoundSetWaveVolume SplashImageOn SplashOff SplashTextOn Sqrt SRandom StatusbarGetText StderrRead StdinWrite StdioClose StdoutRead String StringAddCR StringCompare StringFormat StringFromASCIIArray StringInStr StringIsAlNum StringIsAlpha StringIsASCII StringIsDigit StringIsFloat StringIsInt StringIsLower StringIsSpace StringIsUpper StringIsXDigit StringLeft StringLen StringLower StringMid StringRegExp StringRegExpReplace StringReplace StringReverse StringRight StringSplit StringStripCR StringStripWS StringToASCIIArray StringToBinary StringTrimLeft StringTrimRight StringUpper Tan TCPAccept TCPCloseSocket TCPConnect TCPListen TCPNameToIP TCPRecv TCPSend TCPShutdown, UDPShutdown TCPStartup, UDPStartup TimerDiff TimerInit ToolTip TrayCreateItem TrayCreateMenu TrayGetMsg TrayItemDelete TrayItemGetHandle TrayItemGetState TrayItemGetText TrayItemSetOnEvent TrayItemSetState TrayItemSetText TraySetClick TraySetIcon TraySetOnEvent TraySetPauseIcon TraySetState TraySetToolTip TrayTip UBound UDPBind UDPCloseSocket UDPOpen UDPRecv UDPSend VarGetType WinActivate WinActive WinClose WinExists WinFlash WinGetCaretPos WinGetClassList WinGetClientSize WinGetHandle WinGetPos WinGetProcess WinGetState WinGetText WinGetTitle WinKill WinList WinMenuSelectItem WinMinimizeAll WinMinimizeAllUndo WinMove WinSetOnTop WinSetState WinSetTitle WinSetTrans WinWait",
          COMMENT = {
            variants: [
              hljs.COMMENT(";", "$", { relevance: 0 }),
              hljs.COMMENT("#cs", "#ce"),
              hljs.COMMENT("#comments-start", "#comments-end")
            ]
          },
          VARIABLE = {
            begin: "\\$[A-z0-9_]+"
          },
          STRING = {
            className: "string",
            variants: [
              {
                begin: /"/,
                end: /"/,
                contains: [
                  {
                    begin: /""/,
                    relevance: 0
                  }
                ]
              },
              {
                begin: /'/,
                end: /'/,
                contains: [
                  {
                    begin: /''/,
                    relevance: 0
                  }
                ]
              }
            ]
          },
          NUMBER = {
            variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]
          },
          PREPROCESSOR = {
            className: "meta",
            begin: "#",
            end: "$",
            keywords: {
              "meta-keyword":
                "comments include include-once NoTrayIcon OnAutoItStartRegister pragma compile RequireAdmin"
            },
            contains: [
              {
                begin: /\\\n/,
                relevance: 0
              },
              {
                beginKeywords: "include",
                keywords: { "meta-keyword": "include" },
                end: "$",
                contains: [
                  STRING,
                  {
                    className: "meta-string",
                    variants: [
                      {
                        begin: "<",
                        end: ">"
                      },
                      {
                        begin: /"/,
                        end: /"/,
                        contains: [
                          {
                            begin: /""/,
                            relevance: 0
                          }
                        ]
                      },
                      {
                        begin: /'/,
                        end: /'/,
                        contains: [
                          {
                            begin: /''/,
                            relevance: 0
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              STRING,
              COMMENT
            ]
          },
          CONSTANT = {
            className: "symbol",
            // begin: '@',
            // end: '$',
            // keywords: 'AppDataCommonDir AppDataDir AutoItExe AutoItPID AutoItVersion AutoItX64 COM_EventObj CommonFilesDir Compiled ComputerName ComSpec CPUArch CR CRLF DesktopCommonDir DesktopDepth DesktopDir DesktopHeight DesktopRefresh DesktopWidth DocumentsCommonDir error exitCode exitMethod extended FavoritesCommonDir FavoritesDir GUI_CtrlHandle GUI_CtrlId GUI_DragFile GUI_DragId GUI_DropId GUI_WinHandle HomeDrive HomePath HomeShare HotKeyPressed HOUR IPAddress1 IPAddress2 IPAddress3 IPAddress4 KBLayout LF LocalAppDataDir LogonDNSDomain LogonDomain LogonServer MDAY MIN MON MSEC MUILang MyDocumentsDir NumParams OSArch OSBuild OSLang OSServicePack OSType OSVersion ProgramFilesDir ProgramsCommonDir ProgramsDir ScriptDir ScriptFullPath ScriptLineNumber ScriptName SEC StartMenuCommonDir StartMenuDir StartupCommonDir StartupDir SW_DISABLE SW_ENABLE SW_HIDE SW_LOCK SW_MAXIMIZE SW_MINIMIZE SW_RESTORE SW_SHOW SW_SHOWDEFAULT SW_SHOWMAXIMIZED SW_SHOWMINIMIZED SW_SHOWMINNOACTIVE SW_SHOWNA SW_SHOWNOACTIVATE SW_SHOWNORMAL SW_UNLOCK SystemDir TAB TempDir TRAY_ID TrayIconFlashing TrayIconVisible UserName UserProfileDir WDAY WindowsDir WorkingDir YDAY YEAR',
            // relevance: 5
            begin: "@[A-z0-9_]+"
          },
          FUNCTION = {
            className: "function",
            beginKeywords: "Func",
            end: "$",
            illegal: "\\$|\\[|%",
            contains: [
              hljs.UNDERSCORE_TITLE_MODE,
              {
                className: "params",
                begin: "\\(",
                end: "\\)",
                contains: [VARIABLE, STRING, NUMBER]
              }
            ]
          };

        return {
          case_insensitive: true,
          illegal: /\/\*/,
          keywords: {
            keyword: KEYWORDS,
            built_in: BUILT_IN,
            literal: LITERAL
          },
          contains: [
            COMMENT,
            VARIABLE,
            STRING,
            NUMBER,
            PREPROCESSOR,
            CONSTANT,
            FUNCTION
          ]
        };
      };

      /***/
    },
    /* 46 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          case_insensitive: true,
          lexemes: "\\.?" + hljs.IDENT_RE,
          keywords: {
            keyword:
              /* mnemonic */
              "adc add adiw and andi asr bclr bld brbc brbs brcc brcs break breq brge brhc brhs " +
              "brid brie brlo brlt brmi brne brpl brsh brtc brts brvc brvs bset bst call cbi cbr " +
              "clc clh cli cln clr cls clt clv clz com cp cpc cpi cpse dec eicall eijmp elpm eor " +
              "fmul fmuls fmulsu icall ijmp in inc jmp ld ldd ldi lds lpm lsl lsr mov movw mul " +
              "muls mulsu neg nop or ori out pop push rcall ret reti rjmp rol ror sbc sbr sbrc sbrs " +
              "sec seh sbi sbci sbic sbis sbiw sei sen ser ses set sev sez sleep spm st std sts sub " +
              "subi swap tst wdr",
            built_in:
              /* general purpose registers */
              "r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 " +
              "r23 r24 r25 r26 r27 r28 r29 r30 r31 x|0 xh xl y|0 yh yl z|0 zh zl " +
              /* IO Registers (ATMega128) */
              "ucsr1c udr1 ucsr1a ucsr1b ubrr1l ubrr1h ucsr0c ubrr0h tccr3c tccr3a tccr3b tcnt3h " +
              "tcnt3l ocr3ah ocr3al ocr3bh ocr3bl ocr3ch ocr3cl icr3h icr3l etimsk etifr tccr1c " +
              "ocr1ch ocr1cl twcr twdr twar twsr twbr osccal xmcra xmcrb eicra spmcsr spmcr portg " +
              "ddrg ping portf ddrf sreg sph spl xdiv rampz eicrb eimsk gimsk gicr eifr gifr timsk " +
              "tifr mcucr mcucsr tccr0 tcnt0 ocr0 assr tccr1a tccr1b tcnt1h tcnt1l ocr1ah ocr1al " +
              "ocr1bh ocr1bl icr1h icr1l tccr2 tcnt2 ocr2 ocdr wdtcr sfior eearh eearl eedr eecr " +
              "porta ddra pina portb ddrb pinb portc ddrc pinc portd ddrd pind spdr spsr spcr udr0 " +
              "ucsr0a ucsr0b ubrr0l acsr admux adcsr adch adcl porte ddre pine pinf",
            meta:
              ".byte .cseg .db .def .device .dseg .dw .endmacro .equ .eseg .exit .include .list " +
              ".listmac .macro .nolist .org .set"
          },
          contains: [
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.COMMENT(";", "$", {
              relevance: 0
            }),
            hljs.C_NUMBER_MODE, // 0x..., decimal, float
            hljs.BINARY_NUMBER_MODE, // 0b...
            {
              className: "number",
              begin: "\\b(\\$[a-zA-Z0-9]+|0o[0-7]+)" // $..., 0o...
            },
            hljs.QUOTE_STRING_MODE,
            {
              className: "string",
              begin: "'",
              end: "[^\\\\]'",
              illegal: "[^\\\\][^']"
            },
            { className: "symbol", begin: "^[A-Za-z0-9_.$]+:" },
            { className: "meta", begin: "#", end: "$" },
            {
              // подстановка в «.macro»
              className: "subst",
              begin: "@[0-9]+"
            }
          ]
        };
      };

      /***/
    },
    /* 47 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var VARIABLE = {
          className: "variable",
          variants: [{ begin: /\$[\w\d#@][\w\d_]*/ }, { begin: /\$\{(.*?)}/ }]
        };
        var KEYWORDS =
          "BEGIN END if else while do for in break continue delete next nextfile function func exit|10";
        var STRING = {
          className: "string",
          contains: [hljs.BACKSLASH_ESCAPE],
          variants: [
            {
              begin: /(u|b)?r?'''/,
              end: /'''/,
              relevance: 10
            },
            {
              begin: /(u|b)?r?"""/,
              end: /"""/,
              relevance: 10
            },
            {
              begin: /(u|r|ur)'/,
              end: /'/,
              relevance: 10
            },
            {
              begin: /(u|r|ur)"/,
              end: /"/,
              relevance: 10
            },
            {
              begin: /(b|br)'/,
              end: /'/
            },
            {
              begin: /(b|br)"/,
              end: /"/
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE
          ]
        };
        return {
          keywords: {
            keyword: KEYWORDS
          },
          contains: [
            VARIABLE,
            STRING,
            hljs.REGEXP_MODE,
            hljs.HASH_COMMENT_MODE,
            hljs.NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 48 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords:
            "false int abstract private char boolean static null if for true " +
            "while long throw finally protected final return void enum else " +
            "break new catch byte super case short default double public try this switch " +
            "continue reverse firstfast firstonly forupdate nofetch sum avg minof maxof count " +
            "order group by asc desc index hint like dispaly edit client server ttsbegin " +
            "ttscommit str real date container anytype common div mod",
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE,
            {
              className: "meta",
              begin: "#",
              end: "$"
            },
            {
              className: "class",
              beginKeywords: "class interface",
              end: "{",
              excludeEnd: true,
              illegal: ":",
              contains: [
                { beginKeywords: "extends implements" },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 49 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var VAR = {
          className: "variable",
          variants: [{ begin: /\$[\w\d#@][\w\d_]*/ }, { begin: /\$\{(.*?)}/ }]
        };
        var QUOTE_STRING = {
          className: "string",
          begin: /"/,
          end: /"/,
          contains: [
            hljs.BACKSLASH_ESCAPE,
            VAR,
            {
              className: "variable",
              begin: /\$\(/,
              end: /\)/,
              contains: [hljs.BACKSLASH_ESCAPE]
            }
          ]
        };
        var APOS_STRING = {
          className: "string",
          begin: /'/,
          end: /'/
        };

        return {
          aliases: ["sh", "zsh"],
          lexemes: /\b-?[a-z\._]+\b/,
          keywords: {
            keyword:
              "if then else elif fi for while in do done case esac function",
            literal: "true false",
            built_in:
              // Shell built-ins
              // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html
              "break cd continue eval exec exit export getopts hash pwd readonly return shift test times " +
              "trap umask unset " +
              // Bash built-ins
              "alias bind builtin caller command declare echo enable help let local logout mapfile printf " +
              "read readarray source type typeset ulimit unalias " +
              // Shell modifiers
              "set shopt " +
              // Zsh built-ins
              "autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles " +
              "compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate " +
              "fc fg float functions getcap getln history integer jobs kill limit log noglob popd print " +
              "pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit " +
              "unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof " +
              "zpty zregexparse zsocket zstyle ztcp",
            _: "-ne -eq -lt -gt -f -d -e -s -l -a" // relevance booster
          },
          contains: [
            {
              className: "meta",
              begin: /^#![^\n]+sh\s*$/,
              relevance: 10
            },
            {
              className: "function",
              begin: /\w[\w\d_]*\s*\(\s*\)\s*\{/,
              returnBegin: true,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, { begin: /\w[\w\d_]*/ })
              ],
              relevance: 0
            },
            hljs.HASH_COMMENT_MODE,
            QUOTE_STRING,
            APOS_STRING,
            VAR
          ]
        };
      };

      /***/
    },
    /* 50 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          case_insensitive: true,
          illegal: "^.",
          // Support explicitely typed variables that end with $%! or #.
          lexemes: "[a-zA-Z][a-zA-Z0-9_$%!#]*",
          keywords: {
            keyword:
              "ABS ASC AND ATN AUTO|0 BEEP BLOAD|10 BSAVE|10 CALL CALLS CDBL CHAIN CHDIR CHR$|10 CINT CIRCLE " +
              "CLEAR CLOSE CLS COLOR COM COMMON CONT COS CSNG CSRLIN CVD CVI CVS DATA DATE$ " +
              "DEFDBL DEFINT DEFSNG DEFSTR DEF|0 SEG USR DELETE DIM DRAW EDIT END ENVIRON ENVIRON$ " +
              "EOF EQV ERASE ERDEV ERDEV$ ERL ERR ERROR EXP FIELD FILES FIX FOR|0 FRE GET GOSUB|10 GOTO " +
              "HEX$ IF|0 THEN ELSE|0 INKEY$ INP INPUT INPUT# INPUT$ INSTR IMP INT IOCTL IOCTL$ KEY ON " +
              "OFF LIST KILL LEFT$ LEN LET LINE LLIST LOAD LOC LOCATE LOF LOG LPRINT USING LSET " +
              "MERGE MID$ MKDIR MKD$ MKI$ MKS$ MOD NAME NEW NEXT NOISE NOT OCT$ ON OR PEN PLAY STRIG OPEN OPTION " +
              "BASE OUT PAINT PALETTE PCOPY PEEK PMAP POINT POKE POS PRINT PRINT] PSET PRESET " +
              "PUT RANDOMIZE READ REM RENUM RESET|0 RESTORE RESUME RETURN|0 RIGHT$ RMDIR RND RSET " +
              "RUN SAVE SCREEN SGN SHELL SIN SOUND SPACE$ SPC SQR STEP STICK STOP STR$ STRING$ SWAP " +
              "SYSTEM TAB TAN TIME$ TIMER TROFF TRON TO USR VAL VARPTR VARPTR$ VIEW WAIT WHILE " +
              "WEND WIDTH WINDOW WRITE XOR"
          },
          contains: [
            hljs.QUOTE_STRING_MODE,
            hljs.COMMENT("REM", "$", { relevance: 10 }),
            hljs.COMMENT("'", "$", { relevance: 0 }),
            {
              // Match line numbers
              className: "symbol",
              begin: "^[0-9]+ ",
              relevance: 10
            },
            {
              // Match typed numeric constants (1000, 12.34!, 1.2e5, 1.5#, 1.2D2)
              className: "number",
              begin: "\\b([0-9]+[0-9edED.]*[#!]?)",
              relevance: 0
            },
            {
              // Match hexadecimal numbers (&Hxxxx)
              className: "number",
              begin: "(&[hH][0-9a-fA-F]{1,4})"
            },
            {
              // Match octal numbers (&Oxxxxxx)
              className: "number",
              begin: "(&[oO][0-7]{1,6})"
            }
          ]
        };
      };

      /***/
    },
    /* 51 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            // Attribute
            {
              className: "attribute",
              begin: /</,
              end: />/
            },
            // Specific
            {
              begin: /::=/,
              starts: {
                end: /$/,
                contains: [
                  {
                    begin: /</,
                    end: />/
                  },
                  // Common
                  hljs.C_LINE_COMMENT_MODE,
                  hljs.C_BLOCK_COMMENT_MODE,
                  hljs.APOS_STRING_MODE,
                  hljs.QUOTE_STRING_MODE
                ]
              }
            }
          ]
        };
      };

      /***/
    },
    /* 52 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var LITERAL = {
          className: "literal",
          begin: "[\\+\\-]",
          relevance: 0
        };
        return {
          aliases: ["bf"],
          contains: [
            hljs.COMMENT(
              "[^\\[\\]\\.,\\+\\-<> \r\n]",
              "[\\[\\]\\.,\\+\\-<> \r\n]",
              {
                returnEnd: true,
                relevance: 0
              }
            ),
            {
              className: "title",
              begin: "[\\[\\]]",
              relevance: 0
            },
            {
              className: "string",
              begin: "[\\.,]",
              relevance: 0
            },
            {
              // this mode works as the only relevance counter
              begin: /\+\+|\-\-/,
              returnBegin: true,
              contains: [LITERAL]
            },
            LITERAL
          ]
        };
      };

      /***/
    },
    /* 53 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS =
          "div mod in and or not xor asserterror begin case do downto else end exit for if of repeat then to " +
          "until while with var";
        var LITERALS = "false true";
        var COMMENT_MODES = [
          hljs.C_LINE_COMMENT_MODE,
          hljs.COMMENT(/\{/, /\}/, {
            relevance: 0
          }),
          hljs.COMMENT(/\(\*/, /\*\)/, {
            relevance: 10
          })
        ];
        var STRING = {
          className: "string",
          begin: /'/,
          end: /'/,
          contains: [{ begin: /''/ }]
        };
        var CHAR_STRING = {
          className: "string",
          begin: /(#\d+)+/
        };
        var DATE = {
          className: "number",
          begin: "\\b\\d+(\\.\\d+)?(DT|D|T)",
          relevance: 0
        };
        var DBL_QUOTED_VARIABLE = {
          className: "string", // not a string technically but makes sense to be highlighted in the same style
          begin: '"',
          end: '"'
        };

        var PROCEDURE = {
          className: "function",
          beginKeywords: "procedure",
          end: /[:;]/,
          keywords: "procedure|10",
          contains: [
            hljs.TITLE_MODE,
            {
              className: "params",
              begin: /\(/,
              end: /\)/,
              keywords: KEYWORDS,
              contains: [STRING, CHAR_STRING]
            }
          ].concat(COMMENT_MODES)
        };

        var OBJECT = {
          className: "class",
          begin:
            "OBJECT (Table|Form|Report|Dataport|Codeunit|XMLport|MenuSuite|Page|Query) (\\d+) ([^\\r\\n]+)",
          returnBegin: true,
          contains: [hljs.TITLE_MODE, PROCEDURE]
        };

        return {
          case_insensitive: true,
          keywords: { keyword: KEYWORDS, literal: LITERALS },
          illegal: /\/\*/,
          contains: [
            STRING,
            CHAR_STRING,
            DATE,
            DBL_QUOTED_VARIABLE,
            hljs.NUMBER_MODE,
            OBJECT,
            PROCEDURE
          ]
        };
      };

      /***/
    },
    /* 54 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["capnp"],
          keywords: {
            keyword:
              "struct enum interface union group import using const annotation extends in of on as with from fixed",
            built_in:
              "Void Bool Int8 Int16 Int32 Int64 UInt8 UInt16 UInt32 UInt64 Float32 Float64 " +
              "Text Data AnyPointer AnyStruct Capability List",
            literal: "true false"
          },
          contains: [
            hljs.QUOTE_STRING_MODE,
            hljs.NUMBER_MODE,
            hljs.HASH_COMMENT_MODE,
            {
              className: "meta",
              begin: /@0x[\w\d]{16};/,
              illegal: /\n/
            },
            {
              className: "symbol",
              begin: /@\d+\b/
            },
            {
              className: "class",
              beginKeywords: "struct enum",
              end: /\{/,
              illegal: /\n/,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  starts: { endsWithParent: true, excludeEnd: true } // hack: eating everything after the first title
                })
              ]
            },
            {
              className: "class",
              beginKeywords: "interface",
              end: /\{/,
              illegal: /\n/,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  starts: { endsWithParent: true, excludeEnd: true } // hack: eating everything after the first title
                })
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 55 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        // 2.3. Identifiers and keywords
        var KEYWORDS =
          "assembly module package import alias class interface object given value " +
          "assign void function new of extends satisfies abstracts in out return " +
          "break continue throw assert dynamic if else switch case for while try " +
          "catch finally then let this outer super is exists nonempty";
        // 7.4.1 Declaration Modifiers
        var DECLARATION_MODIFIERS =
          "shared abstract formal default actual variable late native deprecated" +
          "final sealed annotation suppressWarnings small";
        // 7.4.2 Documentation
        var DOCUMENTATION = "doc by license see throws tagged";
        var SUBST = {
          className: "subst",
          excludeBegin: true,
          excludeEnd: true,
          begin: /``/,
          end: /``/,
          keywords: KEYWORDS,
          relevance: 10
        };
        var EXPRESSIONS = [
          {
            // verbatim string
            className: "string",
            begin: '"""',
            end: '"""',
            relevance: 10
          },
          {
            // string literal or template
            className: "string",
            begin: '"',
            end: '"',
            contains: [SUBST]
          },
          {
            // character literal
            className: "string",
            begin: "'",
            end: "'"
          },
          {
            // numeric literal
            className: "number",
            begin:
              "#[0-9a-fA-F_]+|\\$[01_]+|[0-9_]+(?:\\.[0-9_](?:[eE][+-]?\\d+)?)?[kMGTPmunpf]?",
            relevance: 0
          }
        ];
        SUBST.contains = EXPRESSIONS;

        return {
          keywords: {
            keyword: KEYWORDS + " " + DECLARATION_MODIFIERS,
            meta: DOCUMENTATION
          },
          illegal: "\\$[^01]|#[^0-9a-fA-F]",
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.COMMENT("/\\*", "\\*/", { contains: ["self"] }),
            {
              // compiler annotation
              className: "meta",
              begin: '@[a-z]\\w*(?:\\:"[^"]*")?'
            }
          ].concat(EXPRESSIONS)
        };
      };

      /***/
    },
    /* 56 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["clean", "icl", "dcl"],
          keywords: {
            keyword:
              "if let in with where case of class instance otherwise " +
              "implementation definition system module from import qualified as " +
              "special code inline foreign export ccall stdcall generic derive " +
              "infix infixl infixr",
            literal: "True False"
          },
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE,

            { begin: "->|<-[|:]?|::|#!?|>>=|\\{\\||\\|\\}|:==|=:|\\.\\.|<>|`" } // relevance booster
          ]
        };
      };

      /***/
    },
    /* 57 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var keywords = {
          "builtin-name":
            // Clojure keywords
            "def defonce cond apply if-not if-let if not not= = < > <= >= == + / * - rem " +
            "quot neg? pos? delay? symbol? keyword? true? false? integer? empty? coll? list? " +
            "set? ifn? fn? associative? sequential? sorted? counted? reversible? number? decimal? " +
            "class? distinct? isa? float? rational? reduced? ratio? odd? even? char? seq? vector? " +
            "string? map? nil? contains? zero? instance? not-every? not-any? libspec? -> ->> .. . " +
            "inc compare do dotimes mapcat take remove take-while drop letfn drop-last take-last " +
            "drop-while while intern condp case reduced cycle split-at split-with repeat replicate " +
            "iterate range merge zipmap declare line-seq sort comparator sort-by dorun doall nthnext " +
            "nthrest partition eval doseq await await-for let agent atom send send-off release-pending-sends " +
            "add-watch mapv filterv remove-watch agent-error restart-agent set-error-handler error-handler " +
            "set-error-mode! error-mode shutdown-agents quote var fn loop recur throw try monitor-enter " +
            "monitor-exit defmacro defn defn- macroexpand macroexpand-1 for dosync and or " +
            "when when-not when-let comp juxt partial sequence memoize constantly complement identity assert " +
            "peek pop doto proxy defstruct first rest cons defprotocol cast coll deftype defrecord last butlast " +
            "sigs reify second ffirst fnext nfirst nnext defmulti defmethod meta with-meta ns in-ns create-ns import " +
            "refer keys select-keys vals key val rseq name namespace promise into transient persistent! conj! " +
            "assoc! dissoc! pop! disj! use class type num float double short byte boolean bigint biginteger " +
            "bigdec print-method print-dup throw-if printf format load compile get-in update-in pr pr-on newline " +
            "flush read slurp read-line subvec with-open memfn time re-find re-groups rand-int rand mod locking " +
            "assert-valid-fdecl alias resolve ref deref refset swap! reset! set-validator! compare-and-set! alter-meta! " +
            "reset-meta! commute get-validator alter ref-set ref-history-count ref-min-history ref-max-history ensure sync io! " +
            "new next conj set! to-array future future-call into-array aset gen-class reduce map filter find empty " +
            "hash-map hash-set sorted-map sorted-map-by sorted-set sorted-set-by vec vector seq flatten reverse assoc dissoc list " +
            "disj get union difference intersection extend extend-type extend-protocol int nth delay count concat chunk chunk-buffer " +
            "chunk-append chunk-first chunk-rest max min dec unchecked-inc-int unchecked-inc unchecked-dec-inc unchecked-dec unchecked-negate " +
            "unchecked-add-int unchecked-add unchecked-subtract-int unchecked-subtract chunk-next chunk-cons chunked-seq? prn vary-meta " +
            "lazy-seq spread list* str find-keyword keyword symbol gensym force rationalize"
        };

        var SYMBOLSTART = "a-zA-Z_\\-!.?+*=<>&#'";
        var SYMBOL_RE = "[" + SYMBOLSTART + "][" + SYMBOLSTART + "0-9/;:]*";
        var SIMPLE_NUMBER_RE = "[-+]?\\d+(\\.\\d+)?";

        var SYMBOL = {
          begin: SYMBOL_RE,
          relevance: 0
        };
        var NUMBER = {
          className: "number",
          begin: SIMPLE_NUMBER_RE,
          relevance: 0
        };
        var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });
        var COMMENT = hljs.COMMENT(";", "$", {
          relevance: 0
        });
        var LITERAL = {
          className: "literal",
          begin: /\b(true|false|nil)\b/
        };
        var COLLECTION = {
          begin: "[\\[\\{]",
          end: "[\\]\\}]"
        };
        var HINT = {
          className: "comment",
          begin: "\\^" + SYMBOL_RE
        };
        var HINT_COL = hljs.COMMENT("\\^\\{", "\\}");
        var KEY = {
          className: "symbol",
          begin: "[:]{1,2}" + SYMBOL_RE
        };
        var LIST = {
          begin: "\\(",
          end: "\\)"
        };
        var BODY = {
          endsWithParent: true,
          relevance: 0
        };
        var NAME = {
          keywords: keywords,
          lexemes: SYMBOL_RE,
          className: "name",
          begin: SYMBOL_RE,
          starts: BODY
        };
        var DEFAULT_CONTAINS = [
          LIST,
          STRING,
          HINT,
          HINT_COL,
          COMMENT,
          KEY,
          COLLECTION,
          NUMBER,
          LITERAL,
          SYMBOL
        ];

        LIST.contains = [hljs.COMMENT("comment", ""), NAME, BODY];
        BODY.contains = DEFAULT_CONTAINS;
        COLLECTION.contains = DEFAULT_CONTAINS;
        HINT_COL.contains = [COLLECTION];

        return {
          aliases: ["clj"],
          illegal: /\S/,
          contains: [
            LIST,
            STRING,
            HINT,
            HINT_COL,
            COMMENT,
            KEY,
            COLLECTION,
            NUMBER,
            LITERAL
          ]
        };
      };

      /***/
    },
    /* 58 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            {
              className: "meta",
              begin: /^([\w.-]+|\s*#_)=>/,
              starts: {
                end: /$/,
                subLanguage: "clojure"
              }
            }
          ]
        };
      };

      /***/
    },
    /* 59 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["cmake.in"],
          case_insensitive: true,
          keywords: {
            keyword:
              "add_custom_command add_custom_target add_definitions add_dependencies " +
              "add_executable add_library add_subdirectory add_test aux_source_directory " +
              "break build_command cmake_minimum_required cmake_policy configure_file " +
              "create_test_sourcelist define_property else elseif enable_language enable_testing " +
              "endforeach endfunction endif endmacro endwhile execute_process export find_file " +
              "find_library find_package find_path find_program fltk_wrap_ui foreach function " +
              "get_cmake_property get_directory_property get_filename_component get_property " +
              "get_source_file_property get_target_property get_test_property if include " +
              "include_directories include_external_msproject include_regular_expression install " +
              "link_directories load_cache load_command macro mark_as_advanced message option " +
              "output_required_files project qt_wrap_cpp qt_wrap_ui remove_definitions return " +
              "separate_arguments set set_directory_properties set_property " +
              "set_source_files_properties set_target_properties set_tests_properties site_name " +
              "source_group string target_link_libraries try_compile try_run unset variable_watch " +
              "while build_name exec_program export_library_dependencies install_files " +
              "install_programs install_targets link_libraries make_directory remove subdir_depends " +
              "subdirs use_mangled_mesa utility_source variable_requires write_file " +
              "qt5_use_modules qt5_use_package qt5_wrap_cpp on off true false and or " +
              "equal less greater strless strgreater strequal matches"
          },
          contains: [
            {
              className: "variable",
              begin: "\\${",
              end: "}"
            },
            hljs.HASH_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 60 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            // JS keywords
            "in if for while finally new do return else break catch instanceof throw try this " +
            "switch continue typeof delete debugger super yield import export from as default await " +
            // Coffee keywords
            "then unless until loop of by when and or is isnt not",
          literal:
            // JS literals
            "true false null undefined " +
            // Coffee literals
            "yes no on off",
          built_in: "npm require console print module global window document"
        };
        var JS_IDENT_RE = "[A-Za-z$_][0-9A-Za-z$_]*";
        var SUBST = {
          className: "subst",
          begin: /#\{/,
          end: /}/,
          keywords: KEYWORDS
        };
        var EXPRESSIONS = [
          hljs.BINARY_NUMBER_MODE,
          hljs.inherit(hljs.C_NUMBER_MODE, {
            starts: { end: "(\\s*/)?", relevance: 0 }
          }), // a number tries to eat the following slash to prevent treating it as a regexp
          {
            className: "string",
            variants: [
              {
                begin: /'''/,
                end: /'''/,
                contains: [hljs.BACKSLASH_ESCAPE]
              },
              {
                begin: /'/,
                end: /'/,
                contains: [hljs.BACKSLASH_ESCAPE]
              },
              {
                begin: /"""/,
                end: /"""/,
                contains: [hljs.BACKSLASH_ESCAPE, SUBST]
              },
              {
                begin: /"/,
                end: /"/,
                contains: [hljs.BACKSLASH_ESCAPE, SUBST]
              }
            ]
          },
          {
            className: "regexp",
            variants: [
              {
                begin: "///",
                end: "///",
                contains: [SUBST, hljs.HASH_COMMENT_MODE]
              },
              {
                begin: "//[gim]*",
                relevance: 0
              },
              {
                // regex can't start with space to parse x / 2 / 3 as two divisions
                // regex can't start with *, and it supports an "illegal" in the main mode
                begin: /\/(?![ *])(\\\/|.)*?\/[gim]*(?=\W|$)/
              }
            ]
          },
          {
            begin: "@" + JS_IDENT_RE // relevance booster
          },
          {
            subLanguage: "javascript",
            excludeBegin: true,
            excludeEnd: true,
            variants: [
              {
                begin: "```",
                end: "```"
              },
              {
                begin: "`",
                end: "`"
              }
            ]
          }
        ];
        SUBST.contains = EXPRESSIONS;

        var TITLE = hljs.inherit(hljs.TITLE_MODE, { begin: JS_IDENT_RE });
        var PARAMS_RE = "(\\(.*\\))?\\s*\\B[-=]>";
        var PARAMS = {
          className: "params",
          begin: "\\([^\\(]",
          returnBegin: true,
          /* We need another contained nameless mode to not have every nested
	    pair of parens to be called "params" */
          contains: [
            {
              begin: /\(/,
              end: /\)/,
              keywords: KEYWORDS,
              contains: ["self"].concat(EXPRESSIONS)
            }
          ]
        };

        return {
          aliases: ["coffee", "cson", "iced"],
          keywords: KEYWORDS,
          illegal: /\/\*/,
          contains: EXPRESSIONS.concat([
            hljs.COMMENT("###", "###"),
            hljs.HASH_COMMENT_MODE,
            {
              className: "function",
              begin: "^\\s*" + JS_IDENT_RE + "\\s*=\\s*" + PARAMS_RE,
              end: "[-=]>",
              returnBegin: true,
              contains: [TITLE, PARAMS]
            },
            {
              // anonymous function start
              begin: /[:\(,=]\s*/,
              relevance: 0,
              contains: [
                {
                  className: "function",
                  begin: PARAMS_RE,
                  end: "[-=]>",
                  returnBegin: true,
                  contains: [PARAMS]
                }
              ]
            },
            {
              className: "class",
              beginKeywords: "class",
              end: "$",
              illegal: /[:="\[\]]/,
              contains: [
                {
                  beginKeywords: "extends",
                  endsWithParent: true,
                  illegal: /[:="\[\]]/,
                  contains: [TITLE]
                },
                TITLE
              ]
            },
            {
              begin: JS_IDENT_RE + ":",
              end: ":",
              returnBegin: true,
              returnEnd: true,
              relevance: 0
            }
          ])
        };
      };

      /***/
    },
    /* 61 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            keyword:
              "_ as at cofix else end exists exists2 fix for forall fun if IF in let " +
              "match mod Prop return Set then Type using where with " +
              "Abort About Add Admit Admitted All Arguments Assumptions Axiom Back BackTo " +
              "Backtrack Bind Blacklist Canonical Cd Check Class Classes Close Coercion " +
              "Coercions CoFixpoint CoInductive Collection Combined Compute Conjecture " +
              "Conjectures Constant constr Constraint Constructors Context Corollary " +
              "CreateHintDb Cut Declare Defined Definition Delimit Dependencies Dependent" +
              "Derive Drop eauto End Equality Eval Example Existential Existentials " +
              "Existing Export exporting Extern Extract Extraction Fact Field Fields File " +
              "Fixpoint Focus for From Function Functional Generalizable Global Goal Grab " +
              "Grammar Graph Guarded Heap Hint HintDb Hints Hypotheses Hypothesis ident " +
              "Identity If Immediate Implicit Import Include Inductive Infix Info Initial " +
              "Inline Inspect Instance Instances Intro Intros Inversion Inversion_clear " +
              "Language Left Lemma Let Libraries Library Load LoadPath Local Locate Ltac ML " +
              "Mode Module Modules Monomorphic Morphism Next NoInline Notation Obligation " +
              "Obligations Opaque Open Optimize Options Parameter Parameters Parametric " +
              "Path Paths pattern Polymorphic Preterm Print Printing Program Projections " +
              "Proof Proposition Pwd Qed Quit Rec Record Recursive Redirect Relation Remark " +
              "Remove Require Reserved Reset Resolve Restart Rewrite Right Ring Rings Save " +
              "Scheme Scope Scopes Script Search SearchAbout SearchHead SearchPattern " +
              "SearchRewrite Section Separate Set Setoid Show Solve Sorted Step Strategies " +
              "Strategy Structure SubClass Table Tables Tactic Term Test Theorem Time " +
              "Timeout Transparent Type Typeclasses Types Undelimit Undo Unfocus Unfocused " +
              "Unfold Universe Universes Unset Unshelve using Variable Variables Variant " +
              "Verbose Visibility where with",
            built_in:
              "abstract absurd admit after apply as assert assumption at auto autorewrite " +
              "autounfold before bottom btauto by case case_eq cbn cbv change " +
              "classical_left classical_right clear clearbody cofix compare compute " +
              "congruence constr_eq constructor contradict contradiction cut cutrewrite " +
              "cycle decide decompose dependent destruct destruction dintuition " +
              "discriminate discrR do double dtauto eapply eassumption eauto ecase " +
              "econstructor edestruct ediscriminate eelim eexact eexists einduction " +
              "einjection eleft elim elimtype enough equality erewrite eright " +
              "esimplify_eq esplit evar exact exactly_once exfalso exists f_equal fail " +
              "field field_simplify field_simplify_eq first firstorder fix fold fourier " +
              "functional generalize generalizing gfail give_up has_evar hnf idtac in " +
              "induction injection instantiate intro intro_pattern intros intuition " +
              "inversion inversion_clear is_evar is_var lapply lazy left lia lra move " +
              "native_compute nia nsatz omega once pattern pose progress proof psatz quote " +
              "record red refine reflexivity remember rename repeat replace revert " +
              "revgoals rewrite rewrite_strat right ring ring_simplify rtauto set " +
              "setoid_reflexivity setoid_replace setoid_rewrite setoid_symmetry " +
              "setoid_transitivity shelve shelve_unifiable simpl simple simplify_eq solve " +
              "specialize split split_Rabs split_Rmult stepl stepr subst sum swap " +
              "symmetry tactic tauto time timeout top transitivity trivial try tryif " +
              "unfold unify until using vm_compute with"
          },
          contains: [
            hljs.QUOTE_STRING_MODE,
            hljs.COMMENT("\\(\\*", "\\*\\)"),
            hljs.C_NUMBER_MODE,
            {
              className: "type",
              excludeBegin: true,
              begin: "\\|\\s*",
              end: "\\w+"
            },
            { begin: /[-=]>/ } // relevance booster
          ]
        };
      };

      /***/
    },
    /* 62 */
    /***/ function(module, exports) {
      module.exports = function cos(hljs) {
        var STRINGS = {
          className: "string",
          variants: [
            {
              begin: '"',
              end: '"',
              contains: [
                {
                  // escaped
                  begin: '""',
                  relevance: 0
                }
              ]
            }
          ]
        };

        var NUMBERS = {
          className: "number",
          begin: "\\b(\\d+(\\.\\d*)?|\\.\\d+)",
          relevance: 0
        };

        var COS_KEYWORDS =
          "property parameter class classmethod clientmethod extends as break " +
          "catch close continue do d|0 else elseif for goto halt hang h|0 if job " +
          "j|0 kill k|0 lock l|0 merge new open quit q|0 read r|0 return set s|0 " +
          "tcommit throw trollback try tstart use view while write w|0 xecute x|0 " +
          "zkill znspace zn ztrap zwrite zw zzdump zzwrite print zbreak zinsert " +
          "zload zprint zremove zsave zzprint mv mvcall mvcrt mvdim mvprint zquit " +
          "zsync ascii";

        // registered function - no need in them due to all functions are highlighted,
        // but I'll just leave this here.

        //"$bit", "$bitcount",
        //"$bitfind", "$bitlogic", "$case", "$char", "$classmethod", "$classname",
        //"$compile", "$data", "$decimal", "$double", "$extract", "$factor",
        //"$find", "$fnumber", "$get", "$increment", "$inumber", "$isobject",
        //"$isvaliddouble", "$isvalidnum", "$justify", "$length", "$list",
        //"$listbuild", "$listdata", "$listfind", "$listfromstring", "$listget",
        //"$listlength", "$listnext", "$listsame", "$listtostring", "$listvalid",
        //"$locate", "$match", "$method", "$name", "$nconvert", "$next",
        //"$normalize", "$now", "$number", "$order", "$parameter", "$piece",
        //"$prefetchoff", "$prefetchon", "$property", "$qlength", "$qsubscript",
        //"$query", "$random", "$replace", "$reverse", "$sconvert", "$select",
        //"$sortbegin", "$sortend", "$stack", "$text", "$translate", "$view",
        //"$wascii", "$wchar", "$wextract", "$wfind", "$wiswide", "$wlength",
        //"$wreverse", "$xecute", "$zabs", "$zarccos", "$zarcsin", "$zarctan",
        //"$zcos", "$zcot", "$zcsc", "$zdate", "$zdateh", "$zdatetime",
        //"$zdatetimeh", "$zexp", "$zhex", "$zln", "$zlog", "$zpower", "$zsec",
        //"$zsin", "$zsqr", "$ztan", "$ztime", "$ztimeh", "$zboolean",
        //"$zconvert", "$zcrc", "$zcyc", "$zdascii", "$zdchar", "$zf",
        //"$ziswide", "$zlascii", "$zlchar", "$zname", "$zposition", "$zqascii",
        //"$zqchar", "$zsearch", "$zseek", "$zstrip", "$zwascii", "$zwchar",
        //"$zwidth", "$zwpack", "$zwbpack", "$zwunpack", "$zwbunpack", "$zzenkaku",
        //"$change", "$mv", "$mvat", "$mvfmt", "$mvfmts", "$mviconv",
        //"$mviconvs", "$mvinmat", "$mvlover", "$mvoconv", "$mvoconvs", "$mvraise",
        //"$mvtrans", "$mvv", "$mvname", "$zbitand", "$zbitcount", "$zbitfind",
        //"$zbitget", "$zbitlen", "$zbitnot", "$zbitor", "$zbitset", "$zbitstr",
        //"$zbitxor", "$zincrement", "$znext", "$zorder", "$zprevious", "$zsort",
        //"device", "$ecode", "$estack", "$etrap", "$halt", "$horolog",
        //"$io", "$job", "$key", "$namespace", "$principal", "$quit", "$roles",
        //"$storage", "$system", "$test", "$this", "$tlevel", "$username",
        //"$x", "$y", "$za", "$zb", "$zchild", "$zeof", "$zeos", "$zerror",
        //"$zhorolog", "$zio", "$zjob", "$zmode", "$znspace", "$zparent", "$zpi",
        //"$zpos", "$zreference", "$zstorage", "$ztimestamp", "$ztimezone",
        //"$ztrap", "$zversion"

        return {
          case_insensitive: true,
          aliases: ["cos", "cls"],
          keywords: COS_KEYWORDS,
          contains: [
            NUMBERS,
            STRINGS,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: "comment",
              begin: /;/,
              end: "$",
              relevance: 0
            },
            {
              // Functions and user-defined functions: write $ztime(60*60*3), $$myFunc(10), $$^Val(1)
              className: "built_in",
              begin: /(?:\$\$?|\.\.)\^?[a-zA-Z]+/
            },
            {
              // Macro command: quit $$$OK
              className: "built_in",
              begin: /\$\$\$[a-zA-Z]+/
            },
            {
              // Special (global) variables: write %request.Content; Built-in classes: %Library.Integer
              className: "built_in",
              begin: /%[a-z]+(?:\.[a-z]+)*/
            },
            {
              // Global variable: set ^globalName = 12 write ^globalName
              className: "symbol",
              begin: /\^%?[a-zA-Z][\w]*/
            },
            {
              // Some control constructions: do ##class(Package.ClassName).Method(), ##super()
              className: "keyword",
              begin: /##class|##super|#define|#dim/
            },

            // sub-languages: are not fully supported by hljs by 11/15/2015
            // left for the future implementation.
            {
              begin: /&sql\(/,
              end: /\)/,
              excludeBegin: true,
              excludeEnd: true,
              subLanguage: "sql"
            },
            {
              begin: /&(js|jscript|javascript)</,
              end: />/,
              excludeBegin: true,
              excludeEnd: true,
              subLanguage: "javascript"
            },
            {
              // this brakes first and last tag, but this is the only way to embed a valid html
              begin: /&html<\s*</,
              end: />\s*>/,
              subLanguage: "xml"
            }
          ]
        };
      };

      /***/
    },
    /* 63 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var RESOURCES = "primitive rsc_template";

        var COMMANDS =
          "group clone ms master location colocation order fencing_topology " +
          "rsc_ticket acl_target acl_group user role " +
          "tag xml";

        var PROPERTY_SETS = "property rsc_defaults op_defaults";

        var KEYWORDS = "params meta operations op rule attributes utilization";

        var OPERATORS =
          "read write deny defined not_defined in_range date spec in " +
          "ref reference attribute type xpath version and or lt gt tag " +
          "lte gte eq ne \\";

        var TYPES = "number string";

        var LITERALS =
          "Master Started Slave Stopped start promote demote stop monitor true false";

        return {
          aliases: ["crm", "pcmk"],
          case_insensitive: true,
          keywords: {
            keyword: KEYWORDS + " " + OPERATORS + " " + TYPES,
            literal: LITERALS
          },
          contains: [
            hljs.HASH_COMMENT_MODE,
            {
              beginKeywords: "node",
              starts: {
                end: "\\s*([\\w_-]+:)?",
                starts: {
                  className: "title",
                  end: "\\s*[\\$\\w_][\\w_-]*"
                }
              }
            },
            {
              beginKeywords: RESOURCES,
              starts: {
                className: "title",
                end: "\\s*[\\$\\w_][\\w_-]*",
                starts: {
                  end: "\\s*@?[\\w_][\\w_\\.:-]*"
                }
              }
            },
            {
              begin: "\\b(" + COMMANDS.split(" ").join("|") + ")\\s+",
              keywords: COMMANDS,
              starts: {
                className: "title",
                end: "[\\$\\w_][\\w_-]*"
              }
            },
            {
              beginKeywords: PROPERTY_SETS,
              starts: {
                className: "title",
                end: "\\s*([\\w_-]+:)?"
              }
            },
            hljs.QUOTE_STRING_MODE,
            {
              className: "meta",
              begin: "(ocf|systemd|service|lsb):[\\w_:-]+",
              relevance: 0
            },
            {
              className: "number",
              begin: "\\b\\d+(\\.\\d+)?(ms|s|h|m)?",
              relevance: 0
            },
            {
              className: "literal",
              begin: "[-]?(infinity|inf)",
              relevance: 0
            },
            {
              className: "attr",
              begin: /([A-Za-z\$_\#][\w_-]+)=/,
              relevance: 0
            },
            {
              className: "tag",
              begin: "</?",
              end: "/?>",
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 64 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var NUM_SUFFIX = "(_[uif](8|16|32|64))?";
        var CRYSTAL_IDENT_RE = "[a-zA-Z_]\\w*[!?=]?";
        var RE_STARTER =
          "!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|" +
          ">>|>|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~";
        var CRYSTAL_METHOD_RE =
          "[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\][=?]?";
        var CRYSTAL_KEYWORDS = {
          keyword:
            "abstract alias as as? asm begin break case class def do else elsif end ensure enum extend for fun if " +
            "include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? " +
            "return require select self sizeof struct super then type typeof union uninitialized unless until when while with yield " +
            "__DIR__ __END_LINE__ __FILE__ __LINE__",
          literal: "false nil true"
        };
        var SUBST = {
          className: "subst",
          begin: "#{",
          end: "}",
          keywords: CRYSTAL_KEYWORDS
        };
        var EXPANSION = {
          className: "template-variable",
          variants: [
            { begin: "\\{\\{", end: "\\}\\}" },
            { begin: "\\{%", end: "%\\}" }
          ],
          keywords: CRYSTAL_KEYWORDS
        };

        function recursiveParen(begin, end) {
          var contains = [{ begin: begin, end: end }];
          contains[0].contains = contains;
          return contains;
        }
        var STRING = {
          className: "string",
          contains: [hljs.BACKSLASH_ESCAPE, SUBST],
          variants: [
            { begin: /'/, end: /'/ },
            { begin: /"/, end: /"/ },
            { begin: /`/, end: /`/ },
            {
              begin: "%w?\\(",
              end: "\\)",
              contains: recursiveParen("\\(", "\\)")
            },
            {
              begin: "%w?\\[",
              end: "\\]",
              contains: recursiveParen("\\[", "\\]")
            },
            { begin: "%w?{", end: "}", contains: recursiveParen("{", "}") },
            { begin: "%w?<", end: ">", contains: recursiveParen("<", ">") },
            { begin: "%w?/", end: "/" },
            { begin: "%w?%", end: "%" },
            { begin: "%w?-", end: "-" },
            { begin: "%w?\\|", end: "\\|" },
            { begin: /<<-\w+$/, end: /^\s*\w+$/ }
          ],
          relevance: 0
        };
        var Q_STRING = {
          className: "string",
          variants: [
            {
              begin: "%q\\(",
              end: "\\)",
              contains: recursiveParen("\\(", "\\)")
            },
            {
              begin: "%q\\[",
              end: "\\]",
              contains: recursiveParen("\\[", "\\]")
            },
            { begin: "%q{", end: "}", contains: recursiveParen("{", "}") },
            { begin: "%q<", end: ">", contains: recursiveParen("<", ">") },
            { begin: "%q/", end: "/" },
            { begin: "%q%", end: "%" },
            { begin: "%q-", end: "-" },
            { begin: "%q\\|", end: "\\|" },
            { begin: /<<-'\w+'$/, end: /^\s*\w+$/ }
          ],
          relevance: 0
        };
        var REGEXP = {
          begin: "(" + RE_STARTER + ")\\s*",
          contains: [
            {
              className: "regexp",
              contains: [hljs.BACKSLASH_ESCAPE, SUBST],
              variants: [
                { begin: "//[a-z]*", relevance: 0 },
                { begin: "/", end: "/[a-z]*" },
                {
                  begin: "%r\\(",
                  end: "\\)",
                  contains: recursiveParen("\\(", "\\)")
                },
                {
                  begin: "%r\\[",
                  end: "\\]",
                  contains: recursiveParen("\\[", "\\]")
                },
                { begin: "%r{", end: "}", contains: recursiveParen("{", "}") },
                { begin: "%r<", end: ">", contains: recursiveParen("<", ">") },
                { begin: "%r/", end: "/" },
                { begin: "%r%", end: "%" },
                { begin: "%r-", end: "-" },
                { begin: "%r\\|", end: "\\|" }
              ]
            }
          ],
          relevance: 0
        };
        var REGEXP2 = {
          className: "regexp",
          contains: [hljs.BACKSLASH_ESCAPE, SUBST],
          variants: [
            {
              begin: "%r\\(",
              end: "\\)",
              contains: recursiveParen("\\(", "\\)")
            },
            {
              begin: "%r\\[",
              end: "\\]",
              contains: recursiveParen("\\[", "\\]")
            },
            { begin: "%r{", end: "}", contains: recursiveParen("{", "}") },
            { begin: "%r<", end: ">", contains: recursiveParen("<", ">") },
            { begin: "%r/", end: "/" },
            { begin: "%r%", end: "%" },
            { begin: "%r-", end: "-" },
            { begin: "%r\\|", end: "\\|" }
          ],
          relevance: 0
        };
        var ATTRIBUTE = {
          className: "meta",
          begin: "@\\[",
          end: "\\]",
          contains: [
            hljs.inherit(hljs.QUOTE_STRING_MODE, { className: "meta-string" })
          ]
        };
        var CRYSTAL_DEFAULT_CONTAINS = [
          EXPANSION,
          STRING,
          Q_STRING,
          REGEXP,
          REGEXP2,
          ATTRIBUTE,
          hljs.HASH_COMMENT_MODE,
          {
            className: "class",
            beginKeywords: "class module struct",
            end: "$|;",
            illegal: /=/,
            contains: [
              hljs.HASH_COMMENT_MODE,
              hljs.inherit(hljs.TITLE_MODE, {
                begin: "[A-Za-z_]\\w*(::\\w+)*(\\?|\\!)?"
              }),
              { begin: "<" } // relevance booster for inheritance
            ]
          },
          {
            className: "class",
            beginKeywords: "lib enum union",
            end: "$|;",
            illegal: /=/,
            contains: [
              hljs.HASH_COMMENT_MODE,
              hljs.inherit(hljs.TITLE_MODE, {
                begin: "[A-Za-z_]\\w*(::\\w+)*(\\?|\\!)?"
              })
            ],
            relevance: 10
          },
          {
            className: "function",
            beginKeywords: "def",
            end: /\B\b/,
            contains: [
              hljs.inherit(hljs.TITLE_MODE, {
                begin: CRYSTAL_METHOD_RE,
                endsParent: true
              })
            ]
          },
          {
            className: "function",
            beginKeywords: "fun macro",
            end: /\B\b/,
            contains: [
              hljs.inherit(hljs.TITLE_MODE, {
                begin: CRYSTAL_METHOD_RE,
                endsParent: true
              })
            ],
            relevance: 5
          },
          {
            className: "symbol",
            begin: hljs.UNDERSCORE_IDENT_RE + "(\\!|\\?)?:",
            relevance: 0
          },
          {
            className: "symbol",
            begin: ":",
            contains: [STRING, { begin: CRYSTAL_METHOD_RE }],
            relevance: 0
          },
          {
            className: "number",
            variants: [
              { begin: "\\b0b([01_]*[01])" + NUM_SUFFIX },
              { begin: "\\b0o([0-7_]*[0-7])" + NUM_SUFFIX },
              { begin: "\\b0x([A-Fa-f0-9_]*[A-Fa-f0-9])" + NUM_SUFFIX },
              {
                begin:
                  "\\b(([0-9][0-9_]*[0-9]|[0-9])(\\.[0-9_]*[0-9])?([eE][+-]?[0-9_]*[0-9])?)" +
                  NUM_SUFFIX
              }
            ],
            relevance: 0
          }
        ];
        SUBST.contains = CRYSTAL_DEFAULT_CONTAINS;
        EXPANSION.contains = CRYSTAL_DEFAULT_CONTAINS.slice(1); // without EXPANSION

        return {
          aliases: ["cr"],
          lexemes: CRYSTAL_IDENT_RE,
          keywords: CRYSTAL_KEYWORDS,
          contains: CRYSTAL_DEFAULT_CONTAINS
        };
      };

      /***/
    },
    /* 65 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            // Normal keywords.
            "abstract as base bool break byte case catch char checked const continue decimal " +
            "default delegate do double enum event explicit extern finally fixed float " +
            "for foreach goto if implicit in int interface internal is lock long nameof " +
            "object operator out override params private protected public readonly ref sbyte " +
            "sealed short sizeof stackalloc static string struct switch this try typeof " +
            "uint ulong unchecked unsafe ushort using virtual void volatile while " +
            // Contextual keywords.
            "add alias ascending async await by descending dynamic equals from get global group into join " +
            "let on orderby partial remove select set value var where yield",
          literal: "null false true"
        };

        var VERBATIM_STRING = {
          className: "string",
          begin: '@"',
          end: '"',
          contains: [{ begin: '""' }]
        };
        var VERBATIM_STRING_NO_LF = hljs.inherit(VERBATIM_STRING, {
          illegal: /\n/
        });
        var SUBST = {
          className: "subst",
          begin: "{",
          end: "}",
          keywords: KEYWORDS
        };
        var SUBST_NO_LF = hljs.inherit(SUBST, { illegal: /\n/ });
        var INTERPOLATED_STRING = {
          className: "string",
          begin: /\$"/,
          end: '"',
          illegal: /\n/,
          contains: [
            { begin: "{{" },
            { begin: "}}" },
            hljs.BACKSLASH_ESCAPE,
            SUBST_NO_LF
          ]
        };
        var INTERPOLATED_VERBATIM_STRING = {
          className: "string",
          begin: /\$@"/,
          end: '"',
          contains: [{ begin: "{{" }, { begin: "}}" }, { begin: '""' }, SUBST]
        };
        var INTERPOLATED_VERBATIM_STRING_NO_LF = hljs.inherit(
          INTERPOLATED_VERBATIM_STRING,
          {
            illegal: /\n/,
            contains: [
              { begin: "{{" },
              { begin: "}}" },
              { begin: '""' },
              SUBST_NO_LF
            ]
          }
        );
        SUBST.contains = [
          INTERPOLATED_VERBATIM_STRING,
          INTERPOLATED_STRING,
          VERBATIM_STRING,
          hljs.APOS_STRING_MODE,
          hljs.QUOTE_STRING_MODE,
          hljs.C_NUMBER_MODE,
          hljs.C_BLOCK_COMMENT_MODE
        ];
        SUBST_NO_LF.contains = [
          INTERPOLATED_VERBATIM_STRING_NO_LF,
          INTERPOLATED_STRING,
          VERBATIM_STRING_NO_LF,
          hljs.APOS_STRING_MODE,
          hljs.QUOTE_STRING_MODE,
          hljs.C_NUMBER_MODE,
          hljs.inherit(hljs.C_BLOCK_COMMENT_MODE, { illegal: /\n/ })
        ];
        var STRING = {
          variants: [
            INTERPOLATED_VERBATIM_STRING,
            INTERPOLATED_STRING,
            VERBATIM_STRING,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE
          ]
        };

        var TYPE_IDENT_RE =
          hljs.IDENT_RE +
          "(<" +
          hljs.IDENT_RE +
          "(\\s*,\\s*" +
          hljs.IDENT_RE +
          ")*>)?(\\[\\])?";

        return {
          aliases: ["csharp"],
          keywords: KEYWORDS,
          illegal: /::/,
          contains: [
            hljs.COMMENT("///", "$", {
              returnBegin: true,
              contains: [
                {
                  className: "doctag",
                  variants: [
                    {
                      begin: "///",
                      relevance: 0
                    },
                    {
                      begin: "<!--|-->"
                    },
                    {
                      begin: "</?",
                      end: ">"
                    }
                  ]
                }
              ]
            }),
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: "meta",
              begin: "#",
              end: "$",
              keywords: {
                "meta-keyword":
                  "if else elif endif define undef warning error line region endregion pragma checksum"
              }
            },
            STRING,
            hljs.C_NUMBER_MODE,
            {
              beginKeywords: "class interface",
              end: /[{;=]/,
              illegal: /[^\s:]/,
              contains: [
                hljs.TITLE_MODE,
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },
            {
              beginKeywords: "namespace",
              end: /[{;=]/,
              illegal: /[^\s:]/,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, { begin: "[a-zA-Z](\\.?\\w)*" }),
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },
            {
              // [Attributes("")]
              className: "meta",
              begin: "^\\s*\\[",
              excludeBegin: true,
              end: "\\]",
              excludeEnd: true,
              contains: [{ className: "meta-string", begin: /"/, end: /"/ }]
            },
            {
              // Expression keywords prevent 'keyword Name(...)' from being
              // recognized as a function definition
              beginKeywords: "new return throw await else",
              relevance: 0
            },
            {
              className: "function",
              begin: "(" + TYPE_IDENT_RE + "\\s+)+" + hljs.IDENT_RE + "\\s*\\(",
              returnBegin: true,
              end: /[{;=]/,
              excludeEnd: true,
              keywords: KEYWORDS,
              contains: [
                {
                  begin: hljs.IDENT_RE + "\\s*\\(",
                  returnBegin: true,
                  contains: [hljs.TITLE_MODE],
                  relevance: 0
                },
                {
                  className: "params",
                  begin: /\(/,
                  end: /\)/,
                  excludeBegin: true,
                  excludeEnd: true,
                  keywords: KEYWORDS,
                  relevance: 0,
                  contains: [
                    STRING,
                    hljs.C_NUMBER_MODE,
                    hljs.C_BLOCK_COMMENT_MODE
                  ]
                },
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 66 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          case_insensitive: false,
          lexemes: "[a-zA-Z][a-zA-Z0-9_-]*",
          keywords: {
            keyword:
              "base-uri child-src connect-src default-src font-src form-action" +
              " frame-ancestors frame-src img-src media-src object-src plugin-types" +
              " report-uri sandbox script-src style-src"
          },
          contains: [
            {
              className: "string",
              begin: "'",
              end: "'"
            },
            {
              className: "attribute",
              begin: "^Content",
              end: ":",
              excludeEnd: true
            }
          ]
        };
      };

      /***/
    },
    /* 67 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENT_RE = "[a-zA-Z-][a-zA-Z0-9_-]*";
        var RULE = {
          begin: /[A-Z\_\.\-]+\s*:/,
          returnBegin: true,
          end: ";",
          endsWithParent: true,
          contains: [
            {
              className: "attribute",
              begin: /\S/,
              end: ":",
              excludeEnd: true,
              starts: {
                endsWithParent: true,
                excludeEnd: true,
                contains: [
                  {
                    begin: /[\w-]+\(/,
                    returnBegin: true,
                    contains: [
                      {
                        className: "built_in",
                        begin: /[\w-]+/
                      },
                      {
                        begin: /\(/,
                        end: /\)/,
                        contains: [
                          hljs.APOS_STRING_MODE,
                          hljs.QUOTE_STRING_MODE
                        ]
                      }
                    ]
                  },
                  hljs.CSS_NUMBER_MODE,
                  hljs.QUOTE_STRING_MODE,
                  hljs.APOS_STRING_MODE,
                  hljs.C_BLOCK_COMMENT_MODE,
                  {
                    className: "number",
                    begin: "#[0-9A-Fa-f]+"
                  },
                  {
                    className: "meta",
                    begin: "!important"
                  }
                ]
              }
            }
          ]
        };

        return {
          case_insensitive: true,
          illegal: /[=\/|'\$]/,
          contains: [
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: "selector-id",
              begin: /#[A-Za-z0-9_-]+/
            },
            {
              className: "selector-class",
              begin: /\.[A-Za-z0-9_-]+/
            },
            {
              className: "selector-attr",
              begin: /\[/,
              end: /\]/,
              illegal: "$"
            },
            {
              className: "selector-pseudo",
              begin: /:(:)?[a-zA-Z0-9\_\-\+\(\)"'.]+/
            },
            {
              begin: "@(font-face|page)",
              lexemes: "[a-z-]+",
              keywords: "font-face page"
            },
            {
              begin: "@",
              end: "[{;]", // at_rule eating first "{" is a good thing
              // because it doesn’t let it to be parsed as
              // a rule set but instead drops parser into
              // the default mode which is how it should be.
              illegal: /:/, // break on Less variables @var: ...
              contains: [
                {
                  className: "keyword",
                  begin: /\w+/
                },
                {
                  begin: /\s/,
                  endsWithParent: true,
                  excludeEnd: true,
                  relevance: 0,
                  contains: [
                    hljs.APOS_STRING_MODE,
                    hljs.QUOTE_STRING_MODE,
                    hljs.CSS_NUMBER_MODE
                  ]
                }
              ]
            },
            {
              className: "selector-tag",
              begin: IDENT_RE,
              relevance: 0
            },
            {
              begin: "{",
              end: "}",
              illegal: /\S/,
              contains: [hljs.C_BLOCK_COMMENT_MODE, RULE]
            }
          ]
        };
      };

      /***/
    },
    /* 68 */
    /***/ function(module, exports) {
      module.exports /**
       * Known issues:
       *
       * - invalid hex string literals will be recognized as a double quoted strings
       *   but 'x' at the beginning of string will not be matched
       *
       * - delimited string literals are not checked for matching end delimiter
       *   (not possible to do with js regexp)
       *
       * - content of token string is colored as a string (i.e. no keyword coloring inside a token string)
       *   also, content of token string is not validated to contain only valid D tokens
       *
       * - special token sequence rule is not strictly following D grammar (anything following #line
       *   up to the end of line is matched as special token sequence)
       */ = function(hljs) {
        /**
         * Language keywords
         *
         * @type {Object}
         */
        var D_KEYWORDS = {
          keyword:
            "abstract alias align asm assert auto body break byte case cast catch class " +
            "const continue debug default delete deprecated do else enum export extern final " +
            "finally for foreach foreach_reverse|10 goto if immutable import in inout int " +
            "interface invariant is lazy macro mixin module new nothrow out override package " +
            "pragma private protected public pure ref return scope shared static struct " +
            "super switch synchronized template this throw try typedef typeid typeof union " +
            "unittest version void volatile while with __FILE__ __LINE__ __gshared|10 " +
            "__thread __traits __DATE__ __EOF__ __TIME__ __TIMESTAMP__ __VENDOR__ __VERSION__",
          built_in:
            "bool cdouble cent cfloat char creal dchar delegate double dstring float function " +
            "idouble ifloat ireal long real short string ubyte ucent uint ulong ushort wchar " +
            "wstring",
          literal: "false null true"
        };

        /**
         * Number literal regexps
         *
         * @type {String}
         */
        var decimal_integer_re = "(0|[1-9][\\d_]*)",
          decimal_integer_nosus_re = "(0|[1-9][\\d_]*|\\d[\\d_]*|[\\d_]+?\\d)",
          binary_integer_re = "0[bB][01_]+",
          hexadecimal_digits_re =
            "([\\da-fA-F][\\da-fA-F_]*|_[\\da-fA-F][\\da-fA-F_]*)",
          hexadecimal_integer_re = "0[xX]" + hexadecimal_digits_re,
          decimal_exponent_re = "([eE][+-]?" + decimal_integer_nosus_re + ")",
          decimal_float_re =
            "(" +
            decimal_integer_nosus_re +
            "(\\.\\d*|" +
            decimal_exponent_re +
            ")|" +
            "\\d+\\." +
            decimal_integer_nosus_re +
            decimal_integer_nosus_re +
            "|" +
            "\\." +
            decimal_integer_re +
            decimal_exponent_re +
            "?" +
            ")",
          hexadecimal_float_re =
            "(0[xX](" +
            hexadecimal_digits_re +
            "\\." +
            hexadecimal_digits_re +
            "|" +
            "\\.?" +
            hexadecimal_digits_re +
            ")[pP][+-]?" +
            decimal_integer_nosus_re +
            ")",
          integer_re =
            "(" +
            decimal_integer_re +
            "|" +
            binary_integer_re +
            "|" +
            hexadecimal_integer_re +
            ")",
          float_re = "(" + hexadecimal_float_re + "|" + decimal_float_re + ")";

        /**
         * Escape sequence supported in D string and character literals
         *
         * @type {String}
         */
        var escape_sequence_re =
          "\\\\(" +
          "['\"\\?\\\\abfnrtv]|" + // common escapes
          "u[\\dA-Fa-f]{4}|" + // four hex digit unicode codepoint
          "[0-7]{1,3}|" + // one to three octal digit ascii char code
          "x[\\dA-Fa-f]{2}|" + // two hex digit ascii char code
          "U[\\dA-Fa-f]{8}" + // eight hex digit unicode codepoint
          ")|" +
          "&[a-zA-Z\\d]{2,};"; // named character entity

        /**
         * D integer number literals
         *
         * @type {Object}
         */
        var D_INTEGER_MODE = {
          className: "number",
          begin: "\\b" + integer_re + "(L|u|U|Lu|LU|uL|UL)?",
          relevance: 0
        };

        /**
         * [D_FLOAT_MODE description]
         * @type {Object}
         */
        var D_FLOAT_MODE = {
          className: "number",
          begin:
            "\\b(" +
            float_re +
            "([fF]|L|i|[fF]i|Li)?|" +
            integer_re +
            "(i|[fF]i|Li)" +
            ")",
          relevance: 0
        };

        /**
         * D character literal
         *
         * @type {Object}
         */
        var D_CHARACTER_MODE = {
          className: "string",
          begin: "'(" + escape_sequence_re + "|.)",
          end: "'",
          illegal: "."
        };

        /**
         * D string escape sequence
         *
         * @type {Object}
         */
        var D_ESCAPE_SEQUENCE = {
          begin: escape_sequence_re,
          relevance: 0
        };

        /**
         * D double quoted string literal
         *
         * @type {Object}
         */
        var D_STRING_MODE = {
          className: "string",
          begin: '"',
          contains: [D_ESCAPE_SEQUENCE],
          end: '"[cwd]?'
        };

        /**
         * D wysiwyg and delimited string literals
         *
         * @type {Object}
         */
        var D_WYSIWYG_DELIMITED_STRING_MODE = {
          className: "string",
          begin: '[rq]"',
          end: '"[cwd]?',
          relevance: 5
        };

        /**
         * D alternate wysiwyg string literal
         *
         * @type {Object}
         */
        var D_ALTERNATE_WYSIWYG_STRING_MODE = {
          className: "string",
          begin: "`",
          end: "`[cwd]?"
        };

        /**
         * D hexadecimal string literal
         *
         * @type {Object}
         */
        var D_HEX_STRING_MODE = {
          className: "string",
          begin: 'x"[\\da-fA-F\\s\\n\\r]*"[cwd]?',
          relevance: 10
        };

        /**
         * D delimited string literal
         *
         * @type {Object}
         */
        var D_TOKEN_STRING_MODE = {
          className: "string",
          begin: 'q"\\{',
          end: '\\}"'
        };

        /**
         * Hashbang support
         *
         * @type {Object}
         */
        var D_HASHBANG_MODE = {
          className: "meta",
          begin: "^#!",
          end: "$",
          relevance: 5
        };

        /**
         * D special token sequence
         *
         * @type {Object}
         */
        var D_SPECIAL_TOKEN_SEQUENCE_MODE = {
          className: "meta",
          begin: "#(line)",
          end: "$",
          relevance: 5
        };

        /**
         * D attributes
         *
         * @type {Object}
         */
        var D_ATTRIBUTE_MODE = {
          className: "keyword",
          begin: "@[a-zA-Z_][a-zA-Z_\\d]*"
        };

        /**
         * D nesting comment
         *
         * @type {Object}
         */
        var D_NESTING_COMMENT_MODE = hljs.COMMENT("\\/\\+", "\\+\\/", {
          contains: ["self"],
          relevance: 10
        });

        return {
          lexemes: hljs.UNDERSCORE_IDENT_RE,
          keywords: D_KEYWORDS,
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            D_NESTING_COMMENT_MODE,
            D_HEX_STRING_MODE,
            D_STRING_MODE,
            D_WYSIWYG_DELIMITED_STRING_MODE,
            D_ALTERNATE_WYSIWYG_STRING_MODE,
            D_TOKEN_STRING_MODE,
            D_FLOAT_MODE,
            D_INTEGER_MODE,
            D_CHARACTER_MODE,
            D_HASHBANG_MODE,
            D_SPECIAL_TOKEN_SEQUENCE_MODE,
            D_ATTRIBUTE_MODE
          ]
        };
      };

      /***/
    },
    /* 69 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["md", "mkdown", "mkd"],
          contains: [
            // highlight headers
            {
              className: "section",
              variants: [
                { begin: "^#{1,6}", end: "$" },
                { begin: "^.+?\\n[=-]{2,}$" }
              ]
            },
            // inline html
            {
              begin: "<",
              end: ">",
              subLanguage: "xml",
              relevance: 0
            },
            // lists (indicators only)
            {
              className: "bullet",
              begin: "^([*+-]|(\\d+\\.))\\s+"
            },
            // strong segments
            {
              className: "strong",
              begin: "[*_]{2}.+?[*_]{2}"
            },
            // emphasis segments
            {
              className: "emphasis",
              variants: [
                { begin: "\\*.+?\\*" },
                {
                  begin: "_.+?_",
                  relevance: 0
                }
              ]
            },
            // blockquotes
            {
              className: "quote",
              begin: "^>\\s+",
              end: "$"
            },
            // code snippets
            {
              className: "code",
              variants: [
                {
                  begin: "^```w*s*$",
                  end: "^```s*$"
                },
                {
                  begin: "`.+?`"
                },
                {
                  begin: "^( {4}|\t)",
                  end: "$",
                  relevance: 0
                }
              ]
            },
            // horizontal rules
            {
              begin: "^[-\\*]{3,}",
              end: "$"
            },
            // using links - title and link
            {
              begin: "\\[.+?\\][\\(\\[].*?[\\)\\]]",
              returnBegin: true,
              contains: [
                {
                  className: "string",
                  begin: "\\[",
                  end: "\\]",
                  excludeBegin: true,
                  returnEnd: true,
                  relevance: 0
                },
                {
                  className: "link",
                  begin: "\\]\\(",
                  end: "\\)",
                  excludeBegin: true,
                  excludeEnd: true
                },
                {
                  className: "symbol",
                  begin: "\\]\\[",
                  end: "\\]",
                  excludeBegin: true,
                  excludeEnd: true
                }
              ],
              relevance: 10
            },
            {
              begin: /^\[[^\n]+\]:/,
              returnBegin: true,
              contains: [
                {
                  className: "symbol",
                  begin: /\[/,
                  end: /\]/,
                  excludeBegin: true,
                  excludeEnd: true
                },
                {
                  className: "link",
                  begin: /:\s*/,
                  end: /$/,
                  excludeBegin: true
                }
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 70 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var SUBST = {
          className: "subst",
          begin: "\\$\\{",
          end: "}",
          keywords: "true false null this is new super"
        };

        var STRING = {
          className: "string",
          variants: [
            {
              begin: "r'''",
              end: "'''"
            },
            {
              begin: 'r"""',
              end: '"""'
            },
            {
              begin: "r'",
              end: "'",
              illegal: "\\n"
            },
            {
              begin: 'r"',
              end: '"',
              illegal: "\\n"
            },
            {
              begin: "'''",
              end: "'''",
              contains: [hljs.BACKSLASH_ESCAPE, SUBST]
            },
            {
              begin: '"""',
              end: '"""',
              contains: [hljs.BACKSLASH_ESCAPE, SUBST]
            },
            {
              begin: "'",
              end: "'",
              illegal: "\\n",
              contains: [hljs.BACKSLASH_ESCAPE, SUBST]
            },
            {
              begin: '"',
              end: '"',
              illegal: "\\n",
              contains: [hljs.BACKSLASH_ESCAPE, SUBST]
            }
          ]
        };
        SUBST.contains = [hljs.C_NUMBER_MODE, STRING];

        var KEYWORDS = {
          keyword:
            "assert async await break case catch class const continue default do else enum extends false final " +
            "finally for if in is new null rethrow return super switch sync this throw true try var void while with yield " +
            "abstract as dynamic export external factory get implements import library operator part set static typedef",
          built_in:
            // dart:core
            "print Comparable DateTime Duration Function Iterable Iterator List Map Match Null Object Pattern RegExp Set " +
            "Stopwatch String StringBuffer StringSink Symbol Type Uri bool double int num " +
            // dart:html
            "document window querySelector querySelectorAll Element ElementList"
        };

        return {
          keywords: KEYWORDS,
          contains: [
            STRING,
            hljs.COMMENT("/\\*\\*", "\\*/", {
              subLanguage: "markdown"
            }),
            hljs.COMMENT("///", "$", {
              subLanguage: "markdown"
            }),
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: "class",
              beginKeywords: "class interface",
              end: "{",
              excludeEnd: true,
              contains: [
                {
                  beginKeywords: "extends implements"
                },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            },
            hljs.C_NUMBER_MODE,
            {
              className: "meta",
              begin: "@[A-Za-z]+"
            },
            {
              begin: "=>" // No markup, just a relevance booster
            }
          ]
        };
      };

      /***/
    },
    /* 71 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS =
          "exports register file shl array record property for mod while set ally label uses raise not " +
          "stored class safecall var interface or private static exit index inherited to else stdcall " +
          "override shr asm far resourcestring finalization packed virtual out and protected library do " +
          "xorwrite goto near function end div overload object unit begin string on inline repeat until " +
          "destructor write message program with read initialization except default nil if case cdecl in " +
          "downto threadvar of try pascal const external constructor type public then implementation " +
          "finally published procedure absolute reintroduce operator as is abstract alias assembler " +
          "bitpacked break continue cppdecl cvar enumerator experimental platform deprecated " +
          "unimplemented dynamic export far16 forward generic helper implements interrupt iochecks " +
          "local name nodefault noreturn nostackframe oldfpccall otherwise saveregisters softfloat " +
          "specialize strict unaligned varargs ";
        var COMMENT_MODES = [
          hljs.C_LINE_COMMENT_MODE,
          hljs.COMMENT(/\{/, /\}/, { relevance: 0 }),
          hljs.COMMENT(/\(\*/, /\*\)/, { relevance: 10 })
        ];
        var DIRECTIVE = {
          className: "meta",
          variants: [
            { begin: /\{\$/, end: /\}/ },
            { begin: /\(\*\$/, end: /\*\)/ }
          ]
        };
        var STRING = {
          className: "string",
          begin: /'/,
          end: /'/,
          contains: [{ begin: /''/ }]
        };
        var CHAR_STRING = {
          className: "string",
          begin: /(#\d+)+/
        };
        var CLASS = {
          begin: hljs.IDENT_RE + "\\s*=\\s*class\\s*\\(",
          returnBegin: true,
          contains: [hljs.TITLE_MODE]
        };
        var FUNCTION = {
          className: "function",
          beginKeywords: "function constructor destructor procedure",
          end: /[:;]/,
          keywords: "function constructor|10 destructor|10 procedure|10",
          contains: [
            hljs.TITLE_MODE,
            {
              className: "params",
              begin: /\(/,
              end: /\)/,
              keywords: KEYWORDS,
              contains: [STRING, CHAR_STRING, DIRECTIVE].concat(COMMENT_MODES)
            },
            DIRECTIVE
          ].concat(COMMENT_MODES)
        };
        return {
          aliases: [
            "dpr",
            "dfm",
            "pas",
            "pascal",
            "freepascal",
            "lazarus",
            "lpr",
            "lfm"
          ],
          case_insensitive: true,
          keywords: KEYWORDS,
          illegal: /"|\$[G-Zg-z]|\/\*|<\/|\|/,
          contains: [
            STRING,
            CHAR_STRING,
            hljs.NUMBER_MODE,
            CLASS,
            FUNCTION,
            DIRECTIVE
          ].concat(COMMENT_MODES)
        };
      };

      /***/
    },
    /* 72 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["patch"],
          contains: [
            {
              className: "meta",
              relevance: 10,
              variants: [
                { begin: /^@@ +\-\d+,\d+ +\+\d+,\d+ +@@$/ },
                { begin: /^\*\*\* +\d+,\d+ +\*\*\*\*$/ },
                { begin: /^\-\-\- +\d+,\d+ +\-\-\-\-$/ }
              ]
            },
            {
              className: "comment",
              variants: [
                { begin: /Index: /, end: /$/ },
                { begin: /={3,}/, end: /$/ },
                { begin: /^\-{3}/, end: /$/ },
                { begin: /^\*{3} /, end: /$/ },
                { begin: /^\+{3}/, end: /$/ },
                { begin: /\*{5}/, end: /\*{5}$/ }
              ]
            },
            {
              className: "addition",
              begin: "^\\+",
              end: "$"
            },
            {
              className: "deletion",
              begin: "^\\-",
              end: "$"
            },
            {
              className: "addition",
              begin: "^\\!",
              end: "$"
            }
          ]
        };
      };

      /***/
    },
    /* 73 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var FILTER = {
          begin: /\|[A-Za-z]+:?/,
          keywords: {
            name:
              "truncatewords removetags linebreaksbr yesno get_digit timesince random striptags " +
              "filesizeformat escape linebreaks length_is ljust rjust cut urlize fix_ampersands " +
              "title floatformat capfirst pprint divisibleby add make_list unordered_list urlencode " +
              "timeuntil urlizetrunc wordcount stringformat linenumbers slice date dictsort " +
              "dictsortreversed default_if_none pluralize lower join center default " +
              "truncatewords_html upper length phone2numeric wordwrap time addslashes slugify first " +
              "escapejs force_escape iriencode last safe safeseq truncatechars localize unlocalize " +
              "localtime utc timezone"
          },
          contains: [hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE]
        };

        return {
          aliases: ["jinja"],
          case_insensitive: true,
          subLanguage: "xml",
          contains: [
            hljs.COMMENT(/\{%\s*comment\s*%}/, /\{%\s*endcomment\s*%}/),
            hljs.COMMENT(/\{#/, /#}/),
            {
              className: "template-tag",
              begin: /\{%/,
              end: /%}/,
              contains: [
                {
                  className: "name",
                  begin: /\w+/,
                  keywords: {
                    name:
                      "comment endcomment load templatetag ifchanged endifchanged if endif firstof for " +
                      "endfor ifnotequal endifnotequal widthratio extends include spaceless " +
                      "endspaceless regroup ifequal endifequal ssi now with cycle url filter " +
                      "endfilter debug block endblock else autoescape endautoescape csrf_token empty elif " +
                      "endwith static trans blocktrans endblocktrans get_static_prefix get_media_prefix " +
                      "plural get_current_language language get_available_languages " +
                      "get_current_language_bidi get_language_info get_language_info_list localize " +
                      "endlocalize localtime endlocaltime timezone endtimezone get_current_timezone " +
                      "verbatim"
                  },
                  starts: {
                    endsWithParent: true,
                    keywords: "in by as",
                    contains: [FILTER],
                    relevance: 0
                  }
                }
              ]
            },
            {
              className: "template-variable",
              begin: /\{\{/,
              end: /}}/,
              contains: [FILTER]
            }
          ]
        };
      };

      /***/
    },
    /* 74 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["bind", "zone"],
          keywords: {
            keyword:
              "IN A AAAA AFSDB APL CAA CDNSKEY CDS CERT CNAME DHCID DLV DNAME DNSKEY DS HIP IPSECKEY KEY KX " +
              "LOC MX NAPTR NS NSEC NSEC3 NSEC3PARAM PTR RRSIG RP SIG SOA SRV SSHFP TA TKEY TLSA TSIG TXT"
          },
          contains: [
            hljs.COMMENT(";", "$", { relevance: 0 }),
            {
              className: "meta",
              begin: /^\$(TTL|GENERATE|INCLUDE|ORIGIN)\b/
            },
            // IPv6
            {
              className: "number",
              begin:
                "((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))\\b"
            },
            // IPv4
            {
              className: "number",
              begin:
                "((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]).){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\b"
            },
            hljs.inherit(hljs.NUMBER_MODE, { begin: /\b\d+[dhwm]?/ })
          ]
        };
      };

      /***/
    },
    /* 75 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["docker"],
          case_insensitive: true,
          keywords: "from maintainer expose env arg user onbuild stopsignal",
          contains: [
            hljs.HASH_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.NUMBER_MODE,
            {
              beginKeywords:
                "run cmd entrypoint volume add copy workdir label healthcheck shell",
              starts: {
                end: /[^\\]\n/,
                subLanguage: "bash"
              }
            }
          ],
          illegal: "</"
        };
      };

      /***/
    },
    /* 76 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var COMMENT = hljs.COMMENT(/^\s*@?rem\b/, /$/, {
          relevance: 10
        });
        var LABEL = {
          className: "symbol",
          begin: "^\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\s+label)",
          relevance: 0
        };
        return {
          aliases: ["bat", "cmd"],
          case_insensitive: true,
          illegal: /\/\*/,
          keywords: {
            keyword:
              "if else goto for in do call exit not exist errorlevel defined " +
              "equ neq lss leq gtr geq",
            built_in:
              "prn nul lpt3 lpt2 lpt1 con com4 com3 com2 com1 aux " +
              "shift cd dir echo setlocal endlocal set pause copy " +
              "append assoc at attrib break cacls cd chcp chdir chkdsk chkntfs cls cmd color " +
              "comp compact convert date dir diskcomp diskcopy doskey erase fs " +
              "find findstr format ftype graftabl help keyb label md mkdir mode more move path " +
              "pause print popd pushd promt rd recover rem rename replace restore rmdir shift" +
              "sort start subst time title tree type ver verify vol " +
              // winutils
              "ping net ipconfig taskkill xcopy ren del"
          },
          contains: [
            {
              className: "variable",
              begin: /%%[^ ]|%[^ ]+?%|![^ ]+?!/
            },
            {
              className: "function",
              begin: LABEL.begin,
              end: "goto:eof",
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  begin: "([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*"
                }),
                COMMENT
              ]
            },
            {
              className: "number",
              begin: "\\b\\d+",
              relevance: 0
            },
            COMMENT
          ]
        };
      };

      /***/
    },
    /* 77 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var QUOTED_PROPERTY = {
          className: "string",
          begin: /"/,
          end: /"/
        };
        var APOS_PROPERTY = {
          className: "string",
          begin: /'/,
          end: /'/
        };
        var UNQUOTED_PROPERTY = {
          className: "string",
          begin: "[\\w-?]+:\\w+",
          end: "\\W",
          relevance: 0
        };
        var VALUELESS_PROPERTY = {
          className: "string",
          begin: "\\w+-?\\w+",
          end: "\\W",
          relevance: 0
        };

        return {
          keywords: "dsconfig",
          contains: [
            {
              className: "keyword",
              begin: "^dsconfig",
              end: "\\s",
              excludeEnd: true,
              relevance: 10
            },
            {
              className: "built_in",
              begin: "(list|create|get|set|delete)-(\\w+)",
              end: "\\s",
              excludeEnd: true,
              illegal: "!@#$%^&*()",
              relevance: 10
            },
            {
              className: "built_in",
              begin: "--(\\w+)",
              end: "\\s",
              excludeEnd: true
            },
            QUOTED_PROPERTY,
            APOS_PROPERTY,
            UNQUOTED_PROPERTY,
            VALUELESS_PROPERTY,
            hljs.HASH_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 78 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var STRINGS = {
          className: "string",
          variants: [
            hljs.inherit(hljs.QUOTE_STRING_MODE, { begin: '((u8?|U)|L)?"' }),
            {
              begin: '(u8?|U)?R"',
              end: '"',
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              begin: "'\\\\?.",
              end: "'",
              illegal: "."
            }
          ]
        };

        var NUMBERS = {
          className: "number",
          variants: [
            { begin: "\\b(\\d+(\\.\\d*)?|\\.\\d+)(u|U|l|L|ul|UL|f|F)" },
            { begin: hljs.C_NUMBER_RE }
          ],
          relevance: 0
        };

        var PREPROCESSOR = {
          className: "meta",
          begin: "#",
          end: "$",
          keywords: {
            "meta-keyword": "if else elif endif define undef ifdef ifndef"
          },
          contains: [
            {
              begin: /\\\n/,
              relevance: 0
            },
            {
              beginKeywords: "include",
              end: "$",
              keywords: { "meta-keyword": "include" },
              contains: [
                hljs.inherit(STRINGS, { className: "meta-string" }),
                {
                  className: "meta-string",
                  begin: "<",
                  end: ">",
                  illegal: "\\n"
                }
              ]
            },
            STRINGS,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE
          ]
        };

        var DTS_REFERENCE = {
          className: "variable",
          begin: "\\&[a-z\\d_]*\\b"
        };

        var DTS_KEYWORD = {
          className: "meta-keyword",
          begin: "/[a-z][a-z\\d-]*/"
        };

        var DTS_LABEL = {
          className: "symbol",
          begin: "^\\s*[a-zA-Z_][a-zA-Z\\d_]*:"
        };

        var DTS_CELL_PROPERTY = {
          className: "params",
          begin: "<",
          end: ">",
          contains: [NUMBERS, DTS_REFERENCE]
        };

        var DTS_NODE = {
          className: "class",
          begin: /[a-zA-Z_][a-zA-Z\d_@]*\s{/,
          end: /[{;=]/,
          returnBegin: true,
          excludeEnd: true
        };

        var DTS_ROOT_NODE = {
          className: "class",
          begin: "/\\s*{",
          end: "};",
          relevance: 10,
          contains: [
            DTS_REFERENCE,
            DTS_KEYWORD,
            DTS_LABEL,
            DTS_NODE,
            DTS_CELL_PROPERTY,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            NUMBERS,
            STRINGS
          ]
        };

        return {
          keywords: "",
          contains: [
            DTS_ROOT_NODE,
            DTS_REFERENCE,
            DTS_KEYWORD,
            DTS_LABEL,
            DTS_NODE,
            DTS_CELL_PROPERTY,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            NUMBERS,
            STRINGS,
            PREPROCESSOR,
            {
              begin: hljs.IDENT_RE + "::",
              keywords: ""
            }
          ]
        };
      };

      /***/
    },
    /* 79 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var EXPRESSION_KEYWORDS =
          "if eq ne lt lte gt gte select default math sep";
        return {
          aliases: ["dst"],
          case_insensitive: true,
          subLanguage: "xml",
          contains: [
            {
              className: "template-tag",
              begin: /\{[#\/]/,
              end: /\}/,
              illegal: /;/,
              contains: [
                {
                  className: "name",
                  begin: /[a-zA-Z\.-]+/,
                  starts: {
                    endsWithParent: true,
                    relevance: 0,
                    contains: [hljs.QUOTE_STRING_MODE]
                  }
                }
              ]
            },
            {
              className: "template-variable",
              begin: /\{/,
              end: /\}/,
              illegal: /;/,
              keywords: EXPRESSION_KEYWORDS
            }
          ]
        };
      };

      /***/
    },
    /* 80 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var commentMode = hljs.COMMENT(/\(\*/, /\*\)/);

        var nonTerminalMode = {
          className: "attribute",
          begin: /^[ ]*[a-zA-Z][a-zA-Z-]*([\s-]+[a-zA-Z][a-zA-Z]*)*/
        };

        var specialSequenceMode = {
          className: "meta",
          begin: /\?.*\?/
        };

        var ruleBodyMode = {
          begin: /=/,
          end: /;/,
          contains: [
            commentMode,
            specialSequenceMode,
            // terminals
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE
          ]
        };

        return {
          illegal: /\S/,
          contains: [commentMode, nonTerminalMode, ruleBodyMode]
        };
      };

      /***/
    },
    /* 81 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var ELIXIR_IDENT_RE = "[a-zA-Z_][a-zA-Z0-9_]*(\\!|\\?)?";
        var ELIXIR_METHOD_RE =
          "[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?";
        var ELIXIR_KEYWORDS =
          "and false then defined module in return redo retry end for true self when " +
          "next until do begin unless nil break not case cond alias while ensure or " +
          "include use alias fn quote";
        var SUBST = {
          className: "subst",
          begin: "#\\{",
          end: "}",
          lexemes: ELIXIR_IDENT_RE,
          keywords: ELIXIR_KEYWORDS
        };
        var STRING = {
          className: "string",
          contains: [hljs.BACKSLASH_ESCAPE, SUBST],
          variants: [
            {
              begin: /'/,
              end: /'/
            },
            {
              begin: /"/,
              end: /"/
            }
          ]
        };
        var FUNCTION = {
          className: "function",
          beginKeywords: "def defp defmacro",
          end: /\B\b/, // the mode is ended by the title
          contains: [
            hljs.inherit(hljs.TITLE_MODE, {
              begin: ELIXIR_IDENT_RE,
              endsParent: true
            })
          ]
        };
        var CLASS = hljs.inherit(FUNCTION, {
          className: "class",
          beginKeywords: "defimpl defmodule defprotocol defrecord",
          end: /\bdo\b|$|;/
        });
        var ELIXIR_DEFAULT_CONTAINS = [
          STRING,
          hljs.HASH_COMMENT_MODE,
          CLASS,
          FUNCTION,
          {
            className: "symbol",
            begin: ":(?!\\s)",
            contains: [STRING, { begin: ELIXIR_METHOD_RE }],
            relevance: 0
          },
          {
            className: "symbol",
            begin: ELIXIR_IDENT_RE + ":",
            relevance: 0
          },
          {
            className: "number",
            begin:
              "(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",
            relevance: 0
          },
          {
            className: "variable",
            begin: "(\\$\\W)|((\\$|\\@\\@?)(\\w+))"
          },
          {
            begin: "->"
          },
          {
            // regexp container
            begin: "(" + hljs.RE_STARTERS_RE + ")\\s*",
            contains: [
              hljs.HASH_COMMENT_MODE,
              {
                className: "regexp",
                illegal: "\\n",
                contains: [hljs.BACKSLASH_ESCAPE, SUBST],
                variants: [
                  {
                    begin: "/",
                    end: "/[a-z]*"
                  },
                  {
                    begin: "%r\\[",
                    end: "\\][a-z]*"
                  }
                ]
              }
            ],
            relevance: 0
          }
        ];
        SUBST.contains = ELIXIR_DEFAULT_CONTAINS;

        return {
          lexemes: ELIXIR_IDENT_RE,
          keywords: ELIXIR_KEYWORDS,
          contains: ELIXIR_DEFAULT_CONTAINS
        };
      };

      /***/
    },
    /* 82 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var COMMENT = {
          variants: [
            hljs.COMMENT("--", "$"),
            hljs.COMMENT("{-", "-}", {
              contains: ["self"]
            })
          ]
        };

        var CONSTRUCTOR = {
          className: "type",
          begin: "\\b[A-Z][\\w']*", // TODO: other constructors (built-in, infix).
          relevance: 0
        };

        var LIST = {
          begin: "\\(",
          end: "\\)",
          illegal: '"',
          contains: [
            {
              className: "type",
              begin: "\\b[A-Z][\\w]*(\\((\\.\\.|,|\\w+)\\))?"
            },
            COMMENT
          ]
        };

        var RECORD = {
          begin: "{",
          end: "}",
          contains: LIST.contains
        };

        return {
          keywords:
            "let in if then else case of where module import exposing " +
            "type alias as infix infixl infixr port effect command subscription",
          contains: [
            // Top-level constructions.

            {
              beginKeywords: "port effect module",
              end: "exposing",
              keywords:
                "port effect module where command subscription exposing",
              contains: [LIST, COMMENT],
              illegal: "\\W\\.|;"
            },
            {
              begin: "import",
              end: "$",
              keywords: "import as exposing",
              contains: [LIST, COMMENT],
              illegal: "\\W\\.|;"
            },
            {
              begin: "type",
              end: "$",
              keywords: "type alias",
              contains: [CONSTRUCTOR, LIST, RECORD, COMMENT]
            },
            {
              beginKeywords: "infix infixl infixr",
              end: "$",
              contains: [hljs.C_NUMBER_MODE, COMMENT]
            },
            {
              begin: "port",
              end: "$",
              keywords: "port",
              contains: [COMMENT]
            },

            // Literals and names.

            // TODO: characters.
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE,
            CONSTRUCTOR,
            hljs.inherit(hljs.TITLE_MODE, { begin: "^[_a-z][\\w']*" }),
            COMMENT,

            { begin: "->|<-" } // No markup, relevance booster
          ],
          illegal: /;/
        };
      };

      /***/
    },
    /* 83 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var RUBY_METHOD_RE =
          "[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?";
        var RUBY_KEYWORDS = {
          keyword:
            "and then defined module in return redo if BEGIN retry end for self when " +
            "next until do begin unless END rescue else break undef not super class case " +
            "require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor",
          literal: "true false nil"
        };
        var YARDOCTAG = {
          className: "doctag",
          begin: "@[A-Za-z]+"
        };
        var IRB_OBJECT = {
          begin: "#<",
          end: ">"
        };
        var COMMENT_MODES = [
          hljs.COMMENT("#", "$", {
            contains: [YARDOCTAG]
          }),
          hljs.COMMENT("^\\=begin", "^\\=end", {
            contains: [YARDOCTAG],
            relevance: 10
          }),
          hljs.COMMENT("^__END__", "\\n$")
        ];
        var SUBST = {
          className: "subst",
          begin: "#\\{",
          end: "}",
          keywords: RUBY_KEYWORDS
        };
        var STRING = {
          className: "string",
          contains: [hljs.BACKSLASH_ESCAPE, SUBST],
          variants: [
            { begin: /'/, end: /'/ },
            { begin: /"/, end: /"/ },
            { begin: /`/, end: /`/ },
            { begin: "%[qQwWx]?\\(", end: "\\)" },
            { begin: "%[qQwWx]?\\[", end: "\\]" },
            { begin: "%[qQwWx]?{", end: "}" },
            { begin: "%[qQwWx]?<", end: ">" },
            { begin: "%[qQwWx]?/", end: "/" },
            { begin: "%[qQwWx]?%", end: "%" },
            { begin: "%[qQwWx]?-", end: "-" },
            { begin: "%[qQwWx]?\\|", end: "\\|" },
            {
              // \B in the beginning suppresses recognition of ?-sequences where ?
              // is the last character of a preceding identifier, as in: `func?4`
              begin: /\B\?(\\\d{1,3}|\\x[A-Fa-f0-9]{1,2}|\\u[A-Fa-f0-9]{4}|\\?\S)\b/
            },
            {
              begin: /<<(-?)\w+$/,
              end: /^\s*\w+$/
            }
          ]
        };
        var PARAMS = {
          className: "params",
          begin: "\\(",
          end: "\\)",
          endsParent: true,
          keywords: RUBY_KEYWORDS
        };

        var RUBY_DEFAULT_CONTAINS = [
          STRING,
          IRB_OBJECT,
          {
            className: "class",
            beginKeywords: "class module",
            end: "$|;",
            illegal: /=/,
            contains: [
              hljs.inherit(hljs.TITLE_MODE, {
                begin: "[A-Za-z_]\\w*(::\\w+)*(\\?|\\!)?"
              }),
              {
                begin: "<\\s*",
                contains: [
                  {
                    begin: "(" + hljs.IDENT_RE + "::)?" + hljs.IDENT_RE
                  }
                ]
              }
            ].concat(COMMENT_MODES)
          },
          {
            className: "function",
            beginKeywords: "def",
            end: "$|;",
            contains: [
              hljs.inherit(hljs.TITLE_MODE, { begin: RUBY_METHOD_RE }),
              PARAMS
            ].concat(COMMENT_MODES)
          },
          {
            // swallow namespace qualifiers before symbols
            begin: hljs.IDENT_RE + "::"
          },
          {
            className: "symbol",
            begin: hljs.UNDERSCORE_IDENT_RE + "(\\!|\\?)?:",
            relevance: 0
          },
          {
            className: "symbol",
            begin: ":(?!\\s)",
            contains: [STRING, { begin: RUBY_METHOD_RE }],
            relevance: 0
          },
          {
            className: "number",
            begin:
              "(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",
            relevance: 0
          },
          {
            begin: "(\\$\\W)|((\\$|\\@\\@?)(\\w+))" // variables
          },
          {
            className: "params",
            begin: /\|/,
            end: /\|/,
            keywords: RUBY_KEYWORDS
          },
          {
            // regexp container
            begin: "(" + hljs.RE_STARTERS_RE + "|unless)\\s*",
            keywords: "unless",
            contains: [
              IRB_OBJECT,
              {
                className: "regexp",
                contains: [hljs.BACKSLASH_ESCAPE, SUBST],
                illegal: /\n/,
                variants: [
                  { begin: "/", end: "/[a-z]*" },
                  { begin: "%r{", end: "}[a-z]*" },
                  { begin: "%r\\(", end: "\\)[a-z]*" },
                  { begin: "%r!", end: "![a-z]*" },
                  { begin: "%r\\[", end: "\\][a-z]*" }
                ]
              }
            ].concat(COMMENT_MODES),
            relevance: 0
          }
        ].concat(COMMENT_MODES);

        SUBST.contains = RUBY_DEFAULT_CONTAINS;
        PARAMS.contains = RUBY_DEFAULT_CONTAINS;

        var SIMPLE_PROMPT = "[>?]>";
        var DEFAULT_PROMPT = "[\\w#]+\\(\\w+\\):\\d+:\\d+>";
        var RVM_PROMPT = "(\\w+-)?\\d+\\.\\d+\\.\\d(p\\d+)?[^>]+>";

        var IRB_DEFAULT = [
          {
            begin: /^\s*=>/,
            starts: {
              end: "$",
              contains: RUBY_DEFAULT_CONTAINS
            }
          },
          {
            className: "meta",
            begin:
              "^(" +
              SIMPLE_PROMPT +
              "|" +
              DEFAULT_PROMPT +
              "|" +
              RVM_PROMPT +
              ")",
            starts: {
              end: "$",
              contains: RUBY_DEFAULT_CONTAINS
            }
          }
        ];

        return {
          aliases: ["rb", "gemspec", "podspec", "thor", "irb"],
          keywords: RUBY_KEYWORDS,
          illegal: /\/\*/,
          contains: COMMENT_MODES.concat(IRB_DEFAULT).concat(
            RUBY_DEFAULT_CONTAINS
          )
        };
      };

      /***/
    },
    /* 84 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          subLanguage: "xml",
          contains: [
            hljs.COMMENT("<%#", "%>"),
            {
              begin: "<%[%=-]?",
              end: "[%-]?%>",
              subLanguage: "ruby",
              excludeBegin: true,
              excludeEnd: true
            }
          ]
        };
      };

      /***/
    },
    /* 85 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            built_in: "spawn spawn_link self",
            keyword:
              "after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if " +
              "let not of or orelse|10 query receive rem try when xor"
          },
          contains: [
            {
              className: "meta",
              begin: "^[0-9]+> ",
              relevance: 10
            },
            hljs.COMMENT("%", "$"),
            {
              className: "number",
              begin: "\\b(\\d+#[a-fA-F0-9]+|\\d+(\\.\\d+)?([eE][-+]?\\d+)?)",
              relevance: 0
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              begin: "\\?(::)?([A-Z]\\w*(::)?)+"
            },
            {
              begin: "->"
            },
            {
              begin: "ok"
            },
            {
              begin: "!"
            },
            {
              begin:
                "(\\b[a-z'][a-zA-Z0-9_']*:[a-z'][a-zA-Z0-9_']*)|(\\b[a-z'][a-zA-Z0-9_']*)",
              relevance: 0
            },
            {
              begin: "[A-Z][a-zA-Z0-9_']*",
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 86 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var BASIC_ATOM_RE = "[a-z'][a-zA-Z0-9_']*";
        var FUNCTION_NAME_RE =
          "(" + BASIC_ATOM_RE + ":" + BASIC_ATOM_RE + "|" + BASIC_ATOM_RE + ")";
        var ERLANG_RESERVED = {
          keyword:
            "after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun if " +
            "let not of orelse|10 query receive rem try when xor",
          literal: "false true"
        };

        var COMMENT = hljs.COMMENT("%", "$");
        var NUMBER = {
          className: "number",
          begin: "\\b(\\d+#[a-fA-F0-9]+|\\d+(\\.\\d+)?([eE][-+]?\\d+)?)",
          relevance: 0
        };
        var NAMED_FUN = {
          begin: "fun\\s+" + BASIC_ATOM_RE + "/\\d+"
        };
        var FUNCTION_CALL = {
          begin: FUNCTION_NAME_RE + "\\(",
          end: "\\)",
          returnBegin: true,
          relevance: 0,
          contains: [
            {
              begin: FUNCTION_NAME_RE,
              relevance: 0
            },
            {
              begin: "\\(",
              end: "\\)",
              endsWithParent: true,
              returnEnd: true,
              relevance: 0
              // "contains" defined later
            }
          ]
        };
        var TUPLE = {
          begin: "{",
          end: "}",
          relevance: 0
          // "contains" defined later
        };
        var VAR1 = {
          begin: "\\b_([A-Z][A-Za-z0-9_]*)?",
          relevance: 0
        };
        var VAR2 = {
          begin: "[A-Z][a-zA-Z0-9_]*",
          relevance: 0
        };
        var RECORD_ACCESS = {
          begin: "#" + hljs.UNDERSCORE_IDENT_RE,
          relevance: 0,
          returnBegin: true,
          contains: [
            {
              begin: "#" + hljs.UNDERSCORE_IDENT_RE,
              relevance: 0
            },
            {
              begin: "{",
              end: "}",
              relevance: 0
              // "contains" defined later
            }
          ]
        };

        var BLOCK_STATEMENTS = {
          beginKeywords: "fun receive if try case",
          end: "end",
          keywords: ERLANG_RESERVED
        };
        BLOCK_STATEMENTS.contains = [
          COMMENT,
          NAMED_FUN,
          hljs.inherit(hljs.APOS_STRING_MODE, { className: "" }),
          BLOCK_STATEMENTS,
          FUNCTION_CALL,
          hljs.QUOTE_STRING_MODE,
          NUMBER,
          TUPLE,
          VAR1,
          VAR2,
          RECORD_ACCESS
        ];

        var BASIC_MODES = [
          COMMENT,
          NAMED_FUN,
          BLOCK_STATEMENTS,
          FUNCTION_CALL,
          hljs.QUOTE_STRING_MODE,
          NUMBER,
          TUPLE,
          VAR1,
          VAR2,
          RECORD_ACCESS
        ];
        FUNCTION_CALL.contains[1].contains = BASIC_MODES;
        TUPLE.contains = BASIC_MODES;
        RECORD_ACCESS.contains[1].contains = BASIC_MODES;

        var PARAMS = {
          className: "params",
          begin: "\\(",
          end: "\\)",
          contains: BASIC_MODES
        };
        return {
          aliases: ["erl"],
          keywords: ERLANG_RESERVED,
          illegal: "(</|\\*=|\\+=|-=|/\\*|\\*/|\\(\\*|\\*\\))",
          contains: [
            {
              className: "function",
              begin: "^" + BASIC_ATOM_RE + "\\s*\\(",
              end: "->",
              returnBegin: true,
              illegal: "\\(|#|//|/\\*|\\\\|:|;",
              contains: [
                PARAMS,
                hljs.inherit(hljs.TITLE_MODE, { begin: BASIC_ATOM_RE })
              ],
              starts: {
                end: ";|\\.",
                keywords: ERLANG_RESERVED,
                contains: BASIC_MODES
              }
            },
            COMMENT,
            {
              begin: "^-",
              end: "\\.",
              relevance: 0,
              excludeEnd: true,
              returnBegin: true,
              lexemes: "-" + hljs.IDENT_RE,
              keywords:
                "-module -record -undef -export -ifdef -ifndef -author -copyright -doc -vsn " +
                "-import -include -include_lib -compile -define -else -endif -file -behaviour " +
                "-behavior -spec",
              contains: [PARAMS]
            },
            NUMBER,
            hljs.QUOTE_STRING_MODE,
            RECORD_ACCESS,
            VAR1,
            VAR2,
            TUPLE,
            { begin: /\.$/ } // relevance booster
          ]
        };
      };

      /***/
    },
    /* 87 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["xlsx", "xls"],
          case_insensitive: true,
          lexemes: /[a-zA-Z][\w\.]*/,
          // built-in functions imported from https://web.archive.org/web/20160513042710/https://support.office.com/en-us/article/Excel-functions-alphabetical-b3944572-255d-4efb-bb96-c6d90033e188
          keywords: {
            built_in:
              "ABS ACCRINT ACCRINTM ACOS ACOSH ACOT ACOTH AGGREGATE ADDRESS AMORDEGRC AMORLINC AND ARABIC AREAS ASC ASIN ASINH ATAN ATAN2 ATANH AVEDEV AVERAGE AVERAGEA AVERAGEIF AVERAGEIFS BAHTTEXT BASE BESSELI BESSELJ BESSELK BESSELY BETADIST BETA.DIST BETAINV BETA.INV BIN2DEC BIN2HEX BIN2OCT BINOMDIST BINOM.DIST BINOM.DIST.RANGE BINOM.INV BITAND BITLSHIFT BITOR BITRSHIFT BITXOR CALL CEILING CEILING.MATH CEILING.PRECISE CELL CHAR CHIDIST CHIINV CHITEST CHISQ.DIST CHISQ.DIST.RT CHISQ.INV CHISQ.INV.RT CHISQ.TEST CHOOSE CLEAN CODE COLUMN COLUMNS COMBIN COMBINA COMPLEX CONCAT CONCATENATE CONFIDENCE CONFIDENCE.NORM CONFIDENCE.T CONVERT CORREL COS COSH COT COTH COUNT COUNTA COUNTBLANK COUNTIF COUNTIFS COUPDAYBS COUPDAYS COUPDAYSNC COUPNCD COUPNUM COUPPCD COVAR COVARIANCE.P COVARIANCE.S CRITBINOM CSC CSCH CUBEKPIMEMBER CUBEMEMBER CUBEMEMBERPROPERTY CUBERANKEDMEMBER CUBESET CUBESETCOUNT CUBEVALUE CUMIPMT CUMPRINC DATE DATEDIF DATEVALUE DAVERAGE DAY DAYS DAYS360 DB DBCS DCOUNT DCOUNTA DDB DEC2BIN DEC2HEX DEC2OCT DECIMAL DEGREES DELTA DEVSQ DGET DISC DMAX DMIN DOLLAR DOLLARDE DOLLARFR DPRODUCT DSTDEV DSTDEVP DSUM DURATION DVAR DVARP EDATE EFFECT ENCODEURL EOMONTH ERF ERF.PRECISE ERFC ERFC.PRECISE ERROR.TYPE EUROCONVERT EVEN EXACT EXP EXPON.DIST EXPONDIST FACT FACTDOUBLE FALSE|0 F.DIST FDIST F.DIST.RT FILTERXML FIND FINDB F.INV F.INV.RT FINV FISHER FISHERINV FIXED FLOOR FLOOR.MATH FLOOR.PRECISE FORECAST FORECAST.ETS FORECAST.ETS.CONFINT FORECAST.ETS.SEASONALITY FORECAST.ETS.STAT FORECAST.LINEAR FORMULATEXT FREQUENCY F.TEST FTEST FV FVSCHEDULE GAMMA GAMMA.DIST GAMMADIST GAMMA.INV GAMMAINV GAMMALN GAMMALN.PRECISE GAUSS GCD GEOMEAN GESTEP GETPIVOTDATA GROWTH HARMEAN HEX2BIN HEX2DEC HEX2OCT HLOOKUP HOUR HYPERLINK HYPGEOM.DIST HYPGEOMDIST IF|0 IFERROR IFNA IFS IMABS IMAGINARY IMARGUMENT IMCONJUGATE IMCOS IMCOSH IMCOT IMCSC IMCSCH IMDIV IMEXP IMLN IMLOG10 IMLOG2 IMPOWER IMPRODUCT IMREAL IMSEC IMSECH IMSIN IMSINH IMSQRT IMSUB IMSUM IMTAN INDEX INDIRECT INFO INT INTERCEPT INTRATE IPMT IRR ISBLANK ISERR ISERROR ISEVEN ISFORMULA ISLOGICAL ISNA ISNONTEXT ISNUMBER ISODD ISREF ISTEXT ISO.CEILING ISOWEEKNUM ISPMT JIS KURT LARGE LCM LEFT LEFTB LEN LENB LINEST LN LOG LOG10 LOGEST LOGINV LOGNORM.DIST LOGNORMDIST LOGNORM.INV LOOKUP LOWER MATCH MAX MAXA MAXIFS MDETERM MDURATION MEDIAN MID MIDBs MIN MINIFS MINA MINUTE MINVERSE MIRR MMULT MOD MODE MODE.MULT MODE.SNGL MONTH MROUND MULTINOMIAL MUNIT N NA NEGBINOM.DIST NEGBINOMDIST NETWORKDAYS NETWORKDAYS.INTL NOMINAL NORM.DIST NORMDIST NORMINV NORM.INV NORM.S.DIST NORMSDIST NORM.S.INV NORMSINV NOT NOW NPER NPV NUMBERVALUE OCT2BIN OCT2DEC OCT2HEX ODD ODDFPRICE ODDFYIELD ODDLPRICE ODDLYIELD OFFSET OR PDURATION PEARSON PERCENTILE.EXC PERCENTILE.INC PERCENTILE PERCENTRANK.EXC PERCENTRANK.INC PERCENTRANK PERMUT PERMUTATIONA PHI PHONETIC PI PMT POISSON.DIST POISSON POWER PPMT PRICE PRICEDISC PRICEMAT PROB PRODUCT PROPER PV QUARTILE QUARTILE.EXC QUARTILE.INC QUOTIENT RADIANS RAND RANDBETWEEN RANK.AVG RANK.EQ RANK RATE RECEIVED REGISTER.ID REPLACE REPLACEB REPT RIGHT RIGHTB ROMAN ROUND ROUNDDOWN ROUNDUP ROW ROWS RRI RSQ RTD SEARCH SEARCHB SEC SECH SECOND SERIESSUM SHEET SHEETS SIGN SIN SINH SKEW SKEW.P SLN SLOPE SMALL SQL.REQUEST SQRT SQRTPI STANDARDIZE STDEV STDEV.P STDEV.S STDEVA STDEVP STDEVPA STEYX SUBSTITUTE SUBTOTAL SUM SUMIF SUMIFS SUMPRODUCT SUMSQ SUMX2MY2 SUMX2PY2 SUMXMY2 SWITCH SYD T TAN TANH TBILLEQ TBILLPRICE TBILLYIELD T.DIST T.DIST.2T T.DIST.RT TDIST TEXT TEXTJOIN TIME TIMEVALUE T.INV T.INV.2T TINV TODAY TRANSPOSE TREND TRIM TRIMMEAN TRUE|0 TRUNC T.TEST TTEST TYPE UNICHAR UNICODE UPPER VALUE VAR VAR.P VAR.S VARA VARP VARPA VDB VLOOKUP WEBSERVICE WEEKDAY WEEKNUM WEIBULL WEIBULL.DIST WORKDAY WORKDAY.INTL XIRR XNPV XOR YEAR YEARFRAC YIELD YIELDDISC YIELDMAT Z.TEST ZTEST"
          },
          contains: [
            {
              /* matches a beginning equal sign found in Excel formula examples */

              begin: /^=/,
              end: /[^=]/,
              returnEnd: true,
              illegal: /=/ /* only allow single equal sign at front of line */,
              relevance: 10
            },
            /* technically, there can be more than 2 letters in column names, but this prevents conflict with some keywords */
            {
              /* matches a reference to a single cell */
              className: "symbol",
              begin: /\b[A-Z]{1,2}\d+\b/,
              end: /[^\d]/,
              excludeEnd: true,
              relevance: 0
            },
            {
              /* matches a reference to a range of cells */
              className: "symbol",
              begin: /[A-Z]{0,2}\d*:[A-Z]{0,2}\d*/,
              relevance: 0
            },
            hljs.BACKSLASH_ESCAPE,
            hljs.QUOTE_STRING_MODE,
            {
              className: "number",
              begin: hljs.NUMBER_RE + "(%)?",
              relevance: 0
            },
            /* Excel formula comments are done by putting the comment in a function call to N() */
            hljs.COMMENT(/\bN\(/, /\)/, {
              excludeBegin: true,
              excludeEnd: true,
              illegal: /\n/
            })
          ]
        };
      };

      /***/
    },
    /* 88 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            {
              begin: /[^\u2401\u0001]+/,
              end: /[\u2401\u0001]/,
              excludeEnd: true,
              returnBegin: true,
              returnEnd: false,
              contains: [
                {
                  begin: /([^\u2401\u0001=]+)/,
                  end: /=([^\u2401\u0001=]+)/,
                  returnEnd: true,
                  returnBegin: false,
                  className: "attr"
                },
                {
                  begin: /=/,
                  end: /([\u2401\u0001])/,
                  excludeEnd: true,
                  excludeBegin: true,
                  className: "string"
                }
              ]
            }
          ],
          case_insensitive: true
        };
      };

      /***/
    },
    /* 89 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var CHAR = {
          className: "string",
          begin: /'(.|\\[xXuU][a-zA-Z0-9]+)'/
        };

        var STRING = {
          className: "string",
          variants: [
            {
              begin: '"',
              end: '"'
            }
          ]
        };

        var NAME = {
          className: "title",
          begin: /[^0-9\n\t "'(),.`{}\[\]:;][^\n\t "'(),.`{}\[\]:;]+|[^0-9\n\t "'(),.`{}\[\]:;=]/
        };

        var METHOD = {
          className: "function",
          beginKeywords: "def",
          end: /[:={\[(\n;]/,
          excludeEnd: true,
          contains: [NAME]
        };

        return {
          keywords: {
            literal: "true false",
            keyword:
              "case class def else enum if impl import in lat rel index let match namespace switch type yield with"
          },
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            CHAR,
            STRING,
            METHOD,
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 90 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var PARAMS = {
          className: "params",
          begin: "\\(",
          end: "\\)"
        };

        var F_KEYWORDS = {
          literal: ".False. .True.",
          keyword:
            "kind do while private call intrinsic where elsewhere " +
            "type endtype endmodule endselect endinterface end enddo endif if forall endforall only contains default return stop then " +
            "public subroutine|10 function program .and. .or. .not. .le. .eq. .ge. .gt. .lt. " +
            "goto save else use module select case " +
            "access blank direct exist file fmt form formatted iostat name named nextrec number opened rec recl sequential status unformatted unit " +
            "continue format pause cycle exit " +
            "c_null_char c_alert c_backspace c_form_feed flush wait decimal round iomsg " +
            "synchronous nopass non_overridable pass protected volatile abstract extends import " +
            "non_intrinsic value deferred generic final enumerator class associate bind enum " +
            "c_int c_short c_long c_long_long c_signed_char c_size_t c_int8_t c_int16_t c_int32_t c_int64_t c_int_least8_t c_int_least16_t " +
            "c_int_least32_t c_int_least64_t c_int_fast8_t c_int_fast16_t c_int_fast32_t c_int_fast64_t c_intmax_t C_intptr_t c_float c_double " +
            "c_long_double c_float_complex c_double_complex c_long_double_complex c_bool c_char c_null_ptr c_null_funptr " +
            "c_new_line c_carriage_return c_horizontal_tab c_vertical_tab iso_c_binding c_loc c_funloc c_associated  c_f_pointer " +
            "c_ptr c_funptr iso_fortran_env character_storage_size error_unit file_storage_size input_unit iostat_end iostat_eor " +
            "numeric_storage_size output_unit c_f_procpointer ieee_arithmetic ieee_support_underflow_control " +
            "ieee_get_underflow_mode ieee_set_underflow_mode newunit contiguous recursive " +
            "pad position action delim readwrite eor advance nml interface procedure namelist include sequence elemental pure " +
            "integer real character complex logical dimension allocatable|10 parameter " +
            "external implicit|10 none double precision assign intent optional pointer " +
            "target in out common equivalence data",
          built_in:
            "alog alog10 amax0 amax1 amin0 amin1 amod cabs ccos cexp clog csin csqrt dabs dacos dasin datan datan2 dcos dcosh ddim dexp dint " +
            "dlog dlog10 dmax1 dmin1 dmod dnint dsign dsin dsinh dsqrt dtan dtanh float iabs idim idint idnint ifix isign max0 max1 min0 min1 sngl " +
            "algama cdabs cdcos cdexp cdlog cdsin cdsqrt cqabs cqcos cqexp cqlog cqsin cqsqrt dcmplx dconjg derf derfc dfloat dgamma dimag dlgama " +
            "iqint qabs qacos qasin qatan qatan2 qcmplx qconjg qcos qcosh qdim qerf qerfc qexp qgamma qimag qlgama qlog qlog10 qmax1 qmin1 qmod " +
            "qnint qsign qsin qsinh qsqrt qtan qtanh abs acos aimag aint anint asin atan atan2 char cmplx conjg cos cosh exp ichar index int log " +
            "log10 max min nint sign sin sinh sqrt tan tanh print write dim lge lgt lle llt mod nullify allocate deallocate " +
            "adjustl adjustr all allocated any associated bit_size btest ceiling count cshift date_and_time digits dot_product " +
            "eoshift epsilon exponent floor fraction huge iand ibclr ibits ibset ieor ior ishft ishftc lbound len_trim matmul " +
            "maxexponent maxloc maxval merge minexponent minloc minval modulo mvbits nearest pack present product " +
            "radix random_number random_seed range repeat reshape rrspacing scale scan selected_int_kind selected_real_kind " +
            "set_exponent shape size spacing spread sum system_clock tiny transpose trim ubound unpack verify achar iachar transfer " +
            "dble entry dprod cpu_time command_argument_count get_command get_command_argument get_environment_variable is_iostat_end " +
            "ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode " +
            "is_iostat_eor move_alloc new_line selected_char_kind same_type_as extends_type_of" +
            "acosh asinh atanh bessel_j0 bessel_j1 bessel_jn bessel_y0 bessel_y1 bessel_yn erf erfc erfc_scaled gamma log_gamma hypot norm2 " +
            "atomic_define atomic_ref execute_command_line leadz trailz storage_size merge_bits " +
            "bge bgt ble blt dshiftl dshiftr findloc iall iany iparity image_index lcobound ucobound maskl maskr " +
            "num_images parity popcnt poppar shifta shiftl shiftr this_image"
        };
        return {
          case_insensitive: true,
          aliases: ["f90", "f95"],
          keywords: F_KEYWORDS,
          illegal: /\/\*/,
          contains: [
            hljs.inherit(hljs.APOS_STRING_MODE, {
              className: "string",
              relevance: 0
            }),
            hljs.inherit(hljs.QUOTE_STRING_MODE, {
              className: "string",
              relevance: 0
            }),
            {
              className: "function",
              beginKeywords: "subroutine function program",
              illegal: "[${=\\n]",
              contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]
            },
            hljs.COMMENT("!", "$", { relevance: 0 }),
            {
              className: "number",
              begin:
                "(?=\\b|\\+|\\-|\\.)(?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*)(?:[de][+-]?\\d+)?\\b\\.?",
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 91 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var TYPEPARAM = {
          begin: "<",
          end: ">",
          contains: [hljs.inherit(hljs.TITLE_MODE, { begin: /'[a-zA-Z0-9_]+/ })]
        };

        return {
          aliases: ["fs"],
          keywords:
            "abstract and as assert base begin class default delegate do done " +
            "downcast downto elif else end exception extern false finally for " +
            "fun function global if in inherit inline interface internal lazy let " +
            "match member module mutable namespace new null of open or " +
            "override private public rec return sig static struct then to " +
            "true try type upcast use val void when while with yield",
          illegal: /\/\*/,
          contains: [
            {
              // monad builder keywords (matches before non-bang kws)
              className: "keyword",
              begin: /\b(yield|return|let|do)!/
            },
            {
              className: "string",
              begin: '@"',
              end: '"',
              contains: [{ begin: '""' }]
            },
            {
              className: "string",
              begin: '"""',
              end: '"""'
            },
            hljs.COMMENT("\\(\\*", "\\*\\)"),
            {
              className: "class",
              beginKeywords: "type",
              end: "\\(|=|$",
              excludeEnd: true,
              contains: [hljs.UNDERSCORE_TITLE_MODE, TYPEPARAM]
            },
            {
              className: "meta",
              begin: "\\[<",
              end: ">\\]",
              relevance: 10
            },
            {
              className: "symbol",
              begin: "\\B('[A-Za-z])\\b",
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            hljs.C_LINE_COMMENT_MODE,
            hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 92 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            "abort acronym acronyms alias all and assign binary card diag display " +
            "else eq file files for free ge gt if integer le loop lt maximizing " +
            "minimizing model models ne negative no not option options or ord " +
            "positive prod put putpage puttl repeat sameas semicont semiint smax " +
            "smin solve sos1 sos2 sum system table then until using while xor yes",
          literal: "eps inf na",
          "built-in":
            "abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy " +
            "cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact " +
            "floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max " +
            "min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power " +
            "randBinomial randLinear randTriangle round rPower sigmoid sign " +
            "signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt " +
            "tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp " +
            "bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt " +
            "rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear " +
            "jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion " +
            "handleCollect handleDelete handleStatus handleSubmit heapFree " +
            "heapLimit heapSize jobHandle jobKill jobStatus jobTerminate " +
            "licenseLevel licenseStatus maxExecError sleep timeClose timeComp " +
            "timeElapsed timeExec timeStart"
        };
        var PARAMS = {
          className: "params",
          begin: /\(/,
          end: /\)/,
          excludeBegin: true,
          excludeEnd: true
        };
        var SYMBOLS = {
          className: "symbol",
          variants: [{ begin: /\=[lgenxc]=/ }, { begin: /\$/ }]
        };
        var QSTR = {
          // One-line quoted comment string
          className: "comment",
          variants: [{ begin: "'", end: "'" }, { begin: '"', end: '"' }],
          illegal: "\\n",
          contains: [hljs.BACKSLASH_ESCAPE]
        };
        var ASSIGNMENT = {
          begin: "/",
          end: "/",
          keywords: KEYWORDS,
          contains: [
            QSTR,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.APOS_STRING_MODE,
            hljs.C_NUMBER_MODE
          ]
        };
        var DESCTEXT = {
          // Parameter/set/variable description text
          begin: /[a-z][a-z0-9_]*(\([a-z0-9_, ]*\))?[ \t]+/,
          excludeBegin: true,
          end: "$",
          endsWithParent: true,
          contains: [
            QSTR,
            ASSIGNMENT,
            {
              className: "comment",
              begin: /([ ]*[a-z0-9&#*=?@>\\<:\-,()$\[\]_.{}!+%^]+)+/,
              relevance: 0
            }
          ]
        };

        return {
          aliases: ["gms"],
          case_insensitive: true,
          keywords: KEYWORDS,
          contains: [
            hljs.COMMENT(/^\$ontext/, /^\$offtext/),
            {
              className: "meta",
              begin: "^\\$[a-z0-9]+",
              end: "$",
              returnBegin: true,
              contains: [
                {
                  className: "meta-keyword",
                  begin: "^\\$[a-z0-9]+"
                }
              ]
            },
            hljs.COMMENT("^\\*", "$"),
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.APOS_STRING_MODE,
            // Declarations
            {
              beginKeywords:
                "set sets parameter parameters variable variables " +
                "scalar scalars equation equations",
              end: ";",
              contains: [
                hljs.COMMENT("^\\*", "$"),
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                hljs.QUOTE_STRING_MODE,
                hljs.APOS_STRING_MODE,
                ASSIGNMENT,
                DESCTEXT
              ]
            },
            {
              // table environment
              beginKeywords: "table",
              end: ";",
              returnBegin: true,
              contains: [
                {
                  // table header row
                  beginKeywords: "table",
                  end: "$",
                  contains: [DESCTEXT]
                },
                hljs.COMMENT("^\\*", "$"),
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                hljs.QUOTE_STRING_MODE,
                hljs.APOS_STRING_MODE,
                hljs.C_NUMBER_MODE
                // Table does not contain DESCTEXT or ASSIGNMENT
              ]
            },
            // Function definitions
            {
              className: "function",
              begin: /^[a-z][a-z0-9_,\-+' ()$]+\.{2}/,
              returnBegin: true,
              contains: [
                {
                  // Function title
                  className: "title",
                  begin: /^[a-z0-9_]+/
                },
                PARAMS,
                SYMBOLS
              ]
            },
            hljs.C_NUMBER_MODE,
            SYMBOLS
          ]
        };
      };

      /***/
    },
    /* 93 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            "and bool break call callexe checkinterrupt clear clearg closeall cls comlog compile " +
            "continue create debug declare delete disable dlibrary dllcall do dos ed edit else " +
            "elseif enable end endfor endif endp endo errorlog errorlogat expr external fn " +
            "for format goto gosub graph if keyword let lib library line load loadarray loadexe " +
            "loadf loadk loadm loadp loads loadx local locate loopnextindex lprint lpwidth lshow " +
            "matrix msym ndpclex new not open or output outwidth plot plotsym pop prcsn print " +
            "printdos proc push retp return rndcon rndmod rndmult rndseed run save saveall screen " +
            "scroll setarray show sparse stop string struct system trace trap threadfor " +
            "threadendfor threadbegin threadjoin threadstat threadend until use while winprint",
          built_in:
            "abs acf aconcat aeye amax amean AmericanBinomCall AmericanBinomCall_Greeks AmericanBinomCall_ImpVol " +
            "AmericanBinomPut AmericanBinomPut_Greeks AmericanBinomPut_ImpVol AmericanBSCall AmericanBSCall_Greeks " +
            "AmericanBSCall_ImpVol AmericanBSPut AmericanBSPut_Greeks AmericanBSPut_ImpVol amin amult annotationGetDefaults " +
            "annotationSetBkd annotationSetFont annotationSetLineColor annotationSetLineStyle annotationSetLineThickness " +
            "annualTradingDays arccos arcsin areshape arrayalloc arrayindex arrayinit arraytomat asciiload asclabel astd " +
            "astds asum atan atan2 atranspose axmargin balance band bandchol bandcholsol bandltsol bandrv bandsolpd bar " +
            "base10 begwind besselj bessely beta box boxcox cdfBeta cdfBetaInv cdfBinomial cdfBinomialInv cdfBvn cdfBvn2 " +
            "cdfBvn2e cdfCauchy cdfCauchyInv cdfChic cdfChii cdfChinc cdfChincInv cdfExp cdfExpInv cdfFc cdfFnc cdfFncInv " +
            "cdfGam cdfGenPareto cdfHyperGeo cdfLaplace cdfLaplaceInv cdfLogistic cdfLogisticInv cdfmControlCreate cdfMvn " +
            "cdfMvn2e cdfMvnce cdfMvne cdfMvt2e cdfMvtce cdfMvte cdfN cdfN2 cdfNc cdfNegBinomial cdfNegBinomialInv cdfNi " +
            "cdfPoisson cdfPoissonInv cdfRayleigh cdfRayleighInv cdfTc cdfTci cdfTnc cdfTvn cdfWeibull cdfWeibullInv cdir " +
            "ceil ChangeDir chdir chiBarSquare chol choldn cholsol cholup chrs close code cols colsf combinate combinated " +
            "complex con cond conj cons ConScore contour conv convertsatostr convertstrtosa corrm corrms corrvc corrx corrxs " +
            "cos cosh counts countwts crossprd crout croutp csrcol csrlin csvReadM csvReadSA cumprodc cumsumc curve cvtos " +
            "datacreate datacreatecomplex datalist dataload dataloop dataopen datasave date datestr datestring datestrymd " +
            "dayinyr dayofweek dbAddDatabase dbClose dbCommit dbCreateQuery dbExecQuery dbGetConnectOptions dbGetDatabaseName " +
            "dbGetDriverName dbGetDrivers dbGetHostName dbGetLastErrorNum dbGetLastErrorText dbGetNumericalPrecPolicy " +
            "dbGetPassword dbGetPort dbGetTableHeaders dbGetTables dbGetUserName dbHasFeature dbIsDriverAvailable dbIsOpen " +
            "dbIsOpenError dbOpen dbQueryBindValue dbQueryClear dbQueryCols dbQueryExecPrepared dbQueryFetchAllM dbQueryFetchAllSA " +
            "dbQueryFetchOneM dbQueryFetchOneSA dbQueryFinish dbQueryGetBoundValue dbQueryGetBoundValues dbQueryGetField " +
            "dbQueryGetLastErrorNum dbQueryGetLastErrorText dbQueryGetLastInsertID dbQueryGetLastQuery dbQueryGetPosition " +
            "dbQueryIsActive dbQueryIsForwardOnly dbQueryIsNull dbQueryIsSelect dbQueryIsValid dbQueryPrepare dbQueryRows " +
            "dbQuerySeek dbQuerySeekFirst dbQuerySeekLast dbQuerySeekNext dbQuerySeekPrevious dbQuerySetForwardOnly " +
            "dbRemoveDatabase dbRollback dbSetConnectOptions dbSetDatabaseName dbSetHostName dbSetNumericalPrecPolicy " +
            "dbSetPort dbSetUserName dbTransaction DeleteFile delif delrows denseToSp denseToSpRE denToZero design det detl " +
            "dfft dffti diag diagrv digamma doswin DOSWinCloseall DOSWinOpen dotfeq dotfeqmt dotfge dotfgemt dotfgt dotfgtmt " +
            "dotfle dotflemt dotflt dotfltmt dotfne dotfnemt draw drop dsCreate dstat dstatmt dstatmtControlCreate dtdate dtday " +
            "dttime dttodtv dttostr dttoutc dtvnormal dtvtodt dtvtoutc dummy dummybr dummydn eig eigh eighv eigv elapsedTradingDays " +
            "endwind envget eof eqSolve eqSolvemt eqSolvemtControlCreate eqSolvemtOutCreate eqSolveset erf erfc erfccplx erfcplx error " +
            "etdays ethsec etstr EuropeanBinomCall EuropeanBinomCall_Greeks EuropeanBinomCall_ImpVol EuropeanBinomPut " +
            "EuropeanBinomPut_Greeks EuropeanBinomPut_ImpVol EuropeanBSCall EuropeanBSCall_Greeks EuropeanBSCall_ImpVol " +
            "EuropeanBSPut EuropeanBSPut_Greeks EuropeanBSPut_ImpVol exctsmpl exec execbg exp extern eye fcheckerr fclearerr feq " +
            "feqmt fflush fft ffti fftm fftmi fftn fge fgemt fgets fgetsa fgetsat fgetst fgt fgtmt fileinfo filesa fle flemt " +
            "floor flt fltmt fmod fne fnemt fonts fopen formatcv formatnv fputs fputst fseek fstrerror ftell ftocv ftos ftostrC " +
            "gamma gammacplx gammaii gausset gdaAppend gdaCreate gdaDStat gdaDStatMat gdaGetIndex gdaGetName gdaGetNames gdaGetOrders " +
            "gdaGetType gdaGetTypes gdaGetVarInfo gdaIsCplx gdaLoad gdaPack gdaRead gdaReadByIndex gdaReadSome gdaReadSparse " +
            "gdaReadStruct gdaReportVarInfo gdaSave gdaUpdate gdaUpdateAndPack gdaVars gdaWrite gdaWrite32 gdaWriteSome getarray " +
            "getdims getf getGAUSShome getmatrix getmatrix4D getname getnamef getNextTradingDay getNextWeekDay getnr getorders " +
            "getpath getPreviousTradingDay getPreviousWeekDay getRow getscalar3D getscalar4D getTrRow getwind glm gradcplx gradMT " +
            "gradMTm gradMTT gradMTTm gradp graphprt graphset hasimag header headermt hess hessMT hessMTg hessMTgw hessMTm " +
            "hessMTmw hessMTT hessMTTg hessMTTgw hessMTTm hessMTw hessp hist histf histp hsec imag indcv indexcat indices indices2 " +
            "indicesf indicesfn indnv indsav integrate1d integrateControlCreate intgrat2 intgrat3 inthp1 inthp2 inthp3 inthp4 " +
            "inthpControlCreate intquad1 intquad2 intquad3 intrleav intrleavsa intrsect intsimp inv invpd invswp iscplx iscplxf " +
            "isden isinfnanmiss ismiss key keyav keyw lag lag1 lagn lapEighb lapEighi lapEighvb lapEighvi lapgEig lapgEigh lapgEighv " +
            "lapgEigv lapgSchur lapgSvdcst lapgSvds lapgSvdst lapSvdcusv lapSvds lapSvdusv ldlp ldlsol linSolve listwise ln lncdfbvn " +
            "lncdfbvn2 lncdfmvn lncdfn lncdfn2 lncdfnc lnfact lngammacplx lnpdfmvn lnpdfmvt lnpdfn lnpdft loadd loadstruct loadwind " +
            "loess loessmt loessmtControlCreate log loglog logx logy lower lowmat lowmat1 ltrisol lu lusol machEpsilon make makevars " +
            "makewind margin matalloc matinit mattoarray maxbytes maxc maxindc maxv maxvec mbesselei mbesselei0 mbesselei1 mbesseli " +
            "mbesseli0 mbesseli1 meanc median mergeby mergevar minc minindc minv miss missex missrv moment momentd movingave " +
            "movingaveExpwgt movingaveWgt nextindex nextn nextnevn nextwind ntos null null1 numCombinations ols olsmt olsmtControlCreate " +
            "olsqr olsqr2 olsqrmt ones optn optnevn orth outtyp pacf packedToSp packr parse pause pdfCauchy pdfChi pdfExp pdfGenPareto " +
            "pdfHyperGeo pdfLaplace pdfLogistic pdfn pdfPoisson pdfRayleigh pdfWeibull pi pinv pinvmt plotAddArrow plotAddBar plotAddBox " +
            "plotAddHist plotAddHistF plotAddHistP plotAddPolar plotAddScatter plotAddShape plotAddTextbox plotAddTS plotAddXY plotArea " +
            "plotBar plotBox plotClearLayout plotContour plotCustomLayout plotGetDefaults plotHist plotHistF plotHistP plotLayout " +
            "plotLogLog plotLogX plotLogY plotOpenWindow plotPolar plotSave plotScatter plotSetAxesPen plotSetBar plotSetBarFill " +
            "plotSetBarStacked plotSetBkdColor plotSetFill plotSetGrid plotSetLegend plotSetLineColor plotSetLineStyle plotSetLineSymbol " +
            "plotSetLineThickness plotSetNewWindow plotSetTitle plotSetWhichYAxis plotSetXAxisShow plotSetXLabel plotSetXRange " +
            "plotSetXTicInterval plotSetXTicLabel plotSetYAxisShow plotSetYLabel plotSetYRange plotSetZAxisShow plotSetZLabel " +
            "plotSurface plotTS plotXY polar polychar polyeval polygamma polyint polymake polymat polymroot polymult polyroot " +
            "pqgwin previousindex princomp printfm printfmt prodc psi putarray putf putvals pvCreate pvGetIndex pvGetParNames " +
            "pvGetParVector pvLength pvList pvPack pvPacki pvPackm pvPackmi pvPacks pvPacksi pvPacksm pvPacksmi pvPutParVector " +
            "pvTest pvUnpack QNewton QNewtonmt QNewtonmtControlCreate QNewtonmtOutCreate QNewtonSet QProg QProgmt QProgmtInCreate " +
            "qqr qqre qqrep qr qre qrep qrsol qrtsol qtyr qtyre qtyrep quantile quantiled qyr qyre qyrep qz rank rankindx readr " +
            "real reclassify reclassifyCuts recode recserar recsercp recserrc rerun rescale reshape rets rev rfft rffti rfftip rfftn " +
            "rfftnp rfftp rndBernoulli rndBeta rndBinomial rndCauchy rndChiSquare rndCon rndCreateState rndExp rndGamma rndGeo rndGumbel " +
            "rndHyperGeo rndi rndKMbeta rndKMgam rndKMi rndKMn rndKMnb rndKMp rndKMu rndKMvm rndLaplace rndLCbeta rndLCgam rndLCi rndLCn " +
            "rndLCnb rndLCp rndLCu rndLCvm rndLogNorm rndMTu rndMVn rndMVt rndn rndnb rndNegBinomial rndp rndPoisson rndRayleigh " +
            "rndStateSkip rndu rndvm rndWeibull rndWishart rotater round rows rowsf rref sampleData satostrC saved saveStruct savewind " +
            "scale scale3d scalerr scalinfnanmiss scalmiss schtoc schur searchsourcepath seekr select selif seqa seqm setdif setdifsa " +
            "setvars setvwrmode setwind shell shiftr sin singleindex sinh sleep solpd sortc sortcc sortd sorthc sorthcc sortind " +
            "sortindc sortmc sortr sortrc spBiconjGradSol spChol spConjGradSol spCreate spDenseSubmat spDiagRvMat spEigv spEye spLDL " +
            "spline spLU spNumNZE spOnes spreadSheetReadM spreadSheetReadSA spreadSheetWrite spScale spSubmat spToDense spTrTDense " +
            "spTScalar spZeros sqpSolve sqpSolveMT sqpSolveMTControlCreate sqpSolveMTlagrangeCreate sqpSolveMToutCreate sqpSolveSet " +
            "sqrt statements stdc stdsc stocv stof strcombine strindx strlen strput strrindx strsect strsplit strsplitPad strtodt " +
            "strtof strtofcplx strtriml strtrimr strtrunc strtruncl strtruncpad strtruncr submat subscat substute subvec sumc sumr " +
            "surface svd svd1 svd2 svdcusv svds svdusv sysstate tab tan tanh tempname threadBegin threadEnd threadEndFor threadFor " +
            "threadJoin threadStat time timedt timestr timeutc title tkf2eps tkf2ps tocart todaydt toeplitz token topolar trapchk " +
            "trigamma trimr trunc type typecv typef union unionsa uniqindx uniqindxsa unique uniquesa upmat upmat1 upper utctodt " +
            "utctodtv utrisol vals varCovMS varCovXS varget vargetl varmall varmares varput varputl vartypef vcm vcms vcx vcxs " +
            "vec vech vecr vector vget view viewxyz vlist vnamecv volume vput vread vtypecv wait waitc walkindex where window " +
            "writer xlabel xlsGetSheetCount xlsGetSheetSize xlsGetSheetTypes xlsMakeRange xlsReadM xlsReadSA xlsWrite xlsWriteM " +
            "xlsWriteSA xpnd xtics xy xyz ylabel ytics zeros zeta zlabel ztics cdfEmpirical dot h5create h5open h5read h5readAttribute " +
            "h5write h5writeAttribute ldl plotAddErrorBar plotAddSurface plotCDFEmpirical plotSetColormap plotSetContourLabels " +
            "plotSetLegendFont plotSetTextInterpreter plotSetXTicCount plotSetYTicCount plotSetZLevels powerm strjoin strtrim sylvester",
          literal:
            "DB_AFTER_LAST_ROW DB_ALL_TABLES DB_BATCH_OPERATIONS DB_BEFORE_FIRST_ROW DB_BLOB DB_EVENT_NOTIFICATIONS " +
            "DB_FINISH_QUERY DB_HIGH_PRECISION DB_LAST_INSERT_ID DB_LOW_PRECISION_DOUBLE DB_LOW_PRECISION_INT32 " +
            "DB_LOW_PRECISION_INT64 DB_LOW_PRECISION_NUMBERS DB_MULTIPLE_RESULT_SETS DB_NAMED_PLACEHOLDERS " +
            "DB_POSITIONAL_PLACEHOLDERS DB_PREPARED_QUERIES DB_QUERY_SIZE DB_SIMPLE_LOCKING DB_SYSTEM_TABLES DB_TABLES " +
            "DB_TRANSACTIONS DB_UNICODE DB_VIEWS"
        };

        var PREPROCESSOR = {
          className: "meta",
          begin: "#",
          end: "$",
          keywords: {
            "meta-keyword":
              "define definecs|10 undef ifdef ifndef iflight ifdllcall ifmac ifos2win ifunix else endif lineson linesoff srcfile srcline"
          },
          contains: [
            {
              begin: /\\\n/,
              relevance: 0
            },
            {
              beginKeywords: "include",
              end: "$",
              keywords: { "meta-keyword": "include" },
              contains: [
                {
                  className: "meta-string",
                  begin: '"',
                  end: '"',
                  illegal: "\\n"
                }
              ]
            },
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE
          ]
        };

        var FUNCTION_TITLE = hljs.UNDERSCORE_IDENT_RE + "\\s*\\(?";
        var PARSE_PARAMS = [
          {
            className: "params",
            begin: /\(/,
            end: /\)/,
            keywords: KEYWORDS,
            relevance: 0,
            contains: [
              hljs.C_NUMBER_MODE,
              hljs.C_LINE_COMMENT_MODE,
              hljs.C_BLOCK_COMMENT_MODE
            ]
          }
        ];

        return {
          aliases: ["gss"],
          case_insensitive: true, // language is case-insensitive
          keywords: KEYWORDS,
          illegal: "(\\{[%#]|[%#]\\})",
          contains: [
            hljs.C_NUMBER_MODE,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.COMMENT("@", "@"),
            PREPROCESSOR,
            {
              className: "string",
              begin: '"',
              end: '"',
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              className: "function",
              beginKeywords: "proc keyword",
              end: ";",
              excludeEnd: true,
              keywords: KEYWORDS,
              contains: [
                {
                  begin: FUNCTION_TITLE,
                  returnBegin: true,
                  contains: [hljs.UNDERSCORE_TITLE_MODE],
                  relevance: 0
                },
                hljs.C_NUMBER_MODE,
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                PREPROCESSOR
              ].concat(PARSE_PARAMS)
            },
            {
              className: "function",
              beginKeywords: "fn",
              end: ";",
              excludeEnd: true,
              keywords: KEYWORDS,
              contains: [
                {
                  begin: FUNCTION_TITLE + hljs.IDENT_RE + "\\)?\\s*\\=\\s*",
                  returnBegin: true,
                  contains: [hljs.UNDERSCORE_TITLE_MODE],
                  relevance: 0
                },
                hljs.C_NUMBER_MODE,
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ].concat(PARSE_PARAMS)
            },
            {
              className: "function",
              begin: "\\bexternal (proc|keyword|fn)\\s+",
              end: ";",
              excludeEnd: true,
              keywords: KEYWORDS,
              contains: [
                {
                  begin: FUNCTION_TITLE,
                  returnBegin: true,
                  contains: [hljs.UNDERSCORE_TITLE_MODE],
                  relevance: 0
                },
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },
            {
              className: "function",
              begin:
                "\\bexternal (matrix|string|array|sparse matrix|struct " +
                hljs.IDENT_RE +
                ")\\s+",
              end: ";",
              excludeEnd: true,
              keywords: KEYWORDS,
              contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]
            }
          ]
        };
      };

      /***/
    },
    /* 94 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var GCODE_IDENT_RE = "[A-Z_][A-Z0-9_.]*";
        var GCODE_CLOSE_RE = "\\%";
        var GCODE_KEYWORDS =
          "IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT " +
          "EQ LT GT NE GE LE OR XOR";
        var GCODE_START = {
          className: "meta",
          begin: "([O])([0-9]+)"
        };
        var GCODE_CODE = [
          hljs.C_LINE_COMMENT_MODE,
          hljs.C_BLOCK_COMMENT_MODE,
          hljs.COMMENT(/\(/, /\)/),
          hljs.inherit(hljs.C_NUMBER_MODE, {
            begin: "([-+]?([0-9]*\\.?[0-9]+\\.?))|" + hljs.C_NUMBER_RE
          }),
          hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null }),
          hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),
          {
            className: "name",
            begin: "([G])([0-9]+\\.?[0-9]?)"
          },
          {
            className: "name",
            begin: "([M])([0-9]+\\.?[0-9]?)"
          },
          {
            className: "attr",
            begin: "(VC|VS|#)",
            end: "(\\d+)"
          },
          {
            className: "attr",
            begin: "(VZOFX|VZOFY|VZOFZ)"
          },
          {
            className: "built_in",
            begin: "(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\[)",
            end: "([-+]?([0-9]*\\.?[0-9]+\\.?))(\\])"
          },
          {
            className: "symbol",
            variants: [
              {
                begin: "N",
                end: "\\d+",
                illegal: "\\W"
              }
            ]
          }
        ];

        return {
          aliases: ["nc"],
          // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.
          // However, most prefer all uppercase and uppercase is customary.
          case_insensitive: true,
          lexemes: GCODE_IDENT_RE,
          keywords: GCODE_KEYWORDS,
          contains: [
            {
              className: "meta",
              begin: GCODE_CLOSE_RE
            },
            GCODE_START
          ].concat(GCODE_CODE)
        };
      };

      /***/
    },
    /* 95 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["feature"],
          keywords:
            "Feature Background Ability Business Need Scenario Scenarios Scenario Outline Scenario Template Examples Given And Then But When",
          contains: [
            {
              className: "symbol",
              begin: "\\*",
              relevance: 0
            },
            {
              className: "meta",
              begin: "@[^@\\s]+"
            },
            {
              begin: "\\|",
              end: "\\|\\w*$",
              contains: [
                {
                  className: "string",
                  begin: "[^|]+"
                }
              ]
            },
            {
              className: "variable",
              begin: "<",
              end: ">"
            },
            hljs.HASH_COMMENT_MODE,
            {
              className: "string",
              begin: '"""',
              end: '"""'
            },
            hljs.QUOTE_STRING_MODE
          ]
        };
      };

      /***/
    },
    /* 96 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            keyword:
              // Statements
              "break continue discard do else for if return while switch case default " +
              // Qualifiers
              "attribute binding buffer ccw centroid centroid varying coherent column_major const cw " +
              "depth_any depth_greater depth_less depth_unchanged early_fragment_tests equal_spacing " +
              "flat fractional_even_spacing fractional_odd_spacing highp in index inout invariant " +
              "invocations isolines layout line_strip lines lines_adjacency local_size_x local_size_y " +
              "local_size_z location lowp max_vertices mediump noperspective offset origin_upper_left " +
              "out packed patch pixel_center_integer point_mode points precise precision quads r11f_g11f_b10f " +
              "r16 r16_snorm r16f r16i r16ui r32f r32i r32ui r8 r8_snorm r8i r8ui readonly restrict " +
              "rg16 rg16_snorm rg16f rg16i rg16ui rg32f rg32i rg32ui rg8 rg8_snorm rg8i rg8ui rgb10_a2 " +
              "rgb10_a2ui rgba16 rgba16_snorm rgba16f rgba16i rgba16ui rgba32f rgba32i rgba32ui rgba8 " +
              "rgba8_snorm rgba8i rgba8ui row_major sample shared smooth std140 std430 stream triangle_strip " +
              "triangles triangles_adjacency uniform varying vertices volatile writeonly",
            type:
              "atomic_uint bool bvec2 bvec3 bvec4 dmat2 dmat2x2 dmat2x3 dmat2x4 dmat3 dmat3x2 dmat3x3 " +
              "dmat3x4 dmat4 dmat4x2 dmat4x3 dmat4x4 double dvec2 dvec3 dvec4 float iimage1D iimage1DArray " +
              "iimage2D iimage2DArray iimage2DMS iimage2DMSArray iimage2DRect iimage3D iimageBuffer" +
              "iimageCube iimageCubeArray image1D image1DArray image2D image2DArray image2DMS image2DMSArray " +
              "image2DRect image3D imageBuffer imageCube imageCubeArray int isampler1D isampler1DArray " +
              "isampler2D isampler2DArray isampler2DMS isampler2DMSArray isampler2DRect isampler3D " +
              "isamplerBuffer isamplerCube isamplerCubeArray ivec2 ivec3 ivec4 mat2 mat2x2 mat2x3 " +
              "mat2x4 mat3 mat3x2 mat3x3 mat3x4 mat4 mat4x2 mat4x3 mat4x4 sampler1D sampler1DArray " +
              "sampler1DArrayShadow sampler1DShadow sampler2D sampler2DArray sampler2DArrayShadow " +
              "sampler2DMS sampler2DMSArray sampler2DRect sampler2DRectShadow sampler2DShadow sampler3D " +
              "samplerBuffer samplerCube samplerCubeArray samplerCubeArrayShadow samplerCubeShadow " +
              "image1D uimage1DArray uimage2D uimage2DArray uimage2DMS uimage2DMSArray uimage2DRect " +
              "uimage3D uimageBuffer uimageCube uimageCubeArray uint usampler1D usampler1DArray " +
              "usampler2D usampler2DArray usampler2DMS usampler2DMSArray usampler2DRect usampler3D " +
              "samplerBuffer usamplerCube usamplerCubeArray uvec2 uvec3 uvec4 vec2 vec3 vec4 void",
            built_in:
              // Constants
              "gl_MaxAtomicCounterBindings gl_MaxAtomicCounterBufferSize gl_MaxClipDistances gl_MaxClipPlanes " +
              "gl_MaxCombinedAtomicCounterBuffers gl_MaxCombinedAtomicCounters gl_MaxCombinedImageUniforms " +
              "gl_MaxCombinedImageUnitsAndFragmentOutputs gl_MaxCombinedTextureImageUnits gl_MaxComputeAtomicCounterBuffers " +
              "gl_MaxComputeAtomicCounters gl_MaxComputeImageUniforms gl_MaxComputeTextureImageUnits " +
              "gl_MaxComputeUniformComponents gl_MaxComputeWorkGroupCount gl_MaxComputeWorkGroupSize " +
              "gl_MaxDrawBuffers gl_MaxFragmentAtomicCounterBuffers gl_MaxFragmentAtomicCounters " +
              "gl_MaxFragmentImageUniforms gl_MaxFragmentInputComponents gl_MaxFragmentInputVectors " +
              "gl_MaxFragmentUniformComponents gl_MaxFragmentUniformVectors gl_MaxGeometryAtomicCounterBuffers " +
              "gl_MaxGeometryAtomicCounters gl_MaxGeometryImageUniforms gl_MaxGeometryInputComponents " +
              "gl_MaxGeometryOutputComponents gl_MaxGeometryOutputVertices gl_MaxGeometryTextureImageUnits " +
              "gl_MaxGeometryTotalOutputComponents gl_MaxGeometryUniformComponents gl_MaxGeometryVaryingComponents " +
              "gl_MaxImageSamples gl_MaxImageUnits gl_MaxLights gl_MaxPatchVertices gl_MaxProgramTexelOffset " +
              "gl_MaxTessControlAtomicCounterBuffers gl_MaxTessControlAtomicCounters gl_MaxTessControlImageUniforms " +
              "gl_MaxTessControlInputComponents gl_MaxTessControlOutputComponents gl_MaxTessControlTextureImageUnits " +
              "gl_MaxTessControlTotalOutputComponents gl_MaxTessControlUniformComponents " +
              "gl_MaxTessEvaluationAtomicCounterBuffers gl_MaxTessEvaluationAtomicCounters " +
              "gl_MaxTessEvaluationImageUniforms gl_MaxTessEvaluationInputComponents gl_MaxTessEvaluationOutputComponents " +
              "gl_MaxTessEvaluationTextureImageUnits gl_MaxTessEvaluationUniformComponents " +
              "gl_MaxTessGenLevel gl_MaxTessPatchComponents gl_MaxTextureCoords gl_MaxTextureImageUnits " +
              "gl_MaxTextureUnits gl_MaxVaryingComponents gl_MaxVaryingFloats gl_MaxVaryingVectors " +
              "gl_MaxVertexAtomicCounterBuffers gl_MaxVertexAtomicCounters gl_MaxVertexAttribs gl_MaxVertexImageUniforms " +
              "gl_MaxVertexOutputComponents gl_MaxVertexOutputVectors gl_MaxVertexTextureImageUnits " +
              "gl_MaxVertexUniformComponents gl_MaxVertexUniformVectors gl_MaxViewports gl_MinProgramTexelOffset " +
              // Variables
              "gl_BackColor gl_BackLightModelProduct gl_BackLightProduct gl_BackMaterial " +
              "gl_BackSecondaryColor gl_ClipDistance gl_ClipPlane gl_ClipVertex gl_Color " +
              "gl_DepthRange gl_EyePlaneQ gl_EyePlaneR gl_EyePlaneS gl_EyePlaneT gl_Fog gl_FogCoord " +
              "gl_FogFragCoord gl_FragColor gl_FragCoord gl_FragData gl_FragDepth gl_FrontColor " +
              "gl_FrontFacing gl_FrontLightModelProduct gl_FrontLightProduct gl_FrontMaterial " +
              "gl_FrontSecondaryColor gl_GlobalInvocationID gl_InstanceID gl_InvocationID gl_Layer gl_LightModel " +
              "gl_LightSource gl_LocalInvocationID gl_LocalInvocationIndex gl_ModelViewMatrix " +
              "gl_ModelViewMatrixInverse gl_ModelViewMatrixInverseTranspose gl_ModelViewMatrixTranspose " +
              "gl_ModelViewProjectionMatrix gl_ModelViewProjectionMatrixInverse gl_ModelViewProjectionMatrixInverseTranspose " +
              "gl_ModelViewProjectionMatrixTranspose gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 " +
              "gl_MultiTexCoord3 gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 " +
              "gl_Normal gl_NormalMatrix gl_NormalScale gl_NumSamples gl_NumWorkGroups gl_ObjectPlaneQ " +
              "gl_ObjectPlaneR gl_ObjectPlaneS gl_ObjectPlaneT gl_PatchVerticesIn gl_Point gl_PointCoord " +
              "gl_PointSize gl_Position gl_PrimitiveID gl_PrimitiveIDIn gl_ProjectionMatrix gl_ProjectionMatrixInverse " +
              "gl_ProjectionMatrixInverseTranspose gl_ProjectionMatrixTranspose gl_SampleID gl_SampleMask " +
              "gl_SampleMaskIn gl_SamplePosition gl_SecondaryColor gl_TessCoord gl_TessLevelInner gl_TessLevelOuter " +
              "gl_TexCoord gl_TextureEnvColor gl_TextureMatrix gl_TextureMatrixInverse gl_TextureMatrixInverseTranspose " +
              "gl_TextureMatrixTranspose gl_Vertex gl_VertexID gl_ViewportIndex gl_WorkGroupID gl_WorkGroupSize gl_in gl_out " +
              // Functions
              "EmitStreamVertex EmitVertex EndPrimitive EndStreamPrimitive abs acos acosh all any asin " +
              "asinh atan atanh atomicAdd atomicAnd atomicCompSwap atomicCounter atomicCounterDecrement " +
              "atomicCounterIncrement atomicExchange atomicMax atomicMin atomicOr atomicXor barrier " +
              "bitCount bitfieldExtract bitfieldInsert bitfieldReverse ceil clamp cos cosh cross " +
              "dFdx dFdy degrees determinant distance dot equal exp exp2 faceforward findLSB findMSB " +
              "floatBitsToInt floatBitsToUint floor fma fract frexp ftransform fwidth greaterThan " +
              "greaterThanEqual groupMemoryBarrier imageAtomicAdd imageAtomicAnd imageAtomicCompSwap " +
              "imageAtomicExchange imageAtomicMax imageAtomicMin imageAtomicOr imageAtomicXor imageLoad " +
              "imageSize imageStore imulExtended intBitsToFloat interpolateAtCentroid interpolateAtOffset " +
              "interpolateAtSample inverse inversesqrt isinf isnan ldexp length lessThan lessThanEqual log " +
              "log2 matrixCompMult max memoryBarrier memoryBarrierAtomicCounter memoryBarrierBuffer " +
              "memoryBarrierImage memoryBarrierShared min mix mod modf noise1 noise2 noise3 noise4 " +
              "normalize not notEqual outerProduct packDouble2x32 packHalf2x16 packSnorm2x16 packSnorm4x8 " +
              "packUnorm2x16 packUnorm4x8 pow radians reflect refract round roundEven shadow1D shadow1DLod " +
              "shadow1DProj shadow1DProjLod shadow2D shadow2DLod shadow2DProj shadow2DProjLod sign sin sinh " +
              "smoothstep sqrt step tan tanh texelFetch texelFetchOffset texture texture1D texture1DLod " +
              "texture1DProj texture1DProjLod texture2D texture2DLod texture2DProj texture2DProjLod " +
              "texture3D texture3DLod texture3DProj texture3DProjLod textureCube textureCubeLod " +
              "textureGather textureGatherOffset textureGatherOffsets textureGrad textureGradOffset " +
              "textureLod textureLodOffset textureOffset textureProj textureProjGrad textureProjGradOffset " +
              "textureProjLod textureProjLodOffset textureProjOffset textureQueryLevels textureQueryLod " +
              "textureSize transpose trunc uaddCarry uintBitsToFloat umulExtended unpackDouble2x32 " +
              "unpackHalf2x16 unpackSnorm2x16 unpackSnorm4x8 unpackUnorm2x16 unpackUnorm4x8 usubBorrow",
            literal: "true false"
          },
          illegal: '"',
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.C_NUMBER_MODE,
            {
              className: "meta",
              begin: "#",
              end: "$"
            }
          ]
        };
      };

      /***/
    },
    /* 97 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var GO_KEYWORDS = {
          keyword:
            "break default func interface select case map struct chan else goto package switch " +
            "const fallthrough if range type continue for import return var go defer " +
            "bool byte complex64 complex128 float32 float64 int8 int16 int32 int64 string uint8 " +
            "uint16 uint32 uint64 int uint uintptr rune",
          literal: "true false iota nil",
          built_in:
            "append cap close complex copy imag len make new panic print println real recover delete"
        };
        return {
          aliases: ["golang"],
          keywords: GO_KEYWORDS,
          illegal: "</",
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: "string",
              variants: [
                hljs.QUOTE_STRING_MODE,
                { begin: "'", end: "[^\\\\]'" },
                { begin: "`", end: "`" }
              ]
            },
            {
              className: "number",
              variants: [
                { begin: hljs.C_NUMBER_RE + "[dflsi]", relevance: 1 },
                hljs.C_NUMBER_MODE
              ]
            },
            {
              begin: /:=/ // relevance booster
            },
            {
              className: "function",
              beginKeywords: "func",
              end: /\s*\{/,
              excludeEnd: true,
              contains: [
                hljs.TITLE_MODE,
                {
                  className: "params",
                  begin: /\(/,
                  end: /\)/,
                  keywords: GO_KEYWORDS,
                  illegal: /["']/
                }
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 98 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            keyword:
              "println readln print import module function local return let var " +
              "while for foreach times in case when match with break continue " +
              "augment augmentation each find filter reduce " +
              "if then else otherwise try catch finally raise throw orIfNull " +
              "DynamicObject|10 DynamicVariable struct Observable map set vector list array",
            literal: "true false null"
          },
          contains: [
            hljs.HASH_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE,
            {
              className: "meta",
              begin: "@[A-Za-z]+"
            }
          ]
        };
      };

      /***/
    },
    /* 99 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          case_insensitive: true,
          keywords: {
            keyword:
              "task project allprojects subprojects artifacts buildscript configurations " +
              "dependencies repositories sourceSets description delete from into include " +
              "exclude source classpath destinationDir includes options sourceCompatibility " +
              "targetCompatibility group flatDir doLast doFirst flatten todir fromdir ant " +
              "def abstract break case catch continue default do else extends final finally " +
              "for if implements instanceof native new private protected public return static " +
              "switch synchronized throw throws transient try volatile while strictfp package " +
              "import false null super this true antlrtask checkstyle codenarc copy boolean " +
              "byte char class double float int interface long short void compile runTime " +
              "file fileTree abs any append asList asWritable call collect compareTo count " +
              "div dump each eachByte eachFile eachLine every find findAll flatten getAt " +
              "getErr getIn getOut getText grep immutable inject inspect intersect invokeMethods " +
              "isCase join leftShift minus multiply newInputStream newOutputStream newPrintWriter " +
              "newReader newWriter next plus pop power previous print println push putAt read " +
              "readBytes readLines reverse reverseEach round size sort splitEachLine step subMap " +
              "times toInteger toList tokenize upto waitForOrKill withPrintWriter withReader " +
              "withStream withWriter withWriterAppend write writeLine"
          },
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.NUMBER_MODE,
            hljs.REGEXP_MODE
          ]
        };
      };

      /***/
    },
    /* 100 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            literal: "true false null",
            keyword:
              "byte short char int long boolean float double void " +
              // groovy specific keywords
              "def as in assert trait " +
              // common keywords with Java
              "super this abstract static volatile transient public private protected synchronized final " +
              "class interface enum if else for while switch case break default continue " +
              "throw throws try catch finally implements extends new import package return instanceof"
          },

          contains: [
            hljs.COMMENT("/\\*\\*", "\\*/", {
              relevance: 0,
              contains: [
                {
                  // eat up @'s in emails to prevent them to be recognized as doctags
                  begin: /\w+@/,
                  relevance: 0
                },
                {
                  className: "doctag",
                  begin: "@[A-Za-z]+"
                }
              ]
            }),
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: "string",
              begin: '"""',
              end: '"""'
            },
            {
              className: "string",
              begin: "'''",
              end: "'''"
            },
            {
              className: "string",
              begin: "\\$/",
              end: "/\\$",
              relevance: 10
            },
            hljs.APOS_STRING_MODE,
            {
              className: "regexp",
              begin: /~?\/[^\/\n]+\//,
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            hljs.QUOTE_STRING_MODE,
            {
              className: "meta",
              begin: "^#!/usr/bin/env",
              end: "$",
              illegal: "\n"
            },
            hljs.BINARY_NUMBER_MODE,
            {
              className: "class",
              beginKeywords: "class interface trait enum",
              end: "{",
              illegal: ":",
              contains: [
                { beginKeywords: "extends implements" },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            },
            hljs.C_NUMBER_MODE,
            {
              className: "meta",
              begin: "@[A-Za-z]+"
            },
            {
              // highlight map keys and named parameters as strings
              className: "string",
              begin: /[^\?]{0}[A-Za-z0-9_$]+ *:/
            },
            {
              // catch middle element of the ternary operator
              // to avoid highlight it as a label, named parameter, or map key
              begin: /\?/,
              end: /\:/
            },
            {
              // highlight labeled statements
              className: "symbol",
              begin: "^\\s*[A-Za-z0-9_$]+:",
              relevance: 0
            }
          ],
          illegal: /#|<\//
        };
      };

      /***/
    },
    /* 101 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        // TODO support filter tags like :javascript, support inline HTML
        return {
          case_insensitive: true,
          contains: [
            {
              className: "meta",
              begin:
                "^!!!( (5|1\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\b.*))?$",
              relevance: 10
            },
            // FIXME these comments should be allowed to span indented lines
            hljs.COMMENT("^\\s*(!=#|=#|-#|/).*$", false, {
              relevance: 0
            }),
            {
              begin: "^\\s*(-|=|!=)(?!#)",
              starts: {
                end: "\\n",
                subLanguage: "ruby"
              }
            },
            {
              className: "tag",
              begin: "^\\s*%",
              contains: [
                {
                  className: "selector-tag",
                  begin: "\\w+"
                },
                {
                  className: "selector-id",
                  begin: "#[\\w-]+"
                },
                {
                  className: "selector-class",
                  begin: "\\.[\\w-]+"
                },
                {
                  begin: "{\\s*",
                  end: "\\s*}",
                  contains: [
                    {
                      begin: ":\\w+\\s*=>",
                      end: ",\\s+",
                      returnBegin: true,
                      endsWithParent: true,
                      contains: [
                        {
                          className: "attr",
                          begin: ":\\w+"
                        },
                        hljs.APOS_STRING_MODE,
                        hljs.QUOTE_STRING_MODE,
                        {
                          begin: "\\w+",
                          relevance: 0
                        }
                      ]
                    }
                  ]
                },
                {
                  begin: "\\(\\s*",
                  end: "\\s*\\)",
                  excludeEnd: true,
                  contains: [
                    {
                      begin: "\\w+\\s*=",
                      end: "\\s+",
                      returnBegin: true,
                      endsWithParent: true,
                      contains: [
                        {
                          className: "attr",
                          begin: "\\w+",
                          relevance: 0
                        },
                        hljs.APOS_STRING_MODE,
                        hljs.QUOTE_STRING_MODE,
                        {
                          begin: "\\w+",
                          relevance: 0
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              begin: "^\\s*[=~]\\s*"
            },
            {
              begin: "#{",
              starts: {
                end: "}",
                subLanguage: "ruby"
              }
            }
          ]
        };
      };

      /***/
    },
    /* 102 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var BUILT_INS = {
          "builtin-name":
            "each in with if else unless bindattr action collection debugger log outlet template unbound view yield"
        };
        return {
          aliases: ["hbs", "html.hbs", "html.handlebars"],
          case_insensitive: true,
          subLanguage: "xml",
          contains: [
            hljs.COMMENT("{{!(--)?", "(--)?}}"),
            {
              className: "template-tag",
              begin: /\{\{[#\/]/,
              end: /\}\}/,
              contains: [
                {
                  className: "name",
                  begin: /[a-zA-Z\.-]+/,
                  keywords: BUILT_INS,
                  starts: {
                    endsWithParent: true,
                    relevance: 0,
                    contains: [hljs.QUOTE_STRING_MODE]
                  }
                }
              ]
            },
            {
              className: "template-variable",
              begin: /\{\{/,
              end: /\}\}/,
              keywords: BUILT_INS
            }
          ]
        };
      };

      /***/
    },
    /* 103 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var COMMENT = {
          variants: [
            hljs.COMMENT("--", "$"),
            hljs.COMMENT("{-", "-}", {
              contains: ["self"]
            })
          ]
        };

        var PRAGMA = {
          className: "meta",
          begin: "{-#",
          end: "#-}"
        };

        var PREPROCESSOR = {
          className: "meta",
          begin: "^#",
          end: "$"
        };

        var CONSTRUCTOR = {
          className: "type",
          begin: "\\b[A-Z][\\w']*", // TODO: other constructors (build-in, infix).
          relevance: 0
        };

        var LIST = {
          begin: "\\(",
          end: "\\)",
          illegal: '"',
          contains: [
            PRAGMA,
            PREPROCESSOR,
            {
              className: "type",
              begin: "\\b[A-Z][\\w]*(\\((\\.\\.|,|\\w+)\\))?"
            },
            hljs.inherit(hljs.TITLE_MODE, { begin: "[_a-z][\\w']*" }),
            COMMENT
          ]
        };

        var RECORD = {
          begin: "{",
          end: "}",
          contains: LIST.contains
        };

        return {
          aliases: ["hs"],
          keywords:
            "let in if then else case of where do module import hiding " +
            "qualified type data newtype deriving class instance as default " +
            "infix infixl infixr foreign export ccall stdcall cplusplus " +
            "jvm dotnet safe unsafe family forall mdo proc rec",
          contains: [
            // Top-level constructions.

            {
              beginKeywords: "module",
              end: "where",
              keywords: "module where",
              contains: [LIST, COMMENT],
              illegal: "\\W\\.|;"
            },
            {
              begin: "\\bimport\\b",
              end: "$",
              keywords: "import qualified as hiding",
              contains: [LIST, COMMENT],
              illegal: "\\W\\.|;"
            },

            {
              className: "class",
              begin: "^(\\s*)?(class|instance)\\b",
              end: "where",
              keywords: "class family instance where",
              contains: [CONSTRUCTOR, LIST, COMMENT]
            },
            {
              className: "class",
              begin: "\\b(data|(new)?type)\\b",
              end: "$",
              keywords: "data family type newtype deriving",
              contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD, COMMENT]
            },
            {
              beginKeywords: "default",
              end: "$",
              contains: [CONSTRUCTOR, LIST, COMMENT]
            },
            {
              beginKeywords: "infix infixl infixr",
              end: "$",
              contains: [hljs.C_NUMBER_MODE, COMMENT]
            },
            {
              begin: "\\bforeign\\b",
              end: "$",
              keywords:
                "foreign import export ccall stdcall cplusplus jvm " +
                "dotnet safe unsafe",
              contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE, COMMENT]
            },
            {
              className: "meta",
              begin: "#!\\/usr\\/bin\\/env runhaskell",
              end: "$"
            },

            // "Whitespaces".

            PRAGMA,
            PREPROCESSOR,

            // Literals and names.

            // TODO: characters.
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE,
            CONSTRUCTOR,
            hljs.inherit(hljs.TITLE_MODE, { begin: "^[_a-z][\\w']*" }),

            COMMENT,

            { begin: "->|<-" } // No markup, relevance booster
          ]
        };
      };

      /***/
    },
    /* 104 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENT_RE = "[a-zA-Z_$][a-zA-Z0-9_$]*";
        var IDENT_FUNC_RETURN_TYPE_RE = "([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)";

        var HAXE_BASIC_TYPES = "Int Float String Bool Dynamic Void Array ";

        return {
          aliases: ["hx"],
          keywords: {
            keyword:
              "break case cast catch continue default do dynamic else enum extern " +
              "for function here if import in inline never new override package private get set " +
              "public return static super switch this throw trace try typedef untyped using var while " +
              HAXE_BASIC_TYPES,
            built_in: "trace this",
            literal: "true false null _"
          },
          contains: [
            {
              className: "string", // interpolate-able strings
              begin: "'",
              end: "'",
              contains: [
                hljs.BACKSLASH_ESCAPE,
                {
                  className: "subst", // interpolation
                  begin: "\\$\\{",
                  end: "\\}"
                },
                {
                  className: "subst", // interpolation
                  begin: "\\$",
                  end: "\\W}"
                }
              ]
            },
            hljs.QUOTE_STRING_MODE,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.C_NUMBER_MODE,
            {
              className: "meta", // compiler meta
              begin: "@:",
              end: "$"
            },
            {
              className: "meta", // compiler conditionals
              begin: "#",
              end: "$",
              keywords: { "meta-keyword": "if else elseif end error" }
            },
            {
              className: "type", // function types
              begin: ":[ \t]*",
              end: "[^A-Za-z0-9_ \t\\->]",
              excludeBegin: true,
              excludeEnd: true,
              relevance: 0
            },
            {
              className: "type", // types
              begin: ":[ \t]*",
              end: "\\W",
              excludeBegin: true,
              excludeEnd: true
            },
            {
              className: "type", // instantiation
              begin: "new *",
              end: "\\W",
              excludeBegin: true,
              excludeEnd: true
            },
            {
              className: "class", // enums
              beginKeywords: "enum",
              end: "\\{",
              contains: [hljs.TITLE_MODE]
            },
            {
              className: "class", // abstracts
              beginKeywords: "abstract",
              end: "[\\{$]",
              contains: [
                {
                  className: "type",
                  begin: "\\(",
                  end: "\\)",
                  excludeBegin: true,
                  excludeEnd: true
                },
                {
                  className: "type",
                  begin: "from +",
                  end: "\\W",
                  excludeBegin: true,
                  excludeEnd: true
                },
                {
                  className: "type",
                  begin: "to +",
                  end: "\\W",
                  excludeBegin: true,
                  excludeEnd: true
                },
                hljs.TITLE_MODE
              ],
              keywords: {
                keyword: "abstract from to"
              }
            },
            {
              className: "class", // classes
              begin: "\\b(class|interface) +",
              end: "[\\{$]",
              excludeEnd: true,
              keywords: "class interface",
              contains: [
                {
                  className: "keyword",
                  begin: "\\b(extends|implements) +",
                  keywords: "extends implements",
                  contains: [
                    {
                      className: "type",
                      begin: hljs.IDENT_RE,
                      relevance: 0
                    }
                  ]
                },
                hljs.TITLE_MODE
              ]
            },
            {
              className: "function",
              beginKeywords: "function",
              end: "\\(",
              excludeEnd: true,
              illegal: "\\S",
              contains: [hljs.TITLE_MODE]
            }
          ],
          illegal: /<\//
        };
      };

      /***/
    },
    /* 105 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          case_insensitive: true,
          lexemes: /[\w\._]+/,
          keywords:
            "goto gosub return break repeat loop continue wait await dim sdim foreach dimtype dup dupptr end stop newmod delmod mref run exgoto on mcall assert logmes newlab resume yield onexit onerror onkey onclick oncmd exist delete mkdir chdir dirlist bload bsave bcopy memfile if else poke wpoke lpoke getstr chdpm memexpand memcpy memset notesel noteadd notedel noteload notesave randomize noteunsel noteget split strrep setease button chgdisp exec dialog mmload mmplay mmstop mci pset pget syscolor mes print title pos circle cls font sysfont objsize picload color palcolor palette redraw width gsel gcopy gzoom gmode bmpsave hsvcolor getkey listbox chkbox combox input mesbox buffer screen bgscr mouse objsel groll line clrobj boxf objprm objmode stick grect grotate gsquare gradf objimage objskip objenable celload celdiv celput newcom querycom delcom cnvstow comres axobj winobj sendmsg comevent comevarg sarrayconv callfunc cnvwtos comevdisp libptr system hspstat hspver stat cnt err strsize looplev sublev iparam wparam lparam refstr refdval int rnd strlen length length2 length3 length4 vartype gettime peek wpeek lpeek varptr varuse noteinfo instr abs limit getease str strmid strf getpath strtrim sin cos tan atan sqrt double absf expf logf limitf powf geteasef mousex mousey mousew hwnd hinstance hdc ginfo objinfo dirinfo sysinfo thismod __hspver__ __hsp30__ __date__ __time__ __line__ __file__ _debug __hspdef__ and or xor not screen_normal screen_palette screen_hide screen_fixedsize screen_tool screen_frame gmode_gdi gmode_mem gmode_rgb0 gmode_alpha gmode_rgb0alpha gmode_add gmode_sub gmode_pixela ginfo_mx ginfo_my ginfo_act ginfo_sel ginfo_wx1 ginfo_wy1 ginfo_wx2 ginfo_wy2 ginfo_vx ginfo_vy ginfo_sizex ginfo_sizey ginfo_winx ginfo_winy ginfo_mesx ginfo_mesy ginfo_r ginfo_g ginfo_b ginfo_paluse ginfo_dispx ginfo_dispy ginfo_cx ginfo_cy ginfo_intid ginfo_newid ginfo_sx ginfo_sy objinfo_mode objinfo_bmscr objinfo_hwnd notemax notesize dir_cur dir_exe dir_win dir_sys dir_cmdline dir_desktop dir_mydoc dir_tv font_normal font_bold font_italic font_underline font_strikeout font_antialias objmode_normal objmode_guifont objmode_usefont gsquare_grad msgothic msmincho do until while wend for next _break _continue switch case default swbreak swend ddim ldim alloc m_pi rad2deg deg2rad ease_linear ease_quad_in ease_quad_out ease_quad_inout ease_cubic_in ease_cubic_out ease_cubic_inout ease_quartic_in ease_quartic_out ease_quartic_inout ease_bounce_in ease_bounce_out ease_bounce_inout ease_shake_in ease_shake_out ease_shake_inout ease_loop",
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.APOS_STRING_MODE,

            {
              // multi-line string
              className: "string",
              begin: '{"',
              end: '"}',
              contains: [hljs.BACKSLASH_ESCAPE]
            },

            hljs.COMMENT(";", "$", { relevance: 0 }),

            {
              // pre-processor
              className: "meta",
              begin: "#",
              end: "$",
              keywords: {
                "meta-keyword":
                  "addion cfunc cmd cmpopt comfunc const defcfunc deffunc define else endif enum epack func global if ifdef ifndef include modcfunc modfunc modinit modterm module pack packopt regcmd runtime undef usecom uselib"
              },
              contains: [
                hljs.inherit(hljs.QUOTE_STRING_MODE, {
                  className: "meta-string"
                }),
                hljs.NUMBER_MODE,
                hljs.C_NUMBER_MODE,
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },

            {
              // label
              className: "symbol",
              begin: "^\\*(\\w+|@)"
            },

            hljs.NUMBER_MODE,
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 106 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var BUILT_INS =
          "action collection component concat debugger each each-in else get hash if input link-to loc log mut outlet partial query-params render textarea unbound unless with yield view";

        var ATTR_ASSIGNMENT = {
          illegal: /\}\}/,
          begin: /[a-zA-Z0-9_]+=/,
          returnBegin: true,
          relevance: 0,
          contains: [
            {
              className: "attr",
              begin: /[a-zA-Z0-9_]+/
            }
          ]
        };

        var SUB_EXPR = {
          illegal: /\}\}/,
          begin: /\)/,
          end: /\)/,
          contains: [
            {
              begin: /[a-zA-Z\.\-]+/,
              keywords: { built_in: BUILT_INS },
              starts: {
                endsWithParent: true,
                relevance: 0,
                contains: [hljs.QUOTE_STRING_MODE]
              }
            }
          ]
        };

        var TAG_INNARDS = {
          endsWithParent: true,
          relevance: 0,
          keywords: { keyword: "as", built_in: BUILT_INS },
          contains: [hljs.QUOTE_STRING_MODE, ATTR_ASSIGNMENT, hljs.NUMBER_MODE]
        };

        return {
          case_insensitive: true,
          subLanguage: "xml",
          contains: [
            hljs.COMMENT("{{!(--)?", "(--)?}}"),
            {
              className: "template-tag",
              begin: /\{\{[#\/]/,
              end: /\}\}/,
              contains: [
                {
                  className: "name",
                  begin: /[a-zA-Z\.\-]+/,
                  keywords: { "builtin-name": BUILT_INS },
                  starts: TAG_INNARDS
                }
              ]
            },
            {
              className: "template-variable",
              begin: /\{\{[a-zA-Z][a-zA-Z\-]+/,
              end: /\}\}/,
              keywords: { keyword: "as", built_in: BUILT_INS },
              contains: [hljs.QUOTE_STRING_MODE]
            }
          ]
        };
      };

      /***/
    },
    /* 107 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var VERSION = "HTTP/[0-9\\.]+";
        return {
          aliases: ["https"],
          illegal: "\\S",
          contains: [
            {
              begin: "^" + VERSION,
              end: "$",
              contains: [{ className: "number", begin: "\\b\\d{3}\\b" }]
            },
            {
              begin: "^[A-Z]+ (.*?) " + VERSION + "$",
              returnBegin: true,
              end: "$",
              contains: [
                {
                  className: "string",
                  begin: " ",
                  end: " ",
                  excludeBegin: true,
                  excludeEnd: true
                },
                {
                  begin: VERSION
                },
                {
                  className: "keyword",
                  begin: "[A-Z]+"
                }
              ]
            },
            {
              className: "attribute",
              begin: "^\\w",
              end: ": ",
              excludeEnd: true,
              illegal: "\\n|\\s|=",
              starts: { end: "$", relevance: 0 }
            },
            {
              begin: "\\n\\n",
              starts: { subLanguage: [], endsWithParent: true }
            }
          ]
        };
      };

      /***/
    },
    /* 108 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var keywords = {
          "builtin-name":
            // keywords
            "!= % %= & &= * ** **= *= *map " +
            "+ += , --build-class-- --import-- -= . / // //= " +
            "/= < << <<= <= = > >= >> >>= " +
            "@ @= ^ ^= abs accumulate all and any ap-compose " +
            "ap-dotimes ap-each ap-each-while ap-filter ap-first ap-if ap-last ap-map ap-map-when ap-pipe " +
            "ap-reduce ap-reject apply as-> ascii assert assoc bin break butlast " +
            "callable calling-module-name car case cdr chain chr coll? combinations compile " +
            "compress cond cons cons? continue count curry cut cycle dec " +
            "def default-method defclass defmacro defmacro-alias defmacro/g! defmain defmethod defmulti defn " +
            "defn-alias defnc defnr defreader defseq del delattr delete-route dict-comp dir " +
            "disassemble dispatch-reader-macro distinct divmod do doto drop drop-last drop-while empty? " +
            "end-sequence eval eval-and-compile eval-when-compile even? every? except exec filter first " +
            "flatten float? fn fnc fnr for for* format fraction genexpr " +
            "gensym get getattr global globals group-by hasattr hash hex id " +
            "identity if if* if-not if-python2 import in inc input instance? " +
            "integer integer-char? integer? interleave interpose is is-coll is-cons is-empty is-even " +
            "is-every is-float is-instance is-integer is-integer-char is-iterable is-iterator is-keyword is-neg is-none " +
            "is-not is-numeric is-odd is-pos is-string is-symbol is-zero isinstance islice issubclass " +
            "iter iterable? iterate iterator? keyword keyword? lambda last len let " +
            "lif lif-not list* list-comp locals loop macro-error macroexpand macroexpand-1 macroexpand-all " +
            "map max merge-with method-decorator min multi-decorator multicombinations name neg? next " +
            "none? nonlocal not not-in not? nth numeric? oct odd? open " +
            "or ord partition permutations pos? post-route postwalk pow prewalk print " +
            "product profile/calls profile/cpu put-route quasiquote quote raise range read read-str " +
            "recursive-replace reduce remove repeat repeatedly repr require rest round route " +
            "route-with-methods rwm second seq set-comp setattr setv some sorted string " +
            "string? sum switch symbol? take take-nth take-while tee try unless " +
            "unquote unquote-splicing vars walk when while with with* with-decorator with-gensyms " +
            "xi xor yield yield-from zero? zip zip-longest | |= ~"
        };

        var SYMBOLSTART = "a-zA-Z_\\-!.?+*=<>&#'";
        var SYMBOL_RE = "[" + SYMBOLSTART + "][" + SYMBOLSTART + "0-9/;:]*";
        var SIMPLE_NUMBER_RE = "[-+]?\\d+(\\.\\d+)?";

        var SHEBANG = {
          className: "meta",
          begin: "^#!",
          end: "$"
        };

        var SYMBOL = {
          begin: SYMBOL_RE,
          relevance: 0
        };
        var NUMBER = {
          className: "number",
          begin: SIMPLE_NUMBER_RE,
          relevance: 0
        };
        var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });
        var COMMENT = hljs.COMMENT(";", "$", {
          relevance: 0
        });
        var LITERAL = {
          className: "literal",
          begin: /\b([Tt]rue|[Ff]alse|nil|None)\b/
        };
        var COLLECTION = {
          begin: "[\\[\\{]",
          end: "[\\]\\}]"
        };
        var HINT = {
          className: "comment",
          begin: "\\^" + SYMBOL_RE
        };
        var HINT_COL = hljs.COMMENT("\\^\\{", "\\}");
        var KEY = {
          className: "symbol",
          begin: "[:]{1,2}" + SYMBOL_RE
        };
        var LIST = {
          begin: "\\(",
          end: "\\)"
        };
        var BODY = {
          endsWithParent: true,
          relevance: 0
        };
        var NAME = {
          keywords: keywords,
          lexemes: SYMBOL_RE,
          className: "name",
          begin: SYMBOL_RE,
          starts: BODY
        };
        var DEFAULT_CONTAINS = [
          LIST,
          STRING,
          HINT,
          HINT_COL,
          COMMENT,
          KEY,
          COLLECTION,
          NUMBER,
          LITERAL,
          SYMBOL
        ];

        LIST.contains = [hljs.COMMENT("comment", ""), NAME, BODY];
        BODY.contains = DEFAULT_CONTAINS;
        COLLECTION.contains = DEFAULT_CONTAINS;

        return {
          aliases: ["hylang"],
          illegal: /\S/,
          contains: [
            SHEBANG,
            LIST,
            STRING,
            HINT,
            HINT_COL,
            COMMENT,
            KEY,
            COLLECTION,
            NUMBER,
            LITERAL
          ]
        };
      };

      /***/
    },
    /* 109 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var START_BRACKET = "\\[";
        var END_BRACKET = "\\]";
        return {
          aliases: ["i7"],
          case_insensitive: true,
          keywords: {
            // Some keywords more or less unique to I7, for relevance.
            keyword:
              // kind:
              "thing room person man woman animal container " +
              "supporter backdrop door " +
              // characteristic:
              "scenery open closed locked inside gender " +
              // verb:
              "is are say understand " +
              // misc keyword:
              "kind of rule"
          },
          contains: [
            {
              className: "string",
              begin: '"',
              end: '"',
              relevance: 0,
              contains: [
                {
                  className: "subst",
                  begin: START_BRACKET,
                  end: END_BRACKET
                }
              ]
            },
            {
              className: "section",
              begin: /^(Volume|Book|Part|Chapter|Section|Table)\b/,
              end: "$"
            },
            {
              // Rule definition
              // This is here for relevance.
              begin: /^(Check|Carry out|Report|Instead of|To|Rule|When|Before|After)\b/,
              end: ":",
              contains: [
                {
                  //Rule name
                  begin: "\\(This",
                  end: "\\)"
                }
              ]
            },
            {
              className: "comment",
              begin: START_BRACKET,
              end: END_BRACKET,
              contains: ["self"]
            }
          ]
        };
      };

      /***/
    },
    /* 110 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var STRING = {
          className: "string",
          contains: [hljs.BACKSLASH_ESCAPE],
          variants: [
            {
              begin: "'''",
              end: "'''",
              relevance: 10
            },
            {
              begin: '"""',
              end: '"""',
              relevance: 10
            },
            {
              begin: '"',
              end: '"'
            },
            {
              begin: "'",
              end: "'"
            }
          ]
        };
        return {
          aliases: ["toml"],
          case_insensitive: true,
          illegal: /\S/,
          contains: [
            hljs.COMMENT(";", "$"),
            hljs.HASH_COMMENT_MODE,
            {
              className: "section",
              begin: /^\s*\[+/,
              end: /\]+/
            },
            {
              begin: /^[a-z0-9\[\]_-]+\s*=\s*/,
              end: "$",
              returnBegin: true,
              contains: [
                {
                  className: "attr",
                  begin: /[a-z0-9\[\]_-]+/
                },
                {
                  begin: /=/,
                  endsWithParent: true,
                  relevance: 0,
                  contains: [
                    {
                      className: "literal",
                      begin: /\bon|off|true|false|yes|no\b/
                    },
                    {
                      className: "variable",
                      variants: [
                        { begin: /\$[\w\d"][\w\d_]*/ },
                        { begin: /\$\{(.*?)}/ }
                      ]
                    },
                    STRING,
                    {
                      className: "number",
                      begin: /([\+\-]+)?[\d]+_[\d_]+/
                    },
                    hljs.NUMBER_MODE
                  ]
                }
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 111 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var PARAMS = {
          className: "params",
          begin: "\\(",
          end: "\\)"
        };

        var F_KEYWORDS = {
          literal: ".False. .True.",
          keyword:
            "kind do while private call intrinsic where elsewhere " +
            "type endtype endmodule endselect endinterface end enddo endif if forall endforall only contains default return stop then " +
            "public subroutine|10 function program .and. .or. .not. .le. .eq. .ge. .gt. .lt. " +
            "goto save else use module select case " +
            "access blank direct exist file fmt form formatted iostat name named nextrec number opened rec recl sequential status unformatted unit " +
            "continue format pause cycle exit " +
            "c_null_char c_alert c_backspace c_form_feed flush wait decimal round iomsg " +
            "synchronous nopass non_overridable pass protected volatile abstract extends import " +
            "non_intrinsic value deferred generic final enumerator class associate bind enum " +
            "c_int c_short c_long c_long_long c_signed_char c_size_t c_int8_t c_int16_t c_int32_t c_int64_t c_int_least8_t c_int_least16_t " +
            "c_int_least32_t c_int_least64_t c_int_fast8_t c_int_fast16_t c_int_fast32_t c_int_fast64_t c_intmax_t C_intptr_t c_float c_double " +
            "c_long_double c_float_complex c_double_complex c_long_double_complex c_bool c_char c_null_ptr c_null_funptr " +
            "c_new_line c_carriage_return c_horizontal_tab c_vertical_tab iso_c_binding c_loc c_funloc c_associated  c_f_pointer " +
            "c_ptr c_funptr iso_fortran_env character_storage_size error_unit file_storage_size input_unit iostat_end iostat_eor " +
            "numeric_storage_size output_unit c_f_procpointer ieee_arithmetic ieee_support_underflow_control " +
            "ieee_get_underflow_mode ieee_set_underflow_mode newunit contiguous recursive " +
            "pad position action delim readwrite eor advance nml interface procedure namelist include sequence elemental pure " +
            "integer real character complex logical dimension allocatable|10 parameter " +
            "external implicit|10 none double precision assign intent optional pointer " +
            "target in out common equivalence data " +
            // IRPF90 special keywords
            "begin_provider &begin_provider end_provider begin_shell end_shell begin_template end_template subst assert touch " +
            "soft_touch provide no_dep free irp_if irp_else irp_endif irp_write irp_read",
          built_in:
            "alog alog10 amax0 amax1 amin0 amin1 amod cabs ccos cexp clog csin csqrt dabs dacos dasin datan datan2 dcos dcosh ddim dexp dint " +
            "dlog dlog10 dmax1 dmin1 dmod dnint dsign dsin dsinh dsqrt dtan dtanh float iabs idim idint idnint ifix isign max0 max1 min0 min1 sngl " +
            "algama cdabs cdcos cdexp cdlog cdsin cdsqrt cqabs cqcos cqexp cqlog cqsin cqsqrt dcmplx dconjg derf derfc dfloat dgamma dimag dlgama " +
            "iqint qabs qacos qasin qatan qatan2 qcmplx qconjg qcos qcosh qdim qerf qerfc qexp qgamma qimag qlgama qlog qlog10 qmax1 qmin1 qmod " +
            "qnint qsign qsin qsinh qsqrt qtan qtanh abs acos aimag aint anint asin atan atan2 char cmplx conjg cos cosh exp ichar index int log " +
            "log10 max min nint sign sin sinh sqrt tan tanh print write dim lge lgt lle llt mod nullify allocate deallocate " +
            "adjustl adjustr all allocated any associated bit_size btest ceiling count cshift date_and_time digits dot_product " +
            "eoshift epsilon exponent floor fraction huge iand ibclr ibits ibset ieor ior ishft ishftc lbound len_trim matmul " +
            "maxexponent maxloc maxval merge minexponent minloc minval modulo mvbits nearest pack present product " +
            "radix random_number random_seed range repeat reshape rrspacing scale scan selected_int_kind selected_real_kind " +
            "set_exponent shape size spacing spread sum system_clock tiny transpose trim ubound unpack verify achar iachar transfer " +
            "dble entry dprod cpu_time command_argument_count get_command get_command_argument get_environment_variable is_iostat_end " +
            "ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode " +
            "is_iostat_eor move_alloc new_line selected_char_kind same_type_as extends_type_of" +
            "acosh asinh atanh bessel_j0 bessel_j1 bessel_jn bessel_y0 bessel_y1 bessel_yn erf erfc erfc_scaled gamma log_gamma hypot norm2 " +
            "atomic_define atomic_ref execute_command_line leadz trailz storage_size merge_bits " +
            "bge bgt ble blt dshiftl dshiftr findloc iall iany iparity image_index lcobound ucobound maskl maskr " +
            "num_images parity popcnt poppar shifta shiftl shiftr this_image " +
            // IRPF90 special built_ins
            "IRP_ALIGN irp_here"
        };
        return {
          case_insensitive: true,
          keywords: F_KEYWORDS,
          illegal: /\/\*/,
          contains: [
            hljs.inherit(hljs.APOS_STRING_MODE, {
              className: "string",
              relevance: 0
            }),
            hljs.inherit(hljs.QUOTE_STRING_MODE, {
              className: "string",
              relevance: 0
            }),
            {
              className: "function",
              beginKeywords: "subroutine function program",
              illegal: "[${=\\n]",
              contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]
            },
            hljs.COMMENT("!", "$", { relevance: 0 }),
            hljs.COMMENT("begin_doc", "end_doc", { relevance: 10 }),
            {
              className: "number",
              begin:
                "(?=\\b|\\+|\\-|\\.)(?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*)(?:[de][+-]?\\d+)?\\b\\.?",
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 112 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var JAVA_IDENT_RE =
          "[\u00C0-\u02B8a-zA-Z_$][\u00C0-\u02B8a-zA-Z_$0-9]*";
        var GENERIC_IDENT_RE =
          JAVA_IDENT_RE +
          "(<" +
          JAVA_IDENT_RE +
          "(\\s*,\\s*" +
          JAVA_IDENT_RE +
          ")*>)?";
        var KEYWORDS =
          "false synchronized int abstract float private char boolean static null if const " +
          "for true while long strictfp finally protected import native final void " +
          "enum else break transient catch instanceof byte super volatile case assert short " +
          "package default double public try this switch continue throws protected public private " +
          "module requires exports do";

        // https://docs.oracle.com/javase/7/docs/technotes/guides/language/underscores-literals.html
        var JAVA_NUMBER_RE =
          "\\b" +
          "(" +
          "0[bB]([01]+[01_]+[01]+|[01]+)" + // 0b...
          "|" +
          "0[xX]([a-fA-F0-9]+[a-fA-F0-9_]+[a-fA-F0-9]+|[a-fA-F0-9]+)" + // 0x...
          "|" +
          "(" +
          "([\\d]+[\\d_]+[\\d]+|[\\d]+)(\\.([\\d]+[\\d_]+[\\d]+|[\\d]+))?" +
          "|" +
          "\\.([\\d]+[\\d_]+[\\d]+|[\\d]+)" +
          ")" +
          "([eE][-+]?\\d+)?" + // octal, decimal, float
          ")" +
          "[lLfF]?";
        var JAVA_NUMBER_MODE = {
          className: "number",
          begin: JAVA_NUMBER_RE,
          relevance: 0
        };

        return {
          aliases: ["jsp"],
          keywords: KEYWORDS,
          illegal: /<\/|#/,
          contains: [
            hljs.COMMENT("/\\*\\*", "\\*/", {
              relevance: 0,
              contains: [
                {
                  // eat up @'s in emails to prevent them to be recognized as doctags
                  begin: /\w+@/,
                  relevance: 0
                },
                {
                  className: "doctag",
                  begin: "@[A-Za-z]+"
                }
              ]
            }),
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: "class",
              beginKeywords: "class interface",
              end: /[{;=]/,
              excludeEnd: true,
              keywords: "class interface",
              illegal: /[:"\[\]]/,
              contains: [
                { beginKeywords: "extends implements" },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            },
            {
              // Expression keywords prevent 'keyword Name(...)' from being
              // recognized as a function definition
              beginKeywords: "new throw return else",
              relevance: 0
            },
            {
              className: "function",
              begin:
                "(" +
                GENERIC_IDENT_RE +
                "\\s+)+" +
                hljs.UNDERSCORE_IDENT_RE +
                "\\s*\\(",
              returnBegin: true,
              end: /[{;=]/,
              excludeEnd: true,
              keywords: KEYWORDS,
              contains: [
                {
                  begin: hljs.UNDERSCORE_IDENT_RE + "\\s*\\(",
                  returnBegin: true,
                  relevance: 0,
                  contains: [hljs.UNDERSCORE_TITLE_MODE]
                },
                {
                  className: "params",
                  begin: /\(/,
                  end: /\)/,
                  keywords: KEYWORDS,
                  relevance: 0,
                  contains: [
                    hljs.APOS_STRING_MODE,
                    hljs.QUOTE_STRING_MODE,
                    hljs.C_NUMBER_MODE,
                    hljs.C_BLOCK_COMMENT_MODE
                  ]
                },
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },
            JAVA_NUMBER_MODE,
            {
              className: "meta",
              begin: "@[A-Za-z]+"
            }
          ]
        };
      };

      /***/
    },
    /* 113 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENT_RE = "[A-Za-z$_][0-9A-Za-z$_]*";
        var KEYWORDS = {
          keyword:
            "in of if for while finally var new function do return void else break catch " +
            "instanceof with throw case default try this switch continue typeof delete " +
            "let yield const export super debugger as async await static " +
            // ECMAScript 6 modules import
            "import from as",
          literal: "true false null undefined NaN Infinity",
          built_in:
            "eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent " +
            "encodeURI encodeURIComponent escape unescape Object Function Boolean Error " +
            "EvalError InternalError RangeError ReferenceError StopIteration SyntaxError " +
            "TypeError URIError Number Math Date String RegExp Array Float32Array " +
            "Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array " +
            "Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require " +
            "module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect " +
            "Promise"
        };
        var EXPRESSIONS;
        var NUMBER = {
          className: "number",
          variants: [
            { begin: "\\b(0[bB][01]+)" },
            { begin: "\\b(0[oO][0-7]+)" },
            { begin: hljs.C_NUMBER_RE }
          ],
          relevance: 0
        };
        var SUBST = {
          className: "subst",
          begin: "\\$\\{",
          end: "\\}",
          keywords: KEYWORDS,
          contains: [] // defined later
        };
        var TEMPLATE_STRING = {
          className: "string",
          begin: "`",
          end: "`",
          contains: [hljs.BACKSLASH_ESCAPE, SUBST]
        };
        SUBST.contains = [
          hljs.APOS_STRING_MODE,
          hljs.QUOTE_STRING_MODE,
          TEMPLATE_STRING,
          NUMBER,
          hljs.REGEXP_MODE
        ];
        var PARAMS_CONTAINS = SUBST.contains.concat([
          hljs.C_BLOCK_COMMENT_MODE,
          hljs.C_LINE_COMMENT_MODE
        ]);

        return {
          aliases: ["js", "jsx"],
          keywords: KEYWORDS,
          contains: [
            {
              className: "meta",
              relevance: 10,
              begin: /^\s*['"]use (strict|asm)['"]/
            },
            {
              className: "meta",
              begin: /^#!/,
              end: /$/
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            TEMPLATE_STRING,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            NUMBER,
            {
              // object attr container
              begin: /[{,]\s*/,
              relevance: 0,
              contains: [
                {
                  begin: IDENT_RE + "\\s*:",
                  returnBegin: true,
                  relevance: 0,
                  contains: [
                    { className: "attr", begin: IDENT_RE, relevance: 0 }
                  ]
                }
              ]
            },
            {
              // "value" container
              begin:
                "(" + hljs.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
              keywords: "return throw case",
              contains: [
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                hljs.REGEXP_MODE,
                {
                  className: "function",
                  begin: "(\\(.*?\\)|" + IDENT_RE + ")\\s*=>",
                  returnBegin: true,
                  end: "\\s*=>",
                  contains: [
                    {
                      className: "params",
                      variants: [
                        {
                          begin: IDENT_RE
                        },
                        {
                          begin: /\(\s*\)/
                        },
                        {
                          begin: /\(/,
                          end: /\)/,
                          excludeBegin: true,
                          excludeEnd: true,
                          keywords: KEYWORDS,
                          contains: PARAMS_CONTAINS
                        }
                      ]
                    }
                  ]
                },
                {
                  // E4X / JSX
                  begin: /</,
                  end: /(\/\w+|\w+\/)>/,
                  subLanguage: "xml",
                  contains: [
                    { begin: /<\w+\s*\/>/, skip: true },
                    {
                      begin: /<\w+/,
                      end: /(\/\w+|\w+\/)>/,
                      skip: true,
                      contains: [{ begin: /<\w+\s*\/>/, skip: true }, "self"]
                    }
                  ]
                }
              ],
              relevance: 0
            },
            {
              className: "function",
              beginKeywords: "function",
              end: /\{/,
              excludeEnd: true,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE }),
                {
                  className: "params",
                  begin: /\(/,
                  end: /\)/,
                  excludeBegin: true,
                  excludeEnd: true,
                  contains: PARAMS_CONTAINS
                }
              ],
              illegal: /\[|%/
            },
            {
              begin: /\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`
            },
            hljs.METHOD_GUARD,
            {
              // ES6 class
              className: "class",
              beginKeywords: "class",
              end: /[{;=]/,
              excludeEnd: true,
              illegal: /[:"\[\]]/,
              contains: [
                { beginKeywords: "extends" },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            },
            {
              beginKeywords: "constructor",
              end: /\{/,
              excludeEnd: true
            }
          ],
          illegal: /#(?!!)/
        };
      };

      /***/
    },
    /* 114 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var PARAM = {
          begin: /[\w-]+ *=/,
          returnBegin: true,
          relevance: 0,
          contains: [{ className: "attr", begin: /[\w-]+/ }]
        };
        var PARAMSBLOCK = {
          className: "params",
          begin: /\(/,
          end: /\)/,
          contains: [PARAM],
          relevance: 0
        };
        var OPERATION = {
          className: "function",
          begin: /:[\w\-.]+/,
          relevance: 0
        };
        var PATH = {
          className: "string",
          begin: /\B(([\/.])[\w\-.\/=]+)+/
        };
        var COMMAND_PARAMS = {
          className: "params",
          begin: /--[\w\-=\/]+/
        };
        return {
          aliases: ["wildfly-cli"],
          lexemes: "[a-z-]+",
          keywords: {
            keyword:
              "alias batch cd clear command connect connection-factory connection-info data-source deploy " +
              "deployment-info deployment-overlay echo echo-dmr help history if jdbc-driver-info jms-queue|20 jms-topic|20 ls " +
              "patch pwd quit read-attribute read-operation reload rollout-plan run-batch set shutdown try unalias " +
              "undeploy unset version xa-data-source", // module
            literal: "true false"
          },
          contains: [
            hljs.HASH_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            COMMAND_PARAMS,
            OPERATION,
            PATH,
            PARAMSBLOCK
          ]
        };
      };

      /***/
    },
    /* 115 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var LITERALS = { literal: "true false null" };
        var TYPES = [hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE];
        var VALUE_CONTAINER = {
          end: ",",
          endsWithParent: true,
          excludeEnd: true,
          contains: TYPES,
          keywords: LITERALS
        };
        var OBJECT = {
          begin: "{",
          end: "}",
          contains: [
            {
              className: "attr",
              begin: /"/,
              end: /"/,
              contains: [hljs.BACKSLASH_ESCAPE],
              illegal: "\\n"
            },
            hljs.inherit(VALUE_CONTAINER, { begin: /:/ })
          ],
          illegal: "\\S"
        };
        var ARRAY = {
          begin: "\\[",
          end: "\\]",
          contains: [hljs.inherit(VALUE_CONTAINER)], // inherit is a workaround for a bug that makes shared modes with endsWithParent compile only the ending of one of the parents
          illegal: "\\S"
        };
        TYPES.splice(TYPES.length, 0, OBJECT, ARRAY);
        return {
          contains: TYPES,
          keywords: LITERALS,
          illegal: "\\S"
        };
      };

      /***/
    },
    /* 116 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        // Since there are numerous special names in Julia, it is too much trouble
        // to maintain them by hand. Hence these names (i.e. keywords, literals and
        // built-ins) are automatically generated from Julia v0.6 itself through
        // the following scripts for each.

        var KEYWORDS = {
          // # keyword generator, multi-word keywords handled manually below
          // foreach(println, ["in", "isa", "where"])
          // for kw in Base.REPLCompletions.complete_keyword("")
          //     if !(contains(kw, " ") || kw == "struct")
          //         println(kw)
          //     end
          // end
          keyword:
            "in isa where " +
            "baremodule begin break catch ccall const continue do else elseif end export false finally for function " +
            "global if import importall let local macro module quote return true try using while " +
            // legacy, to be deprecated in the next release
            "type immutable abstract bitstype typealias ",

          // # literal generator
          // println("true")
          // println("false")
          // for name in Base.REPLCompletions.completions("", 0)[1]
          //     try
          //         v = eval(Symbol(name))
          //         if !(v isa Function || v isa Type || v isa TypeVar || v isa Module || v isa Colon)
          //             println(name)
          //         end
          //     end
          // end
          literal:
            "true false " +
            "ARGS C_NULL DevNull ENDIAN_BOM ENV I Inf Inf16 Inf32 Inf64 InsertionSort JULIA_HOME LOAD_PATH MergeSort " +
            "NaN NaN16 NaN32 NaN64 PROGRAM_FILE QuickSort RoundDown RoundFromZero RoundNearest RoundNearestTiesAway " +
            "RoundNearestTiesUp RoundToZero RoundUp STDERR STDIN STDOUT VERSION catalan e|0 eu|0 eulergamma golden im " +
            "nothing pi γ π φ ",

          // # built_in generator:
          // for name in Base.REPLCompletions.completions("", 0)[1]
          //     try
          //         v = eval(Symbol(name))
          //         if v isa Type || v isa TypeVar
          //             println(name)
          //         end
          //     end
          // end
          built_in:
            "ANY AbstractArray AbstractChannel AbstractFloat AbstractMatrix AbstractRNG AbstractSerializer AbstractSet " +
            "AbstractSparseArray AbstractSparseMatrix AbstractSparseVector AbstractString AbstractUnitRange AbstractVecOrMat " +
            "AbstractVector Any ArgumentError Array AssertionError Associative Base64DecodePipe Base64EncodePipe Bidiagonal " +
            "BigFloat BigInt BitArray BitMatrix BitVector Bool BoundsError BufferStream CachingPool CapturedException " +
            "CartesianIndex CartesianRange Cchar Cdouble Cfloat Channel Char Cint Cintmax_t Clong Clonglong ClusterManager " +
            "Cmd CodeInfo Colon Complex Complex128 Complex32 Complex64 CompositeException Condition ConjArray ConjMatrix " +
            "ConjVector Cptrdiff_t Cshort Csize_t Cssize_t Cstring Cuchar Cuint Cuintmax_t Culong Culonglong Cushort Cwchar_t " +
            "Cwstring DataType Date DateFormat DateTime DenseArray DenseMatrix DenseVecOrMat DenseVector Diagonal Dict " +
            "DimensionMismatch Dims DirectIndexString Display DivideError DomainError EOFError EachLine Enum Enumerate " +
            "ErrorException Exception ExponentialBackOff Expr Factorization FileMonitor Float16 Float32 Float64 Function " +
            "Future GlobalRef GotoNode HTML Hermitian IO IOBuffer IOContext IOStream IPAddr IPv4 IPv6 IndexCartesian IndexLinear " +
            "IndexStyle InexactError InitError Int Int128 Int16 Int32 Int64 Int8 IntSet Integer InterruptException " +
            "InvalidStateException Irrational KeyError LabelNode LinSpace LineNumberNode LoadError LowerTriangular MIME Matrix " +
            "MersenneTwister Method MethodError MethodTable Module NTuple NewvarNode NullException Nullable Number ObjectIdDict " +
            "OrdinalRange OutOfMemoryError OverflowError Pair ParseError PartialQuickSort PermutedDimsArray Pipe " +
            "PollingFileWatcher ProcessExitedException Ptr QuoteNode RandomDevice Range RangeIndex Rational RawFD " +
            "ReadOnlyMemoryError Real ReentrantLock Ref Regex RegexMatch RemoteChannel RemoteException RevString RoundingMode " +
            "RowVector SSAValue SegmentationFault SerializationState Set SharedArray SharedMatrix SharedVector Signed " +
            "SimpleVector Slot SlotNumber SparseMatrixCSC SparseVector StackFrame StackOverflowError StackTrace StepRange " +
            "StepRangeLen StridedArray StridedMatrix StridedVecOrMat StridedVector String SubArray SubString SymTridiagonal " +
            "Symbol Symmetric SystemError TCPSocket Task Text TextDisplay Timer Tridiagonal Tuple Type TypeError TypeMapEntry " +
            "TypeMapLevel TypeName TypeVar TypedSlot UDPSocket UInt UInt128 UInt16 UInt32 UInt64 UInt8 UndefRefError UndefVarError " +
            "UnicodeError UniformScaling Union UnionAll UnitRange Unsigned UpperTriangular Val Vararg VecElement VecOrMat Vector " +
            "VersionNumber Void WeakKeyDict WeakRef WorkerConfig WorkerPool "
        };

        // ref: http://julia.readthedocs.org/en/latest/manual/variables/#allowed-variable-names
        var VARIABLE_NAME_RE =
          "[A-Za-z_\\u00A1-\\uFFFF][A-Za-z_0-9\\u00A1-\\uFFFF]*";

        // placeholder for recursive self-reference
        var DEFAULT = {
          lexemes: VARIABLE_NAME_RE,
          keywords: KEYWORDS,
          illegal: /<\//
        };

        // ref: http://julia.readthedocs.org/en/latest/manual/integers-and-floating-point-numbers/
        var NUMBER = {
          className: "number",
          // supported numeric literals:
          //  * binary literal (e.g. 0x10)
          //  * octal literal (e.g. 0o76543210)
          //  * hexadecimal literal (e.g. 0xfedcba876543210)
          //  * hexadecimal floating point literal (e.g. 0x1p0, 0x1.2p2)
          //  * decimal literal (e.g. 9876543210, 100_000_000)
          //  * floating pointe literal (e.g. 1.2, 1.2f, .2, 1., 1.2e10, 1.2e-10)
          begin: /(\b0x[\d_]*(\.[\d_]*)?|0x\.\d[\d_]*)p[-+]?\d+|\b0[box][a-fA-F0-9][a-fA-F0-9_]*|(\b\d[\d_]*(\.[\d_]*)?|\.\d[\d_]*)([eEfF][-+]?\d+)?/,
          relevance: 0
        };

        var CHAR = {
          className: "string",
          begin: /'(.|\\[xXuU][a-zA-Z0-9]+)'/
        };

        var INTERPOLATION = {
          className: "subst",
          begin: /\$\(/,
          end: /\)/,
          keywords: KEYWORDS
        };

        var INTERPOLATED_VARIABLE = {
          className: "variable",
          begin: "\\$" + VARIABLE_NAME_RE
        };

        // TODO: neatly escape normal code in string literal
        var STRING = {
          className: "string",
          contains: [
            hljs.BACKSLASH_ESCAPE,
            INTERPOLATION,
            INTERPOLATED_VARIABLE
          ],
          variants: [
            { begin: /\w*"""/, end: /"""\w*/, relevance: 10 },
            { begin: /\w*"/, end: /"\w*/ }
          ]
        };

        var COMMAND = {
          className: "string",
          contains: [
            hljs.BACKSLASH_ESCAPE,
            INTERPOLATION,
            INTERPOLATED_VARIABLE
          ],
          begin: "`",
          end: "`"
        };

        var MACROCALL = {
          className: "meta",
          begin: "@" + VARIABLE_NAME_RE
        };

        var COMMENT = {
          className: "comment",
          variants: [
            { begin: "#=", end: "=#", relevance: 10 },
            { begin: "#", end: "$" }
          ]
        };

        DEFAULT.contains = [
          NUMBER,
          CHAR,
          STRING,
          COMMAND,
          MACROCALL,
          COMMENT,
          hljs.HASH_COMMENT_MODE,
          {
            className: "keyword",
            begin: "\\b(((abstract|primitive)\\s+)type|(mutable\\s+)?struct)\\b"
          },
          { begin: /<:/ } // relevance booster
        ];
        INTERPOLATION.contains = DEFAULT.contains;

        return DEFAULT;
      };

      /***/
    },
    /* 117 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            {
              className: "meta",
              begin: /^julia>/,
              relevance: 10,
              starts: {
                // end the highlighting if we are on a new line and the line does not have at
                // least six spaces in the beginning
                end: /^(?![ ]{6})/,
                subLanguage: "julia"
              },
              // jldoctest Markdown blocks are used in the Julia manual and package docs indicate
              // code snippets that should be verified when the documentation is built. They can be
              // either REPL-like or script-like, but are usually REPL-like and therefore we apply
              // julia-repl highlighting to them. More information can be found in Documenter's
              // manual: https://juliadocs.github.io/Documenter.jl/latest/man/doctests.html
              aliases: ["jldoctest"]
            }
          ]
        };
      };

      /***/
    },
    /* 118 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            "abstract as val var vararg get set class object open private protected public noinline " +
            "crossinline dynamic final enum if else do while for when throw try catch finally " +
            "import package is in fun override companion reified inline lateinit init" +
            "interface annotation data sealed internal infix operator out by constructor super " +
            // to be deleted soon
            "trait volatile transient native default",
          built_in:
            "Byte Short Char Int Long Boolean Float Double Void Unit Nothing",
          literal: "true false null"
        };
        var KEYWORDS_WITH_LABEL = {
          className: "keyword",
          begin: /\b(break|continue|return|this)\b/,
          starts: {
            contains: [
              {
                className: "symbol",
                begin: /@\w+/
              }
            ]
          }
        };
        var LABEL = {
          className: "symbol",
          begin: hljs.UNDERSCORE_IDENT_RE + "@"
        };

        // for string templates
        var SUBST = {
          className: "subst",
          begin: "\\${",
          end: "}",
          contains: [hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE]
        };
        var VARIABLE = {
          className: "variable",
          begin: "\\$" + hljs.UNDERSCORE_IDENT_RE
        };
        var STRING = {
          className: "string",
          variants: [
            {
              begin: '"""',
              end: '"""',
              contains: [VARIABLE, SUBST]
            },
            // Can't use built-in modes easily, as we want to use STRING in the meta
            // context as 'meta-string' and there's no syntax to remove explicitly set
            // classNames in built-in modes.
            {
              begin: "'",
              end: "'",
              illegal: /\n/,
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              begin: '"',
              end: '"',
              illegal: /\n/,
              contains: [hljs.BACKSLASH_ESCAPE, VARIABLE, SUBST]
            }
          ]
        };

        var ANNOTATION_USE_SITE = {
          className: "meta",
          begin:
            "@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\s*:(?:\\s*" +
            hljs.UNDERSCORE_IDENT_RE +
            ")?"
        };
        var ANNOTATION = {
          className: "meta",
          begin: "@" + hljs.UNDERSCORE_IDENT_RE,
          contains: [
            {
              begin: /\(/,
              end: /\)/,
              contains: [hljs.inherit(STRING, { className: "meta-string" })]
            }
          ]
        };

        return {
          keywords: KEYWORDS,
          contains: [
            hljs.COMMENT("/\\*\\*", "\\*/", {
              relevance: 0,
              contains: [
                {
                  className: "doctag",
                  begin: "@[A-Za-z]+"
                }
              ]
            }),
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            KEYWORDS_WITH_LABEL,
            LABEL,
            ANNOTATION_USE_SITE,
            ANNOTATION,
            {
              className: "function",
              beginKeywords: "fun",
              end: "[(]|$",
              returnBegin: true,
              excludeEnd: true,
              keywords: KEYWORDS,
              illegal: /fun\s+(<.*>)?[^\s\(]+(\s+[^\s\(]+)\s*=/,
              relevance: 5,
              contains: [
                {
                  begin: hljs.UNDERSCORE_IDENT_RE + "\\s*\\(",
                  returnBegin: true,
                  relevance: 0,
                  contains: [hljs.UNDERSCORE_TITLE_MODE]
                },
                {
                  className: "type",
                  begin: /</,
                  end: />/,
                  keywords: "reified",
                  relevance: 0
                },
                {
                  className: "params",
                  begin: /\(/,
                  end: /\)/,
                  endsParent: true,
                  keywords: KEYWORDS,
                  relevance: 0,
                  contains: [
                    {
                      begin: /:/,
                      end: /[=,\/]/,
                      endsWithParent: true,
                      contains: [
                        { className: "type", begin: hljs.UNDERSCORE_IDENT_RE },
                        hljs.C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE
                      ],
                      relevance: 0
                    },
                    hljs.C_LINE_COMMENT_MODE,
                    hljs.C_BLOCK_COMMENT_MODE,
                    ANNOTATION_USE_SITE,
                    ANNOTATION,
                    STRING,
                    hljs.C_NUMBER_MODE
                  ]
                },
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },
            {
              className: "class",
              beginKeywords: "class interface trait",
              end: /[:\{(]|$/, // remove 'trait' when removed from KEYWORDS
              excludeEnd: true,
              illegal: "extends implements",
              contains: [
                {
                  beginKeywords: "public protected internal private constructor"
                },
                hljs.UNDERSCORE_TITLE_MODE,
                {
                  className: "type",
                  begin: /</,
                  end: />/,
                  excludeBegin: true,
                  excludeEnd: true,
                  relevance: 0
                },
                {
                  className: "type",
                  begin: /[,:]\s*/,
                  end: /[<\(,]|$/,
                  excludeBegin: true,
                  returnEnd: true
                },
                ANNOTATION_USE_SITE,
                ANNOTATION
              ]
            },
            STRING,
            {
              className: "meta",
              begin: "^#!/usr/bin/env",
              end: "$",
              illegal: "\n"
            },
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 119 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var LASSO_IDENT_RE = "[a-zA-Z_][\\w.]*";
        var LASSO_ANGLE_RE = "<\\?(lasso(script)?|=)";
        var LASSO_CLOSE_RE = "\\]|\\?>";
        var LASSO_KEYWORDS = {
          literal:
            "true false none minimal full all void and or not " +
            "bw nbw ew new cn ncn lt lte gt gte eq neq rx nrx ft",
          built_in:
            "array date decimal duration integer map pair string tag xml null " +
            "boolean bytes keyword list locale queue set stack staticarray " +
            "local var variable global data self inherited currentcapture givenblock",
          keyword:
            "cache database_names database_schemanames database_tablenames " +
            "define_tag define_type email_batch encode_set html_comment handle " +
            "handle_error header if inline iterate ljax_target link " +
            "link_currentaction link_currentgroup link_currentrecord link_detail " +
            "link_firstgroup link_firstrecord link_lastgroup link_lastrecord " +
            "link_nextgroup link_nextrecord link_prevgroup link_prevrecord log " +
            "loop namespace_using output_none portal private protect records " +
            "referer referrer repeating resultset rows search_args " +
            "search_arguments select sort_args sort_arguments thread_atomic " +
            "value_list while abort case else fail_if fail_ifnot fail if_empty " +
            "if_false if_null if_true loop_abort loop_continue loop_count params " +
            "params_up return return_value run_children soap_definetag " +
            "soap_lastrequest soap_lastresponse tag_name ascending average by " +
            "define descending do equals frozen group handle_failure import in " +
            "into join let match max min on order parent protected provide public " +
            "require returnhome skip split_thread sum take thread to trait type " +
            "where with yield yieldhome"
        };
        var HTML_COMMENT = hljs.COMMENT("<!--", "-->", {
          relevance: 0
        });
        var LASSO_NOPROCESS = {
          className: "meta",
          begin: "\\[noprocess\\]",
          starts: {
            end: "\\[/noprocess\\]",
            returnEnd: true,
            contains: [HTML_COMMENT]
          }
        };
        var LASSO_START = {
          className: "meta",
          begin: "\\[/noprocess|" + LASSO_ANGLE_RE
        };
        var LASSO_DATAMEMBER = {
          className: "symbol",
          begin: "'" + LASSO_IDENT_RE + "'"
        };
        var LASSO_CODE = [
          hljs.C_LINE_COMMENT_MODE,
          hljs.C_BLOCK_COMMENT_MODE,
          hljs.inherit(hljs.C_NUMBER_MODE, {
            begin: hljs.C_NUMBER_RE + "|(-?infinity|NaN)\\b"
          }),
          hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null }),
          hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),
          {
            className: "string",
            begin: "`",
            end: "`"
          },
          {
            // variables
            variants: [
              {
                begin: "[#$]" + LASSO_IDENT_RE
              },
              {
                begin: "#",
                end: "\\d+",
                illegal: "\\W"
              }
            ]
          },
          {
            className: "type",
            begin: "::\\s*",
            end: LASSO_IDENT_RE,
            illegal: "\\W"
          },
          {
            className: "params",
            variants: [
              {
                begin: "-(?!infinity)" + LASSO_IDENT_RE,
                relevance: 0
              },
              {
                begin: "(\\.\\.\\.)"
              }
            ]
          },
          {
            begin: /(->|\.)\s*/,
            relevance: 0,
            contains: [LASSO_DATAMEMBER]
          },
          {
            className: "class",
            beginKeywords: "define",
            returnEnd: true,
            end: "\\(|=>",
            contains: [
              hljs.inherit(hljs.TITLE_MODE, {
                begin: LASSO_IDENT_RE + "(=(?!>))?|[-+*/%](?!>)"
              })
            ]
          }
        ];
        return {
          aliases: ["ls", "lassoscript"],
          case_insensitive: true,
          lexemes: LASSO_IDENT_RE + "|&[lg]t;",
          keywords: LASSO_KEYWORDS,
          contains: [
            {
              className: "meta",
              begin: LASSO_CLOSE_RE,
              relevance: 0,
              starts: {
                // markup
                end: "\\[|" + LASSO_ANGLE_RE,
                returnEnd: true,
                relevance: 0,
                contains: [HTML_COMMENT]
              }
            },
            LASSO_NOPROCESS,
            LASSO_START,
            {
              className: "meta",
              begin: "\\[no_square_brackets",
              starts: {
                end: "\\[/no_square_brackets\\]", // not implemented in the language
                lexemes: LASSO_IDENT_RE + "|&[lg]t;",
                keywords: LASSO_KEYWORDS,
                contains: [
                  {
                    className: "meta",
                    begin: LASSO_CLOSE_RE,
                    relevance: 0,
                    starts: {
                      end: "\\[noprocess\\]|" + LASSO_ANGLE_RE,
                      returnEnd: true,
                      contains: [HTML_COMMENT]
                    }
                  },
                  LASSO_NOPROCESS,
                  LASSO_START
                ].concat(LASSO_CODE)
              }
            },
            {
              className: "meta",
              begin: "\\[",
              relevance: 0
            },
            {
              className: "meta",
              begin: "^#!",
              end: "lasso9$",
              relevance: 10
            }
          ].concat(LASSO_CODE)
        };
      };

      /***/
    },
    /* 120 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            {
              className: "attribute",
              begin: "^dn",
              end: ": ",
              excludeEnd: true,
              starts: { end: "$", relevance: 0 },
              relevance: 10
            },
            {
              className: "attribute",
              begin: "^\\w",
              end: ": ",
              excludeEnd: true,
              starts: { end: "$", relevance: 0 }
            },
            {
              className: "literal",
              begin: "^-",
              end: "$"
            },
            hljs.HASH_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 121 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            {
              className: "function",
              begin: "#+" + "[A-Za-z_0-9]*" + "\\(",
              end: " {",
              returnBegin: true,
              excludeEnd: true,
              contains: [
                {
                  className: "keyword",
                  begin: "#+"
                },
                {
                  className: "title",
                  begin: "[A-Za-z_][A-Za-z_0-9]*"
                },
                {
                  className: "params",
                  begin: "\\(",
                  end: "\\)",
                  endsParent: true,
                  contains: [
                    {
                      className: "string",
                      begin: '"',
                      end: '"'
                    },
                    {
                      className: "variable",
                      begin: "[A-Za-z_][A-Za-z_0-9]*"
                    }
                  ]
                }
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 122 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENT_RE = "[\\w-]+"; // yes, Less identifiers may begin with a digit
        var INTERP_IDENT_RE = "(" + IDENT_RE + "|@{" + IDENT_RE + "})";

        /* Generic Modes */

        var RULES = [],
          VALUE = []; // forward def. for recursive modes

        var STRING_MODE = function(c) {
          return {
            // Less strings are not multiline (also include '~' for more consistent coloring of "escaped" strings)
            className: "string",
            begin: "~?" + c + ".*?" + c
          };
        };

        var IDENT_MODE = function(name, begin, relevance) {
          return {
            className: name,
            begin: begin,
            relevance: relevance
          };
        };

        var PARENS_MODE = {
          // used only to properly balance nested parens inside mixin call, def. arg list
          begin: "\\(",
          end: "\\)",
          contains: VALUE,
          relevance: 0
        };

        // generic Less highlighter (used almost everywhere except selectors):
        VALUE.push(
          hljs.C_LINE_COMMENT_MODE,
          hljs.C_BLOCK_COMMENT_MODE,
          STRING_MODE("'"),
          STRING_MODE('"'),
          hljs.CSS_NUMBER_MODE, // fixme: it does not include dot for numbers like .5em :(
          {
            begin: "(url|data-uri)\\(",
            starts: { className: "string", end: "[\\)\\n]", excludeEnd: true }
          },
          IDENT_MODE("number", "#[0-9A-Fa-f]+\\b"),
          PARENS_MODE,
          IDENT_MODE("variable", "@@?" + IDENT_RE, 10),
          IDENT_MODE("variable", "@{" + IDENT_RE + "}"),
          IDENT_MODE("built_in", "~?`[^`]*?`"), // inline javascript (or whatever host language) *multiline* string
          {
            // @media features (it’s here to not duplicate things in AT_RULE_MODE with extra PARENS_MODE overriding):
            className: "attribute",
            begin: IDENT_RE + "\\s*:",
            end: ":",
            returnBegin: true,
            excludeEnd: true
          },
          {
            className: "meta",
            begin: "!important"
          }
        );

        var VALUE_WITH_RULESETS = VALUE.concat({
          begin: "{",
          end: "}",
          contains: RULES
        });

        var MIXIN_GUARD_MODE = {
          beginKeywords: "when",
          endsWithParent: true,
          contains: [{ beginKeywords: "and not" }].concat(VALUE) // using this form to override VALUE’s 'function' match
        };

        /* Rule-Level Modes */

        var RULE_MODE = {
          begin: INTERP_IDENT_RE + "\\s*:",
          returnBegin: true,
          end: "[;}]",
          relevance: 0,
          contains: [
            {
              className: "attribute",
              begin: INTERP_IDENT_RE,
              end: ":",
              excludeEnd: true,
              starts: {
                endsWithParent: true,
                illegal: "[<=$]",
                relevance: 0,
                contains: VALUE
              }
            }
          ]
        };

        var AT_RULE_MODE = {
          className: "keyword",
          begin:
            "@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\b",
          starts: {
            end: "[;{}]",
            returnEnd: true,
            contains: VALUE,
            relevance: 0
          }
        };

        // variable definitions and calls
        var VAR_RULE_MODE = {
          className: "variable",
          variants: [
            // using more strict pattern for higher relevance to increase chances of Less detection.
            // this is *the only* Less specific statement used in most of the sources, so...
            // (we’ll still often loose to the css-parser unless there's '//' comment,
            // simply because 1 variable just can't beat 99 properties :)
            { begin: "@" + IDENT_RE + "\\s*:", relevance: 15 },
            { begin: "@" + IDENT_RE }
          ],
          starts: {
            end: "[;}]",
            returnEnd: true,
            contains: VALUE_WITH_RULESETS
          }
        };

        var SELECTOR_MODE = {
          // first parse unambiguous selectors (i.e. those not starting with tag)
          // then fall into the scary lookahead-discriminator variant.
          // this mode also handles mixin definitions and calls
          variants: [
            {
              begin: "[\\.#:&\\[>]",
              end: "[;{}]" // mixin calls end with ';'
            },
            {
              begin: INTERP_IDENT_RE,
              end: "{"
            }
          ],
          returnBegin: true,
          returnEnd: true,
          illegal: "[<='$\"]",
          relevance: 0,
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            MIXIN_GUARD_MODE,
            IDENT_MODE("keyword", "all\\b"),
            IDENT_MODE("variable", "@{" + IDENT_RE + "}"), // otherwise it’s identified as tag
            IDENT_MODE("selector-tag", INTERP_IDENT_RE + "%?", 0), // '%' for more consistent coloring of @keyframes "tags"
            IDENT_MODE("selector-id", "#" + INTERP_IDENT_RE),
            IDENT_MODE("selector-class", "\\." + INTERP_IDENT_RE, 0),
            IDENT_MODE("selector-tag", "&", 0),
            { className: "selector-attr", begin: "\\[", end: "\\]" },
            {
              className: "selector-pseudo",
              begin: /:(:)?[a-zA-Z0-9\_\-\+\(\)"'.]+/
            },
            { begin: "\\(", end: "\\)", contains: VALUE_WITH_RULESETS }, // argument list of parametric mixins
            { begin: "!important" } // eat !important after mixin call or it will be colored as tag
          ]
        };

        RULES.push(
          hljs.C_LINE_COMMENT_MODE,
          hljs.C_BLOCK_COMMENT_MODE,
          AT_RULE_MODE,
          VAR_RULE_MODE,
          RULE_MODE,
          SELECTOR_MODE
        );

        return {
          case_insensitive: true,
          illegal: "[=>'/<($\"]",
          contains: RULES
        };
      };

      /***/
    },
    /* 123 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var LISP_IDENT_RE =
          "[a-zA-Z_\\-\\+\\*\\/\\<\\=\\>\\&\\#][a-zA-Z0-9_\\-\\+\\*\\/\\<\\=\\>\\&\\#!]*";
        var MEC_RE = "\\|[^]*?\\|";
        var LISP_SIMPLE_NUMBER_RE =
          "(\\-|\\+)?\\d+(\\.\\d+|\\/\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\+|\\-)?\\d+)?";
        var SHEBANG = {
          className: "meta",
          begin: "^#!",
          end: "$"
        };
        var LITERAL = {
          className: "literal",
          begin: "\\b(t{1}|nil)\\b"
        };
        var NUMBER = {
          className: "number",
          variants: [
            { begin: LISP_SIMPLE_NUMBER_RE, relevance: 0 },
            { begin: "#(b|B)[0-1]+(/[0-1]+)?" },
            { begin: "#(o|O)[0-7]+(/[0-7]+)?" },
            { begin: "#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?" },
            {
              begin:
                "#(c|C)\\(" +
                LISP_SIMPLE_NUMBER_RE +
                " +" +
                LISP_SIMPLE_NUMBER_RE,
              end: "\\)"
            }
          ]
        };
        var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });
        var COMMENT = hljs.COMMENT(";", "$", {
          relevance: 0
        });
        var VARIABLE = {
          begin: "\\*",
          end: "\\*"
        };
        var KEYWORD = {
          className: "symbol",
          begin: "[:&]" + LISP_IDENT_RE
        };
        var IDENT = {
          begin: LISP_IDENT_RE,
          relevance: 0
        };
        var MEC = {
          begin: MEC_RE
        };
        var QUOTED_LIST = {
          begin: "\\(",
          end: "\\)",
          contains: ["self", LITERAL, STRING, NUMBER, IDENT]
        };
        var QUOTED = {
          contains: [NUMBER, STRING, VARIABLE, KEYWORD, QUOTED_LIST, IDENT],
          variants: [
            {
              begin: "['`]\\(",
              end: "\\)"
            },
            {
              begin: "\\(quote ",
              end: "\\)",
              keywords: { name: "quote" }
            },
            {
              begin: "'" + MEC_RE
            }
          ]
        };
        var QUOTED_ATOM = {
          variants: [
            { begin: "'" + LISP_IDENT_RE },
            { begin: "#'" + LISP_IDENT_RE + "(::" + LISP_IDENT_RE + ")*" }
          ]
        };
        var LIST = {
          begin: "\\(\\s*",
          end: "\\)"
        };
        var BODY = {
          endsWithParent: true,
          relevance: 0
        };
        LIST.contains = [
          {
            className: "name",
            variants: [{ begin: LISP_IDENT_RE }, { begin: MEC_RE }]
          },
          BODY
        ];
        BODY.contains = [
          QUOTED,
          QUOTED_ATOM,
          LIST,
          LITERAL,
          NUMBER,
          STRING,
          COMMENT,
          VARIABLE,
          KEYWORD,
          MEC,
          IDENT
        ];

        return {
          illegal: /\S/,
          contains: [
            NUMBER,
            SHEBANG,
            LITERAL,
            STRING,
            COMMENT,
            QUOTED,
            QUOTED_ATOM,
            LIST,
            IDENT
          ]
        };
      };

      /***/
    },
    /* 124 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var VARIABLE = {
          begin: "\\b[gtps][A-Z]+[A-Za-z0-9_\\-]*\\b|\\$_[A-Z]+",
          relevance: 0
        };
        var COMMENT_MODES = [
          hljs.C_BLOCK_COMMENT_MODE,
          hljs.HASH_COMMENT_MODE,
          hljs.COMMENT("--", "$"),
          hljs.COMMENT("[^:]//", "$")
        ];
        var TITLE1 = hljs.inherit(hljs.TITLE_MODE, {
          variants: [
            { begin: "\\b_*rig[A-Z]+[A-Za-z0-9_\\-]*" },
            { begin: "\\b_[a-z0-9\\-]+" }
          ]
        });
        var TITLE2 = hljs.inherit(hljs.TITLE_MODE, {
          begin: "\\b([A-Za-z0-9_\\-]+)\\b"
        });
        return {
          case_insensitive: false,
          keywords: {
            keyword:
              "$_COOKIE $_FILES $_GET $_GET_BINARY $_GET_RAW $_POST $_POST_BINARY $_POST_RAW $_SESSION $_SERVER " +
              "codepoint codepoints segment segments codeunit codeunits sentence sentences trueWord trueWords paragraph " +
              "after byte bytes english the until http forever descending using line real8 with seventh " +
              "for stdout finally element word words fourth before black ninth sixth characters chars stderr " +
              "uInt1 uInt1s uInt2 uInt2s stdin string lines relative rel any fifth items from middle mid " +
              "at else of catch then third it file milliseconds seconds second secs sec int1 int1s int4 " +
              "int4s internet int2 int2s normal text item last long detailed effective uInt4 uInt4s repeat " +
              "end repeat URL in try into switch to words https token binfile each tenth as ticks tick " +
              "system real4 by dateItems without char character ascending eighth whole dateTime numeric short " +
              "first ftp integer abbreviated abbr abbrev private case while if " +
              "div mod wrap and or bitAnd bitNot bitOr bitXor among not in a an within " +
              "contains ends with begins the keys of keys",
            literal:
              "SIX TEN FORMFEED NINE ZERO NONE SPACE FOUR FALSE COLON CRLF PI COMMA ENDOFFILE EOF EIGHT FIVE " +
              "QUOTE EMPTY ONE TRUE RETURN CR LINEFEED RIGHT BACKSLASH NULL SEVEN TAB THREE TWO " +
              "six ten formfeed nine zero none space four false colon crlf pi comma endoffile eof eight five " +
              "quote empty one true return cr linefeed right backslash null seven tab three two " +
              "RIVERSION RISTATE FILE_READ_MODE FILE_WRITE_MODE FILE_WRITE_MODE DIR_WRITE_MODE FILE_READ_UMASK " +
              "FILE_WRITE_UMASK DIR_READ_UMASK DIR_WRITE_UMASK",
            built_in:
              "put abs acos aliasReference annuity arrayDecode arrayEncode asin atan atan2 average avg avgDev base64Decode " +
              "base64Encode baseConvert binaryDecode binaryEncode byteOffset byteToNum cachedURL cachedURLs charToNum " +
              "cipherNames codepointOffset codepointProperty codepointToNum codeunitOffset commandNames compound compress " +
              "constantNames cos date dateFormat decompress directories " +
              "diskSpace DNSServers exp exp1 exp2 exp10 extents files flushEvents folders format functionNames geometricMean global " +
              "globals hasMemory harmonicMean hostAddress hostAddressToName hostName hostNameToAddress isNumber ISOToMac itemOffset " +
              "keys len length libURLErrorData libUrlFormData libURLftpCommand libURLLastHTTPHeaders libURLLastRHHeaders " +
              "libUrlMultipartFormAddPart libUrlMultipartFormData libURLVersion lineOffset ln ln1 localNames log log2 log10 " +
              "longFilePath lower macToISO matchChunk matchText matrixMultiply max md5Digest median merge millisec " +
              "millisecs millisecond milliseconds min monthNames nativeCharToNum normalizeText num number numToByte numToChar " +
              "numToCodepoint numToNativeChar offset open openfiles openProcesses openProcessIDs openSockets " +
              "paragraphOffset paramCount param params peerAddress pendingMessages platform popStdDev populationStandardDeviation " +
              "populationVariance popVariance processID random randomBytes replaceText result revCreateXMLTree revCreateXMLTreeFromFile " +
              "revCurrentRecord revCurrentRecordIsFirst revCurrentRecordIsLast revDatabaseColumnCount revDatabaseColumnIsNull " +
              "revDatabaseColumnLengths revDatabaseColumnNames revDatabaseColumnNamed revDatabaseColumnNumbered " +
              "revDatabaseColumnTypes revDatabaseConnectResult revDatabaseCursors revDatabaseID revDatabaseTableNames " +
              "revDatabaseType revDataFromQuery revdb_closeCursor revdb_columnbynumber revdb_columncount revdb_columnisnull " +
              "revdb_columnlengths revdb_columnnames revdb_columntypes revdb_commit revdb_connect revdb_connections " +
              "revdb_connectionerr revdb_currentrecord revdb_cursorconnection revdb_cursorerr revdb_cursors revdb_dbtype " +
              "revdb_disconnect revdb_execute revdb_iseof revdb_isbof revdb_movefirst revdb_movelast revdb_movenext " +
              "revdb_moveprev revdb_query revdb_querylist revdb_recordcount revdb_rollback revdb_tablenames " +
              "revGetDatabaseDriverPath revNumberOfRecords revOpenDatabase revOpenDatabases revQueryDatabase " +
              "revQueryDatabaseBlob revQueryResult revQueryIsAtStart revQueryIsAtEnd revUnixFromMacPath revXMLAttribute " +
              "revXMLAttributes revXMLAttributeValues revXMLChildContents revXMLChildNames revXMLCreateTreeFromFileWithNamespaces " +
              "revXMLCreateTreeWithNamespaces revXMLDataFromXPathQuery revXMLEvaluateXPath revXMLFirstChild revXMLMatchingNode " +
              "revXMLNextSibling revXMLNodeContents revXMLNumberOfChildren revXMLParent revXMLPreviousSibling " +
              "revXMLRootNode revXMLRPC_CreateRequest revXMLRPC_Documents revXMLRPC_Error " +
              "revXMLRPC_GetHost revXMLRPC_GetMethod revXMLRPC_GetParam revXMLText revXMLRPC_Execute " +
              "revXMLRPC_GetParamCount revXMLRPC_GetParamNode revXMLRPC_GetParamType revXMLRPC_GetPath revXMLRPC_GetPort " +
              "revXMLRPC_GetProtocol revXMLRPC_GetRequest revXMLRPC_GetResponse revXMLRPC_GetSocket revXMLTree " +
              "revXMLTrees revXMLValidateDTD revZipDescribeItem revZipEnumerateItems revZipOpenArchives round sampVariance " +
              "sec secs seconds sentenceOffset sha1Digest shell shortFilePath sin specialFolderPath sqrt standardDeviation statRound " +
              "stdDev sum sysError systemVersion tan tempName textDecode textEncode tick ticks time to tokenOffset toLower toUpper " +
              "transpose truewordOffset trunc uniDecode uniEncode upper URLDecode URLEncode URLStatus uuid value variableNames " +
              "variance version waitDepth weekdayNames wordOffset xsltApplyStylesheet xsltApplyStylesheetFromFile xsltLoadStylesheet " +
              "xsltLoadStylesheetFromFile add breakpoint cancel clear local variable file word line folder directory URL close socket process " +
              "combine constant convert create new alias folder directory decrypt delete variable word line folder " +
              "directory URL dispatch divide do encrypt filter get include intersect kill libURLDownloadToFile " +
              "libURLFollowHttpRedirects libURLftpUpload libURLftpUploadFile libURLresetAll libUrlSetAuthCallback " +
              "libURLSetCustomHTTPHeaders libUrlSetExpect100 libURLSetFTPListCommand libURLSetFTPMode libURLSetFTPStopTime " +
              "libURLSetStatusCallback load multiply socket prepare process post seek rel relative read from process rename " +
              "replace require resetAll resolve revAddXMLNode revAppendXML revCloseCursor revCloseDatabase revCommitDatabase " +
              "revCopyFile revCopyFolder revCopyXMLNode revDeleteFolder revDeleteXMLNode revDeleteAllXMLTrees " +
              "revDeleteXMLTree revExecuteSQL revGoURL revInsertXMLNode revMoveFolder revMoveToFirstRecord revMoveToLastRecord " +
              "revMoveToNextRecord revMoveToPreviousRecord revMoveToRecord revMoveXMLNode revPutIntoXMLNode revRollBackDatabase " +
              "revSetDatabaseDriverPath revSetXMLAttribute revXMLRPC_AddParam revXMLRPC_DeleteAllDocuments revXMLAddDTD " +
              "revXMLRPC_Free revXMLRPC_FreeAll revXMLRPC_DeleteDocument revXMLRPC_DeleteParam revXMLRPC_SetHost " +
              "revXMLRPC_SetMethod revXMLRPC_SetPort revXMLRPC_SetProtocol revXMLRPC_SetSocket revZipAddItemWithData " +
              "revZipAddItemWithFile revZipAddUncompressedItemWithData revZipAddUncompressedItemWithFile revZipCancel " +
              "revZipCloseArchive revZipDeleteItem revZipExtractItemToFile revZipExtractItemToVariable revZipSetProgressCallback " +
              "revZipRenameItem revZipReplaceItemWithData revZipReplaceItemWithFile revZipOpenArchive send set sort split start stop " +
              "subtract union unload wait write"
          },
          contains: [
            VARIABLE,
            {
              className: "keyword",
              begin: "\\bend\\sif\\b"
            },
            {
              className: "function",
              beginKeywords: "function",
              end: "$",
              contains: [
                VARIABLE,
                TITLE2,
                hljs.APOS_STRING_MODE,
                hljs.QUOTE_STRING_MODE,
                hljs.BINARY_NUMBER_MODE,
                hljs.C_NUMBER_MODE,
                TITLE1
              ]
            },
            {
              className: "function",
              begin: "\\bend\\s+",
              end: "$",
              keywords: "end",
              contains: [TITLE2, TITLE1],
              relevance: 0
            },
            {
              beginKeywords: "command on",
              end: "$",
              contains: [
                VARIABLE,
                TITLE2,
                hljs.APOS_STRING_MODE,
                hljs.QUOTE_STRING_MODE,
                hljs.BINARY_NUMBER_MODE,
                hljs.C_NUMBER_MODE,
                TITLE1
              ]
            },
            {
              className: "meta",
              variants: [
                {
                  begin: "<\\?(rev|lc|livecode)",
                  relevance: 10
                },
                { begin: "<\\?" },
                { begin: "\\?>" }
              ]
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.BINARY_NUMBER_MODE,
            hljs.C_NUMBER_MODE,
            TITLE1
          ].concat(COMMENT_MODES),
          illegal: ";$|^\\[|^=|&|{"
        };
      };

      /***/
    },
    /* 125 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            // JS keywords
            "in if for while finally new do return else break catch instanceof throw try this " +
            "switch continue typeof delete debugger case default function var with " +
            // LiveScript keywords
            "then unless until loop of by when and or is isnt not it that otherwise from to til fallthrough super " +
            "case default function var void const let enum export import native " +
            "__hasProp __extends __slice __bind __indexOf",
          literal:
            // JS literals
            "true false null undefined " +
            // LiveScript literals
            "yes no on off it that void",
          built_in: "npm require console print module global window document"
        };
        var JS_IDENT_RE = "[A-Za-z$_](?:-[0-9A-Za-z$_]|[0-9A-Za-z$_])*";
        var TITLE = hljs.inherit(hljs.TITLE_MODE, { begin: JS_IDENT_RE });
        var SUBST = {
          className: "subst",
          begin: /#\{/,
          end: /}/,
          keywords: KEYWORDS
        };
        var SUBST_SIMPLE = {
          className: "subst",
          begin: /#[A-Za-z$_]/,
          end: /(?:\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,
          keywords: KEYWORDS
        };
        var EXPRESSIONS = [
          hljs.BINARY_NUMBER_MODE,
          {
            className: "number",
            begin:
              "(\\b0[xX][a-fA-F0-9_]+)|(\\b\\d(\\d|_\\d)*(\\.(\\d(\\d|_\\d)*)?)?(_*[eE]([-+]\\d(_\\d|\\d)*)?)?[_a-z]*)",
            relevance: 0,
            starts: { end: "(\\s*/)?", relevance: 0 } // a number tries to eat the following slash to prevent treating it as a regexp
          },
          {
            className: "string",
            variants: [
              {
                begin: /'''/,
                end: /'''/,
                contains: [hljs.BACKSLASH_ESCAPE]
              },
              {
                begin: /'/,
                end: /'/,
                contains: [hljs.BACKSLASH_ESCAPE]
              },
              {
                begin: /"""/,
                end: /"""/,
                contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]
              },
              {
                begin: /"/,
                end: /"/,
                contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]
              },
              {
                begin: /\\/,
                end: /(\s|$)/,
                excludeEnd: true
              }
            ]
          },
          {
            className: "regexp",
            variants: [
              {
                begin: "//",
                end: "//[gim]*",
                contains: [SUBST, hljs.HASH_COMMENT_MODE]
              },
              {
                // regex can't start with space to parse x / 2 / 3 as two divisions
                // regex can't start with *, and it supports an "illegal" in the main mode
                begin: /\/(?![ *])(\\\/|.)*?\/[gim]*(?=\W|$)/
              }
            ]
          },
          {
            begin: "@" + JS_IDENT_RE
          },
          {
            begin: "``",
            end: "``",
            excludeBegin: true,
            excludeEnd: true,
            subLanguage: "javascript"
          }
        ];
        SUBST.contains = EXPRESSIONS;

        var PARAMS = {
          className: "params",
          begin: "\\(",
          returnBegin: true,
          /* We need another contained nameless mode to not have every nested
	    pair of parens to be called "params" */
          contains: [
            {
              begin: /\(/,
              end: /\)/,
              keywords: KEYWORDS,
              contains: ["self"].concat(EXPRESSIONS)
            }
          ]
        };

        return {
          aliases: ["ls"],
          keywords: KEYWORDS,
          illegal: /\/\*/,
          contains: EXPRESSIONS.concat([
            hljs.COMMENT("\\/\\*", "\\*\\/"),
            hljs.HASH_COMMENT_MODE,
            {
              className: "function",
              contains: [TITLE, PARAMS],
              returnBegin: true,
              variants: [
                {
                  begin:
                    "(" +
                    JS_IDENT_RE +
                    "\\s*(?:=|:=)\\s*)?(\\(.*\\))?\\s*\\B\\->\\*?",
                  end: "\\->\\*?"
                },
                {
                  begin:
                    "(" +
                    JS_IDENT_RE +
                    "\\s*(?:=|:=)\\s*)?!?(\\(.*\\))?\\s*\\B[-~]{1,2}>\\*?",
                  end: "[-~]{1,2}>\\*?"
                },
                {
                  begin:
                    "(" +
                    JS_IDENT_RE +
                    "\\s*(?:=|:=)\\s*)?(\\(.*\\))?\\s*\\B!?[-~]{1,2}>\\*?",
                  end: "!?[-~]{1,2}>\\*?"
                }
              ]
            },
            {
              className: "class",
              beginKeywords: "class",
              end: "$",
              illegal: /[:="\[\]]/,
              contains: [
                {
                  beginKeywords: "extends",
                  endsWithParent: true,
                  illegal: /[:="\[\]]/,
                  contains: [TITLE]
                },
                TITLE
              ]
            },
            {
              begin: JS_IDENT_RE + ":",
              end: ":",
              returnBegin: true,
              returnEnd: true,
              relevance: 0
            }
          ])
        };
      };

      /***/
    },
    /* 126 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var identifier = "([-a-zA-Z$._][\\w\\-$.]*)";
        return {
          //lexemes: '[.%]?' + hljs.IDENT_RE,
          keywords:
            "begin end true false declare define global " +
            "constant private linker_private internal " +
            "available_externally linkonce linkonce_odr weak " +
            "weak_odr appending dllimport dllexport common " +
            "default hidden protected extern_weak external " +
            "thread_local zeroinitializer undef null to tail " +
            "target triple datalayout volatile nuw nsw nnan " +
            "ninf nsz arcp fast exact inbounds align " +
            "addrspace section alias module asm sideeffect " +
            "gc dbg linker_private_weak attributes blockaddress " +
            "initialexec localdynamic localexec prefix unnamed_addr " +
            "ccc fastcc coldcc x86_stdcallcc x86_fastcallcc " +
            "arm_apcscc arm_aapcscc arm_aapcs_vfpcc ptx_device " +
            "ptx_kernel intel_ocl_bicc msp430_intrcc spir_func " +
            "spir_kernel x86_64_sysvcc x86_64_win64cc x86_thiscallcc " +
            "cc c signext zeroext inreg sret nounwind " +
            "noreturn noalias nocapture byval nest readnone " +
            "readonly inlinehint noinline alwaysinline optsize ssp " +
            "sspreq noredzone noimplicitfloat naked builtin cold " +
            "nobuiltin noduplicate nonlazybind optnone returns_twice " +
            "sanitize_address sanitize_memory sanitize_thread sspstrong " +
            "uwtable returned type opaque eq ne slt sgt " +
            "sle sge ult ugt ule uge oeq one olt ogt " +
            "ole oge ord uno ueq une x acq_rel acquire " +
            "alignstack atomic catch cleanup filter inteldialect " +
            "max min monotonic nand personality release seq_cst " +
            "singlethread umax umin unordered xchg add fadd " +
            "sub fsub mul fmul udiv sdiv fdiv urem srem " +
            "frem shl lshr ashr and or xor icmp fcmp " +
            "phi call trunc zext sext fptrunc fpext uitofp " +
            "sitofp fptoui fptosi inttoptr ptrtoint bitcast " +
            "addrspacecast select va_arg ret br switch invoke " +
            "unwind unreachable indirectbr landingpad resume " +
            "malloc alloca free load store getelementptr " +
            "extractelement insertelement shufflevector getresult " +
            "extractvalue insertvalue atomicrmw cmpxchg fence " +
            "argmemonly double",
          contains: [
            {
              className: "keyword",
              begin: "i\\d+"
            },
            hljs.COMMENT(";", "\\n", { relevance: 0 }),
            // Double quote string
            hljs.QUOTE_STRING_MODE,
            {
              className: "string",
              variants: [
                // Double-quoted string
                { begin: '"', end: '[^\\\\]"' }
              ],
              relevance: 0
            },
            {
              className: "title",
              variants: [
                { begin: "@" + identifier },
                { begin: "@\\d+" },
                { begin: "!" + identifier },
                { begin: "!\\d+" + identifier }
              ]
            },
            {
              className: "symbol",
              variants: [
                { begin: "%" + identifier },
                { begin: "%\\d+" },
                { begin: "#\\d+" }
              ]
            },
            {
              className: "number",
              variants: [
                { begin: "0[xX][a-fA-F0-9]+" },
                { begin: "-?\\d+(?:[.]\\d+)?(?:[eE][-+]?\\d+(?:[.]\\d+)?)?" }
              ],
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 127 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var LSL_STRING_ESCAPE_CHARS = {
          className: "subst",
          begin: /\\[tn"\\]/
        };

        var LSL_STRINGS = {
          className: "string",
          begin: '"',
          end: '"',
          contains: [LSL_STRING_ESCAPE_CHARS]
        };

        var LSL_NUMBERS = {
          className: "number",
          begin: hljs.C_NUMBER_RE
        };

        var LSL_CONSTANTS = {
          className: "literal",
          variants: [
            {
              begin: "\\b(?:PI|TWO_PI|PI_BY_TWO|DEG_TO_RAD|RAD_TO_DEG|SQRT2)\\b"
            },
            {
              begin:
                "\\b(?:XP_ERROR_(?:EXPERIENCES_DISABLED|EXPERIENCE_(?:DISABLED|SUSPENDED)|INVALID_(?:EXPERIENCE|PARAMETERS)|KEY_NOT_FOUND|MATURITY_EXCEEDED|NONE|NOT_(?:FOUND|PERMITTED(?:_LAND)?)|NO_EXPERIENCE|QUOTA_EXCEEDED|RETRY_UPDATE|STORAGE_EXCEPTION|STORE_DISABLED|THROTTLED|UNKNOWN_ERROR)|JSON_APPEND|STATUS_(?:PHYSICS|ROTATE_[XYZ]|PHANTOM|SANDBOX|BLOCK_GRAB(?:_OBJECT)?|(?:DIE|RETURN)_AT_EDGE|CAST_SHADOWS|OK|MALFORMED_PARAMS|TYPE_MISMATCH|BOUNDS_ERROR|NOT_(?:FOUND|SUPPORTED)|INTERNAL_ERROR|WHITELIST_FAILED)|AGENT(?:_(?:BY_(?:LEGACY_|USER)NAME|FLYING|ATTACHMENTS|SCRIPTED|MOUSELOOK|SITTING|ON_OBJECT|AWAY|WALKING|IN_AIR|TYPING|CROUCHING|BUSY|ALWAYS_RUN|AUTOPILOT|LIST_(?:PARCEL(?:_OWNER)?|REGION)))?|CAMERA_(?:PITCH|DISTANCE|BEHINDNESS_(?:ANGLE|LAG)|(?:FOCUS|POSITION)(?:_(?:THRESHOLD|LOCKED|LAG))?|FOCUS_OFFSET|ACTIVE)|ANIM_ON|LOOP|REVERSE|PING_PONG|SMOOTH|ROTATE|SCALE|ALL_SIDES|LINK_(?:ROOT|SET|ALL_(?:OTHERS|CHILDREN)|THIS)|ACTIVE|PASS(?:IVE|_(?:ALWAYS|IF_NOT_HANDLED|NEVER))|SCRIPTED|CONTROL_(?:FWD|BACK|(?:ROT_)?(?:LEFT|RIGHT)|UP|DOWN|(?:ML_)?LBUTTON)|PERMISSION_(?:RETURN_OBJECTS|DEBIT|OVERRIDE_ANIMATIONS|SILENT_ESTATE_MANAGEMENT|TAKE_CONTROLS|TRIGGER_ANIMATION|ATTACH|CHANGE_LINKS|(?:CONTROL|TRACK)_CAMERA|TELEPORT)|INVENTORY_(?:TEXTURE|SOUND|OBJECT|SCRIPT|LANDMARK|CLOTHING|NOTECARD|BODYPART|ANIMATION|GESTURE|ALL|NONE)|CHANGED_(?:INVENTORY|COLOR|SHAPE|SCALE|TEXTURE|LINK|ALLOWED_DROP|OWNER|REGION(?:_START)?|TELEPORT|MEDIA)|OBJECT_(?:CLICK_ACTION|HOVER_HEIGHT|LAST_OWNER_ID|(?:PHYSICS|SERVER|STREAMING)_COST|UNKNOWN_DETAIL|CHARACTER_TIME|PHANTOM|PHYSICS|TEMP_ON_REZ|NAME|DESC|POS|PRIM_(?:COUNT|EQUIVALENCE)|RETURN_(?:PARCEL(?:_OWNER)?|REGION)|REZZER_KEY|ROO?T|VELOCITY|OMEGA|OWNER|GROUP|CREATOR|ATTACHED_POINT|RENDER_WEIGHT|(?:BODY_SHAPE|PATHFINDING)_TYPE|(?:RUNNING|TOTAL)_SCRIPT_COUNT|TOTAL_INVENTORY_COUNT|SCRIPT_(?:MEMORY|TIME))|TYPE_(?:INTEGER|FLOAT|STRING|KEY|VECTOR|ROTATION|INVALID)|(?:DEBUG|PUBLIC)_CHANNEL|ATTACH_(?:AVATAR_CENTER|CHEST|HEAD|BACK|PELVIS|MOUTH|CHIN|NECK|NOSE|BELLY|[LR](?:SHOULDER|HAND|FOOT|EAR|EYE|[UL](?:ARM|LEG)|HIP)|(?:LEFT|RIGHT)_PEC|HUD_(?:CENTER_[12]|TOP_(?:RIGHT|CENTER|LEFT)|BOTTOM(?:_(?:RIGHT|LEFT))?)|[LR]HAND_RING1|TAIL_(?:BASE|TIP)|[LR]WING|FACE_(?:JAW|[LR]EAR|[LR]EYE|TOUNGE)|GROIN|HIND_[LR]FOOT)|LAND_(?:LEVEL|RAISE|LOWER|SMOOTH|NOISE|REVERT)|DATA_(?:ONLINE|NAME|BORN|SIM_(?:POS|STATUS|RATING)|PAYINFO)|PAYMENT_INFO_(?:ON_FILE|USED)|REMOTE_DATA_(?:CHANNEL|REQUEST|REPLY)|PSYS_(?:PART_(?:BF_(?:ZERO|ONE(?:_MINUS_(?:DEST_COLOR|SOURCE_(ALPHA|COLOR)))?|DEST_COLOR|SOURCE_(ALPHA|COLOR))|BLEND_FUNC_(DEST|SOURCE)|FLAGS|(?:START|END)_(?:COLOR|ALPHA|SCALE|GLOW)|MAX_AGE|(?:RIBBON|WIND|INTERP_(?:COLOR|SCALE)|BOUNCE|FOLLOW_(?:SRC|VELOCITY)|TARGET_(?:POS|LINEAR)|EMISSIVE)_MASK)|SRC_(?:MAX_AGE|PATTERN|ANGLE_(?:BEGIN|END)|BURST_(?:RATE|PART_COUNT|RADIUS|SPEED_(?:MIN|MAX))|ACCEL|TEXTURE|TARGET_KEY|OMEGA|PATTERN_(?:DROP|EXPLODE|ANGLE(?:_CONE(?:_EMPTY)?)?)))|VEHICLE_(?:REFERENCE_FRAME|TYPE_(?:NONE|SLED|CAR|BOAT|AIRPLANE|BALLOON)|(?:LINEAR|ANGULAR)_(?:FRICTION_TIMESCALE|MOTOR_DIRECTION)|LINEAR_MOTOR_OFFSET|HOVER_(?:HEIGHT|EFFICIENCY|TIMESCALE)|BUOYANCY|(?:LINEAR|ANGULAR)_(?:DEFLECTION_(?:EFFICIENCY|TIMESCALE)|MOTOR_(?:DECAY_)?TIMESCALE)|VERTICAL_ATTRACTION_(?:EFFICIENCY|TIMESCALE)|BANKING_(?:EFFICIENCY|MIX|TIMESCALE)|FLAG_(?:NO_DEFLECTION_UP|LIMIT_(?:ROLL_ONLY|MOTOR_UP)|HOVER_(?:(?:WATER|TERRAIN|UP)_ONLY|GLOBAL_HEIGHT)|MOUSELOOK_(?:STEER|BANK)|CAMERA_DECOUPLED))|PRIM_(?:ALPHA_MODE(?:_(?:BLEND|EMISSIVE|MASK|NONE))?|NORMAL|SPECULAR|TYPE(?:_(?:BOX|CYLINDER|PRISM|SPHERE|TORUS|TUBE|RING|SCULPT))?|HOLE_(?:DEFAULT|CIRCLE|SQUARE|TRIANGLE)|MATERIAL(?:_(?:STONE|METAL|GLASS|WOOD|FLESH|PLASTIC|RUBBER))?|SHINY_(?:NONE|LOW|MEDIUM|HIGH)|BUMP_(?:NONE|BRIGHT|DARK|WOOD|BARK|BRICKS|CHECKER|CONCRETE|TILE|STONE|DISKS|GRAVEL|BLOBS|SIDING|LARGETILE|STUCCO|SUCTION|WEAVE)|TEXGEN_(?:DEFAULT|PLANAR)|SCULPT_(?:TYPE_(?:SPHERE|TORUS|PLANE|CYLINDER|MASK)|FLAG_(?:MIRROR|INVERT))|PHYSICS(?:_(?:SHAPE_(?:CONVEX|NONE|PRIM|TYPE)))?|(?:POS|ROT)_LOCAL|SLICE|TEXT|FLEXIBLE|POINT_LIGHT|TEMP_ON_REZ|PHANTOM|POSITION|SIZE|ROTATION|TEXTURE|NAME|OMEGA|DESC|LINK_TARGET|COLOR|BUMP_SHINY|FULLBRIGHT|TEXGEN|GLOW|MEDIA_(?:ALT_IMAGE_ENABLE|CONTROLS|(?:CURRENT|HOME)_URL|AUTO_(?:LOOP|PLAY|SCALE|ZOOM)|FIRST_CLICK_INTERACT|(?:WIDTH|HEIGHT)_PIXELS|WHITELIST(?:_ENABLE)?|PERMS_(?:INTERACT|CONTROL)|PARAM_MAX|CONTROLS_(?:STANDARD|MINI)|PERM_(?:NONE|OWNER|GROUP|ANYONE)|MAX_(?:URL_LENGTH|WHITELIST_(?:SIZE|COUNT)|(?:WIDTH|HEIGHT)_PIXELS)))|MASK_(?:BASE|OWNER|GROUP|EVERYONE|NEXT)|PERM_(?:TRANSFER|MODIFY|COPY|MOVE|ALL)|PARCEL_(?:MEDIA_COMMAND_(?:STOP|PAUSE|PLAY|LOOP|TEXTURE|URL|TIME|AGENT|UNLOAD|AUTO_ALIGN|TYPE|SIZE|DESC|LOOP_SET)|FLAG_(?:ALLOW_(?:FLY|(?:GROUP_)?SCRIPTS|LANDMARK|TERRAFORM|DAMAGE|CREATE_(?:GROUP_)?OBJECTS)|USE_(?:ACCESS_(?:GROUP|LIST)|BAN_LIST|LAND_PASS_LIST)|LOCAL_SOUND_ONLY|RESTRICT_PUSHOBJECT|ALLOW_(?:GROUP|ALL)_OBJECT_ENTRY)|COUNT_(?:TOTAL|OWNER|GROUP|OTHER|SELECTED|TEMP)|DETAILS_(?:NAME|DESC|OWNER|GROUP|AREA|ID|SEE_AVATARS))|LIST_STAT_(?:MAX|MIN|MEAN|MEDIAN|STD_DEV|SUM(?:_SQUARES)?|NUM_COUNT|GEOMETRIC_MEAN|RANGE)|PAY_(?:HIDE|DEFAULT)|REGION_FLAG_(?:ALLOW_DAMAGE|FIXED_SUN|BLOCK_TERRAFORM|SANDBOX|DISABLE_(?:COLLISIONS|PHYSICS)|BLOCK_FLY|ALLOW_DIRECT_TELEPORT|RESTRICT_PUSHOBJECT)|HTTP_(?:METHOD|MIMETYPE|BODY_(?:MAXLENGTH|TRUNCATED)|CUSTOM_HEADER|PRAGMA_NO_CACHE|VERBOSE_THROTTLE|VERIFY_CERT)|STRING_(?:TRIM(?:_(?:HEAD|TAIL))?)|CLICK_ACTION_(?:NONE|TOUCH|SIT|BUY|PAY|OPEN(?:_MEDIA)?|PLAY|ZOOM)|TOUCH_INVALID_FACE|PROFILE_(?:NONE|SCRIPT_MEMORY)|RC_(?:DATA_FLAGS|DETECT_PHANTOM|GET_(?:LINK_NUM|NORMAL|ROOT_KEY)|MAX_HITS|REJECT_(?:TYPES|AGENTS|(?:NON)?PHYSICAL|LAND))|RCERR_(?:CAST_TIME_EXCEEDED|SIM_PERF_LOW|UNKNOWN)|ESTATE_ACCESS_(?:ALLOWED_(?:AGENT|GROUP)_(?:ADD|REMOVE)|BANNED_AGENT_(?:ADD|REMOVE))|DENSITY|FRICTION|RESTITUTION|GRAVITY_MULTIPLIER|KFM_(?:COMMAND|CMD_(?:PLAY|STOP|PAUSE)|MODE|FORWARD|LOOP|PING_PONG|REVERSE|DATA|ROTATION|TRANSLATION)|ERR_(?:GENERIC|PARCEL_PERMISSIONS|MALFORMED_PARAMS|RUNTIME_PERMISSIONS|THROTTLED)|CHARACTER_(?:CMD_(?:(?:SMOOTH_)?STOP|JUMP)|DESIRED_(?:TURN_)?SPEED|RADIUS|STAY_WITHIN_PARCEL|LENGTH|ORIENTATION|ACCOUNT_FOR_SKIPPED_FRAMES|AVOIDANCE_MODE|TYPE(?:_(?:[ABCD]|NONE))?|MAX_(?:DECEL|TURN_RADIUS|(?:ACCEL|SPEED)))|PURSUIT_(?:OFFSET|FUZZ_FACTOR|GOAL_TOLERANCE|INTERCEPT)|REQUIRE_LINE_OF_SIGHT|FORCE_DIRECT_PATH|VERTICAL|HORIZONTAL|AVOID_(?:CHARACTERS|DYNAMIC_OBSTACLES|NONE)|PU_(?:EVADE_(?:HIDDEN|SPOTTED)|FAILURE_(?:DYNAMIC_PATHFINDING_DISABLED|INVALID_(?:GOAL|START)|NO_(?:NAVMESH|VALID_DESTINATION)|OTHER|TARGET_GONE|(?:PARCEL_)?UNREACHABLE)|(?:GOAL|SLOWDOWN_DISTANCE)_REACHED)|TRAVERSAL_TYPE(?:_(?:FAST|NONE|SLOW))?|CONTENT_TYPE_(?:ATOM|FORM|HTML|JSON|LLSD|RSS|TEXT|XHTML|XML)|GCNP_(?:RADIUS|STATIC)|(?:PATROL|WANDER)_PAUSE_AT_WAYPOINTS|OPT_(?:AVATAR|CHARACTER|EXCLUSION_VOLUME|LEGACY_LINKSET|MATERIAL_VOLUME|OTHER|STATIC_OBSTACLE|WALKABLE)|SIM_STAT_PCT_CHARS_STEPPED)\\b"
            },
            {
              begin: "\\b(?:FALSE|TRUE)\\b"
            },
            {
              begin: "\\b(?:ZERO_ROTATION)\\b"
            },
            {
              begin:
                "\\b(?:EOF|JSON_(?:ARRAY|DELETE|FALSE|INVALID|NULL|NUMBER|OBJECT|STRING|TRUE)|NULL_KEY|TEXTURE_(?:BLANK|DEFAULT|MEDIA|PLYWOOD|TRANSPARENT)|URL_REQUEST_(?:GRANTED|DENIED))\\b"
            },
            {
              begin: "\\b(?:ZERO_VECTOR|TOUCH_INVALID_(?:TEXCOORD|VECTOR))\\b"
            }
          ]
        };

        var LSL_FUNCTIONS = {
          className: "built_in",
          begin:
            "\\b(?:ll(?:AgentInExperience|(?:Create|DataSize|Delete|KeyCount|Keys|Read|Update)KeyValue|GetExperience(?:Details|ErrorMessage)|ReturnObjectsBy(?:ID|Owner)|Json(?:2List|[GS]etValue|ValueType)|Sin|Cos|Tan|Atan2|Sqrt|Pow|Abs|Fabs|Frand|Floor|Ceil|Round|Vec(?:Mag|Norm|Dist)|Rot(?:Between|2(?:Euler|Fwd|Left|Up))|(?:Euler|Axes)2Rot|Whisper|(?:Region|Owner)?Say|Shout|Listen(?:Control|Remove)?|Sensor(?:Repeat|Remove)?|Detected(?:Name|Key|Owner|Type|Pos|Vel|Grab|Rot|Group|LinkNumber)|Die|Ground|Wind|(?:[GS]et)(?:AnimationOverride|MemoryLimit|PrimMediaParams|ParcelMusicURL|Object(?:Desc|Name)|PhysicsMaterial|Status|Scale|Color|Alpha|Texture|Pos|Rot|Force|Torque)|ResetAnimationOverride|(?:Scale|Offset|Rotate)Texture|(?:Rot)?Target(?:Remove)?|(?:Stop)?MoveToTarget|Apply(?:Rotational)?Impulse|Set(?:KeyframedMotion|ContentType|RegionPos|(?:Angular)?Velocity|Buoyancy|HoverHeight|ForceAndTorque|TimerEvent|ScriptState|Damage|TextureAnim|Sound(?:Queueing|Radius)|Vehicle(?:Type|(?:Float|Vector|Rotation)Param)|(?:Touch|Sit)?Text|Camera(?:Eye|At)Offset|PrimitiveParams|ClickAction|Link(?:Alpha|Color|PrimitiveParams(?:Fast)?|Texture(?:Anim)?|Camera|Media)|RemoteScriptAccessPin|PayPrice|LocalRot)|ScaleByFactor|Get(?:(?:Max|Min)ScaleFactor|ClosestNavPoint|StaticPath|SimStats|Env|PrimitiveParams|Link(?:PrimitiveParams|Number(?:OfSides)?|Key|Name|Media)|HTTPHeader|FreeURLs|Object(?:Details|PermMask|PrimCount)|Parcel(?:MaxPrims|Details|Prim(?:Count|Owners))|Attached(?:List)?|(?:SPMax|Free|Used)Memory|Region(?:Name|TimeDilation|FPS|Corner|AgentCount)|Root(?:Position|Rotation)|UnixTime|(?:Parcel|Region)Flags|(?:Wall|GMT)clock|SimulatorHostname|BoundingBox|GeometricCenter|Creator|NumberOf(?:Prims|NotecardLines|Sides)|Animation(?:List)?|(?:Camera|Local)(?:Pos|Rot)|Vel|Accel|Omega|Time(?:stamp|OfDay)|(?:Object|CenterOf)?Mass|MassMKS|Energy|Owner|(?:Owner)?Key|SunDirection|Texture(?:Offset|Scale|Rot)|Inventory(?:Number|Name|Key|Type|Creator|PermMask)|Permissions(?:Key)?|StartParameter|List(?:Length|EntryType)|Date|Agent(?:Size|Info|Language|List)|LandOwnerAt|NotecardLine|Script(?:Name|State))|(?:Get|Reset|GetAndReset)Time|PlaySound(?:Slave)?|LoopSound(?:Master|Slave)?|(?:Trigger|Stop|Preload)Sound|(?:(?:Get|Delete)Sub|Insert)String|To(?:Upper|Lower)|Give(?:InventoryList|Money)|RezObject|(?:Stop)?LookAt|Sleep|CollisionFilter|(?:Take|Release)Controls|DetachFromAvatar|AttachToAvatar(?:Temp)?|InstantMessage|(?:GetNext)?Email|StopHover|MinEventDelay|RotLookAt|String(?:Length|Trim)|(?:Start|Stop)Animation|TargetOmega|Request(?:Experience)?Permissions|(?:Create|Break)Link|BreakAllLinks|(?:Give|Remove)Inventory|Water|PassTouches|Request(?:Agent|Inventory)Data|TeleportAgent(?:Home|GlobalCoords)?|ModifyLand|CollisionSound|ResetScript|MessageLinked|PushObject|PassCollisions|AxisAngle2Rot|Rot2(?:Axis|Angle)|A(?:cos|sin)|AngleBetween|AllowInventoryDrop|SubStringIndex|List2(?:CSV|Integer|Json|Float|String|Key|Vector|Rot|List(?:Strided)?)|DeleteSubList|List(?:Statistics|Sort|Randomize|(?:Insert|Find|Replace)List)|EdgeOfWorld|AdjustSoundVolume|Key2Name|TriggerSoundLimited|EjectFromLand|(?:CSV|ParseString)2List|OverMyLand|SameGroup|UnSit|Ground(?:Slope|Normal|Contour)|GroundRepel|(?:Set|Remove)VehicleFlags|(?:AvatarOn)?(?:Link)?SitTarget|Script(?:Danger|Profiler)|Dialog|VolumeDetect|ResetOtherScript|RemoteLoadScriptPin|(?:Open|Close)RemoteDataChannel|SendRemoteData|RemoteDataReply|(?:Integer|String)ToBase64|XorBase64|Log(?:10)?|Base64To(?:String|Integer)|ParseStringKeepNulls|RezAtRoot|RequestSimulatorData|ForceMouselook|(?:Load|Release|(?:E|Une)scape)URL|ParcelMedia(?:CommandList|Query)|ModPow|MapDestination|(?:RemoveFrom|AddTo|Reset)Land(?:Pass|Ban)List|(?:Set|Clear)CameraParams|HTTP(?:Request|Response)|TextBox|DetectedTouch(?:UV|Face|Pos|(?:N|Bin)ormal|ST)|(?:MD5|SHA1|DumpList2)String|Request(?:Secure)?URL|Clear(?:Prim|Link)Media|(?:Link)?ParticleSystem|(?:Get|Request)(?:Username|DisplayName)|RegionSayTo|CastRay|GenerateKey|TransferLindenDollars|ManageEstateAccess|(?:Create|Delete)Character|ExecCharacterCmd|Evade|FleeFrom|NavigateTo|PatrolPoints|Pursue|UpdateCharacter|WanderWithin))\\b"
        };

        return {
          illegal: ":",
          contains: [
            LSL_STRINGS,
            {
              className: "comment",
              variants: [hljs.COMMENT("//", "$"), hljs.COMMENT("/\\*", "\\*/")]
            },
            LSL_NUMBERS,
            {
              className: "section",
              variants: [
                {
                  begin: "\\b(?:state|default)\\b"
                },
                {
                  begin:
                    "\\b(?:state_(?:entry|exit)|touch(?:_(?:start|end))?|(?:land_)?collision(?:_(?:start|end))?|timer|listen|(?:no_)?sensor|control|(?:not_)?at_(?:rot_)?target|money|email|experience_permissions(?:_denied)?|run_time_permissions|changed|attach|dataserver|moving_(?:start|end)|link_message|(?:on|object)_rez|remote_data|http_re(?:sponse|quest)|path_update|transaction_result)\\b"
                }
              ]
            },
            LSL_FUNCTIONS,
            LSL_CONSTANTS,
            {
              className: "type",
              begin:
                "\\b(?:integer|float|string|key|vector|quaternion|rotation|list)\\b"
            }
          ]
        };
      };

      /***/
    },
    /* 128 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var OPENING_LONG_BRACKET = "\\[=*\\[";
        var CLOSING_LONG_BRACKET = "\\]=*\\]";
        var LONG_BRACKETS = {
          begin: OPENING_LONG_BRACKET,
          end: CLOSING_LONG_BRACKET,
          contains: ["self"]
        };
        var COMMENTS = [
          hljs.COMMENT("--(?!" + OPENING_LONG_BRACKET + ")", "$"),
          hljs.COMMENT("--" + OPENING_LONG_BRACKET, CLOSING_LONG_BRACKET, {
            contains: [LONG_BRACKETS],
            relevance: 10
          })
        ];
        return {
          lexemes: hljs.UNDERSCORE_IDENT_RE,
          keywords: {
            literal: "true false nil",
            keyword:
              "and break do else elseif end for goto if in local not or repeat return then until while",
            built_in:
              //Metatags and globals:
              "_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len " +
              "__gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert " +
              //Standard methods and properties:
              "collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring" +
              "module next pairs pcall print rawequal rawget rawset require select setfenv" +
              "setmetatable tonumber tostring type unpack xpcall arg self" +
              //Library methods and properties (one line per library):
              "coroutine resume yield status wrap create running debug getupvalue " +
              "debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv " +
              "io lines write close flush open output type read stderr stdin input stdout popen tmpfile " +
              "math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan " +
              "os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall " +
              "string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower " +
              "table setn insert getn foreachi maxn foreach concat sort remove"
          },
          contains: COMMENTS.concat([
            {
              className: "function",
              beginKeywords: "function",
              end: "\\)",
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  begin: "([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*"
                }),
                {
                  className: "params",
                  begin: "\\(",
                  endsWithParent: true,
                  contains: COMMENTS
                }
              ].concat(COMMENTS)
            },
            hljs.C_NUMBER_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: "string",
              begin: OPENING_LONG_BRACKET,
              end: CLOSING_LONG_BRACKET,
              contains: [LONG_BRACKETS],
              relevance: 5
            }
          ])
        };
      };

      /***/
    },
    /* 129 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        /* Variables: simple (eg $(var)) and special (eg $@) */
        var VARIABLE = {
          className: "variable",
          variants: [
            {
              begin: "\\$\\(" + hljs.UNDERSCORE_IDENT_RE + "\\)",
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              begin: /\$[@%<?\^\+\*]/
            }
          ]
        };
        /* Quoted string with variables inside */
        var QUOTE_STRING = {
          className: "string",
          begin: /"/,
          end: /"/,
          contains: [hljs.BACKSLASH_ESCAPE, VARIABLE]
        };
        /* Function: $(func arg,...) */
        var FUNC = {
          className: "variable",
          begin: /\$\([\w-]+\s/,
          end: /\)/,
          keywords: {
            built_in:
              "subst patsubst strip findstring filter filter-out sort " +
              "word wordlist firstword lastword dir notdir suffix basename " +
              "addsuffix addprefix join wildcard realpath abspath error warning " +
              "shell origin flavor foreach if or and call eval file value"
          },
          contains: [VARIABLE]
        };
        /* Variable assignment */
        var VAR_ASSIG = {
          begin: "^" + hljs.UNDERSCORE_IDENT_RE + "\\s*[:+?]?=",
          illegal: "\\n",
          returnBegin: true,
          contains: [
            {
              begin: "^" + hljs.UNDERSCORE_IDENT_RE,
              end: "[:+?]?=",
              excludeEnd: true
            }
          ]
        };
        /* Meta targets (.PHONY) */
        var META = {
          className: "meta",
          begin: /^\.PHONY:/,
          end: /$/,
          keywords: { "meta-keyword": ".PHONY" },
          lexemes: /[\.\w]+/
        };
        /* Targets */
        var TARGET = {
          className: "section",
          begin: /^[^\s]+:/,
          end: /$/,
          contains: [VARIABLE]
        };
        return {
          aliases: ["mk", "mak"],
          keywords:
            "define endef undefine ifdef ifndef ifeq ifneq else endif " +
            "include -include sinclude override export unexport private vpath",
          lexemes: /[\w-]+/,
          contains: [
            hljs.HASH_COMMENT_MODE,
            VARIABLE,
            QUOTE_STRING,
            FUNC,
            VAR_ASSIG,
            META,
            TARGET
          ]
        };
      };

      /***/
    },
    /* 130 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["mma"],
          lexemes: "(\\$|\\b)" + hljs.IDENT_RE + "\\b",
          keywords:
            "AbelianGroup Abort AbortKernels AbortProtect Above Abs Absolute AbsoluteCorrelation AbsoluteCorrelationFunction AbsoluteCurrentValue AbsoluteDashing AbsoluteFileName AbsoluteOptions AbsolutePointSize AbsoluteThickness AbsoluteTime AbsoluteTiming AccountingForm Accumulate Accuracy AccuracyGoal ActionDelay ActionMenu ActionMenuBox ActionMenuBoxOptions Active ActiveItem ActiveStyle AcyclicGraphQ AddOnHelpPath AddTo AdjacencyGraph AdjacencyList AdjacencyMatrix AdjustmentBox AdjustmentBoxOptions AdjustTimeSeriesForecast AffineTransform After AiryAi AiryAiPrime AiryAiZero AiryBi AiryBiPrime AiryBiZero AlgebraicIntegerQ AlgebraicNumber AlgebraicNumberDenominator AlgebraicNumberNorm AlgebraicNumberPolynomial AlgebraicNumberTrace AlgebraicRules AlgebraicRulesData Algebraics AlgebraicUnitQ Alignment AlignmentMarker AlignmentPoint All AllowedDimensions AllowGroupClose AllowInlineCells AllowKernelInitialization AllowReverseGroupClose AllowScriptLevelChange AlphaChannel AlternatingGroup AlternativeHypothesis Alternatives AmbientLight Analytic AnchoredSearch And AndersonDarlingTest AngerJ AngleBracket AngularGauge Animate AnimationCycleOffset AnimationCycleRepetitions AnimationDirection AnimationDisplayTime AnimationRate AnimationRepetitions AnimationRunning Animator AnimatorBox AnimatorBoxOptions AnimatorElements Annotation Annuity AnnuityDue Antialiasing Antisymmetric Apart ApartSquareFree Appearance AppearanceElements AppellF1 Append AppendTo Apply ArcCos ArcCosh ArcCot ArcCoth ArcCsc ArcCsch ArcSec ArcSech ArcSin ArcSinDistribution ArcSinh ArcTan ArcTanh Arg ArgMax ArgMin ArgumentCountQ ARIMAProcess ArithmeticGeometricMean ARMAProcess ARProcess Array ArrayComponents ArrayDepth ArrayFlatten ArrayPad ArrayPlot ArrayQ ArrayReshape ArrayRules Arrays Arrow Arrow3DBox ArrowBox Arrowheads AspectRatio AspectRatioFixed Assert Assuming Assumptions AstronomicalData Asynchronous AsynchronousTaskObject AsynchronousTasks AtomQ Attributes AugmentedSymmetricPolynomial AutoAction AutoDelete AutoEvaluateEvents AutoGeneratedPackage AutoIndent AutoIndentSpacings AutoItalicWords AutoloadPath AutoMatch Automatic AutomaticImageSize AutoMultiplicationSymbol AutoNumberFormatting AutoOpenNotebooks AutoOpenPalettes AutorunSequencing AutoScaling AutoScroll AutoSpacing AutoStyleOptions AutoStyleWords Axes AxesEdge AxesLabel AxesOrigin AxesStyle Axis " +
            "BabyMonsterGroupB Back Background BackgroundTasksSettings Backslash Backsubstitution Backward Band BandpassFilter BandstopFilter BarabasiAlbertGraphDistribution BarChart BarChart3D BarLegend BarlowProschanImportance BarnesG BarOrigin BarSpacing BartlettHannWindow BartlettWindow BaseForm Baseline BaselinePosition BaseStyle BatesDistribution BattleLemarieWavelet Because BeckmannDistribution Beep Before Begin BeginDialogPacket BeginFrontEndInteractionPacket BeginPackage BellB BellY Below BenfordDistribution BeniniDistribution BenktanderGibratDistribution BenktanderWeibullDistribution BernoulliB BernoulliDistribution BernoulliGraphDistribution BernoulliProcess BernsteinBasis BesselFilterModel BesselI BesselJ BesselJZero BesselK BesselY BesselYZero Beta BetaBinomialDistribution BetaDistribution BetaNegativeBinomialDistribution BetaPrimeDistribution BetaRegularized BetweennessCentrality BezierCurve BezierCurve3DBox BezierCurve3DBoxOptions BezierCurveBox BezierCurveBoxOptions BezierFunction BilateralFilter Binarize BinaryFormat BinaryImageQ BinaryRead BinaryReadList BinaryWrite BinCounts BinLists Binomial BinomialDistribution BinomialProcess BinormalDistribution BiorthogonalSplineWavelet BipartiteGraphQ BirnbaumImportance BirnbaumSaundersDistribution BitAnd BitClear BitGet BitLength BitNot BitOr BitSet BitShiftLeft BitShiftRight BitXor Black BlackmanHarrisWindow BlackmanNuttallWindow BlackmanWindow Blank BlankForm BlankNullSequence BlankSequence Blend Block BlockRandom BlomqvistBeta BlomqvistBetaTest Blue Blur BodePlot BohmanWindow Bold Bookmarks Boole BooleanConsecutiveFunction BooleanConvert BooleanCountingFunction BooleanFunction BooleanGraph BooleanMaxterms BooleanMinimize BooleanMinterms Booleans BooleanTable BooleanVariables BorderDimensions BorelTannerDistribution Bottom BottomHatTransform BoundaryStyle Bounds Box BoxBaselineShift BoxData BoxDimensions Boxed Boxes BoxForm BoxFormFormatTypes BoxFrame BoxID BoxMargins BoxMatrix BoxRatios BoxRotation BoxRotationPoint BoxStyle BoxWhiskerChart Bra BracketingBar BraKet BrayCurtisDistance BreadthFirstScan Break Brown BrownForsytheTest BrownianBridgeProcess BrowserCategory BSplineBasis BSplineCurve BSplineCurve3DBox BSplineCurveBox BSplineCurveBoxOptions BSplineFunction BSplineSurface BSplineSurface3DBox BubbleChart BubbleChart3D BubbleScale BubbleSizes BulletGauge BusinessDayQ ButterflyGraph ButterworthFilterModel Button ButtonBar ButtonBox ButtonBoxOptions ButtonCell ButtonContents ButtonData ButtonEvaluator ButtonExpandable ButtonFrame ButtonFunction ButtonMargins ButtonMinHeight ButtonNote ButtonNotebook ButtonSource ButtonStyle ButtonStyleMenuListing Byte ByteCount ByteOrdering " +
            "C CachedValue CacheGraphics CalendarData CalendarType CallPacket CanberraDistance Cancel CancelButton CandlestickChart Cap CapForm CapitalDifferentialD CardinalBSplineBasis CarmichaelLambda Cases Cashflow Casoratian Catalan CatalanNumber Catch CauchyDistribution CauchyWindow CayleyGraph CDF CDFDeploy CDFInformation CDFWavelet Ceiling Cell CellAutoOverwrite CellBaseline CellBoundingBox CellBracketOptions CellChangeTimes CellContents CellContext CellDingbat CellDynamicExpression CellEditDuplicate CellElementsBoundingBox CellElementSpacings CellEpilog CellEvaluationDuplicate CellEvaluationFunction CellEventActions CellFrame CellFrameColor CellFrameLabelMargins CellFrameLabels CellFrameMargins CellGroup CellGroupData CellGrouping CellGroupingRules CellHorizontalScrolling CellID CellLabel CellLabelAutoDelete CellLabelMargins CellLabelPositioning CellMargins CellObject CellOpen CellPrint CellProlog Cells CellSize CellStyle CellTags CellularAutomaton CensoredDistribution Censoring Center CenterDot CentralMoment CentralMomentGeneratingFunction CForm ChampernowneNumber ChanVeseBinarize Character CharacterEncoding CharacterEncodingsPath CharacteristicFunction CharacteristicPolynomial CharacterRange Characters ChartBaseStyle ChartElementData ChartElementDataFunction ChartElementFunction ChartElements ChartLabels ChartLayout ChartLegends ChartStyle Chebyshev1FilterModel Chebyshev2FilterModel ChebyshevDistance ChebyshevT ChebyshevU Check CheckAbort CheckAll Checkbox CheckboxBar CheckboxBox CheckboxBoxOptions ChemicalData ChessboardDistance ChiDistribution ChineseRemainder ChiSquareDistribution ChoiceButtons ChoiceDialog CholeskyDecomposition Chop Circle CircleBox CircleDot CircleMinus CirclePlus CircleTimes CirculantGraph CityData Clear ClearAll ClearAttributes ClearSystemCache ClebschGordan ClickPane Clip ClipboardNotebook ClipFill ClippingStyle ClipPlanes ClipRange Clock ClockGauge ClockwiseContourIntegral Close Closed CloseKernels ClosenessCentrality Closing ClosingAutoSave ClosingEvent ClusteringComponents CMYKColor Coarse Coefficient CoefficientArrays CoefficientDomain CoefficientList CoefficientRules CoifletWavelet Collect Colon ColonForm ColorCombine ColorConvert ColorData ColorDataFunction ColorFunction ColorFunctionScaling Colorize ColorNegate ColorOutput ColorProfileData ColorQuantize ColorReplace ColorRules ColorSelectorSettings ColorSeparate ColorSetter ColorSetterBox ColorSetterBoxOptions ColorSlider ColorSpace Column ColumnAlignments ColumnBackgrounds ColumnForm ColumnLines ColumnsEqual ColumnSpacings ColumnWidths CommonDefaultFormatTypes Commonest CommonestFilter CommonUnits CommunityBoundaryStyle CommunityGraphPlot CommunityLabels CommunityRegionStyle CompatibleUnitQ CompilationOptions CompilationTarget Compile Compiled CompiledFunction Complement CompleteGraph CompleteGraphQ CompleteKaryTree CompletionsListPacket Complex Complexes ComplexExpand ComplexInfinity ComplexityFunction ComponentMeasurements " +
            "ComponentwiseContextMenu Compose ComposeList ComposeSeries Composition CompoundExpression CompoundPoissonDistribution CompoundPoissonProcess CompoundRenewalProcess Compress CompressedData Condition ConditionalExpression Conditioned Cone ConeBox ConfidenceLevel ConfidenceRange ConfidenceTransform ConfigurationPath Congruent Conjugate ConjugateTranspose Conjunction Connect ConnectedComponents ConnectedGraphQ ConnesWindow ConoverTest ConsoleMessage ConsoleMessagePacket ConsolePrint Constant ConstantArray Constants ConstrainedMax ConstrainedMin ContentPadding ContentsBoundingBox ContentSelectable ContentSize Context ContextMenu Contexts ContextToFilename ContextToFileName Continuation Continue ContinuedFraction ContinuedFractionK ContinuousAction ContinuousMarkovProcess ContinuousTimeModelQ ContinuousWaveletData ContinuousWaveletTransform ContourDetect ContourGraphics ContourIntegral ContourLabels ContourLines ContourPlot ContourPlot3D Contours ContourShading ContourSmoothing ContourStyle ContraharmonicMean Control ControlActive ControlAlignment ControllabilityGramian ControllabilityMatrix ControllableDecomposition ControllableModelQ ControllerDuration ControllerInformation ControllerInformationData ControllerLinking ControllerManipulate ControllerMethod ControllerPath ControllerState ControlPlacement ControlsRendering ControlType Convergents ConversionOptions ConversionRules ConvertToBitmapPacket ConvertToPostScript ConvertToPostScriptPacket Convolve ConwayGroupCo1 ConwayGroupCo2 ConwayGroupCo3 CoordinateChartData CoordinatesToolOptions CoordinateTransform CoordinateTransformData CoprimeQ Coproduct CopulaDistribution Copyable CopyDirectory CopyFile CopyTag CopyToClipboard CornerFilter CornerNeighbors Correlation CorrelationDistance CorrelationFunction CorrelationTest Cos Cosh CoshIntegral CosineDistance CosineWindow CosIntegral Cot Coth Count CounterAssignments CounterBox CounterBoxOptions CounterClockwiseContourIntegral CounterEvaluator CounterFunction CounterIncrements CounterStyle CounterStyleMenuListing CountRoots CountryData Covariance CovarianceEstimatorFunction CovarianceFunction CoxianDistribution CoxIngersollRossProcess CoxModel CoxModelFit CramerVonMisesTest CreateArchive CreateDialog CreateDirectory CreateDocument CreateIntermediateDirectories CreatePalette CreatePalettePacket CreateScheduledTask CreateTemporary CreateWindow CriticalityFailureImportance CriticalitySuccessImportance CriticalSection Cross CrossingDetect CrossMatrix Csc Csch CubeRoot Cubics Cuboid CuboidBox Cumulant CumulantGeneratingFunction Cup CupCap Curl CurlyDoubleQuote CurlyQuote CurrentImage CurrentlySpeakingPacket CurrentValue CurvatureFlowFilter CurveClosed Cyan CycleGraph CycleIndexPolynomial Cycles CyclicGroup Cyclotomic Cylinder CylinderBox CylindricalDecomposition " +
            "D DagumDistribution DamerauLevenshteinDistance DampingFactor Darker Dashed Dashing DataCompression DataDistribution DataRange DataReversed Date DateDelimiters DateDifference DateFunction DateList DateListLogPlot DateListPlot DatePattern DatePlus DateRange DateString DateTicksFormat DaubechiesWavelet DavisDistribution DawsonF DayCount DayCountConvention DayMatchQ DayName DayPlus DayRange DayRound DeBruijnGraph Debug DebugTag Decimal DeclareKnownSymbols DeclarePackage Decompose Decrement DedekindEta Default DefaultAxesStyle DefaultBaseStyle DefaultBoxStyle DefaultButton DefaultColor DefaultControlPlacement DefaultDuplicateCellStyle DefaultDuration DefaultElement DefaultFaceGridsStyle DefaultFieldHintStyle DefaultFont DefaultFontProperties DefaultFormatType DefaultFormatTypeForStyle DefaultFrameStyle DefaultFrameTicksStyle DefaultGridLinesStyle DefaultInlineFormatType DefaultInputFormatType DefaultLabelStyle DefaultMenuStyle DefaultNaturalLanguage DefaultNewCellStyle DefaultNewInlineCellStyle DefaultNotebook DefaultOptions DefaultOutputFormatType DefaultStyle DefaultStyleDefinitions DefaultTextFormatType DefaultTextInlineFormatType DefaultTicksStyle DefaultTooltipStyle DefaultValues Defer DefineExternal DefineInputStreamMethod DefineOutputStreamMethod Definition Degree DegreeCentrality DegreeGraphDistribution DegreeLexicographic DegreeReverseLexicographic Deinitialization Del Deletable Delete DeleteBorderComponents DeleteCases DeleteContents DeleteDirectory DeleteDuplicates DeleteFile DeleteSmallComponents DeleteWithContents DeletionWarning Delimiter DelimiterFlashTime DelimiterMatching Delimiters Denominator DensityGraphics DensityHistogram DensityPlot DependentVariables Deploy Deployed Depth DepthFirstScan Derivative DerivativeFilter DescriptorStateSpace DesignMatrix Det DGaussianWavelet DiacriticalPositioning Diagonal DiagonalMatrix Dialog DialogIndent DialogInput DialogLevel DialogNotebook DialogProlog DialogReturn DialogSymbols Diamond DiamondMatrix DiceDissimilarity DictionaryLookup DifferenceDelta DifferenceOrder DifferenceRoot DifferenceRootReduce Differences DifferentialD DifferentialRoot DifferentialRootReduce DifferentiatorFilter DigitBlock DigitBlockMinimum DigitCharacter DigitCount DigitQ DihedralGroup Dilation Dimensions DiracComb DiracDelta DirectedEdge DirectedEdges DirectedGraph DirectedGraphQ DirectedInfinity Direction Directive Directory DirectoryName DirectoryQ DirectoryStack DirichletCharacter DirichletConvolve DirichletDistribution DirichletL DirichletTransform DirichletWindow DisableConsolePrintPacket DiscreteChirpZTransform DiscreteConvolve DiscreteDelta DiscreteHadamardTransform DiscreteIndicator DiscreteLQEstimatorGains DiscreteLQRegulatorGains DiscreteLyapunovSolve DiscreteMarkovProcess DiscretePlot DiscretePlot3D DiscreteRatio DiscreteRiccatiSolve DiscreteShift DiscreteTimeModelQ DiscreteUniformDistribution DiscreteVariables DiscreteWaveletData DiscreteWaveletPacketTransform " +
            "DiscreteWaveletTransform Discriminant Disjunction Disk DiskBox DiskMatrix Dispatch DispersionEstimatorFunction Display DisplayAllSteps DisplayEndPacket DisplayFlushImagePacket DisplayForm DisplayFunction DisplayPacket DisplayRules DisplaySetSizePacket DisplayString DisplayTemporary DisplayWith DisplayWithRef DisplayWithVariable DistanceFunction DistanceTransform Distribute Distributed DistributedContexts DistributeDefinitions DistributionChart DistributionDomain DistributionFitTest DistributionParameterAssumptions DistributionParameterQ Dithering Div Divergence Divide DivideBy Dividers Divisible Divisors DivisorSigma DivisorSum DMSList DMSString Do DockedCells DocumentNotebook DominantColors DOSTextFormat Dot DotDashed DotEqual Dotted DoubleBracketingBar DoubleContourIntegral DoubleDownArrow DoubleLeftArrow DoubleLeftRightArrow DoubleLeftTee DoubleLongLeftArrow DoubleLongLeftRightArrow DoubleLongRightArrow DoubleRightArrow DoubleRightTee DoubleUpArrow DoubleUpDownArrow DoubleVerticalBar DoublyInfinite Down DownArrow DownArrowBar DownArrowUpArrow DownLeftRightVector DownLeftTeeVector DownLeftVector DownLeftVectorBar DownRightTeeVector DownRightVector DownRightVectorBar Downsample DownTee DownTeeArrow DownValues DragAndDrop DrawEdges DrawFrontFaces DrawHighlighted Drop DSolve Dt DualLinearProgramming DualSystemsModel DumpGet DumpSave DuplicateFreeQ Dynamic DynamicBox DynamicBoxOptions DynamicEvaluationTimeout DynamicLocation DynamicModule DynamicModuleBox DynamicModuleBoxOptions DynamicModuleParent DynamicModuleValues DynamicName DynamicNamespace DynamicReference DynamicSetting DynamicUpdating DynamicWrapper DynamicWrapperBox DynamicWrapperBoxOptions " +
            "E EccentricityCentrality EdgeAdd EdgeBetweennessCentrality EdgeCapacity EdgeCapForm EdgeColor EdgeConnectivity EdgeCost EdgeCount EdgeCoverQ EdgeDashing EdgeDelete EdgeDetect EdgeForm EdgeIndex EdgeJoinForm EdgeLabeling EdgeLabels EdgeLabelStyle EdgeList EdgeOpacity EdgeQ EdgeRenderingFunction EdgeRules EdgeShapeFunction EdgeStyle EdgeThickness EdgeWeight Editable EditButtonSettings EditCellTagsSettings EditDistance EffectiveInterest Eigensystem Eigenvalues EigenvectorCentrality Eigenvectors Element ElementData Eliminate EliminationOrder EllipticE EllipticExp EllipticExpPrime EllipticF EllipticFilterModel EllipticK EllipticLog EllipticNomeQ EllipticPi EllipticReducedHalfPeriods EllipticTheta EllipticThetaPrime EmitSound EmphasizeSyntaxErrors EmpiricalDistribution Empty EmptyGraphQ EnableConsolePrintPacket Enabled Encode End EndAdd EndDialogPacket EndFrontEndInteractionPacket EndOfFile EndOfLine EndOfString EndPackage EngineeringForm Enter EnterExpressionPacket EnterTextPacket Entropy EntropyFilter Environment Epilog Equal EqualColumns EqualRows EqualTilde EquatedTo Equilibrium EquirippleFilterKernel Equivalent Erf Erfc Erfi ErlangB ErlangC ErlangDistribution Erosion ErrorBox ErrorBoxOptions ErrorNorm ErrorPacket ErrorsDialogSettings EstimatedDistribution EstimatedProcess EstimatorGains EstimatorRegulator EuclideanDistance EulerE EulerGamma EulerianGraphQ EulerPhi Evaluatable Evaluate Evaluated EvaluatePacket EvaluationCell EvaluationCompletionAction EvaluationElements EvaluationMode EvaluationMonitor EvaluationNotebook EvaluationObject EvaluationOrder Evaluator EvaluatorNames EvenQ EventData EventEvaluator EventHandler EventHandlerTag EventLabels ExactBlackmanWindow ExactNumberQ ExactRootIsolation ExampleData Except ExcludedForms ExcludePods Exclusions ExclusionsStyle Exists Exit ExitDialog Exp Expand ExpandAll ExpandDenominator ExpandFileName ExpandNumerator Expectation ExpectationE ExpectedValue ExpGammaDistribution ExpIntegralE ExpIntegralEi Exponent ExponentFunction ExponentialDistribution ExponentialFamily ExponentialGeneratingFunction ExponentialMovingAverage ExponentialPowerDistribution ExponentPosition ExponentStep Export ExportAutoReplacements ExportPacket ExportString Expression ExpressionCell ExpressionPacket ExpToTrig ExtendedGCD Extension ExtentElementFunction ExtentMarkers ExtentSize ExternalCall ExternalDataCharacterEncoding Extract ExtractArchive ExtremeValueDistribution " +
            "FaceForm FaceGrids FaceGridsStyle Factor FactorComplete Factorial Factorial2 FactorialMoment FactorialMomentGeneratingFunction FactorialPower FactorInteger FactorList FactorSquareFree FactorSquareFreeList FactorTerms FactorTermsList Fail FailureDistribution False FARIMAProcess FEDisableConsolePrintPacket FeedbackSector FeedbackSectorStyle FeedbackType FEEnableConsolePrintPacket Fibonacci FieldHint FieldHintStyle FieldMasked FieldSize File FileBaseName FileByteCount FileDate FileExistsQ FileExtension FileFormat FileHash FileInformation FileName FileNameDepth FileNameDialogSettings FileNameDrop FileNameJoin FileNames FileNameSetter FileNameSplit FileNameTake FilePrint FileType FilledCurve FilledCurveBox Filling FillingStyle FillingTransform FilterRules FinancialBond FinancialData FinancialDerivative FinancialIndicator Find FindArgMax FindArgMin FindClique FindClusters FindCurvePath FindDistributionParameters FindDivisions FindEdgeCover FindEdgeCut FindEulerianCycle FindFaces FindFile FindFit FindGeneratingFunction FindGeoLocation FindGeometricTransform FindGraphCommunities FindGraphIsomorphism FindGraphPartition FindHamiltonianCycle FindIndependentEdgeSet FindIndependentVertexSet FindInstance FindIntegerNullVector FindKClan FindKClique FindKClub FindKPlex FindLibrary FindLinearRecurrence FindList FindMaximum FindMaximumFlow FindMaxValue FindMinimum FindMinimumCostFlow FindMinimumCut FindMinValue FindPermutation FindPostmanTour FindProcessParameters FindRoot FindSequenceFunction FindSettings FindShortestPath FindShortestTour FindThreshold FindVertexCover FindVertexCut Fine FinishDynamic FiniteAbelianGroupCount FiniteGroupCount FiniteGroupData First FirstPassageTimeDistribution FischerGroupFi22 FischerGroupFi23 FischerGroupFi24Prime FisherHypergeometricDistribution FisherRatioTest FisherZDistribution Fit FitAll FittedModel FixedPoint FixedPointList FlashSelection Flat Flatten FlattenAt FlatTopWindow FlipView Floor FlushPrintOutputPacket Fold FoldList Font FontColor FontFamily FontForm FontName FontOpacity FontPostScriptName FontProperties FontReencoding FontSize FontSlant FontSubstitutions FontTracking FontVariations FontWeight For ForAll Format FormatRules FormatType FormatTypeAutoConvert FormatValues FormBox FormBoxOptions FortranForm Forward ForwardBackward Fourier FourierCoefficient FourierCosCoefficient FourierCosSeries FourierCosTransform FourierDCT FourierDCTFilter FourierDCTMatrix FourierDST FourierDSTMatrix FourierMatrix FourierParameters FourierSequenceTransform FourierSeries FourierSinCoefficient FourierSinSeries FourierSinTransform FourierTransform FourierTrigSeries FractionalBrownianMotionProcess FractionalPart FractionBox FractionBoxOptions FractionLine Frame FrameBox FrameBoxOptions Framed FrameInset FrameLabel Frameless FrameMargins FrameStyle FrameTicks FrameTicksStyle FRatioDistribution FrechetDistribution FreeQ FrequencySamplingFilterKernel FresnelC FresnelS Friday FrobeniusNumber FrobeniusSolve " +
            "FromCharacterCode FromCoefficientRules FromContinuedFraction FromDate FromDigits FromDMS Front FrontEndDynamicExpression FrontEndEventActions FrontEndExecute FrontEndObject FrontEndResource FrontEndResourceString FrontEndStackSize FrontEndToken FrontEndTokenExecute FrontEndValueCache FrontEndVersion FrontFaceColor FrontFaceOpacity Full FullAxes FullDefinition FullForm FullGraphics FullOptions FullSimplify Function FunctionExpand FunctionInterpolation FunctionSpace FussellVeselyImportance " +
            "GaborFilter GaborMatrix GaborWavelet GainMargins GainPhaseMargins Gamma GammaDistribution GammaRegularized GapPenalty Gather GatherBy GaugeFaceElementFunction GaugeFaceStyle GaugeFrameElementFunction GaugeFrameSize GaugeFrameStyle GaugeLabels GaugeMarkers GaugeStyle GaussianFilter GaussianIntegers GaussianMatrix GaussianWindow GCD GegenbauerC General GeneralizedLinearModelFit GenerateConditions GeneratedCell GeneratedParameters GeneratingFunction Generic GenericCylindricalDecomposition GenomeData GenomeLookup GeodesicClosing GeodesicDilation GeodesicErosion GeodesicOpening GeoDestination GeodesyData GeoDirection GeoDistance GeoGridPosition GeometricBrownianMotionProcess GeometricDistribution GeometricMean GeometricMeanFilter GeometricTransformation GeometricTransformation3DBox GeometricTransformation3DBoxOptions GeometricTransformationBox GeometricTransformationBoxOptions GeoPosition GeoPositionENU GeoPositionXYZ GeoProjectionData GestureHandler GestureHandlerTag Get GetBoundingBoxSizePacket GetContext GetEnvironment GetFileName GetFrontEndOptionsDataPacket GetLinebreakInformationPacket GetMenusPacket GetPageBreakInformationPacket Glaisher GlobalClusteringCoefficient GlobalPreferences GlobalSession Glow GoldenRatio GompertzMakehamDistribution GoodmanKruskalGamma GoodmanKruskalGammaTest Goto Grad Gradient GradientFilter GradientOrientationFilter Graph GraphAssortativity GraphCenter GraphComplement GraphData GraphDensity GraphDiameter GraphDifference GraphDisjointUnion " +
            "GraphDistance GraphDistanceMatrix GraphElementData GraphEmbedding GraphHighlight GraphHighlightStyle GraphHub Graphics Graphics3D Graphics3DBox Graphics3DBoxOptions GraphicsArray GraphicsBaseline GraphicsBox GraphicsBoxOptions GraphicsColor GraphicsColumn GraphicsComplex GraphicsComplex3DBox GraphicsComplex3DBoxOptions GraphicsComplexBox GraphicsComplexBoxOptions GraphicsContents GraphicsData GraphicsGrid GraphicsGridBox GraphicsGroup GraphicsGroup3DBox GraphicsGroup3DBoxOptions GraphicsGroupBox GraphicsGroupBoxOptions GraphicsGrouping GraphicsHighlightColor GraphicsRow GraphicsSpacing GraphicsStyle GraphIntersection GraphLayout GraphLinkEfficiency GraphPeriphery GraphPlot GraphPlot3D GraphPower GraphPropertyDistribution GraphQ GraphRadius GraphReciprocity GraphRoot GraphStyle GraphUnion Gray GrayLevel GreatCircleDistance Greater GreaterEqual GreaterEqualLess GreaterFullEqual GreaterGreater GreaterLess GreaterSlantEqual GreaterTilde Green Grid GridBaseline GridBox GridBoxAlignment GridBoxBackground GridBoxDividers GridBoxFrame GridBoxItemSize GridBoxItemStyle GridBoxOptions GridBoxSpacings GridCreationSettings GridDefaultElement GridElementStyleOptions GridFrame GridFrameMargins GridGraph GridLines GridLinesStyle GroebnerBasis GroupActionBase GroupCentralizer GroupElementFromWord GroupElementPosition GroupElementQ GroupElements GroupElementToWord GroupGenerators GroupMultiplicationTable GroupOrbits GroupOrder GroupPageBreakWithin GroupSetwiseStabilizer GroupStabilizer GroupStabilizerChain Gudermannian GumbelDistribution " +
            "HaarWavelet HadamardMatrix HalfNormalDistribution HamiltonianGraphQ HammingDistance HammingWindow HankelH1 HankelH2 HankelMatrix HannPoissonWindow HannWindow HaradaNortonGroupHN HararyGraph HarmonicMean HarmonicMeanFilter HarmonicNumber Hash HashTable Haversine HazardFunction Head HeadCompose Heads HeavisideLambda HeavisidePi HeavisideTheta HeldGroupHe HeldPart HelpBrowserLookup HelpBrowserNotebook HelpBrowserSettings HermiteDecomposition HermiteH HermitianMatrixQ HessenbergDecomposition Hessian HexadecimalCharacter Hexahedron HexahedronBox HexahedronBoxOptions HiddenSurface HighlightGraph HighlightImage HighpassFilter HigmanSimsGroupHS HilbertFilter HilbertMatrix Histogram Histogram3D HistogramDistribution HistogramList HistogramTransform HistogramTransformInterpolation HitMissTransform HITSCentrality HodgeDual HoeffdingD HoeffdingDTest Hold HoldAll HoldAllComplete HoldComplete HoldFirst HoldForm HoldPattern HoldRest HolidayCalendar HomeDirectory HomePage Horizontal HorizontalForm HorizontalGauge HorizontalScrollPosition HornerForm HotellingTSquareDistribution HoytDistribution HTMLSave Hue HumpDownHump HumpEqual HurwitzLerchPhi HurwitzZeta HyperbolicDistribution HypercubeGraph HyperexponentialDistribution Hyperfactorial Hypergeometric0F1 Hypergeometric0F1Regularized Hypergeometric1F1 Hypergeometric1F1Regularized Hypergeometric2F1 Hypergeometric2F1Regularized HypergeometricDistribution HypergeometricPFQ HypergeometricPFQRegularized HypergeometricU Hyperlink HyperlinkCreationSettings Hyphenation HyphenationOptions HypoexponentialDistribution HypothesisTestData " +
            "I Identity IdentityMatrix If IgnoreCase Im Image Image3D Image3DSlices ImageAccumulate ImageAdd ImageAdjust ImageAlign ImageApply ImageAspectRatio ImageAssemble ImageCache ImageCacheValid ImageCapture ImageChannels ImageClip ImageColorSpace ImageCompose ImageConvolve ImageCooccurrence ImageCorners ImageCorrelate ImageCorrespondingPoints ImageCrop ImageData ImageDataPacket ImageDeconvolve ImageDemosaic ImageDifference ImageDimensions ImageDistance ImageEffect ImageFeatureTrack ImageFileApply ImageFileFilter ImageFileScan ImageFilter ImageForestingComponents ImageForwardTransformation ImageHistogram ImageKeypoints ImageLevels ImageLines ImageMargins ImageMarkers ImageMeasurements ImageMultiply ImageOffset ImagePad ImagePadding ImagePartition ImagePeriodogram ImagePerspectiveTransformation ImageQ ImageRangeCache ImageReflect ImageRegion ImageResize ImageResolution ImageRotate ImageRotated ImageScaled ImageScan ImageSize ImageSizeAction ImageSizeCache ImageSizeMultipliers ImageSizeRaw ImageSubtract ImageTake ImageTransformation ImageTrim ImageType ImageValue ImageValuePositions Implies Import ImportAutoReplacements ImportString ImprovementImportance In IncidenceGraph IncidenceList IncidenceMatrix IncludeConstantBasis IncludeFileExtension IncludePods IncludeSingularTerm Increment Indent IndentingNewlineSpacings IndentMaxFraction IndependenceTest IndependentEdgeSetQ IndependentUnit IndependentVertexSetQ Indeterminate IndexCreationOptions Indexed IndexGraph IndexTag Inequality InexactNumberQ InexactNumbers Infinity Infix Information Inherited InheritScope Initialization InitializationCell InitializationCellEvaluation InitializationCellWarning InlineCounterAssignments InlineCounterIncrements InlineRules Inner Inpaint Input InputAliases InputAssumptions InputAutoReplacements InputField InputFieldBox InputFieldBoxOptions InputForm InputGrouping InputNamePacket InputNotebook InputPacket InputSettings InputStream InputString InputStringPacket InputToBoxFormPacket Insert InsertionPointObject InsertResults Inset Inset3DBox Inset3DBoxOptions InsetBox InsetBoxOptions Install InstallService InString Integer IntegerDigits IntegerExponent IntegerLength IntegerPart IntegerPartitions IntegerQ Integers IntegerString Integral Integrate Interactive InteractiveTradingChart Interlaced Interleaving InternallyBalancedDecomposition InterpolatingFunction InterpolatingPolynomial Interpolation InterpolationOrder InterpolationPoints InterpolationPrecision Interpretation InterpretationBox InterpretationBoxOptions InterpretationFunction " +
            "InterpretTemplate InterquartileRange Interrupt InterruptSettings Intersection Interval IntervalIntersection IntervalMemberQ IntervalUnion Inverse InverseBetaRegularized InverseCDF InverseChiSquareDistribution InverseContinuousWaveletTransform InverseDistanceTransform InverseEllipticNomeQ InverseErf InverseErfc InverseFourier InverseFourierCosTransform InverseFourierSequenceTransform InverseFourierSinTransform InverseFourierTransform InverseFunction InverseFunctions InverseGammaDistribution InverseGammaRegularized InverseGaussianDistribution InverseGudermannian InverseHaversine InverseJacobiCD InverseJacobiCN InverseJacobiCS InverseJacobiDC InverseJacobiDN InverseJacobiDS InverseJacobiNC InverseJacobiND InverseJacobiNS InverseJacobiSC InverseJacobiSD InverseJacobiSN InverseLaplaceTransform InversePermutation InverseRadon InverseSeries InverseSurvivalFunction InverseWaveletTransform InverseWeierstrassP InverseZTransform Invisible InvisibleApplication InvisibleTimes IrreduciblePolynomialQ IsolatingInterval IsomorphicGraphQ IsotopeData Italic Item ItemBox ItemBoxOptions ItemSize ItemStyle ItoProcess " +
            "JaccardDissimilarity JacobiAmplitude Jacobian JacobiCD JacobiCN JacobiCS JacobiDC JacobiDN JacobiDS JacobiNC JacobiND JacobiNS JacobiP JacobiSC JacobiSD JacobiSN JacobiSymbol JacobiZeta JankoGroupJ1 JankoGroupJ2 JankoGroupJ3 JankoGroupJ4 JarqueBeraALMTest JohnsonDistribution Join Joined JoinedCurve JoinedCurveBox JoinForm JordanDecomposition JordanModelDecomposition " +
            "K KagiChart KaiserBesselWindow KaiserWindow KalmanEstimator KalmanFilter KarhunenLoeveDecomposition KaryTree KatzCentrality KCoreComponents KDistribution KelvinBei KelvinBer KelvinKei KelvinKer KendallTau KendallTauTest KernelExecute KernelMixtureDistribution KernelObject Kernels Ket Khinchin KirchhoffGraph KirchhoffMatrix KleinInvariantJ KnightTourGraph KnotData KnownUnitQ KolmogorovSmirnovTest KroneckerDelta KroneckerModelDecomposition KroneckerProduct KroneckerSymbol KuiperTest KumaraswamyDistribution Kurtosis KuwaharaFilter " +
            "Label Labeled LabeledSlider LabelingFunction LabelStyle LaguerreL LambdaComponents LambertW LanczosWindow LandauDistribution Language LanguageCategory LaplaceDistribution LaplaceTransform Laplacian LaplacianFilter LaplacianGaussianFilter Large Larger Last Latitude LatitudeLongitude LatticeData LatticeReduce Launch LaunchKernels LayeredGraphPlot LayerSizeFunction LayoutInformation LCM LeafCount LeapYearQ LeastSquares LeastSquaresFilterKernel Left LeftArrow LeftArrowBar LeftArrowRightArrow LeftDownTeeVector LeftDownVector LeftDownVectorBar LeftRightArrow LeftRightVector LeftTee LeftTeeArrow LeftTeeVector LeftTriangle LeftTriangleBar LeftTriangleEqual LeftUpDownVector LeftUpTeeVector LeftUpVector LeftUpVectorBar LeftVector LeftVectorBar LegendAppearance Legended LegendFunction LegendLabel LegendLayout LegendMargins LegendMarkers LegendMarkerSize LegendreP LegendreQ LegendreType Length LengthWhile LerchPhi Less LessEqual LessEqualGreater LessFullEqual LessGreater LessLess LessSlantEqual LessTilde LetterCharacter LetterQ Level LeveneTest LeviCivitaTensor LevyDistribution Lexicographic LibraryFunction LibraryFunctionError LibraryFunctionInformation LibraryFunctionLoad LibraryFunctionUnload LibraryLoad LibraryUnload LicenseID LiftingFilterData LiftingWaveletTransform LightBlue LightBrown LightCyan Lighter LightGray LightGreen Lighting LightingAngle LightMagenta LightOrange LightPink LightPurple LightRed LightSources LightYellow Likelihood Limit LimitsPositioning LimitsPositioningTokens LindleyDistribution Line Line3DBox LinearFilter LinearFractionalTransform LinearModelFit LinearOffsetFunction LinearProgramming LinearRecurrence LinearSolve LinearSolveFunction LineBox LineBreak LinebreakAdjustments LineBreakChart LineBreakWithin LineColor LineForm LineGraph LineIndent LineIndentMaxFraction LineIntegralConvolutionPlot LineIntegralConvolutionScale LineLegend LineOpacity LineSpacing LineWrapParts LinkActivate LinkClose LinkConnect LinkConnectedQ LinkCreate LinkError LinkFlush LinkFunction LinkHost LinkInterrupt LinkLaunch LinkMode LinkObject LinkOpen LinkOptions LinkPatterns LinkProtocol LinkRead LinkReadHeld LinkReadyQ Links LinkWrite LinkWriteHeld LiouvilleLambda List Listable ListAnimate ListContourPlot ListContourPlot3D ListConvolve ListCorrelate ListCurvePathPlot ListDeconvolve ListDensityPlot Listen ListFourierSequenceTransform ListInterpolation ListLineIntegralConvolutionPlot ListLinePlot ListLogLinearPlot ListLogLogPlot ListLogPlot ListPicker ListPickerBox ListPickerBoxBackground ListPickerBoxOptions ListPlay ListPlot ListPlot3D ListPointPlot3D ListPolarPlot ListQ ListStreamDensityPlot ListStreamPlot ListSurfacePlot3D ListVectorDensityPlot ListVectorPlot ListVectorPlot3D ListZTransform Literal LiteralSearch LocalClusteringCoefficient LocalizeVariables LocationEquivalenceTest LocationTest Locator LocatorAutoCreate LocatorBox LocatorBoxOptions LocatorCentering LocatorPane LocatorPaneBox LocatorPaneBoxOptions " +
            "LocatorRegion Locked Log Log10 Log2 LogBarnesG LogGamma LogGammaDistribution LogicalExpand LogIntegral LogisticDistribution LogitModelFit LogLikelihood LogLinearPlot LogLogisticDistribution LogLogPlot LogMultinormalDistribution LogNormalDistribution LogPlot LogRankTest LogSeriesDistribution LongEqual Longest LongestAscendingSequence LongestCommonSequence LongestCommonSequencePositions LongestCommonSubsequence LongestCommonSubsequencePositions LongestMatch LongForm Longitude LongLeftArrow LongLeftRightArrow LongRightArrow Loopback LoopFreeGraphQ LowerCaseQ LowerLeftArrow LowerRightArrow LowerTriangularize LowpassFilter LQEstimatorGains LQGRegulator LQOutputRegulatorGains LQRegulatorGains LUBackSubstitution LucasL LuccioSamiComponents LUDecomposition LyapunovSolve LyonsGroupLy " +
            "MachineID MachineName MachineNumberQ MachinePrecision MacintoshSystemPageSetup Magenta Magnification Magnify MainSolve MaintainDynamicCaches Majority MakeBoxes MakeExpression MakeRules MangoldtLambda ManhattanDistance Manipulate Manipulator MannWhitneyTest MantissaExponent Manual Map MapAll MapAt MapIndexed MAProcess MapThread MarcumQ MardiaCombinedTest MardiaKurtosisTest MardiaSkewnessTest MarginalDistribution MarkovProcessProperties Masking MatchingDissimilarity MatchLocalNameQ MatchLocalNames MatchQ Material MathematicaNotation MathieuC MathieuCharacteristicA MathieuCharacteristicB MathieuCharacteristicExponent MathieuCPrime MathieuGroupM11 MathieuGroupM12 MathieuGroupM22 MathieuGroupM23 MathieuGroupM24 MathieuS MathieuSPrime MathMLForm MathMLText Matrices MatrixExp MatrixForm MatrixFunction MatrixLog MatrixPlot MatrixPower MatrixQ MatrixRank Max MaxBend MaxDetect MaxExtraBandwidths MaxExtraConditions MaxFeatures MaxFilter Maximize MaxIterations MaxMemoryUsed MaxMixtureKernels MaxPlotPoints MaxPoints MaxRecursion MaxStableDistribution MaxStepFraction MaxSteps MaxStepSize MaxValue MaxwellDistribution McLaughlinGroupMcL Mean MeanClusteringCoefficient MeanDegreeConnectivity MeanDeviation MeanFilter MeanGraphDistance MeanNeighborDegree MeanShift MeanShiftFilter Median MedianDeviation MedianFilter Medium MeijerG MeixnerDistribution MemberQ MemoryConstrained MemoryInUse Menu MenuAppearance MenuCommandKey MenuEvaluator MenuItem MenuPacket MenuSortingValue MenuStyle MenuView MergeDifferences Mesh MeshFunctions MeshRange MeshShading MeshStyle Message MessageDialog MessageList MessageName MessageOptions MessagePacket Messages MessagesNotebook MetaCharacters MetaInformation Method MethodOptions MexicanHatWavelet MeyerWavelet Min MinDetect MinFilter MinimalPolynomial MinimalStateSpaceModel Minimize Minors MinRecursion MinSize MinStableDistribution Minus MinusPlus MinValue Missing MissingDataMethod MittagLefflerE MixedRadix MixedRadixQuantity MixtureDistribution Mod Modal Mode Modular ModularLambda Module Modulus MoebiusMu Moment Momentary MomentConvert MomentEvaluate MomentGeneratingFunction Monday Monitor MonomialList MonomialOrder MonsterGroupM MorletWavelet MorphologicalBinarize MorphologicalBranchPoints MorphologicalComponents MorphologicalEulerNumber MorphologicalGraph MorphologicalPerimeter MorphologicalTransform Most MouseAnnotation MouseAppearance MouseAppearanceTag MouseButtons Mouseover MousePointerNote MousePosition MovingAverage MovingMedian MoyalDistribution MultiedgeStyle MultilaunchWarning MultiLetterItalics MultiLetterStyle MultilineFunction Multinomial MultinomialDistribution MultinormalDistribution MultiplicativeOrder Multiplicity Multiselection MultivariateHypergeometricDistribution MultivariatePoissonDistribution MultivariateTDistribution " +
            "N NakagamiDistribution NameQ Names NamespaceBox Nand NArgMax NArgMin NBernoulliB NCache NDSolve NDSolveValue Nearest NearestFunction NeedCurrentFrontEndPackagePacket NeedCurrentFrontEndSymbolsPacket NeedlemanWunschSimilarity Needs Negative NegativeBinomialDistribution NegativeMultinomialDistribution NeighborhoodGraph Nest NestedGreaterGreater NestedLessLess NestedScriptRules NestList NestWhile NestWhileList NevilleThetaC NevilleThetaD NevilleThetaN NevilleThetaS NewPrimitiveStyle NExpectation Next NextPrime NHoldAll NHoldFirst NHoldRest NicholsGridLines NicholsPlot NIntegrate NMaximize NMaxValue NMinimize NMinValue NominalVariables NonAssociative NoncentralBetaDistribution NoncentralChiSquareDistribution NoncentralFRatioDistribution NoncentralStudentTDistribution NonCommutativeMultiply NonConstants None NonlinearModelFit NonlocalMeansFilter NonNegative NonPositive Nor NorlundB Norm Normal NormalDistribution NormalGrouping Normalize NormalizedSquaredEuclideanDistance NormalsFunction NormFunction Not NotCongruent NotCupCap NotDoubleVerticalBar Notebook NotebookApply NotebookAutoSave NotebookClose NotebookConvertSettings NotebookCreate NotebookCreateReturnObject NotebookDefault NotebookDelete NotebookDirectory NotebookDynamicExpression NotebookEvaluate NotebookEventActions NotebookFileName NotebookFind NotebookFindReturnObject NotebookGet NotebookGetLayoutInformationPacket NotebookGetMisspellingsPacket NotebookInformation NotebookInterfaceObject NotebookLocate NotebookObject NotebookOpen NotebookOpenReturnObject NotebookPath NotebookPrint NotebookPut NotebookPutReturnObject NotebookRead NotebookResetGeneratedCells Notebooks NotebookSave NotebookSaveAs NotebookSelection NotebookSetupLayoutInformationPacket NotebooksMenu NotebookWrite NotElement NotEqualTilde NotExists NotGreater NotGreaterEqual NotGreaterFullEqual NotGreaterGreater NotGreaterLess NotGreaterSlantEqual NotGreaterTilde NotHumpDownHump NotHumpEqual NotLeftTriangle NotLeftTriangleBar NotLeftTriangleEqual NotLess NotLessEqual NotLessFullEqual NotLessGreater NotLessLess NotLessSlantEqual NotLessTilde NotNestedGreaterGreater NotNestedLessLess NotPrecedes NotPrecedesEqual NotPrecedesSlantEqual NotPrecedesTilde NotReverseElement NotRightTriangle NotRightTriangleBar NotRightTriangleEqual NotSquareSubset NotSquareSubsetEqual NotSquareSuperset NotSquareSupersetEqual NotSubset NotSubsetEqual NotSucceeds NotSucceedsEqual NotSucceedsSlantEqual NotSucceedsTilde NotSuperset NotSupersetEqual NotTilde NotTildeEqual NotTildeFullEqual NotTildeTilde NotVerticalBar NProbability NProduct NProductFactors NRoots NSolve NSum NSumTerms Null NullRecords NullSpace NullWords Number NumberFieldClassNumber NumberFieldDiscriminant NumberFieldFundamentalUnits NumberFieldIntegralBasis NumberFieldNormRepresentatives NumberFieldRegulator NumberFieldRootsOfUnity NumberFieldSignature NumberForm NumberFormat NumberMarks NumberMultiplier NumberPadding NumberPoint NumberQ NumberSeparator " +
            "NumberSigns NumberString Numerator NumericFunction NumericQ NuttallWindow NValues NyquistGridLines NyquistPlot " +
            "O ObservabilityGramian ObservabilityMatrix ObservableDecomposition ObservableModelQ OddQ Off Offset OLEData On ONanGroupON OneIdentity Opacity Open OpenAppend Opener OpenerBox OpenerBoxOptions OpenerView OpenFunctionInspectorPacket Opening OpenRead OpenSpecialOptions OpenTemporary OpenWrite Operate OperatingSystem OptimumFlowData Optional OptionInspectorSettings OptionQ Options OptionsPacket OptionsPattern OptionValue OptionValueBox OptionValueBoxOptions Or Orange Order OrderDistribution OrderedQ Ordering Orderless OrnsteinUhlenbeckProcess Orthogonalize Out Outer OutputAutoOverwrite OutputControllabilityMatrix OutputControllableModelQ OutputForm OutputFormData OutputGrouping OutputMathEditExpression OutputNamePacket OutputResponse OutputSizeLimit OutputStream Over OverBar OverDot Overflow OverHat Overlaps Overlay OverlayBox OverlayBoxOptions Overscript OverscriptBox OverscriptBoxOptions OverTilde OverVector OwenT OwnValues " +
            "PackingMethod PaddedForm Padding PadeApproximant PadLeft PadRight PageBreakAbove PageBreakBelow PageBreakWithin PageFooterLines PageFooters PageHeaderLines PageHeaders PageHeight PageRankCentrality PageWidth PairedBarChart PairedHistogram PairedSmoothHistogram PairedTTest PairedZTest PaletteNotebook PalettePath Pane PaneBox PaneBoxOptions Panel PanelBox PanelBoxOptions Paneled PaneSelector PaneSelectorBox PaneSelectorBoxOptions PaperWidth ParabolicCylinderD ParagraphIndent ParagraphSpacing ParallelArray ParallelCombine ParallelDo ParallelEvaluate Parallelization Parallelize ParallelMap ParallelNeeds ParallelProduct ParallelSubmit ParallelSum ParallelTable ParallelTry Parameter ParameterEstimator ParameterMixtureDistribution ParameterVariables ParametricFunction ParametricNDSolve ParametricNDSolveValue ParametricPlot ParametricPlot3D ParentConnect ParentDirectory ParentForm Parenthesize ParentList ParetoDistribution Part PartialCorrelationFunction PartialD ParticleData Partition PartitionsP PartitionsQ ParzenWindow PascalDistribution PassEventsDown PassEventsUp Paste PasteBoxFormInlineCells PasteButton Path PathGraph PathGraphQ Pattern PatternSequence PatternTest PauliMatrix PaulWavelet Pause PausedTime PDF PearsonChiSquareTest PearsonCorrelationTest PearsonDistribution PerformanceGoal PeriodicInterpolation Periodogram PeriodogramArray PermutationCycles PermutationCyclesQ PermutationGroup PermutationLength PermutationList PermutationListQ PermutationMax PermutationMin PermutationOrder PermutationPower PermutationProduct PermutationReplace Permutations PermutationSupport Permute PeronaMalikFilter Perpendicular PERTDistribution PetersenGraph PhaseMargins Pi Pick PIDData PIDDerivativeFilter PIDFeedforward PIDTune Piecewise PiecewiseExpand PieChart PieChart3D PillaiTrace PillaiTraceTest Pink Pivoting PixelConstrained PixelValue PixelValuePositions Placed Placeholder PlaceholderReplace Plain PlanarGraphQ Play PlayRange Plot Plot3D Plot3Matrix PlotDivision PlotJoined PlotLabel PlotLayout PlotLegends PlotMarkers PlotPoints PlotRange PlotRangeClipping PlotRangePadding PlotRegion PlotStyle Plus PlusMinus Pochhammer PodStates PodWidth Point Point3DBox PointBox PointFigureChart PointForm PointLegend PointSize PoissonConsulDistribution PoissonDistribution PoissonProcess PoissonWindow PolarAxes PolarAxesOrigin PolarGridLines PolarPlot PolarTicks PoleZeroMarkers PolyaAeppliDistribution PolyGamma Polygon Polygon3DBox Polygon3DBoxOptions PolygonBox PolygonBoxOptions PolygonHoleScale PolygonIntersections PolygonScale PolyhedronData PolyLog PolynomialExtendedGCD PolynomialForm PolynomialGCD PolynomialLCM PolynomialMod PolynomialQ PolynomialQuotient PolynomialQuotientRemainder PolynomialReduce PolynomialRemainder Polynomials PopupMenu PopupMenuBox PopupMenuBoxOptions PopupView PopupWindow Position Positive PositiveDefiniteMatrixQ PossibleZeroQ Postfix PostScript Power PowerDistribution PowerExpand PowerMod PowerModList " +
            "PowerSpectralDensity PowersRepresentations PowerSymmetricPolynomial Precedence PrecedenceForm Precedes PrecedesEqual PrecedesSlantEqual PrecedesTilde Precision PrecisionGoal PreDecrement PredictionRoot PreemptProtect PreferencesPath Prefix PreIncrement Prepend PrependTo PreserveImageOptions Previous PriceGraphDistribution PrimaryPlaceholder Prime PrimeNu PrimeOmega PrimePi PrimePowerQ PrimeQ Primes PrimeZetaP PrimitiveRoot PrincipalComponents PrincipalValue Print PrintAction PrintForm PrintingCopies PrintingOptions PrintingPageRange PrintingStartingPageNumber PrintingStyleEnvironment PrintPrecision PrintTemporary Prism PrismBox PrismBoxOptions PrivateCellOptions PrivateEvaluationOptions PrivateFontOptions PrivateFrontEndOptions PrivateNotebookOptions PrivatePaths Probability ProbabilityDistribution ProbabilityPlot ProbabilityPr ProbabilityScalePlot ProbitModelFit ProcessEstimator ProcessParameterAssumptions ProcessParameterQ ProcessStateDomain ProcessTimeDomain Product ProductDistribution ProductLog ProgressIndicator ProgressIndicatorBox ProgressIndicatorBoxOptions Projection Prolog PromptForm Properties Property PropertyList PropertyValue Proportion Proportional Protect Protected ProteinData Pruning PseudoInverse Purple Put PutAppend Pyramid PyramidBox PyramidBoxOptions " +
            "QBinomial QFactorial QGamma QHypergeometricPFQ QPochhammer QPolyGamma QRDecomposition QuadraticIrrationalQ Quantile QuantilePlot Quantity QuantityForm QuantityMagnitude QuantityQ QuantityUnit Quartics QuartileDeviation Quartiles QuartileSkewness QueueingNetworkProcess QueueingProcess QueueProperties Quiet Quit Quotient QuotientRemainder " +
            "RadialityCentrality RadicalBox RadicalBoxOptions RadioButton RadioButtonBar RadioButtonBox RadioButtonBoxOptions Radon RamanujanTau RamanujanTauL RamanujanTauTheta RamanujanTauZ Random RandomChoice RandomComplex RandomFunction RandomGraph RandomImage RandomInteger RandomPermutation RandomPrime RandomReal RandomSample RandomSeed RandomVariate RandomWalkProcess Range RangeFilter RangeSpecification RankedMax RankedMin Raster Raster3D Raster3DBox Raster3DBoxOptions RasterArray RasterBox RasterBoxOptions Rasterize RasterSize Rational RationalFunctions Rationalize Rationals Ratios Raw RawArray RawBoxes RawData RawMedium RayleighDistribution Re Read ReadList ReadProtected Real RealBlockDiagonalForm RealDigits RealExponent Reals Reap Record RecordLists RecordSeparators Rectangle RectangleBox RectangleBoxOptions RectangleChart RectangleChart3D RecurrenceFilter RecurrenceTable RecurringDigitsForm Red Reduce RefBox ReferenceLineStyle ReferenceMarkers ReferenceMarkerStyle Refine ReflectionMatrix ReflectionTransform Refresh RefreshRate RegionBinarize RegionFunction RegionPlot RegionPlot3D RegularExpression Regularization Reinstall Release ReleaseHold ReliabilityDistribution ReliefImage ReliefPlot Remove RemoveAlphaChannel RemoveAsynchronousTask Removed RemoveInputStreamMethod RemoveOutputStreamMethod RemoveProperty RemoveScheduledTask RenameDirectory RenameFile RenderAll RenderingOptions RenewalProcess RenkoChart Repeated RepeatedNull RepeatedString Replace ReplaceAll ReplaceHeldPart ReplaceImageValue ReplaceList ReplacePart ReplacePixelValue ReplaceRepeated Resampling Rescale RescalingTransform ResetDirectory ResetMenusPacket ResetScheduledTask Residue Resolve Rest Resultant ResumePacket Return ReturnExpressionPacket ReturnInputFormPacket ReturnPacket ReturnTextPacket Reverse ReverseBiorthogonalSplineWavelet ReverseElement ReverseEquilibrium ReverseGraph ReverseUpEquilibrium RevolutionAxis RevolutionPlot3D RGBColor RiccatiSolve RiceDistribution RidgeFilter RiemannR RiemannSiegelTheta RiemannSiegelZ Riffle Right RightArrow RightArrowBar RightArrowLeftArrow RightCosetRepresentative RightDownTeeVector RightDownVector RightDownVectorBar RightTee RightTeeArrow RightTeeVector RightTriangle RightTriangleBar RightTriangleEqual RightUpDownVector RightUpTeeVector RightUpVector RightUpVectorBar RightVector RightVectorBar RiskAchievementImportance RiskReductionImportance RogersTanimotoDissimilarity Root RootApproximant RootIntervals RootLocusPlot RootMeanSquare RootOfUnityQ RootReduce Roots RootSum Rotate RotateLabel RotateLeft RotateRight RotationAction RotationBox RotationBoxOptions RotationMatrix RotationTransform Round RoundImplies RoundingRadius Row RowAlignments RowBackgrounds RowBox RowHeights RowLines RowMinHeight RowReduce RowsEqual RowSpacings RSolve RudvalisGroupRu Rule RuleCondition RuleDelayed RuleForm RulerUnits Run RunScheduledTask RunThrough RuntimeAttributes RuntimeOptions RussellRaoDissimilarity " +
            "SameQ SameTest SampleDepth SampledSoundFunction SampledSoundList SampleRate SamplingPeriod SARIMAProcess SARMAProcess SatisfiabilityCount SatisfiabilityInstances SatisfiableQ Saturday Save Saveable SaveAutoDelete SaveDefinitions SawtoothWave Scale Scaled ScaleDivisions ScaledMousePosition ScaleOrigin ScalePadding ScaleRanges ScaleRangeStyle ScalingFunctions ScalingMatrix ScalingTransform Scan ScheduledTaskActiveQ ScheduledTaskData ScheduledTaskObject ScheduledTasks SchurDecomposition ScientificForm ScreenRectangle ScreenStyleEnvironment ScriptBaselineShifts ScriptLevel ScriptMinSize ScriptRules ScriptSizeMultipliers Scrollbars ScrollingOptions ScrollPosition Sec Sech SechDistribution SectionGrouping SectorChart SectorChart3D SectorOrigin SectorSpacing SeedRandom Select Selectable SelectComponents SelectedCells SelectedNotebook Selection SelectionAnimate SelectionCell SelectionCellCreateCell SelectionCellDefaultStyle SelectionCellParentStyle SelectionCreateCell SelectionDebuggerTag SelectionDuplicateCell SelectionEvaluate SelectionEvaluateCreateCell SelectionMove SelectionPlaceholder SelectionSetStyle SelectWithContents SelfLoops SelfLoopStyle SemialgebraicComponentInstances SendMail Sequence SequenceAlignment SequenceForm SequenceHold SequenceLimit Series SeriesCoefficient SeriesData SessionTime Set SetAccuracy SetAlphaChannel SetAttributes Setbacks SetBoxFormNamesPacket SetDelayed SetDirectory SetEnvironment SetEvaluationNotebook SetFileDate SetFileLoadingContext SetNotebookStatusLine SetOptions SetOptionsPacket SetPrecision SetProperty SetSelectedNotebook SetSharedFunction SetSharedVariable SetSpeechParametersPacket SetStreamPosition SetSystemOptions Setter SetterBar SetterBox SetterBoxOptions Setting SetValue Shading Shallow ShannonWavelet ShapiroWilkTest Share Sharpen ShearingMatrix ShearingTransform ShenCastanMatrix Short ShortDownArrow Shortest ShortestMatch ShortestPathFunction ShortLeftArrow ShortRightArrow ShortUpArrow Show ShowAutoStyles ShowCellBracket ShowCellLabel ShowCellTags ShowClosedCellArea ShowContents ShowControls ShowCursorTracker ShowGroupOpenCloseIcon ShowGroupOpener ShowInvisibleCharacters ShowPageBreaks ShowPredictiveInterface ShowSelection ShowShortBoxForm ShowSpecialCharacters ShowStringCharacters ShowSyntaxStyles ShrinkingDelay ShrinkWrapBoundingBox SiegelTheta SiegelTukeyTest Sign Signature SignedRankTest SignificanceLevel SignPadding SignTest SimilarityRules SimpleGraph SimpleGraphQ Simplify Sin Sinc SinghMaddalaDistribution SingleEvaluation SingleLetterItalics SingleLetterStyle SingularValueDecomposition SingularValueList SingularValuePlot SingularValues Sinh SinhIntegral SinIntegral SixJSymbol Skeleton SkeletonTransform SkellamDistribution Skewness SkewNormalDistribution Skip SliceDistribution Slider Slider2D Slider2DBox Slider2DBoxOptions SliderBox SliderBoxOptions SlideView Slot SlotSequence Small SmallCircle Smaller SmithDelayCompensator SmithWatermanSimilarity " +
            "SmoothDensityHistogram SmoothHistogram SmoothHistogram3D SmoothKernelDistribution SocialMediaData Socket SokalSneathDissimilarity Solve SolveAlways SolveDelayed Sort SortBy Sound SoundAndGraphics SoundNote SoundVolume Sow Space SpaceForm Spacer Spacings Span SpanAdjustments SpanCharacterRounding SpanFromAbove SpanFromBoth SpanFromLeft SpanLineThickness SpanMaxSize SpanMinSize SpanningCharacters SpanSymmetric SparseArray SpatialGraphDistribution Speak SpeakTextPacket SpearmanRankTest SpearmanRho Spectrogram SpectrogramArray Specularity SpellingCorrection SpellingDictionaries SpellingDictionariesPath SpellingOptions SpellingSuggestionsPacket Sphere SphereBox SphericalBesselJ SphericalBesselY SphericalHankelH1 SphericalHankelH2 SphericalHarmonicY SphericalPlot3D SphericalRegion SpheroidalEigenvalue SpheroidalJoiningFactor SpheroidalPS SpheroidalPSPrime SpheroidalQS SpheroidalQSPrime SpheroidalRadialFactor SpheroidalS1 SpheroidalS1Prime SpheroidalS2 SpheroidalS2Prime Splice SplicedDistribution SplineClosed SplineDegree SplineKnots SplineWeights Split SplitBy SpokenString Sqrt SqrtBox SqrtBoxOptions Square SquaredEuclideanDistance SquareFreeQ SquareIntersection SquaresR SquareSubset SquareSubsetEqual SquareSuperset SquareSupersetEqual SquareUnion SquareWave StabilityMargins StabilityMarginsStyle StableDistribution Stack StackBegin StackComplete StackInhibit StandardDeviation StandardDeviationFilter StandardForm Standardize StandbyDistribution Star StarGraph StartAsynchronousTask StartingStepSize StartOfLine StartOfString StartScheduledTask StartupSound StateDimensions StateFeedbackGains StateOutputEstimator StateResponse StateSpaceModel StateSpaceRealization StateSpaceTransform StationaryDistribution StationaryWaveletPacketTransform StationaryWaveletTransform StatusArea StatusCentrality StepMonitor StieltjesGamma StirlingS1 StirlingS2 StopAsynchronousTask StopScheduledTask StrataVariables StratonovichProcess StreamColorFunction StreamColorFunctionScaling StreamDensityPlot StreamPlot StreamPoints StreamPosition Streams StreamScale StreamStyle String StringBreak StringByteCount StringCases StringCount StringDrop StringExpression StringForm StringFormat StringFreeQ StringInsert StringJoin StringLength StringMatchQ StringPosition StringQ StringReplace StringReplaceList StringReplacePart StringReverse StringRotateLeft StringRotateRight StringSkeleton StringSplit StringTake StringToStream StringTrim StripBoxes StripOnInput StripWrapperBoxes StrokeForm StructuralImportance StructuredArray StructuredSelection StruveH StruveL Stub StudentTDistribution Style StyleBox StyleBoxAutoDelete StyleBoxOptions StyleData StyleDefinitions StyleForm StyleKeyMapping StyleMenuListing StyleNameDialogSettings StyleNames StylePrint StyleSheetPath Subfactorial Subgraph SubMinus SubPlus SubresultantPolynomialRemainders " +
            "SubresultantPolynomials Subresultants Subscript SubscriptBox SubscriptBoxOptions Subscripted Subset SubsetEqual Subsets SubStar Subsuperscript SubsuperscriptBox SubsuperscriptBoxOptions Subtract SubtractFrom SubValues Succeeds SucceedsEqual SucceedsSlantEqual SucceedsTilde SuchThat Sum SumConvergence Sunday SuperDagger SuperMinus SuperPlus Superscript SuperscriptBox SuperscriptBoxOptions Superset SupersetEqual SuperStar Surd SurdForm SurfaceColor SurfaceGraphics SurvivalDistribution SurvivalFunction SurvivalModel SurvivalModelFit SuspendPacket SuzukiDistribution SuzukiGroupSuz SwatchLegend Switch Symbol SymbolName SymletWavelet Symmetric SymmetricGroup SymmetricMatrixQ SymmetricPolynomial SymmetricReduction Symmetrize SymmetrizedArray SymmetrizedArrayRules SymmetrizedDependentComponents SymmetrizedIndependentComponents SymmetrizedReplacePart SynchronousInitialization SynchronousUpdating Syntax SyntaxForm SyntaxInformation SyntaxLength SyntaxPacket SyntaxQ SystemDialogInput SystemException SystemHelpPath SystemInformation SystemInformationData SystemOpen SystemOptions SystemsModelDelay SystemsModelDelayApproximate SystemsModelDelete SystemsModelDimensions SystemsModelExtract SystemsModelFeedbackConnect SystemsModelLabels SystemsModelOrder SystemsModelParallelConnect SystemsModelSeriesConnect SystemsModelStateFeedbackConnect SystemStub " +
            "Tab TabFilling Table TableAlignments TableDepth TableDirections TableForm TableHeadings TableSpacing TableView TableViewBox TabSpacings TabView TabViewBox TabViewBoxOptions TagBox TagBoxNote TagBoxOptions TaggingRules TagSet TagSetDelayed TagStyle TagUnset Take TakeWhile Tally Tan Tanh TargetFunctions TargetUnits TautologyQ TelegraphProcess TemplateBox TemplateBoxOptions TemplateSlotSequence TemporalData Temporary TemporaryVariable TensorContract TensorDimensions TensorExpand TensorProduct TensorQ TensorRank TensorReduce TensorSymmetry TensorTranspose TensorWedge Tetrahedron TetrahedronBox TetrahedronBoxOptions TeXForm TeXSave Text Text3DBox Text3DBoxOptions TextAlignment TextBand TextBoundingBox TextBox TextCell TextClipboardType TextData TextForm TextJustification TextLine TextPacket TextParagraph TextRecognize TextRendering TextStyle Texture TextureCoordinateFunction TextureCoordinateScaling Therefore ThermometerGauge Thick Thickness Thin Thinning ThisLink ThompsonGroupTh Thread ThreeJSymbol Threshold Through Throw Thumbnail Thursday Ticks TicksStyle Tilde TildeEqual TildeFullEqual TildeTilde TimeConstrained TimeConstraint Times TimesBy TimeSeriesForecast TimeSeriesInvertibility TimeUsed TimeValue TimeZone Timing Tiny TitleGrouping TitsGroupT ToBoxes ToCharacterCode ToColor ToContinuousTimeModel ToDate ToDiscreteTimeModel ToeplitzMatrix ToExpression ToFileName Together Toggle ToggleFalse Toggler TogglerBar TogglerBox TogglerBoxOptions ToHeldExpression ToInvertibleTimeSeries TokenWords Tolerance ToLowerCase ToNumberField TooBig Tooltip TooltipBox TooltipBoxOptions TooltipDelay TooltipStyle Top TopHatTransform TopologicalSort ToRadicals ToRules ToString Total TotalHeight TotalVariationFilter TotalWidth TouchscreenAutoZoom TouchscreenControlPlacement ToUpperCase Tr Trace TraceAbove TraceAction TraceBackward TraceDepth TraceDialog TraceForward TraceInternal TraceLevel TraceOff TraceOn TraceOriginal TracePrint TraceScan TrackedSymbols TradingChart TraditionalForm TraditionalFunctionNotation TraditionalNotation TraditionalOrder TransferFunctionCancel TransferFunctionExpand TransferFunctionFactor TransferFunctionModel TransferFunctionPoles TransferFunctionTransform TransferFunctionZeros TransformationFunction TransformationFunctions TransformationMatrix TransformedDistribution TransformedField Translate TranslationTransform TransparentColor Transpose TreeForm TreeGraph TreeGraphQ TreePlot TrendStyle TriangleWave TriangularDistribution Trig TrigExpand TrigFactor TrigFactorList Trigger TrigReduce TrigToExp TrimmedMean True TrueQ TruncatedDistribution TsallisQExponentialDistribution TsallisQGaussianDistribution TTest Tube TubeBezierCurveBox TubeBezierCurveBoxOptions TubeBox TubeBSplineCurveBox TubeBSplineCurveBoxOptions Tuesday TukeyLambdaDistribution TukeyWindow Tuples TuranGraph TuringMachine " +
            "Transparent " +
            "UnateQ Uncompress Undefined UnderBar Underflow Underlined Underoverscript UnderoverscriptBox UnderoverscriptBoxOptions Underscript UnderscriptBox UnderscriptBoxOptions UndirectedEdge UndirectedGraph UndirectedGraphQ UndocumentedTestFEParserPacket UndocumentedTestGetSelectionPacket Unequal Unevaluated UniformDistribution UniformGraphDistribution UniformSumDistribution Uninstall Union UnionPlus Unique UnitBox UnitConvert UnitDimensions Unitize UnitRootTest UnitSimplify UnitStep UnitTriangle UnitVector Unprotect UnsameQ UnsavedVariables Unset UnsetShared UntrackedVariables Up UpArrow UpArrowBar UpArrowDownArrow Update UpdateDynamicObjects UpdateDynamicObjectsSynchronous UpdateInterval UpDownArrow UpEquilibrium UpperCaseQ UpperLeftArrow UpperRightArrow UpperTriangularize Upsample UpSet UpSetDelayed UpTee UpTeeArrow UpValues URL URLFetch URLFetchAsynchronous URLSave URLSaveAsynchronous UseGraphicsRange Using UsingFrontEnd " +
            "V2Get ValidationLength Value ValueBox ValueBoxOptions ValueForm ValueQ ValuesData Variables Variance VarianceEquivalenceTest VarianceEstimatorFunction VarianceGammaDistribution VarianceTest VectorAngle VectorColorFunction VectorColorFunctionScaling VectorDensityPlot VectorGlyphData VectorPlot VectorPlot3D VectorPoints VectorQ Vectors VectorScale VectorStyle Vee Verbatim Verbose VerboseConvertToPostScriptPacket VerifyConvergence VerifySolutions VerifyTestAssumptions Version VersionNumber VertexAdd VertexCapacity VertexColors VertexComponent VertexConnectivity VertexCoordinateRules VertexCoordinates VertexCorrelationSimilarity VertexCosineSimilarity VertexCount VertexCoverQ VertexDataCoordinates VertexDegree VertexDelete VertexDiceSimilarity VertexEccentricity VertexInComponent VertexInDegree VertexIndex VertexJaccardSimilarity VertexLabeling VertexLabels VertexLabelStyle VertexList VertexNormals VertexOutComponent VertexOutDegree VertexQ VertexRenderingFunction VertexReplace VertexShape VertexShapeFunction VertexSize VertexStyle VertexTextureCoordinates VertexWeight Vertical VerticalBar VerticalForm VerticalGauge VerticalSeparator VerticalSlider VerticalTilde ViewAngle ViewCenter ViewMatrix ViewPoint ViewPointSelectorSettings ViewPort ViewRange ViewVector ViewVertical VirtualGroupData Visible VisibleCell VoigtDistribution VonMisesDistribution " +
            "WaitAll WaitAsynchronousTask WaitNext WaitUntil WakebyDistribution WalleniusHypergeometricDistribution WaringYuleDistribution WatershedComponents WatsonUSquareTest WattsStrogatzGraphDistribution WaveletBestBasis WaveletFilterCoefficients WaveletImagePlot WaveletListPlot WaveletMapIndexed WaveletMatrixPlot WaveletPhi WaveletPsi WaveletScale WaveletScalogram WaveletThreshold WeaklyConnectedComponents WeaklyConnectedGraphQ WeakStationarity WeatherData WeberE Wedge Wednesday WeibullDistribution WeierstrassHalfPeriods WeierstrassInvariants WeierstrassP WeierstrassPPrime WeierstrassSigma WeierstrassZeta WeightedAdjacencyGraph WeightedAdjacencyMatrix WeightedData WeightedGraphQ Weights WelchWindow WheelGraph WhenEvent Which While White Whitespace WhitespaceCharacter WhittakerM WhittakerW WienerFilter WienerProcess WignerD WignerSemicircleDistribution WilksW WilksWTest WindowClickSelect WindowElements WindowFloating WindowFrame WindowFrameElements WindowMargins WindowMovable WindowOpacity WindowSelected WindowSize WindowStatusArea WindowTitle WindowToolbars WindowWidth With WolframAlpha WolframAlphaDate WolframAlphaQuantity WolframAlphaResult Word WordBoundary WordCharacter WordData WordSearch WordSeparators WorkingPrecision Write WriteString Wronskian " +
            "XMLElement XMLObject Xnor Xor " +
            "Yellow YuleDissimilarity " +
            "ZernikeR ZeroSymmetric ZeroTest ZeroWidthTimes Zeta ZetaZero ZipfDistribution ZTest ZTransform " +
            "$Aborted $ActivationGroupID $ActivationKey $ActivationUserRegistered $AddOnsDirectory $AssertFunction $Assumptions $AsynchronousTask $BaseDirectory $BatchInput $BatchOutput $BoxForms $ByteOrdering $Canceled $CharacterEncoding $CharacterEncodings $CommandLine $CompilationTarget $ConditionHold $ConfiguredKernels $Context $ContextPath $ControlActiveSetting $CreationDate $CurrentLink $DateStringFormat $DefaultFont $DefaultFrontEnd $DefaultImagingDevice $DefaultPath $Display $DisplayFunction $DistributedContexts $DynamicEvaluation $Echo $Epilog $ExportFormats $Failed $FinancialDataSource $FormatType $FrontEnd $FrontEndSession $GeoLocation $HistoryLength $HomeDirectory $HTTPCookies $IgnoreEOF $ImagingDevices $ImportFormats $InitialDirectory $Input $InputFileName $InputStreamMethods $Inspector $InstallationDate $InstallationDirectory $InterfaceEnvironment $IterationLimit $KernelCount $KernelID $Language $LaunchDirectory $LibraryPath $LicenseExpirationDate $LicenseID $LicenseProcesses $LicenseServer $LicenseSubprocesses $LicenseType $Line $Linked $LinkSupported $LoadedFiles $MachineAddresses $MachineDomain $MachineDomains $MachineEpsilon $MachineID $MachineName $MachinePrecision $MachineType $MaxExtraPrecision $MaxLicenseProcesses $MaxLicenseSubprocesses $MaxMachineNumber $MaxNumber $MaxPiecewiseCases $MaxPrecision $MaxRootDegree $MessageGroups $MessageList $MessagePrePrint $Messages $MinMachineNumber $MinNumber $MinorReleaseNumber $MinPrecision $ModuleNumber $NetworkLicense $NewMessage $NewSymbol $Notebooks $NumberMarks $Off $OperatingSystem $Output $OutputForms $OutputSizeLimit $OutputStreamMethods $Packages $ParentLink $ParentProcessID $PasswordFile $PatchLevelID $Path $PathnameSeparator $PerformanceGoal $PipeSupported $Post $Pre $PreferencesDirectory $PrePrint $PreRead $PrintForms $PrintLiteral $ProcessID $ProcessorCount $ProcessorType $ProductInformation $ProgramName $RandomState $RecursionLimit $ReleaseNumber $RootDirectory $ScheduledTask $ScriptCommandLine $SessionID $SetParentLink $SharedFunctions $SharedVariables $SoundDisplay $SoundDisplayFunction $SuppressInputFormHeads $SynchronousEvaluation $SyntaxHandler $System $SystemCharacterEncoding $SystemID $SystemWordLength $TemporaryDirectory $TemporaryPrefix $TextStyle $TimedOut $TimeUnit $TimeZone $TopDirectory $TraceOff $TraceOn $TracePattern $TracePostAction $TracePreAction $Urgent $UserAddOnsDirectory $UserBaseDirectory $UserDocumentsDirectory $UserName $Version $VersionNumber",
          contains: [
            {
              className: "comment",
              begin: /\(\*/,
              end: /\*\)/
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE,
            {
              begin: /\{/,
              end: /\}/,
              illegal: /:/
            }
          ]
        };
      };

      /***/
    },
    /* 131 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var COMMON_CONTAINS = [
          hljs.C_NUMBER_MODE,
          {
            className: "string",
            begin: "'",
            end: "'",
            contains: [hljs.BACKSLASH_ESCAPE, { begin: "''" }]
          }
        ];
        var TRANSPOSE = {
          relevance: 0,
          contains: [
            {
              begin: /'['\.]*/
            }
          ]
        };

        return {
          keywords: {
            keyword:
              "break case catch classdef continue else elseif end enumerated events for function " +
              "global if methods otherwise parfor persistent properties return spmd switch try while",
            built_in:
              "sin sind sinh asin asind asinh cos cosd cosh acos acosd acosh tan tand tanh atan " +
              "atand atan2 atanh sec secd sech asec asecd asech csc cscd csch acsc acscd acsch cot " +
              "cotd coth acot acotd acoth hypot exp expm1 log log1p log10 log2 pow2 realpow reallog " +
              "realsqrt sqrt nthroot nextpow2 abs angle complex conj imag real unwrap isreal " +
              "cplxpair fix floor ceil round mod rem sign airy besselj bessely besselh besseli " +
              "besselk beta betainc betaln ellipj ellipke erf erfc erfcx erfinv expint gamma " +
              "gammainc gammaln psi legendre cross dot factor isprime primes gcd lcm rat rats perms " +
              "nchoosek factorial cart2sph cart2pol pol2cart sph2cart hsv2rgb rgb2hsv zeros ones " +
              "eye repmat rand randn linspace logspace freqspace meshgrid accumarray size length " +
              "ndims numel disp isempty isequal isequalwithequalnans cat reshape diag blkdiag tril " +
              "triu fliplr flipud flipdim rot90 find sub2ind ind2sub bsxfun ndgrid permute ipermute " +
              "shiftdim circshift squeeze isscalar isvector ans eps realmax realmin pi i inf nan " +
              "isnan isinf isfinite j why compan gallery hadamard hankel hilb invhilb magic pascal " +
              "rosser toeplitz vander wilkinson"
          },
          illegal: '(//|"|#|/\\*|\\s+/\\w+)',
          contains: [
            {
              className: "function",
              beginKeywords: "function",
              end: "$",
              contains: [
                hljs.UNDERSCORE_TITLE_MODE,
                {
                  className: "params",
                  variants: [
                    { begin: "\\(", end: "\\)" },
                    { begin: "\\[", end: "\\]" }
                  ]
                }
              ]
            },
            {
              begin: /[a-zA-Z_][a-zA-Z_0-9]*'['\.]*/,
              returnBegin: true,
              relevance: 0,
              contains: [
                { begin: /[a-zA-Z_][a-zA-Z_0-9]*/, relevance: 0 },
                TRANSPOSE.contains[0]
              ]
            },
            {
              begin: "\\[",
              end: "\\]",
              contains: COMMON_CONTAINS,
              relevance: 0,
              starts: TRANSPOSE
            },
            {
              begin: "\\{",
              end: /}/,
              contains: COMMON_CONTAINS,
              relevance: 0,
              starts: TRANSPOSE
            },
            {
              // transpose operators at the end of a function call
              begin: /\)/,
              relevance: 0,
              starts: TRANSPOSE
            },
            hljs.COMMENT("^\\s*\\%\\{\\s*$", "^\\s*\\%\\}\\s*$"),
            hljs.COMMENT("\\%", "$")
          ].concat(COMMON_CONTAINS)
        };
      };

      /***/
    },
    /* 132 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS =
          "if then else elseif for thru do while unless step in and or not";
        var LITERALS =
          "true false unknown inf minf ind und %e %i %pi %phi %gamma";
        var BUILTIN_FUNCTIONS =
          " abasep abs absint absolute_real_time acos acosh acot acoth acsc acsch activate" +
          " addcol add_edge add_edges addmatrices addrow add_vertex add_vertices adjacency_matrix" +
          " adjoin adjoint af agd airy airy_ai airy_bi airy_dai airy_dbi algsys alg_type" +
          " alias allroots alphacharp alphanumericp amortization %and annuity_fv" +
          " annuity_pv antid antidiff AntiDifference append appendfile apply apply1 apply2" +
          " applyb1 apropos args arit_amortization arithmetic arithsum array arrayapply" +
          " arrayinfo arraymake arraysetapply ascii asec asech asin asinh askinteger" +
          " asksign assoc assoc_legendre_p assoc_legendre_q assume assume_external_byte_order" +
          " asympa at atan atan2 atanh atensimp atom atvalue augcoefmatrix augmented_lagrangian_method" +
          " av average_degree backtrace bars barsplot barsplot_description base64 base64_decode" +
          " bashindices batch batchload bc2 bdvac belln benefit_cost bern bernpoly bernstein_approx" +
          " bernstein_expand bernstein_poly bessel bessel_i bessel_j bessel_k bessel_simplify" +
          " bessel_y beta beta_incomplete beta_incomplete_generalized beta_incomplete_regularized" +
          " bezout bfallroots bffac bf_find_root bf_fmin_cobyla bfhzeta bfloat bfloatp" +
          " bfpsi bfpsi0 bfzeta biconnected_components bimetric binomial bipartition" +
          " block blockmatrixp bode_gain bode_phase bothcoef box boxplot boxplot_description" +
          " break bug_report build_info|10 buildq build_sample burn cabs canform canten" +
          " cardinality carg cartan cartesian_product catch cauchy_matrix cbffac cdf_bernoulli" +
          " cdf_beta cdf_binomial cdf_cauchy cdf_chi2 cdf_continuous_uniform cdf_discrete_uniform" +
          " cdf_exp cdf_f cdf_gamma cdf_general_finite_discrete cdf_geometric cdf_gumbel" +
          " cdf_hypergeometric cdf_laplace cdf_logistic cdf_lognormal cdf_negative_binomial" +
          " cdf_noncentral_chi2 cdf_noncentral_student_t cdf_normal cdf_pareto cdf_poisson" +
          " cdf_rank_sum cdf_rayleigh cdf_signed_rank cdf_student_t cdf_weibull cdisplay" +
          " ceiling central_moment cequal cequalignore cf cfdisrep cfexpand cgeodesic" +
          " cgreaterp cgreaterpignore changename changevar chaosgame charat charfun charfun2" +
          " charlist charp charpoly chdir chebyshev_t chebyshev_u checkdiv check_overlaps" +
          " chinese cholesky christof chromatic_index chromatic_number cint circulant_graph" +
          " clear_edge_weight clear_rules clear_vertex_label clebsch_gordan clebsch_graph" +
          " clessp clesspignore close closefile cmetric coeff coefmatrix cograd col collapse" +
          " collectterms columnop columnspace columnswap columnvector combination combine" +
          " comp2pui compare compfile compile compile_file complement_graph complete_bipartite_graph" +
          " complete_graph complex_number_p components compose_functions concan concat" +
          " conjugate conmetderiv connected_components connect_vertices cons constant" +
          " constantp constituent constvalue cont2part content continuous_freq contortion" +
          " contour_plot contract contract_edge contragrad contrib_ode convert coord" +
          " copy copy_file copy_graph copylist copymatrix cor cos cosh cot coth cov cov1" +
          " covdiff covect covers crc24sum create_graph create_list csc csch csetup cspline" +
          " ctaylor ct_coordsys ctransform ctranspose cube_graph cuboctahedron_graph" +
          " cunlisp cv cycle_digraph cycle_graph cylindrical days360 dblint deactivate" +
          " declare declare_constvalue declare_dimensions declare_fundamental_dimensions" +
          " declare_fundamental_units declare_qty declare_translated declare_unit_conversion" +
          " declare_units declare_weights decsym defcon define define_alt_display define_variable" +
          " defint defmatch defrule defstruct deftaylor degree_sequence del delete deleten" +
          " delta demo demoivre denom depends derivdegree derivlist describe desolve" +
          " determinant dfloat dgauss_a dgauss_b dgeev dgemm dgeqrf dgesv dgesvd diag" +
          " diagmatrix diag_matrix diagmatrixp diameter diff digitcharp dimacs_export" +
          " dimacs_import dimension dimensionless dimensions dimensions_as_list direct" +
          " directory discrete_freq disjoin disjointp disolate disp dispcon dispform" +
          " dispfun dispJordan display disprule dispterms distrib divide divisors divsum" +
          " dkummer_m dkummer_u dlange dodecahedron_graph dotproduct dotsimp dpart" +
          " draw draw2d draw3d drawdf draw_file draw_graph dscalar echelon edge_coloring" +
          " edge_connectivity edges eigens_by_jacobi eigenvalues eigenvectors eighth" +
          " einstein eivals eivects elapsed_real_time elapsed_run_time ele2comp ele2polynome" +
          " ele2pui elem elementp elevation_grid elim elim_allbut eliminate eliminate_using" +
          " ellipse elliptic_e elliptic_ec elliptic_eu elliptic_f elliptic_kc elliptic_pi" +
          " ematrix empty_graph emptyp endcons entermatrix entertensor entier equal equalp" +
          " equiv_classes erf erfc erf_generalized erfi errcatch error errormsg errors" +
          " euler ev eval_string evenp every evolution evolution2d evundiff example exp" +
          " expand expandwrt expandwrt_factored expint expintegral_chi expintegral_ci" +
          " expintegral_e expintegral_e1 expintegral_ei expintegral_e_simplify expintegral_li" +
          " expintegral_shi expintegral_si explicit explose exponentialize express expt" +
          " exsec extdiff extract_linear_equations extremal_subset ezgcd %f f90 facsum" +
          " factcomb factor factorfacsum factorial factorout factorsum facts fast_central_elements" +
          " fast_linsolve fasttimes featurep fernfale fft fib fibtophi fifth filename_merge" +
          " file_search file_type fillarray findde find_root find_root_abs find_root_error" +
          " find_root_rel first fix flatten flength float floatnump floor flower_snark" +
          " flush flush1deriv flushd flushnd flush_output fmin_cobyla forget fortran" +
          " fourcos fourexpand fourier fourier_elim fourint fourintcos fourintsin foursimp" +
          " foursin fourth fposition frame_bracket freeof freshline fresnel_c fresnel_s" +
          " from_adjacency_matrix frucht_graph full_listify fullmap fullmapl fullratsimp" +
          " fullratsubst fullsetify funcsolve fundamental_dimensions fundamental_units" +
          " fundef funmake funp fv g0 g1 gamma gamma_greek gamma_incomplete gamma_incomplete_generalized" +
          " gamma_incomplete_regularized gauss gauss_a gauss_b gaussprob gcd gcdex gcdivide" +
          " gcfac gcfactor gd generalized_lambert_w genfact gen_laguerre genmatrix gensym" +
          " geo_amortization geo_annuity_fv geo_annuity_pv geomap geometric geometric_mean" +
          " geosum get getcurrentdirectory get_edge_weight getenv get_lu_factors get_output_stream_string" +
          " get_pixel get_plot_option get_tex_environment get_tex_environment_default" +
          " get_vertex_label gfactor gfactorsum ggf girth global_variances gn gnuplot_close" +
          " gnuplot_replot gnuplot_reset gnuplot_restart gnuplot_start go Gosper GosperSum" +
          " gr2d gr3d gradef gramschmidt graph6_decode graph6_encode graph6_export graph6_import" +
          " graph_center graph_charpoly graph_eigenvalues graph_flow graph_order graph_periphery" +
          " graph_product graph_size graph_union great_rhombicosidodecahedron_graph great_rhombicuboctahedron_graph" +
          " grid_graph grind grobner_basis grotzch_graph hamilton_cycle hamilton_path" +
          " hankel hankel_1 hankel_2 harmonic harmonic_mean hav heawood_graph hermite" +
          " hessian hgfred hilbertmap hilbert_matrix hipow histogram histogram_description" +
          " hodge horner hypergeometric i0 i1 %ibes ic1 ic2 ic_convert ichr1 ichr2 icosahedron_graph" +
          " icosidodecahedron_graph icurvature ident identfor identity idiff idim idummy" +
          " ieqn %if ifactors iframes ifs igcdex igeodesic_coords ilt image imagpart" +
          " imetric implicit implicit_derivative implicit_plot indexed_tensor indices" +
          " induced_subgraph inferencep inference_result infix info_display init_atensor" +
          " init_ctensor in_neighbors innerproduct inpart inprod inrt integerp integer_partitions" +
          " integrate intersect intersection intervalp intopois intosum invariant1 invariant2" +
          " inverse_fft inverse_jacobi_cd inverse_jacobi_cn inverse_jacobi_cs inverse_jacobi_dc" +
          " inverse_jacobi_dn inverse_jacobi_ds inverse_jacobi_nc inverse_jacobi_nd inverse_jacobi_ns" +
          " inverse_jacobi_sc inverse_jacobi_sd inverse_jacobi_sn invert invert_by_adjoint" +
          " invert_by_lu inv_mod irr is is_biconnected is_bipartite is_connected is_digraph" +
          " is_edge_in_graph is_graph is_graph_or_digraph ishow is_isomorphic isolate" +
          " isomorphism is_planar isqrt isreal_p is_sconnected is_tree is_vertex_in_graph" +
          " items_inference %j j0 j1 jacobi jacobian jacobi_cd jacobi_cn jacobi_cs jacobi_dc" +
          " jacobi_dn jacobi_ds jacobi_nc jacobi_nd jacobi_ns jacobi_p jacobi_sc jacobi_sd" +
          " jacobi_sn JF jn join jordan julia julia_set julia_sin %k kdels kdelta kill" +
          " killcontext kostka kron_delta kronecker_product kummer_m kummer_u kurtosis" +
          " kurtosis_bernoulli kurtosis_beta kurtosis_binomial kurtosis_chi2 kurtosis_continuous_uniform" +
          " kurtosis_discrete_uniform kurtosis_exp kurtosis_f kurtosis_gamma kurtosis_general_finite_discrete" +
          " kurtosis_geometric kurtosis_gumbel kurtosis_hypergeometric kurtosis_laplace" +
          " kurtosis_logistic kurtosis_lognormal kurtosis_negative_binomial kurtosis_noncentral_chi2" +
          " kurtosis_noncentral_student_t kurtosis_normal kurtosis_pareto kurtosis_poisson" +
          " kurtosis_rayleigh kurtosis_student_t kurtosis_weibull label labels lagrange" +
          " laguerre lambda lambert_w laplace laplacian_matrix last lbfgs lc2kdt lcharp" +
          " lc_l lcm lc_u ldefint ldisp ldisplay legendre_p legendre_q leinstein length" +
          " let letrules letsimp levi_civita lfreeof lgtreillis lhs li liediff limit" +
          " Lindstedt linear linearinterpol linear_program linear_regression line_graph" +
          " linsolve listarray list_correlations listify list_matrix_entries list_nc_monomials" +
          " listoftens listofvars listp lmax lmin load loadfile local locate_matrix_entry" +
          " log logcontract log_gamma lopow lorentz_gauge lowercasep lpart lratsubst" +
          " lreduce lriemann lsquares_estimates lsquares_estimates_approximate lsquares_estimates_exact" +
          " lsquares_mse lsquares_residual_mse lsquares_residuals lsum ltreillis lu_backsub" +
          " lucas lu_factor %m macroexpand macroexpand1 make_array makebox makefact makegamma" +
          " make_graph make_level_picture makelist makeOrders make_poly_continent make_poly_country" +
          " make_polygon make_random_state make_rgb_picture makeset make_string_input_stream" +
          " make_string_output_stream make_transform mandelbrot mandelbrot_set map mapatom" +
          " maplist matchdeclare matchfix mat_cond mat_fullunblocker mat_function mathml_display" +
          " mat_norm matrix matrixmap matrixp matrix_size mattrace mat_trace mat_unblocker" +
          " max max_clique max_degree max_flow maximize_lp max_independent_set max_matching" +
          " maybe md5sum mean mean_bernoulli mean_beta mean_binomial mean_chi2 mean_continuous_uniform" +
          " mean_deviation mean_discrete_uniform mean_exp mean_f mean_gamma mean_general_finite_discrete" +
          " mean_geometric mean_gumbel mean_hypergeometric mean_laplace mean_logistic" +
          " mean_lognormal mean_negative_binomial mean_noncentral_chi2 mean_noncentral_student_t" +
          " mean_normal mean_pareto mean_poisson mean_rayleigh mean_student_t mean_weibull" +
          " median median_deviation member mesh metricexpandall mgf1_sha1 min min_degree" +
          " min_edge_cut minfactorial minimalPoly minimize_lp minimum_spanning_tree minor" +
          " minpack_lsquares minpack_solve min_vertex_cover min_vertex_cut mkdir mnewton" +
          " mod mode_declare mode_identity ModeMatrix moebius mon2schur mono monomial_dimensions" +
          " multibernstein_poly multi_display_for_texinfo multi_elem multinomial multinomial_coeff" +
          " multi_orbit multiplot_mode multi_pui multsym multthru mycielski_graph nary" +
          " natural_unit nc_degree ncexpt ncharpoly negative_picture neighbors new newcontext" +
          " newdet new_graph newline newton new_variable next_prime nicedummies niceindices" +
          " ninth nofix nonarray noncentral_moment nonmetricity nonnegintegerp nonscalarp" +
          " nonzeroandfreeof notequal nounify nptetrad npv nroots nterms ntermst" +
          " nthroot nullity nullspace num numbered_boundaries numberp number_to_octets" +
          " num_distinct_partitions numerval numfactor num_partitions nusum nzeta nzetai" +
          " nzetar octets_to_number octets_to_oid odd_girth oddp ode2 ode_check odelin" +
          " oid_to_octets op opena opena_binary openr openr_binary openw openw_binary" +
          " operatorp opsubst optimize %or orbit orbits ordergreat ordergreatp orderless" +
          " orderlessp orthogonal_complement orthopoly_recur orthopoly_weight outermap" +
          " out_neighbors outofpois pade parabolic_cylinder_d parametric parametric_surface" +
          " parg parGosper parse_string parse_timedate part part2cont partfrac partition" +
          " partition_set partpol path_digraph path_graph pathname_directory pathname_name" +
          " pathname_type pdf_bernoulli pdf_beta pdf_binomial pdf_cauchy pdf_chi2 pdf_continuous_uniform" +
          " pdf_discrete_uniform pdf_exp pdf_f pdf_gamma pdf_general_finite_discrete" +
          " pdf_geometric pdf_gumbel pdf_hypergeometric pdf_laplace pdf_logistic pdf_lognormal" +
          " pdf_negative_binomial pdf_noncentral_chi2 pdf_noncentral_student_t pdf_normal" +
          " pdf_pareto pdf_poisson pdf_rank_sum pdf_rayleigh pdf_signed_rank pdf_student_t" +
          " pdf_weibull pearson_skewness permanent permut permutation permutations petersen_graph" +
          " petrov pickapart picture_equalp picturep piechart piechart_description planar_embedding" +
          " playback plog plot2d plot3d plotdf ploteq plsquares pochhammer points poisdiff" +
          " poisexpt poisint poismap poisplus poissimp poissubst poistimes poistrim polar" +
          " polarform polartorect polar_to_xy poly_add poly_buchberger poly_buchberger_criterion" +
          " poly_colon_ideal poly_content polydecomp poly_depends_p poly_elimination_ideal" +
          " poly_exact_divide poly_expand poly_expt poly_gcd polygon poly_grobner poly_grobner_equal" +
          " poly_grobner_member poly_grobner_subsetp poly_ideal_intersection poly_ideal_polysaturation" +
          " poly_ideal_polysaturation1 poly_ideal_saturation poly_ideal_saturation1 poly_lcm" +
          " poly_minimization polymod poly_multiply polynome2ele polynomialp poly_normal_form" +
          " poly_normalize poly_normalize_list poly_polysaturation_extension poly_primitive_part" +
          " poly_pseudo_divide poly_reduced_grobner poly_reduction poly_saturation_extension" +
          " poly_s_polynomial poly_subtract polytocompanion pop postfix potential power_mod" +
          " powerseries powerset prefix prev_prime primep primes principal_components" +
          " print printf printfile print_graph printpois printprops prodrac product properties" +
          " propvars psi psubst ptriangularize pui pui2comp pui2ele pui2polynome pui_direct" +
          " puireduc push put pv qput qrange qty quad_control quad_qag quad_qagi quad_qagp" +
          " quad_qags quad_qawc quad_qawf quad_qawo quad_qaws quadrilateral quantile" +
          " quantile_bernoulli quantile_beta quantile_binomial quantile_cauchy quantile_chi2" +
          " quantile_continuous_uniform quantile_discrete_uniform quantile_exp quantile_f" +
          " quantile_gamma quantile_general_finite_discrete quantile_geometric quantile_gumbel" +
          " quantile_hypergeometric quantile_laplace quantile_logistic quantile_lognormal" +
          " quantile_negative_binomial quantile_noncentral_chi2 quantile_noncentral_student_t" +
          " quantile_normal quantile_pareto quantile_poisson quantile_rayleigh quantile_student_t" +
          " quantile_weibull quartile_skewness quit qunit quotient racah_v racah_w radcan" +
          " radius random random_bernoulli random_beta random_binomial random_bipartite_graph" +
          " random_cauchy random_chi2 random_continuous_uniform random_digraph random_discrete_uniform" +
          " random_exp random_f random_gamma random_general_finite_discrete random_geometric" +
          " random_graph random_graph1 random_gumbel random_hypergeometric random_laplace" +
          " random_logistic random_lognormal random_negative_binomial random_network" +
          " random_noncentral_chi2 random_noncentral_student_t random_normal random_pareto" +
          " random_permutation random_poisson random_rayleigh random_regular_graph random_student_t" +
          " random_tournament random_tree random_weibull range rank rat ratcoef ratdenom" +
          " ratdiff ratdisrep ratexpand ratinterpol rational rationalize ratnumer ratnump" +
          " ratp ratsimp ratsubst ratvars ratweight read read_array read_binary_array" +
          " read_binary_list read_binary_matrix readbyte readchar read_hashed_array readline" +
          " read_list read_matrix read_nested_list readonly read_xpm real_imagpart_to_conjugate" +
          " realpart realroots rearray rectangle rectform rectform_log_if_constant recttopolar" +
          " rediff reduce_consts reduce_order region region_boundaries region_boundaries_plus" +
          " rem remainder remarray rembox remcomps remcon remcoord remfun remfunction" +
          " remlet remove remove_constvalue remove_dimensions remove_edge remove_fundamental_dimensions" +
          " remove_fundamental_units remove_plot_option remove_vertex rempart remrule" +
          " remsym remvalue rename rename_file reset reset_displays residue resolvante" +
          " resolvante_alternee1 resolvante_bipartite resolvante_diedrale resolvante_klein" +
          " resolvante_klein3 resolvante_produit_sym resolvante_unitaire resolvante_vierer" +
          " rest resultant return reveal reverse revert revert2 rgb2level rhs ricci riemann" +
          " rinvariant risch rk rmdir rncombine romberg room rootscontract round row" +
          " rowop rowswap rreduce run_testsuite %s save saving scalarp scaled_bessel_i" +
          " scaled_bessel_i0 scaled_bessel_i1 scalefactors scanmap scatterplot scatterplot_description" +
          " scene schur2comp sconcat scopy scsimp scurvature sdowncase sec sech second" +
          " sequal sequalignore set_alt_display setdifference set_draw_defaults set_edge_weight" +
          " setelmx setequalp setify setp set_partitions set_plot_option set_prompt set_random_state" +
          " set_tex_environment set_tex_environment_default setunits setup_autoload set_up_dot_simplifications" +
          " set_vertex_label seventh sexplode sf sha1sum sha256sum shortest_path shortest_weighted_path" +
          " show showcomps showratvars sierpinskiale sierpinskimap sign signum similaritytransform" +
          " simp_inequality simplify_sum simplode simpmetderiv simtran sin sinh sinsert" +
          " sinvertcase sixth skewness skewness_bernoulli skewness_beta skewness_binomial" +
          " skewness_chi2 skewness_continuous_uniform skewness_discrete_uniform skewness_exp" +
          " skewness_f skewness_gamma skewness_general_finite_discrete skewness_geometric" +
          " skewness_gumbel skewness_hypergeometric skewness_laplace skewness_logistic" +
          " skewness_lognormal skewness_negative_binomial skewness_noncentral_chi2 skewness_noncentral_student_t" +
          " skewness_normal skewness_pareto skewness_poisson skewness_rayleigh skewness_student_t" +
          " skewness_weibull slength smake small_rhombicosidodecahedron_graph small_rhombicuboctahedron_graph" +
          " smax smin smismatch snowmap snub_cube_graph snub_dodecahedron_graph solve" +
          " solve_rec solve_rec_rat some somrac sort sparse6_decode sparse6_encode sparse6_export" +
          " sparse6_import specint spherical spherical_bessel_j spherical_bessel_y spherical_hankel1" +
          " spherical_hankel2 spherical_harmonic spherical_to_xyz splice split sposition" +
          " sprint sqfr sqrt sqrtdenest sremove sremovefirst sreverse ssearch ssort sstatus" +
          " ssubst ssubstfirst staircase standardize standardize_inverse_trig starplot" +
          " starplot_description status std std1 std_bernoulli std_beta std_binomial" +
          " std_chi2 std_continuous_uniform std_discrete_uniform std_exp std_f std_gamma" +
          " std_general_finite_discrete std_geometric std_gumbel std_hypergeometric std_laplace" +
          " std_logistic std_lognormal std_negative_binomial std_noncentral_chi2 std_noncentral_student_t" +
          " std_normal std_pareto std_poisson std_rayleigh std_student_t std_weibull" +
          " stemplot stirling stirling1 stirling2 strim striml strimr string stringout" +
          " stringp strong_components struve_h struve_l sublis sublist sublist_indices" +
          " submatrix subsample subset subsetp subst substinpart subst_parallel substpart" +
          " substring subvar subvarp sum sumcontract summand_to_rec supcase supcontext" +
          " symbolp symmdifference symmetricp system take_channel take_inference tan" +
          " tanh taylor taylorinfo taylorp taylor_simplifier taytorat tcl_output tcontract" +
          " tellrat tellsimp tellsimpafter tentex tenth test_mean test_means_difference" +
          " test_normality test_proportion test_proportions_difference test_rank_sum" +
          " test_sign test_signed_rank test_variance test_variance_ratio tex tex1 tex_display" +
          " texput %th third throw time timedate timer timer_info tldefint tlimit todd_coxeter" +
          " toeplitz tokens to_lisp topological_sort to_poly to_poly_solve totaldisrep" +
          " totalfourier totient tpartpol trace tracematrix trace_options transform_sample" +
          " translate translate_file transpose treefale tree_reduce treillis treinat" +
          " triangle triangularize trigexpand trigrat trigreduce trigsimp trunc truncate" +
          " truncated_cube_graph truncated_dodecahedron_graph truncated_icosahedron_graph" +
          " truncated_tetrahedron_graph tr_warnings_get tube tutte_graph ueivects uforget" +
          " ultraspherical underlying_graph undiff union unique uniteigenvectors unitp" +
          " units unit_step unitvector unorder unsum untellrat untimer" +
          " untrace uppercasep uricci uriemann uvect vandermonde_matrix var var1 var_bernoulli" +
          " var_beta var_binomial var_chi2 var_continuous_uniform var_discrete_uniform" +
          " var_exp var_f var_gamma var_general_finite_discrete var_geometric var_gumbel" +
          " var_hypergeometric var_laplace var_logistic var_lognormal var_negative_binomial" +
          " var_noncentral_chi2 var_noncentral_student_t var_normal var_pareto var_poisson" +
          " var_rayleigh var_student_t var_weibull vector vectorpotential vectorsimp" +
          " verbify vers vertex_coloring vertex_connectivity vertex_degree vertex_distance" +
          " vertex_eccentricity vertex_in_degree vertex_out_degree vertices vertices_to_cycle" +
          " vertices_to_path %w weyl wheel_graph wiener_index wigner_3j wigner_6j" +
          " wigner_9j with_stdout write_binary_data writebyte write_data writefile wronskian" +
          " xreduce xthru %y Zeilberger zeroequiv zerofor zeromatrix zeromatrixp zeta" +
          " zgeev zheev zlange zn_add_table zn_carmichael_lambda zn_characteristic_factors" +
          " zn_determinant zn_factor_generators zn_invert_by_lu zn_log zn_mult_table" +
          " absboxchar activecontexts adapt_depth additive adim aform algebraic" +
          " algepsilon algexact aliases allbut all_dotsimp_denoms allocation allsym alphabetic" +
          " animation antisymmetric arrays askexp assume_pos assume_pos_pred assumescalar" +
          " asymbol atomgrad atrig1 axes axis_3d axis_bottom axis_left axis_right axis_top" +
          " azimuth background background_color backsubst berlefact bernstein_explicit" +
          " besselexpand beta_args_sum_to_integer beta_expand bftorat bftrunc bindtest" +
          " border boundaries_array box boxchar breakup %c capping cauchysum cbrange" +
          " cbtics center cflength cframe_flag cnonmet_flag color color_bar color_bar_tics" +
          " colorbox columns commutative complex cone context contexts contour contour_levels" +
          " cosnpiflag ctaypov ctaypt ctayswitch ctayvar ct_coords ctorsion_flag ctrgsimp" +
          " cube current_let_rule_package cylinder data_file_name debugmode decreasing" +
          " default_let_rule_package delay dependencies derivabbrev derivsubst detout" +
          " diagmetric diff dim dimensions dispflag display2d|10 display_format_internal" +
          " distribute_over doallmxops domain domxexpt domxmxops domxnctimes dontfactor" +
          " doscmxops doscmxplus dot0nscsimp dot0simp dot1simp dotassoc dotconstrules" +
          " dotdistrib dotexptsimp dotident dotscrules draw_graph_program draw_realpart" +
          " edge_color edge_coloring edge_partition edge_type edge_width %edispflag" +
          " elevation %emode endphi endtheta engineering_format_floats enhanced3d %enumer" +
          " epsilon_lp erfflag erf_representation errormsg error_size error_syms error_type" +
          " %e_to_numlog eval even evenfun evflag evfun ev_point expandwrt_denom expintexpand" +
          " expintrep expon expop exptdispflag exptisolate exptsubst facexpand facsum_combine" +
          " factlim factorflag factorial_expand factors_only fb feature features" +
          " file_name file_output_append file_search_demo file_search_lisp file_search_maxima|10" +
          " file_search_tests file_search_usage file_type_lisp file_type_maxima|10 fill_color" +
          " fill_density filled_func fixed_vertices flipflag float2bf font font_size" +
          " fortindent fortspaces fpprec fpprintprec functions gamma_expand gammalim" +
          " gdet genindex gensumnum GGFCFMAX GGFINFINITY globalsolve gnuplot_command" +
          " gnuplot_curve_styles gnuplot_curve_titles gnuplot_default_term_command gnuplot_dumb_term_command" +
          " gnuplot_file_args gnuplot_file_name gnuplot_out_file gnuplot_pdf_term_command" +
          " gnuplot_pm3d gnuplot_png_term_command gnuplot_postamble gnuplot_preamble" +
          " gnuplot_ps_term_command gnuplot_svg_term_command gnuplot_term gnuplot_view_args" +
          " Gosper_in_Zeilberger gradefs grid grid2d grind halfangles head_angle head_both" +
          " head_length head_type height hypergeometric_representation %iargs ibase" +
          " icc1 icc2 icounter idummyx ieqnprint ifb ifc1 ifc2 ifg ifgi ifr iframe_bracket_form" +
          " ifri igeowedge_flag ikt1 ikt2 imaginary inchar increasing infeval" +
          " infinity inflag infolists inm inmc1 inmc2 intanalysis integer integervalued" +
          " integrate_use_rootsof integration_constant integration_constant_counter interpolate_color" +
          " intfaclim ip_grid ip_grid_in irrational isolate_wrt_times iterations itr" +
          " julia_parameter %k1 %k2 keepfloat key key_pos kinvariant kt label label_alignment" +
          " label_orientation labels lassociative lbfgs_ncorrections lbfgs_nfeval_max" +
          " leftjust legend letrat let_rule_packages lfg lg lhospitallim limsubst linear" +
          " linear_solver linechar linel|10 linenum line_type linewidth line_width linsolve_params" +
          " linsolvewarn lispdisp listarith listconstvars listdummyvars lmxchar load_pathname" +
          " loadprint logabs logarc logcb logconcoeffp logexpand lognegint logsimp logx" +
          " logx_secondary logy logy_secondary logz lriem m1pbranch macroexpansion macros" +
          " mainvar manual_demo maperror mapprint matrix_element_add matrix_element_mult" +
          " matrix_element_transpose maxapplydepth maxapplyheight maxima_tempdir|10 maxima_userdir|10" +
          " maxnegex MAX_ORD maxposex maxpsifracdenom maxpsifracnum maxpsinegint maxpsiposint" +
          " maxtayorder mesh_lines_color method mod_big_prime mode_check_errorp" +
          " mode_checkp mode_check_warnp mod_test mod_threshold modular_linear_solver" +
          " modulus multiplicative multiplicities myoptions nary negdistrib negsumdispflag" +
          " newline newtonepsilon newtonmaxiter nextlayerfactor niceindicespref nm nmc" +
          " noeval nolabels nonegative_lp noninteger nonscalar noun noundisp nouns np" +
          " npi nticks ntrig numer numer_pbranch obase odd oddfun opacity opproperties" +
          " opsubst optimprefix optionset orientation origin orthopoly_returns_intervals" +
          " outative outchar packagefile palette partswitch pdf_file pfeformat phiresolution" +
          " %piargs piece pivot_count_sx pivot_max_sx plot_format plot_options plot_realpart" +
          " png_file pochhammer_max_index points pointsize point_size points_joined point_type" +
          " poislim poisson poly_coefficient_ring poly_elimination_order polyfactor poly_grobner_algorithm" +
          " poly_grobner_debug poly_monomial_order poly_primary_elimination_order poly_return_term_list" +
          " poly_secondary_elimination_order poly_top_reduction_only posfun position" +
          " powerdisp pred prederror primep_number_of_tests product_use_gamma program" +
          " programmode promote_float_to_bigfloat prompt proportional_axes props psexpand" +
          " ps_file radexpand radius radsubstflag rassociative ratalgdenom ratchristof" +
          " ratdenomdivide rateinstein ratepsilon ratfac rational ratmx ratprint ratriemann" +
          " ratsimpexpons ratvarswitch ratweights ratweyl ratwtlvl real realonly redraw" +
          " refcheck resolution restart resultant ric riem rmxchar %rnum_list rombergabs" +
          " rombergit rombergmin rombergtol rootsconmode rootsepsilon run_viewer same_xy" +
          " same_xyz savedef savefactors scalar scalarmatrixp scale scale_lp setcheck" +
          " setcheckbreak setval show_edge_color show_edges show_edge_type show_edge_width" +
          " show_id show_label showtime show_vertex_color show_vertex_size show_vertex_type" +
          " show_vertices show_weight simp simplified_output simplify_products simpproduct" +
          " simpsum sinnpiflag solvedecomposes solveexplicit solvefactors solvenullwarn" +
          " solveradcan solvetrigwarn space sparse sphere spring_embedding_depth sqrtdispflag" +
          " stardisp startphi starttheta stats_numer stringdisp structures style sublis_apply_lambda" +
          " subnumsimp sumexpand sumsplitfact surface surface_hide svg_file symmetric" +
          " tab taylordepth taylor_logexpand taylor_order_coefficients taylor_truncate_polynomials" +
          " tensorkill terminal testsuite_files thetaresolution timer_devalue title tlimswitch" +
          " tr track transcompile transform transform_xy translate_fast_arrays transparent" +
          " transrun tr_array_as_ref tr_bound_function_applyp tr_file_tty_messagesp tr_float_can_branch_complex" +
          " tr_function_call_default trigexpandplus trigexpandtimes triginverses trigsign" +
          " trivial_solutions tr_numer tr_optimize_max_loop tr_semicompile tr_state_vars" +
          " tr_warn_bad_function_calls tr_warn_fexpr tr_warn_meval tr_warn_mode" +
          " tr_warn_undeclared tr_warn_undefined_variable tstep ttyoff tube_extremes" +
          " ufg ug %unitexpand unit_vectors uric uriem use_fast_arrays user_preamble" +
          " usersetunits values vect_cross verbose vertex_color vertex_coloring vertex_partition" +
          " vertex_size vertex_type view warnings weyl width windowname windowtitle wired_surface" +
          " wireframe xaxis xaxis_color xaxis_secondary xaxis_type xaxis_width xlabel" +
          " xlabel_secondary xlength xrange xrange_secondary xtics xtics_axis xtics_rotate" +
          " xtics_rotate_secondary xtics_secondary xtics_secondary_axis xu_grid x_voxel" +
          " xy_file xyplane xy_scale yaxis yaxis_color yaxis_secondary yaxis_type yaxis_width" +
          " ylabel ylabel_secondary ylength yrange yrange_secondary ytics ytics_axis" +
          " ytics_rotate ytics_rotate_secondary ytics_secondary ytics_secondary_axis" +
          " yv_grid y_voxel yx_ratio zaxis zaxis_color zaxis_type zaxis_width zeroa zerob" +
          " zerobern zeta%pi zlabel zlabel_rotate zlength zmin zn_primroot_limit zn_primroot_pretest";
        var SYMBOLS = "_ __ %|0 %%|0";

        return {
          lexemes: "[A-Za-z_%][0-9A-Za-z_%]*",
          keywords: {
            keyword: KEYWORDS,
            literal: LITERALS,
            built_in: BUILTIN_FUNCTIONS,
            symbol: SYMBOLS
          },
          contains: [
            {
              className: "comment",
              begin: "/\\*",
              end: "\\*/",
              contains: ["self"]
            },
            hljs.QUOTE_STRING_MODE,
            {
              className: "number",
              relevance: 0,
              variants: [
                {
                  // float number w/ exponent
                  // hmm, I wonder if we ought to include other exponent markers?
                  begin: "\\b(\\d+|\\d+\\.|\\.\\d+|\\d+\\.\\d+)[Ee][-+]?\\d+\\b"
                },
                {
                  // bigfloat number
                  begin:
                    "\\b(\\d+|\\d+\\.|\\.\\d+|\\d+\\.\\d+)[Bb][-+]?\\d+\\b",
                  relevance: 10
                },
                {
                  // float number w/out exponent
                  // Doesn't seem to recognize floats which start with '.'
                  begin: "\\b(\\.\\d+|\\d+\\.\\d+)\\b"
                },
                {
                  // integer in base up to 36
                  // Doesn't seem to recognize integers which end with '.'
                  begin: "\\b(\\d+|0[0-9A-Za-z]+)\\.?\\b"
                }
              ]
            }
          ],
          illegal: /@/
        };
      };

      /***/
    },
    /* 133 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords:
            "int float string vector matrix if else switch case default while do for in break " +
            "continue global proc return about abs addAttr addAttributeEditorNodeHelp addDynamic " +
            "addNewShelfTab addPP addPanelCategory addPrefixToName advanceToNextDrivenKey " +
            "affectedNet affects aimConstraint air alias aliasAttr align alignCtx alignCurve " +
            "alignSurface allViewFit ambientLight angle angleBetween animCone animCurveEditor " +
            "animDisplay animView annotate appendStringArray applicationName applyAttrPreset " +
            "applyTake arcLenDimContext arcLengthDimension arclen arrayMapper art3dPaintCtx " +
            "artAttrCtx artAttrPaintVertexCtx artAttrSkinPaintCtx artAttrTool artBuildPaintMenu " +
            "artFluidAttrCtx artPuttyCtx artSelectCtx artSetPaintCtx artUserPaintCtx assignCommand " +
            "assignInputDevice assignViewportFactories attachCurve attachDeviceAttr attachSurface " +
            "attrColorSliderGrp attrCompatibility attrControlGrp attrEnumOptionMenu " +
            "attrEnumOptionMenuGrp attrFieldGrp attrFieldSliderGrp attrNavigationControlGrp " +
            "attrPresetEditWin attributeExists attributeInfo attributeMenu attributeQuery " +
            "autoKeyframe autoPlace bakeClip bakeFluidShading bakePartialHistory bakeResults " +
            "bakeSimulation basename basenameEx batchRender bessel bevel bevelPlus binMembership " +
            "bindSkin blend2 blendShape blendShapeEditor blendShapePanel blendTwoAttr blindDataType " +
            "boneLattice boundary boxDollyCtx boxZoomCtx bufferCurve buildBookmarkMenu " +
            "buildKeyframeMenu button buttonManip CBG cacheFile cacheFileCombine cacheFileMerge " +
            "cacheFileTrack camera cameraView canCreateManip canvas capitalizeString catch " +
            "catchQuiet ceil changeSubdivComponentDisplayLevel changeSubdivRegion channelBox " +
            "character characterMap characterOutlineEditor characterize chdir checkBox checkBoxGrp " +
            "checkDefaultRenderGlobals choice circle circularFillet clamp clear clearCache clip " +
            "clipEditor clipEditorCurrentTimeCtx clipSchedule clipSchedulerOutliner clipTrimBefore " +
            "closeCurve closeSurface cluster cmdFileOutput cmdScrollFieldExecuter " +
            "cmdScrollFieldReporter cmdShell coarsenSubdivSelectionList collision color " +
            "colorAtPoint colorEditor colorIndex colorIndexSliderGrp colorSliderButtonGrp " +
            "colorSliderGrp columnLayout commandEcho commandLine commandPort compactHairSystem " +
            "componentEditor compositingInterop computePolysetVolume condition cone confirmDialog " +
            "connectAttr connectControl connectDynamic connectJoint connectionInfo constrain " +
            "constrainValue constructionHistory container containsMultibyte contextInfo control " +
            "convertFromOldLayers convertIffToPsd convertLightmap convertSolidTx convertTessellation " +
            "convertUnit copyArray copyFlexor copyKey copySkinWeights cos cpButton cpCache " +
            "cpClothSet cpCollision cpConstraint cpConvClothToMesh cpForces cpGetSolverAttr cpPanel " +
            "cpProperty cpRigidCollisionFilter cpSeam cpSetEdit cpSetSolverAttr cpSolver " +
            "cpSolverTypes cpTool cpUpdateClothUVs createDisplayLayer createDrawCtx createEditor " +
            "createLayeredPsdFile createMotionField createNewShelf createNode createRenderLayer " +
            "createSubdivRegion cross crossProduct ctxAbort ctxCompletion ctxEditMode ctxTraverse " +
            "currentCtx currentTime currentTimeCtx currentUnit curve curveAddPtCtx " +
            "curveCVCtx curveEPCtx curveEditorCtx curveIntersect curveMoveEPCtx curveOnSurface " +
            "curveSketchCtx cutKey cycleCheck cylinder dagPose date defaultLightListCheckBox " +
            "defaultNavigation defineDataServer defineVirtualDevice deformer deg_to_rad delete " +
            "deleteAttr deleteShadingGroupsAndMaterials deleteShelfTab deleteUI deleteUnusedBrushes " +
            "delrandstr detachCurve detachDeviceAttr detachSurface deviceEditor devicePanel dgInfo " +
            "dgdirty dgeval dgtimer dimWhen directKeyCtx directionalLight dirmap dirname disable " +
            "disconnectAttr disconnectJoint diskCache displacementToPoly displayAffected " +
            "displayColor displayCull displayLevelOfDetail displayPref displayRGBColor " +
            "displaySmoothness displayStats displayString displaySurface distanceDimContext " +
            "distanceDimension doBlur dolly dollyCtx dopeSheetEditor dot dotProduct " +
            "doubleProfileBirailSurface drag dragAttrContext draggerContext dropoffLocator " +
            "duplicate duplicateCurve duplicateSurface dynCache dynControl dynExport dynExpression " +
            "dynGlobals dynPaintEditor dynParticleCtx dynPref dynRelEdPanel dynRelEditor " +
            "dynamicLoad editAttrLimits editDisplayLayerGlobals editDisplayLayerMembers " +
            "editRenderLayerAdjustment editRenderLayerGlobals editRenderLayerMembers editor " +
            "editorTemplate effector emit emitter enableDevice encodeString endString endsWith env " +
            "equivalent equivalentTol erf error eval evalDeferred evalEcho event " +
            "exactWorldBoundingBox exclusiveLightCheckBox exec executeForEachObject exists exp " +
            "expression expressionEditorListen extendCurve extendSurface extrude fcheck fclose feof " +
            "fflush fgetline fgetword file fileBrowserDialog fileDialog fileExtension fileInfo " +
            "filetest filletCurve filter filterCurve filterExpand filterStudioImport " +
            "findAllIntersections findAnimCurves findKeyframe findMenuItem findRelatedSkinCluster " +
            "finder firstParentOf fitBspline flexor floatEq floatField floatFieldGrp floatScrollBar " +
            "floatSlider floatSlider2 floatSliderButtonGrp floatSliderGrp floor flow fluidCacheInfo " +
            "fluidEmitter fluidVoxelInfo flushUndo fmod fontDialog fopen formLayout format fprint " +
            "frameLayout fread freeFormFillet frewind fromNativePath fwrite gamma gauss " +
            "geometryConstraint getApplicationVersionAsFloat getAttr getClassification " +
            "getDefaultBrush getFileList getFluidAttr getInputDeviceRange getMayaPanelTypes " +
            "getModifiers getPanel getParticleAttr getPluginResource getenv getpid glRender " +
            "glRenderEditor globalStitch gmatch goal gotoBindPose grabColor gradientControl " +
            "gradientControlNoAttr graphDollyCtx graphSelectContext graphTrackCtx gravity grid " +
            "gridLayout group groupObjectsByName HfAddAttractorToAS HfAssignAS HfBuildEqualMap " +
            "HfBuildFurFiles HfBuildFurImages HfCancelAFR HfConnectASToHF HfCreateAttractor " +
            "HfDeleteAS HfEditAS HfPerformCreateAS HfRemoveAttractorFromAS HfSelectAttached " +
            "HfSelectAttractors HfUnAssignAS hardenPointCurve hardware hardwareRenderPanel " +
            "headsUpDisplay headsUpMessage help helpLine hermite hide hilite hitTest hotBox hotkey " +
            "hotkeyCheck hsv_to_rgb hudButton hudSlider hudSliderButton hwReflectionMap hwRender " +
            "hwRenderLoad hyperGraph hyperPanel hyperShade hypot iconTextButton iconTextCheckBox " +
            "iconTextRadioButton iconTextRadioCollection iconTextScrollList iconTextStaticLabel " +
            "ikHandle ikHandleCtx ikHandleDisplayScale ikSolver ikSplineHandleCtx ikSystem " +
            "ikSystemInfo ikfkDisplayMethod illustratorCurves image imfPlugins inheritTransform " +
            "insertJoint insertJointCtx insertKeyCtx insertKnotCurve insertKnotSurface instance " +
            "instanceable instancer intField intFieldGrp intScrollBar intSlider intSliderGrp " +
            "interToUI internalVar intersect iprEngine isAnimCurve isConnected isDirty isParentOf " +
            "isSameObject isTrue isValidObjectName isValidString isValidUiName isolateSelect " +
            "itemFilter itemFilterAttr itemFilterRender itemFilterType joint jointCluster jointCtx " +
            "jointDisplayScale jointLattice keyTangent keyframe keyframeOutliner " +
            "keyframeRegionCurrentTimeCtx keyframeRegionDirectKeyCtx keyframeRegionDollyCtx " +
            "keyframeRegionInsertKeyCtx keyframeRegionMoveKeyCtx keyframeRegionScaleKeyCtx " +
            "keyframeRegionSelectKeyCtx keyframeRegionSetKeyCtx keyframeRegionTrackCtx " +
            "keyframeStats lassoContext lattice latticeDeformKeyCtx launch launchImageEditor " +
            "layerButton layeredShaderPort layeredTexturePort layout layoutDialog lightList " +
            "lightListEditor lightListPanel lightlink lineIntersection linearPrecision linstep " +
            "listAnimatable listAttr listCameras listConnections listDeviceAttachments listHistory " +
            "listInputDeviceAxes listInputDeviceButtons listInputDevices listMenuAnnotation " +
            "listNodeTypes listPanelCategories listRelatives listSets listTransforms " +
            "listUnselected listerEditor loadFluid loadNewShelf loadPlugin " +
            "loadPluginLanguageResources loadPrefObjects localizedPanelLabel lockNode loft log " +
            "longNameOf lookThru ls lsThroughFilter lsType lsUI Mayatomr mag makeIdentity makeLive " +
            "makePaintable makeRoll makeSingleSurface makeTubeOn makebot manipMoveContext " +
            "manipMoveLimitsCtx manipOptions manipRotateContext manipRotateLimitsCtx " +
            "manipScaleContext manipScaleLimitsCtx marker match max memory menu menuBarLayout " +
            "menuEditor menuItem menuItemToShelf menuSet menuSetPref messageLine min minimizeApp " +
            "mirrorJoint modelCurrentTimeCtx modelEditor modelPanel mouse movIn movOut move " +
            "moveIKtoFK moveKeyCtx moveVertexAlongDirection multiProfileBirailSurface mute " +
            "nParticle nameCommand nameField namespace namespaceInfo newPanelItems newton nodeCast " +
            "nodeIconButton nodeOutliner nodePreset nodeType noise nonLinear normalConstraint " +
            "normalize nurbsBoolean nurbsCopyUVSet nurbsCube nurbsEditUV nurbsPlane nurbsSelect " +
            "nurbsSquare nurbsToPoly nurbsToPolygonsPref nurbsToSubdiv nurbsToSubdivPref " +
            "nurbsUVSet nurbsViewDirectionVector objExists objectCenter objectLayer objectType " +
            "objectTypeUI obsoleteProc oceanNurbsPreviewPlane offsetCurve offsetCurveOnSurface " +
            "offsetSurface openGLExtension openMayaPref optionMenu optionMenuGrp optionVar orbit " +
            "orbitCtx orientConstraint outlinerEditor outlinerPanel overrideModifier " +
            "paintEffectsDisplay pairBlend palettePort paneLayout panel panelConfiguration " +
            "panelHistory paramDimContext paramDimension paramLocator parent parentConstraint " +
            "particle particleExists particleInstancer particleRenderInfo partition pasteKey " +
            "pathAnimation pause pclose percent performanceOptions pfxstrokes pickWalk picture " +
            "pixelMove planarSrf plane play playbackOptions playblast plugAttr plugNode pluginInfo " +
            "pluginResourceUtil pointConstraint pointCurveConstraint pointLight pointMatrixMult " +
            "pointOnCurve pointOnSurface pointPosition poleVectorConstraint polyAppend " +
            "polyAppendFacetCtx polyAppendVertex polyAutoProjection polyAverageNormal " +
            "polyAverageVertex polyBevel polyBlendColor polyBlindData polyBoolOp polyBridgeEdge " +
            "polyCacheMonitor polyCheck polyChipOff polyClipboard polyCloseBorder polyCollapseEdge " +
            "polyCollapseFacet polyColorBlindData polyColorDel polyColorPerVertex polyColorSet " +
            "polyCompare polyCone polyCopyUV polyCrease polyCreaseCtx polyCreateFacet " +
            "polyCreateFacetCtx polyCube polyCut polyCutCtx polyCylinder polyCylindricalProjection " +
            "polyDelEdge polyDelFacet polyDelVertex polyDuplicateAndConnect polyDuplicateEdge " +
            "polyEditUV polyEditUVShell polyEvaluate polyExtrudeEdge polyExtrudeFacet " +
            "polyExtrudeVertex polyFlipEdge polyFlipUV polyForceUV polyGeoSampler polyHelix " +
            "polyInfo polyInstallAction polyLayoutUV polyListComponentConversion polyMapCut " +
            "polyMapDel polyMapSew polyMapSewMove polyMergeEdge polyMergeEdgeCtx polyMergeFacet " +
            "polyMergeFacetCtx polyMergeUV polyMergeVertex polyMirrorFace polyMoveEdge " +
            "polyMoveFacet polyMoveFacetUV polyMoveUV polyMoveVertex polyNormal polyNormalPerVertex " +
            "polyNormalizeUV polyOptUvs polyOptions polyOutput polyPipe polyPlanarProjection " +
            "polyPlane polyPlatonicSolid polyPoke polyPrimitive polyPrism polyProjection " +
            "polyPyramid polyQuad polyQueryBlindData polyReduce polySelect polySelectConstraint " +
            "polySelectConstraintMonitor polySelectCtx polySelectEditCtx polySeparate " +
            "polySetToFaceNormal polySewEdge polyShortestPathCtx polySmooth polySoftEdge " +
            "polySphere polySphericalProjection polySplit polySplitCtx polySplitEdge polySplitRing " +
            "polySplitVertex polyStraightenUVBorder polySubdivideEdge polySubdivideFacet " +
            "polyToSubdiv polyTorus polyTransfer polyTriangulate polyUVSet polyUnite polyWedgeFace " +
            "popen popupMenu pose pow preloadRefEd print progressBar progressWindow projFileViewer " +
            "projectCurve projectTangent projectionContext projectionManip promptDialog propModCtx " +
            "propMove psdChannelOutliner psdEditTextureFile psdExport psdTextureFile putenv pwd " +
            "python querySubdiv quit rad_to_deg radial radioButton radioButtonGrp radioCollection " +
            "radioMenuItemCollection rampColorPort rand randomizeFollicles randstate rangeControl " +
            "readTake rebuildCurve rebuildSurface recordAttr recordDevice redo reference " +
            "referenceEdit referenceQuery refineSubdivSelectionList refresh refreshAE " +
            "registerPluginResource rehash reloadImage removeJoint removeMultiInstance " +
            "removePanelCategory rename renameAttr renameSelectionList renameUI render " +
            "renderGlobalsNode renderInfo renderLayerButton renderLayerParent " +
            "renderLayerPostProcess renderLayerUnparent renderManip renderPartition " +
            "renderQualityNode renderSettings renderThumbnailUpdate renderWindowEditor " +
            "renderWindowSelectContext renderer reorder reorderDeformers requires reroot " +
            "resampleFluid resetAE resetPfxToPolyCamera resetTool resolutionNode retarget " +
            "reverseCurve reverseSurface revolve rgb_to_hsv rigidBody rigidSolver roll rollCtx " +
            "rootOf rot rotate rotationInterpolation roundConstantRadius rowColumnLayout rowLayout " +
            "runTimeCommand runup sampleImage saveAllShelves saveAttrPreset saveFluid saveImage " +
            "saveInitialState saveMenu savePrefObjects savePrefs saveShelf saveToolSettings scale " +
            "scaleBrushBrightness scaleComponents scaleConstraint scaleKey scaleKeyCtx sceneEditor " +
            "sceneUIReplacement scmh scriptCtx scriptEditorInfo scriptJob scriptNode scriptTable " +
            "scriptToShelf scriptedPanel scriptedPanelType scrollField scrollLayout sculpt " +
            "searchPathArray seed selLoadSettings select selectContext selectCurveCV selectKey " +
            "selectKeyCtx selectKeyframeRegionCtx selectMode selectPref selectPriority selectType " +
            "selectedNodes selectionConnection separator setAttr setAttrEnumResource " +
            "setAttrMapping setAttrNiceNameResource setConstraintRestPosition " +
            "setDefaultShadingGroup setDrivenKeyframe setDynamic setEditCtx setEditor setFluidAttr " +
            "setFocus setInfinity setInputDeviceMapping setKeyCtx setKeyPath setKeyframe " +
            "setKeyframeBlendshapeTargetWts setMenuMode setNodeNiceNameResource setNodeTypeFlag " +
            "setParent setParticleAttr setPfxToPolyCamera setPluginResource setProject " +
            "setStampDensity setStartupMessage setState setToolTo setUITemplate setXformManip sets " +
            "shadingConnection shadingGeometryRelCtx shadingLightRelCtx shadingNetworkCompare " +
            "shadingNode shapeCompare shelfButton shelfLayout shelfTabLayout shellField " +
            "shortNameOf showHelp showHidden showManipCtx showSelectionInTitle " +
            "showShadingGroupAttrEditor showWindow sign simplify sin singleProfileBirailSurface " +
            "size sizeBytes skinCluster skinPercent smoothCurve smoothTangentSurface smoothstep " +
            "snap2to2 snapKey snapMode snapTogetherCtx snapshot soft softMod softModCtx sort sound " +
            "soundControl source spaceLocator sphere sphrand spotLight spotLightPreviewPort " +
            "spreadSheetEditor spring sqrt squareSurface srtContext stackTrace startString " +
            "startsWith stitchAndExplodeShell stitchSurface stitchSurfacePoints strcmp " +
            "stringArrayCatenate stringArrayContains stringArrayCount stringArrayInsertAtIndex " +
            "stringArrayIntersector stringArrayRemove stringArrayRemoveAtIndex " +
            "stringArrayRemoveDuplicates stringArrayRemoveExact stringArrayToString " +
            "stringToStringArray strip stripPrefixFromName stroke subdAutoProjection " +
            "subdCleanTopology subdCollapse subdDuplicateAndConnect subdEditUV " +
            "subdListComponentConversion subdMapCut subdMapSewMove subdMatchTopology subdMirror " +
            "subdToBlind subdToPoly subdTransferUVsToCache subdiv subdivCrease " +
            "subdivDisplaySmoothness substitute substituteAllString substituteGeometry substring " +
            "surface surfaceSampler surfaceShaderList swatchDisplayPort switchTable symbolButton " +
            "symbolCheckBox sysFile system tabLayout tan tangentConstraint texLatticeDeformContext " +
            "texManipContext texMoveContext texMoveUVShellContext texRotateContext texScaleContext " +
            "texSelectContext texSelectShortestPathCtx texSmudgeUVContext texWinToolCtx text " +
            "textCurves textField textFieldButtonGrp textFieldGrp textManip textScrollList " +
            "textToShelf textureDisplacePlane textureHairColor texturePlacementContext " +
            "textureWindow threadCount threePointArcCtx timeControl timePort timerX toNativePath " +
            "toggle toggleAxis toggleWindowVisibility tokenize tokenizeList tolerance tolower " +
            "toolButton toolCollection toolDropped toolHasOptions toolPropertyWindow torus toupper " +
            "trace track trackCtx transferAttributes transformCompare transformLimits translator " +
            "trim trunc truncateFluidCache truncateHairCache tumble tumbleCtx turbulence " +
            "twoPointArcCtx uiRes uiTemplate unassignInputDevice undo undoInfo ungroup uniform unit " +
            "unloadPlugin untangleUV untitledFileName untrim upAxis updateAE userCtx uvLink " +
            "uvSnapshot validateShelfName vectorize view2dToolCtx viewCamera viewClipPlane " +
            "viewFit viewHeadOn viewLookAt viewManip viewPlace viewSet visor volumeAxis vortex " +
            "waitCursor warning webBrowser webBrowserPrefs whatIs window windowPref wire " +
            "wireContext workspace wrinkle wrinkleContext writeTake xbmLangPathList xform",
          illegal: "</",
          contains: [
            hljs.C_NUMBER_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: "string",
              begin: "`",
              end: "`",
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              // eats variables
              begin: "[\\$\\%\\@](\\^\\w\\b|#\\w+|[^\\s\\w{]|{\\w+}|\\w+)"
            },
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 134 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            "module use_module import_module include_module end_module initialise " +
            "mutable initialize finalize finalise interface implementation pred " +
            "mode func type inst solver any_pred any_func is semidet det nondet " +
            "multi erroneous failure cc_nondet cc_multi typeclass instance where " +
            "pragma promise external trace atomic or_else require_complete_switch " +
            "require_det require_semidet require_multi require_nondet " +
            "require_cc_multi require_cc_nondet require_erroneous require_failure",
          meta:
            // pragma
            "inline no_inline type_spec source_file fact_table obsolete memo " +
            "loop_check minimal_model terminates does_not_terminate " +
            "check_termination promise_equivalent_clauses " +
            // preprocessor
            "foreign_proc foreign_decl foreign_code foreign_type " +
            "foreign_import_module foreign_export_enum foreign_export " +
            "foreign_enum may_call_mercury will_not_call_mercury thread_safe " +
            "not_thread_safe maybe_thread_safe promise_pure promise_semipure " +
            "tabled_for_io local untrailed trailed attach_to_io_state " +
            "can_pass_as_mercury_type stable will_not_throw_exception " +
            "may_modify_trail will_not_modify_trail may_duplicate " +
            "may_not_duplicate affects_liveness does_not_affect_liveness " +
            "doesnt_affect_liveness no_sharing unknown_sharing sharing",
          built_in:
            "some all not if then else true fail false try catch catch_any " +
            "semidet_true semidet_false semidet_fail impure_true impure semipure"
        };

        var COMMENT = hljs.COMMENT("%", "$");

        var NUMCODE = {
          className: "number",
          begin: "0'.\\|0[box][0-9a-fA-F]*"
        };

        var ATOM = hljs.inherit(hljs.APOS_STRING_MODE, { relevance: 0 });
        var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { relevance: 0 });
        var STRING_FMT = {
          className: "subst",
          begin:
            "\\\\[abfnrtv]\\|\\\\x[0-9a-fA-F]*\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]",
          relevance: 0
        };
        STRING.contains.push(STRING_FMT);

        var IMPLICATION = {
          className: "built_in",
          variants: [
            { begin: "<=>" },
            { begin: "<=", relevance: 0 },
            { begin: "=>", relevance: 0 },
            { begin: "/\\\\" },
            { begin: "\\\\/" }
          ]
        };

        var HEAD_BODY_CONJUNCTION = {
          className: "built_in",
          variants: [{ begin: ":-\\|-->" }, { begin: "=", relevance: 0 }]
        };

        return {
          aliases: ["m", "moo"],
          keywords: KEYWORDS,
          contains: [
            IMPLICATION,
            HEAD_BODY_CONJUNCTION,
            COMMENT,
            hljs.C_BLOCK_COMMENT_MODE,
            NUMCODE,
            hljs.NUMBER_MODE,
            ATOM,
            STRING,
            { begin: /:-/ } // relevance booster
          ]
        };
      };

      /***/
    },
    /* 135 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        //local labels: %?[FB]?[AT]?\d{1,2}\w+
        return {
          case_insensitive: true,
          aliases: ["mips"],
          lexemes: "\\.?" + hljs.IDENT_RE,
          keywords: {
            meta:
              //GNU preprocs
              ".2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .ltorg ",
            built_in:
              "$0 $1 $2 $3 $4 $5 $6 $7 $8 $9 $10 $11 $12 $13 $14 $15 " + // integer registers
              "$16 $17 $18 $19 $20 $21 $22 $23 $24 $25 $26 $27 $28 $29 $30 $31 " + // integer registers
              "zero at v0 v1 a0 a1 a2 a3 a4 a5 a6 a7 " + // integer register aliases
              "t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 s0 s1 s2 s3 s4 s5 s6 s7 s8 " + // integer register aliases
              "k0 k1 gp sp fp ra " + // integer register aliases
              "$f0 $f1 $f2 $f2 $f4 $f5 $f6 $f7 $f8 $f9 $f10 $f11 $f12 $f13 $f14 $f15 " + // floating-point registers
              "$f16 $f17 $f18 $f19 $f20 $f21 $f22 $f23 $f24 $f25 $f26 $f27 $f28 $f29 $f30 $f31 " + // floating-point registers
              "Context Random EntryLo0 EntryLo1 Context PageMask Wired EntryHi " + // Coprocessor 0 registers
              "HWREna BadVAddr Count Compare SR IntCtl SRSCtl SRSMap Cause EPC PRId " + // Coprocessor 0 registers
              "EBase Config Config1 Config2 Config3 LLAddr Debug DEPC DESAVE CacheErr " + // Coprocessor 0 registers
              "ECC ErrorEPC TagLo DataLo TagHi DataHi WatchLo WatchHi PerfCtl PerfCnt " // Coprocessor 0 registers
          },
          contains: [
            {
              className: "keyword",
              begin:
                "\\b(" + //mnemonics
                // 32-bit integer instructions
                "addi?u?|andi?|b(al)?|beql?|bgez(al)?l?|bgtzl?|blezl?|bltz(al)?l?|" +
                "bnel?|cl[oz]|divu?|ext|ins|j(al)?|jalr(.hb)?|jr(.hb)?|lbu?|lhu?|" +
                "ll|lui|lw[lr]?|maddu?|mfhi|mflo|movn|movz|move|msubu?|mthi|mtlo|mul|" +
                "multu?|nop|nor|ori?|rotrv?|sb|sc|se[bh]|sh|sllv?|slti?u?|srav?|" +
                "srlv?|subu?|sw[lr]?|xori?|wsbh|" +
                // floating-point instructions
                "abs.[sd]|add.[sd]|alnv.ps|bc1[ft]l?|" +
                "c.(s?f|un|u?eq|[ou]lt|[ou]le|ngle?|seq|l[et]|ng[et]).[sd]|" +
                "(ceil|floor|round|trunc).[lw].[sd]|cfc1|cvt.d.[lsw]|" +
                "cvt.l.[dsw]|cvt.ps.s|cvt.s.[dlw]|cvt.s.p[lu]|cvt.w.[dls]|" +
                "div.[ds]|ldx?c1|luxc1|lwx?c1|madd.[sd]|mfc1|mov[fntz]?.[ds]|" +
                "msub.[sd]|mth?c1|mul.[ds]|neg.[ds]|nmadd.[ds]|nmsub.[ds]|" +
                "p[lu][lu].ps|recip.fmt|r?sqrt.[ds]|sdx?c1|sub.[ds]|suxc1|" +
                "swx?c1|" +
                // system control instructions
                "break|cache|d?eret|[de]i|ehb|mfc0|mtc0|pause|prefx?|rdhwr|" +
                "rdpgpr|sdbbp|ssnop|synci?|syscall|teqi?|tgei?u?|tlb(p|r|w[ir])|" +
                "tlti?u?|tnei?|wait|wrpgpr" +
                ")",
              end: "\\s"
            },
            hljs.COMMENT("[;#]", "$"),
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: "string",
              begin: "'",
              end: "[^\\\\]'",
              relevance: 0
            },
            {
              className: "title",
              begin: "\\|",
              end: "\\|",
              illegal: "\\n",
              relevance: 0
            },
            {
              className: "number",
              variants: [
                { begin: "0x[0-9a-f]+" }, //hex
                { begin: "\\b-?\\d+" } //bare number
              ],
              relevance: 0
            },
            {
              className: "symbol",
              variants: [
                { begin: "^\\s*[a-z_\\.\\$][a-z0-9_\\.\\$]+:" }, //GNU MIPS syntax
                { begin: "^\\s*[0-9]+:" }, // numbered local labels
                { begin: "[0-9]+[bf]" } // number local label reference (backwards, forwards)
              ],
              relevance: 0
            }
          ],
          illegal: "/"
        };
      };

      /***/
    },
    /* 136 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords:
            "environ vocabularies notations constructors definitions " +
            "registrations theorems schemes requirements begin end definition " +
            "registration cluster existence pred func defpred deffunc theorem " +
            "proof let take assume then thus hence ex for st holds consider " +
            "reconsider such that and in provided of as from be being by means " +
            "equals implies iff redefine define now not or attr is mode " +
            "suppose per cases set thesis contradiction scheme reserve struct " +
            "correctness compatibility coherence symmetry assymetry " +
            "reflexivity irreflexivity connectedness uniqueness commutativity " +
            "idempotence involutiveness projectivity",
          contains: [hljs.COMMENT("::", "$")]
        };
      };

      /***/
    },
    /* 137 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var PERL_KEYWORDS =
          "getpwent getservent quotemeta msgrcv scalar kill dbmclose undef lc " +
          "ma syswrite tr send umask sysopen shmwrite vec qx utime local oct semctl localtime " +
          "readpipe do return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir qq" +
          "fileno qw endprotoent wait sethostent bless s|0 opendir continue each sleep endgrent " +
          "shutdown dump chomp connect getsockname die socketpair close flock exists index shmget" +
          "sub for endpwent redo lstat msgctl setpgrp abs exit select print ref gethostbyaddr " +
          "unshift fcntl syscall goto getnetbyaddr join gmtime symlink semget splice x|0 " +
          "getpeername recv log setsockopt cos last reverse gethostbyname getgrnam study formline " +
          "endhostent times chop length gethostent getnetent pack getprotoent getservbyname rand " +
          "mkdir pos chmod y|0 substr endnetent printf next open msgsnd readdir use unlink " +
          "getsockopt getpriority rindex wantarray hex system getservbyport endservent int chr " +
          "untie rmdir prototype tell listen fork shmread ucfirst setprotoent else sysseek link " +
          "getgrgid shmctl waitpid unpack getnetbyname reset chdir grep split require caller " +
          "lcfirst until warn while values shift telldir getpwuid my getprotobynumber delete and " +
          "sort uc defined srand accept package seekdir getprotobyname semop our rename seek if q|0 " +
          "chroot sysread setpwent no crypt getc chown sqrt write setnetent setpriority foreach " +
          "tie sin msgget map stat getlogin unless elsif truncate exec keys glob tied closedir" +
          "ioctl socket readlink eval xor readline binmode setservent eof ord bind alarm pipe " +
          "atan2 getgrent exp time push setgrent gt lt or ne m|0 break given say state when";
        var SUBST = {
          className: "subst",
          begin: "[$@]\\{",
          end: "\\}",
          keywords: PERL_KEYWORDS
        };
        var METHOD = {
          begin: "->{",
          end: "}"
          // contains defined later
        };
        var VAR = {
          variants: [
            { begin: /\$\d/ },
            { begin: /[\$%@](\^\w\b|#\w+(::\w+)*|{\w+}|\w+(::\w*)*)/ },
            { begin: /[\$%@][^\s\w{]/, relevance: 0 }
          ]
        };
        var STRING_CONTAINS = [hljs.BACKSLASH_ESCAPE, SUBST, VAR];
        var PERL_DEFAULT_CONTAINS = [
          VAR,
          hljs.HASH_COMMENT_MODE,
          hljs.COMMENT("^\\=\\w", "\\=cut", {
            endsWithParent: true
          }),
          METHOD,
          {
            className: "string",
            contains: STRING_CONTAINS,
            variants: [
              {
                begin: "q[qwxr]?\\s*\\(",
                end: "\\)",
                relevance: 5
              },
              {
                begin: "q[qwxr]?\\s*\\[",
                end: "\\]",
                relevance: 5
              },
              {
                begin: "q[qwxr]?\\s*\\{",
                end: "\\}",
                relevance: 5
              },
              {
                begin: "q[qwxr]?\\s*\\|",
                end: "\\|",
                relevance: 5
              },
              {
                begin: "q[qwxr]?\\s*\\<",
                end: "\\>",
                relevance: 5
              },
              {
                begin: "qw\\s+q",
                end: "q",
                relevance: 5
              },
              {
                begin: "'",
                end: "'",
                contains: [hljs.BACKSLASH_ESCAPE]
              },
              {
                begin: '"',
                end: '"'
              },
              {
                begin: "`",
                end: "`",
                contains: [hljs.BACKSLASH_ESCAPE]
              },
              {
                begin: "{\\w+}",
                contains: [],
                relevance: 0
              },
              {
                begin: "-?\\w+\\s*\\=\\>",
                contains: [],
                relevance: 0
              }
            ]
          },
          {
            className: "number",
            begin:
              "(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",
            relevance: 0
          },
          {
            // regexp container
            begin:
              "(\\/\\/|" +
              hljs.RE_STARTERS_RE +
              "|\\b(split|return|print|reverse|grep)\\b)\\s*",
            keywords: "split return print reverse grep",
            relevance: 0,
            contains: [
              hljs.HASH_COMMENT_MODE,
              {
                className: "regexp",
                begin: "(s|tr|y)/(\\\\.|[^/])*/(\\\\.|[^/])*/[a-z]*",
                relevance: 10
              },
              {
                className: "regexp",
                begin: "(m|qr)?/",
                end: "/[a-z]*",
                contains: [hljs.BACKSLASH_ESCAPE],
                relevance: 0 // allows empty "//" which is a common comment delimiter in other languages
              }
            ]
          },
          {
            className: "function",
            beginKeywords: "sub",
            end: "(\\s*\\(.*?\\))?[;{]",
            excludeEnd: true,
            relevance: 5,
            contains: [hljs.TITLE_MODE]
          },
          {
            begin: "-\\w\\b",
            relevance: 0
          },
          {
            begin: "^__DATA__$",
            end: "^__END__$",
            subLanguage: "mojolicious",
            contains: [
              {
                begin: "^@@.*",
                end: "$",
                className: "comment"
              }
            ]
          }
        ];
        SUBST.contains = PERL_DEFAULT_CONTAINS;
        METHOD.contains = PERL_DEFAULT_CONTAINS;

        return {
          aliases: ["pl", "pm"],
          lexemes: /[\w\.]+/,
          keywords: PERL_KEYWORDS,
          contains: PERL_DEFAULT_CONTAINS
        };
      };

      /***/
    },
    /* 138 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          subLanguage: "xml",
          contains: [
            {
              className: "meta",
              begin: "^__(END|DATA)__$"
            },
            // mojolicious line
            {
              begin: "^\\s*%{1,2}={0,2}",
              end: "$",
              subLanguage: "perl"
            },
            // mojolicious block
            {
              begin: "<%{1,2}={0,2}",
              end: "={0,1}%>",
              subLanguage: "perl",
              excludeBegin: true,
              excludeEnd: true
            }
          ]
        };
      };

      /***/
    },
    /* 139 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var NUMBER = {
          className: "number",
          relevance: 0,
          variants: [
            {
              begin: "[$][a-fA-F0-9]+"
            },
            hljs.NUMBER_MODE
          ]
        };

        return {
          case_insensitive: true,
          keywords: {
            keyword:
              "public private property continue exit extern new try catch " +
              "eachin not abstract final select case default const local global field " +
              "end if then else elseif endif while wend repeat until forever for " +
              "to step next return module inline throw import",

            built_in:
              "DebugLog DebugStop Error Print ACos ACosr ASin ASinr ATan ATan2 ATan2r ATanr Abs Abs Ceil " +
              "Clamp Clamp Cos Cosr Exp Floor Log Max Max Min Min Pow Sgn Sgn Sin Sinr Sqrt Tan Tanr Seed PI HALFPI TWOPI",

            literal: "true false null and or shl shr mod"
          },
          illegal: /\/\*/,
          contains: [
            hljs.COMMENT("#rem", "#end"),
            hljs.COMMENT("'", "$", {
              relevance: 0
            }),
            {
              className: "function",
              beginKeywords: "function method",
              end: "[(=:]|$",
              illegal: /\n/,
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            {
              className: "class",
              beginKeywords: "class interface",
              end: "$",
              contains: [
                {
                  beginKeywords: "extends implements"
                },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            },
            {
              className: "built_in",
              begin: "\\b(self|super)\\b"
            },
            {
              className: "meta",
              begin: "\\s*#",
              end: "$",
              keywords: { "meta-keyword": "if else elseif endif end then" }
            },
            {
              className: "meta",
              begin: "^\\s*strict\\b"
            },
            {
              beginKeywords: "alias",
              end: "=",
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            hljs.QUOTE_STRING_MODE,
            NUMBER
          ]
        };
      };

      /***/
    },
    /* 140 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            // Moonscript keywords
            "if then not for in while do return else elseif break continue switch and or " +
            "unless when class extends super local import export from using",
          literal: "true false nil",
          built_in:
            "_G _VERSION assert collectgarbage dofile error getfenv getmetatable ipairs load " +
            "loadfile loadstring module next pairs pcall print rawequal rawget rawset require " +
            "select setfenv setmetatable tonumber tostring type unpack xpcall coroutine debug " +
            "io math os package string table"
        };
        var JS_IDENT_RE = "[A-Za-z$_][0-9A-Za-z$_]*";
        var SUBST = {
          className: "subst",
          begin: /#\{/,
          end: /}/,
          keywords: KEYWORDS
        };
        var EXPRESSIONS = [
          hljs.inherit(hljs.C_NUMBER_MODE, {
            starts: { end: "(\\s*/)?", relevance: 0 }
          }), // a number tries to eat the following slash to prevent treating it as a regexp
          {
            className: "string",
            variants: [
              {
                begin: /'/,
                end: /'/,
                contains: [hljs.BACKSLASH_ESCAPE]
              },
              {
                begin: /"/,
                end: /"/,
                contains: [hljs.BACKSLASH_ESCAPE, SUBST]
              }
            ]
          },
          {
            className: "built_in",
            begin: "@__" + hljs.IDENT_RE
          },
          {
            begin: "@" + hljs.IDENT_RE // relevance booster on par with CoffeeScript
          },
          {
            begin: hljs.IDENT_RE + "\\\\" + hljs.IDENT_RE // inst\method
          }
        ];
        SUBST.contains = EXPRESSIONS;

        var TITLE = hljs.inherit(hljs.TITLE_MODE, { begin: JS_IDENT_RE });
        var PARAMS_RE = "(\\(.*\\))?\\s*\\B[-=]>";
        var PARAMS = {
          className: "params",
          begin: "\\([^\\(]",
          returnBegin: true,
          /* We need another contained nameless mode to not have every nested
	    pair of parens to be called "params" */
          contains: [
            {
              begin: /\(/,
              end: /\)/,
              keywords: KEYWORDS,
              contains: ["self"].concat(EXPRESSIONS)
            }
          ]
        };

        return {
          aliases: ["moon"],
          keywords: KEYWORDS,
          illegal: /\/\*/,
          contains: EXPRESSIONS.concat([
            hljs.COMMENT("--", "$"),
            {
              className: "function", // function: -> =>
              begin: "^\\s*" + JS_IDENT_RE + "\\s*=\\s*" + PARAMS_RE,
              end: "[-=]>",
              returnBegin: true,
              contains: [TITLE, PARAMS]
            },
            {
              begin: /[\(,:=]\s*/, // anonymous function start
              relevance: 0,
              contains: [
                {
                  className: "function",
                  begin: PARAMS_RE,
                  end: "[-=]>",
                  returnBegin: true,
                  contains: [PARAMS]
                }
              ]
            },
            {
              className: "class",
              beginKeywords: "class",
              end: "$",
              illegal: /[:="\[\]]/,
              contains: [
                {
                  beginKeywords: "extends",
                  endsWithParent: true,
                  illegal: /[:="\[\]]/,
                  contains: [TITLE]
                },
                TITLE
              ]
            },
            {
              className: "name", // table
              begin: JS_IDENT_RE + ":",
              end: ":",
              returnBegin: true,
              returnEnd: true,
              relevance: 0
            }
          ])
        };
      };

      /***/
    },
    /* 141 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          case_insensitive: true,
          contains: [
            {
              beginKeywords:
                "build create index delete drop explain infer|10 insert merge prepare select update upsert|10",
              end: /;/,
              endsWithParent: true,
              keywords: {
                // Taken from http://developer.couchbase.com/documentation/server/current/n1ql/n1ql-language-reference/reservedwords.html
                keyword:
                  "all alter analyze and any array as asc begin between binary boolean break bucket build by call " +
                  "case cast cluster collate collection commit connect continue correlate cover create database " +
                  "dataset datastore declare decrement delete derived desc describe distinct do drop each element " +
                  "else end every except exclude execute exists explain fetch first flatten for force from " +
                  "function grant group gsi having if ignore ilike in include increment index infer inline inner " +
                  "insert intersect into is join key keys keyspace known last left let letting like limit lsm map " +
                  "mapping matched materialized merge minus namespace nest not number object offset on " +
                  "option or order outer over parse partition password path pool prepare primary private privilege " +
                  "procedure public raw realm reduce rename return returning revoke right role rollback satisfies " +
                  "schema select self semi set show some start statistics string system then to transaction trigger " +
                  "truncate under union unique unknown unnest unset update upsert use user using validate value " +
                  "valued values via view when where while with within work xor",
                // Taken from http://developer.couchbase.com/documentation/server/4.5/n1ql/n1ql-language-reference/literals.html
                literal: "true false null missing|5",
                // Taken from http://developer.couchbase.com/documentation/server/4.5/n1ql/n1ql-language-reference/functions.html
                built_in:
                  "array_agg array_append array_concat array_contains array_count array_distinct array_ifnull array_length " +
                  "array_max array_min array_position array_prepend array_put array_range array_remove array_repeat array_replace " +
                  "array_reverse array_sort array_sum avg count max min sum greatest least ifmissing ifmissingornull ifnull " +
                  "missingif nullif ifinf ifnan ifnanorinf naninf neginfif posinfif clock_millis clock_str date_add_millis " +
                  "date_add_str date_diff_millis date_diff_str date_part_millis date_part_str date_trunc_millis date_trunc_str " +
                  "duration_to_str millis str_to_millis millis_to_str millis_to_utc millis_to_zone_name now_millis now_str " +
                  "str_to_duration str_to_utc str_to_zone_name decode_json encode_json encoded_size poly_length base64 base64_encode " +
                  "base64_decode meta uuid abs acos asin atan atan2 ceil cos degrees e exp ln log floor pi power radians random " +
                  "round sign sin sqrt tan trunc object_length object_names object_pairs object_inner_pairs object_values " +
                  "object_inner_values object_add object_put object_remove object_unwrap regexp_contains regexp_like regexp_position " +
                  "regexp_replace contains initcap length lower ltrim position repeat replace rtrim split substr title trim upper " +
                  "isarray isatom isboolean isnumber isobject isstring type toarray toatom toboolean tonumber toobject tostring"
              },
              contains: [
                {
                  className: "string",
                  begin: "'",
                  end: "'",
                  contains: [hljs.BACKSLASH_ESCAPE],
                  relevance: 0
                },
                {
                  className: "string",
                  begin: '"',
                  end: '"',
                  contains: [hljs.BACKSLASH_ESCAPE],
                  relevance: 0
                },
                {
                  className: "symbol",
                  begin: "`",
                  end: "`",
                  contains: [hljs.BACKSLASH_ESCAPE],
                  relevance: 2
                },
                hljs.C_NUMBER_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },
            hljs.C_BLOCK_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 142 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var VAR = {
          className: "variable",
          variants: [
            { begin: /\$\d+/ },
            { begin: /\$\{/, end: /}/ },
            { begin: "[\\$\\@]" + hljs.UNDERSCORE_IDENT_RE }
          ]
        };
        var DEFAULT = {
          endsWithParent: true,
          lexemes: "[a-z/_]+",
          keywords: {
            literal:
              "on off yes no true false none blocked debug info notice warn error crit " +
              "select break last permanent redirect kqueue rtsig epoll poll /dev/poll"
          },
          relevance: 0,
          illegal: "=>",
          contains: [
            hljs.HASH_COMMENT_MODE,
            {
              className: "string",
              contains: [hljs.BACKSLASH_ESCAPE, VAR],
              variants: [{ begin: /"/, end: /"/ }, { begin: /'/, end: /'/ }]
            },
            // this swallows entire URLs to avoid detecting numbers within
            {
              begin: "([a-z]+):/",
              end: "\\s",
              endsWithParent: true,
              excludeEnd: true,
              contains: [VAR]
            },
            {
              className: "regexp",
              contains: [hljs.BACKSLASH_ESCAPE, VAR],
              variants: [
                { begin: "\\s\\^", end: "\\s|{|;", returnEnd: true },
                // regexp locations (~, ~*)
                { begin: "~\\*?\\s+", end: "\\s|{|;", returnEnd: true },
                // *.example.com
                { begin: "\\*(\\.[a-z\\-]+)+" },
                // sub.example.*
                { begin: "([a-z\\-]+\\.)+\\*" }
              ]
            },
            // IP
            {
              className: "number",
              begin:
                "\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b"
            },
            // units
            {
              className: "number",
              begin: "\\b\\d+[kKmMgGdshdwy]*\\b",
              relevance: 0
            },
            VAR
          ]
        };

        return {
          aliases: ["nginxconf"],
          contains: [
            hljs.HASH_COMMENT_MODE,
            {
              begin: hljs.UNDERSCORE_IDENT_RE + "\\s+{",
              returnBegin: true,
              end: "{",
              contains: [
                {
                  className: "section",
                  begin: hljs.UNDERSCORE_IDENT_RE
                }
              ],
              relevance: 0
            },
            {
              begin: hljs.UNDERSCORE_IDENT_RE + "\\s",
              end: ";|{",
              returnBegin: true,
              contains: [
                {
                  className: "attribute",
                  begin: hljs.UNDERSCORE_IDENT_RE,
                  starts: DEFAULT
                }
              ],
              relevance: 0
            }
          ],
          illegal: "[^\\s\\}]"
        };
      };

      /***/
    },
    /* 143 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["nim"],
          keywords: {
            keyword:
              "addr and as asm bind block break case cast const continue converter " +
              "discard distinct div do elif else end enum except export finally " +
              "for from generic if import in include interface is isnot iterator " +
              "let macro method mixin mod nil not notin object of or out proc ptr " +
              "raise ref return shl shr static template try tuple type using var " +
              "when while with without xor yield",
            literal: "shared guarded stdin stdout stderr result true false",
            built_in:
              "int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 float " +
              "float32 float64 bool char string cstring pointer expr stmt void " +
              "auto any range array openarray varargs seq set clong culong cchar " +
              "cschar cshort cint csize clonglong cfloat cdouble clongdouble " +
              "cuchar cushort cuint culonglong cstringarray semistatic"
          },
          contains: [
            {
              className: "meta", // Actually pragma
              begin: /{\./,
              end: /\.}/,
              relevance: 10
            },
            {
              className: "string",
              begin: /[a-zA-Z]\w*"/,
              end: /"/,
              contains: [{ begin: /""/ }]
            },
            {
              className: "string",
              begin: /([a-zA-Z]\w*)?"""/,
              end: /"""/
            },
            hljs.QUOTE_STRING_MODE,
            {
              className: "type",
              begin: /\b[A-Z]\w+\b/,
              relevance: 0
            },
            {
              className: "number",
              relevance: 0,
              variants: [
                {
                  begin: /\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/
                },
                { begin: /\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/ },
                { begin: /\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/ },
                { begin: /\b(\d[_\d]*)('?[iIuUfF](8|16|32|64))?/ }
              ]
            },
            hljs.HASH_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 144 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var NIX_KEYWORDS = {
          keyword: "rec with let in inherit assert if else then",
          literal: "true false or and null",
          built_in:
            "import abort baseNameOf dirOf isNull builtins map removeAttrs throw " +
            "toString derivation"
        };
        var ANTIQUOTE = {
          className: "subst",
          begin: /\$\{/,
          end: /}/,
          keywords: NIX_KEYWORDS
        };
        var ATTRS = {
          begin: /[a-zA-Z0-9-_]+(\s*=)/,
          returnBegin: true,
          relevance: 0,
          contains: [
            {
              className: "attr",
              begin: /\S+/
            }
          ]
        };
        var STRING = {
          className: "string",
          contains: [ANTIQUOTE],
          variants: [{ begin: "''", end: "''" }, { begin: '"', end: '"' }]
        };
        var EXPRESSIONS = [
          hljs.NUMBER_MODE,
          hljs.HASH_COMMENT_MODE,
          hljs.C_BLOCK_COMMENT_MODE,
          STRING,
          ATTRS
        ];
        ANTIQUOTE.contains = EXPRESSIONS;
        return {
          aliases: ["nixos"],
          keywords: NIX_KEYWORDS,
          contains: EXPRESSIONS
        };
      };

      /***/
    },
    /* 145 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var CONSTANTS = {
          className: "variable",
          begin: /\$(ADMINTOOLS|APPDATA|CDBURN_AREA|CMDLINE|COMMONFILES32|COMMONFILES64|COMMONFILES|COOKIES|DESKTOP|DOCUMENTS|EXEDIR|EXEFILE|EXEPATH|FAVORITES|FONTS|HISTORY|HWNDPARENT|INSTDIR|INTERNET_CACHE|LANGUAGE|LOCALAPPDATA|MUSIC|NETHOOD|OUTDIR|PICTURES|PLUGINSDIR|PRINTHOOD|PROFILE|PROGRAMFILES32|PROGRAMFILES64|PROGRAMFILES|QUICKLAUNCH|RECENT|RESOURCES_LOCALIZED|RESOURCES|SENDTO|SMPROGRAMS|SMSTARTUP|STARTMENU|SYSDIR|TEMP|TEMPLATES|VIDEOS|WINDIR)/
        };

        var DEFINES = {
          // ${defines}
          className: "variable",
          begin: /\$+{[\w\.:-]+}/
        };

        var VARIABLES = {
          // $variables
          className: "variable",
          begin: /\$+\w+/,
          illegal: /\(\){}/
        };

        var LANGUAGES = {
          // $(language_strings)
          className: "variable",
          begin: /\$+\([\w\^\.:-]+\)/
        };

        var PARAMETERS = {
          // command parameters
          className: "params",
          begin:
            "(ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HKCR|HKCU|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM|HKPD|HKU|IDABORT|IDCANCEL|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)"
        };

        var COMPILER = {
          // !compiler_flags
          className: "keyword",
          begin: /\!(addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversionsystem|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|searchparse|searchreplace|tempfile|undef|verbose|warning)/
        };

        var METACHARS = {
          // $\n, $\r, $\t, $$
          className: "subst",
          begin: /\$(\\[nrt]|\$)/
        };

        var PLUGINS = {
          // plug::ins
          className: "class",
          begin: /\w+\:\:\w+/
        };

        var STRING = {
          className: "string",
          variants: [
            {
              begin: '"',
              end: '"'
            },
            {
              begin: "'",
              end: "'"
            },
            {
              begin: "`",
              end: "`"
            }
          ],
          illegal: /\n/,
          contains: [METACHARS, CONSTANTS, DEFINES, VARIABLES, LANGUAGES]
        };

        return {
          case_insensitive: false,
          keywords: {
            keyword:
              "Abort AddBrandingImage AddSize AllowRootDirInstall AllowSkipFiles AutoCloseWindow BGFont BGGradient BrandingText BringToFront Call CallInstDLL Caption ChangeUI CheckBitmap ClearErrors CompletedText ComponentText CopyFiles CRCCheck CreateDirectory CreateFont CreateShortCut Delete DeleteINISec DeleteINIStr DeleteRegKey DeleteRegValue DetailPrint DetailsButtonText DirText DirVar DirVerify EnableWindow EnumRegKey EnumRegValue Exch Exec ExecShell ExecWait ExpandEnvStrings File FileBufSize FileClose FileErrorText FileOpen FileRead FileReadByte FileReadUTF16LE FileReadWord FileSeek FileWrite FileWriteByte FileWriteUTF16LE FileWriteWord FindClose FindFirst FindNext FindWindow FlushINI FunctionEnd GetCurInstType GetCurrentAddress GetDlgItem GetDLLVersion GetDLLVersionLocal GetErrorLevel GetFileTime GetFileTimeLocal GetFullPathName GetFunctionAddress GetInstDirError GetLabelAddress GetTempFileName Goto HideWindow Icon IfAbort IfErrors IfFileExists IfRebootFlag IfSilent InitPluginsDir InstallButtonText InstallColors InstallDir InstallDirRegKey InstProgressFlags InstType InstTypeGetText InstTypeSetText IntCmp IntCmpU IntFmt IntOp IsWindow LangString LicenseBkColor LicenseData LicenseForceSelection LicenseLangString LicenseText LoadLanguageFile LockWindow LogSet LogText ManifestDPIAware ManifestSupportedOS MessageBox MiscButtonText Name Nop OutFile Page PageCallbacks PageExEnd Pop Push Quit ReadEnvStr ReadINIStr ReadRegDWORD ReadRegStr Reboot RegDLL Rename RequestExecutionLevel ReserveFile Return RMDir SearchPath SectionEnd SectionGetFlags SectionGetInstTypes SectionGetSize SectionGetText SectionGroupEnd SectionIn SectionSetFlags SectionSetInstTypes SectionSetSize SectionSetText SendMessage SetAutoClose SetBrandingImage SetCompress SetCompressor SetCompressorDictSize SetCtlColors SetCurInstType SetDatablockOptimize SetDateSave SetDetailsPrint SetDetailsView SetErrorLevel SetErrors SetFileAttributes SetFont SetOutPath SetOverwrite SetRebootFlag SetRegView SetShellVarContext SetSilent ShowInstDetails ShowUninstDetails ShowWindow SilentInstall SilentUnInstall Sleep SpaceTexts StrCmp StrCmpS StrCpy StrLen SubCaption Unicode UninstallButtonText UninstallCaption UninstallIcon UninstallSubCaption UninstallText UninstPage UnRegDLL Var VIAddVersionKey VIFileVersion VIProductVersion WindowIcon WriteINIStr WriteRegBin WriteRegDWORD WriteRegExpandStr WriteRegStr WriteUninstaller XPStyle",
            literal:
              "admin all auto both bottom bzip2 colored components current custom directory false force hide highest ifdiff ifnewer instfiles lastused leave left license listonly lzma nevershow none normal notset off on open print right show silent silentlog smooth textonly top true try un.components un.custom un.directory un.instfiles un.license uninstConfirm user Win10 Win7 Win8 WinVista zlib"
          },
          contains: [
            hljs.HASH_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.COMMENT(";", "$", {
              relevance: 0
            }),
            {
              className: "function",
              beginKeywords: "Function PageEx Section SectionGroup",
              end: "$"
            },
            STRING,
            COMPILER,
            DEFINES,
            VARIABLES,
            LANGUAGES,
            PARAMETERS,
            PLUGINS,
            hljs.NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 146 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var API_CLASS = {
          className: "built_in",
          begin:
            "\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\w+"
        };
        var OBJC_KEYWORDS = {
          keyword:
            "int float while char export sizeof typedef const struct for union " +
            "unsigned long volatile static bool mutable if do return goto void " +
            "enum else break extern asm case short default double register explicit " +
            "signed typename this switch continue wchar_t inline readonly assign " +
            "readwrite self @synchronized id typeof " +
            "nonatomic super unichar IBOutlet IBAction strong weak copy " +
            "in out inout bycopy byref oneway __strong __weak __block __autoreleasing " +
            "@private @protected @public @try @property @end @throw @catch @finally " +
            "@autoreleasepool @synthesize @dynamic @selector @optional @required " +
            "@encode @package @import @defs @compatibility_alias " +
            "__bridge __bridge_transfer __bridge_retained __bridge_retain " +
            "__covariant __contravariant __kindof " +
            "_Nonnull _Nullable _Null_unspecified " +
            "__FUNCTION__ __PRETTY_FUNCTION__ __attribute__ " +
            "getter setter retain unsafe_unretained " +
            "nonnull nullable null_unspecified null_resettable class instancetype " +
            "NS_DESIGNATED_INITIALIZER NS_UNAVAILABLE NS_REQUIRES_SUPER " +
            "NS_RETURNS_INNER_POINTER NS_INLINE NS_AVAILABLE NS_DEPRECATED " +
            "NS_ENUM NS_OPTIONS NS_SWIFT_UNAVAILABLE " +
            "NS_ASSUME_NONNULL_BEGIN NS_ASSUME_NONNULL_END " +
            "NS_REFINED_FOR_SWIFT NS_SWIFT_NAME NS_SWIFT_NOTHROW " +
            "NS_DURING NS_HANDLER NS_ENDHANDLER NS_VALUERETURN NS_VOIDRETURN",
          literal: "false true FALSE TRUE nil YES NO NULL",
          built_in:
            "BOOL dispatch_once_t dispatch_queue_t dispatch_sync dispatch_async dispatch_once"
        };
        var LEXEMES = /[a-zA-Z@][a-zA-Z0-9_]*/;
        var CLASS_KEYWORDS = "@interface @class @protocol @implementation";
        return {
          aliases: ["mm", "objc", "obj-c"],
          keywords: OBJC_KEYWORDS,
          lexemes: LEXEMES,
          illegal: "</",
          contains: [
            API_CLASS,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.C_NUMBER_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: "string",
              variants: [
                {
                  begin: '@"',
                  end: '"',
                  illegal: "\\n",
                  contains: [hljs.BACKSLASH_ESCAPE]
                },
                {
                  begin: "'",
                  end: "[^\\\\]'",
                  illegal: "[^\\\\][^']"
                }
              ]
            },
            {
              className: "meta",
              begin: "#",
              end: "$",
              contains: [
                {
                  className: "meta-string",
                  variants: [{ begin: '"', end: '"' }, { begin: "<", end: ">" }]
                }
              ]
            },
            {
              className: "class",
              begin: "(" + CLASS_KEYWORDS.split(" ").join("|") + ")\\b",
              end: "({|$)",
              excludeEnd: true,
              keywords: CLASS_KEYWORDS,
              lexemes: LEXEMES,
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            {
              begin: "\\." + hljs.UNDERSCORE_IDENT_RE,
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 147 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        /* missing support for heredoc-like string (OCaml 4.0.2+) */
        return {
          aliases: ["ml"],
          keywords: {
            keyword:
              "and as assert asr begin class constraint do done downto else end " +
              "exception external for fun function functor if in include " +
              "inherit! inherit initializer land lazy let lor lsl lsr lxor match method!|10 method " +
              "mod module mutable new object of open! open or private rec sig struct " +
              "then to try type val! val virtual when while with " +
              /* camlp4 */
              "parser value",
            built_in:
              /* built-in types */
              "array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 string unit " +
              /* (some) types in Pervasives */
              "in_channel out_channel ref",
            literal: "true false"
          },
          illegal: /\/\/|>>/,
          lexemes: "[a-z_]\\w*!?",
          contains: [
            {
              className: "literal",
              begin: "\\[(\\|\\|)?\\]|\\(\\)",
              relevance: 0
            },
            hljs.COMMENT("\\(\\*", "\\*\\)", {
              contains: ["self"]
            }),
            {
              /* type variable */
              className: "symbol",
              begin: "'[A-Za-z_](?!')[\\w']*"
              /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */
            },
            {
              /* polymorphic variant */
              className: "type",
              begin: "`[A-Z][\\w']*"
            },
            {
              /* module or constructor */
              className: "type",
              begin: "\\b[A-Z][\\w']*",
              relevance: 0
            },
            {
              /* don't color identifiers, but safely catch all identifiers with '*/
              begin: "[a-z_]\\w*'[\\w']*",
              relevance: 0
            },
            hljs.inherit(hljs.APOS_STRING_MODE, {
              className: "string",
              relevance: 0
            }),
            hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),
            {
              className: "number",
              begin:
                "\\b(0[xX][a-fA-F0-9_]+[Lln]?|" +
                "0[oO][0-7_]+[Lln]?|" +
                "0[bB][01_]+[Lln]?|" +
                "[0-9][0-9_]*([Lln]|(\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)",
              relevance: 0
            },
            {
              begin: /[-=]>/ // relevance booster
            }
          ]
        };
      };

      /***/
    },
    /* 148 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var SPECIAL_VARS = {
            className: "keyword",
            begin: "\\$(f[asn]|t|vp[rtd]|children)"
          },
          LITERALS = {
            className: "literal",
            begin: "false|true|PI|undef"
          },
          NUMBERS = {
            className: "number",
            begin: "\\b\\d+(\\.\\d+)?(e-?\\d+)?", //adds 1e5, 1e-10
            relevance: 0
          },
          STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),
          PREPRO = {
            className: "meta",
            keywords: { "meta-keyword": "include use" },
            begin: "include|use <",
            end: ">"
          },
          PARAMS = {
            className: "params",
            begin: "\\(",
            end: "\\)",
            contains: ["self", NUMBERS, STRING, SPECIAL_VARS, LITERALS]
          },
          MODIFIERS = {
            begin: "[*!#%]",
            relevance: 0
          },
          FUNCTIONS = {
            className: "function",
            beginKeywords: "module function",
            end: "\\=|\\{",
            contains: [PARAMS, hljs.UNDERSCORE_TITLE_MODE]
          };

        return {
          aliases: ["scad"],
          keywords: {
            keyword:
              "function module include use for intersection_for if else \\%",
            literal: "false true PI undef",
            built_in:
              "circle square polygon text sphere cube cylinder polyhedron translate rotate scale resize mirror multmatrix color offset hull minkowski union difference intersection abs sign sin cos tan acos asin atan atan2 floor round ceil ln log pow sqrt exp rands min max concat lookup str chr search version version_num norm cross parent_module echo import import_dxf dxf_linear_extrude linear_extrude rotate_extrude surface projection render children dxf_cross dxf_dim let assign"
          },
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            NUMBERS,
            PREPRO,
            STRING,
            SPECIAL_VARS,
            MODIFIERS,
            FUNCTIONS
          ]
        };
      };

      /***/
    },
    /* 149 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var OXYGENE_KEYWORDS =
          "abstract add and array as asc aspect assembly async begin break block by case class concat const copy constructor continue " +
          "create default delegate desc distinct div do downto dynamic each else empty end ensure enum equals event except exit extension external false " +
          "final finalize finalizer finally flags for forward from function future global group has if implementation implements implies in index inherited " +
          "inline interface into invariants is iterator join locked locking loop matching method mod module namespace nested new nil not notify nullable of " +
          "old on operator or order out override parallel params partial pinned private procedure property protected public queryable raise read readonly " +
          "record reintroduce remove repeat require result reverse sealed select self sequence set shl shr skip static step soft take then to true try tuple " +
          "type union unit unsafe until uses using var virtual raises volatile where while with write xor yield await mapped deprecated stdcall cdecl pascal " +
          "register safecall overload library platform reference packed strict published autoreleasepool selector strong weak unretained";
        var CURLY_COMMENT = hljs.COMMENT("{", "}", {
          relevance: 0
        });
        var PAREN_COMMENT = hljs.COMMENT("\\(\\*", "\\*\\)", {
          relevance: 10
        });
        var STRING = {
          className: "string",
          begin: "'",
          end: "'",
          contains: [{ begin: "''" }]
        };
        var CHAR_STRING = {
          className: "string",
          begin: "(#\\d+)+"
        };
        var FUNCTION = {
          className: "function",
          beginKeywords: "function constructor destructor procedure method",
          end: "[:;]",
          keywords:
            "function constructor|10 destructor|10 procedure|10 method|10",
          contains: [
            hljs.TITLE_MODE,
            {
              className: "params",
              begin: "\\(",
              end: "\\)",
              keywords: OXYGENE_KEYWORDS,
              contains: [STRING, CHAR_STRING]
            },
            CURLY_COMMENT,
            PAREN_COMMENT
          ]
        };
        return {
          case_insensitive: true,
          lexemes: /\.?\w+/,
          keywords: OXYGENE_KEYWORDS,
          illegal: '("|\\$[G-Zg-z]|\\/\\*|</|=>|->)',
          contains: [
            CURLY_COMMENT,
            PAREN_COMMENT,
            hljs.C_LINE_COMMENT_MODE,
            STRING,
            CHAR_STRING,
            hljs.NUMBER_MODE,
            FUNCTION,
            {
              className: "class",
              begin: "=\\bclass\\b",
              end: "end;",
              keywords: OXYGENE_KEYWORDS,
              contains: [
                STRING,
                CHAR_STRING,
                CURLY_COMMENT,
                PAREN_COMMENT,
                hljs.C_LINE_COMMENT_MODE,
                FUNCTION
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 150 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var CURLY_SUBCOMMENT = hljs.COMMENT("{", "}", {
          contains: ["self"]
        });
        return {
          subLanguage: "xml",
          relevance: 0,
          contains: [
            hljs.COMMENT("^#", "$"),
            hljs.COMMENT("\\^rem{", "}", {
              relevance: 10,
              contains: [CURLY_SUBCOMMENT]
            }),
            {
              className: "meta",
              begin: "^@(?:BASE|USE|CLASS|OPTIONS)$",
              relevance: 10
            },
            {
              className: "title",
              begin: "@[\\w\\-]+\\[[\\w^;\\-]*\\](?:\\[[\\w^;\\-]*\\])?(?:.*)$"
            },
            {
              className: "variable",
              begin: "\\$\\{?[\\w\\-\\.\\:]+\\}?"
            },
            {
              className: "keyword",
              begin: "\\^[\\w\\-\\.\\:]+"
            },
            {
              className: "number",
              begin: "\\^#[0-9a-fA-F]+"
            },
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 151 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var MACRO = {
          className: "variable",
          begin: /\$[\w\d#@][\w\d_]*/
        };
        var TABLE = {
          className: "variable",
          begin: /<(?!\/)/,
          end: />/
        };
        var QUOTE_STRING = {
          className: "string",
          begin: /"/,
          end: /"/
        };

        return {
          aliases: ["pf.conf"],
          lexemes: /[a-z0-9_<>-]+/,
          keywords: {
            /* block match pass are "actions" in pf.conf(5), the rest are
	                 * lexically similar top-level commands.
	                 */
            built_in: "block match pass load anchor|5 antispoof|10 set table",
            keyword:
              "in out log quick on rdomain inet inet6 proto from port os to route" +
              "allow-opts divert-packet divert-reply divert-to flags group icmp-type" +
              "icmp6-type label once probability recieved-on rtable prio queue" +
              "tos tag tagged user keep fragment for os drop" +
              "af-to|10 binat-to|10 nat-to|10 rdr-to|10 bitmask least-stats random round-robin" +
              "source-hash static-port" +
              "dup-to reply-to route-to" +
              "parent bandwidth default min max qlimit" +
              "block-policy debug fingerprints hostid limit loginterface optimization" +
              "reassemble ruleset-optimization basic none profile skip state-defaults" +
              "state-policy timeout" +
              "const counters persist" +
              "no modulate synproxy state|5 floating if-bound no-sync pflow|10 sloppy" +
              "source-track global rule max-src-nodes max-src-states max-src-conn" +
              "max-src-conn-rate overload flush" +
              "scrub|5 max-mss min-ttl no-df|10 random-id",
            literal: "all any no-route self urpf-failed egress|5 unknown"
          },
          contains: [
            hljs.HASH_COMMENT_MODE,
            hljs.NUMBER_MODE,
            hljs.QUOTE_STRING_MODE,
            MACRO,
            TABLE
          ]
        };
      };

      /***/
    },
    /* 152 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var VARIABLE = {
          begin: "\\$+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*"
        };
        var PREPROCESSOR = {
          className: "meta",
          begin: /<\?(php)?|\?>/
        };
        var STRING = {
          className: "string",
          contains: [hljs.BACKSLASH_ESCAPE, PREPROCESSOR],
          variants: [
            {
              begin: 'b"',
              end: '"'
            },
            {
              begin: "b'",
              end: "'"
            },
            hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null }),
            hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null })
          ]
        };
        var NUMBER = {
          variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]
        };
        return {
          aliases: ["php3", "php4", "php5", "php6"],
          case_insensitive: true,
          keywords:
            "and include_once list abstract global private echo interface as static endswitch " +
            "array null if endwhile or const for endforeach self var while isset public " +
            "protected exit foreach throw elseif include __FILE__ empty require_once do xor " +
            "return parent clone use __CLASS__ __LINE__ else break print eval new " +
            "catch __METHOD__ case exception default die require __FUNCTION__ " +
            "enddeclare final try switch continue endfor endif declare unset true false " +
            "trait goto instanceof insteadof __DIR__ __NAMESPACE__ " +
            "yield finally",
          contains: [
            hljs.HASH_COMMENT_MODE,
            hljs.COMMENT("//", "$", { contains: [PREPROCESSOR] }),
            hljs.COMMENT("/\\*", "\\*/", {
              contains: [
                {
                  className: "doctag",
                  begin: "@[A-Za-z]+"
                }
              ]
            }),
            hljs.COMMENT("__halt_compiler.+?;", false, {
              endsWithParent: true,
              keywords: "__halt_compiler",
              lexemes: hljs.UNDERSCORE_IDENT_RE
            }),
            {
              className: "string",
              begin: /<<<['"]?\w+['"]?$/,
              end: /^\w+;?$/,
              contains: [
                hljs.BACKSLASH_ESCAPE,
                {
                  className: "subst",
                  variants: [{ begin: /\$\w+/ }, { begin: /\{\$/, end: /\}/ }]
                }
              ]
            },
            PREPROCESSOR,
            {
              className: "keyword",
              begin: /\$this\b/
            },
            VARIABLE,
            {
              // swallow composed identifiers to avoid parsing them as keywords
              begin: /(::|->)+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/
            },
            {
              className: "function",
              beginKeywords: "function",
              end: /[;{]/,
              excludeEnd: true,
              illegal: "\\$|\\[|%",
              contains: [
                hljs.UNDERSCORE_TITLE_MODE,
                {
                  className: "params",
                  begin: "\\(",
                  end: "\\)",
                  contains: [
                    "self",
                    VARIABLE,
                    hljs.C_BLOCK_COMMENT_MODE,
                    STRING,
                    NUMBER
                  ]
                }
              ]
            },
            {
              className: "class",
              beginKeywords: "class interface",
              end: "{",
              excludeEnd: true,
              illegal: /[:\(\$"]/,
              contains: [
                { beginKeywords: "extends implements" },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            },
            {
              beginKeywords: "namespace",
              end: ";",
              illegal: /[\.']/,
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            {
              beginKeywords: "use",
              end: ";",
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            {
              begin: "=>" // No markup, just a relevance booster
            },
            STRING,
            NUMBER
          ]
        };
      };

      /***/
    },
    /* 153 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            "actor addressof and as be break class compile_error compile_intrinsic" +
            "consume continue delegate digestof do else elseif embed end error" +
            "for fun if ifdef in interface is isnt lambda let match new not object" +
            "or primitive recover repeat return struct then trait try type until " +
            "use var where while with xor",
          meta: "iso val tag trn box ref",
          literal: "this false true"
        };

        var TRIPLE_QUOTE_STRING_MODE = {
          className: "string",
          begin: '"""',
          end: '"""',
          relevance: 10
        };

        var QUOTE_STRING_MODE = {
          className: "string",
          begin: '"',
          end: '"',
          contains: [hljs.BACKSLASH_ESCAPE]
        };

        var SINGLE_QUOTE_CHAR_MODE = {
          className: "string",
          begin: "'",
          end: "'",
          contains: [hljs.BACKSLASH_ESCAPE],
          relevance: 0
        };

        var TYPE_NAME = {
          className: "type",
          begin: "\\b_?[A-Z][\\w]*",
          relevance: 0
        };

        var PRIMED_NAME = {
          begin: hljs.IDENT_RE + "'",
          relevance: 0
        };

        var CLASS = {
          className: "class",
          beginKeywords: "class actor",
          end: "$",
          contains: [hljs.TITLE_MODE, hljs.C_LINE_COMMENT_MODE]
        };

        var FUNCTION = {
          className: "function",
          beginKeywords: "new fun",
          end: "=>",
          contains: [
            hljs.TITLE_MODE,
            {
              begin: /\(/,
              end: /\)/,
              contains: [
                TYPE_NAME,
                PRIMED_NAME,
                hljs.C_NUMBER_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },
            {
              begin: /:/,
              endsWithParent: true,
              contains: [TYPE_NAME]
            },
            hljs.C_LINE_COMMENT_MODE
          ]
        };

        return {
          keywords: KEYWORDS,
          contains: [
            CLASS,
            FUNCTION,
            TYPE_NAME,
            TRIPLE_QUOTE_STRING_MODE,
            QUOTE_STRING_MODE,
            SINGLE_QUOTE_CHAR_MODE,
            PRIMED_NAME,
            hljs.C_NUMBER_MODE,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 154 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var BACKTICK_ESCAPE = {
          begin: "`[\\s\\S]",
          relevance: 0
        };
        var VAR = {
          className: "variable",
          variants: [{ begin: /\$[\w\d][\w\d_:]*/ }]
        };
        var LITERAL = {
          className: "literal",
          begin: /\$(null|true|false)\b/
        };
        var QUOTE_STRING = {
          className: "string",
          variants: [{ begin: /"/, end: /"/ }, { begin: /@"/, end: /^"@/ }],
          contains: [
            BACKTICK_ESCAPE,
            VAR,
            {
              className: "variable",
              begin: /\$[A-z]/,
              end: /[^A-z]/
            }
          ]
        };
        var APOS_STRING = {
          className: "string",
          variants: [{ begin: /'/, end: /'/ }, { begin: /@'/, end: /^'@/ }]
        };

        var PS_HELPTAGS = {
          className: "doctag",
          variants: [
            /* no paramater help tags */

            {
              begin: /\.(synopsis|description|example|inputs|outputs|notes|link|component|role|functionality)/
            },
            /* one parameter help tags */
            {
              begin: /\.(parameter|forwardhelptargetname|forwardhelpcategory|remotehelprunspace|externalhelp)\s+\S+/
            }
          ]
        };
        var PS_COMMENT = hljs.inherit(hljs.COMMENT(null, null), {
          variants: [
            /* single-line comment */
            { begin: /#/, end: /$/ },
            /* multi-line comment */
            { begin: /<#/, end: /#>/ }
          ],
          contains: [PS_HELPTAGS]
        });

        return {
          aliases: ["ps"],
          lexemes: /-?[A-z\.\-]+/,
          case_insensitive: true,
          keywords: {
            keyword:
              "if else foreach return function do while until elseif begin for trap data dynamicparam end break throw param continue finally in switch exit filter try process catch",
            built_in:
              "Add-Computer Add-Content Add-History Add-JobTrigger Add-Member Add-PSSnapin Add-Type Checkpoint-Computer Clear-Content Clear-EventLog Clear-History Clear-Host Clear-Item Clear-ItemProperty Clear-Variable Compare-Object Complete-Transaction Connect-PSSession Connect-WSMan Convert-Path ConvertFrom-Csv ConvertFrom-Json ConvertFrom-SecureString ConvertFrom-StringData ConvertTo-Csv ConvertTo-Html ConvertTo-Json ConvertTo-SecureString ConvertTo-Xml Copy-Item Copy-ItemProperty Debug-Process Disable-ComputerRestore Disable-JobTrigger Disable-PSBreakpoint Disable-PSRemoting Disable-PSSessionConfiguration Disable-WSManCredSSP Disconnect-PSSession Disconnect-WSMan Disable-ScheduledJob Enable-ComputerRestore Enable-JobTrigger Enable-PSBreakpoint Enable-PSRemoting Enable-PSSessionConfiguration Enable-ScheduledJob Enable-WSManCredSSP Enter-PSSession Exit-PSSession Export-Alias Export-Clixml Export-Console Export-Counter Export-Csv Export-FormatData Export-ModuleMember Export-PSSession ForEach-Object Format-Custom Format-List Format-Table Format-Wide Get-Acl Get-Alias Get-AuthenticodeSignature Get-ChildItem Get-Command Get-ComputerRestorePoint Get-Content Get-ControlPanelItem Get-Counter Get-Credential Get-Culture Get-Date Get-Event Get-EventLog Get-EventSubscriber Get-ExecutionPolicy Get-FormatData Get-Host Get-HotFix Get-Help Get-History Get-IseSnippet Get-Item Get-ItemProperty Get-Job Get-JobTrigger Get-Location Get-Member Get-Module Get-PfxCertificate Get-Process Get-PSBreakpoint Get-PSCallStack Get-PSDrive Get-PSProvider Get-PSSession Get-PSSessionConfiguration Get-PSSnapin Get-Random Get-ScheduledJob Get-ScheduledJobOption Get-Service Get-TraceSource Get-Transaction Get-TypeData Get-UICulture Get-Unique Get-Variable Get-Verb Get-WinEvent Get-WmiObject Get-WSManCredSSP Get-WSManInstance Group-Object Import-Alias Import-Clixml Import-Counter Import-Csv Import-IseSnippet Import-LocalizedData Import-PSSession Import-Module Invoke-AsWorkflow Invoke-Command Invoke-Expression Invoke-History Invoke-Item Invoke-RestMethod Invoke-WebRequest Invoke-WmiMethod Invoke-WSManAction Join-Path Limit-EventLog Measure-Command Measure-Object Move-Item Move-ItemProperty New-Alias New-Event New-EventLog New-IseSnippet New-Item New-ItemProperty New-JobTrigger New-Object New-Module New-ModuleManifest New-PSDrive New-PSSession New-PSSessionConfigurationFile New-PSSessionOption New-PSTransportOption New-PSWorkflowExecutionOption New-PSWorkflowSession New-ScheduledJobOption New-Service New-TimeSpan New-Variable New-WebServiceProxy New-WinEvent New-WSManInstance New-WSManSessionOption Out-Default Out-File Out-GridView Out-Host Out-Null Out-Printer Out-String Pop-Location Push-Location Read-Host Receive-Job Register-EngineEvent Register-ObjectEvent Register-PSSessionConfiguration Register-ScheduledJob Register-WmiEvent Remove-Computer Remove-Event Remove-EventLog Remove-Item Remove-ItemProperty Remove-Job Remove-JobTrigger Remove-Module Remove-PSBreakpoint Remove-PSDrive Remove-PSSession Remove-PSSnapin Remove-TypeData Remove-Variable Remove-WmiObject Remove-WSManInstance Rename-Computer Rename-Item Rename-ItemProperty Reset-ComputerMachinePassword Resolve-Path Restart-Computer Restart-Service Restore-Computer Resume-Job Resume-Service Save-Help Select-Object Select-String Select-Xml Send-MailMessage Set-Acl Set-Alias Set-AuthenticodeSignature Set-Content Set-Date Set-ExecutionPolicy Set-Item Set-ItemProperty Set-JobTrigger Set-Location Set-PSBreakpoint Set-PSDebug Set-PSSessionConfiguration Set-ScheduledJob Set-ScheduledJobOption Set-Service Set-StrictMode Set-TraceSource Set-Variable Set-WmiInstance Set-WSManInstance Set-WSManQuickConfig Show-Command Show-ControlPanelItem Show-EventLog Sort-Object Split-Path Start-Job Start-Process Start-Service Start-Sleep Start-Transaction Start-Transcript Stop-Computer Stop-Job Stop-Process Stop-Service Stop-Transcript Suspend-Job Suspend-Service Tee-Object Test-ComputerSecureChannel Test-Connection Test-ModuleManifest Test-Path Test-PSSessionConfigurationFile Trace-Command Unblock-File Undo-Transaction Unregister-Event Unregister-PSSessionConfiguration Unregister-ScheduledJob Update-FormatData Update-Help Update-List Update-TypeData Use-Transaction Wait-Event Wait-Job Wait-Process Where-Object Write-Debug Write-Error Write-EventLog Write-Host Write-Output Write-Progress Write-Verbose Write-Warning Add-MDTPersistentDrive Disable-MDTMonitorService Enable-MDTMonitorService Get-MDTDeploymentShareStatistics Get-MDTMonitorData Get-MDTOperatingSystemCatalog Get-MDTPersistentDrive Import-MDTApplication Import-MDTDriver Import-MDTOperatingSystem Import-MDTPackage Import-MDTTaskSequence New-MDTDatabase Remove-MDTMonitorData Remove-MDTPersistentDrive Restore-MDTPersistentDrive Set-MDTMonitorData Test-MDTDeploymentShare Test-MDTMonitorData Update-MDTDatabaseSchema Update-MDTDeploymentShare Update-MDTLinkedDS Update-MDTMedia Update-MDTMedia Add-VamtProductKey Export-VamtData Find-VamtManagedMachine Get-VamtConfirmationId Get-VamtProduct Get-VamtProductKey Import-VamtData Initialize-VamtData Install-VamtConfirmationId Install-VamtProductActivation Install-VamtProductKey Update-VamtProduct",
            nomarkup:
              "-ne -eq -lt -gt -ge -le -not -like -notlike -match -notmatch -contains -notcontains -in -notin -replace"
          },
          contains: [
            BACKTICK_ESCAPE,
            hljs.NUMBER_MODE,
            QUOTE_STRING,
            APOS_STRING,
            LITERAL,
            VAR,
            PS_COMMENT
          ]
        };
      };

      /***/
    },
    /* 155 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            keyword:
              "BufferedReader PVector PFont PImage PGraphics HashMap boolean byte char color " +
              "double float int long String Array FloatDict FloatList IntDict IntList JSONArray JSONObject " +
              "Object StringDict StringList Table TableRow XML " +
              // Java keywords
              "false synchronized int abstract float private char boolean static null if const " +
              "for true while long throw strictfp finally protected import native final return void " +
              "enum else break transient new catch instanceof byte super volatile case assert short " +
              "package default double public try this switch continue throws protected public private",
            literal: "P2D P3D HALF_PI PI QUARTER_PI TAU TWO_PI",
            title: "setup draw",
            built_in:
              "displayHeight displayWidth mouseY mouseX mousePressed pmouseX pmouseY key " +
              "keyCode pixels focused frameCount frameRate height width " +
              "size createGraphics beginDraw createShape loadShape PShape arc ellipse line point " +
              "quad rect triangle bezier bezierDetail bezierPoint bezierTangent curve curveDetail curvePoint " +
              "curveTangent curveTightness shape shapeMode beginContour beginShape bezierVertex curveVertex " +
              "endContour endShape quadraticVertex vertex ellipseMode noSmooth rectMode smooth strokeCap " +
              "strokeJoin strokeWeight mouseClicked mouseDragged mouseMoved mousePressed mouseReleased " +
              "mouseWheel keyPressed keyPressedkeyReleased keyTyped print println save saveFrame day hour " +
              "millis minute month second year background clear colorMode fill noFill noStroke stroke alpha " +
              "blue brightness color green hue lerpColor red saturation modelX modelY modelZ screenX screenY " +
              "screenZ ambient emissive shininess specular add createImage beginCamera camera endCamera frustum " +
              "ortho perspective printCamera printProjection cursor frameRate noCursor exit loop noLoop popStyle " +
              "pushStyle redraw binary boolean byte char float hex int str unbinary unhex join match matchAll nf " +
              "nfc nfp nfs split splitTokens trim append arrayCopy concat expand reverse shorten sort splice subset " +
              "box sphere sphereDetail createInput createReader loadBytes loadJSONArray loadJSONObject loadStrings " +
              "loadTable loadXML open parseXML saveTable selectFolder selectInput beginRaw beginRecord createOutput " +
              "createWriter endRaw endRecord PrintWritersaveBytes saveJSONArray saveJSONObject saveStream saveStrings " +
              "saveXML selectOutput popMatrix printMatrix pushMatrix resetMatrix rotate rotateX rotateY rotateZ scale " +
              "shearX shearY translate ambientLight directionalLight lightFalloff lights lightSpecular noLights normal " +
              "pointLight spotLight image imageMode loadImage noTint requestImage tint texture textureMode textureWrap " +
              "blend copy filter get loadPixels set updatePixels blendMode loadShader PShaderresetShader shader createFont " +
              "loadFont text textFont textAlign textLeading textMode textSize textWidth textAscent textDescent abs ceil " +
              "constrain dist exp floor lerp log mag map max min norm pow round sq sqrt acos asin atan atan2 cos degrees " +
              "radians sin tan noise noiseDetail noiseSeed random randomGaussian randomSeed"
          },
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 156 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            hljs.C_NUMBER_MODE,
            {
              begin: "[a-zA-Z_][\\da-zA-Z_]+\\.[\\da-zA-Z_]{1,3}",
              end: ":",
              excludeEnd: true
            },
            {
              begin: "(ncalls|tottime|cumtime)",
              end: "$",
              keywords: "ncalls tottime|10 cumtime|10 filename",
              relevance: 10
            },
            {
              begin: "function calls",
              end: "$",
              contains: [hljs.C_NUMBER_MODE],
              relevance: 10
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: "string",
              begin: "\\(",
              end: "\\)$",
              excludeBegin: true,
              excludeEnd: true,
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 157 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var ATOM = {
          begin: /[a-z][A-Za-z0-9_]*/,
          relevance: 0
        };

        var VAR = {
          className: "symbol",
          variants: [
            { begin: /[A-Z][a-zA-Z0-9_]*/ },
            { begin: /_[A-Za-z0-9_]*/ }
          ],
          relevance: 0
        };

        var PARENTED = {
          begin: /\(/,
          end: /\)/,
          relevance: 0
        };

        var LIST = {
          begin: /\[/,
          end: /\]/
        };

        var LINE_COMMENT = {
          className: "comment",
          begin: /%/,
          end: /$/,
          contains: [hljs.PHRASAL_WORDS_MODE]
        };

        var BACKTICK_STRING = {
          className: "string",
          begin: /`/,
          end: /`/,
          contains: [hljs.BACKSLASH_ESCAPE]
        };

        var CHAR_CODE = {
          className: "string", // 0'a etc.
          begin: /0\'(\\\'|.)/
        };

        var SPACE_CODE = {
          className: "string",
          begin: /0\'\\s/ // 0'\s
        };

        var PRED_OP = {
          // relevance booster
          begin: /:-/
        };

        var inner = [
          ATOM,
          VAR,
          PARENTED,
          PRED_OP,
          LIST,
          LINE_COMMENT,
          hljs.C_BLOCK_COMMENT_MODE,
          hljs.QUOTE_STRING_MODE,
          hljs.APOS_STRING_MODE,
          BACKTICK_STRING,
          CHAR_CODE,
          SPACE_CODE,
          hljs.C_NUMBER_MODE
        ];

        PARENTED.contains = inner;
        LIST.contains = inner;

        return {
          contains: inner.concat([
            { begin: /\.$/ } // relevance booster
          ])
        };
      };

      /***/
    },
    /* 158 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            keyword: "package import option optional required repeated group",
            built_in:
              "double float int32 int64 uint32 uint64 sint32 sint64 " +
              "fixed32 fixed64 sfixed32 sfixed64 bool string bytes",
            literal: "true false"
          },
          contains: [
            hljs.QUOTE_STRING_MODE,
            hljs.NUMBER_MODE,
            hljs.C_LINE_COMMENT_MODE,
            {
              className: "class",
              beginKeywords: "message enum service",
              end: /\{/,
              illegal: /\n/,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  starts: { endsWithParent: true, excludeEnd: true } // hack: eating everything after the first title
                })
              ]
            },
            {
              className: "function",
              beginKeywords: "rpc",
              end: /;/,
              excludeEnd: true,
              keywords: "rpc returns"
            },
            {
              begin: /^\s*[A-Z_]+/,
              end: /\s*=/,
              excludeEnd: true
            }
          ]
        };
      };

      /***/
    },
    /* 159 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var PUPPET_KEYWORDS = {
          keyword:
            /* language keywords */
            "and case default else elsif false if in import enherits node or true undef unless main settings $string ",
          literal:
            /* metaparameters */
            "alias audit before loglevel noop require subscribe tag " +
            /* normal attributes */
            "owner ensure group mode name|0 changes context force incl lens load_path onlyif provider returns root show_diff type_check " +
            "en_address ip_address realname command environment hour monute month monthday special target weekday " +
            "creates cwd ogoutput refresh refreshonly tries try_sleep umask backup checksum content ctime force ignore " +
            "links mtime purge recurse recurselimit replace selinux_ignore_defaults selrange selrole seltype seluser source " +
            "souirce_permissions sourceselect validate_cmd validate_replacement allowdupe attribute_membership auth_membership forcelocal gid " +
            "ia_load_module members system host_aliases ip allowed_trunk_vlans description device_url duplex encapsulation etherchannel " +
            "native_vlan speed principals allow_root auth_class auth_type authenticate_user k_of_n mechanisms rule session_owner shared options " +
            "device fstype enable hasrestart directory present absent link atboot blockdevice device dump pass remounts poller_tag use " +
            "message withpath adminfile allow_virtual allowcdrom category configfiles flavor install_options instance package_settings platform " +
            "responsefile status uninstall_options vendor unless_system_user unless_uid binary control flags hasstatus manifest pattern restart running " +
            "start stop allowdupe auths expiry gid groups home iterations key_membership keys managehome membership password password_max_age " +
            "password_min_age profile_membership profiles project purge_ssh_keys role_membership roles salt shell uid baseurl cost descr enabled " +
            "enablegroups exclude failovermethod gpgcheck gpgkey http_caching include includepkgs keepalive metadata_expire metalink mirrorlist " +
            "priority protect proxy proxy_password proxy_username repo_gpgcheck s3_enabled skip_if_unavailable sslcacert sslclientcert sslclientkey " +
            "sslverify mounted",
          built_in:
            /* core facts */
            "architecture augeasversion blockdevices boardmanufacturer boardproductname boardserialnumber cfkey dhcp_servers " +
            "domain ec2_ ec2_userdata facterversion filesystems ldom fqdn gid hardwareisa hardwaremodel hostname id|0 interfaces " +
            "ipaddress ipaddress_ ipaddress6 ipaddress6_ iphostnumber is_virtual kernel kernelmajversion kernelrelease kernelversion " +
            "kernelrelease kernelversion lsbdistcodename lsbdistdescription lsbdistid lsbdistrelease lsbmajdistrelease lsbminordistrelease " +
            "lsbrelease macaddress macaddress_ macosx_buildversion macosx_productname macosx_productversion macosx_productverson_major " +
            "macosx_productversion_minor manufacturer memoryfree memorysize netmask metmask_ network_ operatingsystem operatingsystemmajrelease " +
            "operatingsystemrelease osfamily partitions path physicalprocessorcount processor processorcount productname ps puppetversion " +
            "rubysitedir rubyversion selinux selinux_config_mode selinux_config_policy selinux_current_mode selinux_current_mode selinux_enforced " +
            "selinux_policyversion serialnumber sp_ sshdsakey sshecdsakey sshrsakey swapencrypted swapfree swapsize timezone type uniqueid uptime " +
            "uptime_days uptime_hours uptime_seconds uuid virtual vlans xendomains zfs_version zonenae zones zpool_version"
        };

        var COMMENT = hljs.COMMENT("#", "$");

        var IDENT_RE = "([A-Za-z_]|::)(\\w|::)*";

        var TITLE = hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE });

        var VARIABLE = { className: "variable", begin: "\\$" + IDENT_RE };

        var STRING = {
          className: "string",
          contains: [hljs.BACKSLASH_ESCAPE, VARIABLE],
          variants: [{ begin: /'/, end: /'/ }, { begin: /"/, end: /"/ }]
        };

        return {
          aliases: ["pp"],
          contains: [
            COMMENT,
            VARIABLE,
            STRING,
            {
              beginKeywords: "class",
              end: "\\{|;",
              illegal: /=/,
              contains: [TITLE, COMMENT]
            },
            {
              beginKeywords: "define",
              end: /\{/,
              contains: [
                {
                  className: "section",
                  begin: hljs.IDENT_RE,
                  endsParent: true
                }
              ]
            },
            {
              begin: hljs.IDENT_RE + "\\s+\\{",
              returnBegin: true,
              end: /\S/,
              contains: [
                {
                  className: "keyword",
                  begin: hljs.IDENT_RE
                },
                {
                  begin: /\{/,
                  end: /\}/,
                  keywords: PUPPET_KEYWORDS,
                  relevance: 0,
                  contains: [
                    STRING,
                    COMMENT,
                    {
                      begin: "[a-zA-Z_]+\\s*=>",
                      returnBegin: true,
                      end: "=>",
                      contains: [
                        {
                          className: "attr",
                          begin: hljs.IDENT_RE
                        }
                      ]
                    },
                    {
                      className: "number",
                      begin:
                        "(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",
                      relevance: 0
                    },
                    VARIABLE
                  ]
                }
              ],
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 160 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        // Base deafult colors in PB IDE: background: #FFFFDF; foreground: #000000;
        var STRINGS = {
          // PB IDE color: #0080FF (Azure Radiance)
          className: "string",
          begin: '(~)?"',
          end: '"',
          illegal: "\\n"
        };
        var CONSTANTS = {
          // PB IDE color: #924B72 (Cannon Pink)
          //  "#" + a letter or underscore + letters, digits or underscores + (optional) "$"
          className: "symbol",
          begin: "#[a-zA-Z_]\\w*\\$?"
        };

        return {
          aliases: ["pb", "pbi"],
          // PB IDE color: #006666 (Blue Stone) + Bold
          keywords:
            // The following keywords list was taken and adapted from GuShH's PureBasic language file for GeSHi...
            "And As Break CallDebugger Case CompilerCase CompilerDefault CompilerElse CompilerEndIf CompilerEndSelect " +
            "CompilerError CompilerIf CompilerSelect Continue Data DataSection EndDataSection Debug DebugLevel " +
            "Default Define Dim DisableASM DisableDebugger DisableExplicit Else ElseIf EnableASM " +
            "EnableDebugger EnableExplicit End EndEnumeration EndIf EndImport EndInterface EndMacro EndProcedure " +
            "EndSelect EndStructure EndStructureUnion EndWith Enumeration Extends FakeReturn For Next ForEach " +
            "ForEver Global Gosub Goto If Import ImportC IncludeBinary IncludeFile IncludePath Interface Macro " +
            "NewList Not Or ProcedureReturn Protected Prototype " +
            "PrototypeC Read ReDim Repeat Until Restore Return Select Shared Static Step Structure StructureUnion " +
            "Swap To Wend While With XIncludeFile XOr " +
            "Procedure ProcedureC ProcedureCDLL ProcedureDLL Declare DeclareC DeclareCDLL DeclareDLL",
          contains: [
            // COMMENTS | PB IDE color: #00AAAA (Persian Green)
            hljs.COMMENT(";", "$", { relevance: 0 }),

            {
              // PROCEDURES DEFINITIONS
              className: "function",
              begin: "\\b(Procedure|Declare)(C|CDLL|DLL)?\\b",
              end: "\\(",
              excludeEnd: true,
              returnBegin: true,
              contains: [
                {
                  // PROCEDURE KEYWORDS | PB IDE color: #006666 (Blue Stone) + Bold
                  className: "keyword",
                  begin: "(Procedure|Declare)(C|CDLL|DLL)?",
                  excludeEnd: true
                },
                {
                  // PROCEDURE RETURN TYPE SETTING | PB IDE color: #000000 (Black)
                  className: "type",
                  begin: "\\.\\w*"
                  // end: ' ',
                },
                hljs.UNDERSCORE_TITLE_MODE // PROCEDURE NAME | PB IDE color: #006666 (Blue Stone)
              ]
            },
            STRINGS,
            CONSTANTS
          ]
        };
      };

      /***/
    },
    /* 161 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            "and elif is global as in if from raise for except finally print import pass return " +
            "exec else break not with class assert yield try while continue del or def lambda " +
            "async await nonlocal|10 None True False",
          built_in: "Ellipsis NotImplemented"
        };
        var PROMPT = {
          className: "meta",
          begin: /^(>>>|\.\.\.) /
        };
        var SUBST = {
          className: "subst",
          begin: /\{/,
          end: /\}/,
          keywords: KEYWORDS,
          illegal: /#/
        };
        var STRING = {
          className: "string",
          contains: [hljs.BACKSLASH_ESCAPE],
          variants: [
            {
              begin: /(u|b)?r?'''/,
              end: /'''/,
              contains: [PROMPT],
              relevance: 10
            },
            {
              begin: /(u|b)?r?"""/,
              end: /"""/,
              contains: [PROMPT],
              relevance: 10
            },
            {
              begin: /(fr|rf|f)'''/,
              end: /'''/,
              contains: [PROMPT, SUBST]
            },
            {
              begin: /(fr|rf|f)"""/,
              end: /"""/,
              contains: [PROMPT, SUBST]
            },
            {
              begin: /(u|r|ur)'/,
              end: /'/,
              relevance: 10
            },
            {
              begin: /(u|r|ur)"/,
              end: /"/,
              relevance: 10
            },
            {
              begin: /(b|br)'/,
              end: /'/
            },
            {
              begin: /(b|br)"/,
              end: /"/
            },
            {
              begin: /(fr|rf|f)'/,
              end: /'/,
              contains: [SUBST]
            },
            {
              begin: /(fr|rf|f)"/,
              end: /"/,
              contains: [SUBST]
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE
          ]
        };
        var NUMBER = {
          className: "number",
          relevance: 0,
          variants: [
            { begin: hljs.BINARY_NUMBER_RE + "[lLjJ]?" },
            { begin: "\\b(0o[0-7]+)[lLjJ]?" },
            { begin: hljs.C_NUMBER_RE + "[lLjJ]?" }
          ]
        };
        var PARAMS = {
          className: "params",
          begin: /\(/,
          end: /\)/,
          contains: ["self", PROMPT, NUMBER, STRING]
        };
        SUBST.contains = [STRING, NUMBER, PROMPT];
        return {
          aliases: ["py", "gyp"],
          keywords: KEYWORDS,
          illegal: /(<\/|->|\?)|=>/,
          contains: [
            PROMPT,
            NUMBER,
            STRING,
            hljs.HASH_COMMENT_MODE,
            {
              variants: [
                { className: "function", beginKeywords: "def" },
                { className: "class", beginKeywords: "class" }
              ],
              end: /:/,
              illegal: /[${=;\n,]/,
              contains: [
                hljs.UNDERSCORE_TITLE_MODE,
                PARAMS,
                {
                  begin: /->/,
                  endsWithParent: true,
                  keywords: "None"
                }
              ]
            },
            {
              className: "meta",
              begin: /^[\t ]*@/,
              end: /$/
            },
            {
              begin: /\b(print|exec)\(/ // don’t highlight keywords-turned-functions in Python 3
            }
          ]
        };
      };

      /***/
    },
    /* 162 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var Q_KEYWORDS = {
          keyword: "do while select delete by update from",
          literal: "0b 1b",
          built_in:
            "neg not null string reciprocal floor ceiling signum mod xbar xlog and or each scan over prior mmu lsq inv md5 ltime gtime count first var dev med cov cor all any rand sums prds mins maxs fills deltas ratios avgs differ prev next rank reverse iasc idesc asc desc msum mcount mavg mdev xrank mmin mmax xprev rotate distinct group where flip type key til get value attr cut set upsert raze union inter except cross sv vs sublist enlist read0 read1 hopen hclose hdel hsym hcount peach system ltrim rtrim trim lower upper ssr view tables views cols xcols keys xkey xcol xasc xdesc fkeys meta lj aj aj0 ij pj asof uj ww wj wj1 fby xgroup ungroup ej save load rsave rload show csv parse eval min max avg wavg wsum sin cos tan sum",
          type:
            "`float `double int `timestamp `timespan `datetime `time `boolean `symbol `char `byte `short `long `real `month `date `minute `second `guid"
        };
        return {
          aliases: ["k", "kdb"],
          keywords: Q_KEYWORDS,
          lexemes: /(`?)[A-Za-z0-9_]+\b/,
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 163 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            "in of on if for while finally var new function do return void else break catch " +
            "instanceof with throw case default try this switch continue typeof delete " +
            "let yield const export super debugger as async await import",
          literal: "true false null undefined NaN Infinity",
          built_in:
            "eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent " +
            "encodeURI encodeURIComponent escape unescape Object Function Boolean Error " +
            "EvalError InternalError RangeError ReferenceError StopIteration SyntaxError " +
            "TypeError URIError Number Math Date String RegExp Array Float32Array " +
            "Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array " +
            "Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require " +
            "module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect " +
            "Behavior bool color coordinate date double enumeration font geocircle georectangle " +
            "geoshape int list matrix4x4 parent point quaternion real rect " +
            "size string url variant vector2d vector3d vector4d" +
            "Promise"
        };

        var QML_IDENT_RE = "[a-zA-Z_][a-zA-Z0-9\\._]*";

        // Isolate property statements. Ends at a :, =, ;, ,, a comment or end of line.
        // Use property class.
        var PROPERTY = {
          className: "keyword",
          begin: "\\bproperty\\b",
          starts: {
            className: "string",
            end: "(:|=|;|,|//|/\\*|$)",
            returnEnd: true
          }
        };

        // Isolate signal statements. Ends at a ) a comment or end of line.
        // Use property class.
        var SIGNAL = {
          className: "keyword",
          begin: "\\bsignal\\b",
          starts: {
            className: "string",
            end: "(\\(|:|=|;|,|//|/\\*|$)",
            returnEnd: true
          }
        };

        // id: is special in QML. When we see id: we want to mark the id: as attribute and
        // emphasize the token following.
        var ID_ID = {
          className: "attribute",
          begin: "\\bid\\s*:",
          starts: {
            className: "string",
            end: QML_IDENT_RE,
            returnEnd: false
          }
        };

        // Find QML object attribute. An attribute is a QML identifier followed by :.
        // Unfortunately it's hard to know where it ends, as it may contain scalars,
        // objects, object definitions, or javascript. The true end is either when the parent
        // ends or the next attribute is detected.
        var QML_ATTRIBUTE = {
          begin: QML_IDENT_RE + "\\s*:",
          returnBegin: true,
          contains: [
            {
              className: "attribute",
              begin: QML_IDENT_RE,
              end: "\\s*:",
              excludeEnd: true,
              relevance: 0
            }
          ],
          relevance: 0
        };

        // Find QML object. A QML object is a QML identifier followed by { and ends at the matching }.
        // All we really care about is finding IDENT followed by { and just mark up the IDENT and ignore the {.
        var QML_OBJECT = {
          begin: QML_IDENT_RE + "\\s*{",
          end: "{",
          returnBegin: true,
          relevance: 0,
          contains: [hljs.inherit(hljs.TITLE_MODE, { begin: QML_IDENT_RE })]
        };

        return {
          aliases: ["qt"],
          case_insensitive: false,
          keywords: KEYWORDS,
          contains: [
            {
              className: "meta",
              begin: /^\s*['"]use (strict|asm)['"]/
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              // template string
              className: "string",
              begin: "`",
              end: "`",
              contains: [
                hljs.BACKSLASH_ESCAPE,
                {
                  className: "subst",
                  begin: "\\$\\{",
                  end: "\\}"
                }
              ]
            },
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: "number",
              variants: [
                { begin: "\\b(0[bB][01]+)" },
                { begin: "\\b(0[oO][0-7]+)" },
                { begin: hljs.C_NUMBER_RE }
              ],
              relevance: 0
            },
            {
              // "value" container
              begin:
                "(" + hljs.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
              keywords: "return throw case",
              contains: [
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                hljs.REGEXP_MODE,
                {
                  // E4X / JSX
                  begin: /</,
                  end: />\s*[);\]]/,
                  relevance: 0,
                  subLanguage: "xml"
                }
              ],
              relevance: 0
            },
            SIGNAL,
            PROPERTY,
            {
              className: "function",
              beginKeywords: "function",
              end: /\{/,
              excludeEnd: true,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  begin: /[A-Za-z$_][0-9A-Za-z$_]*/
                }),
                {
                  className: "params",
                  begin: /\(/,
                  end: /\)/,
                  excludeBegin: true,
                  excludeEnd: true,
                  contains: [
                    hljs.C_LINE_COMMENT_MODE,
                    hljs.C_BLOCK_COMMENT_MODE
                  ]
                }
              ],
              illegal: /\[|%/
            },
            {
              begin: "\\." + hljs.IDENT_RE,
              relevance: 0 // hack: prevents detection of keywords after dots
            },
            ID_ID,
            QML_ATTRIBUTE,
            QML_OBJECT
          ],
          illegal: /#/
        };
      };

      /***/
    },
    /* 164 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENT_RE = "([a-zA-Z]|\\.[a-zA-Z.])[a-zA-Z0-9._]*";

        return {
          contains: [
            hljs.HASH_COMMENT_MODE,
            {
              begin: IDENT_RE,
              lexemes: IDENT_RE,
              keywords: {
                keyword:
                  "function if in break next repeat else for return switch while try tryCatch " +
                  "stop warning require library attach detach source setMethod setGeneric " +
                  "setGroupGeneric setClass ...",
                literal:
                  "NULL NA TRUE FALSE T F Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 " +
                  "NA_complex_|10"
              },
              relevance: 0
            },
            {
              // hex value
              className: "number",
              begin: "0[xX][0-9a-fA-F]+[Li]?\\b",
              relevance: 0
            },
            {
              // explicit integer
              className: "number",
              begin: "\\d+(?:[eE][+\\-]?\\d*)?L\\b",
              relevance: 0
            },
            {
              // number with trailing decimal
              className: "number",
              begin: "\\d+\\.(?!\\d)(?:i\\b)?",
              relevance: 0
            },
            {
              // number
              className: "number",
              begin: "\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d*)?i?\\b",
              relevance: 0
            },
            {
              // number with leading decimal
              className: "number",
              begin: "\\.\\d+(?:[eE][+\\-]?\\d*)?i?\\b",
              relevance: 0
            },

            {
              // escaped identifier
              begin: "`",
              end: "`",
              relevance: 0
            },

            {
              className: "string",
              contains: [hljs.BACKSLASH_ESCAPE],
              variants: [{ begin: '"', end: '"' }, { begin: "'", end: "'" }]
            }
          ]
        };
      };

      /***/
    },
    /* 165 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords:
            "ArchiveRecord AreaLightSource Atmosphere Attribute AttributeBegin AttributeEnd Basis " +
            "Begin Blobby Bound Clipping ClippingPlane Color ColorSamples ConcatTransform Cone " +
            "CoordinateSystem CoordSysTransform CropWindow Curves Cylinder DepthOfField Detail " +
            "DetailRange Disk Displacement Display End ErrorHandler Exposure Exterior Format " +
            "FrameAspectRatio FrameBegin FrameEnd GeneralPolygon GeometricApproximation Geometry " +
            "Hider Hyperboloid Identity Illuminate Imager Interior LightSource " +
            "MakeCubeFaceEnvironment MakeLatLongEnvironment MakeShadow MakeTexture Matte " +
            "MotionBegin MotionEnd NuPatch ObjectBegin ObjectEnd ObjectInstance Opacity Option " +
            "Orientation Paraboloid Patch PatchMesh Perspective PixelFilter PixelSamples " +
            "PixelVariance Points PointsGeneralPolygons PointsPolygons Polygon Procedural Projection " +
            "Quantize ReadArchive RelativeDetail ReverseOrientation Rotate Scale ScreenWindow " +
            "ShadingInterpolation ShadingRate Shutter Sides Skew SolidBegin SolidEnd Sphere " +
            "SubdivisionMesh Surface TextureCoordinates Torus Transform TransformBegin TransformEnd " +
            "TransformPoints Translate TrimCurve WorldBegin WorldEnd",
          illegal: "</",
          contains: [
            hljs.HASH_COMMENT_MODE,
            hljs.C_NUMBER_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE
          ]
        };
      };

      /***/
    },
    /* 166 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENTIFIER = "[a-zA-Z-_][^\\n{]+\\{";

        var PROPERTY = {
          className: "attribute",
          begin: /[a-zA-Z-_]+/,
          end: /\s*:/,
          excludeEnd: true,
          starts: {
            end: ";",
            relevance: 0,
            contains: [
              {
                className: "variable",
                begin: /\.[a-zA-Z-_]+/
              },
              {
                className: "keyword",
                begin: /\(optional\)/
              }
            ]
          }
        };

        return {
          aliases: ["graph", "instances"],
          case_insensitive: true,
          keywords: "import",
          contains: [
            // Facet sections
            {
              begin: "^facet " + IDENTIFIER,
              end: "}",
              keywords: "facet",
              contains: [PROPERTY, hljs.HASH_COMMENT_MODE]
            },

            // Instance sections
            {
              begin: "^\\s*instance of " + IDENTIFIER,
              end: "}",
              keywords:
                "name count channels instance-data instance-state instance of",
              illegal: /\S/,
              contains: ["self", PROPERTY, hljs.HASH_COMMENT_MODE]
            },

            // Component sections
            {
              begin: "^" + IDENTIFIER,
              end: "}",
              contains: [PROPERTY, hljs.HASH_COMMENT_MODE]
            },

            // Comments
            hljs.HASH_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 167 */
    /***/ function(module, exports) {
      module.exports = // Colors from RouterOS terminal:
        //   green        - #0E9A00
        //   teal         - #0C9A9A
        //   purple       - #99069A
        //   light-brown  - #9A9900

        function(hljs) {
          var STATEMENTS =
            "foreach do while for if from to step else on-error and or not in";

          // Global commands: Every global command should start with ":" token, otherwise it will be treated as variable.
          var GLOBAL_COMMANDS =
            "global local beep delay put len typeof pick log time set find environment terminal error execute parse resolve toarray tobool toid toip toip6 tonum tostr totime";

          // Common commands: Following commands available from most sub-menus:
          var COMMON_COMMANDS =
            "add remove enable disable set get print export edit find run debug error info warning";

          var LITERALS = "true false yes no nothing nil null";

          var OBJECTS =
            "traffic-flow traffic-generator firewall scheduler aaa accounting address-list address align area bandwidth-server bfd bgp bridge client clock community config connection console customer default dhcp-client dhcp-server discovery dns e-mail ethernet filter firewall firmware gps graphing group hardware health hotspot identity igmp-proxy incoming instance interface ip ipsec ipv6 irq l2tp-server lcd ldp logging mac-server mac-winbox mangle manual mirror mme mpls nat nd neighbor network note ntp ospf ospf-v3 ovpn-server page peer pim ping policy pool port ppp pppoe-client pptp-server prefix profile proposal proxy queue radius resource rip ripng route routing screen script security-profiles server service service-port settings shares smb sms sniffer snmp snooper socks sstp-server system tool tracking type upgrade upnp user-manager users user vlan secret vrrp watchdog web-access wireless pptp pppoe lan wan layer7-protocol lease simple raw";

          // print parameters
          // Several parameters are available for print command:
          // ToDo: var PARAMETERS_PRINT = 'append as-value brief detail count-only file follow follow-only from interval terse value-list without-paging where info';
          // ToDo: var OPERATORS = '&& and ! not || or in ~ ^ & << >> + - * /';
          // ToDo: var TYPES = 'num number bool boolean str string ip ip6-prefix id time array';
          // ToDo: The following tokens serve as delimiters in the grammar: ()  []  {}  :   ;   $   /

          var VAR_PREFIX = "global local set for foreach";

          var VAR = {
            className: "variable",
            variants: [{ begin: /\$[\w\d#@][\w\d_]*/ }, { begin: /\$\{(.*?)}/ }]
          };

          var QUOTE_STRING = {
            className: "string",
            begin: /"/,
            end: /"/,
            contains: [
              hljs.BACKSLASH_ESCAPE,
              VAR,
              {
                className: "variable",
                begin: /\$\(/,
                end: /\)/,
                contains: [hljs.BACKSLASH_ESCAPE]
              }
            ]
          };

          var APOS_STRING = {
            className: "string",
            begin: /'/,
            end: /'/
          };

          var IPADDR =
            "((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]).){3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\b";
          var IPADDR_wBITMASK = IPADDR + "/(3[0-2]|[1-2][0-9]|\\d)";
          //////////////////////////////////////////////////////////////////////
          return {
            aliases: ["routeros", "mikrotik"],
            case_insensitive: true,
            lexemes: /:?[\w-]+/,
            keywords: {
              literal: LITERALS,
              keyword:
                STATEMENTS +
                " :" +
                STATEMENTS.split(" ").join(" :") +
                " :" +
                GLOBAL_COMMANDS.split(" ").join(" :")
            },
            contains: [
              {
                // недопустимые конструкции
                variants: [
                  { begin: /^@/, end: /$/ }, // dns
                  { begin: /\/\*/, end: /\*\// }, // -- comment
                  { begin: /%%/, end: /$/ }, // -- comment
                  { begin: /^'/, end: /$/ }, // Monkey one line comment
                  { begin: /^\s*\/[\w-]+=/, end: /$/ }, // jboss-cli
                  { begin: /\/\//, end: /$/ }, // Stan comment
                  { begin: /^\[\</, end: /\>\]$/ }, // F# class declaration?
                  { begin: /<\//, end: />/ }, // HTML tags
                  { begin: /^facet /, end: /\}/ }, // roboconf - лютый костыль )))
                  { begin: "^1\\.\\.(\\d+)$", end: /$/ } // tap
                ],
                illegal: /./
              },
              hljs.COMMENT("^#", "$"),
              QUOTE_STRING,
              APOS_STRING,
              VAR,
              {
                // attribute=value
                begin: /[\w-]+\=([^\s\{\}\[\]\(\)]+)/,
                relevance: 0,
                returnBegin: true,
                contains: [
                  {
                    className: "attribute",
                    begin: /[^=]+/
                  },
                  {
                    begin: /=/,
                    endsWithParent: true,
                    relevance: 0,
                    contains: [
                      QUOTE_STRING,
                      APOS_STRING,
                      VAR,
                      {
                        className: "literal",
                        begin: "\\b(" + LITERALS.split(" ").join("|") + ")\\b"
                      },
                      /*{
	                // IPv4 addresses and subnets
	                className: 'number',
	                variants: [
	                  {begin: IPADDR_wBITMASK+'(,'+IPADDR_wBITMASK+')*'}, //192.168.0.0/24,1.2.3.0/24
	                  {begin: IPADDR+'-'+IPADDR},       // 192.168.0.1-192.168.0.3
	                  {begin: IPADDR+'(,'+IPADDR+')*'}, // 192.168.0.1,192.168.0.34,192.168.24.1,192.168.0.1
	                ]
	              }, // */
                      /*{
	                // MAC addresses and DHCP Client IDs
	                className: 'number',
	                begin: /\b(1:)?([0-9A-Fa-f]{1,2}[:-]){5}([0-9A-Fa-f]){1,2}\b/,
	              }, //*/
                      {
                        // Не форматировать не классифицированные значения. Необходимо для исключения подсветки значений как built_in.
                        // className: 'number',
                        begin: /("[^"]*"|[^\s\{\}\[\]]+)/
                      } //*/
                    ]
                  } //*/
                ]
              }, //*/
              {
                // HEX values
                className: "number",
                begin: /\*[0-9a-fA-F]+/
              }, //*/

              {
                begin:
                  "\\b(" +
                  COMMON_COMMANDS.split(" ").join("|") +
                  ")([\\s[(]|])",
                returnBegin: true,
                contains: [
                  {
                    className: "builtin-name", //'function',
                    begin: /\w+/
                  }
                ]
              },

              {
                className: "built_in",
                variants: [
                  {
                    begin:
                      "(\\.\\./|/|\\s)((" +
                      OBJECTS.split(" ").join("|") +
                      ");?\\s)+",
                    relevance: 10
                  },
                  { begin: /\.\./ }
                ]
              } //*/
            ]
          };
        };

      /***/
    },
    /* 168 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            keyword:
              "float color point normal vector matrix while for if do return else break extern continue",
            built_in:
              "abs acos ambient area asin atan atmosphere attribute calculatenormal ceil cellnoise " +
              "clamp comp concat cos degrees depth Deriv diffuse distance Du Dv environment exp " +
              "faceforward filterstep floor format fresnel incident length lightsource log match " +
              "max min mod noise normalize ntransform opposite option phong pnoise pow printf " +
              "ptlined radians random reflect refract renderinfo round setcomp setxcomp setycomp " +
              "setzcomp shadow sign sin smoothstep specular specularbrdf spline sqrt step tan " +
              "texture textureinfo trace transform vtransform xcomp ycomp zcomp"
          },
          illegal: "</",
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.APOS_STRING_MODE,
            hljs.C_NUMBER_MODE,
            {
              className: "meta",
              begin: "#",
              end: "$"
            },
            {
              className: "class",
              beginKeywords: "surface displacement light volume imager",
              end: "\\("
            },
            {
              beginKeywords: "illuminate illuminance gather",
              end: "\\("
            }
          ]
        };
      };

      /***/
    },
    /* 169 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            keyword:
              "BILL_PERIOD BILL_START BILL_STOP RS_EFFECTIVE_START RS_EFFECTIVE_STOP RS_JURIS_CODE RS_OPCO_CODE " +
              "INTDADDATTRIBUTE|5 INTDADDVMSG|5 INTDBLOCKOP|5 INTDBLOCKOPNA|5 INTDCLOSE|5 INTDCOUNT|5 " +
              "INTDCOUNTSTATUSCODE|5 INTDCREATEMASK|5 INTDCREATEDAYMASK|5 INTDCREATEFACTORMASK|5 " +
              "INTDCREATEHANDLE|5 INTDCREATEOVERRIDEDAYMASK|5 INTDCREATEOVERRIDEMASK|5 " +
              "INTDCREATESTATUSCODEMASK|5 INTDCREATETOUPERIOD|5 INTDDELETE|5 INTDDIPTEST|5 INTDEXPORT|5 " +
              "INTDGETERRORCODE|5 INTDGETERRORMESSAGE|5 INTDISEQUAL|5 INTDJOIN|5 INTDLOAD|5 INTDLOADACTUALCUT|5 " +
              "INTDLOADDATES|5 INTDLOADHIST|5 INTDLOADLIST|5 INTDLOADLISTDATES|5 INTDLOADLISTENERGY|5 " +
              "INTDLOADLISTHIST|5 INTDLOADRELATEDCHANNEL|5 INTDLOADSP|5 INTDLOADSTAGING|5 INTDLOADUOM|5 " +
              "INTDLOADUOMDATES|5 INTDLOADUOMHIST|5 INTDLOADVERSION|5 INTDOPEN|5 INTDREADFIRST|5 INTDREADNEXT|5 " +
              "INTDRECCOUNT|5 INTDRELEASE|5 INTDREPLACE|5 INTDROLLAVG|5 INTDROLLPEAK|5 INTDSCALAROP|5 INTDSCALE|5 " +
              "INTDSETATTRIBUTE|5 INTDSETDSTPARTICIPANT|5 INTDSETSTRING|5 INTDSETVALUE|5 INTDSETVALUESTATUS|5 " +
              "INTDSHIFTSTARTTIME|5 INTDSMOOTH|5 INTDSORT|5 INTDSPIKETEST|5 INTDSUBSET|5 INTDTOU|5 " +
              "INTDTOURELEASE|5 INTDTOUVALUE|5 INTDUPDATESTATS|5 INTDVALUE|5 STDEV INTDDELETEEX|5 " +
              "INTDLOADEXACTUAL|5 INTDLOADEXCUT|5 INTDLOADEXDATES|5 INTDLOADEX|5 INTDLOADEXRELATEDCHANNEL|5 " +
              "INTDSAVEEX|5 MVLOAD|5 MVLOADACCT|5 MVLOADACCTDATES|5 MVLOADACCTHIST|5 MVLOADDATES|5 MVLOADHIST|5 " +
              "MVLOADLIST|5 MVLOADLISTDATES|5 MVLOADLISTHIST|5 IF FOR NEXT DONE SELECT END CALL ABORT CLEAR CHANNEL FACTOR LIST NUMBER " +
              "OVERRIDE SET WEEK DISTRIBUTIONNODE ELSE WHEN THEN OTHERWISE IENUM CSV INCLUDE LEAVE RIDER SAVE DELETE " +
              "NOVALUE SECTION WARN SAVE_UPDATE DETERMINANT LABEL REPORT REVENUE EACH " +
              "IN FROM TOTAL CHARGE BLOCK AND OR CSV_FILE RATE_CODE AUXILIARY_DEMAND " +
              "UIDACCOUNT RS BILL_PERIOD_SELECT HOURS_PER_MONTH INTD_ERROR_STOP SEASON_SCHEDULE_NAME " +
              "ACCOUNTFACTOR ARRAYUPPERBOUND CALLSTOREDPROC GETADOCONNECTION GETCONNECT GETDATASOURCE " +
              "GETQUALIFIER GETUSERID HASVALUE LISTCOUNT LISTOP LISTUPDATE LISTVALUE PRORATEFACTOR RSPRORATE " +
              "SETBINPATH SETDBMONITOR WQ_OPEN BILLINGHOURS DATE DATEFROMFLOAT DATETIMEFROMSTRING " +
              "DATETIMETOSTRING DATETOFLOAT DAY DAYDIFF DAYNAME DBDATETIME HOUR MINUTE MONTH MONTHDIFF " +
              "MONTHHOURS MONTHNAME ROUNDDATE SAMEWEEKDAYLASTYEAR SECOND WEEKDAY WEEKDIFF YEAR YEARDAY " +
              "YEARSTR COMPSUM HISTCOUNT HISTMAX HISTMIN HISTMINNZ HISTVALUE MAXNRANGE MAXRANGE MINRANGE " +
              "COMPIKVA COMPKVA COMPKVARFROMKQKW COMPLF IDATTR FLAG LF2KW LF2KWH MAXKW POWERFACTOR " +
              "READING2USAGE AVGSEASON MAXSEASON MONTHLYMERGE SEASONVALUE SUMSEASON ACCTREADDATES " +
              "ACCTTABLELOAD CONFIGADD CONFIGGET CREATEOBJECT CREATEREPORT EMAILCLIENT EXPBLKMDMUSAGE " +
              "EXPMDMUSAGE EXPORT_USAGE FACTORINEFFECT GETUSERSPECIFIEDSTOP INEFFECT ISHOLIDAY RUNRATE " +
              "SAVE_PROFILE SETREPORTTITLE USEREXIT WATFORRUNRATE TO TABLE ACOS ASIN ATAN ATAN2 BITAND CEIL " +
              "COS COSECANT COSH COTANGENT DIVQUOT DIVREM EXP FABS FLOOR FMOD FREPM FREXPN LOG LOG10 MAX MAXN " +
              "MIN MINNZ MODF POW ROUND ROUND2VALUE ROUNDINT SECANT SIN SINH SQROOT TAN TANH FLOAT2STRING " +
              "FLOAT2STRINGNC INSTR LEFT LEN LTRIM MID RIGHT RTRIM STRING STRINGNC TOLOWER TOUPPER TRIM " +
              "NUMDAYS READ_DATE STAGING",
            built_in:
              "IDENTIFIER OPTIONS XML_ELEMENT XML_OP XML_ELEMENT_OF DOMDOCCREATE DOMDOCLOADFILE DOMDOCLOADXML " +
              "DOMDOCSAVEFILE DOMDOCGETROOT DOMDOCADDPI DOMNODEGETNAME DOMNODEGETTYPE DOMNODEGETVALUE DOMNODEGETCHILDCT " +
              "DOMNODEGETFIRSTCHILD DOMNODEGETSIBLING DOMNODECREATECHILDELEMENT DOMNODESETATTRIBUTE " +
              "DOMNODEGETCHILDELEMENTCT DOMNODEGETFIRSTCHILDELEMENT DOMNODEGETSIBLINGELEMENT DOMNODEGETATTRIBUTECT " +
              "DOMNODEGETATTRIBUTEI DOMNODEGETATTRIBUTEBYNAME DOMNODEGETBYNAME"
          },
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE,
            {
              className: "literal",
              variants: [
                { begin: "#\\s+[a-zA-Z\\ \\.]*", relevance: 0 }, // looks like #-comment
                { begin: "#[a-zA-Z\\ \\.]+" }
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 170 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var NUM_SUFFIX = "([ui](8|16|32|64|128|size)|f(32|64))?";
        var KEYWORDS =
          "alignof as be box break const continue crate do else enum extern " +
          "false fn for if impl in let loop match mod mut offsetof once priv " +
          "proc pub pure ref return self Self sizeof static struct super trait true " +
          "type typeof unsafe unsized use virtual while where yield move default";
        var BUILTINS =
          // functions
          "drop " +
          // types
          "i8 i16 i32 i64 i128 isize " +
          "u8 u16 u32 u64 u128 usize " +
          "f32 f64 " +
          "str char bool " +
          "Box Option Result String Vec " +
          // traits
          "Copy Send Sized Sync Drop Fn FnMut FnOnce ToOwned Clone Debug " +
          "PartialEq PartialOrd Eq Ord AsRef AsMut Into From Default Iterator " +
          "Extend IntoIterator DoubleEndedIterator ExactSizeIterator " +
          "SliceConcatExt ToString " +
          // macros
          "assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! " +
          "debug_assert! debug_assert_eq! env! panic! file! format! format_args! " +
          "include_bin! include_str! line! local_data_key! module_path! " +
          "option_env! print! println! select! stringify! try! unimplemented! " +
          "unreachable! vec! write! writeln! macro_rules! assert_ne! debug_assert_ne!";
        return {
          aliases: ["rs"],
          keywords: {
            keyword: KEYWORDS,
            literal: "true false Some None Ok Err",
            built_in: BUILTINS
          },
          lexemes: hljs.IDENT_RE + "!?",
          illegal: "</",
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.COMMENT("/\\*", "\\*/", { contains: ["self"] }),
            hljs.inherit(hljs.QUOTE_STRING_MODE, {
              begin: /b?"/,
              illegal: null
            }),
            {
              className: "string",
              variants: [
                { begin: /r(#*)"(.|\n)*?"\1(?!#)/ },
                { begin: /b?'\\?(x\w{2}|u\w{4}|U\w{8}|.)'/ }
              ]
            },
            {
              className: "symbol",
              begin: /'[a-zA-Z_][a-zA-Z0-9_]*/
            },
            {
              className: "number",
              variants: [
                { begin: "\\b0b([01_]+)" + NUM_SUFFIX },
                { begin: "\\b0o([0-7_]+)" + NUM_SUFFIX },
                { begin: "\\b0x([A-Fa-f0-9_]+)" + NUM_SUFFIX },
                {
                  begin:
                    "\\b(\\d[\\d_]*(\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)" +
                    NUM_SUFFIX
                }
              ],
              relevance: 0
            },
            {
              className: "function",
              beginKeywords: "fn",
              end: "(\\(|<)",
              excludeEnd: true,
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            {
              className: "meta",
              begin: "#\\!?\\[",
              end: "\\]",
              contains: [
                {
                  className: "meta-string",
                  begin: /"/,
                  end: /"/
                }
              ]
            },
            {
              className: "class",
              beginKeywords: "type",
              end: ";",
              contains: [
                hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, { endsParent: true })
              ],
              illegal: "\\S"
            },
            {
              className: "class",
              beginKeywords: "trait enum struct union",
              end: "{",
              contains: [
                hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, { endsParent: true })
              ],
              illegal: "[\\w\\d]"
            },
            {
              begin: hljs.IDENT_RE + "::",
              keywords: { built_in: BUILTINS }
            },
            {
              begin: "->"
            }
          ]
        };
      };

      /***/
    },
    /* 171 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var ANNOTATION = { className: "meta", begin: "@[A-Za-z]+" };

        // used in strings for escaping/interpolation/substitution
        var SUBST = {
          className: "subst",
          variants: [{ begin: "\\$[A-Za-z0-9_]+" }, { begin: "\\${", end: "}" }]
        };

        var STRING = {
          className: "string",
          variants: [
            {
              begin: '"',
              end: '"',
              illegal: "\\n",
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              begin: '"""',
              end: '"""',
              relevance: 10
            },
            {
              begin: '[a-z]+"',
              end: '"',
              illegal: "\\n",
              contains: [hljs.BACKSLASH_ESCAPE, SUBST]
            },
            {
              className: "string",
              begin: '[a-z]+"""',
              end: '"""',
              contains: [SUBST],
              relevance: 10
            }
          ]
        };

        var SYMBOL = {
          className: "symbol",
          begin: "'\\w[\\w\\d_]*(?!')"
        };

        var TYPE = {
          className: "type",
          begin: "\\b[A-Z][A-Za-z0-9_]*",
          relevance: 0
        };

        var NAME = {
          className: "title",
          begin: /[^0-9\n\t "'(),.`{}\[\]:;][^\n\t "'(),.`{}\[\]:;]+|[^0-9\n\t "'(),.`{}\[\]:;=]/,
          relevance: 0
        };

        var CLASS = {
          className: "class",
          beginKeywords: "class object trait type",
          end: /[:={\[\n;]/,
          excludeEnd: true,
          contains: [
            {
              beginKeywords: "extends with",
              relevance: 10
            },
            {
              begin: /\[/,
              end: /\]/,
              excludeBegin: true,
              excludeEnd: true,
              relevance: 0,
              contains: [TYPE]
            },
            {
              className: "params",
              begin: /\(/,
              end: /\)/,
              excludeBegin: true,
              excludeEnd: true,
              relevance: 0,
              contains: [TYPE]
            },
            NAME
          ]
        };

        var METHOD = {
          className: "function",
          beginKeywords: "def",
          end: /[:={\[(\n;]/,
          excludeEnd: true,
          contains: [NAME]
        };

        return {
          keywords: {
            literal: "true false null",
            keyword:
              "type yield lazy override def with val var sealed abstract private trait object if forSome for while throw finally protected extends import final return else break new catch super class case package default try this match continue throws implicit"
          },
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            STRING,
            SYMBOL,
            TYPE,
            METHOD,
            CLASS,
            hljs.C_NUMBER_MODE,
            ANNOTATION
          ]
        };
      };

      /***/
    },
    /* 172 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var SCHEME_IDENT_RE = "[^\\(\\)\\[\\]\\{\\}\",'`;#|\\\\\\s]+";
        var SCHEME_SIMPLE_NUMBER_RE = "(\\-|\\+)?\\d+([./]\\d+)?";
        var SCHEME_COMPLEX_NUMBER_RE =
          SCHEME_SIMPLE_NUMBER_RE + "[+\\-]" + SCHEME_SIMPLE_NUMBER_RE + "i";
        var BUILTINS = {
          "builtin-name":
            "case-lambda call/cc class define-class exit-handler field import " +
            "inherit init-field interface let*-values let-values let/ec mixin " +
            "opt-lambda override protect provide public rename require " +
            "require-for-syntax syntax syntax-case syntax-error unit/sig unless " +
            "when with-syntax and begin call-with-current-continuation " +
            "call-with-input-file call-with-output-file case cond define " +
            "define-syntax delay do dynamic-wind else for-each if lambda let let* " +
            "let-syntax letrec letrec-syntax map or syntax-rules ' * + , ,@ - ... / " +
            "; < <= = => > >= ` abs acos angle append apply asin assoc assq assv atan " +
            "boolean? caar cadr call-with-input-file call-with-output-file " +
            "call-with-values car cdddar cddddr cdr ceiling char->integer " +
            "char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? " +
            "char-downcase char-lower-case? char-numeric? char-ready? char-upcase " +
            "char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? " +
            "char? close-input-port close-output-port complex? cons cos " +
            "current-input-port current-output-port denominator display eof-object? " +
            "eq? equal? eqv? eval even? exact->inexact exact? exp expt floor " +
            "force gcd imag-part inexact->exact inexact? input-port? integer->char " +
            "integer? interaction-environment lcm length list list->string " +
            "list->vector list-ref list-tail list? load log magnitude make-polar " +
            "make-rectangular make-string make-vector max member memq memv min " +
            "modulo negative? newline not null-environment null? number->string " +
            "number? numerator odd? open-input-file open-output-file output-port? " +
            "pair? peek-char port? positive? procedure? quasiquote quote quotient " +
            "rational? rationalize read read-char real-part real? remainder reverse " +
            "round scheme-report-environment set! set-car! set-cdr! sin sqrt string " +
            "string->list string->number string->symbol string-append string-ci<=? " +
            "string-ci<? string-ci=? string-ci>=? string-ci>? string-copy " +
            "string-fill! string-length string-ref string-set! string<=? string<? " +
            "string=? string>=? string>? string? substring symbol->string symbol? " +
            "tan transcript-off transcript-on truncate values vector " +
            "vector->list vector-fill! vector-length vector-ref vector-set! " +
            "with-input-from-file with-output-to-file write write-char zero?"
        };

        var SHEBANG = {
          className: "meta",
          begin: "^#!",
          end: "$"
        };

        var LITERAL = {
          className: "literal",
          begin: "(#t|#f|#\\\\" + SCHEME_IDENT_RE + "|#\\\\.)"
        };

        var NUMBER = {
          className: "number",
          variants: [
            { begin: SCHEME_SIMPLE_NUMBER_RE, relevance: 0 },
            { begin: SCHEME_COMPLEX_NUMBER_RE, relevance: 0 },
            { begin: "#b[0-1]+(/[0-1]+)?" },
            { begin: "#o[0-7]+(/[0-7]+)?" },
            { begin: "#x[0-9a-f]+(/[0-9a-f]+)?" }
          ]
        };

        var STRING = hljs.QUOTE_STRING_MODE;

        var REGULAR_EXPRESSION = {
          className: "regexp",
          begin: '#[pr]x"',
          end: '[^\\\\]"'
        };

        var COMMENT_MODES = [
          hljs.COMMENT(";", "$", {
            relevance: 0
          }),
          hljs.COMMENT("#\\|", "\\|#")
        ];

        var IDENT = {
          begin: SCHEME_IDENT_RE,
          relevance: 0
        };

        var QUOTED_IDENT = {
          className: "symbol",
          begin: "'" + SCHEME_IDENT_RE
        };

        var BODY = {
          endsWithParent: true,
          relevance: 0
        };

        var QUOTED_LIST = {
          variants: [{ begin: /'/ }, { begin: "`" }],
          contains: [
            {
              begin: "\\(",
              end: "\\)",
              contains: ["self", LITERAL, STRING, NUMBER, IDENT, QUOTED_IDENT]
            }
          ]
        };

        var NAME = {
          className: "name",
          begin: SCHEME_IDENT_RE,
          lexemes: SCHEME_IDENT_RE,
          keywords: BUILTINS
        };

        var LAMBDA = {
          begin: /lambda/,
          endsWithParent: true,
          returnBegin: true,
          contains: [
            NAME,
            {
              begin: /\(/,
              end: /\)/,
              endsParent: true,
              contains: [IDENT]
            }
          ]
        };

        var LIST = {
          variants: [
            { begin: "\\(", end: "\\)" },
            { begin: "\\[", end: "\\]" }
          ],
          contains: [LAMBDA, NAME, BODY]
        };

        BODY.contains = [
          LITERAL,
          NUMBER,
          STRING,
          IDENT,
          QUOTED_IDENT,
          QUOTED_LIST,
          LIST
        ].concat(COMMENT_MODES);

        return {
          illegal: /\S/,
          contains: [
            SHEBANG,
            NUMBER,
            STRING,
            QUOTED_IDENT,
            QUOTED_LIST,
            LIST
          ].concat(COMMENT_MODES)
        };
      };

      /***/
    },
    /* 173 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var COMMON_CONTAINS = [
          hljs.C_NUMBER_MODE,
          {
            className: "string",
            begin: "'|\"",
            end: "'|\"",
            contains: [hljs.BACKSLASH_ESCAPE, { begin: "''" }]
          }
        ];

        return {
          aliases: ["sci"],
          lexemes: /%?\w+/,
          keywords: {
            keyword:
              "abort break case clear catch continue do elseif else endfunction end for function " +
              "global if pause return resume select try then while",
            literal: "%f %F %t %T %pi %eps %inf %nan %e %i %z %s",
            // Scilab has more than 2000 functions. Just list the most commons
            built_in:
              "abs and acos asin atan ceil cd chdir clearglobal cosh cos cumprod deff disp error " +
              "exec execstr exists exp eye gettext floor fprintf fread fsolve imag isdef isempty " +
              "isinfisnan isvector lasterror length load linspace list listfiles log10 log2 log " +
              "max min msprintf mclose mopen ones or pathconvert poly printf prod pwd rand real " +
              "round sinh sin size gsort sprintf sqrt strcat strcmps tring sum system tanh tan " +
              "type typename warning zeros matrix"
          },
          illegal: '("|#|/\\*|\\s+/\\w+)',
          contains: [
            {
              className: "function",
              beginKeywords: "function",
              end: "$",
              contains: [
                hljs.UNDERSCORE_TITLE_MODE,
                {
                  className: "params",
                  begin: "\\(",
                  end: "\\)"
                }
              ]
            },
            {
              begin: "[a-zA-Z_][a-zA-Z_0-9]*('+[\\.']*|[\\.']+)",
              end: "",
              relevance: 0
            },
            {
              begin: "\\[",
              end: "\\]'*[\\.']*",
              relevance: 0,
              contains: COMMON_CONTAINS
            },
            hljs.COMMENT("//", "$")
          ].concat(COMMON_CONTAINS)
        };
      };

      /***/
    },
    /* 174 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENT_RE = "[a-zA-Z-][a-zA-Z0-9_-]*";
        var VARIABLE = {
          className: "variable",
          begin: "(\\$" + IDENT_RE + ")\\b"
        };
        var HEXCOLOR = {
          className: "number",
          begin: "#[0-9A-Fa-f]+"
        };
        var DEF_INTERNALS = {
          className: "attribute",
          begin: "[A-Z\\_\\.\\-]+",
          end: ":",
          excludeEnd: true,
          illegal: "[^\\s]",
          starts: {
            endsWithParent: true,
            excludeEnd: true,
            contains: [
              HEXCOLOR,
              hljs.CSS_NUMBER_MODE,
              hljs.QUOTE_STRING_MODE,
              hljs.APOS_STRING_MODE,
              hljs.C_BLOCK_COMMENT_MODE,
              {
                className: "meta",
                begin: "!important"
              }
            ]
          }
        };
        return {
          case_insensitive: true,
          illegal: "[=/|']",
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: "selector-id",
              begin: "\\#[A-Za-z0-9_-]+",
              relevance: 0
            },
            {
              className: "selector-class",
              begin: "\\.[A-Za-z0-9_-]+",
              relevance: 0
            },
            {
              className: "selector-attr",
              begin: "\\[",
              end: "\\]",
              illegal: "$"
            },
            {
              className: "selector-tag", // begin: IDENT_RE, end: '[,|\\s]'
              begin:
                "\\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|map|mark|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|rp|rt|ruby|samp|script|section|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\\b",
              relevance: 0
            },
            {
              begin:
                ":(visited|valid|root|right|required|read-write|read-only|out-range|optional|only-of-type|only-child|nth-of-type|nth-last-of-type|nth-last-child|nth-child|not|link|left|last-of-type|last-child|lang|invalid|indeterminate|in-range|hover|focus|first-of-type|first-line|first-letter|first-child|first|enabled|empty|disabled|default|checked|before|after|active)"
            },
            {
              begin:
                "::(after|before|choices|first-letter|first-line|repeat-index|repeat-item|selection|value)"
            },
            VARIABLE,
            {
              className: "attribute",
              begin:
                "\\b(z-index|word-wrap|word-spacing|word-break|width|widows|white-space|visibility|vertical-align|unicode-bidi|transition-timing-function|transition-property|transition-duration|transition-delay|transition|transform-style|transform-origin|transform|top|text-underline-position|text-transform|text-shadow|text-rendering|text-overflow|text-indent|text-decoration-style|text-decoration-line|text-decoration-color|text-decoration|text-align-last|text-align|tab-size|table-layout|right|resize|quotes|position|pointer-events|perspective-origin|perspective|page-break-inside|page-break-before|page-break-after|padding-top|padding-right|padding-left|padding-bottom|padding|overflow-y|overflow-x|overflow-wrap|overflow|outline-width|outline-style|outline-offset|outline-color|outline|orphans|order|opacity|object-position|object-fit|normal|none|nav-up|nav-right|nav-left|nav-index|nav-down|min-width|min-height|max-width|max-height|mask|marks|margin-top|margin-right|margin-left|margin-bottom|margin|list-style-type|list-style-position|list-style-image|list-style|line-height|letter-spacing|left|justify-content|initial|inherit|ime-mode|image-orientation|image-resolution|image-rendering|icon|hyphens|height|font-weight|font-variant-ligatures|font-variant|font-style|font-stretch|font-size-adjust|font-size|font-language-override|font-kerning|font-feature-settings|font-family|font|float|flex-wrap|flex-shrink|flex-grow|flex-flow|flex-direction|flex-basis|flex|filter|empty-cells|display|direction|cursor|counter-reset|counter-increment|content|column-width|column-span|column-rule-width|column-rule-style|column-rule-color|column-rule|column-gap|column-fill|column-count|columns|color|clip-path|clip|clear|caption-side|break-inside|break-before|break-after|box-sizing|box-shadow|box-decoration-break|bottom|border-width|border-top-width|border-top-style|border-top-right-radius|border-top-left-radius|border-top-color|border-top|border-style|border-spacing|border-right-width|border-right-style|border-right-color|border-right|border-radius|border-left-width|border-left-style|border-left-color|border-left|border-image-width|border-image-source|border-image-slice|border-image-repeat|border-image-outset|border-image|border-color|border-collapse|border-bottom-width|border-bottom-style|border-bottom-right-radius|border-bottom-left-radius|border-bottom-color|border-bottom|border|background-size|background-repeat|background-position|background-origin|background-image|background-color|background-clip|background-attachment|background-blend-mode|background|backface-visibility|auto|animation-timing-function|animation-play-state|animation-name|animation-iteration-count|animation-fill-mode|animation-duration|animation-direction|animation-delay|animation|align-self|align-items|align-content)\\b",
              illegal: "[^\\s]"
            },
            {
              begin:
                "\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\b"
            },
            {
              begin: ":",
              end: ";",
              contains: [
                VARIABLE,
                HEXCOLOR,
                hljs.CSS_NUMBER_MODE,
                hljs.QUOTE_STRING_MODE,
                hljs.APOS_STRING_MODE,
                {
                  className: "meta",
                  begin: "!important"
                }
              ]
            },
            {
              begin: "@",
              end: "[{;]",
              keywords:
                "mixin include extend for if else each while charset import debug media page content font-face namespace warn",
              contains: [
                VARIABLE,
                hljs.QUOTE_STRING_MODE,
                hljs.APOS_STRING_MODE,
                HEXCOLOR,
                hljs.CSS_NUMBER_MODE,
                {
                  begin: "\\s[A-Za-z0-9_.-]+",
                  relevance: 0
                }
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 175 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["console"],
          contains: [
            {
              className: "meta",
              begin: "^\\s{0,3}[\\w\\d\\[\\]()@-]*[>%$#]",
              starts: {
                end: "$",
                subLanguage: "bash"
              }
            }
          ]
        };
      };

      /***/
    },
    /* 176 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var smali_instr_low_prio = [
          "add",
          "and",
          "cmp",
          "cmpg",
          "cmpl",
          "const",
          "div",
          "double",
          "float",
          "goto",
          "if",
          "int",
          "long",
          "move",
          "mul",
          "neg",
          "new",
          "nop",
          "not",
          "or",
          "rem",
          "return",
          "shl",
          "shr",
          "sput",
          "sub",
          "throw",
          "ushr",
          "xor"
        ];
        var smali_instr_high_prio = [
          "aget",
          "aput",
          "array",
          "check",
          "execute",
          "fill",
          "filled",
          "goto/16",
          "goto/32",
          "iget",
          "instance",
          "invoke",
          "iput",
          "monitor",
          "packed",
          "sget",
          "sparse"
        ];
        var smali_keywords = [
          "transient",
          "constructor",
          "abstract",
          "final",
          "synthetic",
          "public",
          "private",
          "protected",
          "static",
          "bridge",
          "system"
        ];
        return {
          aliases: ["smali"],
          contains: [
            {
              className: "string",
              begin: '"',
              end: '"',
              relevance: 0
            },
            hljs.COMMENT("#", "$", {
              relevance: 0
            }),
            {
              className: "keyword",
              variants: [
                { begin: "\\s*\\.end\\s[a-zA-Z0-9]*" },
                { begin: "^[ ]*\\.[a-zA-Z]*", relevance: 0 },
                { begin: "\\s:[a-zA-Z_0-9]*", relevance: 0 },
                { begin: "\\s(" + smali_keywords.join("|") + ")" }
              ]
            },
            {
              className: "built_in",
              variants: [
                {
                  begin: "\\s(" + smali_instr_low_prio.join("|") + ")\\s"
                },
                {
                  begin:
                    "\\s(" +
                    smali_instr_low_prio.join("|") +
                    ")((\\-|/)[a-zA-Z0-9]+)+\\s",
                  relevance: 10
                },
                {
                  begin:
                    "\\s(" +
                    smali_instr_high_prio.join("|") +
                    ")((\\-|/)[a-zA-Z0-9]+)*\\s",
                  relevance: 10
                }
              ]
            },
            {
              className: "class",
              begin: "L[^(;:\n]*;",
              relevance: 0
            },
            {
              begin: "[vp][0-9]+"
            }
          ]
        };
      };

      /***/
    },
    /* 177 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var VAR_IDENT_RE = "[a-z][a-zA-Z0-9_]*";
        var CHAR = {
          className: "string",
          begin: "\\$.{1}"
        };
        var SYMBOL = {
          className: "symbol",
          begin: "#" + hljs.UNDERSCORE_IDENT_RE
        };
        return {
          aliases: ["st"],
          keywords: "self super nil true false thisContext", // only 6
          contains: [
            hljs.COMMENT('"', '"'),
            hljs.APOS_STRING_MODE,
            {
              className: "type",
              begin: "\\b[A-Z][A-Za-z0-9_]*",
              relevance: 0
            },
            {
              begin: VAR_IDENT_RE + ":",
              relevance: 0
            },
            hljs.C_NUMBER_MODE,
            SYMBOL,
            CHAR,
            {
              // This looks more complicated than needed to avoid combinatorial
              // explosion under V8. It effectively means `| var1 var2 ... |` with
              // whitespace adjacent to `|` being optional.
              begin:
                "\\|[ ]*" + VAR_IDENT_RE + "([ ]+" + VAR_IDENT_RE + ")*[ ]*\\|",
              returnBegin: true,
              end: /\|/,
              illegal: /\S/,
              contains: [{ begin: "(\\|[ ]*)?" + VAR_IDENT_RE }]
            },
            {
              begin: "\\#\\(",
              end: "\\)",
              contains: [
                hljs.APOS_STRING_MODE,
                CHAR,
                hljs.C_NUMBER_MODE,
                SYMBOL
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 178 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["ml"],
          keywords: {
            keyword:
              /* according to Definition of Standard ML 97  */
              "abstype and andalso as case datatype do else end eqtype " +
              "exception fn fun functor handle if in include infix infixr " +
              "let local nonfix of op open orelse raise rec sharing sig " +
              "signature struct structure then type val with withtype where while",
            built_in:
              /* built-in types according to basis library */
              "array bool char exn int list option order real ref string substring vector unit word",
            literal: "true false NONE SOME LESS EQUAL GREATER nil"
          },
          illegal: /\/\/|>>/,
          lexemes: "[a-z_]\\w*!?",
          contains: [
            {
              className: "literal",
              begin: /\[(\|\|)?\]|\(\)/,
              relevance: 0
            },
            hljs.COMMENT("\\(\\*", "\\*\\)", {
              contains: ["self"]
            }),
            {
              /* type variable */
              className: "symbol",
              begin: "'[A-Za-z_](?!')[\\w']*"
              /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */
            },
            {
              /* polymorphic variant */
              className: "type",
              begin: "`[A-Z][\\w']*"
            },
            {
              /* module or constructor */
              className: "type",
              begin: "\\b[A-Z][\\w']*",
              relevance: 0
            },
            {
              /* don't color identifiers, but safely catch all identifiers with '*/
              begin: "[a-z_]\\w*'[\\w']*"
            },
            hljs.inherit(hljs.APOS_STRING_MODE, {
              className: "string",
              relevance: 0
            }),
            hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),
            {
              className: "number",
              begin:
                "\\b(0[xX][a-fA-F0-9_]+[Lln]?|" +
                "0[oO][0-7_]+[Lln]?|" +
                "0[bB][01_]+[Lln]?|" +
                "[0-9][0-9_]*([Lln]|(\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)",
              relevance: 0
            },
            {
              begin: /[-=]>/ // relevance booster
            }
          ]
        };
      };

      /***/
    },
    /* 179 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var CPP = hljs.getLanguage("cpp").exports;

        // In SQF, a variable start with _
        var VARIABLE = {
          className: "variable",
          begin: /\b_+[a-zA-Z_]\w*/
        };

        // In SQF, a function should fit myTag_fnc_myFunction pattern
        // https://community.bistudio.com/wiki/Functions_Library_(Arma_3)#Adding_a_Function
        var FUNCTION = {
          className: "title",
          begin: /[a-zA-Z][a-zA-Z0-9]+_fnc_\w*/
        };

        // In SQF strings, quotes matching the start are escaped by adding a consecutive.
        // Example of single escaped quotes: " "" " and  ' '' '.
        var STRINGS = {
          className: "string",
          variants: [
            {
              begin: '"',
              end: '"',
              contains: [{ begin: '""', relevance: 0 }]
            },
            {
              begin: "'",
              end: "'",
              contains: [{ begin: "''", relevance: 0 }]
            }
          ]
        };

        return {
          aliases: ["sqf"],
          case_insensitive: true,
          keywords: {
            keyword:
              "case catch default do else exit exitWith for forEach from if " +
              "switch then throw to try waitUntil while with",
            built_in:
              "abs accTime acos action actionIDs actionKeys actionKeysImages actionKeysNames " +
              "actionKeysNamesArray actionName actionParams activateAddons activatedAddons activateKey " +
              "add3DENConnection add3DENEventHandler add3DENLayer addAction addBackpack addBackpackCargo " +
              "addBackpackCargoGlobal addBackpackGlobal addCamShake addCuratorAddons addCuratorCameraArea " +
              "addCuratorEditableObjects addCuratorEditingArea addCuratorPoints addEditorObject addEventHandler " +
              "addGoggles addGroupIcon addHandgunItem addHeadgear addItem addItemCargo addItemCargoGlobal " +
              "addItemPool addItemToBackpack addItemToUniform addItemToVest addLiveStats addMagazine " +
              "addMagazineAmmoCargo addMagazineCargo addMagazineCargoGlobal addMagazineGlobal addMagazinePool " +
              "addMagazines addMagazineTurret addMenu addMenuItem addMissionEventHandler addMPEventHandler " +
              "addMusicEventHandler addOwnedMine addPlayerScores addPrimaryWeaponItem " +
              "addPublicVariableEventHandler addRating addResources addScore addScoreSide addSecondaryWeaponItem " +
              "addSwitchableUnit addTeamMember addToRemainsCollector addUniform addVehicle addVest addWaypoint " +
              "addWeapon addWeaponCargo addWeaponCargoGlobal addWeaponGlobal addWeaponItem addWeaponPool " +
              "addWeaponTurret agent agents AGLToASL aimedAtTarget aimPos airDensityRTD airportSide " +
              "AISFinishHeal alive all3DENEntities allControls allCurators allCutLayers allDead allDeadMen " +
              "allDisplays allGroups allMapMarkers allMines allMissionObjects allow3DMode allowCrewInImmobile " +
              "allowCuratorLogicIgnoreAreas allowDamage allowDammage allowFileOperations allowFleeing allowGetIn " +
              "allowSprint allPlayers allSites allTurrets allUnits allUnitsUAV allVariables ammo and animate " +
              "animateDoor animateSource animationNames animationPhase animationSourcePhase animationState " +
              "append apply armoryPoints arrayIntersect asin ASLToAGL ASLToATL assert assignAsCargo " +
              "assignAsCargoIndex assignAsCommander assignAsDriver assignAsGunner assignAsTurret assignCurator " +
              "assignedCargo assignedCommander assignedDriver assignedGunner assignedItems assignedTarget " +
              "assignedTeam assignedVehicle assignedVehicleRole assignItem assignTeam assignToAirport atan atan2 " +
              "atg ATLToASL attachedObject attachedObjects attachedTo attachObject attachTo attackEnabled " +
              "backpack backpackCargo backpackContainer backpackItems backpackMagazines backpackSpaceFor " +
              "behaviour benchmark binocular blufor boundingBox boundingBoxReal boundingCenter breakOut breakTo " +
              "briefingName buildingExit buildingPos buttonAction buttonSetAction cadetMode call callExtension " +
              "camCommand camCommit camCommitPrepared camCommitted camConstuctionSetParams camCreate camDestroy " +
              "cameraEffect cameraEffectEnableHUD cameraInterest cameraOn cameraView campaignConfigFile " +
              "camPreload camPreloaded camPrepareBank camPrepareDir camPrepareDive camPrepareFocus camPrepareFov " +
              "camPrepareFovRange camPreparePos camPrepareRelPos camPrepareTarget camSetBank camSetDir " +
              "camSetDive camSetFocus camSetFov camSetFovRange camSetPos camSetRelPos camSetTarget camTarget " +
              "camUseNVG canAdd canAddItemToBackpack canAddItemToUniform canAddItemToVest " +
              "cancelSimpleTaskDestination canFire canMove canSlingLoad canStand canSuspend canUnloadInCombat " +
              "canVehicleCargo captive captiveNum cbChecked cbSetChecked ceil channelEnabled cheatsEnabled " +
              "checkAIFeature checkVisibility civilian className clearAllItemsFromBackpack clearBackpackCargo " +
              "clearBackpackCargoGlobal clearGroupIcons clearItemCargo clearItemCargoGlobal clearItemPool " +
              "clearMagazineCargo clearMagazineCargoGlobal clearMagazinePool clearOverlay clearRadio " +
              "clearWeaponCargo clearWeaponCargoGlobal clearWeaponPool clientOwner closeDialog closeDisplay " +
              "closeOverlay collapseObjectTree collect3DENHistory combatMode commandArtilleryFire commandChat " +
              "commander commandFire commandFollow commandFSM commandGetOut commandingMenu commandMove " +
              "commandRadio commandStop commandSuppressiveFire commandTarget commandWatch comment commitOverlay " +
              "compile compileFinal completedFSM composeText configClasses configFile configHierarchy configName " +
              "configNull configProperties configSourceAddonList configSourceMod configSourceModList " +
              "connectTerminalToUAV controlNull controlsGroupCtrl copyFromClipboard copyToClipboard " +
              "copyWaypoints cos count countEnemy countFriendly countSide countType countUnknown " +
              "create3DENComposition create3DENEntity createAgent createCenter createDialog createDiaryLink " +
              "createDiaryRecord createDiarySubject createDisplay createGearDialog createGroup " +
              "createGuardedPoint createLocation createMarker createMarkerLocal createMenu createMine " +
              "createMissionDisplay createMPCampaignDisplay createSimpleObject createSimpleTask createSite " +
              "createSoundSource createTask createTeam createTrigger createUnit createVehicle createVehicleCrew " +
              "createVehicleLocal crew ctrlActivate ctrlAddEventHandler ctrlAngle ctrlAutoScrollDelay " +
              "ctrlAutoScrollRewind ctrlAutoScrollSpeed ctrlChecked ctrlClassName ctrlCommit ctrlCommitted " +
              "ctrlCreate ctrlDelete ctrlEnable ctrlEnabled ctrlFade ctrlHTMLLoaded ctrlIDC ctrlIDD " +
              "ctrlMapAnimAdd ctrlMapAnimClear ctrlMapAnimCommit ctrlMapAnimDone ctrlMapCursor ctrlMapMouseOver " +
              "ctrlMapScale ctrlMapScreenToWorld ctrlMapWorldToScreen ctrlModel ctrlModelDirAndUp ctrlModelScale " +
              "ctrlParent ctrlParentControlsGroup ctrlPosition ctrlRemoveAllEventHandlers ctrlRemoveEventHandler " +
              "ctrlScale ctrlSetActiveColor ctrlSetAngle ctrlSetAutoScrollDelay ctrlSetAutoScrollRewind " +
              "ctrlSetAutoScrollSpeed ctrlSetBackgroundColor ctrlSetChecked ctrlSetEventHandler ctrlSetFade " +
              "ctrlSetFocus ctrlSetFont ctrlSetFontH1 ctrlSetFontH1B ctrlSetFontH2 ctrlSetFontH2B ctrlSetFontH3 " +
              "ctrlSetFontH3B ctrlSetFontH4 ctrlSetFontH4B ctrlSetFontH5 ctrlSetFontH5B ctrlSetFontH6 " +
              "ctrlSetFontH6B ctrlSetFontHeight ctrlSetFontHeightH1 ctrlSetFontHeightH2 ctrlSetFontHeightH3 " +
              "ctrlSetFontHeightH4 ctrlSetFontHeightH5 ctrlSetFontHeightH6 ctrlSetFontHeightSecondary " +
              "ctrlSetFontP ctrlSetFontPB ctrlSetFontSecondary ctrlSetForegroundColor ctrlSetModel " +
              "ctrlSetModelDirAndUp ctrlSetModelScale ctrlSetPosition ctrlSetScale ctrlSetStructuredText " +
              "ctrlSetText ctrlSetTextColor ctrlSetTooltip ctrlSetTooltipColorBox ctrlSetTooltipColorShade " +
              "ctrlSetTooltipColorText ctrlShow ctrlShown ctrlText ctrlTextHeight ctrlType ctrlVisible " +
              "curatorAddons curatorCamera curatorCameraArea curatorCameraAreaCeiling curatorCoef " +
              "curatorEditableObjects curatorEditingArea curatorEditingAreaType curatorMouseOver curatorPoints " +
              "curatorRegisteredObjects curatorSelected curatorWaypointCost current3DENOperation currentChannel " +
              "currentCommand currentMagazine currentMagazineDetail currentMagazineDetailTurret " +
              "currentMagazineTurret currentMuzzle currentNamespace currentTask currentTasks currentThrowable " +
              "currentVisionMode currentWaypoint currentWeapon currentWeaponMode currentWeaponTurret " +
              "currentZeroing cursorObject cursorTarget customChat customRadio cutFadeOut cutObj cutRsc cutText " +
              "damage date dateToNumber daytime deActivateKey debriefingText debugFSM debugLog deg " +
              "delete3DENEntities deleteAt deleteCenter deleteCollection deleteEditorObject deleteGroup " +
              "deleteIdentity deleteLocation deleteMarker deleteMarkerLocal deleteRange deleteResources " +
              "deleteSite deleteStatus deleteTeam deleteVehicle deleteVehicleCrew deleteWaypoint detach " +
              "detectedMines diag_activeMissionFSMs diag_activeScripts diag_activeSQFScripts " +
              "diag_activeSQSScripts diag_captureFrame diag_captureSlowFrame diag_codePerformance diag_drawMode " +
              "diag_enable diag_enabled diag_fps diag_fpsMin diag_frameNo diag_list diag_log diag_logSlowFrame " +
              "diag_mergeConfigFile diag_recordTurretLimits diag_tickTime diag_toggle dialog diarySubjectExists " +
              "didJIP didJIPOwner difficulty difficultyEnabled difficultyEnabledRTD difficultyOption direction " +
              "directSay disableAI disableCollisionWith disableConversation disableDebriefingStats " +
              "disableNVGEquipment disableRemoteSensors disableSerialization disableTIEquipment " +
              "disableUAVConnectability disableUserInput displayAddEventHandler displayCtrl displayNull " +
              "displayParent displayRemoveAllEventHandlers displayRemoveEventHandler displaySetEventHandler " +
              "dissolveTeam distance distance2D distanceSqr distributionRegion do3DENAction doArtilleryFire " +
              "doFire doFollow doFSM doGetOut doMove doorPhase doStop doSuppressiveFire doTarget doWatch " +
              "drawArrow drawEllipse drawIcon drawIcon3D drawLine drawLine3D drawLink drawLocation drawPolygon " +
              "drawRectangle driver drop east echo edit3DENMissionAttributes editObject editorSetEventHandler " +
              "effectiveCommander emptyPositions enableAI enableAIFeature enableAimPrecision enableAttack " +
              "enableAudioFeature enableCamShake enableCaustics enableChannel enableCollisionWith enableCopilot " +
              "enableDebriefingStats enableDiagLegend enableEndDialog enableEngineArtillery enableEnvironment " +
              "enableFatigue enableGunLights enableIRLasers enableMimics enablePersonTurret enableRadio " +
              "enableReload enableRopeAttach enableSatNormalOnDetail enableSaving enableSentences " +
              "enableSimulation enableSimulationGlobal enableStamina enableTeamSwitch enableUAVConnectability " +
              "enableUAVWaypoints enableVehicleCargo endLoadingScreen endMission engineOn enginesIsOnRTD " +
              "enginesRpmRTD enginesTorqueRTD entities estimatedEndServerTime estimatedTimeLeft " +
              "evalObjectArgument everyBackpack everyContainer exec execEditorScript execFSM execVM exp " +
              "expectedDestination exportJIPMessages eyeDirection eyePos face faction fadeMusic fadeRadio " +
              "fadeSound fadeSpeech failMission fillWeaponsFromPool find findCover findDisplay findEditorObject " +
              "findEmptyPosition findEmptyPositionReady findNearestEnemy finishMissionInit finite fire " +
              "fireAtTarget firstBackpack flag flagOwner flagSide flagTexture fleeing floor flyInHeight " +
              "flyInHeightASL fog fogForecast fogParams forceAddUniform forcedMap forceEnd forceMap forceRespawn " +
              "forceSpeed forceWalk forceWeaponFire forceWeatherChange forEachMember forEachMemberAgent " +
              "forEachMemberTeam format formation formationDirection formationLeader formationMembers " +
              "formationPosition formationTask formatText formLeader freeLook fromEditor fuel fullCrew " +
              "gearIDCAmmoCount gearSlotAmmoCount gearSlotData get3DENActionState get3DENAttribute get3DENCamera " +
              "get3DENConnections get3DENEntity get3DENEntityID get3DENGrid get3DENIconsVisible " +
              "get3DENLayerEntities get3DENLinesVisible get3DENMissionAttribute get3DENMouseOver get3DENSelected " +
              "getAimingCoef getAllHitPointsDamage getAllOwnedMines getAmmoCargo getAnimAimPrecision " +
              "getAnimSpeedCoef getArray getArtilleryAmmo getArtilleryComputerSettings getArtilleryETA " +
              "getAssignedCuratorLogic getAssignedCuratorUnit getBackpackCargo getBleedingRemaining " +
              "getBurningValue getCameraViewDirection getCargoIndex getCenterOfMass getClientState " +
              "getClientStateNumber getConnectedUAV getCustomAimingCoef getDammage getDescription getDir " +
              "getDirVisual getDLCs getEditorCamera getEditorMode getEditorObjectScope getElevationOffset " +
              "getFatigue getFriend getFSMVariable getFuelCargo getGroupIcon getGroupIconParams getGroupIcons " +
              "getHideFrom getHit getHitIndex getHitPointDamage getItemCargo getMagazineCargo getMarkerColor " +
              "getMarkerPos getMarkerSize getMarkerType getMass getMissionConfig getMissionConfigValue " +
              "getMissionDLCs getMissionLayerEntities getModelInfo getMousePosition getNumber getObjectArgument " +
              "getObjectChildren getObjectDLC getObjectMaterials getObjectProxy getObjectTextures getObjectType " +
              "getObjectViewDistance getOxygenRemaining getPersonUsedDLCs getPilotCameraDirection " +
              "getPilotCameraPosition getPilotCameraRotation getPilotCameraTarget getPlayerChannel " +
              "getPlayerScores getPlayerUID getPos getPosASL getPosASLVisual getPosASLW getPosATL " +
              "getPosATLVisual getPosVisual getPosWorld getRelDir getRelPos getRemoteSensorsDisabled " +
              "getRepairCargo getResolution getShadowDistance getShotParents getSlingLoad getSpeed getStamina " +
              "getStatValue getSuppression getTerrainHeightASL getText getUnitLoadout getUnitTrait getVariable " +
              "getVehicleCargo getWeaponCargo getWeaponSway getWPPos glanceAt globalChat globalRadio goggles " +
              "goto group groupChat groupFromNetId groupIconSelectable groupIconsVisible groupId groupOwner " +
              "groupRadio groupSelectedUnits groupSelectUnit grpNull gunner gusts halt handgunItems " +
              "handgunMagazine handgunWeapon handsHit hasInterface hasPilotCamera hasWeapon hcAllGroups " +
              "hcGroupParams hcLeader hcRemoveAllGroups hcRemoveGroup hcSelected hcSelectGroup hcSetGroup " +
              "hcShowBar hcShownBar headgear hideBody hideObject hideObjectGlobal hideSelection hint hintC " +
              "hintCadet hintSilent hmd hostMission htmlLoad HUDMovementLevels humidity image importAllGroups " +
              "importance in inArea inAreaArray incapacitatedState independent inflame inflamed " +
              "inGameUISetEventHandler inheritsFrom initAmbientLife inPolygon inputAction inRangeOfArtillery " +
              "insertEditorObject intersect is3DEN is3DENMultiplayer isAbleToBreathe isAgent isArray " +
              "isAutoHoverOn isAutonomous isAutotest isBleeding isBurning isClass isCollisionLightOn " +
              "isCopilotEnabled isDedicated isDLCAvailable isEngineOn isEqualTo isEqualType isEqualTypeAll " +
              "isEqualTypeAny isEqualTypeArray isEqualTypeParams isFilePatchingEnabled isFlashlightOn " +
              "isFlatEmpty isForcedWalk isFormationLeader isHidden isInRemainsCollector " +
              "isInstructorFigureEnabled isIRLaserOn isKeyActive isKindOf isLightOn isLocalized isManualFire " +
              "isMarkedForCollection isMultiplayer isMultiplayerSolo isNil isNull isNumber isObjectHidden " +
              "isObjectRTD isOnRoad isPipEnabled isPlayer isRealTime isRemoteExecuted isRemoteExecutedJIP " +
              "isServer isShowing3DIcons isSprintAllowed isStaminaEnabled isSteamMission " +
              "isStreamFriendlyUIEnabled isText isTouchingGround isTurnedOut isTutHintsEnabled isUAVConnectable " +
              "isUAVConnected isUniformAllowed isVehicleCargo isWalking isWeaponDeployed isWeaponRested " +
              "itemCargo items itemsWithMagazines join joinAs joinAsSilent joinSilent joinString kbAddDatabase " +
              "kbAddDatabaseTargets kbAddTopic kbHasTopic kbReact kbRemoveTopic kbTell kbWasSaid keyImage " +
              "keyName knowsAbout land landAt landResult language laserTarget lbAdd lbClear lbColor lbCurSel " +
              "lbData lbDelete lbIsSelected lbPicture lbSelection lbSetColor lbSetCurSel lbSetData lbSetPicture " +
              "lbSetPictureColor lbSetPictureColorDisabled lbSetPictureColorSelected lbSetSelectColor " +
              "lbSetSelectColorRight lbSetSelected lbSetTooltip lbSetValue lbSize lbSort lbSortByValue lbText " +
              "lbValue leader leaderboardDeInit leaderboardGetRows leaderboardInit leaveVehicle libraryCredits " +
              "libraryDisclaimers lifeState lightAttachObject lightDetachObject lightIsOn lightnings limitSpeed " +
              "linearConversion lineBreak lineIntersects lineIntersectsObjs lineIntersectsSurfaces " +
              "lineIntersectsWith linkItem list listObjects ln lnbAddArray lnbAddColumn lnbAddRow lnbClear " +
              "lnbColor lnbCurSelRow lnbData lnbDeleteColumn lnbDeleteRow lnbGetColumnsPosition lnbPicture " +
              "lnbSetColor lnbSetColumnsPos lnbSetCurSelRow lnbSetData lnbSetPicture lnbSetText lnbSetValue " +
              "lnbSize lnbText lnbValue load loadAbs loadBackpack loadFile loadGame loadIdentity loadMagazine " +
              "loadOverlay loadStatus loadUniform loadVest local localize locationNull locationPosition lock " +
              "lockCameraTo lockCargo lockDriver locked lockedCargo lockedDriver lockedTurret lockIdentity " +
              "lockTurret lockWP log logEntities logNetwork logNetworkTerminate lookAt lookAtPos magazineCargo " +
              "magazines magazinesAllTurrets magazinesAmmo magazinesAmmoCargo magazinesAmmoFull magazinesDetail " +
              "magazinesDetailBackpack magazinesDetailUniform magazinesDetailVest magazinesTurret " +
              "magazineTurretAmmo mapAnimAdd mapAnimClear mapAnimCommit mapAnimDone mapCenterOnCamera " +
              "mapGridPosition markAsFinishedOnSteam markerAlpha markerBrush markerColor markerDir markerPos " +
              "markerShape markerSize markerText markerType max members menuAction menuAdd menuChecked menuClear " +
              "menuCollapse menuData menuDelete menuEnable menuEnabled menuExpand menuHover menuPicture " +
              "menuSetAction menuSetCheck menuSetData menuSetPicture menuSetValue menuShortcut menuShortcutText " +
              "menuSize menuSort menuText menuURL menuValue min mineActive mineDetectedBy missionConfigFile " +
              "missionDifficulty missionName missionNamespace missionStart missionVersion mod modelToWorld " +
              "modelToWorldVisual modParams moonIntensity moonPhase morale move move3DENCamera moveInAny " +
              "moveInCargo moveInCommander moveInDriver moveInGunner moveInTurret moveObjectToEnd moveOut " +
              "moveTime moveTo moveToCompleted moveToFailed musicVolume name nameSound nearEntities " +
              "nearestBuilding nearestLocation nearestLocations nearestLocationWithDubbing nearestObject " +
              "nearestObjects nearestTerrainObjects nearObjects nearObjectsReady nearRoads nearSupplies " +
              "nearTargets needReload netId netObjNull newOverlay nextMenuItemIndex nextWeatherChange nMenuItems " +
              "not numberToDate objectCurators objectFromNetId objectParent objNull objStatus onBriefingGroup " +
              "onBriefingNotes onBriefingPlan onBriefingTeamSwitch onCommandModeChanged onDoubleClick " +
              "onEachFrame onGroupIconClick onGroupIconOverEnter onGroupIconOverLeave onHCGroupSelectionChanged " +
              "onMapSingleClick onPlayerConnected onPlayerDisconnected onPreloadFinished onPreloadStarted " +
              "onShowNewObject onTeamSwitch openCuratorInterface openDLCPage openMap openYoutubeVideo opfor or " +
              "orderGetIn overcast overcastForecast owner param params parseNumber parseText parsingNamespace " +
              "particlesQuality pi pickWeaponPool pitch pixelGrid pixelGridBase pixelGridNoUIScale pixelH pixelW " +
              "playableSlotsNumber playableUnits playAction playActionNow player playerRespawnTime playerSide " +
              "playersNumber playGesture playMission playMove playMoveNow playMusic playScriptedMission " +
              "playSound playSound3D position positionCameraToWorld posScreenToWorld posWorldToScreen " +
              "ppEffectAdjust ppEffectCommit ppEffectCommitted ppEffectCreate ppEffectDestroy ppEffectEnable " +
              "ppEffectEnabled ppEffectForceInNVG precision preloadCamera preloadObject preloadSound " +
              "preloadTitleObj preloadTitleRsc preprocessFile preprocessFileLineNumbers primaryWeapon " +
              "primaryWeaponItems primaryWeaponMagazine priority private processDiaryLink productVersion " +
              "profileName profileNamespace profileNameSteam progressLoadingScreen progressPosition " +
              "progressSetPosition publicVariable publicVariableClient publicVariableServer pushBack " +
              "pushBackUnique putWeaponPool queryItemsPool queryMagazinePool queryWeaponPool rad radioChannelAdd " +
              "radioChannelCreate radioChannelRemove radioChannelSetCallSign radioChannelSetLabel radioVolume " +
              "rain rainbow random rank rankId rating rectangular registeredTasks registerTask reload " +
              "reloadEnabled remoteControl remoteExec remoteExecCall remove3DENConnection remove3DENEventHandler " +
              "remove3DENLayer removeAction removeAll3DENEventHandlers removeAllActions removeAllAssignedItems " +
              "removeAllContainers removeAllCuratorAddons removeAllCuratorCameraAreas " +
              "removeAllCuratorEditingAreas removeAllEventHandlers removeAllHandgunItems removeAllItems " +
              "removeAllItemsWithMagazines removeAllMissionEventHandlers removeAllMPEventHandlers " +
              "removeAllMusicEventHandlers removeAllOwnedMines removeAllPrimaryWeaponItems removeAllWeapons " +
              "removeBackpack removeBackpackGlobal removeCuratorAddons removeCuratorCameraArea " +
              "removeCuratorEditableObjects removeCuratorEditingArea removeDrawIcon removeDrawLinks " +
              "removeEventHandler removeFromRemainsCollector removeGoggles removeGroupIcon removeHandgunItem " +
              "removeHeadgear removeItem removeItemFromBackpack removeItemFromUniform removeItemFromVest " +
              "removeItems removeMagazine removeMagazineGlobal removeMagazines removeMagazinesTurret " +
              "removeMagazineTurret removeMenuItem removeMissionEventHandler removeMPEventHandler " +
              "removeMusicEventHandler removeOwnedMine removePrimaryWeaponItem removeSecondaryWeaponItem " +
              "removeSimpleTask removeSwitchableUnit removeTeamMember removeUniform removeVest removeWeapon " +
              "removeWeaponGlobal removeWeaponTurret requiredVersion resetCamShake resetSubgroupDirection " +
              "resistance resize resources respawnVehicle restartEditorCamera reveal revealMine reverse " +
              "reversedMouseY roadAt roadsConnectedTo roleDescription ropeAttachedObjects ropeAttachedTo " +
              "ropeAttachEnabled ropeAttachTo ropeCreate ropeCut ropeDestroy ropeDetach ropeEndPosition " +
              "ropeLength ropes ropeUnwind ropeUnwound rotorsForcesRTD rotorsRpmRTD round runInitScript " +
              "safeZoneH safeZoneW safeZoneWAbs safeZoneX safeZoneXAbs safeZoneY save3DENInventory saveGame " +
              "saveIdentity saveJoysticks saveOverlay saveProfileNamespace saveStatus saveVar savingEnabled say " +
              "say2D say3D scopeName score scoreSide screenshot screenToWorld scriptDone scriptName scriptNull " +
              "scudState secondaryWeapon secondaryWeaponItems secondaryWeaponMagazine select selectBestPlaces " +
              "selectDiarySubject selectedEditorObjects selectEditorObject selectionNames selectionPosition " +
              "selectLeader selectMax selectMin selectNoPlayer selectPlayer selectRandom selectWeapon " +
              "selectWeaponTurret sendAUMessage sendSimpleCommand sendTask sendTaskResult sendUDPMessage " +
              "serverCommand serverCommandAvailable serverCommandExecutable serverName serverTime set " +
              "set3DENAttribute set3DENAttributes set3DENGrid set3DENIconsVisible set3DENLayer " +
              "set3DENLinesVisible set3DENMissionAttributes set3DENModelsVisible set3DENObjectType " +
              "set3DENSelected setAccTime setAirportSide setAmmo setAmmoCargo setAnimSpeedCoef setAperture " +
              "setApertureNew setArmoryPoints setAttributes setAutonomous setBehaviour setBleedingRemaining " +
              "setCameraInterest setCamShakeDefParams setCamShakeParams setCamUseTi setCaptive setCenterOfMass " +
              "setCollisionLight setCombatMode setCompassOscillation setCuratorCameraAreaCeiling setCuratorCoef " +
              "setCuratorEditingAreaType setCuratorWaypointCost setCurrentChannel setCurrentTask " +
              "setCurrentWaypoint setCustomAimCoef setDamage setDammage setDate setDebriefingText " +
              "setDefaultCamera setDestination setDetailMapBlendPars setDir setDirection setDrawIcon " +
              "setDropInterval setEditorMode setEditorObjectScope setEffectCondition setFace setFaceAnimation " +
              "setFatigue setFlagOwner setFlagSide setFlagTexture setFog setFormation setFormationTask " +
              "setFormDir setFriend setFromEditor setFSMVariable setFuel setFuelCargo setGroupIcon " +
              "setGroupIconParams setGroupIconsSelectable setGroupIconsVisible setGroupId setGroupIdGlobal " +
              "setGroupOwner setGusts setHideBehind setHit setHitIndex setHitPointDamage setHorizonParallaxCoef " +
              "setHUDMovementLevels setIdentity setImportance setLeader setLightAmbient setLightAttenuation " +
              "setLightBrightness setLightColor setLightDayLight setLightFlareMaxDistance setLightFlareSize " +
              "setLightIntensity setLightnings setLightUseFlare setLocalWindParams setMagazineTurretAmmo " +
              "setMarkerAlpha setMarkerAlphaLocal setMarkerBrush setMarkerBrushLocal setMarkerColor " +
              "setMarkerColorLocal setMarkerDir setMarkerDirLocal setMarkerPos setMarkerPosLocal setMarkerShape " +
              "setMarkerShapeLocal setMarkerSize setMarkerSizeLocal setMarkerText setMarkerTextLocal " +
              "setMarkerType setMarkerTypeLocal setMass setMimic setMousePosition setMusicEffect " +
              "setMusicEventHandler setName setNameSound setObjectArguments setObjectMaterial " +
              "setObjectMaterialGlobal setObjectProxy setObjectTexture setObjectTextureGlobal " +
              "setObjectViewDistance setOvercast setOwner setOxygenRemaining setParticleCircle setParticleClass " +
              "setParticleFire setParticleParams setParticleRandom setPilotCameraDirection " +
              "setPilotCameraRotation setPilotCameraTarget setPilotLight setPiPEffect setPitch setPlayable " +
              "setPlayerRespawnTime setPos setPosASL setPosASL2 setPosASLW setPosATL setPosition setPosWorld " +
              "setRadioMsg setRain setRainbow setRandomLip setRank setRectangular setRepairCargo " +
              "setShadowDistance setShotParents setSide setSimpleTaskAlwaysVisible setSimpleTaskCustomData " +
              "setSimpleTaskDescription setSimpleTaskDestination setSimpleTaskTarget setSimpleTaskType " +
              "setSimulWeatherLayers setSize setSkill setSlingLoad setSoundEffect setSpeaker setSpeech " +
              "setSpeedMode setStamina setStaminaScheme setStatValue setSuppression setSystemOfUnits " +
              "setTargetAge setTaskResult setTaskState setTerrainGrid setText setTimeMultiplier setTitleEffect " +
              "setTriggerActivation setTriggerArea setTriggerStatements setTriggerText setTriggerTimeout " +
              "setTriggerType setType setUnconscious setUnitAbility setUnitLoadout setUnitPos setUnitPosWeak " +
              "setUnitRank setUnitRecoilCoefficient setUnitTrait setUnloadInCombat setUserActionText setVariable " +
              "setVectorDir setVectorDirAndUp setVectorUp setVehicleAmmo setVehicleAmmoDef setVehicleArmor " +
              "setVehicleCargo setVehicleId setVehicleLock setVehiclePosition setVehicleTiPars setVehicleVarName " +
              "setVelocity setVelocityTransformation setViewDistance setVisibleIfTreeCollapsed setWaves " +
              "setWaypointBehaviour setWaypointCombatMode setWaypointCompletionRadius setWaypointDescription " +
              "setWaypointForceBehaviour setWaypointFormation setWaypointHousePosition setWaypointLoiterRadius " +
              "setWaypointLoiterType setWaypointName setWaypointPosition setWaypointScript setWaypointSpeed " +
              "setWaypointStatements setWaypointTimeout setWaypointType setWaypointVisible " +
              "setWeaponReloadingTime setWind setWindDir setWindForce setWindStr setWPPos show3DIcons showChat " +
              "showCinemaBorder showCommandingMenu showCompass showCuratorCompass showGPS showHUD showLegend " +
              "showMap shownArtilleryComputer shownChat shownCompass shownCuratorCompass showNewEditorObject " +
              "shownGPS shownHUD shownMap shownPad shownRadio shownScoretable shownUAVFeed shownWarrant " +
              "shownWatch showPad showRadio showScoretable showSubtitles showUAVFeed showWarrant showWatch " +
              "showWaypoint showWaypoints side sideAmbientLife sideChat sideEmpty sideEnemy sideFriendly " +
              "sideLogic sideRadio sideUnknown simpleTasks simulationEnabled simulCloudDensity " +
              "simulCloudOcclusion simulInClouds simulWeatherSync sin size sizeOf skill skillFinal skipTime " +
              "sleep sliderPosition sliderRange sliderSetPosition sliderSetRange sliderSetSpeed sliderSpeed " +
              "slingLoadAssistantShown soldierMagazines someAmmo sort soundVolume spawn speaker speed speedMode " +
              "splitString sqrt squadParams stance startLoadingScreen step stop stopEngineRTD stopped str " +
              "sunOrMoon supportInfo suppressFor surfaceIsWater surfaceNormal surfaceType swimInDepth " +
              "switchableUnits switchAction switchCamera switchGesture switchLight switchMove " +
              "synchronizedObjects synchronizedTriggers synchronizedWaypoints synchronizeObjectsAdd " +
              "synchronizeObjectsRemove synchronizeTrigger synchronizeWaypoint systemChat systemOfUnits tan " +
              "targetKnowledge targetsAggregate targetsQuery taskAlwaysVisible taskChildren taskCompleted " +
              "taskCustomData taskDescription taskDestination taskHint taskMarkerOffset taskNull taskParent " +
              "taskResult taskState taskType teamMember teamMemberNull teamName teams teamSwitch " +
              "teamSwitchEnabled teamType terminate terrainIntersect terrainIntersectASL text textLog " +
              "textLogFormat tg time timeMultiplier titleCut titleFadeOut titleObj titleRsc titleText toArray " +
              "toFixed toLower toString toUpper triggerActivated triggerActivation triggerArea " +
              "triggerAttachedVehicle triggerAttachObject triggerAttachVehicle triggerStatements triggerText " +
              "triggerTimeout triggerTimeoutCurrent triggerType turretLocal turretOwner turretUnit tvAdd tvClear " +
              "tvCollapse tvCount tvCurSel tvData tvDelete tvExpand tvPicture tvSetCurSel tvSetData tvSetPicture " +
              "tvSetPictureColor tvSetPictureColorDisabled tvSetPictureColorSelected tvSetPictureRight " +
              "tvSetPictureRightColor tvSetPictureRightColorDisabled tvSetPictureRightColorSelected tvSetText " +
              "tvSetTooltip tvSetValue tvSort tvSortByValue tvText tvTooltip tvValue type typeName typeOf " +
              "UAVControl uiNamespace uiSleep unassignCurator unassignItem unassignTeam unassignVehicle " +
              "underwater uniform uniformContainer uniformItems uniformMagazines unitAddons unitAimPosition " +
              "unitAimPositionVisual unitBackpack unitIsUAV unitPos unitReady unitRecoilCoefficient units " +
              "unitsBelowHeight unlinkItem unlockAchievement unregisterTask updateDrawIcon updateMenuItem " +
              "updateObjectTree useAISteeringComponent useAudioTimeForMoves vectorAdd vectorCos " +
              "vectorCrossProduct vectorDiff vectorDir vectorDirVisual vectorDistance vectorDistanceSqr " +
              "vectorDotProduct vectorFromTo vectorMagnitude vectorMagnitudeSqr vectorMultiply vectorNormalized " +
              "vectorUp vectorUpVisual vehicle vehicleCargoEnabled vehicleChat vehicleRadio vehicles " +
              "vehicleVarName velocity velocityModelSpace verifySignature vest vestContainer vestItems " +
              "vestMagazines viewDistance visibleCompass visibleGPS visibleMap visiblePosition " +
              "visiblePositionASL visibleScoretable visibleWatch waves waypointAttachedObject " +
              "waypointAttachedVehicle waypointAttachObject waypointAttachVehicle waypointBehaviour " +
              "waypointCombatMode waypointCompletionRadius waypointDescription waypointForceBehaviour " +
              "waypointFormation waypointHousePosition waypointLoiterRadius waypointLoiterType waypointName " +
              "waypointPosition waypoints waypointScript waypointsEnabledUAV waypointShow waypointSpeed " +
              "waypointStatements waypointTimeout waypointTimeoutCurrent waypointType waypointVisible " +
              "weaponAccessories weaponAccessoriesCargo weaponCargo weaponDirection weaponInertia weaponLowered " +
              "weapons weaponsItems weaponsItemsCargo weaponState weaponsTurret weightRTD west WFSideText wind",
            literal: "true false nil"
          },
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.NUMBER_MODE,
            VARIABLE,
            FUNCTION,
            STRINGS,
            CPP.preprocessor
          ],
          illegal: /#/
        };
      };

      /***/
    },
    /* 180 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var COMMENT_MODE = hljs.COMMENT("--", "$");
        return {
          case_insensitive: true,
          illegal: /[<>{}*#]/,
          contains: [
            {
              beginKeywords:
                "begin end start commit rollback savepoint lock alter create drop rename call " +
                "delete do handler insert load replace select truncate update set show pragma grant " +
                "merge describe use explain help declare prepare execute deallocate release " +
                "unlock purge reset change stop analyze cache flush optimize repair kill " +
                "install uninstall checksum restore check backup revoke comment",
              end: /;/,
              endsWithParent: true,
              lexemes: /[\w\.]+/,
              keywords: {
                keyword:
                  "abort abs absolute acc acce accep accept access accessed accessible account acos action activate add " +
                  "addtime admin administer advanced advise aes_decrypt aes_encrypt after agent aggregate ali alia alias " +
                  "allocate allow alter always analyze ancillary and any anydata anydataset anyschema anytype apply " +
                  "archive archived archivelog are as asc ascii asin assembly assertion associate asynchronous at atan " +
                  "atn2 attr attri attrib attribu attribut attribute attributes audit authenticated authentication authid " +
                  "authors auto autoallocate autodblink autoextend automatic availability avg backup badfile basicfile " +
                  "before begin beginning benchmark between bfile bfile_base big bigfile bin binary_double binary_float " +
                  "binlog bit_and bit_count bit_length bit_or bit_xor bitmap blob_base block blocksize body both bound " +
                  "buffer_cache buffer_pool build bulk by byte byteordermark bytes cache caching call calling cancel " +
                  "capacity cascade cascaded case cast catalog category ceil ceiling chain change changed char_base " +
                  "char_length character_length characters characterset charindex charset charsetform charsetid check " +
                  "checksum checksum_agg child choose chr chunk class cleanup clear client clob clob_base clone close " +
                  "cluster_id cluster_probability cluster_set clustering coalesce coercibility col collate collation " +
                  "collect colu colum column column_value columns columns_updated comment commit compact compatibility " +
                  "compiled complete composite_limit compound compress compute concat concat_ws concurrent confirm conn " +
                  "connec connect connect_by_iscycle connect_by_isleaf connect_by_root connect_time connection " +
                  "consider consistent constant constraint constraints constructor container content contents context " +
                  "contributors controlfile conv convert convert_tz corr corr_k corr_s corresponding corruption cos cost " +
                  "count count_big counted covar_pop covar_samp cpu_per_call cpu_per_session crc32 create creation " +
                  "critical cross cube cume_dist curdate current current_date current_time current_timestamp current_user " +
                  "cursor curtime customdatum cycle data database databases datafile datafiles datalength date_add " +
                  "date_cache date_format date_sub dateadd datediff datefromparts datename datepart datetime2fromparts " +
                  "day day_to_second dayname dayofmonth dayofweek dayofyear days db_role_change dbtimezone ddl deallocate " +
                  "declare decode decompose decrement decrypt deduplicate def defa defau defaul default defaults " +
                  "deferred defi defin define degrees delayed delegate delete delete_all delimited demand dense_rank " +
                  "depth dequeue des_decrypt des_encrypt des_key_file desc descr descri describ describe descriptor " +
                  "deterministic diagnostics difference dimension direct_load directory disable disable_all " +
                  "disallow disassociate discardfile disconnect diskgroup distinct distinctrow distribute distributed div " +
                  "do document domain dotnet double downgrade drop dumpfile duplicate duration each edition editionable " +
                  "editions element ellipsis else elsif elt empty enable enable_all enclosed encode encoding encrypt " +
                  "end end-exec endian enforced engine engines enqueue enterprise entityescaping eomonth error errors " +
                  "escaped evalname evaluate event eventdata events except exception exceptions exchange exclude excluding " +
                  "execu execut execute exempt exists exit exp expire explain export export_set extended extent external " +
                  "external_1 external_2 externally extract failed failed_login_attempts failover failure far fast " +
                  "feature_set feature_value fetch field fields file file_name_convert filesystem_like_logging final " +
                  "finish first first_value fixed flash_cache flashback floor flush following follows for forall force " +
                  "form forma format found found_rows freelist freelists freepools fresh from from_base64 from_days " +
                  "ftp full function general generated get get_format get_lock getdate getutcdate global global_name " +
                  "globally go goto grant grants greatest group group_concat group_id grouping grouping_id groups " +
                  "gtid_subtract guarantee guard handler hash hashkeys having hea head headi headin heading heap help hex " +
                  "hierarchy high high_priority hosts hour http id ident_current ident_incr ident_seed identified " +
                  "identity idle_time if ifnull ignore iif ilike ilm immediate import in include including increment " +
                  "index indexes indexing indextype indicator indices inet6_aton inet6_ntoa inet_aton inet_ntoa infile " +
                  "initial initialized initially initrans inmemory inner innodb input insert install instance instantiable " +
                  "instr interface interleaved intersect into invalidate invisible is is_free_lock is_ipv4 is_ipv4_compat " +
                  "is_not is_not_null is_used_lock isdate isnull isolation iterate java join json json_exists " +
                  "keep keep_duplicates key keys kill language large last last_day last_insert_id last_value lax lcase " +
                  "lead leading least leaves left len lenght length less level levels library like like2 like4 likec limit " +
                  "lines link list listagg little ln load load_file lob lobs local localtime localtimestamp locate " +
                  "locator lock locked log log10 log2 logfile logfiles logging logical logical_reads_per_call " +
                  "logoff logon logs long loop low low_priority lower lpad lrtrim ltrim main make_set makedate maketime " +
                  "managed management manual map mapping mask master master_pos_wait match matched materialized max " +
                  "maxextents maximize maxinstances maxlen maxlogfiles maxloghistory maxlogmembers maxsize maxtrans " +
                  "md5 measures median medium member memcompress memory merge microsecond mid migration min minextents " +
                  "minimum mining minus minute minvalue missing mod mode model modification modify module monitoring month " +
                  "months mount move movement multiset mutex name name_const names nan national native natural nav nchar " +
                  "nclob nested never new newline next nextval no no_write_to_binlog noarchivelog noaudit nobadfile " +
                  "nocheck nocompress nocopy nocycle nodelay nodiscardfile noentityescaping noguarantee nokeep nologfile " +
                  "nomapping nomaxvalue nominimize nominvalue nomonitoring none noneditionable nonschema noorder " +
                  "nopr nopro noprom nopromp noprompt norely noresetlogs noreverse normal norowdependencies noschemacheck " +
                  "noswitch not nothing notice notrim novalidate now nowait nth_value nullif nulls num numb numbe " +
                  "nvarchar nvarchar2 object ocicoll ocidate ocidatetime ociduration ociinterval ociloblocator ocinumber " +
                  "ociref ocirefcursor ocirowid ocistring ocitype oct octet_length of off offline offset oid oidindex old " +
                  "on online only opaque open operations operator optimal optimize option optionally or oracle oracle_date " +
                  "oradata ord ordaudio orddicom orddoc order ordimage ordinality ordvideo organization orlany orlvary " +
                  "out outer outfile outline output over overflow overriding package pad parallel parallel_enable " +
                  "parameters parent parse partial partition partitions pascal passing password password_grace_time " +
                  "password_lock_time password_reuse_max password_reuse_time password_verify_function patch path patindex " +
                  "pctincrease pctthreshold pctused pctversion percent percent_rank percentile_cont percentile_disc " +
                  "performance period period_add period_diff permanent physical pi pipe pipelined pivot pluggable plugin " +
                  "policy position post_transaction pow power pragma prebuilt precedes preceding precision prediction " +
                  "prediction_cost prediction_details prediction_probability prediction_set prepare present preserve " +
                  "prior priority private private_sga privileges procedural procedure procedure_analyze processlist " +
                  "profiles project prompt protection public publishingservername purge quarter query quick quiesce quota " +
                  "quotename radians raise rand range rank raw read reads readsize rebuild record records " +
                  "recover recovery recursive recycle redo reduced ref reference referenced references referencing refresh " +
                  "regexp_like register regr_avgx regr_avgy regr_count regr_intercept regr_r2 regr_slope regr_sxx regr_sxy " +
                  "reject rekey relational relative relaylog release release_lock relies_on relocate rely rem remainder rename " +
                  "repair repeat replace replicate replication required reset resetlogs resize resource respect restore " +
                  "restricted result result_cache resumable resume retention return returning returns reuse reverse revoke " +
                  "right rlike role roles rollback rolling rollup round row row_count rowdependencies rowid rownum rows " +
                  "rtrim rules safe salt sample save savepoint sb1 sb2 sb4 scan schema schemacheck scn scope scroll " +
                  "sdo_georaster sdo_topo_geometry search sec_to_time second section securefile security seed segment select " +
                  "self sequence sequential serializable server servererror session session_user sessions_per_user set " +
                  "sets settings sha sha1 sha2 share shared shared_pool short show shrink shutdown si_averagecolor " +
                  "si_colorhistogram si_featurelist si_positionalcolor si_stillimage si_texture siblings sid sign sin " +
                  "size size_t sizes skip slave sleep smalldatetimefromparts smallfile snapshot some soname sort soundex " +
                  "source space sparse spfile split sql sql_big_result sql_buffer_result sql_cache sql_calc_found_rows " +
                  "sql_small_result sql_variant_property sqlcode sqldata sqlerror sqlname sqlstate sqrt square standalone " +
                  "standby start starting startup statement static statistics stats_binomial_test stats_crosstab " +
                  "stats_ks_test stats_mode stats_mw_test stats_one_way_anova stats_t_test_ stats_t_test_indep " +
                  "stats_t_test_one stats_t_test_paired stats_wsr_test status std stddev stddev_pop stddev_samp stdev " +
                  "stop storage store stored str str_to_date straight_join strcmp strict string struct stuff style subdate " +
                  "subpartition subpartitions substitutable substr substring subtime subtring_index subtype success sum " +
                  "suspend switch switchoffset switchover sync synchronous synonym sys sys_xmlagg sysasm sysaux sysdate " +
                  "sysdatetimeoffset sysdba sysoper system system_user sysutcdatetime table tables tablespace tan tdo " +
                  "template temporary terminated tertiary_weights test than then thread through tier ties time time_format " +
                  "time_zone timediff timefromparts timeout timestamp timestampadd timestampdiff timezone_abbr " +
                  "timezone_minute timezone_region to to_base64 to_date to_days to_seconds todatetimeoffset trace tracking " +
                  "transaction transactional translate translation treat trigger trigger_nestlevel triggers trim truncate " +
                  "try_cast try_convert try_parse type ub1 ub2 ub4 ucase unarchived unbounded uncompress " +
                  "under undo unhex unicode uniform uninstall union unique unix_timestamp unknown unlimited unlock unpivot " +
                  "unrecoverable unsafe unsigned until untrusted unusable unused update updated upgrade upped upper upsert " +
                  "url urowid usable usage use use_stored_outlines user user_data user_resources users using utc_date " +
                  "utc_timestamp uuid uuid_short validate validate_password_strength validation valist value values var " +
                  "var_samp varcharc vari varia variab variabl variable variables variance varp varraw varrawc varray " +
                  "verify version versions view virtual visible void wait wallet warning warnings week weekday weekofyear " +
                  "wellformed when whene whenev wheneve whenever where while whitespace with within without work wrapped " +
                  "xdb xml xmlagg xmlattributes xmlcast xmlcolattval xmlelement xmlexists xmlforest xmlindex xmlnamespaces " +
                  "xmlpi xmlquery xmlroot xmlschema xmlserialize xmltable xmltype xor year year_to_month years yearweek",
                literal: "true false null",
                built_in:
                  "array bigint binary bit blob boolean char character date dec decimal float int int8 integer interval number " +
                  "numeric real record serial serial8 smallint text varchar varying void"
              },
              contains: [
                {
                  className: "string",
                  begin: "'",
                  end: "'",
                  contains: [hljs.BACKSLASH_ESCAPE, { begin: "''" }]
                },
                {
                  className: "string",
                  begin: '"',
                  end: '"',
                  contains: [hljs.BACKSLASH_ESCAPE, { begin: '""' }]
                },
                {
                  className: "string",
                  begin: "`",
                  end: "`",
                  contains: [hljs.BACKSLASH_ESCAPE]
                },
                hljs.C_NUMBER_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                COMMENT_MODE
              ]
            },
            hljs.C_BLOCK_COMMENT_MODE,
            COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 181 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            hljs.HASH_COMMENT_MODE,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              begin: hljs.UNDERSCORE_IDENT_RE,
              lexemes: hljs.UNDERSCORE_IDENT_RE,
              keywords: {
                // Stan's keywords
                name: "for in while repeat until if then else",
                // Stan's probablity distributions (less beta and gamma, as commonly
                // used for parameter names). So far, _log and _rng variants are not
                // included
                symbol:
                  "bernoulli bernoulli_logit binomial binomial_logit " +
                  "beta_binomial hypergeometric categorical categorical_logit " +
                  "ordered_logistic neg_binomial neg_binomial_2 " +
                  "neg_binomial_2_log poisson poisson_log multinomial normal " +
                  "exp_mod_normal skew_normal student_t cauchy double_exponential " +
                  "logistic gumbel lognormal chi_square inv_chi_square " +
                  "scaled_inv_chi_square exponential inv_gamma weibull frechet " +
                  "rayleigh wiener pareto pareto_type_2 von_mises uniform " +
                  "multi_normal multi_normal_prec multi_normal_cholesky multi_gp " +
                  "multi_gp_cholesky multi_student_t gaussian_dlm_obs dirichlet " +
                  "lkj_corr lkj_corr_cholesky wishart inv_wishart",
                // Stan's data types
                "selector-tag":
                  "int real vector simplex unit_vector ordered positive_ordered " +
                  "row_vector matrix cholesky_factor_corr cholesky_factor_cov " +
                  "corr_matrix cov_matrix",
                // Stan's model blocks
                title:
                  "functions model data parameters quantities transformed " +
                  "generated",
                literal: "true false"
              },
              relevance: 0
            },
            // The below is all taken from the R language definition
            {
              // hex value
              className: "number",
              begin: "0[xX][0-9a-fA-F]+[Li]?\\b",
              relevance: 0
            },
            {
              // hex value
              className: "number",
              begin: "0[xX][0-9a-fA-F]+[Li]?\\b",
              relevance: 0
            },
            {
              // explicit integer
              className: "number",
              begin: "\\d+(?:[eE][+\\-]?\\d*)?L\\b",
              relevance: 0
            },
            {
              // number with trailing decimal
              className: "number",
              begin: "\\d+\\.(?!\\d)(?:i\\b)?",
              relevance: 0
            },
            {
              // number
              className: "number",
              begin: "\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d*)?i?\\b",
              relevance: 0
            },
            {
              // number with leading decimal
              className: "number",
              begin: "\\.\\d+(?:[eE][+\\-]?\\d*)?i?\\b",
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 182 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["do", "ado"],
          case_insensitive: true,
          keywords:
            "if else in foreach for forv forva forval forvalu forvalue forvalues by bys bysort xi quietly qui capture about ac ac_7 acprplot acprplot_7 adjust ado adopath adoupdate alpha ameans an ano anov anova anova_estat anova_terms anovadef aorder ap app appe appen append arch arch_dr arch_estat arch_p archlm areg areg_p args arima arima_dr arima_estat arima_p as asmprobit asmprobit_estat asmprobit_lf asmprobit_mfx__dlg asmprobit_p ass asse asser assert avplot avplot_7 avplots avplots_7 bcskew0 bgodfrey binreg bip0_lf biplot bipp_lf bipr_lf bipr_p biprobit bitest bitesti bitowt blogit bmemsize boot bootsamp bootstrap bootstrap_8 boxco_l boxco_p boxcox boxcox_6 boxcox_p bprobit br break brier bro brow brows browse brr brrstat bs bs_7 bsampl_w bsample bsample_7 bsqreg bstat bstat_7 bstat_8 bstrap bstrap_7 ca ca_estat ca_p cabiplot camat canon canon_8 canon_8_p canon_estat canon_p cap caprojection capt captu captur capture cat cc cchart cchart_7 cci cd censobs_table centile cf char chdir checkdlgfiles checkestimationsample checkhlpfiles checksum chelp ci cii cl class classutil clear cli clis clist clo clog clog_lf clog_p clogi clogi_sw clogit clogit_lf clogit_p clogitp clogl_sw cloglog clonevar clslistarray cluster cluster_measures cluster_stop cluster_tree cluster_tree_8 clustermat cmdlog cnr cnre cnreg cnreg_p cnreg_sw cnsreg codebook collaps4 collapse colormult_nb colormult_nw compare compress conf confi confir confirm conren cons const constr constra constrai constrain constraint continue contract copy copyright copysource cor corc corr corr2data corr_anti corr_kmo corr_smc corre correl correla correlat correlate corrgram cou coun count cox cox_p cox_sw coxbase coxhaz coxvar cprplot cprplot_7 crc cret cretu cretur creturn cross cs cscript cscript_log csi ct ct_is ctset ctst_5 ctst_st cttost cumsp cumsp_7 cumul cusum cusum_7 cutil d|0 datasig datasign datasigna datasignat datasignatu datasignatur datasignature datetof db dbeta de dec deco decod decode deff des desc descr descri describ describe destring dfbeta dfgls dfuller di di_g dir dirstats dis discard disp disp_res disp_s displ displa display distinct do doe doed doedi doedit dotplot dotplot_7 dprobit drawnorm drop ds ds_util dstdize duplicates durbina dwstat dydx e|0 ed edi edit egen eivreg emdef en enc enco encod encode eq erase ereg ereg_lf ereg_p ereg_sw ereghet ereghet_glf ereghet_glf_sh ereghet_gp ereghet_ilf ereghet_ilf_sh ereghet_ip eret eretu eretur ereturn err erro error est est_cfexist est_cfname est_clickable est_expand est_hold est_table est_unhold est_unholdok estat estat_default estat_summ estat_vce_only esti estimates etodow etof etomdy ex exi exit expand expandcl fac fact facto factor factor_estat factor_p factor_pca_rotated factor_rotate factormat fcast fcast_compute fcast_graph fdades fdadesc fdadescr fdadescri fdadescrib fdadescribe fdasav fdasave fdause fh_st file open file read file close file filefilter fillin find_hlp_file findfile findit findit_7 fit fl fli flis flist for5_0 form forma format fpredict frac_154 frac_adj frac_chk frac_cox frac_ddp frac_dis frac_dv frac_in frac_mun frac_pp frac_pq frac_pv frac_wgt frac_xo fracgen fracplot fracplot_7 fracpoly fracpred fron_ex fron_hn fron_p fron_tn fron_tn2 frontier ftodate ftoe ftomdy ftowdate g|0 gamhet_glf gamhet_gp gamhet_ilf gamhet_ip gamma gamma_d2 gamma_p gamma_sw gammahet gdi_hexagon gdi_spokes ge gen gene gener genera generat generate genrank genstd genvmean gettoken gl gladder gladder_7 glim_l01 glim_l02 glim_l03 glim_l04 glim_l05 glim_l06 glim_l07 glim_l08 glim_l09 glim_l10 glim_l11 glim_l12 glim_lf glim_mu glim_nw1 glim_nw2 glim_nw3 glim_p glim_v1 glim_v2 glim_v3 glim_v4 glim_v5 glim_v6 glim_v7 glm glm_6 glm_p glm_sw glmpred glo glob globa global glogit glogit_8 glogit_p gmeans gnbre_lf gnbreg gnbreg_5 gnbreg_p gomp_lf gompe_sw gomper_p gompertz gompertzhet gomphet_glf gomphet_glf_sh gomphet_gp gomphet_ilf gomphet_ilf_sh gomphet_ip gphdot gphpen gphprint gprefs gprobi_p gprobit gprobit_8 gr gr7 gr_copy gr_current gr_db gr_describe gr_dir gr_draw gr_draw_replay gr_drop gr_edit gr_editviewopts gr_example gr_example2 gr_export gr_print gr_qscheme gr_query gr_read gr_rename gr_replay gr_save gr_set gr_setscheme gr_table gr_undo gr_use graph graph7 grebar greigen greigen_7 greigen_8 grmeanby grmeanby_7 gs_fileinfo gs_filetype gs_graphinfo gs_stat gsort gwood h|0 hadimvo hareg hausman haver he heck_d2 heckma_p heckman heckp_lf heckpr_p heckprob hel help hereg hetpr_lf hetpr_p hetprob hettest hexdump hilite hist hist_7 histogram hlogit hlu hmeans hotel hotelling hprobit hreg hsearch icd9 icd9_ff icd9p iis impute imtest inbase include inf infi infil infile infix inp inpu input ins insheet insp inspe inspec inspect integ inten intreg intreg_7 intreg_p intrg2_ll intrg_ll intrg_ll2 ipolate iqreg ir irf irf_create irfm iri is_svy is_svysum isid istdize ivprob_1_lf ivprob_lf ivprobit ivprobit_p ivreg ivreg_footnote ivtob_1_lf ivtob_lf ivtobit ivtobit_p jackknife jacknife jknife jknife_6 jknife_8 jkstat joinby kalarma1 kap kap_3 kapmeier kappa kapwgt kdensity kdensity_7 keep ksm ksmirnov ktau kwallis l|0 la lab labe label labelbook ladder levels levelsof leverage lfit lfit_p li lincom line linktest lis list lloghet_glf lloghet_glf_sh lloghet_gp lloghet_ilf lloghet_ilf_sh lloghet_ip llogi_sw llogis_p llogist llogistic llogistichet lnorm_lf lnorm_sw lnorma_p lnormal lnormalhet lnormhet_glf lnormhet_glf_sh lnormhet_gp lnormhet_ilf lnormhet_ilf_sh lnormhet_ip lnskew0 loadingplot loc loca local log logi logis_lf logistic logistic_p logit logit_estat logit_p loglogs logrank loneway lookfor lookup lowess lowess_7 lpredict lrecomp lroc lroc_7 lrtest ls lsens lsens_7 lsens_x lstat ltable ltable_7 ltriang lv lvr2plot lvr2plot_7 m|0 ma mac macr macro makecns man manova manova_estat manova_p manovatest mantel mark markin markout marksample mat mat_capp mat_order mat_put_rr mat_rapp mata mata_clear mata_describe mata_drop mata_matdescribe mata_matsave mata_matuse mata_memory mata_mlib mata_mosave mata_rename mata_which matalabel matcproc matlist matname matr matri matrix matrix_input__dlg matstrik mcc mcci md0_ md1_ md1debug_ md2_ md2debug_ mds mds_estat mds_p mdsconfig mdslong mdsmat mdsshepard mdytoe mdytof me_derd mean means median memory memsize meqparse mer merg merge mfp mfx mhelp mhodds minbound mixed_ll mixed_ll_reparm mkassert mkdir mkmat mkspline ml ml_5 ml_adjs ml_bhhhs ml_c_d ml_check ml_clear ml_cnt ml_debug ml_defd ml_e0 ml_e0_bfgs ml_e0_cycle ml_e0_dfp ml_e0i ml_e1 ml_e1_bfgs ml_e1_bhhh ml_e1_cycle ml_e1_dfp ml_e2 ml_e2_cycle ml_ebfg0 ml_ebfr0 ml_ebfr1 ml_ebh0q ml_ebhh0 ml_ebhr0 ml_ebr0i ml_ecr0i ml_edfp0 ml_edfr0 ml_edfr1 ml_edr0i ml_eds ml_eer0i ml_egr0i ml_elf ml_elf_bfgs ml_elf_bhhh ml_elf_cycle ml_elf_dfp ml_elfi ml_elfs ml_enr0i ml_enrr0 ml_erdu0 ml_erdu0_bfgs ml_erdu0_bhhh ml_erdu0_bhhhq ml_erdu0_cycle ml_erdu0_dfp ml_erdu0_nrbfgs ml_exde ml_footnote ml_geqnr ml_grad0 ml_graph ml_hbhhh ml_hd0 ml_hold ml_init ml_inv ml_log ml_max ml_mlout ml_mlout_8 ml_model ml_nb0 ml_opt ml_p ml_plot ml_query ml_rdgrd ml_repor ml_s_e ml_score ml_searc ml_technique ml_unhold mleval mlf_ mlmatbysum mlmatsum mlog mlogi mlogit mlogit_footnote mlogit_p mlopts mlsum mlvecsum mnl0_ mor more mov move mprobit mprobit_lf mprobit_p mrdu0_ mrdu1_ mvdecode mvencode mvreg mvreg_estat n|0 nbreg nbreg_al nbreg_lf nbreg_p nbreg_sw nestreg net newey newey_7 newey_p news nl nl_7 nl_9 nl_9_p nl_p nl_p_7 nlcom nlcom_p nlexp2 nlexp2_7 nlexp2a nlexp2a_7 nlexp3 nlexp3_7 nlgom3 nlgom3_7 nlgom4 nlgom4_7 nlinit nllog3 nllog3_7 nllog4 nllog4_7 nlog_rd nlogit nlogit_p nlogitgen nlogittree nlpred no nobreak noi nois noisi noisil noisily note notes notes_dlg nptrend numlabel numlist odbc old_ver olo olog ologi ologi_sw ologit ologit_p ologitp on one onew onewa oneway op_colnm op_comp op_diff op_inv op_str opr opro oprob oprob_sw oprobi oprobi_p oprobit oprobitp opts_exclusive order orthog orthpoly ou out outf outfi outfil outfile outs outsh outshe outshee outsheet ovtest pac pac_7 palette parse parse_dissim pause pca pca_8 pca_display pca_estat pca_p pca_rotate pcamat pchart pchart_7 pchi pchi_7 pcorr pctile pentium pergram pergram_7 permute permute_8 personal peto_st pkcollapse pkcross pkequiv pkexamine pkexamine_7 pkshape pksumm pksumm_7 pl plo plot plugin pnorm pnorm_7 poisgof poiss_lf poiss_sw poisso_p poisson poisson_estat post postclose postfile postutil pperron pr prais prais_e prais_e2 prais_p predict predictnl preserve print pro prob probi probit probit_estat probit_p proc_time procoverlay procrustes procrustes_estat procrustes_p profiler prog progr progra program prop proportion prtest prtesti pwcorr pwd q\\s qby qbys qchi qchi_7 qladder qladder_7 qnorm qnorm_7 qqplot qqplot_7 qreg qreg_c qreg_p qreg_sw qu quadchk quantile quantile_7 que quer query range ranksum ratio rchart rchart_7 rcof recast reclink recode reg reg3 reg3_p regdw regr regre regre_p2 regres regres_p regress regress_estat regriv_p remap ren rena renam rename renpfix repeat replace report reshape restore ret retu retur return rm rmdir robvar roccomp roccomp_7 roccomp_8 rocf_lf rocfit rocfit_8 rocgold rocplot rocplot_7 roctab roctab_7 rolling rologit rologit_p rot rota rotat rotate rotatemat rreg rreg_p ru run runtest rvfplot rvfplot_7 rvpplot rvpplot_7 sa safesum sample sampsi sav save savedresults saveold sc sca scal scala scalar scatter scm_mine sco scob_lf scob_p scobi_sw scobit scor score scoreplot scoreplot_help scree screeplot screeplot_help sdtest sdtesti se search separate seperate serrbar serrbar_7 serset set set_defaults sfrancia sh she shel shell shewhart shewhart_7 signestimationsample signrank signtest simul simul_7 simulate simulate_8 sktest sleep slogit slogit_d2 slogit_p smooth snapspan so sor sort spearman spikeplot spikeplot_7 spikeplt spline_x split sqreg sqreg_p sret sretu sretur sreturn ssc st st_ct st_hc st_hcd st_hcd_sh st_is st_issys st_note st_promo st_set st_show st_smpl st_subid stack statsby statsby_8 stbase stci stci_7 stcox stcox_estat stcox_fr stcox_fr_ll stcox_p stcox_sw stcoxkm stcoxkm_7 stcstat stcurv stcurve stcurve_7 stdes stem stepwise stereg stfill stgen stir stjoin stmc stmh stphplot stphplot_7 stphtest stphtest_7 stptime strate strate_7 streg streg_sw streset sts sts_7 stset stsplit stsum sttocc sttoct stvary stweib su suest suest_8 sum summ summa summar summari summariz summarize sunflower sureg survcurv survsum svar svar_p svmat svy svy_disp svy_dreg svy_est svy_est_7 svy_estat svy_get svy_gnbreg_p svy_head svy_header svy_heckman_p svy_heckprob_p svy_intreg_p svy_ivreg_p svy_logistic_p svy_logit_p svy_mlogit_p svy_nbreg_p svy_ologit_p svy_oprobit_p svy_poisson_p svy_probit_p svy_regress_p svy_sub svy_sub_7 svy_x svy_x_7 svy_x_p svydes svydes_8 svygen svygnbreg svyheckman svyheckprob svyintreg svyintreg_7 svyintrg svyivreg svylc svylog_p svylogit svymarkout svymarkout_8 svymean svymlog svymlogit svynbreg svyolog svyologit svyoprob svyoprobit svyopts svypois svypois_7 svypoisson svyprobit svyprobt svyprop svyprop_7 svyratio svyreg svyreg_p svyregress svyset svyset_7 svyset_8 svytab svytab_7 svytest svytotal sw sw_8 swcnreg swcox swereg swilk swlogis swlogit swologit swoprbt swpois swprobit swqreg swtobit swweib symmetry symmi symplot symplot_7 syntax sysdescribe sysdir sysuse szroeter ta tab tab1 tab2 tab_or tabd tabdi tabdis tabdisp tabi table tabodds tabodds_7 tabstat tabu tabul tabula tabulat tabulate te tempfile tempname tempvar tes test testnl testparm teststd tetrachoric time_it timer tis tob tobi tobit tobit_p tobit_sw token tokeni tokeniz tokenize tostring total translate translator transmap treat_ll treatr_p treatreg trim trnb_cons trnb_mean trpoiss_d2 trunc_ll truncr_p truncreg tsappend tset tsfill tsline tsline_ex tsreport tsrevar tsrline tsset tssmooth tsunab ttest ttesti tut_chk tut_wait tutorial tw tware_st two twoway twoway__fpfit_serset twoway__function_gen twoway__histogram_gen twoway__ipoint_serset twoway__ipoints_serset twoway__kdensity_gen twoway__lfit_serset twoway__normgen_gen twoway__pci_serset twoway__qfit_serset twoway__scatteri_serset twoway__sunflower_gen twoway_ksm_serset ty typ type typeof u|0 unab unabbrev unabcmd update us use uselabel var var_mkcompanion var_p varbasic varfcast vargranger varirf varirf_add varirf_cgraph varirf_create varirf_ctable varirf_describe varirf_dir varirf_drop varirf_erase varirf_graph varirf_ograph varirf_rename varirf_set varirf_table varlist varlmar varnorm varsoc varstable varstable_w varstable_w2 varwle vce vec vec_fevd vec_mkphi vec_p vec_p_w vecirf_create veclmar veclmar_w vecnorm vecnorm_w vecrank vecstable verinst vers versi versio version view viewsource vif vwls wdatetof webdescribe webseek webuse weib1_lf weib2_lf weib_lf weib_lf0 weibhet_glf weibhet_glf_sh weibhet_glfa weibhet_glfa_sh weibhet_gp weibhet_ilf weibhet_ilf_sh weibhet_ilfa weibhet_ilfa_sh weibhet_ip weibu_sw weibul_p weibull weibull_c weibull_s weibullhet wh whelp whi which whil while wilc_st wilcoxon win wind windo window winexec wntestb wntestb_7 wntestq xchart xchart_7 xcorr xcorr_7 xi xi_6 xmlsav xmlsave xmluse xpose xsh xshe xshel xshell xt_iis xt_tis xtab_p xtabond xtbin_p xtclog xtcloglog xtcloglog_8 xtcloglog_d2 xtcloglog_pa_p xtcloglog_re_p xtcnt_p xtcorr xtdata xtdes xtfront_p xtfrontier xtgee xtgee_elink xtgee_estat xtgee_makeivar xtgee_p xtgee_plink xtgls xtgls_p xthaus xthausman xtht_p xthtaylor xtile xtint_p xtintreg xtintreg_8 xtintreg_d2 xtintreg_p xtivp_1 xtivp_2 xtivreg xtline xtline_ex xtlogit xtlogit_8 xtlogit_d2 xtlogit_fe_p xtlogit_pa_p xtlogit_re_p xtmixed xtmixed_estat xtmixed_p xtnb_fe xtnb_lf xtnbreg xtnbreg_pa_p xtnbreg_refe_p xtpcse xtpcse_p xtpois xtpoisson xtpoisson_d2 xtpoisson_pa_p xtpoisson_refe_p xtpred xtprobit xtprobit_8 xtprobit_d2 xtprobit_re_p xtps_fe xtps_lf xtps_ren xtps_ren_8 xtrar_p xtrc xtrc_p xtrchh xtrefe_p xtreg xtreg_be xtreg_fe xtreg_ml xtreg_pa_p xtreg_re xtregar xtrere_p xtset xtsf_ll xtsf_llti xtsum xttab xttest0 xttobit xttobit_8 xttobit_p xttrans yx yxview__barlike_draw yxview_area_draw yxview_bar_draw yxview_dot_draw yxview_dropline_draw yxview_function_draw yxview_iarrow_draw yxview_ilabels_draw yxview_normal_draw yxview_pcarrow_draw yxview_pcbarrow_draw yxview_pccapsym_draw yxview_pcscatter_draw yxview_pcspike_draw yxview_rarea_draw yxview_rbar_draw yxview_rbarm_draw yxview_rcap_draw yxview_rcapsym_draw yxview_rconnected_draw yxview_rline_draw yxview_rscatter_draw yxview_rspike_draw yxview_spike_draw yxview_sunflower_draw zap_s zinb zinb_llf zinb_plf zip zip_llf zip_p zip_plf zt_ct_5 zt_hc_5 zt_hcd_5 zt_is_5 zt_iss_5 zt_sho_5 zt_smp_5 ztbase_5 ztcox_5 ztdes_5 ztereg_5 ztfill_5 ztgen_5 ztir_5 ztjoin_5 ztnb ztnb_p ztp ztp_p zts_5 ztset_5 ztspli_5 ztsum_5 zttoct_5 ztvary_5 ztweib_5",
          contains: [
            {
              className: "symbol",
              begin: /`[a-zA-Z0-9_]+'/
            },
            {
              className: "variable",
              begin: /\$\{?[a-zA-Z0-9_]+\}?/
            },
            {
              className: "string",
              variants: [{ begin: '`"[^\r\n]*?"\'' }, { begin: '"[^\r\n"]*"' }]
            },

            {
              className: "built_in",
              variants: [
                {
                  begin:
                    "\\b(abs|acos|asin|atan|atan2|atanh|ceil|cloglog|comb|cos|digamma|exp|floor|invcloglog|invlogit|ln|lnfact|lnfactorial|lngamma|log|log10|max|min|mod|reldif|round|sign|sin|sqrt|sum|tan|tanh|trigamma|trunc|betaden|Binomial|binorm|binormal|chi2|chi2tail|dgammapda|dgammapdada|dgammapdadx|dgammapdx|dgammapdxdx|F|Fden|Ftail|gammaden|gammap|ibeta|invbinomial|invchi2|invchi2tail|invF|invFtail|invgammap|invibeta|invnchi2|invnFtail|invnibeta|invnorm|invnormal|invttail|nbetaden|nchi2|nFden|nFtail|nibeta|norm|normal|normalden|normd|npnchi2|tden|ttail|uniform|abbrev|char|index|indexnot|length|lower|ltrim|match|plural|proper|real|regexm|regexr|regexs|reverse|rtrim|string|strlen|strlower|strltrim|strmatch|strofreal|strpos|strproper|strreverse|strrtrim|strtrim|strupper|subinstr|subinword|substr|trim|upper|word|wordcount|_caller|autocode|byteorder|chop|clip|cond|e|epsdouble|epsfloat|group|inlist|inrange|irecode|matrix|maxbyte|maxdouble|maxfloat|maxint|maxlong|mi|minbyte|mindouble|minfloat|minint|minlong|missing|r|recode|replay|return|s|scalar|d|date|day|dow|doy|halfyear|mdy|month|quarter|week|year|d|daily|dofd|dofh|dofm|dofq|dofw|dofy|h|halfyearly|hofd|m|mofd|monthly|q|qofd|quarterly|tin|twithin|w|weekly|wofd|y|yearly|yh|ym|yofd|yq|yw|cholesky|colnumb|colsof|corr|det|diag|diag0cnt|el|get|hadamard|I|inv|invsym|issym|issymmetric|J|matmissing|matuniform|mreldif|nullmat|rownumb|rowsof|sweep|syminv|trace|vec|vecdiag)(?=\\(|$)"
                }
              ]
            },

            hljs.COMMENT("^[ \t]*\\*.*$", false),
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 183 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var STEP21_IDENT_RE = "[A-Z_][A-Z0-9_.]*";
        var STEP21_KEYWORDS = {
          keyword: "HEADER ENDSEC DATA"
        };
        var STEP21_START = {
          className: "meta",
          begin: "ISO-10303-21;",
          relevance: 10
        };
        var STEP21_CLOSE = {
          className: "meta",
          begin: "END-ISO-10303-21;",
          relevance: 10
        };

        return {
          aliases: ["p21", "step", "stp"],
          case_insensitive: true, // STEP 21 is case insensitive in theory, in practice all non-comments are capitalized.
          lexemes: STEP21_IDENT_RE,
          keywords: STEP21_KEYWORDS,
          contains: [
            STEP21_START,
            STEP21_CLOSE,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.COMMENT("/\\*\\*!", "\\*/"),
            hljs.C_NUMBER_MODE,
            hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null }),
            hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),
            {
              className: "string",
              begin: "'",
              end: "'"
            },
            {
              className: "symbol",
              variants: [
                {
                  begin: "#",
                  end: "\\d+",
                  illegal: "\\W"
                }
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 184 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var VARIABLE = {
          className: "variable",
          begin: "\\$" + hljs.IDENT_RE
        };

        var HEX_COLOR = {
          className: "number",
          begin: "#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})"
        };

        var AT_KEYWORDS = [
          "charset",
          "css",
          "debug",
          "extend",
          "font-face",
          "for",
          "import",
          "include",
          "media",
          "mixin",
          "page",
          "warn",
          "while"
        ];

        var PSEUDO_SELECTORS = [
          "after",
          "before",
          "first-letter",
          "first-line",
          "active",
          "first-child",
          "focus",
          "hover",
          "lang",
          "link",
          "visited"
        ];

        var TAGS = [
          "a",
          "abbr",
          "address",
          "article",
          "aside",
          "audio",
          "b",
          "blockquote",
          "body",
          "button",
          "canvas",
          "caption",
          "cite",
          "code",
          "dd",
          "del",
          "details",
          "dfn",
          "div",
          "dl",
          "dt",
          "em",
          "fieldset",
          "figcaption",
          "figure",
          "footer",
          "form",
          "h1",
          "h2",
          "h3",
          "h4",
          "h5",
          "h6",
          "header",
          "hgroup",
          "html",
          "i",
          "iframe",
          "img",
          "input",
          "ins",
          "kbd",
          "label",
          "legend",
          "li",
          "mark",
          "menu",
          "nav",
          "object",
          "ol",
          "p",
          "q",
          "quote",
          "samp",
          "section",
          "span",
          "strong",
          "summary",
          "sup",
          "table",
          "tbody",
          "td",
          "textarea",
          "tfoot",
          "th",
          "thead",
          "time",
          "tr",
          "ul",
          "var",
          "video"
        ];

        var TAG_END = "[\\.\\s\\n\\[\\:,]";

        var ATTRIBUTES = [
          "align-content",
          "align-items",
          "align-self",
          "animation",
          "animation-delay",
          "animation-direction",
          "animation-duration",
          "animation-fill-mode",
          "animation-iteration-count",
          "animation-name",
          "animation-play-state",
          "animation-timing-function",
          "auto",
          "backface-visibility",
          "background",
          "background-attachment",
          "background-clip",
          "background-color",
          "background-image",
          "background-origin",
          "background-position",
          "background-repeat",
          "background-size",
          "border",
          "border-bottom",
          "border-bottom-color",
          "border-bottom-left-radius",
          "border-bottom-right-radius",
          "border-bottom-style",
          "border-bottom-width",
          "border-collapse",
          "border-color",
          "border-image",
          "border-image-outset",
          "border-image-repeat",
          "border-image-slice",
          "border-image-source",
          "border-image-width",
          "border-left",
          "border-left-color",
          "border-left-style",
          "border-left-width",
          "border-radius",
          "border-right",
          "border-right-color",
          "border-right-style",
          "border-right-width",
          "border-spacing",
          "border-style",
          "border-top",
          "border-top-color",
          "border-top-left-radius",
          "border-top-right-radius",
          "border-top-style",
          "border-top-width",
          "border-width",
          "bottom",
          "box-decoration-break",
          "box-shadow",
          "box-sizing",
          "break-after",
          "break-before",
          "break-inside",
          "caption-side",
          "clear",
          "clip",
          "clip-path",
          "color",
          "column-count",
          "column-fill",
          "column-gap",
          "column-rule",
          "column-rule-color",
          "column-rule-style",
          "column-rule-width",
          "column-span",
          "column-width",
          "columns",
          "content",
          "counter-increment",
          "counter-reset",
          "cursor",
          "direction",
          "display",
          "empty-cells",
          "filter",
          "flex",
          "flex-basis",
          "flex-direction",
          "flex-flow",
          "flex-grow",
          "flex-shrink",
          "flex-wrap",
          "float",
          "font",
          "font-family",
          "font-feature-settings",
          "font-kerning",
          "font-language-override",
          "font-size",
          "font-size-adjust",
          "font-stretch",
          "font-style",
          "font-variant",
          "font-variant-ligatures",
          "font-weight",
          "height",
          "hyphens",
          "icon",
          "image-orientation",
          "image-rendering",
          "image-resolution",
          "ime-mode",
          "inherit",
          "initial",
          "justify-content",
          "left",
          "letter-spacing",
          "line-height",
          "list-style",
          "list-style-image",
          "list-style-position",
          "list-style-type",
          "margin",
          "margin-bottom",
          "margin-left",
          "margin-right",
          "margin-top",
          "marks",
          "mask",
          "max-height",
          "max-width",
          "min-height",
          "min-width",
          "nav-down",
          "nav-index",
          "nav-left",
          "nav-right",
          "nav-up",
          "none",
          "normal",
          "object-fit",
          "object-position",
          "opacity",
          "order",
          "orphans",
          "outline",
          "outline-color",
          "outline-offset",
          "outline-style",
          "outline-width",
          "overflow",
          "overflow-wrap",
          "overflow-x",
          "overflow-y",
          "padding",
          "padding-bottom",
          "padding-left",
          "padding-right",
          "padding-top",
          "page-break-after",
          "page-break-before",
          "page-break-inside",
          "perspective",
          "perspective-origin",
          "pointer-events",
          "position",
          "quotes",
          "resize",
          "right",
          "tab-size",
          "table-layout",
          "text-align",
          "text-align-last",
          "text-decoration",
          "text-decoration-color",
          "text-decoration-line",
          "text-decoration-style",
          "text-indent",
          "text-overflow",
          "text-rendering",
          "text-shadow",
          "text-transform",
          "text-underline-position",
          "top",
          "transform",
          "transform-origin",
          "transform-style",
          "transition",
          "transition-delay",
          "transition-duration",
          "transition-property",
          "transition-timing-function",
          "unicode-bidi",
          "vertical-align",
          "visibility",
          "white-space",
          "widows",
          "width",
          "word-break",
          "word-spacing",
          "word-wrap",
          "z-index"
        ];

        // illegals
        var ILLEGAL = [
          "\\?",
          "(\\bReturn\\b)", // monkey
          "(\\bEnd\\b)", // monkey
          "(\\bend\\b)", // vbscript
          "(\\bdef\\b)", // gradle
          ";", // a whole lot of languages
          "#\\s", // markdown
          "\\*\\s", // markdown
          "===\\s", // markdown
          "\\|",
          "%" // prolog
        ];

        return {
          aliases: ["styl"],
          case_insensitive: false,
          keywords: "if else for in",
          illegal: "(" + ILLEGAL.join("|") + ")",
          contains: [
            // strings
            hljs.QUOTE_STRING_MODE,
            hljs.APOS_STRING_MODE,

            // comments
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,

            // hex colors
            HEX_COLOR,

            // class tag
            {
              begin: "\\.[a-zA-Z][a-zA-Z0-9_-]*" + TAG_END,
              returnBegin: true,
              contains: [
                {
                  className: "selector-class",
                  begin: "\\.[a-zA-Z][a-zA-Z0-9_-]*"
                }
              ]
            },

            // id tag
            {
              begin: "\\#[a-zA-Z][a-zA-Z0-9_-]*" + TAG_END,
              returnBegin: true,
              contains: [
                { className: "selector-id", begin: "\\#[a-zA-Z][a-zA-Z0-9_-]*" }
              ]
            },

            // tags
            {
              begin: "\\b(" + TAGS.join("|") + ")" + TAG_END,
              returnBegin: true,
              contains: [
                {
                  className: "selector-tag",
                  begin: "\\b[a-zA-Z][a-zA-Z0-9_-]*"
                }
              ]
            },

            // psuedo selectors
            {
              begin: "&?:?:\\b(" + PSEUDO_SELECTORS.join("|") + ")" + TAG_END
            },

            // @ keywords
            {
              begin: "@(" + AT_KEYWORDS.join("|") + ")\\b"
            },

            // variables
            VARIABLE,

            // dimension
            hljs.CSS_NUMBER_MODE,

            // number
            hljs.NUMBER_MODE,

            // functions
            //  - only from beginning of line + whitespace
            {
              className: "function",
              begin: "^[a-zA-Z][a-zA-Z0-9_-]*\\(.*\\)",
              illegal: "[\\n]",
              returnBegin: true,
              contains: [
                { className: "title", begin: "\\b[a-zA-Z][a-zA-Z0-9_-]*" },
                {
                  className: "params",
                  begin: /\(/,
                  end: /\)/,
                  contains: [
                    HEX_COLOR,
                    VARIABLE,
                    hljs.APOS_STRING_MODE,
                    hljs.CSS_NUMBER_MODE,
                    hljs.NUMBER_MODE,
                    hljs.QUOTE_STRING_MODE
                  ]
                }
              ]
            },

            // attributes
            //  - only from beginning of line + whitespace
            //  - must have whitespace after it
            {
              className: "attribute",
              begin: "\\b(" + ATTRIBUTES.reverse().join("|") + ")\\b",
              starts: {
                // value container
                end: /;|$/,
                contains: [
                  HEX_COLOR,
                  VARIABLE,
                  hljs.APOS_STRING_MODE,
                  hljs.QUOTE_STRING_MODE,
                  hljs.CSS_NUMBER_MODE,
                  hljs.NUMBER_MODE,
                  hljs.C_BLOCK_COMMENT_MODE
                ],
                illegal: /\./,
                relevance: 0
              }
            }
          ]
        };
      };

      /***/
    },
    /* 185 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var DETAILS = {
          className: "string",
          begin: "\\[\n(multipart)?",
          end: "\\]\n"
        };
        var TIME = {
          className: "string",
          begin: "\\d{4}-\\d{2}-\\d{2}(\\s+)\\d{2}:\\d{2}:\\d{2}.\\d+Z"
        };
        var PROGRESSVALUE = {
          className: "string",
          begin: "(\\+|-)\\d+"
        };
        var KEYWORDS = {
          className: "keyword",
          relevance: 10,
          variants: [
            {
              begin:
                "^(test|testing|success|successful|failure|error|skip|xfail|uxsuccess)(:?)\\s+(test)?"
            },
            { begin: "^progress(:?)(\\s+)?(pop|push)?" },
            { begin: "^tags:" },
            { begin: "^time:" }
          ]
        };
        return {
          case_insensitive: true,
          contains: [DETAILS, TIME, PROGRESSVALUE, KEYWORDS]
        };
      };

      /***/
    },
    /* 186 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var SWIFT_KEYWORDS = {
          keyword:
            "__COLUMN__ __FILE__ __FUNCTION__ __LINE__ as as! as? associativity " +
            "break case catch class continue convenience default defer deinit didSet do " +
            "dynamic dynamicType else enum extension fallthrough false fileprivate final for func " +
            "get guard if import in indirect infix init inout internal is lazy left let " +
            "mutating nil none nonmutating open operator optional override postfix precedence " +
            "prefix private protocol Protocol public repeat required rethrows return " +
            "right self Self set static struct subscript super switch throw throws true " +
            "try try! try? Type typealias unowned var weak where while willSet",
          literal: "true false nil",
          built_in:
            "abs advance alignof alignofValue anyGenerator assert assertionFailure " +
            "bridgeFromObjectiveC bridgeFromObjectiveCUnconditional bridgeToObjectiveC " +
            "bridgeToObjectiveCUnconditional c contains count countElements countLeadingZeros " +
            "debugPrint debugPrintln distance dropFirst dropLast dump encodeBitsAsWords " +
            "enumerate equal fatalError filter find getBridgedObjectiveCType getVaList " +
            "indices insertionSort isBridgedToObjectiveC isBridgedVerbatimToObjectiveC " +
            "isUniquelyReferenced isUniquelyReferencedNonObjC join lazy lexicographicalCompare " +
            "map max maxElement min minElement numericCast overlaps partition posix " +
            "precondition preconditionFailure print println quickSort readLine reduce reflect " +
            "reinterpretCast reverse roundUpToAlignment sizeof sizeofValue sort split " +
            "startsWith stride strideof strideofValue swap toString transcode " +
            "underestimateCount unsafeAddressOf unsafeBitCast unsafeDowncast unsafeUnwrap " +
            "unsafeReflect withExtendedLifetime withObjectAtPlusZero withUnsafePointer " +
            "withUnsafePointerToObject withUnsafeMutablePointer withUnsafeMutablePointers " +
            "withUnsafePointer withUnsafePointers withVaList zip"
        };

        var TYPE = {
          className: "type",
          begin: "\\b[A-Z][\\w\u00C0-\u02B8']*",
          relevance: 0
        };
        var BLOCK_COMMENT = hljs.COMMENT("/\\*", "\\*/", {
          contains: ["self"]
        });
        var SUBST = {
          className: "subst",
          begin: /\\\(/,
          end: "\\)",
          keywords: SWIFT_KEYWORDS,
          contains: [] // assigned later
        };
        var NUMBERS = {
          className: "number",
          begin:
            "\\b([\\d_]+(\\.[\\deE_]+)?|0x[a-fA-F0-9_]+(\\.[a-fA-F0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b",
          relevance: 0
        };
        var QUOTE_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {
          contains: [SUBST, hljs.BACKSLASH_ESCAPE]
        });
        SUBST.contains = [NUMBERS];

        return {
          keywords: SWIFT_KEYWORDS,
          contains: [
            QUOTE_STRING_MODE,
            hljs.C_LINE_COMMENT_MODE,
            BLOCK_COMMENT,
            TYPE,
            NUMBERS,
            {
              className: "function",
              beginKeywords: "func",
              end: "{",
              excludeEnd: true,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  begin: /[A-Za-z$_][0-9A-Za-z$_]*/
                }),
                {
                  begin: /</,
                  end: />/
                },
                {
                  className: "params",
                  begin: /\(/,
                  end: /\)/,
                  endsParent: true,
                  keywords: SWIFT_KEYWORDS,
                  contains: [
                    "self",
                    NUMBERS,
                    QUOTE_STRING_MODE,
                    hljs.C_BLOCK_COMMENT_MODE,
                    { begin: ":" } // relevance booster
                  ],
                  illegal: /["']/
                }
              ],
              illegal: /\[|%/
            },
            {
              className: "class",
              beginKeywords: "struct protocol class extension enum",
              keywords: SWIFT_KEYWORDS,
              end: "\\{",
              excludeEnd: true,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  begin: /[A-Za-z$_][\u00C0-\u02B80-9A-Za-z$_]*/
                })
              ]
            },
            {
              className: "meta", // @attributes
              begin:
                "(@warn_unused_result|@exported|@lazy|@noescape|" +
                "@NSCopying|@NSManaged|@objc|@convention|@required|" +
                "@noreturn|@IBAction|@IBDesignable|@IBInspectable|@IBOutlet|" +
                "@infix|@prefix|@postfix|@autoclosure|@testable|@available|" +
                "@nonobjc|@NSApplicationMain|@UIApplicationMain)"
            },
            {
              beginKeywords: "import",
              end: /$/,
              contains: [hljs.C_LINE_COMMENT_MODE, BLOCK_COMMENT]
            }
          ]
        };
      };

      /***/
    },
    /* 187 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var COMMENT = {
          className: "comment",
          begin: /\$noop\(/,
          end: /\)/,
          contains: [
            {
              begin: /\(/,
              end: /\)/,
              contains: [
                "self",
                {
                  begin: /\\./
                }
              ]
            }
          ],
          relevance: 10
        };

        var FUNCTION = {
          className: "keyword",
          begin: /\$(?!noop)[a-zA-Z][_a-zA-Z0-9]*/,
          end: /\(/,
          excludeEnd: true
        };

        var VARIABLE = {
          className: "variable",
          begin: /%[_a-zA-Z0-9:]*/,
          end: "%"
        };

        var ESCAPE_SEQUENCE = {
          className: "symbol",
          begin: /\\./
        };

        return {
          contains: [COMMENT, FUNCTION, VARIABLE, ESCAPE_SEQUENCE]
        };
      };

      /***/
    },
    /* 188 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var LITERALS = "true false yes no null";

        var keyPrefix = "^[ \\-]*";
        var keyName = "[a-zA-Z_][\\w\\-]*";
        var KEY = {
          className: "attr",
          variants: [
            { begin: keyPrefix + keyName + ":" },
            { begin: keyPrefix + '"' + keyName + '"' + ":" },
            { begin: keyPrefix + "'" + keyName + "'" + ":" }
          ]
        };

        var TEMPLATE_VARIABLES = {
          className: "template-variable",
          variants: [
            { begin: "{{", end: "}}" }, // jinja templates Ansible
            { begin: "%{", end: "}" } // Ruby i18n
          ]
        };
        var STRING = {
          className: "string",
          relevance: 0,
          variants: [
            { begin: /'/, end: /'/ },
            { begin: /"/, end: /"/ },
            { begin: /\S+/ }
          ],
          contains: [hljs.BACKSLASH_ESCAPE, TEMPLATE_VARIABLES]
        };

        return {
          case_insensitive: true,
          aliases: ["yml", "YAML", "yaml"],
          contains: [
            KEY,
            {
              className: "meta",
              begin: "^---s*$",
              relevance: 10
            },
            {
              // multi line string
              className: "string",
              begin: "[\\|>] *$",
              returnEnd: true,
              contains: STRING.contains,
              // very simple termination: next hash key
              end: KEY.variants[0].begin
            },
            {
              // Ruby/Rails erb
              begin: "<%[%=-]?",
              end: "[%-]?%>",
              subLanguage: "ruby",
              excludeBegin: true,
              excludeEnd: true,
              relevance: 0
            },
            {
              // data type
              className: "type",
              begin: "!!" + hljs.UNDERSCORE_IDENT_RE
            },
            {
              // fragment id &ref
              className: "meta",
              begin: "&" + hljs.UNDERSCORE_IDENT_RE + "$"
            },
            {
              // fragment reference *ref
              className: "meta",
              begin: "\\*" + hljs.UNDERSCORE_IDENT_RE + "$"
            },
            {
              // array listing
              className: "bullet",
              begin: "^ *-",
              relevance: 0
            },
            hljs.HASH_COMMENT_MODE,
            {
              beginKeywords: LITERALS,
              keywords: { literal: LITERALS }
            },
            hljs.C_NUMBER_MODE,
            STRING
          ]
        };
      };

      /***/
    },
    /* 189 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          case_insensitive: true,
          contains: [
            hljs.HASH_COMMENT_MODE,
            // version of format and total amount of testcases
            {
              className: "meta",
              variants: [
                { begin: "^TAP version (\\d+)$" },
                { begin: "^1\\.\\.(\\d+)$" }
              ]
            },
            // YAML block
            {
              begin: "(s+)?---$",
              end: "\\.\\.\\.$",
              subLanguage: "yaml",
              relevance: 0
            },
            // testcase number
            {
              className: "number",
              begin: " (\\d+) "
            },
            // testcase status and description
            {
              className: "symbol",
              variants: [{ begin: "^ok" }, { begin: "^not ok" }]
            }
          ]
        };
      };

      /***/
    },
    /* 190 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["tk"],
          keywords:
            "after append apply array auto_execok auto_import auto_load auto_mkindex " +
            "auto_mkindex_old auto_qualify auto_reset bgerror binary break catch cd chan clock " +
            "close concat continue dde dict encoding eof error eval exec exit expr fblocked " +
            "fconfigure fcopy file fileevent filename flush for foreach format gets glob global " +
            "history http if incr info interp join lappend|10 lassign|10 lindex|10 linsert|10 list " +
            "llength|10 load lrange|10 lrepeat|10 lreplace|10 lreverse|10 lsearch|10 lset|10 lsort|10 " +
            "mathfunc mathop memory msgcat namespace open package parray pid pkg::create pkg_mkIndex " +
            "platform platform::shell proc puts pwd read refchan regexp registry regsub|10 rename " +
            "return safe scan seek set socket source split string subst switch tcl_endOfWord " +
            "tcl_findLibrary tcl_startOfNextWord tcl_startOfPreviousWord tcl_wordBreakAfter " +
            "tcl_wordBreakBefore tcltest tclvars tell time tm trace unknown unload unset update " +
            "uplevel upvar variable vwait while",
          contains: [
            hljs.COMMENT(";[ \\t]*#", "$"),
            hljs.COMMENT("^[ \\t]*#", "$"),
            {
              beginKeywords: "proc",
              end: "[\\{]",
              excludeEnd: true,
              contains: [
                {
                  className: "title",
                  begin: "[ \\t\\n\\r]+(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*",
                  end: "[ \\t\\n\\r]",
                  endsWithParent: true,
                  excludeEnd: true
                }
              ]
            },
            {
              excludeEnd: true,
              variants: [
                {
                  begin:
                    "\\$(\\{)?(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*\\(([a-zA-Z0-9_])*\\)",
                  end: "[^a-zA-Z0-9_\\}\\$]"
                },
                {
                  begin: "\\$(\\{)?(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*",
                  end: "(\\))?[^a-zA-Z0-9_\\}\\$]"
                }
              ]
            },
            {
              className: "string",
              contains: [hljs.BACKSLASH_ESCAPE],
              variants: [
                hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null }),
                hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null })
              ]
            },
            {
              className: "number",
              variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]
            }
          ]
        };
      };

      /***/
    },
    /* 191 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var COMMAND = {
          className: "tag",
          begin: /\\/,
          relevance: 0,
          contains: [
            {
              className: "name",
              variants: [
                { begin: /[a-zA-Zа-яА-я]+[*]?/ },
                { begin: /[^a-zA-Zа-яА-я0-9]/ }
              ],
              starts: {
                endsWithParent: true,
                relevance: 0,
                contains: [
                  {
                    className: "string", // because it looks like attributes in HTML tags
                    variants: [
                      { begin: /\[/, end: /\]/ },
                      { begin: /\{/, end: /\}/ }
                    ]
                  },
                  {
                    begin: /\s*=\s*/,
                    endsWithParent: true,
                    relevance: 0,
                    contains: [
                      {
                        className: "number",
                        begin: /-?\d*\.?\d+(pt|pc|mm|cm|in|dd|cc|ex|em)?/
                      }
                    ]
                  }
                ]
              }
            }
          ]
        };

        return {
          contains: [
            COMMAND,
            {
              className: "formula",
              contains: [COMMAND],
              relevance: 0,
              variants: [
                { begin: /\$\$/, end: /\$\$/ },
                { begin: /\$/, end: /\$/ }
              ]
            },
            hljs.COMMENT("%", "$", {
              relevance: 0
            })
          ]
        };
      };

      /***/
    },
    /* 192 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var BUILT_IN_TYPES = "bool byte i16 i32 i64 double string binary";
        return {
          keywords: {
            keyword:
              "namespace const typedef struct enum service exception void oneway set list map required optional",
            built_in: BUILT_IN_TYPES,
            literal: "true false"
          },
          contains: [
            hljs.QUOTE_STRING_MODE,
            hljs.NUMBER_MODE,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: "class",
              beginKeywords: "struct enum service exception",
              end: /\{/,
              illegal: /\n/,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  starts: { endsWithParent: true, excludeEnd: true } // hack: eating everything after the first title
                })
              ]
            },
            {
              begin: "\\b(set|list|map)\\s*<",
              end: ">",
              keywords: BUILT_IN_TYPES,
              contains: ["self"]
            }
          ]
        };
      };

      /***/
    },
    /* 193 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var TPID = {
          className: "number",
          begin: "[1-9][0-9]*" /* no leading zeros */,
          relevance: 0
        };
        var TPLABEL = {
          className: "symbol",
          begin: ":[^\\]]+"
        };
        var TPDATA = {
          className: "built_in",
          begin:
            "(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|\
	    TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\[",
          end: "\\]",
          contains: ["self", TPID, TPLABEL]
        };
        var TPIO = {
          className: "built_in",
          begin: "(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\[",
          end: "\\]",
          contains: [
            "self",
            TPID,
            hljs.QUOTE_STRING_MODE /* for pos section at bottom */,
            TPLABEL
          ]
        };

        return {
          keywords: {
            keyword:
              "ABORT ACC ADJUST AND AP_LD BREAK CALL CNT COL CONDITION CONFIG DA DB " +
              "DIV DETECT ELSE END ENDFOR ERR_NUM ERROR_PROG FINE FOR GP GUARD INC " +
              "IF JMP LINEAR_MAX_SPEED LOCK MOD MONITOR OFFSET Offset OR OVERRIDE " +
              "PAUSE PREG PTH RT_LD RUN SELECT SKIP Skip TA TB TO TOOL_OFFSET " +
              "Tool_Offset UF UT UFRAME_NUM UTOOL_NUM UNLOCK WAIT X Y Z W P R STRLEN " +
              "SUBSTR FINDSTR VOFFSET PROG ATTR MN POS",
            literal:
              "ON OFF max_speed LPOS JPOS ENABLE DISABLE START STOP RESET"
          },
          contains: [
            TPDATA,
            TPIO,
            {
              className: "keyword",
              begin: "/(PROG|ATTR|MN|POS|END)\\b"
            },
            {
              /* this is for cases like ,CALL */
              className: "keyword",
              begin: "(CALL|RUN|POINT_LOGIC|LBL)\\b"
            },
            {
              /* this is for cases like CNT100 where the default lexemes do not
	         * separate the keyword and the number */
              className: "keyword",
              begin: "\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)"
            },
            {
              /* to catch numbers that do not have a word boundary on the left */
              className: "number",
              begin:
                "\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\b",
              relevance: 0
            },
            hljs.COMMENT("//", "[;$]"),
            hljs.COMMENT("!", "[;$]"),
            hljs.COMMENT("--eg:", "$"),
            hljs.QUOTE_STRING_MODE,
            {
              className: "string",
              begin: "'",
              end: "'"
            },
            hljs.C_NUMBER_MODE,
            {
              className: "variable",
              begin: "\\$[A-Za-z0-9_]+"
            }
          ]
        };
      };

      /***/
    },
    /* 194 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var PARAMS = {
          className: "params",
          begin: "\\(",
          end: "\\)"
        };

        var FUNCTION_NAMES =
          "attribute block constant cycle date dump include " +
          "max min parent random range source template_from_string";

        var FUNCTIONS = {
          beginKeywords: FUNCTION_NAMES,
          keywords: { name: FUNCTION_NAMES },
          relevance: 0,
          contains: [PARAMS]
        };

        var FILTER = {
          begin: /\|[A-Za-z_]+:?/,
          keywords:
            "abs batch capitalize convert_encoding date date_modify default " +
            "escape first format join json_encode keys last length lower " +
            "merge nl2br number_format raw replace reverse round slice sort split " +
            "striptags title trim upper url_encode",
          contains: [FUNCTIONS]
        };

        var TAGS =
          "autoescape block do embed extends filter flush for " +
          "if import include macro sandbox set spaceless use verbatim";

        TAGS =
          TAGS +
          " " +
          TAGS.split(" ")
            .map(function(t) {
              return "end" + t;
            })
            .join(" ");

        return {
          aliases: ["craftcms"],
          case_insensitive: true,
          subLanguage: "xml",
          contains: [
            hljs.COMMENT(/\{#/, /#}/),
            {
              className: "template-tag",
              begin: /\{%/,
              end: /%}/,
              contains: [
                {
                  className: "name",
                  begin: /\w+/,
                  keywords: TAGS,
                  starts: {
                    endsWithParent: true,
                    contains: [FILTER, FUNCTIONS],
                    relevance: 0
                  }
                }
              ]
            },
            {
              className: "template-variable",
              begin: /\{\{/,
              end: /}}/,
              contains: ["self", FILTER, FUNCTIONS]
            }
          ]
        };
      };

      /***/
    },
    /* 195 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            "in if for while finally var new function do return void else break catch " +
            "instanceof with throw case default try this switch continue typeof delete " +
            "let yield const class public private protected get set super " +
            "static implements enum export import declare type namespace abstract " +
            "as from extends async await",
          literal: "true false null undefined NaN Infinity",
          built_in:
            "eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent " +
            "encodeURI encodeURIComponent escape unescape Object Function Boolean Error " +
            "EvalError InternalError RangeError ReferenceError StopIteration SyntaxError " +
            "TypeError URIError Number Math Date String RegExp Array Float32Array " +
            "Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array " +
            "Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require " +
            "module console window document any number boolean string void Promise"
        };

        return {
          aliases: ["ts"],
          keywords: KEYWORDS,
          contains: [
            {
              className: "meta",
              begin: /^\s*['"]use strict['"]/
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              // template string
              className: "string",
              begin: "`",
              end: "`",
              contains: [
                hljs.BACKSLASH_ESCAPE,
                {
                  className: "subst",
                  begin: "\\$\\{",
                  end: "\\}"
                }
              ]
            },
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: "number",
              variants: [
                { begin: "\\b(0[bB][01]+)" },
                { begin: "\\b(0[oO][0-7]+)" },
                { begin: hljs.C_NUMBER_RE }
              ],
              relevance: 0
            },
            {
              // "value" container
              begin:
                "(" + hljs.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
              keywords: "return throw case",
              contains: [
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                hljs.REGEXP_MODE,
                {
                  className: "function",
                  begin: "(\\(.*?\\)|" + hljs.IDENT_RE + ")\\s*=>",
                  returnBegin: true,
                  end: "\\s*=>",
                  contains: [
                    {
                      className: "params",
                      variants: [
                        {
                          begin: hljs.IDENT_RE
                        },
                        {
                          begin: /\(\s*\)/
                        },
                        {
                          begin: /\(/,
                          end: /\)/,
                          excludeBegin: true,
                          excludeEnd: true,
                          keywords: KEYWORDS,
                          contains: [
                            "self",
                            hljs.C_LINE_COMMENT_MODE,
                            hljs.C_BLOCK_COMMENT_MODE
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              relevance: 0
            },
            {
              className: "function",
              begin: "function",
              end: /[\{;]/,
              excludeEnd: true,
              keywords: KEYWORDS,
              contains: [
                "self",
                hljs.inherit(hljs.TITLE_MODE, {
                  begin: /[A-Za-z$_][0-9A-Za-z$_]*/
                }),
                {
                  className: "params",
                  begin: /\(/,
                  end: /\)/,
                  excludeBegin: true,
                  excludeEnd: true,
                  keywords: KEYWORDS,
                  contains: [
                    hljs.C_LINE_COMMENT_MODE,
                    hljs.C_BLOCK_COMMENT_MODE
                  ],
                  illegal: /["'\(]/
                }
              ],
              illegal: /%/,
              relevance: 0 // () => {} is more typical in TypeScript
            },
            {
              beginKeywords: "constructor",
              end: /\{/,
              excludeEnd: true,
              contains: [
                "self",
                {
                  className: "params",
                  begin: /\(/,
                  end: /\)/,
                  excludeBegin: true,
                  excludeEnd: true,
                  keywords: KEYWORDS,
                  contains: [
                    hljs.C_LINE_COMMENT_MODE,
                    hljs.C_BLOCK_COMMENT_MODE
                  ],
                  illegal: /["'\(]/
                }
              ]
            },
            {
              // prevent references like module.id from being higlighted as module definitions
              begin: /module\./,
              keywords: { built_in: "module" },
              relevance: 0
            },
            {
              beginKeywords: "module",
              end: /\{/,
              excludeEnd: true
            },
            {
              beginKeywords: "interface",
              end: /\{/,
              excludeEnd: true,
              keywords: "interface extends"
            },
            {
              begin: /\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`
            },
            {
              begin: "\\." + hljs.IDENT_RE,
              relevance: 0 // hack: prevents detection of keywords after dots
            },
            {
              className: "meta",
              begin: "@[A-Za-z]+"
            }
          ]
        };
      };

      /***/
    },
    /* 196 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            keyword:
              // Value types
              "char uchar unichar int uint long ulong short ushort int8 int16 int32 int64 uint8 " +
              "uint16 uint32 uint64 float double bool struct enum string void " +
              // Reference types
              "weak unowned owned " +
              // Modifiers
              "async signal static abstract interface override virtual delegate " +
              // Control Structures
              "if while do for foreach else switch case break default return try catch " +
              // Visibility
              "public private protected internal " +
              // Other
              "using new this get set const stdout stdin stderr var",
            built_in: "DBus GLib CCode Gee Object Gtk Posix",
            literal: "false true null"
          },
          contains: [
            {
              className: "class",
              beginKeywords: "class interface namespace",
              end: "{",
              excludeEnd: true,
              illegal: "[^,:\\n\\s\\.]",
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: "string",
              begin: '"""',
              end: '"""',
              relevance: 5
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE,
            {
              className: "meta",
              begin: "^#",
              end: "$",
              relevance: 2
            }
          ]
        };
      };

      /***/
    },
    /* 197 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["vb"],
          case_insensitive: true,
          keywords: {
            keyword:
              "addhandler addressof alias and andalso aggregate ansi as assembly auto binary by byref byval " /* a-b */ +
              "call case catch class compare const continue custom declare default delegate dim distinct do " /* c-d */ +
              "each equals else elseif end enum erase error event exit explicit finally for friend from function " /* e-f */ +
              "get global goto group handles if implements imports in inherits interface into is isfalse isnot istrue " /* g-i */ +
              "join key let lib like loop me mid mod module mustinherit mustoverride mybase myclass " /* j-m */ +
              "namespace narrowing new next not notinheritable notoverridable " /* n */ +
              "of off on operator option optional or order orelse overloads overridable overrides " /* o */ +
              "paramarray partial preserve private property protected public " /* p */ +
              "raiseevent readonly redim rem removehandler resume return " /* r */ +
              "select set shadows shared skip static step stop structure strict sub synclock " /* s */ +
              "take text then throw to try unicode until using when where while widening with withevents writeonly xor" /* t-x */,
            built_in:
              "boolean byte cbool cbyte cchar cdate cdec cdbl char cint clng cobj csbyte cshort csng cstr ctype " /* b-c */ +
              "date decimal directcast double gettype getxmlnamespace iif integer long object " /* d-o */ +
              "sbyte short single string trycast typeof uinteger ulong ushort" /* s-u */,
            literal: "true false nothing"
          },
          illegal:
            "//|{|}|endif|gosub|variant|wend" /* reserved deprecated keywords */,
          contains: [
            hljs.inherit(hljs.QUOTE_STRING_MODE, {
              contains: [{ begin: '""' }]
            }),
            hljs.COMMENT("'", "$", {
              returnBegin: true,
              contains: [
                {
                  className: "doctag",
                  begin: "'''|<!--|-->",
                  contains: [hljs.PHRASAL_WORDS_MODE]
                },
                {
                  className: "doctag",
                  begin: "</?",
                  end: ">",
                  contains: [hljs.PHRASAL_WORDS_MODE]
                }
              ]
            }),
            hljs.C_NUMBER_MODE,
            {
              className: "meta",
              begin: "#",
              end: "$",
              keywords: {
                "meta-keyword": "if else elseif end region externalsource"
              }
            }
          ]
        };
      };

      /***/
    },
    /* 198 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ["vbs"],
          case_insensitive: true,
          keywords: {
            keyword:
              "call class const dim do loop erase execute executeglobal exit for each next function " +
              "if then else on error option explicit new private property let get public randomize " +
              "redim rem select case set stop sub while wend with end to elseif is or xor and not " +
              "class_initialize class_terminate default preserve in me byval byref step resume goto",
            built_in:
              "lcase month vartype instrrev ubound setlocale getobject rgb getref string " +
              "weekdayname rnd dateadd monthname now day minute isarray cbool round formatcurrency " +
              "conversions csng timevalue second year space abs clng timeserial fixs len asc " +
              "isempty maths dateserial atn timer isobject filter weekday datevalue ccur isdate " +
              "instr datediff formatdatetime replace isnull right sgn array snumeric log cdbl hex " +
              "chr lbound msgbox ucase getlocale cos cdate cbyte rtrim join hour oct typename trim " +
              "strcomp int createobject loadpicture tan formatnumber mid scriptenginebuildversion " +
              "scriptengine split scriptengineminorversion cint sin datepart ltrim sqr " +
              "scriptenginemajorversion time derived eval date formatpercent exp inputbox left ascw " +
              "chrw regexp server response request cstr err",
            literal: "true false null nothing empty"
          },
          illegal: "//",
          contains: [
            hljs.inherit(hljs.QUOTE_STRING_MODE, {
              contains: [{ begin: '""' }]
            }),
            hljs.COMMENT(/'/, /$/, {
              relevance: 0
            }),
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 199 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          subLanguage: "xml",
          contains: [
            {
              begin: "<%",
              end: "%>",
              subLanguage: "vbscript"
            }
          ]
        };
      };

      /***/
    },
    /* 200 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var SV_KEYWORDS = {
          keyword:
            "accept_on alias always always_comb always_ff always_latch and assert assign " +
            "assume automatic before begin bind bins binsof bit break buf|0 bufif0 bufif1 " +
            "byte case casex casez cell chandle checker class clocking cmos config const " +
            "constraint context continue cover covergroup coverpoint cross deassign default " +
            "defparam design disable dist do edge else end endcase endchecker endclass " +
            "endclocking endconfig endfunction endgenerate endgroup endinterface endmodule " +
            "endpackage endprimitive endprogram endproperty endspecify endsequence endtable " +
            "endtask enum event eventually expect export extends extern final first_match for " +
            "force foreach forever fork forkjoin function generate|5 genvar global highz0 highz1 " +
            "if iff ifnone ignore_bins illegal_bins implements implies import incdir include " +
            "initial inout input inside instance int integer interconnect interface intersect " +
            "join join_any join_none large let liblist library local localparam logic longint " +
            "macromodule matches medium modport module nand negedge nettype new nexttime nmos " +
            "nor noshowcancelled not notif0 notif1 or output package packed parameter pmos " +
            "posedge primitive priority program property protected pull0 pull1 pulldown pullup " +
            "pulsestyle_ondetect pulsestyle_onevent pure rand randc randcase randsequence rcmos " +
            "real realtime ref reg reject_on release repeat restrict return rnmos rpmos rtran " +
            "rtranif0 rtranif1 s_always s_eventually s_nexttime s_until s_until_with scalared " +
            "sequence shortint shortreal showcancelled signed small soft solve specify specparam " +
            "static string strong strong0 strong1 struct super supply0 supply1 sync_accept_on " +
            "sync_reject_on table tagged task this throughout time timeprecision timeunit tran " +
            "tranif0 tranif1 tri tri0 tri1 triand trior trireg type typedef union unique unique0 " +
            "unsigned until until_with untyped use uwire var vectored virtual void wait wait_order " +
            "wand weak weak0 weak1 while wildcard wire with within wor xnor xor",
          literal: "null",
          built_in:
            "$finish $stop $exit $fatal $error $warning $info $realtime $time $printtimescale " +
            "$bitstoreal $bitstoshortreal $itor $signed $cast $bits $stime $timeformat " +
            "$realtobits $shortrealtobits $rtoi $unsigned $asserton $assertkill $assertpasson " +
            "$assertfailon $assertnonvacuouson $assertoff $assertcontrol $assertpassoff " +
            "$assertfailoff $assertvacuousoff $isunbounded $sampled $fell $changed $past_gclk " +
            "$fell_gclk $changed_gclk $rising_gclk $steady_gclk $coverage_control " +
            "$coverage_get $coverage_save $set_coverage_db_name $rose $stable $past " +
            "$rose_gclk $stable_gclk $future_gclk $falling_gclk $changing_gclk $display " +
            "$coverage_get_max $coverage_merge $get_coverage $load_coverage_db $typename " +
            "$unpacked_dimensions $left $low $increment $clog2 $ln $log10 $exp $sqrt $pow " +
            "$floor $ceil $sin $cos $tan $countbits $onehot $isunknown $fatal $warning " +
            "$dimensions $right $high $size $asin $acos $atan $atan2 $hypot $sinh $cosh " +
            "$tanh $asinh $acosh $atanh $countones $onehot0 $error $info $random " +
            "$dist_chi_square $dist_erlang $dist_exponential $dist_normal $dist_poisson " +
            "$dist_t $dist_uniform $q_initialize $q_remove $q_exam $async$and$array " +
            "$async$nand$array $async$or$array $async$nor$array $sync$and$array " +
            "$sync$nand$array $sync$or$array $sync$nor$array $q_add $q_full $psprintf " +
            "$async$and$plane $async$nand$plane $async$or$plane $async$nor$plane " +
            "$sync$and$plane $sync$nand$plane $sync$or$plane $sync$nor$plane $system " +
            "$display $displayb $displayh $displayo $strobe $strobeb $strobeh $strobeo " +
            "$write $readmemb $readmemh $writememh $value$plusargs " +
            "$dumpvars $dumpon $dumplimit $dumpports $dumpportson $dumpportslimit " +
            "$writeb $writeh $writeo $monitor $monitorb $monitorh $monitoro $writememb " +
            "$dumpfile $dumpoff $dumpall $dumpflush $dumpportsoff $dumpportsall " +
            "$dumpportsflush $fclose $fdisplay $fdisplayb $fdisplayh $fdisplayo " +
            "$fstrobe $fstrobeb $fstrobeh $fstrobeo $swrite $swriteb $swriteh " +
            "$swriteo $fscanf $fread $fseek $fflush $feof $fopen $fwrite $fwriteb " +
            "$fwriteh $fwriteo $fmonitor $fmonitorb $fmonitorh $fmonitoro $sformat " +
            "$sformatf $fgetc $ungetc $fgets $sscanf $rewind $ftell $ferror"
        };
        return {
          aliases: ["v", "sv", "svh"],
          case_insensitive: false,
          keywords: SV_KEYWORDS,
          lexemes: /[\w\$]+/,
          contains: [
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.C_LINE_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: "number",
              contains: [hljs.BACKSLASH_ESCAPE],
              variants: [
                { begin: "\\b((\\d+'(b|h|o|d|B|H|O|D))[0-9xzXZa-fA-F_]+)" },
                { begin: "\\B(('(b|h|o|d|B|H|O|D))[0-9xzXZa-fA-F_]+)" },
                { begin: "\\b([0-9_])+", relevance: 0 }
              ]
            },
            /* parameters to instances */
            {
              className: "variable",
              variants: [
                { begin: "#\\((?!parameter).+\\)" },
                { begin: "\\.\\w+", relevance: 0 }
              ]
            },
            {
              className: "meta",
              begin: "`",
              end: "$",
              keywords: {
                "meta-keyword":
                  "define __FILE__ " +
                  "__LINE__ begin_keywords celldefine default_nettype define " +
                  "else elsif end_keywords endcelldefine endif ifdef ifndef " +
                  "include line nounconnected_drive pragma resetall timescale " +
                  "unconnected_drive undef undefineall"
              },
              relevance: 0
            }
          ]
        }; // return
      };

      /***/
    },
    /* 201 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        // Regular expression for VHDL numeric literals.

        // Decimal literal:
        var INTEGER_RE = "\\d(_|\\d)*";
        var EXPONENT_RE = "[eE][-+]?" + INTEGER_RE;
        var DECIMAL_LITERAL_RE =
          INTEGER_RE + "(\\." + INTEGER_RE + ")?" + "(" + EXPONENT_RE + ")?";
        // Based literal:
        var BASED_INTEGER_RE = "\\w+";
        var BASED_LITERAL_RE =
          INTEGER_RE +
          "#" +
          BASED_INTEGER_RE +
          "(\\." +
          BASED_INTEGER_RE +
          ")?" +
          "#" +
          "(" +
          EXPONENT_RE +
          ")?";

        var NUMBER_RE =
          "\\b(" + BASED_LITERAL_RE + "|" + DECIMAL_LITERAL_RE + ")";

        return {
          case_insensitive: true,
          keywords: {
            keyword:
              "abs access after alias all and architecture array assert assume assume_guarantee attribute " +
              "begin block body buffer bus case component configuration constant context cover disconnect " +
              "downto default else elsif end entity exit fairness file for force function generate " +
              "generic group guarded if impure in inertial inout is label library linkage literal " +
              "loop map mod nand new next nor not null of on open or others out package port " +
              "postponed procedure process property protected pure range record register reject " +
              "release rem report restrict restrict_guarantee return rol ror select sequence " +
              "severity shared signal sla sll sra srl strong subtype then to transport type " +
              "unaffected units until use variable vmode vprop vunit wait when while with xnor xor",
            built_in:
              "boolean bit character " +
              "integer time delay_length natural positive " +
              "string bit_vector file_open_kind file_open_status " +
              "std_logic std_logic_vector unsigned signed boolean_vector integer_vector " +
              "std_ulogic std_ulogic_vector unresolved_unsigned u_unsigned unresolved_signed u_signed" +
              "real_vector time_vector",
            literal:
              "false true note warning error failure " + "line text side width" // severity_level // textio
          },
          illegal: "{",
          contains: [
            hljs.C_BLOCK_COMMENT_MODE, // VHDL-2008 block commenting.
            hljs.COMMENT("--", "$"),
            hljs.QUOTE_STRING_MODE,
            {
              className: "number",
              begin: NUMBER_RE,
              relevance: 0
            },
            {
              className: "string",
              begin: "'(U|X|0|1|Z|W|L|H|-)'",
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              className: "symbol",
              begin: "'[A-Za-z](_?[A-Za-z0-9])*",
              contains: [hljs.BACKSLASH_ESCAPE]
            }
          ]
        };
      };

      /***/
    },
    /* 202 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          lexemes: /[!#@\w]+/,
          keywords: {
            keyword:
              // express version except: ! & * < = > !! # @ @@
              "N|0 P|0 X|0 a|0 ab abc abo al am an|0 ar arga argd arge argdo argg argl argu as au aug aun b|0 bN ba bad bd be bel bf bl bm bn bo bp br brea breaka breakd breakl bro bufdo buffers bun bw c|0 cN cNf ca cabc caddb cad caddf cal cat cb cc ccl cd ce cex cf cfir cgetb cgete cg changes chd che checkt cl cla clo cm cmapc cme cn cnew cnf cno cnorea cnoreme co col colo com comc comp con conf cope " +
              "cp cpf cq cr cs cst cu cuna cunme cw delm deb debugg delc delf dif diffg diffo diffp diffpu diffs diffthis dig di dl dell dj dli do doautoa dp dr ds dsp e|0 ea ec echoe echoh echom echon el elsei em en endfo endf endt endw ene ex exe exi exu f|0 files filet fin fina fini fir fix fo foldc foldd folddoc foldo for fu go gr grepa gu gv ha helpf helpg helpt hi hid his ia iabc if ij il im imapc " +
              "ime ino inorea inoreme int is isp iu iuna iunme j|0 ju k|0 keepa kee keepj lN lNf l|0 lad laddb laddf la lan lat lb lc lch lcl lcs le lefta let lex lf lfir lgetb lgete lg lgr lgrepa lh ll lla lli lmak lm lmapc lne lnew lnf ln loadk lo loc lockv lol lope lp lpf lr ls lt lu lua luad luaf lv lvimgrepa lw m|0 ma mak map mapc marks mat me menut mes mk mks mksp mkv mkvie mod mz mzf nbc nb nbs new nm nmapc nme nn nnoreme noa no noh norea noreme norm nu nun nunme ol o|0 om omapc ome on ono onoreme opt ou ounme ow p|0 " +
              "profd prof pro promptr pc ped pe perld po popu pp pre prev ps pt ptN ptf ptj ptl ptn ptp ptr pts pu pw py3 python3 py3d py3f py pyd pyf quita qa rec red redi redr redraws reg res ret retu rew ri rightb rub rubyd rubyf rund ru rv sN san sa sal sav sb sbN sba sbf sbl sbm sbn sbp sbr scrip scripte scs se setf setg setl sf sfir sh sim sig sil sl sla sm smap smapc sme sn sni sno snor snoreme sor " +
              "so spelld spe spelli spellr spellu spellw sp spr sre st sta startg startr star stopi stj sts sun sunm sunme sus sv sw sy synti sync tN tabN tabc tabdo tabe tabf tabfir tabl tabm tabnew " +
              "tabn tabo tabp tabr tabs tab ta tags tc tcld tclf te tf th tj tl tm tn to tp tr try ts tu u|0 undoj undol una unh unl unlo unm unme uns up ve verb vert vim vimgrepa vi viu vie vm vmapc vme vne vn vnoreme vs vu vunme windo w|0 wN wa wh wi winc winp wn wp wq wqa ws wu wv x|0 xa xmapc xm xme xn xnoreme xu xunme y|0 z|0 ~ " +
              // full version
              "Next Print append abbreviate abclear aboveleft all amenu anoremenu args argadd argdelete argedit argglobal arglocal argument ascii autocmd augroup aunmenu buffer bNext ball badd bdelete behave belowright bfirst blast bmodified bnext botright bprevious brewind break breakadd breakdel breaklist browse bunload " +
              "bwipeout change cNext cNfile cabbrev cabclear caddbuffer caddexpr caddfile call catch cbuffer cclose center cexpr cfile cfirst cgetbuffer cgetexpr cgetfile chdir checkpath checktime clist clast close cmap cmapclear cmenu cnext cnewer cnfile cnoremap cnoreabbrev cnoremenu copy colder colorscheme command comclear compiler continue confirm copen cprevious cpfile cquit crewind cscope cstag cunmap " +
              "cunabbrev cunmenu cwindow delete delmarks debug debuggreedy delcommand delfunction diffupdate diffget diffoff diffpatch diffput diffsplit digraphs display deletel djump dlist doautocmd doautoall deletep drop dsearch dsplit edit earlier echo echoerr echohl echomsg else elseif emenu endif endfor " +
              "endfunction endtry endwhile enew execute exit exusage file filetype find finally finish first fixdel fold foldclose folddoopen folddoclosed foldopen function global goto grep grepadd gui gvim hardcopy help helpfind helpgrep helptags highlight hide history insert iabbrev iabclear ijump ilist imap " +
              "imapclear imenu inoremap inoreabbrev inoremenu intro isearch isplit iunmap iunabbrev iunmenu join jumps keepalt keepmarks keepjumps lNext lNfile list laddexpr laddbuffer laddfile last language later lbuffer lcd lchdir lclose lcscope left leftabove lexpr lfile lfirst lgetbuffer lgetexpr lgetfile lgrep lgrepadd lhelpgrep llast llist lmake lmap lmapclear lnext lnewer lnfile lnoremap loadkeymap loadview " +
              "lockmarks lockvar lolder lopen lprevious lpfile lrewind ltag lunmap luado luafile lvimgrep lvimgrepadd lwindow move mark make mapclear match menu menutranslate messages mkexrc mksession mkspell mkvimrc mkview mode mzscheme mzfile nbclose nbkey nbsart next nmap nmapclear nmenu nnoremap " +
              "nnoremenu noautocmd noremap nohlsearch noreabbrev noremenu normal number nunmap nunmenu oldfiles open omap omapclear omenu only onoremap onoremenu options ounmap ounmenu ownsyntax print profdel profile promptfind promptrepl pclose pedit perl perldo pop popup ppop preserve previous psearch ptag ptNext " +
              "ptfirst ptjump ptlast ptnext ptprevious ptrewind ptselect put pwd py3do py3file python pydo pyfile quit quitall qall read recover redo redir redraw redrawstatus registers resize retab return rewind right rightbelow ruby rubydo rubyfile rundo runtime rviminfo substitute sNext sandbox sargument sall saveas sbuffer sbNext sball sbfirst sblast sbmodified sbnext sbprevious sbrewind scriptnames scriptencoding " +
              "scscope set setfiletype setglobal setlocal sfind sfirst shell simalt sign silent sleep slast smagic smapclear smenu snext sniff snomagic snoremap snoremenu sort source spelldump spellgood spellinfo spellrepall spellundo spellwrong split sprevious srewind stop stag startgreplace startreplace " +
              "startinsert stopinsert stjump stselect sunhide sunmap sunmenu suspend sview swapname syntax syntime syncbind tNext tabNext tabclose tabedit tabfind tabfirst tablast tabmove tabnext tabonly tabprevious tabrewind tag tcl tcldo tclfile tearoff tfirst throw tjump tlast tmenu tnext topleft tprevious " +
              "trewind tselect tunmenu undo undojoin undolist unabbreviate unhide unlet unlockvar unmap unmenu unsilent update vglobal version verbose vertical vimgrep vimgrepadd visual viusage view vmap vmapclear vmenu vnew " +
              "vnoremap vnoremenu vsplit vunmap vunmenu write wNext wall while winsize wincmd winpos wnext wprevious wqall wsverb wundo wviminfo xit xall xmapclear xmap xmenu xnoremap xnoremenu xunmap xunmenu yank",
            //built in func
            built_in:
              "synIDtrans atan2 range matcharg did_filetype asin feedkeys xor argv " +
              "complete_check add getwinposx getqflist getwinposy screencol " +
              "clearmatches empty extend getcmdpos mzeval garbagecollect setreg " +
              "ceil sqrt diff_hlID inputsecret get getfperm getpid filewritable " +
              "shiftwidth max sinh isdirectory synID system inputrestore winline " +
              "atan visualmode inputlist tabpagewinnr round getregtype mapcheck " +
              "hasmapto histdel argidx findfile sha256 exists toupper getcmdline " +
              "taglist string getmatches bufnr strftime winwidth bufexists " +
              "strtrans tabpagebuflist setcmdpos remote_read printf setloclist " +
              "getpos getline bufwinnr float2nr len getcmdtype diff_filler luaeval " +
              "resolve libcallnr foldclosedend reverse filter has_key bufname " +
              "str2float strlen setline getcharmod setbufvar index searchpos " +
              "shellescape undofile foldclosed setqflist buflisted strchars str2nr " +
              "virtcol floor remove undotree remote_expr winheight gettabwinvar " +
              "reltime cursor tabpagenr finddir localtime acos getloclist search " +
              "tanh matchend rename gettabvar strdisplaywidth type abs py3eval " +
              "setwinvar tolower wildmenumode log10 spellsuggest bufloaded " +
              "synconcealed nextnonblank server2client complete settabwinvar " +
              "executable input wincol setmatches getftype hlID inputsave " +
              "searchpair or screenrow line settabvar histadd deepcopy strpart " +
              "remote_peek and eval getftime submatch screenchar winsaveview " +
              "matchadd mkdir screenattr getfontname libcall reltimestr getfsize " +
              "winnr invert pow getbufline byte2line soundfold repeat fnameescape " +
              "tagfiles sin strwidth spellbadword trunc maparg log lispindent " +
              "hostname setpos globpath remote_foreground getchar synIDattr " +
              "fnamemodify cscope_connection stridx winbufnr indent min " +
              "complete_add nr2char searchpairpos inputdialog values matchlist " +
              "items hlexists strridx browsedir expand fmod pathshorten line2byte " +
              "argc count getwinvar glob foldtextresult getreg foreground cosh " +
              "matchdelete has char2nr simplify histget searchdecl iconv " +
              "winrestcmd pumvisible writefile foldlevel haslocaldir keys cos " +
              "matchstr foldtext histnr tan tempname getcwd byteidx getbufvar " +
              "islocked escape eventhandler remote_send serverlist winrestview " +
              "synstack pyeval prevnonblank readfile cindent filereadable changenr " +
              "exp"
          },
          illegal: /;/,
          contains: [
            hljs.NUMBER_MODE,
            hljs.APOS_STRING_MODE,

            /*
	      A double quote can start either a string or a line comment. Strings are
	      ended before the end of a line by another double quote and can contain
	      escaped double-quotes and post-escaped line breaks.

	      Also, any double quote at the beginning of a line is a comment but we
	      don't handle that properly at the moment: any double quote inside will
	      turn them into a string. Handling it properly will require a smarter
	      parser.
	      */
            {
              className: "string",
              begin: /"(\\"|\n\\|[^"\n])*"/
            },
            hljs.COMMENT('"', "$"),

            {
              className: "variable",
              begin: /[bwtglsav]:[\w\d_]*/
            },
            {
              className: "function",
              beginKeywords: "function function!",
              end: "$",
              relevance: 0,
              contains: [
                hljs.TITLE_MODE,
                {
                  className: "params",
                  begin: "\\(",
                  end: "\\)"
                }
              ]
            },
            {
              className: "symbol",
              begin: /<[\w-]+>/
            }
          ]
        };
      };

      /***/
    },
    /* 203 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          case_insensitive: true,
          lexemes: "[.%]?" + hljs.IDENT_RE,
          keywords: {
            keyword:
              "lock rep repe repz repne repnz xaquire xrelease bnd nobnd " +
              "aaa aad aam aas adc add and arpl bb0_reset bb1_reset bound bsf bsr bswap bt btc btr bts call cbw cdq cdqe clc cld cli clts cmc cmp cmpsb cmpsd cmpsq cmpsw cmpxchg cmpxchg486 cmpxchg8b cmpxchg16b cpuid cpu_read cpu_write cqo cwd cwde daa das dec div dmint emms enter equ f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcmovb fcmovbe fcmove fcmovnb fcmovnbe fcmovne fcmovnu fcmovu fcom fcomi fcomip fcomp fcompp fcos fdecstp fdisi fdiv fdivp fdivr fdivrp femms feni ffree ffreep fiadd ficom ficomp fidiv fidivr fild fimul fincstp finit fist fistp fisttp fisub fisubr fld fld1 fldcw fldenv fldl2e fldl2t fldlg2 fldln2 fldpi fldz fmul fmulp fnclex fndisi fneni fninit fnop fnsave fnstcw fnstenv fnstsw fpatan fprem fprem1 fptan frndint frstor fsave fscale fsetpm fsin fsincos fsqrt fst fstcw fstenv fstp fstsw fsub fsubp fsubr fsubrp ftst fucom fucomi fucomip fucomp fucompp fxam fxch fxtract fyl2x fyl2xp1 hlt ibts icebp idiv imul in inc incbin insb insd insw int int01 int1 int03 int3 into invd invpcid invlpg invlpga iret iretd iretq iretw jcxz jecxz jrcxz jmp jmpe lahf lar lds lea leave les lfence lfs lgdt lgs lidt lldt lmsw loadall loadall286 lodsb lodsd lodsq lodsw loop loope loopne loopnz loopz lsl lss ltr mfence monitor mov movd movq movsb movsd movsq movsw movsx movsxd movzx mul mwait neg nop not or out outsb outsd outsw packssdw packsswb packuswb paddb paddd paddsb paddsiw paddsw paddusb paddusw paddw pand pandn pause paveb pavgusb pcmpeqb pcmpeqd pcmpeqw pcmpgtb pcmpgtd pcmpgtw pdistib pf2id pfacc pfadd pfcmpeq pfcmpge pfcmpgt pfmax pfmin pfmul pfrcp pfrcpit1 pfrcpit2 pfrsqit1 pfrsqrt pfsub pfsubr pi2fd pmachriw pmaddwd pmagw pmulhriw pmulhrwa pmulhrwc pmulhw pmullw pmvgezb pmvlzb pmvnzb pmvzb pop popa popad popaw popf popfd popfq popfw por prefetch prefetchw pslld psllq psllw psrad psraw psrld psrlq psrlw psubb psubd psubsb psubsiw psubsw psubusb psubusw psubw punpckhbw punpckhdq punpckhwd punpcklbw punpckldq punpcklwd push pusha pushad pushaw pushf pushfd pushfq pushfw pxor rcl rcr rdshr rdmsr rdpmc rdtsc rdtscp ret retf retn rol ror rdm rsdc rsldt rsm rsts sahf sal salc sar sbb scasb scasd scasq scasw sfence sgdt shl shld shr shrd sidt sldt skinit smi smint smintold smsw stc std sti stosb stosd stosq stosw str sub svdc svldt svts swapgs syscall sysenter sysexit sysret test ud0 ud1 ud2b ud2 ud2a umov verr verw fwait wbinvd wrshr wrmsr xadd xbts xchg xlatb xlat xor cmove cmovz cmovne cmovnz cmova cmovnbe cmovae cmovnb cmovb cmovnae cmovbe cmovna cmovg cmovnle cmovge cmovnl cmovl cmovnge cmovle cmovng cmovc cmovnc cmovo cmovno cmovs cmovns cmovp cmovpe cmovnp cmovpo je jz jne jnz ja jnbe jae jnb jb jnae jbe jna jg jnle jge jnl jl jnge jle jng jc jnc jo jno js jns jpo jnp jpe jp sete setz setne setnz seta setnbe setae setnb setnc setb setnae setcset setbe setna setg setnle setge setnl setl setnge setle setng sets setns seto setno setpe setp setpo setnp addps addss andnps andps cmpeqps cmpeqss cmpleps cmpless cmpltps cmpltss cmpneqps cmpneqss cmpnleps cmpnless cmpnltps cmpnltss cmpordps cmpordss cmpunordps cmpunordss cmpps cmpss comiss cvtpi2ps cvtps2pi cvtsi2ss cvtss2si cvttps2pi cvttss2si divps divss ldmxcsr maxps maxss minps minss movaps movhps movlhps movlps movhlps movmskps movntps movss movups mulps mulss orps rcpps rcpss rsqrtps rsqrtss shufps sqrtps sqrtss stmxcsr subps subss ucomiss unpckhps unpcklps xorps fxrstor fxrstor64 fxsave fxsave64 xgetbv xsetbv xsave xsave64 xsaveopt xsaveopt64 xrstor xrstor64 prefetchnta prefetcht0 prefetcht1 prefetcht2 maskmovq movntq pavgb pavgw pextrw pinsrw pmaxsw pmaxub pminsw pminub pmovmskb pmulhuw psadbw pshufw pf2iw pfnacc pfpnacc pi2fw pswapd maskmovdqu clflush movntdq movnti movntpd movdqa movdqu movdq2q movq2dq paddq pmuludq pshufd pshufhw pshuflw pslldq psrldq psubq punpckhqdq punpcklqdq addpd addsd andnpd andpd cmpeqpd cmpeqsd cmplepd cmplesd cmpltpd cmpltsd cmpneqpd cmpneqsd cmpnlepd cmpnlesd cmpnltpd cmpnltsd cmpordpd cmpordsd cmpunordpd cmpunordsd cmppd comisd cvtdq2pd cvtdq2ps cvtpd2dq cvtpd2pi cvtpd2ps cvtpi2pd cvtps2dq cvtps2pd cvtsd2si cvtsd2ss cvtsi2sd cvtss2sd cvttpd2pi cvttpd2dq cvttps2dq cvttsd2si divpd divsd maxpd maxsd minpd minsd movapd movhpd movlpd movmskpd movupd mulpd mulsd orpd shufpd sqrtpd sqrtsd subpd subsd ucomisd unpckhpd unpcklpd xorpd addsubpd addsubps haddpd haddps hsubpd hsubps lddqu movddup movshdup movsldup clgi stgi vmcall vmclear vmfunc vmlaunch vmload vmmcall vmptrld vmptrst vmread vmresume vmrun vmsave vmwrite vmxoff vmxon invept invvpid pabsb pabsw pabsd palignr phaddw phaddd phaddsw phsubw phsubd phsubsw pmaddubsw pmulhrsw pshufb psignb psignw psignd extrq insertq movntsd movntss lzcnt blendpd blendps blendvpd blendvps dppd dpps extractps insertps movntdqa mpsadbw packusdw pblendvb pblendw pcmpeqq pextrb pextrd pextrq phminposuw pinsrb pinsrd pinsrq pmaxsb pmaxsd pmaxud pmaxuw pminsb pminsd pminud pminuw pmovsxbw pmovsxbd pmovsxbq pmovsxwd pmovsxwq pmovsxdq pmovzxbw pmovzxbd pmovzxbq pmovzxwd pmovzxwq pmovzxdq pmuldq pmulld ptest roundpd roundps roundsd roundss crc32 pcmpestri pcmpestrm pcmpistri pcmpistrm pcmpgtq popcnt getsec pfrcpv pfrsqrtv movbe aesenc aesenclast aesdec aesdeclast aesimc aeskeygenassist vaesenc vaesenclast vaesdec vaesdeclast vaesimc vaeskeygenassist vaddpd vaddps vaddsd vaddss vaddsubpd vaddsubps vandpd vandps vandnpd vandnps vblendpd vblendps vblendvpd vblendvps vbroadcastss vbroadcastsd vbroadcastf128 vcmpeq_ospd vcmpeqpd vcmplt_ospd vcmpltpd vcmple_ospd vcmplepd vcmpunord_qpd vcmpunordpd vcmpneq_uqpd vcmpneqpd vcmpnlt_uspd vcmpnltpd vcmpnle_uspd vcmpnlepd vcmpord_qpd vcmpordpd vcmpeq_uqpd vcmpnge_uspd vcmpngepd vcmpngt_uspd vcmpngtpd vcmpfalse_oqpd vcmpfalsepd vcmpneq_oqpd vcmpge_ospd vcmpgepd vcmpgt_ospd vcmpgtpd vcmptrue_uqpd vcmptruepd vcmplt_oqpd vcmple_oqpd vcmpunord_spd vcmpneq_uspd vcmpnlt_uqpd vcmpnle_uqpd vcmpord_spd vcmpeq_uspd vcmpnge_uqpd vcmpngt_uqpd vcmpfalse_ospd vcmpneq_ospd vcmpge_oqpd vcmpgt_oqpd vcmptrue_uspd vcmppd vcmpeq_osps vcmpeqps vcmplt_osps vcmpltps vcmple_osps vcmpleps vcmpunord_qps vcmpunordps vcmpneq_uqps vcmpneqps vcmpnlt_usps vcmpnltps vcmpnle_usps vcmpnleps vcmpord_qps vcmpordps vcmpeq_uqps vcmpnge_usps vcmpngeps vcmpngt_usps vcmpngtps vcmpfalse_oqps vcmpfalseps vcmpneq_oqps vcmpge_osps vcmpgeps vcmpgt_osps vcmpgtps vcmptrue_uqps vcmptrueps vcmplt_oqps vcmple_oqps vcmpunord_sps vcmpneq_usps vcmpnlt_uqps vcmpnle_uqps vcmpord_sps vcmpeq_usps vcmpnge_uqps vcmpngt_uqps vcmpfalse_osps vcmpneq_osps vcmpge_oqps vcmpgt_oqps vcmptrue_usps vcmpps vcmpeq_ossd vcmpeqsd vcmplt_ossd vcmpltsd vcmple_ossd vcmplesd vcmpunord_qsd vcmpunordsd vcmpneq_uqsd vcmpneqsd vcmpnlt_ussd vcmpnltsd vcmpnle_ussd vcmpnlesd vcmpord_qsd vcmpordsd vcmpeq_uqsd vcmpnge_ussd vcmpngesd vcmpngt_ussd vcmpngtsd vcmpfalse_oqsd vcmpfalsesd vcmpneq_oqsd vcmpge_ossd vcmpgesd vcmpgt_ossd vcmpgtsd vcmptrue_uqsd vcmptruesd vcmplt_oqsd vcmple_oqsd vcmpunord_ssd vcmpneq_ussd vcmpnlt_uqsd vcmpnle_uqsd vcmpord_ssd vcmpeq_ussd vcmpnge_uqsd vcmpngt_uqsd vcmpfalse_ossd vcmpneq_ossd vcmpge_oqsd vcmpgt_oqsd vcmptrue_ussd vcmpsd vcmpeq_osss vcmpeqss vcmplt_osss vcmpltss vcmple_osss vcmpless vcmpunord_qss vcmpunordss vcmpneq_uqss vcmpneqss vcmpnlt_usss vcmpnltss vcmpnle_usss vcmpnless vcmpord_qss vcmpordss vcmpeq_uqss vcmpnge_usss vcmpngess vcmpngt_usss vcmpngtss vcmpfalse_oqss vcmpfalsess vcmpneq_oqss vcmpge_osss vcmpgess vcmpgt_osss vcmpgtss vcmptrue_uqss vcmptruess vcmplt_oqss vcmple_oqss vcmpunord_sss vcmpneq_usss vcmpnlt_uqss vcmpnle_uqss vcmpord_sss vcmpeq_usss vcmpnge_uqss vcmpngt_uqss vcmpfalse_osss vcmpneq_osss vcmpge_oqss vcmpgt_oqss vcmptrue_usss vcmpss vcomisd vcomiss vcvtdq2pd vcvtdq2ps vcvtpd2dq vcvtpd2ps vcvtps2dq vcvtps2pd vcvtsd2si vcvtsd2ss vcvtsi2sd vcvtsi2ss vcvtss2sd vcvtss2si vcvttpd2dq vcvttps2dq vcvttsd2si vcvttss2si vdivpd vdivps vdivsd vdivss vdppd vdpps vextractf128 vextractps vhaddpd vhaddps vhsubpd vhsubps vinsertf128 vinsertps vlddqu vldqqu vldmxcsr vmaskmovdqu vmaskmovps vmaskmovpd vmaxpd vmaxps vmaxsd vmaxss vminpd vminps vminsd vminss vmovapd vmovaps vmovd vmovq vmovddup vmovdqa vmovqqa vmovdqu vmovqqu vmovhlps vmovhpd vmovhps vmovlhps vmovlpd vmovlps vmovmskpd vmovmskps vmovntdq vmovntqq vmovntdqa vmovntpd vmovntps vmovsd vmovshdup vmovsldup vmovss vmovupd vmovups vmpsadbw vmulpd vmulps vmulsd vmulss vorpd vorps vpabsb vpabsw vpabsd vpacksswb vpackssdw vpackuswb vpackusdw vpaddb vpaddw vpaddd vpaddq vpaddsb vpaddsw vpaddusb vpaddusw vpalignr vpand vpandn vpavgb vpavgw vpblendvb vpblendw vpcmpestri vpcmpestrm vpcmpistri vpcmpistrm vpcmpeqb vpcmpeqw vpcmpeqd vpcmpeqq vpcmpgtb vpcmpgtw vpcmpgtd vpcmpgtq vpermilpd vpermilps vperm2f128 vpextrb vpextrw vpextrd vpextrq vphaddw vphaddd vphaddsw vphminposuw vphsubw vphsubd vphsubsw vpinsrb vpinsrw vpinsrd vpinsrq vpmaddwd vpmaddubsw vpmaxsb vpmaxsw vpmaxsd vpmaxub vpmaxuw vpmaxud vpminsb vpminsw vpminsd vpminub vpminuw vpminud vpmovmskb vpmovsxbw vpmovsxbd vpmovsxbq vpmovsxwd vpmovsxwq vpmovsxdq vpmovzxbw vpmovzxbd vpmovzxbq vpmovzxwd vpmovzxwq vpmovzxdq vpmulhuw vpmulhrsw vpmulhw vpmullw vpmulld vpmuludq vpmuldq vpor vpsadbw vpshufb vpshufd vpshufhw vpshuflw vpsignb vpsignw vpsignd vpslldq vpsrldq vpsllw vpslld vpsllq vpsraw vpsrad vpsrlw vpsrld vpsrlq vptest vpsubb vpsubw vpsubd vpsubq vpsubsb vpsubsw vpsubusb vpsubusw vpunpckhbw vpunpckhwd vpunpckhdq vpunpckhqdq vpunpcklbw vpunpcklwd vpunpckldq vpunpcklqdq vpxor vrcpps vrcpss vrsqrtps vrsqrtss vroundpd vroundps vroundsd vroundss vshufpd vshufps vsqrtpd vsqrtps vsqrtsd vsqrtss vstmxcsr vsubpd vsubps vsubsd vsubss vtestps vtestpd vucomisd vucomiss vunpckhpd vunpckhps vunpcklpd vunpcklps vxorpd vxorps vzeroall vzeroupper pclmullqlqdq pclmulhqlqdq pclmullqhqdq pclmulhqhqdq pclmulqdq vpclmullqlqdq vpclmulhqlqdq vpclmullqhqdq vpclmulhqhqdq vpclmulqdq vfmadd132ps vfmadd132pd vfmadd312ps vfmadd312pd vfmadd213ps vfmadd213pd vfmadd123ps vfmadd123pd vfmadd231ps vfmadd231pd vfmadd321ps vfmadd321pd vfmaddsub132ps vfmaddsub132pd vfmaddsub312ps vfmaddsub312pd vfmaddsub213ps vfmaddsub213pd vfmaddsub123ps vfmaddsub123pd vfmaddsub231ps vfmaddsub231pd vfmaddsub321ps vfmaddsub321pd vfmsub132ps vfmsub132pd vfmsub312ps vfmsub312pd vfmsub213ps vfmsub213pd vfmsub123ps vfmsub123pd vfmsub231ps vfmsub231pd vfmsub321ps vfmsub321pd vfmsubadd132ps vfmsubadd132pd vfmsubadd312ps vfmsubadd312pd vfmsubadd213ps vfmsubadd213pd vfmsubadd123ps vfmsubadd123pd vfmsubadd231ps vfmsubadd231pd vfmsubadd321ps vfmsubadd321pd vfnmadd132ps vfnmadd132pd vfnmadd312ps vfnmadd312pd vfnmadd213ps vfnmadd213pd vfnmadd123ps vfnmadd123pd vfnmadd231ps vfnmadd231pd vfnmadd321ps vfnmadd321pd vfnmsub132ps vfnmsub132pd vfnmsub312ps vfnmsub312pd vfnmsub213ps vfnmsub213pd vfnmsub123ps vfnmsub123pd vfnmsub231ps vfnmsub231pd vfnmsub321ps vfnmsub321pd vfmadd132ss vfmadd132sd vfmadd312ss vfmadd312sd vfmadd213ss vfmadd213sd vfmadd123ss vfmadd123sd vfmadd231ss vfmadd231sd vfmadd321ss vfmadd321sd vfmsub132ss vfmsub132sd vfmsub312ss vfmsub312sd vfmsub213ss vfmsub213sd vfmsub123ss vfmsub123sd vfmsub231ss vfmsub231sd vfmsub321ss vfmsub321sd vfnmadd132ss vfnmadd132sd vfnmadd312ss vfnmadd312sd vfnmadd213ss vfnmadd213sd vfnmadd123ss vfnmadd123sd vfnmadd231ss vfnmadd231sd vfnmadd321ss vfnmadd321sd vfnmsub132ss vfnmsub132sd vfnmsub312ss vfnmsub312sd vfnmsub213ss vfnmsub213sd vfnmsub123ss vfnmsub123sd vfnmsub231ss vfnmsub231sd vfnmsub321ss vfnmsub321sd rdfsbase rdgsbase rdrand wrfsbase wrgsbase vcvtph2ps vcvtps2ph adcx adox rdseed clac stac xstore xcryptecb xcryptcbc xcryptctr xcryptcfb xcryptofb montmul xsha1 xsha256 llwpcb slwpcb lwpval lwpins vfmaddpd vfmaddps vfmaddsd vfmaddss vfmaddsubpd vfmaddsubps vfmsubaddpd vfmsubaddps vfmsubpd vfmsubps vfmsubsd vfmsubss vfnmaddpd vfnmaddps vfnmaddsd vfnmaddss vfnmsubpd vfnmsubps vfnmsubsd vfnmsubss vfrczpd vfrczps vfrczsd vfrczss vpcmov vpcomb vpcomd vpcomq vpcomub vpcomud vpcomuq vpcomuw vpcomw vphaddbd vphaddbq vphaddbw vphadddq vphaddubd vphaddubq vphaddubw vphaddudq vphadduwd vphadduwq vphaddwd vphaddwq vphsubbw vphsubdq vphsubwd vpmacsdd vpmacsdqh vpmacsdql vpmacssdd vpmacssdqh vpmacssdql vpmacsswd vpmacssww vpmacswd vpmacsww vpmadcsswd vpmadcswd vpperm vprotb vprotd vprotq vprotw vpshab vpshad vpshaq vpshaw vpshlb vpshld vpshlq vpshlw vbroadcasti128 vpblendd vpbroadcastb vpbroadcastw vpbroadcastd vpbroadcastq vpermd vpermpd vpermps vpermq vperm2i128 vextracti128 vinserti128 vpmaskmovd vpmaskmovq vpsllvd vpsllvq vpsravd vpsrlvd vpsrlvq vgatherdpd vgatherqpd vgatherdps vgatherqps vpgatherdd vpgatherqd vpgatherdq vpgatherqq xabort xbegin xend xtest andn bextr blci blcic blsi blsic blcfill blsfill blcmsk blsmsk blsr blcs bzhi mulx pdep pext rorx sarx shlx shrx tzcnt tzmsk t1mskc valignd valignq vblendmpd vblendmps vbroadcastf32x4 vbroadcastf64x4 vbroadcasti32x4 vbroadcasti64x4 vcompresspd vcompressps vcvtpd2udq vcvtps2udq vcvtsd2usi vcvtss2usi vcvttpd2udq vcvttps2udq vcvttsd2usi vcvttss2usi vcvtudq2pd vcvtudq2ps vcvtusi2sd vcvtusi2ss vexpandpd vexpandps vextractf32x4 vextractf64x4 vextracti32x4 vextracti64x4 vfixupimmpd vfixupimmps vfixupimmsd vfixupimmss vgetexppd vgetexpps vgetexpsd vgetexpss vgetmantpd vgetmantps vgetmantsd vgetmantss vinsertf32x4 vinsertf64x4 vinserti32x4 vinserti64x4 vmovdqa32 vmovdqa64 vmovdqu32 vmovdqu64 vpabsq vpandd vpandnd vpandnq vpandq vpblendmd vpblendmq vpcmpltd vpcmpled vpcmpneqd vpcmpnltd vpcmpnled vpcmpd vpcmpltq vpcmpleq vpcmpneqq vpcmpnltq vpcmpnleq vpcmpq vpcmpequd vpcmpltud vpcmpleud vpcmpnequd vpcmpnltud vpcmpnleud vpcmpud vpcmpequq vpcmpltuq vpcmpleuq vpcmpnequq vpcmpnltuq vpcmpnleuq vpcmpuq vpcompressd vpcompressq vpermi2d vpermi2pd vpermi2ps vpermi2q vpermt2d vpermt2pd vpermt2ps vpermt2q vpexpandd vpexpandq vpmaxsq vpmaxuq vpminsq vpminuq vpmovdb vpmovdw vpmovqb vpmovqd vpmovqw vpmovsdb vpmovsdw vpmovsqb vpmovsqd vpmovsqw vpmovusdb vpmovusdw vpmovusqb vpmovusqd vpmovusqw vpord vporq vprold vprolq vprolvd vprolvq vprord vprorq vprorvd vprorvq vpscatterdd vpscatterdq vpscatterqd vpscatterqq vpsraq vpsravq vpternlogd vpternlogq vptestmd vptestmq vptestnmd vptestnmq vpxord vpxorq vrcp14pd vrcp14ps vrcp14sd vrcp14ss vrndscalepd vrndscaleps vrndscalesd vrndscaless vrsqrt14pd vrsqrt14ps vrsqrt14sd vrsqrt14ss vscalefpd vscalefps vscalefsd vscalefss vscatterdpd vscatterdps vscatterqpd vscatterqps vshuff32x4 vshuff64x2 vshufi32x4 vshufi64x2 kandnw kandw kmovw knotw kortestw korw kshiftlw kshiftrw kunpckbw kxnorw kxorw vpbroadcastmb2q vpbroadcastmw2d vpconflictd vpconflictq vplzcntd vplzcntq vexp2pd vexp2ps vrcp28pd vrcp28ps vrcp28sd vrcp28ss vrsqrt28pd vrsqrt28ps vrsqrt28sd vrsqrt28ss vgatherpf0dpd vgatherpf0dps vgatherpf0qpd vgatherpf0qps vgatherpf1dpd vgatherpf1dps vgatherpf1qpd vgatherpf1qps vscatterpf0dpd vscatterpf0dps vscatterpf0qpd vscatterpf0qps vscatterpf1dpd vscatterpf1dps vscatterpf1qpd vscatterpf1qps prefetchwt1 bndmk bndcl bndcu bndcn bndmov bndldx bndstx sha1rnds4 sha1nexte sha1msg1 sha1msg2 sha256rnds2 sha256msg1 sha256msg2 hint_nop0 hint_nop1 hint_nop2 hint_nop3 hint_nop4 hint_nop5 hint_nop6 hint_nop7 hint_nop8 hint_nop9 hint_nop10 hint_nop11 hint_nop12 hint_nop13 hint_nop14 hint_nop15 hint_nop16 hint_nop17 hint_nop18 hint_nop19 hint_nop20 hint_nop21 hint_nop22 hint_nop23 hint_nop24 hint_nop25 hint_nop26 hint_nop27 hint_nop28 hint_nop29 hint_nop30 hint_nop31 hint_nop32 hint_nop33 hint_nop34 hint_nop35 hint_nop36 hint_nop37 hint_nop38 hint_nop39 hint_nop40 hint_nop41 hint_nop42 hint_nop43 hint_nop44 hint_nop45 hint_nop46 hint_nop47 hint_nop48 hint_nop49 hint_nop50 hint_nop51 hint_nop52 hint_nop53 hint_nop54 hint_nop55 hint_nop56 hint_nop57 hint_nop58 hint_nop59 hint_nop60 hint_nop61 hint_nop62 hint_nop63",
            built_in:
              // Instruction pointer
              "ip eip rip " +
              // 8-bit registers
              "al ah bl bh cl ch dl dh sil dil bpl spl r8b r9b r10b r11b r12b r13b r14b r15b " +
              // 16-bit registers
              "ax bx cx dx si di bp sp r8w r9w r10w r11w r12w r13w r14w r15w " +
              // 32-bit registers
              "eax ebx ecx edx esi edi ebp esp eip r8d r9d r10d r11d r12d r13d r14d r15d " +
              // 64-bit registers
              "rax rbx rcx rdx rsi rdi rbp rsp r8 r9 r10 r11 r12 r13 r14 r15 " +
              // Segment registers
              "cs ds es fs gs ss " +
              // Floating point stack registers
              "st st0 st1 st2 st3 st4 st5 st6 st7 " +
              // MMX Registers
              "mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7 " +
              // SSE registers
              "xmm0  xmm1  xmm2  xmm3  xmm4  xmm5  xmm6  xmm7  xmm8  xmm9 xmm10  xmm11 xmm12 xmm13 xmm14 xmm15 " +
              "xmm16 xmm17 xmm18 xmm19 xmm20 xmm21 xmm22 xmm23 xmm24 xmm25 xmm26 xmm27 xmm28 xmm29 xmm30 xmm31 " +
              // AVX registers
              "ymm0  ymm1  ymm2  ymm3  ymm4  ymm5  ymm6  ymm7  ymm8  ymm9 ymm10  ymm11 ymm12 ymm13 ymm14 ymm15 " +
              "ymm16 ymm17 ymm18 ymm19 ymm20 ymm21 ymm22 ymm23 ymm24 ymm25 ymm26 ymm27 ymm28 ymm29 ymm30 ymm31 " +
              // AVX-512F registers
              "zmm0  zmm1  zmm2  zmm3  zmm4  zmm5  zmm6  zmm7  zmm8  zmm9 zmm10  zmm11 zmm12 zmm13 zmm14 zmm15 " +
              "zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 " +
              // AVX-512F mask registers
              "k0 k1 k2 k3 k4 k5 k6 k7 " +
              // Bound (MPX) register
              "bnd0 bnd1 bnd2 bnd3 " +
              // Special register
              "cr0 cr1 cr2 cr3 cr4 cr8 dr0 dr1 dr2 dr3 dr8 tr3 tr4 tr5 tr6 tr7 " +
              // NASM altreg package
              "r0 r1 r2 r3 r4 r5 r6 r7 r0b r1b r2b r3b r4b r5b r6b r7b " +
              "r0w r1w r2w r3w r4w r5w r6w r7w r0d r1d r2d r3d r4d r5d r6d r7d " +
              "r0h r1h r2h r3h " +
              "r0l r1l r2l r3l r4l r5l r6l r7l r8l r9l r10l r11l r12l r13l r14l r15l " +
              "db dw dd dq dt ddq do dy dz " +
              "resb resw resd resq rest resdq reso resy resz " +
              "incbin equ times " +
              "byte word dword qword nosplit rel abs seg wrt strict near far a32 ptr",

            meta:
              "%define %xdefine %+ %undef %defstr %deftok %assign %strcat %strlen %substr %rotate %elif %else %endif " +
              "%if %ifmacro %ifctx %ifidn %ifidni %ifid %ifnum %ifstr %iftoken %ifempty %ifenv %error %warning %fatal %rep " +
              "%endrep %include %push %pop %repl %pathsearch %depend %use %arg %stacksize %local %line %comment %endcomment " +
              ".nolist " +
              "__FILE__ __LINE__ __SECT__  __BITS__ __OUTPUT_FORMAT__ __DATE__ __TIME__ __DATE_NUM__ __TIME_NUM__ " +
              "__UTC_DATE__ __UTC_TIME__ __UTC_DATE_NUM__ __UTC_TIME_NUM__  __PASS__ struc endstruc istruc at iend " +
              "align alignb sectalign daz nodaz up down zero default option assume public " +
              "bits use16 use32 use64 default section segment absolute extern global common cpu float " +
              "__utf16__ __utf16le__ __utf16be__ __utf32__ __utf32le__ __utf32be__ " +
              "__float8__ __float16__ __float32__ __float64__ __float80m__ __float80e__ __float128l__ __float128h__ " +
              "__Infinity__ __QNaN__ __SNaN__ Inf NaN QNaN SNaN float8 float16 float32 float64 float80m float80e " +
              "float128l float128h __FLOAT_DAZ__ __FLOAT_ROUND__ __FLOAT__"
          },
          contains: [
            hljs.COMMENT(";", "$", {
              relevance: 0
            }),
            {
              className: "number",
              variants: [
                // Float number and x87 BCD
                {
                  begin:
                    "\\b(?:([0-9][0-9_]*)?\\.[0-9_]*(?:[eE][+-]?[0-9_]+)?|" +
                    "(0[Xx])?[0-9][0-9_]*\\.?[0-9_]*(?:[pP](?:[+-]?[0-9_]+)?)?)\\b",
                  relevance: 0
                },

                // Hex number in $
                { begin: "\\$[0-9][0-9A-Fa-f]*", relevance: 0 },

                // Number in H,D,T,Q,O,B,Y suffix
                {
                  begin:
                    "\\b(?:[0-9A-Fa-f][0-9A-Fa-f_]*[Hh]|[0-9][0-9_]*[DdTt]?|[0-7][0-7_]*[QqOo]|[0-1][0-1_]*[BbYy])\\b"
                },

                // Number in X,D,T,Q,O,B,Y prefix
                {
                  begin:
                    "\\b(?:0[Xx][0-9A-Fa-f_]+|0[DdTt][0-9_]+|0[QqOo][0-7_]+|0[BbYy][0-1_]+)\\b"
                }
              ]
            },
            // Double quote string
            hljs.QUOTE_STRING_MODE,
            {
              className: "string",
              variants: [
                // Single-quoted string
                { begin: "'", end: "[^\\\\]'" },
                // Backquoted string
                { begin: "`", end: "[^\\\\]`" }
              ],
              relevance: 0
            },
            {
              className: "symbol",
              variants: [
                // Global label and local label
                { begin: "^\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\s+label)" },
                // Macro-local label
                { begin: "^\\s*%%[A-Za-z0-9_$#@~.?]*:" }
              ],
              relevance: 0
            },
            // Macro parameter
            {
              className: "subst",
              begin: "%[0-9]+",
              relevance: 0
            },
            // Macro parameter
            {
              className: "subst",
              begin: "%!S+",
              relevance: 0
            },
            {
              className: "meta",
              begin: /^\s*\.[\w_-]+/
            }
          ]
        };
      };

      /***/
    },
    /* 204 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var BUILTIN_MODULES =
          "ObjectLoader Animate MovieCredits Slides Filters Shading Materials LensFlare Mapping VLCAudioVideo " +
          "StereoDecoder PointCloud NetworkAccess RemoteControl RegExp ChromaKey Snowfall NodeJS Speech Charts";

        var XL_KEYWORDS = {
          keyword:
            "if then else do while until for loop import with is as where when by data constant " +
            "integer real text name boolean symbol infix prefix postfix block tree",
          literal: "true false nil",
          built_in:
            "in mod rem and or xor not abs sign floor ceil sqrt sin cos tan asin " +
            "acos atan exp expm1 log log2 log10 log1p pi at text_length text_range " +
            "text_find text_replace contains page slide basic_slide title_slide " +
            "title subtitle fade_in fade_out fade_at clear_color color line_color " +
            "line_width texture_wrap texture_transform texture scale_?x scale_?y " +
            "scale_?z? translate_?x translate_?y translate_?z? rotate_?x rotate_?y " +
            "rotate_?z? rectangle circle ellipse sphere path line_to move_to " +
            "quad_to curve_to theme background contents locally time mouse_?x " +
            "mouse_?y mouse_buttons " +
            BUILTIN_MODULES
        };

        var DOUBLE_QUOTE_TEXT = {
          className: "string",
          begin: '"',
          end: '"',
          illegal: "\\n"
        };
        var SINGLE_QUOTE_TEXT = {
          className: "string",
          begin: "'",
          end: "'",
          illegal: "\\n"
        };
        var LONG_TEXT = {
          className: "string",
          begin: "<<",
          end: ">>"
        };
        var BASED_NUMBER = {
          className: "number",
          begin: "[0-9]+#[0-9A-Z_]+(\\.[0-9-A-Z_]+)?#?([Ee][+-]?[0-9]+)?"
        };
        var IMPORT = {
          beginKeywords: "import",
          end: "$",
          keywords: XL_KEYWORDS,
          contains: [DOUBLE_QUOTE_TEXT]
        };
        var FUNCTION_DEFINITION = {
          className: "function",
          begin: /[a-z][^\n]*->/,
          returnBegin: true,
          end: /->/,
          contains: [
            hljs.inherit(hljs.TITLE_MODE, {
              starts: {
                endsWithParent: true,
                keywords: XL_KEYWORDS
              }
            })
          ]
        };
        return {
          aliases: ["tao"],
          lexemes: /[a-zA-Z][a-zA-Z0-9_?]*/,
          keywords: XL_KEYWORDS,
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            DOUBLE_QUOTE_TEXT,
            SINGLE_QUOTE_TEXT,
            LONG_TEXT,
            FUNCTION_DEFINITION,
            IMPORT,
            BASED_NUMBER,
            hljs.NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 205 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS =
          "for let if while then else return where group by xquery encoding version" +
          "module namespace boundary-space preserve strip default collation base-uri ordering" +
          "copy-namespaces order declare import schema namespace function option in allowing empty" +
          "at tumbling window sliding window start when only end when previous next stable ascending" +
          "descending empty greatest least some every satisfies switch case typeswitch try catch and" +
          "or to union intersect instance of treat as castable cast map array delete insert into" +
          "replace value rename copy modify update";
        var LITERAL =
          "false true xs:string xs:integer element item xs:date xs:datetime xs:float xs:double xs:decimal QName xs:anyURI xs:long xs:int xs:short xs:byte attribute";
        var VAR = {
          begin: /\$[a-zA-Z0-9\-]+/
        };

        var NUMBER = {
          className: "number",
          begin:
            "(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",
          relevance: 0
        };

        var STRING = {
          className: "string",
          variants: [
            { begin: /"/, end: /"/, contains: [{ begin: /""/, relevance: 0 }] },
            { begin: /'/, end: /'/, contains: [{ begin: /''/, relevance: 0 }] }
          ]
        };

        var ANNOTATION = {
          className: "meta",
          begin: "%\\w+"
        };

        var COMMENT = {
          className: "comment",
          begin: "\\(:",
          end: ":\\)",
          relevance: 10,
          contains: [
            {
              className: "doctag",
              begin: "@\\w+"
            }
          ]
        };

        var METHOD = {
          begin: "{",
          end: "}"
        };

        var CONTAINS = [VAR, STRING, NUMBER, COMMENT, ANNOTATION, METHOD];
        METHOD.contains = CONTAINS;

        return {
          aliases: ["xpath", "xq"],
          case_insensitive: false,
          lexemes: /[a-zA-Z\$][a-zA-Z0-9_:\-]*/,
          illegal: /(proc)|(abstract)|(extends)|(until)|(#)/,
          keywords: {
            keyword: KEYWORDS,
            literal: LITERAL
          },
          contains: CONTAINS
        };
      };

      /***/
    },
    /* 206 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var STRING = {
          className: "string",
          contains: [hljs.BACKSLASH_ESCAPE],
          variants: [
            {
              begin: 'b"',
              end: '"'
            },
            {
              begin: "b'",
              end: "'"
            },
            hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null }),
            hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null })
          ]
        };
        var NUMBER = {
          variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]
        };
        return {
          aliases: ["zep"],
          case_insensitive: true,
          keywords:
            "and include_once list abstract global private echo interface as static endswitch " +
            "array null if endwhile or const for endforeach self var let while isset public " +
            "protected exit foreach throw elseif include __FILE__ empty require_once do xor " +
            "return parent clone use __CLASS__ __LINE__ else break print eval new " +
            "catch __METHOD__ case exception default die require __FUNCTION__ " +
            "enddeclare final try switch continue endfor endif declare unset true false " +
            "trait goto instanceof insteadof __DIR__ __NAMESPACE__ " +
            "yield finally int uint long ulong char uchar double float bool boolean string" +
            "likely unlikely",
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.HASH_COMMENT_MODE,
            hljs.COMMENT("/\\*", "\\*/", {
              contains: [
                {
                  className: "doctag",
                  begin: "@[A-Za-z]+"
                }
              ]
            }),
            hljs.COMMENT("__halt_compiler.+?;", false, {
              endsWithParent: true,
              keywords: "__halt_compiler",
              lexemes: hljs.UNDERSCORE_IDENT_RE
            }),
            {
              className: "string",
              begin: "<<<['\"]?\\w+['\"]?$",
              end: "^\\w+;",
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              // swallow composed identifiers to avoid parsing them as keywords
              begin: /(::|->)+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/
            },
            {
              className: "function",
              beginKeywords: "function",
              end: /[;{]/,
              excludeEnd: true,
              illegal: "\\$|\\[|%",
              contains: [
                hljs.UNDERSCORE_TITLE_MODE,
                {
                  className: "params",
                  begin: "\\(",
                  end: "\\)",
                  contains: ["self", hljs.C_BLOCK_COMMENT_MODE, STRING, NUMBER]
                }
              ]
            },
            {
              className: "class",
              beginKeywords: "class interface",
              end: "{",
              excludeEnd: true,
              illegal: /[:\(\$"]/,
              contains: [
                { beginKeywords: "extends implements" },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            },
            {
              beginKeywords: "namespace",
              end: ";",
              illegal: /[\.']/,
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            {
              beginKeywords: "use",
              end: ";",
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            {
              begin: "=>" // No markup, just a relevance booster
            },
            STRING,
            NUMBER
          ]
        };
      };

      /***/
    },
    /* 207 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Default = (function(_React$Component) {
        _inherits(Default, _React$Component);

        function Default(props) {
          _classCallCheck(this, Default);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        Default.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n/>\n"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange
              })
            )
          );
        };

        return Default;
      })(_react2.default.Component);

      exports.default = Default;

      /***/
    },
    /* 208 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _createClass = (function() {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _calendar = __webpack_require__(209);

      var _calendar2 = _interopRequireDefault(_calendar);

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _popper_component = __webpack_require__(348);

      var _popper_component2 = _interopRequireDefault(_popper_component);

      var _classnames2 = __webpack_require__(215);

      var _classnames3 = _interopRequireDefault(_classnames2);

      var _date_utils = __webpack_require__(217);

      var _reactOnclickoutside = __webpack_require__(216);

      var _reactOnclickoutside2 = _interopRequireDefault(_reactOnclickoutside);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var outsideClickIgnoreClass = "react-datepicker-ignore-onclickoutside";
      var WrappedCalendar = (0, _reactOnclickoutside2.default)(
        _calendar2.default
      );

      /**
       * General datepicker component.
       */

      var DatePicker = (function(_React$Component) {
        _inherits(DatePicker, _React$Component);

        _createClass(DatePicker, null, [
          {
            key: "defaultProps",
            get: function get() {
              return {
                allowSameDay: false,
                dateFormat: "L",
                dateFormatCalendar: "MMMM YYYY",
                onChange: function onChange() {},

                disabled: false,
                disabledKeyboardNavigation: false,
                dropdownMode: "scroll",
                onFocus: function onFocus() {},
                onBlur: function onBlur() {},
                onKeyDown: function onKeyDown() {},
                onSelect: function onSelect() {},
                onClickOutside: function onClickOutside() {},
                onMonthChange: function onMonthChange() {},

                preventOpenOnFocus: false,
                onYearChange: function onYearChange() {},

                monthsShown: 1,
                withPortal: false,
                shouldCloseOnSelect: true,
                showTimeSelect: false,
                timeIntervals: 30
              };
            }
          }
        ]);

        function DatePicker(props) {
          _classCallCheck(this, DatePicker);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.getPreSelection = function() {
            return _this.props.openToDate
              ? (0, _date_utils.newDate)(_this.props.openToDate)
              : _this.props.selectsEnd && _this.props.startDate
                ? (0, _date_utils.newDate)(_this.props.startDate)
                : _this.props.selectsStart && _this.props.endDate
                  ? (0, _date_utils.newDate)(_this.props.endDate)
                  : (0, _date_utils.now)(_this.props.utcOffset);
          };

          _this.calcInitialState = function() {
            var defaultPreSelection = _this.getPreSelection();
            var minDate = (0, _date_utils.getEffectiveMinDate)(_this.props);
            var maxDate = (0, _date_utils.getEffectiveMaxDate)(_this.props);
            var boundedPreSelection =
              minDate && (0, _date_utils.isBefore)(defaultPreSelection, minDate)
                ? minDate
                : maxDate &&
                  (0, _date_utils.isAfter)(defaultPreSelection, maxDate)
                  ? maxDate
                  : defaultPreSelection;
            return {
              open: _this.props.startOpen || false,
              preventFocus: false,
              preSelection: _this.props.selected
                ? (0, _date_utils.newDate)(_this.props.selected)
                : boundedPreSelection,
              // transforming highlighted days (perhaps nested array)
              // to flat Map for faster access in day.jsx
              highlightDates: (0, _date_utils.getHightLightDaysMap)(
                _this.props.highlightDates
              )
            };
          };

          _this.clearPreventFocusTimeout = function() {
            if (_this.preventFocusTimeout) {
              clearTimeout(_this.preventFocusTimeout);
            }
          };

          _this.setFocus = function() {
            if (_this.input.focus) {
              _this.input.focus();
            }
          };

          _this.setOpen = function(open) {
            _this.setState({
              open: open,
              preSelection:
                open && _this.state.open
                  ? _this.state.preSelection
                  : _this.calcInitialState().preSelection
            });
          };

          _this.handleFocus = function(event) {
            if (!_this.state.preventFocus) {
              _this.props.onFocus(event);
              if (!_this.props.preventOpenOnFocus) {
                _this.setOpen(true);
              }
            }
          };

          _this.cancelFocusInput = function() {
            clearTimeout(_this.inputFocusTimeout);
            _this.inputFocusTimeout = null;
          };

          _this.deferFocusInput = function() {
            _this.cancelFocusInput();
            _this.inputFocusTimeout = setTimeout(function() {
              return _this.setFocus();
            }, 1);
          };

          _this.handleDropdownFocus = function() {
            _this.cancelFocusInput();
          };

          _this.handleBlur = function(event) {
            if (_this.state.open) {
              _this.deferFocusInput();
            } else {
              _this.props.onBlur(event);
            }
          };

          _this.handleCalendarClickOutside = function(event) {
            if (!_this.props.inline) {
              _this.setOpen(false);
            }
            _this.props.onClickOutside(event);
            if (_this.props.withPortal) {
              event.preventDefault();
            }
          };

          _this.handleChange = function(event) {
            if (_this.props.onChangeRaw) {
              _this.props.onChangeRaw(event);
              if (event.isDefaultPrevented()) {
                return;
              }
            }
            _this.setState({ inputValue: event.target.value });
            var date = (0, _date_utils.parseDate)(
              event.target.value,
              _this.props
            );
            if (date || !event.target.value) {
              _this.setSelected(date, event, true);
            }
          };

          _this.handleSelect = function(date, event) {
            // Preventing onFocus event to fix issue
            // https://github.com/Hacker0x01/react-datepicker/issues/628
            _this.setState({ preventFocus: true }, function() {
              _this.preventFocusTimeout = setTimeout(function() {
                return _this.setState({ preventFocus: false });
              }, 50);
              return _this.preventFocusTimeout;
            });
            _this.setSelected(date, event);
            if (
              !_this.props.shouldCloseOnSelect ||
              _this.props.showTimeSelect
            ) {
              _this.setPreSelection(date);
            } else if (!_this.props.inline) {
              _this.setOpen(false);
            }
          };

          _this.setSelected = function(date, event, keepInput) {
            var changedDate = date;

            if (
              changedDate !== null &&
              (0, _date_utils.isDayDisabled)(changedDate, _this.props)
            ) {
              return;
            }

            if (
              !(0, _date_utils.isSameDay)(_this.props.selected, changedDate) ||
              _this.props.allowSameDay
            ) {
              if (changedDate !== null) {
                if (_this.props.selected) {
                  changedDate = (0, _date_utils.setTime)(
                    (0, _date_utils.newDate)(changedDate),
                    {
                      hour: (0, _date_utils.getHour)(_this.props.selected),
                      minute: (0, _date_utils.getMinute)(_this.props.selected),
                      second: (0, _date_utils.getSecond)(_this.props.selected)
                    }
                  );
                }
                _this.setState({
                  preSelection: changedDate
                });
              }
              _this.props.onChange(changedDate, event);
            }

            _this.props.onSelect(changedDate, event);

            if (!keepInput) {
              _this.setState({ inputValue: null });
            }
          };

          _this.setPreSelection = function(date) {
            var isDateRangePresent =
              typeof _this.props.minDate !== "undefined" &&
              typeof _this.props.maxDate !== "undefined";
            var isValidDateSelection =
              isDateRangePresent && date
                ? (0, _date_utils.isDayInRange)(
                    date,
                    _this.props.minDate,
                    _this.props.maxDate
                  )
                : true;
            if (isValidDateSelection) {
              _this.setState({
                preSelection: date
              });
            }
          };

          _this.handleTimeChange = function(time) {
            var selected = _this.props.selected
              ? _this.props.selected
              : _this.getPreSelection();
            var changedDate = (0, _date_utils.setTime)(
              (0, _date_utils.cloneDate)(selected),
              {
                hour: (0, _date_utils.getHour)(time),
                minute: (0, _date_utils.getMinute)(time)
              }
            );

            _this.setState({
              preSelection: changedDate
            });

            _this.props.onChange(changedDate);
            _this.setOpen(false);
          };

          _this.onInputClick = function() {
            if (!_this.props.disabled) {
              _this.setOpen(true);
            }
          };

          _this.onInputKeyDown = function(event) {
            _this.props.onKeyDown(event);
            var eventKey = event.key;
            if (
              !_this.state.open &&
              !_this.props.inline &&
              !_this.props.preventOpenOnFocus
            ) {
              if (
                eventKey !== "Enter" &&
                eventKey !== "Escape" &&
                eventKey !== "Tab"
              ) {
                _this.onInputClick();
              }
              return;
            }
            var copy = (0, _date_utils.newDate)(_this.state.preSelection);
            if (eventKey === "Enter") {
              event.preventDefault();
              if (
                (0, _date_utils.isMoment)(_this.state.preSelection) ||
                (0, _date_utils.isDate)(_this.state.preSelection)
              ) {
                _this.handleSelect(copy, event);
                !_this.props.shouldCloseOnSelect && _this.setPreSelection(copy);
              } else {
                _this.setOpen(false);
              }
            } else if (eventKey === "Escape") {
              event.preventDefault();
              _this.setOpen(false);
            } else if (eventKey === "Tab") {
              _this.setOpen(false);
            } else if (!_this.props.disabledKeyboardNavigation) {
              var newSelection = void 0;
              switch (eventKey) {
                case "ArrowLeft":
                  event.preventDefault();
                  newSelection = (0, _date_utils.subtractDays)(copy, 1);
                  break;
                case "ArrowRight":
                  event.preventDefault();
                  newSelection = (0, _date_utils.addDays)(copy, 1);
                  break;
                case "ArrowUp":
                  event.preventDefault();
                  newSelection = (0, _date_utils.subtractWeeks)(copy, 1);
                  break;
                case "ArrowDown":
                  event.preventDefault();
                  newSelection = (0, _date_utils.addWeeks)(copy, 1);
                  break;
                case "PageUp":
                  event.preventDefault();
                  newSelection = (0, _date_utils.subtractMonths)(copy, 1);
                  break;
                case "PageDown":
                  event.preventDefault();
                  newSelection = (0, _date_utils.addMonths)(copy, 1);
                  break;
                case "Home":
                  event.preventDefault();
                  newSelection = (0, _date_utils.subtractYears)(copy, 1);
                  break;
                case "End":
                  event.preventDefault();
                  newSelection = (0, _date_utils.addYears)(copy, 1);
                  break;
              }
              if (_this.props.adjustDateOnChange) {
                _this.setSelected(newSelection);
              }
              _this.setPreSelection(newSelection);
            }
          };

          _this.onClearClick = function(event) {
            event.preventDefault();
            _this.props.onChange(null, event);
            _this.setState({ inputValue: null });
          };

          _this.renderCalendar = function() {
            if (
              !_this.props.inline &&
              (!_this.state.open || _this.props.disabled)
            ) {
              return null;
            }
            return _react2.default.createElement(
              WrappedCalendar,
              {
                ref: function ref(elem) {
                  _this.calendar = elem;
                },
                locale: _this.props.locale,
                adjustDateOnChange: _this.props.adjustDateOnChange,
                setOpen: _this.setOpen,
                dateFormat: _this.props.dateFormatCalendar,
                useWeekdaysShort: _this.props.useWeekdaysShort,
                dropdownMode: _this.props.dropdownMode,
                selected: _this.props.selected,
                preSelection: _this.state.preSelection,
                onSelect: _this.handleSelect,
                onWeekSelect: _this.props.onWeekSelect,
                openToDate: _this.props.openToDate,
                minDate: _this.props.minDate,
                maxDate: _this.props.maxDate,
                selectsStart: _this.props.selectsStart,
                selectsEnd: _this.props.selectsEnd,
                startDate: _this.props.startDate,
                endDate: _this.props.endDate,
                excludeDates: _this.props.excludeDates,
                filterDate: _this.props.filterDate,
                onClickOutside: _this.handleCalendarClickOutside,
                formatWeekNumber: _this.props.formatWeekNumber,
                highlightDates: _this.state.highlightDates,
                includeDates: _this.props.includeDates,
                inline: _this.props.inline,
                peekNextMonth: _this.props.peekNextMonth,
                showMonthDropdown: _this.props.showMonthDropdown,
                useShortMonthInDropdown: _this.props.useShortMonthInDropdown,
                showMonthYearDropdown: _this.props.showMonthYearDropdown,
                showWeekNumbers: _this.props.showWeekNumbers,
                showYearDropdown: _this.props.showYearDropdown,
                withPortal: _this.props.withPortal,
                forceShowMonthNavigation: _this.props.forceShowMonthNavigation,
                scrollableYearDropdown: _this.props.scrollableYearDropdown,
                scrollableMonthYearDropdown:
                  _this.props.scrollableMonthYearDropdown,
                todayButton: _this.props.todayButton,
                weekLabel: _this.props.weekLabel,
                utcOffset: _this.props.utcOffset,
                outsideClickIgnoreClass: outsideClickIgnoreClass,
                fixedHeight: _this.props.fixedHeight,
                monthsShown: _this.props.monthsShown,
                onDropdownFocus: _this.handleDropdownFocus,
                onMonthChange: _this.props.onMonthChange,
                onYearChange: _this.props.onYearChange,
                dayClassName: _this.props.dayClassName,
                showTimeSelect: _this.props.showTimeSelect,
                onTimeChange: _this.handleTimeChange,
                timeFormat: _this.props.timeFormat,
                timeIntervals: _this.props.timeIntervals,
                minTime: _this.props.minTime,
                maxTime: _this.props.maxTime,
                excludeTimes: _this.props.excludeTimes,
                className: _this.props.calendarClassName,
                yearDropdownItemNumber: _this.props.yearDropdownItemNumber
              },
              _this.props.children
            );
          };

          _this.renderDateInput = function() {
            var _classnames, _React$cloneElement;

            var className = (0, _classnames3.default)(
              _this.props.className,
              ((_classnames = {}),
              (_classnames[outsideClickIgnoreClass] = _this.state.open),
              _classnames)
            );

            var customInput =
              _this.props.customInput ||
              _react2.default.createElement("input", { type: "text" });
            var customInputRef = _this.props.customInputRef || "ref";
            var inputValue =
              typeof _this.props.value === "string"
                ? _this.props.value
                : typeof _this.state.inputValue === "string"
                  ? _this.state.inputValue
                  : (0, _date_utils.safeDateFormat)(
                      _this.props.selected,
                      _this.props
                    );

            return _react2.default.cloneElement(
              customInput,
              ((_React$cloneElement = {}),
              (_React$cloneElement[customInputRef] = function(input) {
                _this.input = input;
              }),
              (_React$cloneElement.value = inputValue),
              (_React$cloneElement.onBlur = _this.handleBlur),
              (_React$cloneElement.onChange = _this.handleChange),
              (_React$cloneElement.onClick = _this.onInputClick),
              (_React$cloneElement.onFocus = _this.handleFocus),
              (_React$cloneElement.onKeyDown = _this.onInputKeyDown),
              (_React$cloneElement.id = _this.props.id),
              (_React$cloneElement.name = _this.props.name),
              (_React$cloneElement.autoFocus = _this.props.autoFocus),
              (_React$cloneElement.placeholder = _this.props.placeholderText),
              (_React$cloneElement.disabled = _this.props.disabled),
              (_React$cloneElement.autoComplete = _this.props.autoComplete),
              (_React$cloneElement.className = className),
              (_React$cloneElement.title = _this.props.title),
              (_React$cloneElement.readOnly = _this.props.readOnly),
              (_React$cloneElement.required = _this.props.required),
              (_React$cloneElement.tabIndex = _this.props.tabIndex),
              _React$cloneElement)
            );
          };

          _this.renderClearButton = function() {
            if (_this.props.isClearable && _this.props.selected != null) {
              return _react2.default.createElement("a", {
                className: "react-datepicker__close-icon",
                href: "javascript:void(0)",
                onClick: _this.onClearClick
              });
            } else {
              return null;
            }
          };

          _this.state = _this.calcInitialState();
          return _this;
        }

        DatePicker.prototype.componentWillReceiveProps = function componentWillReceiveProps(
          nextProps
        ) {
          var currentMonth =
            this.props.selected &&
            (0, _date_utils.getMonth)(this.props.selected);
          var nextMonth =
            nextProps.selected && (0, _date_utils.getMonth)(nextProps.selected);
          if (this.props.inline && currentMonth !== nextMonth) {
            this.setPreSelection(nextProps.selected);
          }
          if (this.props.highlightDates !== nextProps.highlightDates) {
            this.setState({
              highlightDates: (0, _date_utils.getHightLightDaysMap)(
                nextProps.highlightDates
              )
            });
          }
        };

        DatePicker.prototype.componentWillUnmount = function componentWillUnmount() {
          this.clearPreventFocusTimeout();
        };

        DatePicker.prototype.render = function render() {
          var calendar = this.renderCalendar();

          if (this.props.inline && !this.props.withPortal) {
            return calendar;
          }

          if (this.props.withPortal) {
            return _react2.default.createElement(
              "div",
              null,
              !this.props.inline
                ? _react2.default.createElement(
                    "div",
                    { className: "react-datepicker__input-container" },
                    this.renderDateInput(),
                    this.renderClearButton()
                  )
                : null,
              this.state.open || this.props.inline
                ? _react2.default.createElement(
                    "div",
                    { className: "react-datepicker__portal" },
                    calendar
                  )
                : null
            );
          }

          return _react2.default.createElement(_popper_component2.default, {
            className: this.props.popperClassName,
            hidePopper: !this.state.open || this.props.disabled,
            popperModifiers: this.props.popperModifiers,
            targetComponent: _react2.default.createElement(
              "div",
              { className: "react-datepicker__input-container" },
              this.renderDateInput(),
              this.renderClearButton()
            ),
            popperContainer: this.props.popperContainer,
            popperComponent: calendar,
            popperPlacement: this.props.popperPlacement
          });
        };

        return DatePicker;
      })(_react2.default.Component);

      DatePicker.propTypes = {
        adjustDateOnChange: _propTypes2.default.bool,
        allowSameDay: _propTypes2.default.bool,
        autoComplete: _propTypes2.default.string,
        autoFocus: _propTypes2.default.bool,
        calendarClassName: _propTypes2.default.string,
        children: _propTypes2.default.node,
        className: _propTypes2.default.string,
        customInput: _propTypes2.default.element,
        customInputRef: _propTypes2.default.string,
        dateFormat: _propTypes2.default.oneOfType([
          // eslint-disable-line react/no-unused-prop-types
          _propTypes2.default.string,
          _propTypes2.default.array
        ]),
        dateFormatCalendar: _propTypes2.default.string,
        dayClassName: _propTypes2.default.func,
        disabled: _propTypes2.default.bool,
        disabledKeyboardNavigation: _propTypes2.default.bool,
        dropdownMode: _propTypes2.default.oneOf(["scroll", "select"])
          .isRequired,
        endDate: _propTypes2.default.object,
        excludeDates: _propTypes2.default.array,
        filterDate: _propTypes2.default.func,
        fixedHeight: _propTypes2.default.bool,
        formatWeekNumber: _propTypes2.default.func,
        highlightDates: _propTypes2.default.array,
        id: _propTypes2.default.string,
        includeDates: _propTypes2.default.array,
        inline: _propTypes2.default.bool,
        isClearable: _propTypes2.default.bool,
        locale: _propTypes2.default.string,
        maxDate: _propTypes2.default.object,
        minDate: _propTypes2.default.object,
        monthsShown: _propTypes2.default.number,
        name: _propTypes2.default.string,
        onBlur: _propTypes2.default.func,
        onChange: _propTypes2.default.func.isRequired,
        onSelect: _propTypes2.default.func,
        onWeekSelect: _propTypes2.default.func,
        onClickOutside: _propTypes2.default.func,
        onChangeRaw: _propTypes2.default.func,
        onFocus: _propTypes2.default.func,
        onKeyDown: _propTypes2.default.func,
        onMonthChange: _propTypes2.default.func,
        onYearChange: _propTypes2.default.func,
        openToDate: _propTypes2.default.object,
        peekNextMonth: _propTypes2.default.bool,
        placeholderText: _propTypes2.default.string,
        popperContainer: _propTypes2.default.func,
        popperClassName: _propTypes2.default.string, // <PopperComponent/> props
        popperModifiers: _propTypes2.default.object, // <PopperComponent/> props
        popperPlacement: _propTypes2.default.oneOf(
          _popper_component.popperPlacementPositions
        ), // <PopperComponent/> props
        preventOpenOnFocus: _propTypes2.default.bool,
        readOnly: _propTypes2.default.bool,
        required: _propTypes2.default.bool,
        scrollableYearDropdown: _propTypes2.default.bool,
        scrollableMonthYearDropdown: _propTypes2.default.bool,
        selected: _propTypes2.default.object,
        selectsEnd: _propTypes2.default.bool,
        selectsStart: _propTypes2.default.bool,
        showMonthDropdown: _propTypes2.default.bool,
        showMonthYearDropdown: _propTypes2.default.bool,
        showWeekNumbers: _propTypes2.default.bool,
        showYearDropdown: _propTypes2.default.bool,
        forceShowMonthNavigation: _propTypes2.default.bool,
        startDate: _propTypes2.default.object,
        startOpen: _propTypes2.default.bool,
        tabIndex: _propTypes2.default.number,
        title: _propTypes2.default.string,
        todayButton: _propTypes2.default.string,
        useWeekdaysShort: _propTypes2.default.bool,
        utcOffset: _propTypes2.default.number,
        value: _propTypes2.default.string,
        weekLabel: _propTypes2.default.string,
        withPortal: _propTypes2.default.bool,
        yearDropdownItemNumber: _propTypes2.default.number,
        shouldCloseOnSelect: _propTypes2.default.bool,
        showTimeSelect: _propTypes2.default.bool,
        timeFormat: _propTypes2.default.string,
        timeIntervals: _propTypes2.default.number,
        minTime: _propTypes2.default.object,
        maxTime: _propTypes2.default.object,
        excludeTimes: _propTypes2.default.array,
        useShortMonthInDropdown: _propTypes2.default.bool
      };
      exports.default = DatePicker;

      /***/
    },
    /* 209 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _createClass = (function() {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _year_dropdown = __webpack_require__(210);

      var _year_dropdown2 = _interopRequireDefault(_year_dropdown);

      var _month_dropdown = __webpack_require__(339);

      var _month_dropdown2 = _interopRequireDefault(_month_dropdown);

      var _month_year_dropdown = __webpack_require__(341);

      var _month_year_dropdown2 = _interopRequireDefault(_month_year_dropdown);

      var _month = __webpack_require__(343);

      var _month2 = _interopRequireDefault(_month);

      var _time = __webpack_require__(347);

      var _time2 = _interopRequireDefault(_time);

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _classnames = __webpack_require__(215);

      var _classnames2 = _interopRequireDefault(_classnames);

      var _date_utils = __webpack_require__(217);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var DROPDOWN_FOCUS_CLASSNAMES = [
        "react-datepicker__year-select",
        "react-datepicker__month-select",
        "react-datepicker__month-year-select"
      ];

      var isDropdownSelect = function isDropdownSelect() {
        var element =
          arguments.length > 0 && arguments[0] !== undefined
            ? arguments[0]
            : {};

        var classNames = (element.className || "").split(/\s+/);
        return DROPDOWN_FOCUS_CLASSNAMES.some(function(testClassname) {
          return classNames.indexOf(testClassname) >= 0;
        });
      };

      var Calendar = (function(_React$Component) {
        _inherits(Calendar, _React$Component);

        _createClass(Calendar, null, [
          {
            key: "defaultProps",
            get: function get() {
              return {
                onDropdownFocus: function onDropdownFocus() {},
                monthsShown: 1,
                forceShowMonthNavigation: false
              };
            }
          }
        ]);

        function Calendar(props) {
          _classCallCheck(this, Calendar);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleClickOutside = function(event) {
            _this.props.onClickOutside(event);
          };

          _this.handleDropdownFocus = function(event) {
            if (isDropdownSelect(event.target)) {
              _this.props.onDropdownFocus();
            }
          };

          _this.getDateInView = function() {
            var _this$props = _this.props,
              preSelection = _this$props.preSelection,
              selected = _this$props.selected,
              openToDate = _this$props.openToDate,
              utcOffset = _this$props.utcOffset;

            var minDate = (0, _date_utils.getEffectiveMinDate)(_this.props);
            var maxDate = (0, _date_utils.getEffectiveMaxDate)(_this.props);
            var current = (0, _date_utils.now)(utcOffset);
            var initialDate = openToDate || selected || preSelection;
            if (initialDate) {
              return initialDate;
            } else {
              if (minDate && (0, _date_utils.isBefore)(current, minDate)) {
                return minDate;
              } else if (
                maxDate &&
                (0, _date_utils.isAfter)(current, maxDate)
              ) {
                return maxDate;
              }
            }
            return current;
          };

          _this.localizeDate = function(date) {
            return (0, _date_utils.localizeDate)(date, _this.props.locale);
          };

          _this.increaseMonth = function() {
            _this.setState(
              {
                date: (0, _date_utils.addMonths)(
                  (0, _date_utils.cloneDate)(_this.state.date),
                  1
                )
              },
              function() {
                return _this.handleMonthChange(_this.state.date);
              }
            );
          };

          _this.decreaseMonth = function() {
            _this.setState(
              {
                date: (0, _date_utils.subtractMonths)(
                  (0, _date_utils.cloneDate)(_this.state.date),
                  1
                )
              },
              function() {
                return _this.handleMonthChange(_this.state.date);
              }
            );
          };

          _this.handleDayClick = function(day, event) {
            return _this.props.onSelect(day, event);
          };

          _this.handleDayMouseEnter = function(day) {
            return _this.setState({ selectingDate: day });
          };

          _this.handleMonthMouseLeave = function() {
            return _this.setState({ selectingDate: null });
          };

          _this.handleYearChange = function(date) {
            if (_this.props.onYearChange) {
              _this.props.onYearChange(date);
            }
          };

          _this.handleMonthChange = function(date) {
            if (_this.props.onMonthChange) {
              _this.props.onMonthChange(date);
            }
            if (_this.props.adjustDateOnChange) {
              if (_this.props.onSelect) {
                _this.props.onSelect(date);
              }
              if (_this.props.setOpen) {
                _this.props.setOpen(true);
              }
            }
          };

          _this.handleMonthYearChange = function(date) {
            _this.handleYearChange(date);
            _this.handleMonthChange(date);
          };

          _this.changeYear = function(year) {
            _this.setState(
              {
                date: (0, _date_utils.setYear)(
                  (0, _date_utils.cloneDate)(_this.state.date),
                  year
                )
              },
              function() {
                return _this.handleYearChange(_this.state.date);
              }
            );
          };

          _this.changeMonth = function(month) {
            _this.setState(
              {
                date: (0, _date_utils.setMonth)(
                  (0, _date_utils.cloneDate)(_this.state.date),
                  month
                )
              },
              function() {
                return _this.handleMonthChange(_this.state.date);
              }
            );
          };

          _this.changeMonthYear = function(monthYear) {
            _this.setState(
              {
                date: (0, _date_utils.setYear)(
                  (0, _date_utils.setMonth)(
                    (0, _date_utils.cloneDate)(_this.state.date),
                    (0, _date_utils.getMonth)(monthYear)
                  ),
                  (0, _date_utils.getYear)(monthYear)
                )
              },
              function() {
                return _this.handleMonthYearChange(_this.state.date);
              }
            );
          };

          _this.header = function() {
            var date =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : _this.state.date;

            var startOfWeek = (0, _date_utils.getStartOfWeek)(
              (0, _date_utils.cloneDate)(date)
            );
            var dayNames = [];
            if (_this.props.showWeekNumbers) {
              dayNames.push(
                _react2.default.createElement(
                  "div",
                  { key: "W", className: "react-datepicker__day-name" },
                  _this.props.weekLabel || "#"
                )
              );
            }
            return dayNames.concat(
              [0, 1, 2, 3, 4, 5, 6].map(function(offset) {
                var day = (0, _date_utils.addDays)(
                  (0, _date_utils.cloneDate)(startOfWeek),
                  offset
                );
                var localeData = (0, _date_utils.getLocaleData)(day);
                var weekDayName = _this.props.useWeekdaysShort
                  ? (0, _date_utils.getWeekdayShortInLocale)(localeData, day)
                  : (0, _date_utils.getWeekdayMinInLocale)(localeData, day);
                return _react2.default.createElement(
                  "div",
                  { key: offset, className: "react-datepicker__day-name" },
                  weekDayName
                );
              })
            );
          };

          _this.renderPreviousMonthButton = function() {
            if (
              !_this.props.forceShowMonthNavigation &&
              (0, _date_utils.allDaysDisabledBefore)(
                _this.state.date,
                "month",
                _this.props
              )
            ) {
              return;
            }
            return _react2.default.createElement("a", {
              className:
                "react-datepicker__navigation react-datepicker__navigation--previous",
              onClick: _this.decreaseMonth
            });
          };

          _this.renderNextMonthButton = function() {
            if (
              !_this.props.forceShowMonthNavigation &&
              (0, _date_utils.allDaysDisabledAfter)(
                _this.state.date,
                "month",
                _this.props
              )
            ) {
              return;
            }

            var classes = [
              "react-datepicker__navigation",
              "react-datepicker__navigation--next"
            ];
            if (_this.props.showTimeSelect) {
              classes.push("react-datepicker__navigation--next--with-time");
            }
            if (_this.props.todayButton) {
              classes.push(
                "react-datepicker__navigation--next--with-today-button"
              );
            }

            return _react2.default.createElement("a", {
              className: classes.join(" "),
              onClick: _this.increaseMonth
            });
          };

          _this.renderCurrentMonth = function() {
            var date =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : _this.state.date;

            var classes = ["react-datepicker__current-month"];

            if (_this.props.showYearDropdown) {
              classes.push("react-datepicker__current-month--hasYearDropdown");
            }
            if (_this.props.showMonthDropdown) {
              classes.push("react-datepicker__current-month--hasMonthDropdown");
            }
            if (_this.props.showMonthYearDropdown) {
              classes.push(
                "react-datepicker__current-month--hasMonthYearDropdown"
              );
            }
            return _react2.default.createElement(
              "div",
              { className: classes.join(" ") },
              (0, _date_utils.formatDate)(date, _this.props.dateFormat)
            );
          };

          _this.renderYearDropdown = function() {
            var overrideHide =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : false;

            if (!_this.props.showYearDropdown || overrideHide) {
              return;
            }
            return _react2.default.createElement(_year_dropdown2.default, {
              adjustDateOnChange: _this.props.adjustDateOnChange,
              date: _this.state.date,
              onSelect: _this.props.onSelect,
              setOpen: _this.props.setOpen,
              dropdownMode: _this.props.dropdownMode,
              onChange: _this.changeYear,
              minDate: _this.props.minDate,
              maxDate: _this.props.maxDate,
              year: (0, _date_utils.getYear)(_this.state.date),
              scrollableYearDropdown: _this.props.scrollableYearDropdown,
              yearDropdownItemNumber: _this.props.yearDropdownItemNumber
            });
          };

          _this.renderMonthDropdown = function() {
            var overrideHide =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : false;

            if (!_this.props.showMonthDropdown) {
              return;
            }
            return _react2.default.createElement(_month_dropdown2.default, {
              dropdownMode: _this.props.dropdownMode,
              locale: _this.props.locale,
              dateFormat: _this.props.dateFormat,
              onChange: _this.changeMonth,
              month: (0, _date_utils.getMonth)(_this.state.date),
              useShortMonthInDropdown: _this.props.useShortMonthInDropdown
            });
          };

          _this.renderMonthYearDropdown = function() {
            var overrideHide =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : false;

            if (!_this.props.showMonthYearDropdown) {
              return;
            }
            return _react2.default.createElement(
              _month_year_dropdown2.default,
              {
                dropdownMode: _this.props.dropdownMode,
                locale: _this.props.locale,
                dateFormat: _this.props.dateFormat,
                onChange: _this.changeMonthYear,
                minDate: _this.props.minDate,
                maxDate: _this.props.maxDate,
                date: _this.state.date,
                scrollableMonthYearDropdown:
                  _this.props.scrollableMonthYearDropdown
              }
            );
          };

          _this.renderTodayButton = function() {
            if (!_this.props.todayButton) {
              return;
            }
            return _react2.default.createElement(
              "div",
              {
                className: "react-datepicker__today-button",
                onClick: function onClick(e) {
                  return _this.props.onSelect(
                    (0, _date_utils.getStartOfDate)(
                      (0, _date_utils.now)(_this.props.utcOffset)
                    ),
                    e
                  );
                }
              },
              _this.props.todayButton
            );
          };

          _this.renderMonths = function() {
            var monthList = [];
            for (var i = 0; i < _this.props.monthsShown; ++i) {
              var monthDate = (0, _date_utils.addMonths)(
                (0, _date_utils.cloneDate)(_this.state.date),
                i
              );
              var monthKey = "month-" + i;
              monthList.push(
                _react2.default.createElement(
                  "div",
                  {
                    key: monthKey,
                    ref: function ref(div) {
                      _this.monthContainer = div;
                    },
                    className: "react-datepicker__month-container"
                  },
                  _react2.default.createElement(
                    "div",
                    { className: "react-datepicker__header" },
                    _this.renderCurrentMonth(monthDate),
                    _react2.default.createElement(
                      "div",
                      {
                        className:
                          "react-datepicker__header__dropdown react-datepicker__header__dropdown--" +
                          _this.props.dropdownMode,
                        onFocus: _this.handleDropdownFocus
                      },
                      _this.renderMonthDropdown(i !== 0),
                      _this.renderMonthYearDropdown(i !== 0),
                      _this.renderYearDropdown(i !== 0)
                    ),
                    _react2.default.createElement(
                      "div",
                      { className: "react-datepicker__day-names" },
                      _this.header(monthDate)
                    )
                  ),
                  _react2.default.createElement(_month2.default, {
                    day: monthDate,
                    dayClassName: _this.props.dayClassName,
                    onDayClick: _this.handleDayClick,
                    onDayMouseEnter: _this.handleDayMouseEnter,
                    onMouseLeave: _this.handleMonthMouseLeave,
                    onWeekSelect: _this.props.onWeekSelect,
                    formatWeekNumber: _this.props.formatWeekNumber,
                    minDate: _this.props.minDate,
                    maxDate: _this.props.maxDate,
                    excludeDates: _this.props.excludeDates,
                    highlightDates: _this.props.highlightDates,
                    selectingDate: _this.state.selectingDate,
                    includeDates: _this.props.includeDates,
                    inline: _this.props.inline,
                    fixedHeight: _this.props.fixedHeight,
                    filterDate: _this.props.filterDate,
                    preSelection: _this.props.preSelection,
                    selected: _this.props.selected,
                    selectsStart: _this.props.selectsStart,
                    selectsEnd: _this.props.selectsEnd,
                    showWeekNumbers: _this.props.showWeekNumbers,
                    startDate: _this.props.startDate,
                    endDate: _this.props.endDate,
                    peekNextMonth: _this.props.peekNextMonth,
                    utcOffset: _this.props.utcOffset
                  })
                )
              );
            }
            return monthList;
          };

          _this.renderTimeSection = function() {
            if (_this.props.showTimeSelect) {
              return _react2.default.createElement(_time2.default, {
                selected: _this.props.selected,
                onChange: _this.props.onTimeChange,
                format: _this.props.timeFormat,
                intervals: _this.props.timeIntervals,
                minTime: _this.props.minTime,
                maxTime: _this.props.maxTime,
                excludeTimes: _this.props.excludeTimes,
                todayButton: _this.props.todayButton,
                showMonthDropdown: _this.props.showMonthDropdown,
                showMonthYearDropdown: _this.props.showMonthYearDropdown,
                showYearDropdown: _this.props.showYearDropdown,
                withPortal: _this.props.withPortal,
                monthRef: _this.state.monthContainer
              });
            }
          };

          _this.state = {
            date: _this.localizeDate(_this.getDateInView()),
            selectingDate: null,
            monthContainer: _this.monthContainer
          };
          return _this;
        }

        Calendar.prototype.componentDidMount = function componentDidMount() {
          var _this2 = this;

          // monthContainer height is needed in time component
          // to determine the height for the ul in the time component
          // setState here so height is given after final component
          // layout is rendered
          if (this.props.showTimeSelect) {
            this.assignMonthContainer = (function() {
              _this2.setState({ monthContainer: _this2.monthContainer });
            })();
          }
        };

        Calendar.prototype.componentWillReceiveProps = function componentWillReceiveProps(
          nextProps
        ) {
          if (
            nextProps.preSelection &&
            !(0, _date_utils.isSameDay)(
              nextProps.preSelection,
              this.props.preSelection
            )
          ) {
            this.setState({
              date: this.localizeDate(nextProps.preSelection)
            });
          } else if (
            nextProps.openToDate &&
            !(0, _date_utils.isSameDay)(
              nextProps.openToDate,
              this.props.openToDate
            )
          ) {
            this.setState({
              date: this.localizeDate(nextProps.openToDate)
            });
          }
        };

        Calendar.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            {
              className: (0, _classnames2.default)(
                "react-datepicker",
                this.props.className
              )
            },
            _react2.default.createElement("div", {
              className: "react-datepicker__triangle"
            }),
            this.renderPreviousMonthButton(),
            this.renderNextMonthButton(),
            this.renderMonths(),
            this.renderTodayButton(),
            this.renderTimeSection(),
            this.props.children
          );
        };

        return Calendar;
      })(_react2.default.Component);

      Calendar.propTypes = {
        adjustDateOnChange: _propTypes2.default.bool,
        className: _propTypes2.default.string,
        children: _propTypes2.default.node,
        dateFormat: _propTypes2.default.oneOfType([
          _propTypes2.default.string,
          _propTypes2.default.array
        ]).isRequired,
        dayClassName: _propTypes2.default.func,
        dropdownMode: _propTypes2.default.oneOf(["scroll", "select"])
          .isRequired,
        endDate: _propTypes2.default.object,
        excludeDates: _propTypes2.default.array,
        filterDate: _propTypes2.default.func,
        fixedHeight: _propTypes2.default.bool,
        formatWeekNumber: _propTypes2.default.func,
        highlightDates: _propTypes2.default.instanceOf(Map),
        includeDates: _propTypes2.default.array,
        inline: _propTypes2.default.bool,
        locale: _propTypes2.default.string,
        maxDate: _propTypes2.default.object,
        minDate: _propTypes2.default.object,
        monthsShown: _propTypes2.default.number,
        onClickOutside: _propTypes2.default.func.isRequired,
        onMonthChange: _propTypes2.default.func,
        onYearChange: _propTypes2.default.func,
        forceShowMonthNavigation: _propTypes2.default.bool,
        onDropdownFocus: _propTypes2.default.func,
        onSelect: _propTypes2.default.func.isRequired,
        onWeekSelect: _propTypes2.default.func,
        showTimeSelect: _propTypes2.default.bool,
        timeFormat: _propTypes2.default.string,
        timeIntervals: _propTypes2.default.number,
        onTimeChange: _propTypes2.default.func,
        minTime: _propTypes2.default.object,
        maxTime: _propTypes2.default.object,
        excludeTimes: _propTypes2.default.array,
        openToDate: _propTypes2.default.object,
        peekNextMonth: _propTypes2.default.bool,
        scrollableYearDropdown: _propTypes2.default.bool,
        scrollableMonthYearDropdown: _propTypes2.default.bool,
        preSelection: _propTypes2.default.object,
        selected: _propTypes2.default.object,
        selectsEnd: _propTypes2.default.bool,
        selectsStart: _propTypes2.default.bool,
        showMonthDropdown: _propTypes2.default.bool,
        showMonthYearDropdown: _propTypes2.default.bool,
        showWeekNumbers: _propTypes2.default.bool,
        showYearDropdown: _propTypes2.default.bool,
        startDate: _propTypes2.default.object,
        todayButton: _propTypes2.default.string,
        useWeekdaysShort: _propTypes2.default.bool,
        withPortal: _propTypes2.default.bool,
        utcOffset: _propTypes2.default.number,
        weekLabel: _propTypes2.default.string,
        yearDropdownItemNumber: _propTypes2.default.number,
        setOpen: _propTypes2.default.func,
        useShortMonthInDropdown: _propTypes2.default.bool
      };
      exports.default = Calendar;

      /***/
    },
    /* 210 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _year_dropdown_options = __webpack_require__(214);

      var _year_dropdown_options2 = _interopRequireDefault(
        _year_dropdown_options
      );

      var _reactOnclickoutside = __webpack_require__(216);

      var _reactOnclickoutside2 = _interopRequireDefault(_reactOnclickoutside);

      var _date_utils = __webpack_require__(217);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var WrappedYearDropdownOptions = (0, _reactOnclickoutside2.default)(
        _year_dropdown_options2.default
      );

      var YearDropdown = (function(_React$Component) {
        _inherits(YearDropdown, _React$Component);

        function YearDropdown() {
          var _temp, _this, _ret;

          _classCallCheck(this, YearDropdown);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              dropdownVisible: false
            }),
            (_this.renderSelectOptions = function() {
              var minYear = _this.props.minDate
                ? (0, _date_utils.getYear)(_this.props.minDate)
                : 1900;
              var maxYear = _this.props.maxDate
                ? (0, _date_utils.getYear)(_this.props.maxDate)
                : 2100;

              var options = [];
              for (var i = minYear; i <= maxYear; i++) {
                options.push(
                  _react2.default.createElement(
                    "option",
                    { key: i, value: i },
                    i
                  )
                );
              }
              return options;
            }),
            (_this.onSelectChange = function(e) {
              _this.onChange(e.target.value);
            }),
            (_this.renderSelectMode = function() {
              return _react2.default.createElement(
                "select",
                {
                  value: _this.props.year,
                  className: "react-datepicker__year-select",
                  onChange: _this.onSelectChange
                },
                _this.renderSelectOptions()
              );
            }),
            (_this.renderReadView = function(visible) {
              return _react2.default.createElement(
                "div",
                {
                  key: "read",
                  style: { visibility: visible ? "visible" : "hidden" },
                  className: "react-datepicker__year-read-view",
                  onClick: function onClick(event) {
                    return _this.toggleDropdown(event);
                  }
                },
                _react2.default.createElement("span", {
                  className: "react-datepicker__year-read-view--down-arrow"
                }),
                _react2.default.createElement(
                  "span",
                  {
                    className: "react-datepicker__year-read-view--selected-year"
                  },
                  _this.props.year
                )
              );
            }),
            (_this.renderDropdown = function() {
              return _react2.default.createElement(WrappedYearDropdownOptions, {
                key: "dropdown",
                ref: "options",
                year: _this.props.year,
                onChange: _this.onChange,
                onCancel: _this.toggleDropdown,
                minDate: _this.props.minDate,
                maxDate: _this.props.maxDate,
                scrollableYearDropdown: _this.props.scrollableYearDropdown,
                yearDropdownItemNumber: _this.props.yearDropdownItemNumber
              });
            }),
            (_this.renderScrollMode = function() {
              var dropdownVisible = _this.state.dropdownVisible;

              var result = [_this.renderReadView(!dropdownVisible)];
              if (dropdownVisible) {
                result.unshift(_this.renderDropdown());
              }
              return result;
            }),
            (_this.onChange = function(year) {
              _this.toggleDropdown();
              if (year === _this.props.year) return;
              _this.props.onChange(year);
            }),
            (_this.toggleDropdown = function(event) {
              _this.setState(
                {
                  dropdownVisible: !_this.state.dropdownVisible
                },
                function() {
                  if (_this.props.adjustDateOnChange) {
                    _this.handleYearChange(_this.props.date, event);
                  }
                }
              );
            }),
            (_this.handleYearChange = function(date, event) {
              _this.onSelect(date, event);
              _this.setOpen();
            }),
            (_this.onSelect = function(date, event) {
              if (_this.props.onSelect) {
                _this.props.onSelect(date, event);
              }
            }),
            (_this.setOpen = function() {
              if (_this.props.setOpen) {
                _this.props.setOpen(true);
              }
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        YearDropdown.prototype.render = function render() {
          var renderedDropdown = void 0;
          switch (this.props.dropdownMode) {
            case "scroll":
              renderedDropdown = this.renderScrollMode();
              break;
            case "select":
              renderedDropdown = this.renderSelectMode();
              break;
          }

          return _react2.default.createElement(
            "div",
            {
              className:
                "react-datepicker__year-dropdown-container react-datepicker__year-dropdown-container--" +
                this.props.dropdownMode
            },
            renderedDropdown
          );
        };

        return YearDropdown;
      })(_react2.default.Component);

      YearDropdown.propTypes = {
        adjustDateOnChange: _propTypes2.default.bool,
        dropdownMode: _propTypes2.default.oneOf(["scroll", "select"])
          .isRequired,
        maxDate: _propTypes2.default.object,
        minDate: _propTypes2.default.object,
        onChange: _propTypes2.default.func.isRequired,
        scrollableYearDropdown: _propTypes2.default.bool,
        year: _propTypes2.default.number.isRequired,
        yearDropdownItemNumber: _propTypes2.default.number,
        date: _propTypes2.default.object,
        onSelect: _propTypes2.default.func,
        setOpen: _propTypes2.default.func
      };
      exports.default = YearDropdown;

      /***/
    },
    /* 211 */
    /***/ function(module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      if (undefined !== "production") {
        var REACT_ELEMENT_TYPE =
          (typeof Symbol === "function" &&
            Symbol.for &&
            Symbol.for("react.element")) ||
          0xeac7;

        var isValidElement = function(object) {
          return (
            typeof object === "object" &&
            object !== null &&
            object.$$typeof === REACT_ELEMENT_TYPE
          );
        };

        // By explicitly using `prop-types` you are opting into new development behavior.
        // http://fb.me/prop-types-in-prod
        var throwOnDirectAccess = true;
        module.exports = __webpack_require__(212)(
          isValidElement,
          throwOnDirectAccess
        );
      } else {
        // By explicitly using `prop-types` you are opting into new production behavior.
        // http://fb.me/prop-types-in-prod
        module.exports = __webpack_require__(213)();
      }

      /***/
    },
    /* 212 */
    /***/ function(module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      "use strict";

      var emptyFunction = __webpack_require__(6);
      var invariant = __webpack_require__(8);
      var warning = __webpack_require__(9);
      var assign = __webpack_require__(4);

      var ReactPropTypesSecret = __webpack_require__(11);
      var checkPropTypes = __webpack_require__(10);

      module.exports = function(isValidElement, throwOnDirectAccess) {
        /* global Symbol */
        var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator"; // Before Symbol spec.

        /**
         * Returns the iterator method function contained on the iterable object.
         *
         * Be sure to invoke the function with the iterable as context:
         *
         *     var iteratorFn = getIteratorFn(myIterable);
         *     if (iteratorFn) {
         *       var iterator = iteratorFn.call(myIterable);
         *       ...
         *     }
         *
         * @param {?object} maybeIterable
         * @return {?function}
         */
        function getIteratorFn(maybeIterable) {
          var iteratorFn =
            maybeIterable &&
            ((ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||
              maybeIterable[FAUX_ITERATOR_SYMBOL]);
          if (typeof iteratorFn === "function") {
            return iteratorFn;
          }
        }

        /**
         * Collection of methods that allow declaration and validation of props that are
         * supplied to React components. Example usage:
         *
         *   var Props = require('ReactPropTypes');
         *   var MyArticle = React.createClass({
         *     propTypes: {
         *       // An optional string prop named "description".
         *       description: Props.string,
         *
         *       // A required enum prop named "category".
         *       category: Props.oneOf(['News','Photos']).isRequired,
         *
         *       // A prop named "dialog" that requires an instance of Dialog.
         *       dialog: Props.instanceOf(Dialog).isRequired
         *     },
         *     render: function() { ... }
         *   });
         *
         * A more formal specification of how these methods are used:
         *
         *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
         *   decl := ReactPropTypes.{type}(.isRequired)?
         *
         * Each and every declaration produces a function with the same signature. This
         * allows the creation of custom validation functions. For example:
         *
         *  var MyLink = React.createClass({
         *    propTypes: {
         *      // An optional string or URI prop named "href".
         *      href: function(props, propName, componentName) {
         *        var propValue = props[propName];
         *        if (propValue != null && typeof propValue !== 'string' &&
         *            !(propValue instanceof URI)) {
         *          return new Error(
         *            'Expected a string or an URI for ' + propName + ' in ' +
         *            componentName
         *          );
         *        }
         *      }
         *    },
         *    render: function() {...}
         *  });
         *
         * @internal
         */

        var ANONYMOUS = "<<anonymous>>";

        // Important!
        // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
        var ReactPropTypes = {
          array: createPrimitiveTypeChecker("array"),
          bool: createPrimitiveTypeChecker("boolean"),
          func: createPrimitiveTypeChecker("function"),
          number: createPrimitiveTypeChecker("number"),
          object: createPrimitiveTypeChecker("object"),
          string: createPrimitiveTypeChecker("string"),
          symbol: createPrimitiveTypeChecker("symbol"),

          any: createAnyTypeChecker(),
          arrayOf: createArrayOfTypeChecker,
          element: createElementTypeChecker(),
          instanceOf: createInstanceTypeChecker,
          node: createNodeChecker(),
          objectOf: createObjectOfTypeChecker,
          oneOf: createEnumTypeChecker,
          oneOfType: createUnionTypeChecker,
          shape: createShapeTypeChecker,
          exact: createStrictShapeTypeChecker
        };

        /**
         * inlined Object.is polyfill to avoid requiring consumers ship their own
         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
         */
        /*eslint-disable no-self-compare*/
        function is(x, y) {
          // SameValue algorithm
          if (x === y) {
            // Steps 1-5, 7-10
            // Steps 6.b-6.e: +0 != -0
            return x !== 0 || 1 / x === 1 / y;
          } else {
            // Step 6.a: NaN == NaN
            return x !== x && y !== y;
          }
        }
        /*eslint-enable no-self-compare*/

        /**
         * We use an Error-like object for backward compatibility as people may call
         * PropTypes directly and inspect their output. However, we don't use real
         * Errors anymore. We don't inspect their stack anyway, and creating them
         * is prohibitively expensive if they are created too often, such as what
         * happens in oneOfType() for any type before the one that matched.
         */
        function PropTypeError(message) {
          this.message = message;
          this.stack = "";
        }
        // Make `instanceof Error` still work for returned errors.
        PropTypeError.prototype = Error.prototype;

        function createChainableTypeChecker(validate) {
          if (undefined !== "production") {
            var manualPropTypeCallCache = {};
            var manualPropTypeWarningCount = 0;
          }
          function checkType(
            isRequired,
            props,
            propName,
            componentName,
            location,
            propFullName,
            secret
          ) {
            componentName = componentName || ANONYMOUS;
            propFullName = propFullName || propName;

            if (secret !== ReactPropTypesSecret) {
              if (throwOnDirectAccess) {
                // New behavior only for users of `prop-types` package
                invariant(
                  false,
                  "Calling PropTypes validators directly is not supported by the `prop-types` package. " +
                    "Use `PropTypes.checkPropTypes()` to call them. " +
                    "Read more at http://fb.me/use-check-prop-types"
                );
              } else if (
                undefined !== "production" &&
                typeof console !== "undefined"
              ) {
                // Old behavior for people using React.PropTypes
                var cacheKey = componentName + ":" + propName;
                if (
                  !manualPropTypeCallCache[cacheKey] &&
                  // Avoid spamming the console because they are often not actionable except for lib authors
                  manualPropTypeWarningCount < 3
                ) {
                  warning(
                    false,
                    "You are manually calling a React.PropTypes validation " +
                      "function for the `%s` prop on `%s`. This is deprecated " +
                      "and will throw in the standalone `prop-types` package. " +
                      "You may be seeing this warning due to a third-party PropTypes " +
                      "library. See https://fb.me/react-warning-dont-call-proptypes " +
                      "for details.",
                    propFullName,
                    componentName
                  );
                  manualPropTypeCallCache[cacheKey] = true;
                  manualPropTypeWarningCount++;
                }
              }
            }
            if (props[propName] == null) {
              if (isRequired) {
                if (props[propName] === null) {
                  return new PropTypeError(
                    "The " +
                      location +
                      " `" +
                      propFullName +
                      "` is marked as required " +
                      ("in `" + componentName + "`, but its value is `null`.")
                  );
                }
                return new PropTypeError(
                  "The " +
                    location +
                    " `" +
                    propFullName +
                    "` is marked as required in " +
                    ("`" + componentName + "`, but its value is `undefined`.")
                );
              }
              return null;
            } else {
              return validate(
                props,
                propName,
                componentName,
                location,
                propFullName
              );
            }
          }

          var chainedCheckType = checkType.bind(null, false);
          chainedCheckType.isRequired = checkType.bind(null, true);

          return chainedCheckType;
        }

        function createPrimitiveTypeChecker(expectedType) {
          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName,
            secret
          ) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== expectedType) {
              // `propValue` being instance of, say, date/regexp, pass the 'object'
              // check, but we can offer a more precise error message here rather than
              // 'of type `object`'.
              var preciseType = getPreciseType(propValue);

              return new PropTypeError(
                "Invalid " +
                  location +
                  " `" +
                  propFullName +
                  "` of type " +
                  ("`" +
                    preciseType +
                    "` supplied to `" +
                    componentName +
                    "`, expected ") +
                  ("`" + expectedType + "`.")
              );
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createAnyTypeChecker() {
          return createChainableTypeChecker(emptyFunction.thatReturnsNull);
        }

        function createArrayOfTypeChecker(typeChecker) {
          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            if (typeof typeChecker !== "function") {
              return new PropTypeError(
                "Property `" +
                  propFullName +
                  "` of component `" +
                  componentName +
                  "` has invalid PropType notation inside arrayOf."
              );
            }
            var propValue = props[propName];
            if (!Array.isArray(propValue)) {
              var propType = getPropType(propValue);
              return new PropTypeError(
                "Invalid " +
                  location +
                  " `" +
                  propFullName +
                  "` of type " +
                  ("`" +
                    propType +
                    "` supplied to `" +
                    componentName +
                    "`, expected an array.")
              );
            }
            for (var i = 0; i < propValue.length; i++) {
              var error = typeChecker(
                propValue,
                i,
                componentName,
                location,
                propFullName + "[" + i + "]",
                ReactPropTypesSecret
              );
              if (error instanceof Error) {
                return error;
              }
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createElementTypeChecker() {
          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            var propValue = props[propName];
            if (!isValidElement(propValue)) {
              var propType = getPropType(propValue);
              return new PropTypeError(
                "Invalid " +
                  location +
                  " `" +
                  propFullName +
                  "` of type " +
                  ("`" +
                    propType +
                    "` supplied to `" +
                    componentName +
                    "`, expected a single ReactElement.")
              );
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createInstanceTypeChecker(expectedClass) {
          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            if (!(props[propName] instanceof expectedClass)) {
              var expectedClassName = expectedClass.name || ANONYMOUS;
              var actualClassName = getClassName(props[propName]);
              return new PropTypeError(
                "Invalid " +
                  location +
                  " `" +
                  propFullName +
                  "` of type " +
                  ("`" +
                    actualClassName +
                    "` supplied to `" +
                    componentName +
                    "`, expected ") +
                  ("instance of `" + expectedClassName + "`.")
              );
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createEnumTypeChecker(expectedValues) {
          if (!Array.isArray(expectedValues)) {
            undefined !== "production"
              ? warning(
                  false,
                  "Invalid argument supplied to oneOf, expected an instance of array."
                )
              : void 0;
            return emptyFunction.thatReturnsNull;
          }

          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            var propValue = props[propName];
            for (var i = 0; i < expectedValues.length; i++) {
              if (is(propValue, expectedValues[i])) {
                return null;
              }
            }

            var valuesString = JSON.stringify(expectedValues);
            return new PropTypeError(
              "Invalid " +
                location +
                " `" +
                propFullName +
                "` of value `" +
                propValue +
                "` " +
                ("supplied to `" +
                  componentName +
                  "`, expected one of " +
                  valuesString +
                  ".")
            );
          }
          return createChainableTypeChecker(validate);
        }

        function createObjectOfTypeChecker(typeChecker) {
          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            if (typeof typeChecker !== "function") {
              return new PropTypeError(
                "Property `" +
                  propFullName +
                  "` of component `" +
                  componentName +
                  "` has invalid PropType notation inside objectOf."
              );
            }
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== "object") {
              return new PropTypeError(
                "Invalid " +
                  location +
                  " `" +
                  propFullName +
                  "` of type " +
                  ("`" +
                    propType +
                    "` supplied to `" +
                    componentName +
                    "`, expected an object.")
              );
            }
            for (var key in propValue) {
              if (propValue.hasOwnProperty(key)) {
                var error = typeChecker(
                  propValue,
                  key,
                  componentName,
                  location,
                  propFullName + "." + key,
                  ReactPropTypesSecret
                );
                if (error instanceof Error) {
                  return error;
                }
              }
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createUnionTypeChecker(arrayOfTypeCheckers) {
          if (!Array.isArray(arrayOfTypeCheckers)) {
            undefined !== "production"
              ? warning(
                  false,
                  "Invalid argument supplied to oneOfType, expected an instance of array."
                )
              : void 0;
            return emptyFunction.thatReturnsNull;
          }

          for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
            var checker = arrayOfTypeCheckers[i];
            if (typeof checker !== "function") {
              warning(
                false,
                "Invalid argument supplied to oneOfType. Expected an array of check functions, but " +
                  "received %s at index %s.",
                getPostfixForTypeWarning(checker),
                i
              );
              return emptyFunction.thatReturnsNull;
            }
          }

          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
              var checker = arrayOfTypeCheckers[i];
              if (
                checker(
                  props,
                  propName,
                  componentName,
                  location,
                  propFullName,
                  ReactPropTypesSecret
                ) == null
              ) {
                return null;
              }
            }

            return new PropTypeError(
              "Invalid " +
                location +
                " `" +
                propFullName +
                "` supplied to " +
                ("`" + componentName + "`.")
            );
          }
          return createChainableTypeChecker(validate);
        }

        function createNodeChecker() {
          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            if (!isNode(props[propName])) {
              return new PropTypeError(
                "Invalid " +
                  location +
                  " `" +
                  propFullName +
                  "` supplied to " +
                  ("`" + componentName + "`, expected a ReactNode.")
              );
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createShapeTypeChecker(shapeTypes) {
          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== "object") {
              return new PropTypeError(
                "Invalid " +
                  location +
                  " `" +
                  propFullName +
                  "` of type `" +
                  propType +
                  "` " +
                  ("supplied to `" + componentName + "`, expected `object`.")
              );
            }
            for (var key in shapeTypes) {
              var checker = shapeTypes[key];
              if (!checker) {
                continue;
              }
              var error = checker(
                propValue,
                key,
                componentName,
                location,
                propFullName + "." + key,
                ReactPropTypesSecret
              );
              if (error) {
                return error;
              }
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createStrictShapeTypeChecker(shapeTypes) {
          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== "object") {
              return new PropTypeError(
                "Invalid " +
                  location +
                  " `" +
                  propFullName +
                  "` of type `" +
                  propType +
                  "` " +
                  ("supplied to `" + componentName + "`, expected `object`.")
              );
            }
            // We need to check all keys in case some are required but missing from
            // props.
            var allKeys = assign({}, props[propName], shapeTypes);
            for (var key in allKeys) {
              var checker = shapeTypes[key];
              if (!checker) {
                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` key `" +
                    key +
                    "` supplied to `" +
                    componentName +
                    "`." +
                    "\nBad object: " +
                    JSON.stringify(props[propName], null, "  ") +
                    "\nValid keys: " +
                    JSON.stringify(Object.keys(shapeTypes), null, "  ")
                );
              }
              var error = checker(
                propValue,
                key,
                componentName,
                location,
                propFullName + "." + key,
                ReactPropTypesSecret
              );
              if (error) {
                return error;
              }
            }
            return null;
          }

          return createChainableTypeChecker(validate);
        }

        function isNode(propValue) {
          switch (typeof propValue) {
            case "number":
            case "string":
            case "undefined":
              return true;
            case "boolean":
              return !propValue;
            case "object":
              if (Array.isArray(propValue)) {
                return propValue.every(isNode);
              }
              if (propValue === null || isValidElement(propValue)) {
                return true;
              }

              var iteratorFn = getIteratorFn(propValue);
              if (iteratorFn) {
                var iterator = iteratorFn.call(propValue);
                var step;
                if (iteratorFn !== propValue.entries) {
                  while (!(step = iterator.next()).done) {
                    if (!isNode(step.value)) {
                      return false;
                    }
                  }
                } else {
                  // Iterator will provide entry [k,v] tuples rather than values.
                  while (!(step = iterator.next()).done) {
                    var entry = step.value;
                    if (entry) {
                      if (!isNode(entry[1])) {
                        return false;
                      }
                    }
                  }
                }
              } else {
                return false;
              }

              return true;
            default:
              return false;
          }
        }

        function isSymbol(propType, propValue) {
          // Native Symbol.
          if (propType === "symbol") {
            return true;
          }

          // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
          if (propValue["@@toStringTag"] === "Symbol") {
            return true;
          }

          // Fallback for non-spec compliant Symbols which are polyfilled.
          if (typeof Symbol === "function" && propValue instanceof Symbol) {
            return true;
          }

          return false;
        }

        // Equivalent of `typeof` but with special handling for array and regexp.
        function getPropType(propValue) {
          var propType = typeof propValue;
          if (Array.isArray(propValue)) {
            return "array";
          }
          if (propValue instanceof RegExp) {
            // Old webkits (at least until Android 4.0) return 'function' rather than
            // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
            // passes PropTypes.object.
            return "object";
          }
          if (isSymbol(propType, propValue)) {
            return "symbol";
          }
          return propType;
        }

        // This handles more types than `getPropType`. Only used for error messages.
        // See `createPrimitiveTypeChecker`.
        function getPreciseType(propValue) {
          if (typeof propValue === "undefined" || propValue === null) {
            return "" + propValue;
          }
          var propType = getPropType(propValue);
          if (propType === "object") {
            if (propValue instanceof Date) {
              return "date";
            } else if (propValue instanceof RegExp) {
              return "regexp";
            }
          }
          return propType;
        }

        // Returns a string that is postfixed to a warning about an invalid type.
        // For example, "undefined" or "of type array"
        function getPostfixForTypeWarning(value) {
          var type = getPreciseType(value);
          switch (type) {
            case "array":
            case "object":
              return "an " + type;
            case "boolean":
            case "date":
            case "regexp":
              return "a " + type;
            default:
              return type;
          }
        }

        // Returns class name of the object, if any.
        function getClassName(propValue) {
          if (!propValue.constructor || !propValue.constructor.name) {
            return ANONYMOUS;
          }
          return propValue.constructor.name;
        }

        ReactPropTypes.checkPropTypes = checkPropTypes;
        ReactPropTypes.PropTypes = ReactPropTypes;

        return ReactPropTypes;
      };

      /***/
    },
    /* 213 */
    /***/ function(module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      "use strict";

      var emptyFunction = __webpack_require__(6);
      var invariant = __webpack_require__(8);
      var ReactPropTypesSecret = __webpack_require__(11);

      module.exports = function() {
        function shim(
          props,
          propName,
          componentName,
          location,
          propFullName,
          secret
        ) {
          if (secret === ReactPropTypesSecret) {
            // It is still safe when called from React.
            return;
          }
          invariant(
            false,
            "Calling PropTypes validators directly is not supported by the `prop-types` package. " +
              "Use PropTypes.checkPropTypes() to call them. " +
              "Read more at http://fb.me/use-check-prop-types"
          );
        }
        shim.isRequired = shim;
        function getShim() {
          return shim;
        }
        // Important!
        // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
        var ReactPropTypes = {
          array: shim,
          bool: shim,
          func: shim,
          number: shim,
          object: shim,
          string: shim,
          symbol: shim,

          any: shim,
          arrayOf: getShim,
          element: shim,
          instanceOf: getShim,
          node: shim,
          objectOf: getShim,
          oneOf: getShim,
          oneOfType: getShim,
          shape: getShim,
          exact: getShim
        };

        ReactPropTypes.checkPropTypes = emptyFunction;
        ReactPropTypes.PropTypes = ReactPropTypes;

        return ReactPropTypes;
      };

      /***/
    },
    /* 214 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _classnames = __webpack_require__(215);

      var _classnames2 = _interopRequireDefault(_classnames);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function generateYears(year, noOfYear, minDate, maxDate) {
        var list = [];
        for (var i = 0; i < 2 * noOfYear + 1; i++) {
          var newYear = year + noOfYear - i;
          var isInRange = true;

          if (minDate) {
            isInRange = minDate.year() <= newYear;
          }

          if (maxDate && isInRange) {
            isInRange = maxDate.year() >= newYear;
          }

          if (isInRange) {
            list.push(newYear);
          }
        }

        return list;
      }

      var YearDropdownOptions = (function(_React$Component) {
        _inherits(YearDropdownOptions, _React$Component);

        function YearDropdownOptions(props) {
          _classCallCheck(this, YearDropdownOptions);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.renderOptions = function() {
            var selectedYear = _this.props.year;
            var options = _this.state.yearsList.map(function(year) {
              return _react2.default.createElement(
                "div",
                {
                  className:
                    selectedYear === year
                      ? "react-datepicker__year-option --selected_year"
                      : "react-datepicker__year-option",
                  key: year,
                  ref: year,
                  onClick: _this.onChange.bind(_this, year)
                },
                selectedYear === year
                  ? _react2.default.createElement(
                      "span",
                      { className: "react-datepicker__year-option--selected" },
                      "\u2713"
                    )
                  : "",
                year
              );
            });

            var minYear = _this.props.minDate
              ? _this.props.minDate.year()
              : null;
            var maxYear = _this.props.maxDate
              ? _this.props.maxDate.year()
              : null;

            if (
              !maxYear ||
              !_this.state.yearsList.find(function(year) {
                return year === maxYear;
              })
            ) {
              options.unshift(
                _react2.default.createElement(
                  "div",
                  {
                    className: "react-datepicker__year-option",
                    ref: "upcoming",
                    key: "upcoming",
                    onClick: _this.incrementYears
                  },
                  _react2.default.createElement("a", {
                    className:
                      "react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-upcoming"
                  })
                )
              );
            }

            if (
              !minYear ||
              !_this.state.yearsList.find(function(year) {
                return year === minYear;
              })
            ) {
              options.push(
                _react2.default.createElement(
                  "div",
                  {
                    className: "react-datepicker__year-option",
                    ref: "previous",
                    key: "previous",
                    onClick: _this.decrementYears
                  },
                  _react2.default.createElement("a", {
                    className:
                      "react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-previous"
                  })
                )
              );
            }

            return options;
          };

          _this.onChange = function(year) {
            _this.props.onChange(year);
          };

          _this.handleClickOutside = function() {
            _this.props.onCancel();
          };

          _this.shiftYears = function(amount) {
            var years = _this.state.yearsList.map(function(year) {
              return year + amount;
            });

            _this.setState({
              yearsList: years
            });
          };

          _this.incrementYears = function() {
            return _this.shiftYears(1);
          };

          _this.decrementYears = function() {
            return _this.shiftYears(-1);
          };

          var yearDropdownItemNumber = props.yearDropdownItemNumber,
            scrollableYearDropdown = props.scrollableYearDropdown;

          var noOfYear =
            yearDropdownItemNumber || (scrollableYearDropdown ? 10 : 5);

          _this.state = {
            yearsList: generateYears(
              _this.props.year,
              noOfYear,
              _this.props.minDate,
              _this.props.maxDate
            )
          };
          return _this;
        }

        YearDropdownOptions.prototype.render = function render() {
          var dropdownClass = (0, _classnames2.default)({
            "react-datepicker__year-dropdown": true,
            "react-datepicker__year-dropdown--scrollable": this.props
              .scrollableYearDropdown
          });

          return _react2.default.createElement(
            "div",
            { className: dropdownClass },
            this.renderOptions()
          );
        };

        return YearDropdownOptions;
      })(_react2.default.Component);

      YearDropdownOptions.propTypes = {
        minDate: _propTypes2.default.object,
        maxDate: _propTypes2.default.object,
        onCancel: _propTypes2.default.func.isRequired,
        onChange: _propTypes2.default.func.isRequired,
        scrollableYearDropdown: _propTypes2.default.bool,
        year: _propTypes2.default.number.isRequired,
        yearDropdownItemNumber: _propTypes2.default.number
      };
      exports.default = YearDropdownOptions;

      /***/
    },
    /* 215 */
    /***/ function(module, exports, __webpack_require__) {
      var __WEBPACK_AMD_DEFINE_ARRAY__,
        __WEBPACK_AMD_DEFINE_RESULT__; /*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
      /* global define */

      (function() {
        "use strict";

        var hasOwn = {}.hasOwnProperty;

        function classNames() {
          var classes = [];

          for (var i = 0; i < arguments.length; i++) {
            var arg = arguments[i];
            if (!arg) continue;

            var argType = typeof arg;

            if (argType === "string" || argType === "number") {
              classes.push(arg);
            } else if (Array.isArray(arg)) {
              classes.push(classNames.apply(null, arg));
            } else if (argType === "object") {
              for (var key in arg) {
                if (hasOwn.call(arg, key) && arg[key]) {
                  classes.push(key);
                }
              }
            }
          }

          return classes.join(" ");
        }

        if (typeof module !== "undefined" && module.exports) {
          module.exports = classNames;
        } else if (true) {
          // register as 'classnames', consistent with npm package name
          !((__WEBPACK_AMD_DEFINE_ARRAY__ = []),
          (__WEBPACK_AMD_DEFINE_RESULT__ = function() {
            return classNames;
          }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
          __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
            (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
        } else {
          window.classNames = classNames;
        }
      })();

      /***/
    },
    /* 216 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", { value: true });

      var react = __webpack_require__(2);
      var reactDom = __webpack_require__(12);

      function _inheritsLoose(subClass, superClass) {
        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
      }

      function _objectWithoutProperties(source, excluded) {
        if (source == null) return {};
        var target = {};
        var sourceKeys = Object.keys(source);
        var key, i;

        for (i = 0; i < sourceKeys.length; i++) {
          key = sourceKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }

        if (Object.getOwnPropertySymbols) {
          var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

          for (i = 0; i < sourceSymbolKeys.length; i++) {
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key))
              continue;
            target[key] = source[key];
          }
        }

        return target;
      }

      /**
       * Check whether some DOM node is our Component's node.
       */
      function isNodeFound(current, componentNode, ignoreClass) {
        if (current === componentNode) {
          return true;
        } // SVG <use/> elements do not technically reside in the rendered DOM, so
        // they do not have classList directly, but they offer a link to their
        // corresponding element, which can have classList. This extra check is for
        // that case.
        // See: http://www.w3.org/TR/SVG11/struct.html#InterfaceSVGUseElement
        // Discussion: https://github.com/Pomax/react-onclickoutside/pull/17

        if (current.correspondingElement) {
          return current.correspondingElement.classList.contains(ignoreClass);
        }

        return current.classList.contains(ignoreClass);
      }
      /**
       * Try to find our node in a hierarchy of nodes, returning the document
       * node as highest node if our node is not found in the path up.
       */

      function findHighest(current, componentNode, ignoreClass) {
        if (current === componentNode) {
          return true;
        } // If source=local then this event came from 'somewhere'
        // inside and should be ignored. We could handle this with
        // a layered approach, too, but that requires going back to
        // thinking in terms of Dom node nesting, running counter
        // to React's 'you shouldn't care about the DOM' philosophy.

        while (current.parentNode) {
          if (isNodeFound(current, componentNode, ignoreClass)) {
            return true;
          }

          current = current.parentNode;
        }

        return current;
      }
      /**
       * Check if the browser scrollbar was clicked
       */

      function clickedScrollbar(evt) {
        return (
          document.documentElement.clientWidth <= evt.clientX ||
          document.documentElement.clientHeight <= evt.clientY
        );
      }

      // ideally will get replaced with external dep
      // when rafrex/detect-passive-events#4 and rafrex/detect-passive-events#5 get merged in
      var testPassiveEventSupport = function testPassiveEventSupport() {
        if (
          typeof window === "undefined" ||
          typeof window.addEventListener !== "function"
        ) {
          return;
        }

        var passive = false;
        var options = Object.defineProperty({}, "passive", {
          get: function get() {
            passive = true;
          }
        });

        var noop = function noop() {};

        window.addEventListener("testPassiveEventSupport", noop, options);
        window.removeEventListener("testPassiveEventSupport", noop, options);
        return passive;
      };

      function autoInc(seed) {
        if (seed === void 0) {
          seed = 0;
        }

        return function() {
          return ++seed;
        };
      }

      var uid = autoInc();

      var passiveEventSupport;
      var handlersMap = {};
      var enabledInstances = {};
      var touchEvents = ["touchstart", "touchmove"];
      var IGNORE_CLASS_NAME = "ignore-react-onclickoutside";
      /**
       * This function generates the HOC function that you'll use
       * in order to impart onOutsideClick listening to an
       * arbitrary component. It gets called at the end of the
       * bootstrapping code to yield an instance of the
       * onClickOutsideHOC function defined inside setupHOC().
       */

      function onClickOutsideHOC(WrappedComponent, config) {
        var _class, _temp;

        return (
          (_temp = _class =
            /*#__PURE__*/
            (function(_Component) {
              _inheritsLoose(onClickOutside, _Component);

              function onClickOutside(props) {
                var _this;

                _this = _Component.call(this, props) || this;

                _this.__outsideClickHandler = function(event) {
                  if (typeof _this.__clickOutsideHandlerProp === "function") {
                    _this.__clickOutsideHandlerProp(event);

                    return;
                  }

                  var instance = _this.getInstance();

                  if (typeof instance.props.handleClickOutside === "function") {
                    instance.props.handleClickOutside(event);
                    return;
                  }

                  if (typeof instance.handleClickOutside === "function") {
                    instance.handleClickOutside(event);
                    return;
                  }

                  throw new Error(
                    "WrappedComponent lacks a handleClickOutside(event) function for processing outside click events."
                  );
                };

                _this.enableOnClickOutside = function() {
                  if (
                    typeof document === "undefined" ||
                    enabledInstances[_this._uid]
                  ) {
                    return;
                  }

                  if (typeof passiveEventSupport === "undefined") {
                    passiveEventSupport = testPassiveEventSupport();
                  }

                  enabledInstances[_this._uid] = true;
                  var events = _this.props.eventTypes;

                  if (!events.forEach) {
                    events = [events];
                  }

                  handlersMap[_this._uid] = function(event) {
                    if (_this.props.disableOnClickOutside) return;
                    if (_this.componentNode === null) return;

                    if (_this.props.preventDefault) {
                      event.preventDefault();
                    }

                    if (_this.props.stopPropagation) {
                      event.stopPropagation();
                    }

                    if (_this.props.excludeScrollbar && clickedScrollbar(event))
                      return;
                    var current = event.target;

                    if (
                      findHighest(
                        current,
                        _this.componentNode,
                        _this.props.outsideClickIgnoreClass
                      ) !== document
                    ) {
                      return;
                    }

                    _this.__outsideClickHandler(event);
                  };

                  events.forEach(function(eventName) {
                    var handlerOptions = null;
                    var isTouchEvent = touchEvents.indexOf(eventName) !== -1;

                    if (isTouchEvent && passiveEventSupport) {
                      handlerOptions = {
                        passive: !_this.props.preventDefault
                      };
                    }

                    document.addEventListener(
                      eventName,
                      handlersMap[_this._uid],
                      handlerOptions
                    );
                  });
                };

                _this.disableOnClickOutside = function() {
                  delete enabledInstances[_this._uid];
                  var fn = handlersMap[_this._uid];

                  if (fn && typeof document !== "undefined") {
                    var events = _this.props.eventTypes;

                    if (!events.forEach) {
                      events = [events];
                    }

                    events.forEach(function(eventName) {
                      return document.removeEventListener(eventName, fn);
                    });
                    delete handlersMap[_this._uid];
                  }
                };

                _this.getRef = function(ref) {
                  return (_this.instanceRef = ref);
                };

                _this._uid = uid();
                return _this;
              }
              /**
               * Access the WrappedComponent's instance.
               */

              var _proto = onClickOutside.prototype;

              _proto.getInstance = function getInstance() {
                if (!WrappedComponent.prototype.isReactComponent) {
                  return this;
                }

                var ref = this.instanceRef;
                return ref.getInstance ? ref.getInstance() : ref;
              };

              /**
               * Add click listeners to the current document,
               * linked to this component's state.
               */
              _proto.componentDidMount = function componentDidMount() {
                // If we are in an environment without a DOM such
                // as shallow rendering or snapshots then we exit
                // early to prevent any unhandled errors being thrown.
                if (
                  typeof document === "undefined" ||
                  !document.createElement
                ) {
                  return;
                }

                var instance = this.getInstance();

                if (config && typeof config.handleClickOutside === "function") {
                  this.__clickOutsideHandlerProp = config.handleClickOutside(
                    instance
                  );

                  if (typeof this.__clickOutsideHandlerProp !== "function") {
                    throw new Error(
                      "WrappedComponent lacks a function for processing outside click events specified by the handleClickOutside config option."
                    );
                  }
                }

                this.componentNode = reactDom.findDOMNode(this.getInstance());
                this.enableOnClickOutside();
              };

              _proto.componentDidUpdate = function componentDidUpdate() {
                this.componentNode = reactDom.findDOMNode(this.getInstance());
              };
              /**
               * Remove all document's event listeners for this component
               */

              _proto.componentWillUnmount = function componentWillUnmount() {
                this.disableOnClickOutside();
              };
              /**
               * Can be called to explicitly enable event listening
               * for clicks and touches outside of this element.
               */

              /**
               * Pass-through render
               */
              _proto.render = function render() {
                // eslint-disable-next-line no-unused-vars
                var _props = this.props,
                  excludeScrollbar = _props.excludeScrollbar,
                  props = _objectWithoutProperties(_props, [
                    "excludeScrollbar"
                  ]);

                if (WrappedComponent.prototype.isReactComponent) {
                  props.ref = this.getRef;
                } else {
                  props.wrappedRef = this.getRef;
                }

                props.disableOnClickOutside = this.disableOnClickOutside;
                props.enableOnClickOutside = this.enableOnClickOutside;
                return react.createElement(WrappedComponent, props);
              };

              return onClickOutside;
            })(react.Component)),
          (_class.displayName =
            "OnClickOutside(" +
            (WrappedComponent.displayName ||
              WrappedComponent.name ||
              "Component") +
            ")"),
          (_class.defaultProps = {
            eventTypes: ["mousedown", "touchstart"],
            excludeScrollbar: (config && config.excludeScrollbar) || false,
            outsideClickIgnoreClass: IGNORE_CLASS_NAME,
            preventDefault: false,
            stopPropagation: false
          }),
          (_class.getClass = function() {
            return WrappedComponent.getClass
              ? WrappedComponent.getClass()
              : WrappedComponent;
          }),
          _temp
        );
      }

      exports.IGNORE_CLASS_NAME = IGNORE_CLASS_NAME;
      exports["default"] = onClickOutsideHOC;

      /***/
    },
    /* 217 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _typeof =
        typeof Symbol === "function" && typeof Symbol.iterator === "symbol"
          ? function(obj) {
              return typeof obj;
            }
          : function(obj) {
              return obj &&
                typeof Symbol === "function" &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? "symbol"
                : typeof obj;
            };

      exports.newDate = newDate;
      exports.newDateWithOffset = newDateWithOffset;
      exports.now = now;
      exports.cloneDate = cloneDate;
      exports.parseDate = parseDate;
      exports.isMoment = isMoment;
      exports.isDate = isDate;
      exports.formatDate = formatDate;
      exports.safeDateFormat = safeDateFormat;
      exports.setTime = setTime;
      exports.setMonth = setMonth;
      exports.setYear = setYear;
      exports.setUTCOffset = setUTCOffset;
      exports.getSecond = getSecond;
      exports.getMinute = getMinute;
      exports.getHour = getHour;
      exports.getDay = getDay;
      exports.getWeek = getWeek;
      exports.getMonth = getMonth;
      exports.getYear = getYear;
      exports.getDate = getDate;
      exports.getUTCOffset = getUTCOffset;
      exports.getDayOfWeekCode = getDayOfWeekCode;
      exports.getStartOfDay = getStartOfDay;
      exports.getStartOfWeek = getStartOfWeek;
      exports.getStartOfMonth = getStartOfMonth;
      exports.getStartOfDate = getStartOfDate;
      exports.getEndOfWeek = getEndOfWeek;
      exports.getEndOfMonth = getEndOfMonth;
      exports.addMinutes = addMinutes;
      exports.addDays = addDays;
      exports.addWeeks = addWeeks;
      exports.addMonths = addMonths;
      exports.addYears = addYears;
      exports.subtractDays = subtractDays;
      exports.subtractWeeks = subtractWeeks;
      exports.subtractMonths = subtractMonths;
      exports.subtractYears = subtractYears;
      exports.isBefore = isBefore;
      exports.isAfter = isAfter;
      exports.equals = equals;
      exports.isSameYear = isSameYear;
      exports.isSameMonth = isSameMonth;
      exports.isSameDay = isSameDay;
      exports.isSameUtcOffset = isSameUtcOffset;
      exports.isDayInRange = isDayInRange;
      exports.getDaysDiff = getDaysDiff;
      exports.localizeDate = localizeDate;
      exports.getDefaultLocale = getDefaultLocale;
      exports.getDefaultLocaleData = getDefaultLocaleData;
      exports.registerLocale = registerLocale;
      exports.getLocaleData = getLocaleData;
      exports.getLocaleDataForLocale = getLocaleDataForLocale;
      exports.getWeekdayMinInLocale = getWeekdayMinInLocale;
      exports.getWeekdayShortInLocale = getWeekdayShortInLocale;
      exports.getMonthInLocale = getMonthInLocale;
      exports.getMonthShortInLocale = getMonthShortInLocale;
      exports.isDayDisabled = isDayDisabled;
      exports.isTimeDisabled = isTimeDisabled;
      exports.isTimeInDisabledRange = isTimeInDisabledRange;
      exports.allDaysDisabledBefore = allDaysDisabledBefore;
      exports.allDaysDisabledAfter = allDaysDisabledAfter;
      exports.getEffectiveMinDate = getEffectiveMinDate;
      exports.getEffectiveMaxDate = getEffectiveMaxDate;
      exports.getHightLightDaysMap = getHightLightDaysMap;

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var dayOfWeekCodes = {
        1: "mon",
        2: "tue",
        3: "wed",
        4: "thu",
        5: "fri",
        6: "sat",
        7: "sun"
      };

      // These functions are not exported so
      // that we avoid magic strings like 'days'
      function set(date, unit, to) {
        return date.set(unit, to);
      }

      function add(date, amount, unit) {
        return date.add(amount, unit);
      }

      function subtract(date, amount, unit) {
        return date.subtract(amount, unit);
      }

      function get(date, unit) {
        return date.get(unit);
      }

      function getStartOf(date, unit) {
        return date.startOf(unit);
      }

      function getEndOf(date, unit) {
        return date.endOf(unit);
      }

      function getDiff(date1, date2, unit) {
        return date1.diff(date2, unit);
      }

      function isSame(date1, date2, unit) {
        return date1.isSame(date2, unit);
      }

      // ** Date Constructors **

      function newDate(point) {
        return (0, _moment2.default)(point);
      }

      function newDateWithOffset(utcOffset) {
        return (0, _moment2.default)()
          .utc()
          .utcOffset(utcOffset);
      }

      function now(maybeFixedUtcOffset) {
        if (maybeFixedUtcOffset == null) {
          return newDate();
        }
        return newDateWithOffset(maybeFixedUtcOffset);
      }

      function cloneDate(date) {
        return date.clone();
      }

      function parseDate(value, _ref) {
        var dateFormat = _ref.dateFormat,
          locale = _ref.locale;

        var m = (0, _moment2.default)(
          value,
          dateFormat,
          locale || _moment2.default.locale(),
          true
        );
        return m.isValid() ? m : null;
      }

      // ** Date "Reflection" **

      function isMoment(date) {
        return _moment2.default.isMoment(date);
      }

      function isDate(date) {
        return _moment2.default.isDate(date);
      }

      // ** Date Formatting **

      function formatDate(date, format) {
        return date.format(format);
      }

      function safeDateFormat(date, _ref2) {
        var dateFormat = _ref2.dateFormat,
          locale = _ref2.locale;

        return (
          (date &&
            date
              .clone()
              .locale(locale || _moment2.default.locale())
              .format(
                Array.isArray(dateFormat) ? dateFormat[0] : dateFormat
              )) ||
          ""
        );
      }

      // ** Date Setters **

      function setTime(date, _ref3) {
        var hour = _ref3.hour,
          minute = _ref3.minute,
          second = _ref3.second;

        date.set({ hour: hour, minute: minute, second: second });
        return date;
      }

      function setMonth(date, month) {
        return set(date, "month", month);
      }

      function setYear(date, year) {
        return set(date, "year", year);
      }

      function setUTCOffset(date, offset) {
        return date.utcOffset(offset);
      }

      // ** Date Getters **

      function getSecond(date) {
        return get(date, "second");
      }

      function getMinute(date) {
        return get(date, "minute");
      }

      function getHour(date) {
        return get(date, "hour");
      }

      // Returns day of week
      function getDay(date) {
        return get(date, "day");
      }

      function getWeek(date) {
        return get(date, "week");
      }

      function getMonth(date) {
        return get(date, "month");
      }

      function getYear(date) {
        return get(date, "year");
      }

      // Returns day of month
      function getDate(date) {
        return get(date, "date");
      }

      function getUTCOffset() {
        return (0, _moment2.default)().utcOffset();
      }

      function getDayOfWeekCode(day) {
        return dayOfWeekCodes[day.isoWeekday()];
      }

      // *** Start of ***

      function getStartOfDay(date) {
        return getStartOf(date, "day");
      }

      function getStartOfWeek(date) {
        return getStartOf(date, "week");
      }
      function getStartOfMonth(date) {
        return getStartOf(date, "month");
      }

      function getStartOfDate(date) {
        return getStartOf(date, "date");
      }

      // *** End of ***

      function getEndOfWeek(date) {
        return getEndOf(date, "week");
      }

      function getEndOfMonth(date) {
        return getEndOf(date, "month");
      }

      // ** Date Math **

      // *** Addition ***

      function addMinutes(date, amount) {
        return add(date, amount, "minutes");
      }

      function addDays(date, amount) {
        return add(date, amount, "days");
      }

      function addWeeks(date, amount) {
        return add(date, amount, "weeks");
      }

      function addMonths(date, amount) {
        return add(date, amount, "months");
      }

      function addYears(date, amount) {
        return add(date, amount, "years");
      }

      // *** Subtraction ***
      function subtractDays(date, amount) {
        return subtract(date, amount, "days");
      }

      function subtractWeeks(date, amount) {
        return subtract(date, amount, "weeks");
      }

      function subtractMonths(date, amount) {
        return subtract(date, amount, "months");
      }

      function subtractYears(date, amount) {
        return subtract(date, amount, "years");
      }

      // ** Date Comparison **

      function isBefore(date1, date2) {
        return date1.isBefore(date2);
      }

      function isAfter(date1, date2) {
        return date1.isAfter(date2);
      }

      function equals(date1, date2) {
        return date1.isSame(date2);
      }

      function isSameYear(date1, date2) {
        if (date1 && date2) {
          return date1.isSame(date2, "year");
        } else {
          return !date1 && !date2;
        }
      }

      function isSameMonth(date1, date2) {
        if (date1 && date2) {
          return date1.isSame(date2, "month");
        } else {
          return !date1 && !date2;
        }
      }

      function isSameDay(moment1, moment2) {
        if (moment1 && moment2) {
          return moment1.isSame(moment2, "day");
        } else {
          return !moment1 && !moment2;
        }
      }

      function isSameUtcOffset(moment1, moment2) {
        if (moment1 && moment2) {
          return moment1.utcOffset() === moment2.utcOffset();
        } else {
          return !moment1 && !moment2;
        }
      }

      function isDayInRange(day, startDate, endDate) {
        var before = startDate
          .clone()
          .startOf("day")
          .subtract(1, "seconds");
        var after = endDate
          .clone()
          .startOf("day")
          .add(1, "seconds");
        return day
          .clone()
          .startOf("day")
          .isBetween(before, after);
      }

      // *** Diffing ***

      function getDaysDiff(date1, date2) {
        return getDiff(date1, date2, "days");
      }

      // ** Date Localization **

      function localizeDate(date, locale) {
        return date.clone().locale(locale || _moment2.default.locale());
      }

      function getDefaultLocale() {
        return _moment2.default.locale();
      }

      function getDefaultLocaleData() {
        return _moment2.default.localeData();
      }

      function registerLocale(localeName, localeData) {
        _moment2.default.defineLocale(localeName, localeData);
      }

      function getLocaleData(date) {
        return date.localeData();
      }

      function getLocaleDataForLocale(locale) {
        return _moment2.default.localeData(locale);
      }

      function getWeekdayMinInLocale(locale, date) {
        return locale.weekdaysMin(date);
      }

      function getWeekdayShortInLocale(locale, date) {
        return locale.weekdaysShort(date);
      }

      // TODO what is this format exactly?
      function getMonthInLocale(locale, date, format) {
        return locale.months(date, format);
      }

      function getMonthShortInLocale(locale, date) {
        return locale.monthsShort(date);
      }

      // ** Utils for some components **

      function isDayDisabled(day) {
        var _ref4 =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : {},
          minDate = _ref4.minDate,
          maxDate = _ref4.maxDate,
          excludeDates = _ref4.excludeDates,
          includeDates = _ref4.includeDates,
          filterDate = _ref4.filterDate;

        return (
          (minDate && day.isBefore(minDate, "day")) ||
          (maxDate && day.isAfter(maxDate, "day")) ||
          (excludeDates &&
            excludeDates.some(function(excludeDate) {
              return isSameDay(day, excludeDate);
            })) ||
          (includeDates &&
            !includeDates.some(function(includeDate) {
              return isSameDay(day, includeDate);
            })) ||
          (filterDate && !filterDate(day.clone())) ||
          false
        );
      }

      function isTimeDisabled(time, disabledTimes) {
        var l = disabledTimes.length;
        for (var i = 0; i < l; i++) {
          if (
            disabledTimes[i].get("hours") === time.get("hours") &&
            disabledTimes[i].get("minutes") === time.get("minutes")
          ) {
            return true;
          }
        }

        return false;
      }

      function isTimeInDisabledRange(time, _ref5) {
        var minTime = _ref5.minTime,
          maxTime = _ref5.maxTime;

        if (!minTime || !maxTime) {
          throw new Error("Both minTime and maxTime props required");
        }

        var base = (0, _moment2.default)()
          .hours(0)
          .minutes(0)
          .seconds(0);
        var baseTime = base
          .clone()
          .hours(time.get("hours"))
          .minutes(time.get("minutes"));
        var min = base
          .clone()
          .hours(minTime.get("hours"))
          .minutes(minTime.get("minutes"));
        var max = base
          .clone()
          .hours(maxTime.get("hours"))
          .minutes(maxTime.get("minutes"));

        return !(baseTime.isSameOrAfter(min) && baseTime.isSameOrBefore(max));
      }

      function allDaysDisabledBefore(day, unit) {
        var _ref6 =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : {},
          minDate = _ref6.minDate,
          includeDates = _ref6.includeDates;

        var dateBefore = day.clone().subtract(1, unit);
        return (
          (minDate && dateBefore.isBefore(minDate, unit)) ||
          (includeDates &&
            includeDates.every(function(includeDate) {
              return dateBefore.isBefore(includeDate, unit);
            })) ||
          false
        );
      }

      function allDaysDisabledAfter(day, unit) {
        var _ref7 =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : {},
          maxDate = _ref7.maxDate,
          includeDates = _ref7.includeDates;

        var dateAfter = day.clone().add(1, unit);
        return (
          (maxDate && dateAfter.isAfter(maxDate, unit)) ||
          (includeDates &&
            includeDates.every(function(includeDate) {
              return dateAfter.isAfter(includeDate, unit);
            })) ||
          false
        );
      }

      function getEffectiveMinDate(_ref8) {
        var minDate = _ref8.minDate,
          includeDates = _ref8.includeDates;

        if (includeDates && minDate) {
          return _moment2.default.min(
            includeDates.filter(function(includeDate) {
              return minDate.isSameOrBefore(includeDate, "day");
            })
          );
        } else if (includeDates) {
          return _moment2.default.min(includeDates);
        } else {
          return minDate;
        }
      }

      function getEffectiveMaxDate(_ref9) {
        var maxDate = _ref9.maxDate,
          includeDates = _ref9.includeDates;

        if (includeDates && maxDate) {
          return _moment2.default.max(
            includeDates.filter(function(includeDate) {
              return maxDate.isSameOrAfter(includeDate, "day");
            })
          );
        } else if (includeDates) {
          return _moment2.default.max(includeDates);
        } else {
          return maxDate;
        }
      }

      function getHightLightDaysMap() {
        var highlightDates =
          arguments.length > 0 && arguments[0] !== undefined
            ? arguments[0]
            : [];
        var defaultClassName =
          arguments.length > 1 && arguments[1] !== undefined
            ? arguments[1]
            : "react-datepicker__day--highlighted";

        var dateClasses = new Map();
        for (var i = 0, len = highlightDates.length; i < len; i++) {
          var obj = highlightDates[i];
          if (isMoment(obj)) {
            var key = obj.format("MM.DD.YYYY");
            var classNamesArr = dateClasses.get(key) || [];
            if (!classNamesArr.includes(defaultClassName)) {
              classNamesArr.push(defaultClassName);
              dateClasses.set(key, classNamesArr);
            }
          } else if (
            (typeof obj === "undefined" ? "undefined" : _typeof(obj)) ===
            "object"
          ) {
            var keys = Object.keys(obj);
            var className = keys[0];
            var arrOfMoments = obj[keys[0]];
            if (
              typeof className === "string" &&
              arrOfMoments.constructor === Array
            ) {
              for (var k = 0, _len = arrOfMoments.length; k < _len; k++) {
                var _key = arrOfMoments[k].format("MM.DD.YYYY");
                var _classNamesArr = dateClasses.get(_key) || [];
                if (!_classNamesArr.includes(className)) {
                  _classNamesArr.push(className);
                  dateClasses.set(_key, _classNamesArr);
                }
              }
            }
          }
        }

        return dateClasses;
      }

      /***/
    },
    /* 218 */
    /***/ function(module, exports, __webpack_require__) {
      var require;
      /* WEBPACK VAR INJECTION */ (function(module) {
        //! moment.js
        //! version : 2.19.4
        //! authors : Tim Wood, Iskren Chernev, Moment.js contributors
        //! license : MIT
        //! momentjs.com

        (function(global, factory) {
          true
            ? (module.exports = factory())
            : typeof define === "function" && define.amd
              ? define(factory)
              : (global.moment = factory());
        })(this, function() {
          "use strict";

          var hookCallback;

          function hooks() {
            return hookCallback.apply(null, arguments);
          }

          // This is done to register the method called with moment()
          // without creating circular dependencies.
          function setHookCallback(callback) {
            hookCallback = callback;
          }

          function isArray(input) {
            return (
              input instanceof Array ||
              Object.prototype.toString.call(input) === "[object Array]"
            );
          }

          function isObject(input) {
            // IE8 will treat undefined and null as object if it wasn't for
            // input != null
            return (
              input != null &&
              Object.prototype.toString.call(input) === "[object Object]"
            );
          }

          function isObjectEmpty(obj) {
            if (Object.getOwnPropertyNames) {
              return Object.getOwnPropertyNames(obj).length === 0;
            } else {
              var k;
              for (k in obj) {
                if (obj.hasOwnProperty(k)) {
                  return false;
                }
              }
              return true;
            }
          }

          function isUndefined(input) {
            return input === void 0;
          }

          function isNumber(input) {
            return (
              typeof input === "number" ||
              Object.prototype.toString.call(input) === "[object Number]"
            );
          }

          function isDate(input) {
            return (
              input instanceof Date ||
              Object.prototype.toString.call(input) === "[object Date]"
            );
          }

          function map(arr, fn) {
            var res = [],
              i;
            for (i = 0; i < arr.length; ++i) {
              res.push(fn(arr[i], i));
            }
            return res;
          }

          function hasOwnProp(a, b) {
            return Object.prototype.hasOwnProperty.call(a, b);
          }

          function extend(a, b) {
            for (var i in b) {
              if (hasOwnProp(b, i)) {
                a[i] = b[i];
              }
            }

            if (hasOwnProp(b, "toString")) {
              a.toString = b.toString;
            }

            if (hasOwnProp(b, "valueOf")) {
              a.valueOf = b.valueOf;
            }

            return a;
          }

          function createUTC(input, format, locale, strict) {
            return createLocalOrUTC(input, format, locale, strict, true).utc();
          }

          function defaultParsingFlags() {
            // We need to deep clone this object.
            return {
              empty: false,
              unusedTokens: [],
              unusedInput: [],
              overflow: -2,
              charsLeftOver: 0,
              nullInput: false,
              invalidMonth: null,
              invalidFormat: false,
              userInvalidated: false,
              iso: false,
              parsedDateParts: [],
              meridiem: null,
              rfc2822: false,
              weekdayMismatch: false
            };
          }

          function getParsingFlags(m) {
            if (m._pf == null) {
              m._pf = defaultParsingFlags();
            }
            return m._pf;
          }

          var some;
          if (Array.prototype.some) {
            some = Array.prototype.some;
          } else {
            some = function(fun) {
              var t = Object(this);
              var len = t.length >>> 0;

              for (var i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                  return true;
                }
              }

              return false;
            };
          }

          function isValid(m) {
            if (m._isValid == null) {
              var flags = getParsingFlags(m);
              var parsedParts = some.call(flags.parsedDateParts, function(i) {
                return i != null;
              });
              var isNowValid =
                !isNaN(m._d.getTime()) &&
                flags.overflow < 0 &&
                !flags.empty &&
                !flags.invalidMonth &&
                !flags.invalidWeekday &&
                !flags.weekdayMismatch &&
                !flags.nullInput &&
                !flags.invalidFormat &&
                !flags.userInvalidated &&
                (!flags.meridiem || (flags.meridiem && parsedParts));

              if (m._strict) {
                isNowValid =
                  isNowValid &&
                  flags.charsLeftOver === 0 &&
                  flags.unusedTokens.length === 0 &&
                  flags.bigHour === undefined;
              }

              if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
              } else {
                return isNowValid;
              }
            }
            return m._isValid;
          }

          function createInvalid(flags) {
            var m = createUTC(NaN);
            if (flags != null) {
              extend(getParsingFlags(m), flags);
            } else {
              getParsingFlags(m).userInvalidated = true;
            }

            return m;
          }

          // Plugins that add properties should also add the key here (null value),
          // so we can properly clone ourselves.
          var momentProperties = (hooks.momentProperties = []);

          function copyConfig(to, from) {
            var i, prop, val;

            if (!isUndefined(from._isAMomentObject)) {
              to._isAMomentObject = from._isAMomentObject;
            }
            if (!isUndefined(from._i)) {
              to._i = from._i;
            }
            if (!isUndefined(from._f)) {
              to._f = from._f;
            }
            if (!isUndefined(from._l)) {
              to._l = from._l;
            }
            if (!isUndefined(from._strict)) {
              to._strict = from._strict;
            }
            if (!isUndefined(from._tzm)) {
              to._tzm = from._tzm;
            }
            if (!isUndefined(from._isUTC)) {
              to._isUTC = from._isUTC;
            }
            if (!isUndefined(from._offset)) {
              to._offset = from._offset;
            }
            if (!isUndefined(from._pf)) {
              to._pf = getParsingFlags(from);
            }
            if (!isUndefined(from._locale)) {
              to._locale = from._locale;
            }

            if (momentProperties.length > 0) {
              for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                  to[prop] = val;
                }
              }
            }

            return to;
          }

          var updateInProgress = false;

          // Moment prototype object
          function Moment(config) {
            copyConfig(this, config);
            this._d = new Date(config._d != null ? config._d.getTime() : NaN);
            if (!this.isValid()) {
              this._d = new Date(NaN);
            }
            // Prevent infinite loop in case updateOffset creates new moment
            // objects.
            if (updateInProgress === false) {
              updateInProgress = true;
              hooks.updateOffset(this);
              updateInProgress = false;
            }
          }

          function isMoment(obj) {
            return (
              obj instanceof Moment ||
              (obj != null && obj._isAMomentObject != null)
            );
          }

          function absFloor(number) {
            if (number < 0) {
              // -0 -> 0
              return Math.ceil(number) || 0;
            } else {
              return Math.floor(number);
            }
          }

          function toInt(argumentForCoercion) {
            var coercedNumber = +argumentForCoercion,
              value = 0;

            if (coercedNumber !== 0 && isFinite(coercedNumber)) {
              value = absFloor(coercedNumber);
            }

            return value;
          }

          // compare two arrays, return the number of differences
          function compareArrays(array1, array2, dontConvert) {
            var len = Math.min(array1.length, array2.length),
              lengthDiff = Math.abs(array1.length - array2.length),
              diffs = 0,
              i;
            for (i = 0; i < len; i++) {
              if (
                (dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
              ) {
                diffs++;
              }
            }
            return diffs + lengthDiff;
          }

          function warn(msg) {
            if (
              hooks.suppressDeprecationWarnings === false &&
              typeof console !== "undefined" &&
              console.warn
            ) {
              console.warn("Deprecation warning: " + msg);
            }
          }

          function deprecate(msg, fn) {
            var firstTime = true;

            return extend(function() {
              if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
              }
              if (firstTime) {
                var args = [];
                var arg;
                for (var i = 0; i < arguments.length; i++) {
                  arg = "";
                  if (typeof arguments[i] === "object") {
                    arg += "\n[" + i + "] ";
                    for (var key in arguments[0]) {
                      arg += key + ": " + arguments[0][key] + ", ";
                    }
                    arg = arg.slice(0, -2); // Remove trailing comma and space
                  } else {
                    arg = arguments[i];
                  }
                  args.push(arg);
                }
                warn(
                  msg +
                    "\nArguments: " +
                    Array.prototype.slice.call(args).join("") +
                    "\n" +
                    new Error().stack
                );
                firstTime = false;
              }
              return fn.apply(this, arguments);
            }, fn);
          }

          var deprecations = {};

          function deprecateSimple(name, msg) {
            if (hooks.deprecationHandler != null) {
              hooks.deprecationHandler(name, msg);
            }
            if (!deprecations[name]) {
              warn(msg);
              deprecations[name] = true;
            }
          }

          hooks.suppressDeprecationWarnings = false;
          hooks.deprecationHandler = null;

          function isFunction(input) {
            return (
              input instanceof Function ||
              Object.prototype.toString.call(input) === "[object Function]"
            );
          }

          function set(config) {
            var prop, i;
            for (i in config) {
              prop = config[i];
              if (isFunction(prop)) {
                this[i] = prop;
              } else {
                this["_" + i] = prop;
              }
            }
            this._config = config;
            // Lenient ordinal parsing accepts just a number in addition to
            // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
            // TODO: Remove "ordinalParse" fallback in next major release.
            this._dayOfMonthOrdinalParseLenient = new RegExp(
              (this._dayOfMonthOrdinalParse.source ||
                this._ordinalParse.source) +
                "|" +
                /\d{1,2}/.source
            );
          }

          function mergeConfigs(parentConfig, childConfig) {
            var res = extend({}, parentConfig),
              prop;
            for (prop in childConfig) {
              if (hasOwnProp(childConfig, prop)) {
                if (
                  isObject(parentConfig[prop]) &&
                  isObject(childConfig[prop])
                ) {
                  res[prop] = {};
                  extend(res[prop], parentConfig[prop]);
                  extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                  res[prop] = childConfig[prop];
                } else {
                  delete res[prop];
                }
              }
            }
            for (prop in parentConfig) {
              if (
                hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])
              ) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
              }
            }
            return res;
          }

          function Locale(config) {
            if (config != null) {
              this.set(config);
            }
          }

          var keys;

          if (Object.keys) {
            keys = Object.keys;
          } else {
            keys = function(obj) {
              var i,
                res = [];
              for (i in obj) {
                if (hasOwnProp(obj, i)) {
                  res.push(i);
                }
              }
              return res;
            };
          }

          var defaultCalendar = {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
          };

          function calendar(key, mom, now) {
            var output = this._calendar[key] || this._calendar["sameElse"];
            return isFunction(output) ? output.call(mom, now) : output;
          }

          var defaultLongDateFormat = {
            LTS: "h:mm:ss A",
            LT: "h:mm A",
            L: "MM/DD/YYYY",
            LL: "MMMM D, YYYY",
            LLL: "MMMM D, YYYY h:mm A",
            LLLL: "dddd, MMMM D, YYYY h:mm A"
          };

          function longDateFormat(key) {
            var format = this._longDateFormat[key],
              formatUpper = this._longDateFormat[key.toUpperCase()];

            if (format || !formatUpper) {
              return format;
            }

            this._longDateFormat[key] = formatUpper.replace(
              /MMMM|MM|DD|dddd/g,
              function(val) {
                return val.slice(1);
              }
            );

            return this._longDateFormat[key];
          }

          var defaultInvalidDate = "Invalid date";

          function invalidDate() {
            return this._invalidDate;
          }

          var defaultOrdinal = "%d";
          var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

          function ordinal(number) {
            return this._ordinal.replace("%d", number);
          }

          var defaultRelativeTime = {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            ss: "%d seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
          };

          function relativeTime(number, withoutSuffix, string, isFuture) {
            var output = this._relativeTime[string];
            return isFunction(output)
              ? output(number, withoutSuffix, string, isFuture)
              : output.replace(/%d/i, number);
          }

          function pastFuture(diff, output) {
            var format = this._relativeTime[diff > 0 ? "future" : "past"];
            return isFunction(format)
              ? format(output)
              : format.replace(/%s/i, output);
          }

          var aliases = {};

          function addUnitAlias(unit, shorthand) {
            var lowerCase = unit.toLowerCase();
            aliases[lowerCase] = aliases[lowerCase + "s"] = aliases[
              shorthand
            ] = unit;
          }

          function normalizeUnits(units) {
            return typeof units === "string"
              ? aliases[units] || aliases[units.toLowerCase()]
              : undefined;
          }

          function normalizeObjectUnits(inputObject) {
            var normalizedInput = {},
              normalizedProp,
              prop;

            for (prop in inputObject) {
              if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                  normalizedInput[normalizedProp] = inputObject[prop];
                }
              }
            }

            return normalizedInput;
          }

          var priorities = {};

          function addUnitPriority(unit, priority) {
            priorities[unit] = priority;
          }

          function getPrioritizedUnits(unitsObj) {
            var units = [];
            for (var u in unitsObj) {
              units.push({ unit: u, priority: priorities[u] });
            }
            units.sort(function(a, b) {
              return a.priority - b.priority;
            });
            return units;
          }

          function zeroFill(number, targetLength, forceSign) {
            var absNumber = "" + Math.abs(number),
              zerosToFill = targetLength - absNumber.length,
              sign = number >= 0;
            return (
              (sign ? (forceSign ? "+" : "") : "-") +
              Math.pow(10, Math.max(0, zerosToFill))
                .toString()
                .substr(1) +
              absNumber
            );
          }

          var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

          var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

          var formatFunctions = {};

          var formatTokenFunctions = {};

          // token:    'M'
          // padded:   ['MM', 2]
          // ordinal:  'Mo'
          // callback: function () { this.month() + 1 }
          function addFormatToken(token, padded, ordinal, callback) {
            var func = callback;
            if (typeof callback === "string") {
              func = function() {
                return this[callback]();
              };
            }
            if (token) {
              formatTokenFunctions[token] = func;
            }
            if (padded) {
              formatTokenFunctions[padded[0]] = function() {
                return zeroFill(
                  func.apply(this, arguments),
                  padded[1],
                  padded[2]
                );
              };
            }
            if (ordinal) {
              formatTokenFunctions[ordinal] = function() {
                return this.localeData().ordinal(
                  func.apply(this, arguments),
                  token
                );
              };
            }
          }

          function removeFormattingTokens(input) {
            if (input.match(/\[[\s\S]/)) {
              return input.replace(/^\[|\]$/g, "");
            }
            return input.replace(/\\/g, "");
          }

          function makeFormatFunction(format) {
            var array = format.match(formattingTokens),
              i,
              length;

            for (i = 0, length = array.length; i < length; i++) {
              if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
              } else {
                array[i] = removeFormattingTokens(array[i]);
              }
            }

            return function(mom) {
              var output = "",
                i;
              for (i = 0; i < length; i++) {
                output += isFunction(array[i])
                  ? array[i].call(mom, format)
                  : array[i];
              }
              return output;
            };
          }

          // format date using native date object
          function formatMoment(m, format) {
            if (!m.isValid()) {
              return m.localeData().invalidDate();
            }

            format = expandFormat(format, m.localeData());
            formatFunctions[format] =
              formatFunctions[format] || makeFormatFunction(format);

            return formatFunctions[format](m);
          }

          function expandFormat(format, locale) {
            var i = 5;

            function replaceLongDateFormatTokens(input) {
              return locale.longDateFormat(input) || input;
            }

            localFormattingTokens.lastIndex = 0;
            while (i >= 0 && localFormattingTokens.test(format)) {
              format = format.replace(
                localFormattingTokens,
                replaceLongDateFormatTokens
              );
              localFormattingTokens.lastIndex = 0;
              i -= 1;
            }

            return format;
          }

          var match1 = /\d/; //       0 - 9
          var match2 = /\d\d/; //      00 - 99
          var match3 = /\d{3}/; //     000 - 999
          var match4 = /\d{4}/; //    0000 - 9999
          var match6 = /[+-]?\d{6}/; // -999999 - 999999
          var match1to2 = /\d\d?/; //       0 - 99
          var match3to4 = /\d\d\d\d?/; //     999 - 9999
          var match5to6 = /\d\d\d\d\d\d?/; //   99999 - 999999
          var match1to3 = /\d{1,3}/; //       0 - 999
          var match1to4 = /\d{1,4}/; //       0 - 9999
          var match1to6 = /[+-]?\d{1,6}/; // -999999 - 999999

          var matchUnsigned = /\d+/; //       0 - inf
          var matchSigned = /[+-]?\d+/; //    -inf - inf

          var matchOffset = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
          var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

          var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

          // any word (or two) characters or numbers including two/three word month in arabic.
          // includes scottish gaelic two word and hyphenated months
          var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;

          var regexes = {};

          function addRegexToken(token, regex, strictRegex) {
            regexes[token] = isFunction(regex)
              ? regex
              : function(isStrict, localeData) {
                  return isStrict && strictRegex ? strictRegex : regex;
                };
          }

          function getParseRegexForToken(token, config) {
            if (!hasOwnProp(regexes, token)) {
              return new RegExp(unescapeFormat(token));
            }

            return regexes[token](config._strict, config._locale);
          }

          // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
          function unescapeFormat(s) {
            return regexEscape(
              s
                .replace("\\", "")
                .replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(
                  matched,
                  p1,
                  p2,
                  p3,
                  p4
                ) {
                  return p1 || p2 || p3 || p4;
                })
            );
          }

          function regexEscape(s) {
            return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
          }

          var tokens = {};

          function addParseToken(token, callback) {
            var i,
              func = callback;
            if (typeof token === "string") {
              token = [token];
            }
            if (isNumber(callback)) {
              func = function(input, array) {
                array[callback] = toInt(input);
              };
            }
            for (i = 0; i < token.length; i++) {
              tokens[token[i]] = func;
            }
          }

          function addWeekParseToken(token, callback) {
            addParseToken(token, function(input, array, config, token) {
              config._w = config._w || {};
              callback(input, config._w, config, token);
            });
          }

          function addTimeToArrayFromToken(token, input, config) {
            if (input != null && hasOwnProp(tokens, token)) {
              tokens[token](input, config._a, config, token);
            }
          }

          var YEAR = 0;
          var MONTH = 1;
          var DATE = 2;
          var HOUR = 3;
          var MINUTE = 4;
          var SECOND = 5;
          var MILLISECOND = 6;
          var WEEK = 7;
          var WEEKDAY = 8;

          // FORMATTING

          addFormatToken("Y", 0, 0, function() {
            var y = this.year();
            return y <= 9999 ? "" + y : "+" + y;
          });

          addFormatToken(0, ["YY", 2], 0, function() {
            return this.year() % 100;
          });

          addFormatToken(0, ["YYYY", 4], 0, "year");
          addFormatToken(0, ["YYYYY", 5], 0, "year");
          addFormatToken(0, ["YYYYYY", 6, true], 0, "year");

          // ALIASES

          addUnitAlias("year", "y");

          // PRIORITIES

          addUnitPriority("year", 1);

          // PARSING

          addRegexToken("Y", matchSigned);
          addRegexToken("YY", match1to2, match2);
          addRegexToken("YYYY", match1to4, match4);
          addRegexToken("YYYYY", match1to6, match6);
          addRegexToken("YYYYYY", match1to6, match6);

          addParseToken(["YYYYY", "YYYYYY"], YEAR);
          addParseToken("YYYY", function(input, array) {
            array[YEAR] =
              input.length === 2
                ? hooks.parseTwoDigitYear(input)
                : toInt(input);
          });
          addParseToken("YY", function(input, array) {
            array[YEAR] = hooks.parseTwoDigitYear(input);
          });
          addParseToken("Y", function(input, array) {
            array[YEAR] = parseInt(input, 10);
          });

          // HELPERS

          function daysInYear(year) {
            return isLeapYear(year) ? 366 : 365;
          }

          function isLeapYear(year) {
            return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
          }

          // HOOKS

          hooks.parseTwoDigitYear = function(input) {
            return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
          };

          // MOMENTS

          var getSetYear = makeGetSet("FullYear", true);

          function getIsLeapYear() {
            return isLeapYear(this.year());
          }

          function makeGetSet(unit, keepTime) {
            return function(value) {
              if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
              } else {
                return get(this, unit);
              }
            };
          }

          function get(mom, unit) {
            return mom.isValid()
              ? mom._d["get" + (mom._isUTC ? "UTC" : "") + unit]()
              : NaN;
          }

          function set$1(mom, unit, value) {
            if (mom.isValid() && !isNaN(value)) {
              if (
                unit === "FullYear" &&
                isLeapYear(mom.year()) &&
                mom.month() === 1 &&
                mom.date() === 29
              ) {
                mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](
                  value,
                  mom.month(),
                  daysInMonth(value, mom.month())
                );
              } else {
                mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](value);
              }
            }
          }

          // MOMENTS

          function stringGet(units) {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
              return this[units]();
            }
            return this;
          }

          function stringSet(units, value) {
            if (typeof units === "object") {
              units = normalizeObjectUnits(units);
              var prioritized = getPrioritizedUnits(units);
              for (var i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
              }
            } else {
              units = normalizeUnits(units);
              if (isFunction(this[units])) {
                return this[units](value);
              }
            }
            return this;
          }

          function mod(n, x) {
            return (n % x + x) % x;
          }

          var indexOf;

          if (Array.prototype.indexOf) {
            indexOf = Array.prototype.indexOf;
          } else {
            indexOf = function(o) {
              // I know
              var i;
              for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                  return i;
                }
              }
              return -1;
            };
          }

          function daysInMonth(year, month) {
            if (isNaN(year) || isNaN(month)) {
              return NaN;
            }
            var modMonth = mod(month, 12);
            year += (month - modMonth) / 12;
            return modMonth === 1
              ? isLeapYear(year) ? 29 : 28
              : 31 - (modMonth % 7) % 2;
          }

          // FORMATTING

          addFormatToken("M", ["MM", 2], "Mo", function() {
            return this.month() + 1;
          });

          addFormatToken("MMM", 0, 0, function(format) {
            return this.localeData().monthsShort(this, format);
          });

          addFormatToken("MMMM", 0, 0, function(format) {
            return this.localeData().months(this, format);
          });

          // ALIASES

          addUnitAlias("month", "M");

          // PRIORITY

          addUnitPriority("month", 8);

          // PARSING

          addRegexToken("M", match1to2);
          addRegexToken("MM", match1to2, match2);
          addRegexToken("MMM", function(isStrict, locale) {
            return locale.monthsShortRegex(isStrict);
          });
          addRegexToken("MMMM", function(isStrict, locale) {
            return locale.monthsRegex(isStrict);
          });

          addParseToken(["M", "MM"], function(input, array) {
            array[MONTH] = toInt(input) - 1;
          });

          addParseToken(["MMM", "MMMM"], function(input, array, config, token) {
            var month = config._locale.monthsParse(
              input,
              token,
              config._strict
            );
            // if we didn't find a month name, mark the date as invalid.
            if (month != null) {
              array[MONTH] = month;
            } else {
              getParsingFlags(config).invalidMonth = input;
            }
          });

          // LOCALES

          var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
          var defaultLocaleMonths = "January_February_March_April_May_June_July_August_September_October_November_December".split(
            "_"
          );
          function localeMonths(m, format) {
            if (!m) {
              return isArray(this._months)
                ? this._months
                : this._months["standalone"];
            }
            return isArray(this._months)
              ? this._months[m.month()]
              : this._months[
                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
                    ? "format"
                    : "standalone"
                ][m.month()];
          }

          var defaultLocaleMonthsShort = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
            "_"
          );
          function localeMonthsShort(m, format) {
            if (!m) {
              return isArray(this._monthsShort)
                ? this._monthsShort
                : this._monthsShort["standalone"];
            }
            return isArray(this._monthsShort)
              ? this._monthsShort[m.month()]
              : this._monthsShort[
                  MONTHS_IN_FORMAT.test(format) ? "format" : "standalone"
                ][m.month()];
          }

          function handleStrictParse(monthName, format, strict) {
            var i,
              ii,
              mom,
              llc = monthName.toLocaleLowerCase();
            if (!this._monthsParse) {
              // this is not used
              this._monthsParse = [];
              this._longMonthsParse = [];
              this._shortMonthsParse = [];
              for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(
                  mom,
                  ""
                ).toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(
                  mom,
                  ""
                ).toLocaleLowerCase();
              }
            }

            if (strict) {
              if (format === "MMM") {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
              } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
              }
            } else {
              if (format === "MMM") {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                  return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
              } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                  return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
              }
            }
          }

          function localeMonthsParse(monthName, format, strict) {
            var i, mom, regex;

            if (this._monthsParseExact) {
              return handleStrictParse.call(this, monthName, format, strict);
            }

            if (!this._monthsParse) {
              this._monthsParse = [];
              this._longMonthsParse = [];
              this._shortMonthsParse = [];
            }

            // TODO: add sorting
            // Sorting makes sure if one month (or abbr) is a prefix of another
            // see sorting in computeMonthsParse
            for (i = 0; i < 12; i++) {
              // make the regex if we don't have it already
              mom = createUTC([2000, i]);
              if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp(
                  "^" + this.months(mom, "").replace(".", "") + "$",
                  "i"
                );
                this._shortMonthsParse[i] = new RegExp(
                  "^" + this.monthsShort(mom, "").replace(".", "") + "$",
                  "i"
                );
              }
              if (!strict && !this._monthsParse[i]) {
                regex =
                  "^" + this.months(mom, "") + "|^" + this.monthsShort(mom, "");
                this._monthsParse[i] = new RegExp(regex.replace(".", ""), "i");
              }
              // test the regex
              if (
                strict &&
                format === "MMMM" &&
                this._longMonthsParse[i].test(monthName)
              ) {
                return i;
              } else if (
                strict &&
                format === "MMM" &&
                this._shortMonthsParse[i].test(monthName)
              ) {
                return i;
              } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
              }
            }
          }

          // MOMENTS

          function setMonth(mom, value) {
            var dayOfMonth;

            if (!mom.isValid()) {
              // No op
              return mom;
            }

            if (typeof value === "string") {
              if (/^\d+$/.test(value)) {
                value = toInt(value);
              } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                  return mom;
                }
              }
            }

            dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
            mom._d["set" + (mom._isUTC ? "UTC" : "") + "Month"](
              value,
              dayOfMonth
            );
            return mom;
          }

          function getSetMonth(value) {
            if (value != null) {
              setMonth(this, value);
              hooks.updateOffset(this, true);
              return this;
            } else {
              return get(this, "Month");
            }
          }

          function getDaysInMonth() {
            return daysInMonth(this.year(), this.month());
          }

          var defaultMonthsShortRegex = matchWord;
          function monthsShortRegex(isStrict) {
            if (this._monthsParseExact) {
              if (!hasOwnProp(this, "_monthsRegex")) {
                computeMonthsParse.call(this);
              }
              if (isStrict) {
                return this._monthsShortStrictRegex;
              } else {
                return this._monthsShortRegex;
              }
            } else {
              if (!hasOwnProp(this, "_monthsShortRegex")) {
                this._monthsShortRegex = defaultMonthsShortRegex;
              }
              return this._monthsShortStrictRegex && isStrict
                ? this._monthsShortStrictRegex
                : this._monthsShortRegex;
            }
          }

          var defaultMonthsRegex = matchWord;
          function monthsRegex(isStrict) {
            if (this._monthsParseExact) {
              if (!hasOwnProp(this, "_monthsRegex")) {
                computeMonthsParse.call(this);
              }
              if (isStrict) {
                return this._monthsStrictRegex;
              } else {
                return this._monthsRegex;
              }
            } else {
              if (!hasOwnProp(this, "_monthsRegex")) {
                this._monthsRegex = defaultMonthsRegex;
              }
              return this._monthsStrictRegex && isStrict
                ? this._monthsStrictRegex
                : this._monthsRegex;
            }
          }

          function computeMonthsParse() {
            function cmpLenRev(a, b) {
              return b.length - a.length;
            }

            var shortPieces = [],
              longPieces = [],
              mixedPieces = [],
              i,
              mom;
            for (i = 0; i < 12; i++) {
              // make the regex if we don't have it already
              mom = createUTC([2000, i]);
              shortPieces.push(this.monthsShort(mom, ""));
              longPieces.push(this.months(mom, ""));
              mixedPieces.push(this.months(mom, ""));
              mixedPieces.push(this.monthsShort(mom, ""));
            }
            // Sorting makes sure if one month (or abbr) is a prefix of another it
            // will match the longer piece.
            shortPieces.sort(cmpLenRev);
            longPieces.sort(cmpLenRev);
            mixedPieces.sort(cmpLenRev);
            for (i = 0; i < 12; i++) {
              shortPieces[i] = regexEscape(shortPieces[i]);
              longPieces[i] = regexEscape(longPieces[i]);
            }
            for (i = 0; i < 24; i++) {
              mixedPieces[i] = regexEscape(mixedPieces[i]);
            }

            this._monthsRegex = new RegExp(
              "^(" + mixedPieces.join("|") + ")",
              "i"
            );
            this._monthsShortRegex = this._monthsRegex;
            this._monthsStrictRegex = new RegExp(
              "^(" + longPieces.join("|") + ")",
              "i"
            );
            this._monthsShortStrictRegex = new RegExp(
              "^(" + shortPieces.join("|") + ")",
              "i"
            );
          }

          function createDate(y, m, d, h, M, s, ms) {
            // can't just apply() to create a date:
            // https://stackoverflow.com/q/181348
            var date = new Date(y, m, d, h, M, s, ms);

            // the date constructor remaps years 0-99 to 1900-1999
            if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
              date.setFullYear(y);
            }
            return date;
          }

          function createUTCDate(y) {
            var date = new Date(Date.UTC.apply(null, arguments));

            // the Date.UTC function remaps years 0-99 to 1900-1999
            if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
              date.setUTCFullYear(y);
            }
            return date;
          }

          // start-of-first-week - start-of-year
          function firstWeekOffset(year, dow, doy) {
            var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
              fwd = 7 + dow - doy,
              // first-week day local weekday -- which local weekday is fwd
              fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

            return -fwdlw + fwd - 1;
          }

          // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
          function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
            var localWeekday = (7 + weekday - dow) % 7,
              weekOffset = firstWeekOffset(year, dow, doy),
              dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
              resYear,
              resDayOfYear;

            if (dayOfYear <= 0) {
              resYear = year - 1;
              resDayOfYear = daysInYear(resYear) + dayOfYear;
            } else if (dayOfYear > daysInYear(year)) {
              resYear = year + 1;
              resDayOfYear = dayOfYear - daysInYear(year);
            } else {
              resYear = year;
              resDayOfYear = dayOfYear;
            }

            return {
              year: resYear,
              dayOfYear: resDayOfYear
            };
          }

          function weekOfYear(mom, dow, doy) {
            var weekOffset = firstWeekOffset(mom.year(), dow, doy),
              week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
              resWeek,
              resYear;

            if (week < 1) {
              resYear = mom.year() - 1;
              resWeek = week + weeksInYear(resYear, dow, doy);
            } else if (week > weeksInYear(mom.year(), dow, doy)) {
              resWeek = week - weeksInYear(mom.year(), dow, doy);
              resYear = mom.year() + 1;
            } else {
              resYear = mom.year();
              resWeek = week;
            }

            return {
              week: resWeek,
              year: resYear
            };
          }

          function weeksInYear(year, dow, doy) {
            var weekOffset = firstWeekOffset(year, dow, doy),
              weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
            return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
          }

          // FORMATTING

          addFormatToken("w", ["ww", 2], "wo", "week");
          addFormatToken("W", ["WW", 2], "Wo", "isoWeek");

          // ALIASES

          addUnitAlias("week", "w");
          addUnitAlias("isoWeek", "W");

          // PRIORITIES

          addUnitPriority("week", 5);
          addUnitPriority("isoWeek", 5);

          // PARSING

          addRegexToken("w", match1to2);
          addRegexToken("ww", match1to2, match2);
          addRegexToken("W", match1to2);
          addRegexToken("WW", match1to2, match2);

          addWeekParseToken(["w", "ww", "W", "WW"], function(
            input,
            week,
            config,
            token
          ) {
            week[token.substr(0, 1)] = toInt(input);
          });

          // HELPERS

          // LOCALES

          function localeWeek(mom) {
            return weekOfYear(mom, this._week.dow, this._week.doy).week;
          }

          var defaultLocaleWeek = {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 1st is the first week of the year.
          };

          function localeFirstDayOfWeek() {
            return this._week.dow;
          }

          function localeFirstDayOfYear() {
            return this._week.doy;
          }

          // MOMENTS

          function getSetWeek(input) {
            var week = this.localeData().week(this);
            return input == null ? week : this.add((input - week) * 7, "d");
          }

          function getSetISOWeek(input) {
            var week = weekOfYear(this, 1, 4).week;
            return input == null ? week : this.add((input - week) * 7, "d");
          }

          // FORMATTING

          addFormatToken("d", 0, "do", "day");

          addFormatToken("dd", 0, 0, function(format) {
            return this.localeData().weekdaysMin(this, format);
          });

          addFormatToken("ddd", 0, 0, function(format) {
            return this.localeData().weekdaysShort(this, format);
          });

          addFormatToken("dddd", 0, 0, function(format) {
            return this.localeData().weekdays(this, format);
          });

          addFormatToken("e", 0, 0, "weekday");
          addFormatToken("E", 0, 0, "isoWeekday");

          // ALIASES

          addUnitAlias("day", "d");
          addUnitAlias("weekday", "e");
          addUnitAlias("isoWeekday", "E");

          // PRIORITY
          addUnitPriority("day", 11);
          addUnitPriority("weekday", 11);
          addUnitPriority("isoWeekday", 11);

          // PARSING

          addRegexToken("d", match1to2);
          addRegexToken("e", match1to2);
          addRegexToken("E", match1to2);
          addRegexToken("dd", function(isStrict, locale) {
            return locale.weekdaysMinRegex(isStrict);
          });
          addRegexToken("ddd", function(isStrict, locale) {
            return locale.weekdaysShortRegex(isStrict);
          });
          addRegexToken("dddd", function(isStrict, locale) {
            return locale.weekdaysRegex(isStrict);
          });

          addWeekParseToken(["dd", "ddd", "dddd"], function(
            input,
            week,
            config,
            token
          ) {
            var weekday = config._locale.weekdaysParse(
              input,
              token,
              config._strict
            );
            // if we didn't get a weekday name, mark the date as invalid
            if (weekday != null) {
              week.d = weekday;
            } else {
              getParsingFlags(config).invalidWeekday = input;
            }
          });

          addWeekParseToken(["d", "e", "E"], function(
            input,
            week,
            config,
            token
          ) {
            week[token] = toInt(input);
          });

          // HELPERS

          function parseWeekday(input, locale) {
            if (typeof input !== "string") {
              return input;
            }

            if (!isNaN(input)) {
              return parseInt(input, 10);
            }

            input = locale.weekdaysParse(input);
            if (typeof input === "number") {
              return input;
            }

            return null;
          }

          function parseIsoWeekday(input, locale) {
            if (typeof input === "string") {
              return locale.weekdaysParse(input) % 7 || 7;
            }
            return isNaN(input) ? null : input;
          }

          // LOCALES

          var defaultLocaleWeekdays = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
            "_"
          );
          function localeWeekdays(m, format) {
            if (!m) {
              return isArray(this._weekdays)
                ? this._weekdays
                : this._weekdays["standalone"];
            }
            return isArray(this._weekdays)
              ? this._weekdays[m.day()]
              : this._weekdays[
                  this._weekdays.isFormat.test(format) ? "format" : "standalone"
                ][m.day()];
          }

          var defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split(
            "_"
          );
          function localeWeekdaysShort(m) {
            return m ? this._weekdaysShort[m.day()] : this._weekdaysShort;
          }

          var defaultLocaleWeekdaysMin = "Su_Mo_Tu_We_Th_Fr_Sa".split("_");
          function localeWeekdaysMin(m) {
            return m ? this._weekdaysMin[m.day()] : this._weekdaysMin;
          }

          function handleStrictParse$1(weekdayName, format, strict) {
            var i,
              ii,
              mom,
              llc = weekdayName.toLocaleLowerCase();
            if (!this._weekdaysParse) {
              this._weekdaysParse = [];
              this._shortWeekdaysParse = [];
              this._minWeekdaysParse = [];

              for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(
                  mom,
                  ""
                ).toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(
                  mom,
                  ""
                ).toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(
                  mom,
                  ""
                ).toLocaleLowerCase();
              }
            }

            if (strict) {
              if (format === "dddd") {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
              } else if (format === "ddd") {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
              } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
              }
            } else {
              if (format === "dddd") {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                  return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                  return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
              } else if (format === "ddd") {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                  return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                  return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
              } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                  return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                  return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
              }
            }
          }

          function localeWeekdaysParse(weekdayName, format, strict) {
            var i, mom, regex;

            if (this._weekdaysParseExact) {
              return handleStrictParse$1.call(
                this,
                weekdayName,
                format,
                strict
              );
            }

            if (!this._weekdaysParse) {
              this._weekdaysParse = [];
              this._minWeekdaysParse = [];
              this._shortWeekdaysParse = [];
              this._fullWeekdaysParse = [];
            }

            for (i = 0; i < 7; i++) {
              // make the regex if we don't have it already

              mom = createUTC([2000, 1]).day(i);
              if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp(
                  "^" + this.weekdays(mom, "").replace(".", ".?") + "$",
                  "i"
                );
                this._shortWeekdaysParse[i] = new RegExp(
                  "^" + this.weekdaysShort(mom, "").replace(".", ".?") + "$",
                  "i"
                );
                this._minWeekdaysParse[i] = new RegExp(
                  "^" + this.weekdaysMin(mom, "").replace(".", ".?") + "$",
                  "i"
                );
              }
              if (!this._weekdaysParse[i]) {
                regex =
                  "^" +
                  this.weekdays(mom, "") +
                  "|^" +
                  this.weekdaysShort(mom, "") +
                  "|^" +
                  this.weekdaysMin(mom, "");
                this._weekdaysParse[i] = new RegExp(
                  regex.replace(".", ""),
                  "i"
                );
              }
              // test the regex
              if (
                strict &&
                format === "dddd" &&
                this._fullWeekdaysParse[i].test(weekdayName)
              ) {
                return i;
              } else if (
                strict &&
                format === "ddd" &&
                this._shortWeekdaysParse[i].test(weekdayName)
              ) {
                return i;
              } else if (
                strict &&
                format === "dd" &&
                this._minWeekdaysParse[i].test(weekdayName)
              ) {
                return i;
              } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
              }
            }
          }

          // MOMENTS

          function getSetDayOfWeek(input) {
            if (!this.isValid()) {
              return input != null ? this : NaN;
            }
            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
            if (input != null) {
              input = parseWeekday(input, this.localeData());
              return this.add(input - day, "d");
            } else {
              return day;
            }
          }

          function getSetLocaleDayOfWeek(input) {
            if (!this.isValid()) {
              return input != null ? this : NaN;
            }
            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
            return input == null ? weekday : this.add(input - weekday, "d");
          }

          function getSetISODayOfWeek(input) {
            if (!this.isValid()) {
              return input != null ? this : NaN;
            }

            // behaves the same as moment#day except
            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
            // as a setter, sunday should belong to the previous week.

            if (input != null) {
              var weekday = parseIsoWeekday(input, this.localeData());
              return this.day(this.day() % 7 ? weekday : weekday - 7);
            } else {
              return this.day() || 7;
            }
          }

          var defaultWeekdaysRegex = matchWord;
          function weekdaysRegex(isStrict) {
            if (this._weekdaysParseExact) {
              if (!hasOwnProp(this, "_weekdaysRegex")) {
                computeWeekdaysParse.call(this);
              }
              if (isStrict) {
                return this._weekdaysStrictRegex;
              } else {
                return this._weekdaysRegex;
              }
            } else {
              if (!hasOwnProp(this, "_weekdaysRegex")) {
                this._weekdaysRegex = defaultWeekdaysRegex;
              }
              return this._weekdaysStrictRegex && isStrict
                ? this._weekdaysStrictRegex
                : this._weekdaysRegex;
            }
          }

          var defaultWeekdaysShortRegex = matchWord;
          function weekdaysShortRegex(isStrict) {
            if (this._weekdaysParseExact) {
              if (!hasOwnProp(this, "_weekdaysRegex")) {
                computeWeekdaysParse.call(this);
              }
              if (isStrict) {
                return this._weekdaysShortStrictRegex;
              } else {
                return this._weekdaysShortRegex;
              }
            } else {
              if (!hasOwnProp(this, "_weekdaysShortRegex")) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
              }
              return this._weekdaysShortStrictRegex && isStrict
                ? this._weekdaysShortStrictRegex
                : this._weekdaysShortRegex;
            }
          }

          var defaultWeekdaysMinRegex = matchWord;
          function weekdaysMinRegex(isStrict) {
            if (this._weekdaysParseExact) {
              if (!hasOwnProp(this, "_weekdaysRegex")) {
                computeWeekdaysParse.call(this);
              }
              if (isStrict) {
                return this._weekdaysMinStrictRegex;
              } else {
                return this._weekdaysMinRegex;
              }
            } else {
              if (!hasOwnProp(this, "_weekdaysMinRegex")) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
              }
              return this._weekdaysMinStrictRegex && isStrict
                ? this._weekdaysMinStrictRegex
                : this._weekdaysMinRegex;
            }
          }

          function computeWeekdaysParse() {
            function cmpLenRev(a, b) {
              return b.length - a.length;
            }

            var minPieces = [],
              shortPieces = [],
              longPieces = [],
              mixedPieces = [],
              i,
              mom,
              minp,
              shortp,
              longp;
            for (i = 0; i < 7; i++) {
              // make the regex if we don't have it already
              mom = createUTC([2000, 1]).day(i);
              minp = this.weekdaysMin(mom, "");
              shortp = this.weekdaysShort(mom, "");
              longp = this.weekdays(mom, "");
              minPieces.push(minp);
              shortPieces.push(shortp);
              longPieces.push(longp);
              mixedPieces.push(minp);
              mixedPieces.push(shortp);
              mixedPieces.push(longp);
            }
            // Sorting makes sure if one weekday (or abbr) is a prefix of another it
            // will match the longer piece.
            minPieces.sort(cmpLenRev);
            shortPieces.sort(cmpLenRev);
            longPieces.sort(cmpLenRev);
            mixedPieces.sort(cmpLenRev);
            for (i = 0; i < 7; i++) {
              shortPieces[i] = regexEscape(shortPieces[i]);
              longPieces[i] = regexEscape(longPieces[i]);
              mixedPieces[i] = regexEscape(mixedPieces[i]);
            }

            this._weekdaysRegex = new RegExp(
              "^(" + mixedPieces.join("|") + ")",
              "i"
            );
            this._weekdaysShortRegex = this._weekdaysRegex;
            this._weekdaysMinRegex = this._weekdaysRegex;

            this._weekdaysStrictRegex = new RegExp(
              "^(" + longPieces.join("|") + ")",
              "i"
            );
            this._weekdaysShortStrictRegex = new RegExp(
              "^(" + shortPieces.join("|") + ")",
              "i"
            );
            this._weekdaysMinStrictRegex = new RegExp(
              "^(" + minPieces.join("|") + ")",
              "i"
            );
          }

          // FORMATTING

          function hFormat() {
            return this.hours() % 12 || 12;
          }

          function kFormat() {
            return this.hours() || 24;
          }

          addFormatToken("H", ["HH", 2], 0, "hour");
          addFormatToken("h", ["hh", 2], 0, hFormat);
          addFormatToken("k", ["kk", 2], 0, kFormat);

          addFormatToken("hmm", 0, 0, function() {
            return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2);
          });

          addFormatToken("hmmss", 0, 0, function() {
            return (
              "" +
              hFormat.apply(this) +
              zeroFill(this.minutes(), 2) +
              zeroFill(this.seconds(), 2)
            );
          });

          addFormatToken("Hmm", 0, 0, function() {
            return "" + this.hours() + zeroFill(this.minutes(), 2);
          });

          addFormatToken("Hmmss", 0, 0, function() {
            return (
              "" +
              this.hours() +
              zeroFill(this.minutes(), 2) +
              zeroFill(this.seconds(), 2)
            );
          });

          function meridiem(token, lowercase) {
            addFormatToken(token, 0, 0, function() {
              return this.localeData().meridiem(
                this.hours(),
                this.minutes(),
                lowercase
              );
            });
          }

          meridiem("a", true);
          meridiem("A", false);

          // ALIASES

          addUnitAlias("hour", "h");

          // PRIORITY
          addUnitPriority("hour", 13);

          // PARSING

          function matchMeridiem(isStrict, locale) {
            return locale._meridiemParse;
          }

          addRegexToken("a", matchMeridiem);
          addRegexToken("A", matchMeridiem);
          addRegexToken("H", match1to2);
          addRegexToken("h", match1to2);
          addRegexToken("k", match1to2);
          addRegexToken("HH", match1to2, match2);
          addRegexToken("hh", match1to2, match2);
          addRegexToken("kk", match1to2, match2);

          addRegexToken("hmm", match3to4);
          addRegexToken("hmmss", match5to6);
          addRegexToken("Hmm", match3to4);
          addRegexToken("Hmmss", match5to6);

          addParseToken(["H", "HH"], HOUR);
          addParseToken(["k", "kk"], function(input, array, config) {
            var kInput = toInt(input);
            array[HOUR] = kInput === 24 ? 0 : kInput;
          });
          addParseToken(["a", "A"], function(input, array, config) {
            config._isPm = config._locale.isPM(input);
            config._meridiem = input;
          });
          addParseToken(["h", "hh"], function(input, array, config) {
            array[HOUR] = toInt(input);
            getParsingFlags(config).bigHour = true;
          });
          addParseToken("hmm", function(input, array, config) {
            var pos = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos));
            array[MINUTE] = toInt(input.substr(pos));
            getParsingFlags(config).bigHour = true;
          });
          addParseToken("hmmss", function(input, array, config) {
            var pos1 = input.length - 4;
            var pos2 = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos1));
            array[MINUTE] = toInt(input.substr(pos1, 2));
            array[SECOND] = toInt(input.substr(pos2));
            getParsingFlags(config).bigHour = true;
          });
          addParseToken("Hmm", function(input, array, config) {
            var pos = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos));
            array[MINUTE] = toInt(input.substr(pos));
          });
          addParseToken("Hmmss", function(input, array, config) {
            var pos1 = input.length - 4;
            var pos2 = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos1));
            array[MINUTE] = toInt(input.substr(pos1, 2));
            array[SECOND] = toInt(input.substr(pos2));
          });

          // LOCALES

          function localeIsPM(input) {
            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
            // Using charAt should be more compatible.
            return (input + "").toLowerCase().charAt(0) === "p";
          }

          var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
          function localeMeridiem(hours, minutes, isLower) {
            if (hours > 11) {
              return isLower ? "pm" : "PM";
            } else {
              return isLower ? "am" : "AM";
            }
          }

          // MOMENTS

          // Setting the hour should keep the time, because the user explicitly
          // specified which hour he wants. So trying to maintain the same hour (in
          // a new timezone) makes sense. Adding/subtracting hours does not follow
          // this rule.
          var getSetHour = makeGetSet("Hours", true);

          // months
          // week
          // weekdays
          // meridiem
          var baseConfig = {
            calendar: defaultCalendar,
            longDateFormat: defaultLongDateFormat,
            invalidDate: defaultInvalidDate,
            ordinal: defaultOrdinal,
            dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
            relativeTime: defaultRelativeTime,

            months: defaultLocaleMonths,
            monthsShort: defaultLocaleMonthsShort,

            week: defaultLocaleWeek,

            weekdays: defaultLocaleWeekdays,
            weekdaysMin: defaultLocaleWeekdaysMin,
            weekdaysShort: defaultLocaleWeekdaysShort,

            meridiemParse: defaultLocaleMeridiemParse
          };

          // internal storage for locale config files
          var locales = {};
          var localeFamilies = {};
          var globalLocale;

          function normalizeLocale(key) {
            return key ? key.toLowerCase().replace("_", "-") : key;
          }

          // pick the locale from the array
          // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
          // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
          function chooseLocale(names) {
            var i = 0,
              j,
              next,
              locale,
              split;

            while (i < names.length) {
              split = normalizeLocale(names[i]).split("-");
              j = split.length;
              next = normalizeLocale(names[i + 1]);
              next = next ? next.split("-") : null;
              while (j > 0) {
                locale = loadLocale(split.slice(0, j).join("-"));
                if (locale) {
                  return locale;
                }
                if (
                  next &&
                  next.length >= j &&
                  compareArrays(split, next, true) >= j - 1
                ) {
                  //the next array item is better than a shallower substring of this one
                  break;
                }
                j--;
              }
              i++;
            }
            return null;
          }

          function loadLocale(name) {
            var oldLocale = null;
            // TODO: Find a better way to register and load all the locales in Node
            if (
              !locales[name] &&
              typeof module !== "undefined" &&
              module &&
              module.exports
            ) {
              try {
                oldLocale = globalLocale._abbr;
                var aliasedRequire = require;
                __webpack_require__(220)("./" + name);
                getSetGlobalLocale(oldLocale);
              } catch (e) {}
            }
            return locales[name];
          }

          // This function will load locale and then set the global locale.  If
          // no arguments are passed in, it will simply return the current global
          // locale key.
          function getSetGlobalLocale(key, values) {
            var data;
            if (key) {
              if (isUndefined(values)) {
                data = getLocale(key);
              } else {
                data = defineLocale(key, values);
              }

              if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
              }
            }

            return globalLocale._abbr;
          }

          function defineLocale(name, config) {
            if (config !== null) {
              var parentConfig = baseConfig;
              config.abbr = name;
              if (locales[name] != null) {
                deprecateSimple(
                  "defineLocaleOverride",
                  "use moment.updateLocale(localeName, config) to change " +
                    "an existing locale. moment.defineLocale(localeName, " +
                    "config) should only be used for creating a new locale " +
                    "See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
                );
                parentConfig = locales[name]._config;
              } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                  parentConfig = locales[config.parentLocale]._config;
                } else {
                  if (!localeFamilies[config.parentLocale]) {
                    localeFamilies[config.parentLocale] = [];
                  }
                  localeFamilies[config.parentLocale].push({
                    name: name,
                    config: config
                  });
                  return null;
                }
              }
              locales[name] = new Locale(mergeConfigs(parentConfig, config));

              if (localeFamilies[name]) {
                localeFamilies[name].forEach(function(x) {
                  defineLocale(x.name, x.config);
                });
              }

              // backwards compat for now: also set the locale
              // make sure we set the locale AFTER all child locales have been
              // created, so we won't end up with the child locale set.
              getSetGlobalLocale(name);

              return locales[name];
            } else {
              // useful for testing
              delete locales[name];
              return null;
            }
          }

          function updateLocale(name, config) {
            if (config != null) {
              var locale,
                tmpLocale,
                parentConfig = baseConfig;
              // MERGE
              tmpLocale = loadLocale(name);
              if (tmpLocale != null) {
                parentConfig = tmpLocale._config;
              }
              config = mergeConfigs(parentConfig, config);
              locale = new Locale(config);
              locale.parentLocale = locales[name];
              locales[name] = locale;

              // backwards compat for now: also set the locale
              getSetGlobalLocale(name);
            } else {
              // pass null for config to unupdate, useful for tests
              if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                  locales[name] = locales[name].parentLocale;
                } else if (locales[name] != null) {
                  delete locales[name];
                }
              }
            }
            return locales[name];
          }

          // returns locale data
          function getLocale(key) {
            var locale;

            if (key && key._locale && key._locale._abbr) {
              key = key._locale._abbr;
            }

            if (!key) {
              return globalLocale;
            }

            if (!isArray(key)) {
              //short-circuit everything else
              locale = loadLocale(key);
              if (locale) {
                return locale;
              }
              key = [key];
            }

            return chooseLocale(key);
          }

          function listLocales() {
            return keys(locales);
          }

          function checkOverflow(m) {
            var overflow;
            var a = m._a;

            if (a && getParsingFlags(m).overflow === -2) {
              overflow =
                a[MONTH] < 0 || a[MONTH] > 11
                  ? MONTH
                  : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                    ? DATE
                    : a[HOUR] < 0 ||
                      a[HOUR] > 24 ||
                      (a[HOUR] === 24 &&
                        (a[MINUTE] !== 0 ||
                          a[SECOND] !== 0 ||
                          a[MILLISECOND] !== 0))
                      ? HOUR
                      : a[MINUTE] < 0 || a[MINUTE] > 59
                        ? MINUTE
                        : a[SECOND] < 0 || a[SECOND] > 59
                          ? SECOND
                          : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                            ? MILLISECOND
                            : -1;

              if (
                getParsingFlags(m)._overflowDayOfYear &&
                (overflow < YEAR || overflow > DATE)
              ) {
                overflow = DATE;
              }
              if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
              }
              if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
              }

              getParsingFlags(m).overflow = overflow;
            }

            return m;
          }

          // Pick the first defined of two or three arguments.
          function defaults(a, b, c) {
            if (a != null) {
              return a;
            }
            if (b != null) {
              return b;
            }
            return c;
          }

          function currentDateArray(config) {
            // hooks is actually the exported moment object
            var nowValue = new Date(hooks.now());
            if (config._useUTC) {
              return [
                nowValue.getUTCFullYear(),
                nowValue.getUTCMonth(),
                nowValue.getUTCDate()
              ];
            }
            return [
              nowValue.getFullYear(),
              nowValue.getMonth(),
              nowValue.getDate()
            ];
          }

          // convert an array to a date.
          // the array should mirror the parameters below
          // note: all values past the year are optional and will default to the lowest possible value.
          // [year, month, day , hour, minute, second, millisecond]
          function configFromArray(config) {
            var i,
              date,
              input = [],
              currentDate,
              expectedWeekday,
              yearToUse;

            if (config._d) {
              return;
            }

            currentDate = currentDateArray(config);

            //compute day of the year from weeks and weekdays
            if (
              config._w &&
              config._a[DATE] == null &&
              config._a[MONTH] == null
            ) {
              dayOfYearFromWeekInfo(config);
            }

            //if the day of the year is set, figure out what it is
            if (config._dayOfYear != null) {
              yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

              if (
                config._dayOfYear > daysInYear(yearToUse) ||
                config._dayOfYear === 0
              ) {
                getParsingFlags(config)._overflowDayOfYear = true;
              }

              date = createUTCDate(yearToUse, 0, config._dayOfYear);
              config._a[MONTH] = date.getUTCMonth();
              config._a[DATE] = date.getUTCDate();
            }

            // Default to current date.
            // * if no year, month, day of month are given, default to today
            // * if day of month is given, default month and year
            // * if month is given, default only year
            // * if year is given, don't default anything
            for (i = 0; i < 3 && config._a[i] == null; ++i) {
              config._a[i] = input[i] = currentDate[i];
            }

            // Zero out whatever was not defaulted, including time
            for (; i < 7; i++) {
              config._a[i] = input[i] =
                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
            }

            // Check for 24:00:00.000
            if (
              config._a[HOUR] === 24 &&
              config._a[MINUTE] === 0 &&
              config._a[SECOND] === 0 &&
              config._a[MILLISECOND] === 0
            ) {
              config._nextDay = true;
              config._a[HOUR] = 0;
            }

            config._d = (config._useUTC ? createUTCDate : createDate).apply(
              null,
              input
            );
            expectedWeekday = config._useUTC
              ? config._d.getUTCDay()
              : config._d.getDay();

            // Apply timezone offset from input. The actual utcOffset can be changed
            // with parseZone.
            if (config._tzm != null) {
              config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
            }

            if (config._nextDay) {
              config._a[HOUR] = 24;
            }

            // check for mismatching day of week
            if (
              config._w &&
              typeof config._w.d !== "undefined" &&
              config._w.d !== expectedWeekday
            ) {
              getParsingFlags(config).weekdayMismatch = true;
            }
          }

          function dayOfYearFromWeekInfo(config) {
            var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

            w = config._w;
            if (w.GG != null || w.W != null || w.E != null) {
              dow = 1;
              doy = 4;

              // TODO: We need to take the current isoWeekYear, but that depends on
              // how we interpret now (local, utc, fixed offset). So create
              // a now version of current config (take local/utc/offset flags, and
              // create now).
              weekYear = defaults(
                w.GG,
                config._a[YEAR],
                weekOfYear(createLocal(), 1, 4).year
              );
              week = defaults(w.W, 1);
              weekday = defaults(w.E, 1);
              if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
              }
            } else {
              dow = config._locale._week.dow;
              doy = config._locale._week.doy;

              var curWeek = weekOfYear(createLocal(), dow, doy);

              weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

              // Default to current week.
              week = defaults(w.w, curWeek.week);

              if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                  weekdayOverflow = true;
                }
              } else if (w.e != null) {
                // local weekday -- counting starts from begining of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                  weekdayOverflow = true;
                }
              } else {
                // default to begining of week
                weekday = dow;
              }
            }
            if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
              getParsingFlags(config)._overflowWeeks = true;
            } else if (weekdayOverflow != null) {
              getParsingFlags(config)._overflowWeekday = true;
            } else {
              temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
              config._a[YEAR] = temp.year;
              config._dayOfYear = temp.dayOfYear;
            }
          }

          // iso 8601 regex
          // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
          var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
          var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

          var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

          var isoDates = [
            ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
            ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
            ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
            ["GGGG-[W]WW", /\d{4}-W\d\d/, false],
            ["YYYY-DDD", /\d{4}-\d{3}/],
            ["YYYY-MM", /\d{4}-\d\d/, false],
            ["YYYYYYMMDD", /[+-]\d{10}/],
            ["YYYYMMDD", /\d{8}/],
            // YYYYMM is NOT allowed by the standard
            ["GGGG[W]WWE", /\d{4}W\d{3}/],
            ["GGGG[W]WW", /\d{4}W\d{2}/, false],
            ["YYYYDDD", /\d{7}/]
          ];

          // iso time formats and regexes
          var isoTimes = [
            ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
            ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
            ["HH:mm:ss", /\d\d:\d\d:\d\d/],
            ["HH:mm", /\d\d:\d\d/],
            ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
            ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
            ["HHmmss", /\d\d\d\d\d\d/],
            ["HHmm", /\d\d\d\d/],
            ["HH", /\d\d/]
          ];

          var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

          // date from iso format
          function configFromISO(config) {
            var i,
              l,
              string = config._i,
              match =
                extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
              allowTime,
              dateFormat,
              timeFormat,
              tzFormat;

            if (match) {
              getParsingFlags(config).iso = true;

              for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                  dateFormat = isoDates[i][0];
                  allowTime = isoDates[i][2] !== false;
                  break;
                }
              }
              if (dateFormat == null) {
                config._isValid = false;
                return;
              }
              if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                  if (isoTimes[i][1].exec(match[3])) {
                    // match[2] should be 'T' or space
                    timeFormat = (match[2] || " ") + isoTimes[i][0];
                    break;
                  }
                }
                if (timeFormat == null) {
                  config._isValid = false;
                  return;
                }
              }
              if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
              }
              if (match[4]) {
                if (tzRegex.exec(match[4])) {
                  tzFormat = "Z";
                } else {
                  config._isValid = false;
                  return;
                }
              }
              config._f = dateFormat + (timeFormat || "") + (tzFormat || "");
              configFromStringAndFormat(config);
            } else {
              config._isValid = false;
            }
          }

          // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
          var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

          function extractFromRFC2822Strings(
            yearStr,
            monthStr,
            dayStr,
            hourStr,
            minuteStr,
            secondStr
          ) {
            var result = [
              untruncateYear(yearStr),
              defaultLocaleMonthsShort.indexOf(monthStr),
              parseInt(dayStr, 10),
              parseInt(hourStr, 10),
              parseInt(minuteStr, 10)
            ];

            if (secondStr) {
              result.push(parseInt(secondStr, 10));
            }

            return result;
          }

          function untruncateYear(yearStr) {
            var year = parseInt(yearStr, 10);
            if (year <= 49) {
              return 2000 + year;
            } else if (year <= 999) {
              return 1900 + year;
            }
            return year;
          }

          function preprocessRFC2822(s) {
            // Remove comments and folding whitespace and replace multiple-spaces with a single space
            return s
              .replace(/\([^)]*\)|[\n\t]/g, " ")
              .replace(/(\s\s+)/g, " ")
              .trim();
          }

          function checkWeekday(weekdayStr, parsedInput, config) {
            if (weekdayStr) {
              // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
              var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(
                  weekdayStr
                ),
                weekdayActual = new Date(
                  parsedInput[0],
                  parsedInput[1],
                  parsedInput[2]
                ).getDay();
              if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
              }
            }
            return true;
          }

          var obsOffsets = {
            UT: 0,
            GMT: 0,
            EDT: -4 * 60,
            EST: -5 * 60,
            CDT: -5 * 60,
            CST: -6 * 60,
            MDT: -6 * 60,
            MST: -7 * 60,
            PDT: -7 * 60,
            PST: -8 * 60
          };

          function calculateOffset(obsOffset, militaryOffset, numOffset) {
            if (obsOffset) {
              return obsOffsets[obsOffset];
            } else if (militaryOffset) {
              // the only allowed military tz is Z
              return 0;
            } else {
              var hm = parseInt(numOffset, 10);
              var m = hm % 100,
                h = (hm - m) / 100;
              return h * 60 + m;
            }
          }

          // date and time from ref 2822 format
          function configFromRFC2822(config) {
            var match = rfc2822.exec(preprocessRFC2822(config._i));
            if (match) {
              var parsedArray = extractFromRFC2822Strings(
                match[4],
                match[3],
                match[2],
                match[5],
                match[6],
                match[7]
              );
              if (!checkWeekday(match[1], parsedArray, config)) {
                return;
              }

              config._a = parsedArray;
              config._tzm = calculateOffset(match[8], match[9], match[10]);

              config._d = createUTCDate.apply(null, config._a);
              config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

              getParsingFlags(config).rfc2822 = true;
            } else {
              config._isValid = false;
            }
          }

          // date from iso format or fallback
          function configFromString(config) {
            var matched = aspNetJsonRegex.exec(config._i);

            if (matched !== null) {
              config._d = new Date(+matched[1]);
              return;
            }

            configFromISO(config);
            if (config._isValid === false) {
              delete config._isValid;
            } else {
              return;
            }

            configFromRFC2822(config);
            if (config._isValid === false) {
              delete config._isValid;
            } else {
              return;
            }

            // Final attempt, use Input Fallback
            hooks.createFromInputFallback(config);
          }

          hooks.createFromInputFallback = deprecate(
            "value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), " +
              "which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are " +
              "discouraged and will be removed in an upcoming major release. Please refer to " +
              "http://momentjs.com/guides/#/warnings/js-date/ for more info.",
            function(config) {
              config._d = new Date(config._i + (config._useUTC ? " UTC" : ""));
            }
          );

          // constant that refers to the ISO standard
          hooks.ISO_8601 = function() {};

          // constant that refers to the RFC 2822 form
          hooks.RFC_2822 = function() {};

          // date from string and format string
          function configFromStringAndFormat(config) {
            // TODO: Move this to another part of the creation flow to prevent circular deps
            if (config._f === hooks.ISO_8601) {
              configFromISO(config);
              return;
            }
            if (config._f === hooks.RFC_2822) {
              configFromRFC2822(config);
              return;
            }
            config._a = [];
            getParsingFlags(config).empty = true;

            // This array is used to make a Date, either with `new Date` or `Date.UTC`
            var string = "" + config._i,
              i,
              parsedInput,
              tokens,
              token,
              skipped,
              stringLength = string.length,
              totalParsedInputLength = 0;

            tokens =
              expandFormat(config._f, config._locale).match(formattingTokens) ||
              [];

            for (i = 0; i < tokens.length; i++) {
              token = tokens[i];
              parsedInput = (string.match(
                getParseRegexForToken(token, config)
              ) || [])[0];
              // console.log('token', token, 'parsedInput', parsedInput,
              //         'regex', getParseRegexForToken(token, config));
              if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                  getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(
                  string.indexOf(parsedInput) + parsedInput.length
                );
                totalParsedInputLength += parsedInput.length;
              }
              // don't parse if it's not a known token
              if (formatTokenFunctions[token]) {
                if (parsedInput) {
                  getParsingFlags(config).empty = false;
                } else {
                  getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
              } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
              }
            }

            // add remaining unparsed input length to the string
            getParsingFlags(config).charsLeftOver =
              stringLength - totalParsedInputLength;
            if (string.length > 0) {
              getParsingFlags(config).unusedInput.push(string);
            }

            // clear _12h flag if hour is <= 12
            if (
              config._a[HOUR] <= 12 &&
              getParsingFlags(config).bigHour === true &&
              config._a[HOUR] > 0
            ) {
              getParsingFlags(config).bigHour = undefined;
            }

            getParsingFlags(config).parsedDateParts = config._a.slice(0);
            getParsingFlags(config).meridiem = config._meridiem;
            // handle meridiem
            config._a[HOUR] = meridiemFixWrap(
              config._locale,
              config._a[HOUR],
              config._meridiem
            );

            configFromArray(config);
            checkOverflow(config);
          }

          function meridiemFixWrap(locale, hour, meridiem) {
            var isPm;

            if (meridiem == null) {
              // nothing to do
              return hour;
            }
            if (locale.meridiemHour != null) {
              return locale.meridiemHour(hour, meridiem);
            } else if (locale.isPM != null) {
              // Fallback
              isPm = locale.isPM(meridiem);
              if (isPm && hour < 12) {
                hour += 12;
              }
              if (!isPm && hour === 12) {
                hour = 0;
              }
              return hour;
            } else {
              // this is not supposed to happen
              return hour;
            }
          }

          // date from string and array of format strings
          function configFromStringAndArray(config) {
            var tempConfig, bestMoment, scoreToBeat, i, currentScore;

            if (config._f.length === 0) {
              getParsingFlags(config).invalidFormat = true;
              config._d = new Date(NaN);
              return;
            }

            for (i = 0; i < config._f.length; i++) {
              currentScore = 0;
              tempConfig = copyConfig({}, config);
              if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
              }
              tempConfig._f = config._f[i];
              configFromStringAndFormat(tempConfig);

              if (!isValid(tempConfig)) {
                continue;
              }

              // if there is any input that was not parsed add a penalty for that format
              currentScore += getParsingFlags(tempConfig).charsLeftOver;

              //or tokens
              currentScore +=
                getParsingFlags(tempConfig).unusedTokens.length * 10;

              getParsingFlags(tempConfig).score = currentScore;

              if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
              }
            }

            extend(config, bestMoment || tempConfig);
          }

          function configFromObject(config) {
            if (config._d) {
              return;
            }

            var i = normalizeObjectUnits(config._i);
            config._a = map(
              [
                i.year,
                i.month,
                i.day || i.date,
                i.hour,
                i.minute,
                i.second,
                i.millisecond
              ],
              function(obj) {
                return obj && parseInt(obj, 10);
              }
            );

            configFromArray(config);
          }

          function createFromConfig(config) {
            var res = new Moment(checkOverflow(prepareConfig(config)));
            if (res._nextDay) {
              // Adding is smart enough around DST
              res.add(1, "d");
              res._nextDay = undefined;
            }

            return res;
          }

          function prepareConfig(config) {
            var input = config._i,
              format = config._f;

            config._locale = config._locale || getLocale(config._l);

            if (input === null || (format === undefined && input === "")) {
              return createInvalid({ nullInput: true });
            }

            if (typeof input === "string") {
              config._i = input = config._locale.preparse(input);
            }

            if (isMoment(input)) {
              return new Moment(checkOverflow(input));
            } else if (isDate(input)) {
              config._d = input;
            } else if (isArray(format)) {
              configFromStringAndArray(config);
            } else if (format) {
              configFromStringAndFormat(config);
            } else {
              configFromInput(config);
            }

            if (!isValid(config)) {
              config._d = null;
            }

            return config;
          }

          function configFromInput(config) {
            var input = config._i;
            if (isUndefined(input)) {
              config._d = new Date(hooks.now());
            } else if (isDate(input)) {
              config._d = new Date(input.valueOf());
            } else if (typeof input === "string") {
              configFromString(config);
            } else if (isArray(input)) {
              config._a = map(input.slice(0), function(obj) {
                return parseInt(obj, 10);
              });
              configFromArray(config);
            } else if (isObject(input)) {
              configFromObject(config);
            } else if (isNumber(input)) {
              // from milliseconds
              config._d = new Date(input);
            } else {
              hooks.createFromInputFallback(config);
            }
          }

          function createLocalOrUTC(input, format, locale, strict, isUTC) {
            var c = {};

            if (locale === true || locale === false) {
              strict = locale;
              locale = undefined;
            }

            if (
              (isObject(input) && isObjectEmpty(input)) ||
              (isArray(input) && input.length === 0)
            ) {
              input = undefined;
            }
            // object construction must be done this way.
            // https://github.com/moment/moment/issues/1423
            c._isAMomentObject = true;
            c._useUTC = c._isUTC = isUTC;
            c._l = locale;
            c._i = input;
            c._f = format;
            c._strict = strict;

            return createFromConfig(c);
          }

          function createLocal(input, format, locale, strict) {
            return createLocalOrUTC(input, format, locale, strict, false);
          }

          var prototypeMin = deprecate(
            "moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",
            function() {
              var other = createLocal.apply(null, arguments);
              if (this.isValid() && other.isValid()) {
                return other < this ? this : other;
              } else {
                return createInvalid();
              }
            }
          );

          var prototypeMax = deprecate(
            "moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",
            function() {
              var other = createLocal.apply(null, arguments);
              if (this.isValid() && other.isValid()) {
                return other > this ? this : other;
              } else {
                return createInvalid();
              }
            }
          );

          // Pick a moment m from moments so that m[fn](other) is true for all
          // other. This relies on the function fn to be transitive.
          //
          // moments should either be an array of moment objects or an array, whose
          // first element is an array of moment objects.
          function pickBy(fn, moments) {
            var res, i;
            if (moments.length === 1 && isArray(moments[0])) {
              moments = moments[0];
            }
            if (!moments.length) {
              return createLocal();
            }
            res = moments[0];
            for (i = 1; i < moments.length; ++i) {
              if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
              }
            }
            return res;
          }

          // TODO: Use [].sort instead?
          function min() {
            var args = [].slice.call(arguments, 0);

            return pickBy("isBefore", args);
          }

          function max() {
            var args = [].slice.call(arguments, 0);

            return pickBy("isAfter", args);
          }

          var now = function() {
            return Date.now ? Date.now() : +new Date();
          };

          var ordering = [
            "year",
            "quarter",
            "month",
            "week",
            "day",
            "hour",
            "minute",
            "second",
            "millisecond"
          ];

          function isDurationValid(m) {
            for (var key in m) {
              if (
                !(
                  indexOf.call(ordering, key) !== -1 &&
                  (m[key] == null || !isNaN(m[key]))
                )
              ) {
                return false;
              }
            }

            var unitHasDecimal = false;
            for (var i = 0; i < ordering.length; ++i) {
              if (m[ordering[i]]) {
                if (unitHasDecimal) {
                  return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                  unitHasDecimal = true;
                }
              }
            }

            return true;
          }

          function isValid$1() {
            return this._isValid;
          }

          function createInvalid$1() {
            return createDuration(NaN);
          }

          function Duration(duration) {
            var normalizedInput = normalizeObjectUnits(duration),
              years = normalizedInput.year || 0,
              quarters = normalizedInput.quarter || 0,
              months = normalizedInput.month || 0,
              weeks = normalizedInput.week || 0,
              days = normalizedInput.day || 0,
              hours = normalizedInput.hour || 0,
              minutes = normalizedInput.minute || 0,
              seconds = normalizedInput.second || 0,
              milliseconds = normalizedInput.millisecond || 0;

            this._isValid = isDurationValid(normalizedInput);

            // representation for dateAddRemove
            this._milliseconds =
              +milliseconds +
              seconds * 1e3 + // 1000
              minutes * 6e4 + // 1000 * 60
              hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
            // Because of dateAddRemove treats 24 hours as different from a
            // day when working around DST, we need to store them separately
            this._days = +days + weeks * 7;
            // It is impossible to translate months into days without knowing
            // which months you are are talking about, so we have to store
            // it separately.
            this._months = +months + quarters * 3 + years * 12;

            this._data = {};

            this._locale = getLocale();

            this._bubble();
          }

          function isDuration(obj) {
            return obj instanceof Duration;
          }

          function absRound(number) {
            if (number < 0) {
              return Math.round(-1 * number) * -1;
            } else {
              return Math.round(number);
            }
          }

          // FORMATTING

          function offset(token, separator) {
            addFormatToken(token, 0, 0, function() {
              var offset = this.utcOffset();
              var sign = "+";
              if (offset < 0) {
                offset = -offset;
                sign = "-";
              }
              return (
                sign +
                zeroFill(~~(offset / 60), 2) +
                separator +
                zeroFill(~~offset % 60, 2)
              );
            });
          }

          offset("Z", ":");
          offset("ZZ", "");

          // PARSING

          addRegexToken("Z", matchShortOffset);
          addRegexToken("ZZ", matchShortOffset);
          addParseToken(["Z", "ZZ"], function(input, array, config) {
            config._useUTC = true;
            config._tzm = offsetFromString(matchShortOffset, input);
          });

          // HELPERS

          // timezone chunker
          // '+10:00' > ['10',  '00']
          // '-1530'  > ['-15', '30']
          var chunkOffset = /([\+\-]|\d\d)/gi;

          function offsetFromString(matcher, string) {
            var matches = (string || "").match(matcher);

            if (matches === null) {
              return null;
            }

            var chunk = matches[matches.length - 1] || [];
            var parts = (chunk + "").match(chunkOffset) || ["-", 0, 0];
            var minutes = +(parts[1] * 60) + toInt(parts[2]);

            return minutes === 0 ? 0 : parts[0] === "+" ? minutes : -minutes;
          }

          // Return a moment from input, that is local/utc/zone equivalent to model.
          function cloneWithOffset(input, model) {
            var res, diff;
            if (model._isUTC) {
              res = model.clone();
              diff =
                (isMoment(input) || isDate(input)
                  ? input.valueOf()
                  : createLocal(input).valueOf()) - res.valueOf();
              // Use low-level api, because this fn is low-level api.
              res._d.setTime(res._d.valueOf() + diff);
              hooks.updateOffset(res, false);
              return res;
            } else {
              return createLocal(input).local();
            }
          }

          function getDateOffset(m) {
            // On Firefox.24 Date#getTimezoneOffset returns a floating point.
            // https://github.com/moment/moment/pull/1871
            return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
          }

          // HOOKS

          // This function will be called whenever a moment is mutated.
          // It is intended to keep the offset in sync with the timezone.
          hooks.updateOffset = function() {};

          // MOMENTS

          // keepLocalTime = true means only change the timezone, without
          // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
          // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
          // +0200, so we adjust the time as needed, to be valid.
          //
          // Keeping the time actually adds/subtracts (one hour)
          // from the actual represented time. That is why we call updateOffset
          // a second time. In case it wants us to change the offset again
          // _changeInProgress == true case, then we have to adjust, because
          // there is no such time in the given timezone.
          function getSetOffset(input, keepLocalTime, keepMinutes) {
            var offset = this._offset || 0,
              localAdjust;
            if (!this.isValid()) {
              return input != null ? this : NaN;
            }
            if (input != null) {
              if (typeof input === "string") {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                  return this;
                }
              } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
              }
              if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
              }
              this._offset = input;
              this._isUTC = true;
              if (localAdjust != null) {
                this.add(localAdjust, "m");
              }
              if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                  addSubtract(
                    this,
                    createDuration(input - offset, "m"),
                    1,
                    false
                  );
                } else if (!this._changeInProgress) {
                  this._changeInProgress = true;
                  hooks.updateOffset(this, true);
                  this._changeInProgress = null;
                }
              }
              return this;
            } else {
              return this._isUTC ? offset : getDateOffset(this);
            }
          }

          function getSetZone(input, keepLocalTime) {
            if (input != null) {
              if (typeof input !== "string") {
                input = -input;
              }

              this.utcOffset(input, keepLocalTime);

              return this;
            } else {
              return -this.utcOffset();
            }
          }

          function setOffsetToUTC(keepLocalTime) {
            return this.utcOffset(0, keepLocalTime);
          }

          function setOffsetToLocal(keepLocalTime) {
            if (this._isUTC) {
              this.utcOffset(0, keepLocalTime);
              this._isUTC = false;

              if (keepLocalTime) {
                this.subtract(getDateOffset(this), "m");
              }
            }
            return this;
          }

          function setOffsetToParsedOffset() {
            if (this._tzm != null) {
              this.utcOffset(this._tzm, false, true);
            } else if (typeof this._i === "string") {
              var tZone = offsetFromString(matchOffset, this._i);
              if (tZone != null) {
                this.utcOffset(tZone);
              } else {
                this.utcOffset(0, true);
              }
            }
            return this;
          }

          function hasAlignedHourOffset(input) {
            if (!this.isValid()) {
              return false;
            }
            input = input ? createLocal(input).utcOffset() : 0;

            return (this.utcOffset() - input) % 60 === 0;
          }

          function isDaylightSavingTime() {
            return (
              this.utcOffset() >
                this.clone()
                  .month(0)
                  .utcOffset() ||
              this.utcOffset() >
                this.clone()
                  .month(5)
                  .utcOffset()
            );
          }

          function isDaylightSavingTimeShifted() {
            if (!isUndefined(this._isDSTShifted)) {
              return this._isDSTShifted;
            }

            var c = {};

            copyConfig(c, this);
            c = prepareConfig(c);

            if (c._a) {
              var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
              this._isDSTShifted =
                this.isValid() && compareArrays(c._a, other.toArray()) > 0;
            } else {
              this._isDSTShifted = false;
            }

            return this._isDSTShifted;
          }

          function isLocal() {
            return this.isValid() ? !this._isUTC : false;
          }

          function isUtcOffset() {
            return this.isValid() ? this._isUTC : false;
          }

          function isUtc() {
            return this.isValid() ? this._isUTC && this._offset === 0 : false;
          }

          // ASP.NET json date format regex
          var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

          // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
          // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
          // and further modified to allow for strings containing both week and day
          var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

          function createDuration(input, key) {
            var duration = input,
              // matching against regexp is expensive, do it on demand
              match = null,
              sign,
              ret,
              diffRes;

            if (isDuration(input)) {
              duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months
              };
            } else if (isNumber(input)) {
              duration = {};
              if (key) {
                duration[key] = input;
              } else {
                duration.milliseconds = input;
              }
            } else if (!!(match = aspNetRegex.exec(input))) {
              sign = match[1] === "-" ? -1 : 1;
              duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
              };
            } else if (!!(match = isoRegex.exec(input))) {
              sign = match[1] === "-" ? -1 : match[1] === "+" ? 1 : 1;
              duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign)
              };
            } else if (duration == null) {
              // checks for null or undefined
              duration = {};
            } else if (
              typeof duration === "object" &&
              ("from" in duration || "to" in duration)
            ) {
              diffRes = momentsDifference(
                createLocal(duration.from),
                createLocal(duration.to)
              );

              duration = {};
              duration.ms = diffRes.milliseconds;
              duration.M = diffRes.months;
            }

            ret = new Duration(duration);

            if (isDuration(input) && hasOwnProp(input, "_locale")) {
              ret._locale = input._locale;
            }

            return ret;
          }

          createDuration.fn = Duration.prototype;
          createDuration.invalid = createInvalid$1;

          function parseIso(inp, sign) {
            // We'd normally use ~~inp for this, but unfortunately it also
            // converts floats to ints.
            // inp may be undefined, so careful calling replace on it.
            var res = inp && parseFloat(inp.replace(",", "."));
            // apply sign while we're at it
            return (isNaN(res) ? 0 : res) * sign;
          }

          function positiveMomentsDifference(base, other) {
            var res = { milliseconds: 0, months: 0 };

            res.months =
              other.month() - base.month() + (other.year() - base.year()) * 12;
            if (
              base
                .clone()
                .add(res.months, "M")
                .isAfter(other)
            ) {
              --res.months;
            }

            res.milliseconds = +other - +base.clone().add(res.months, "M");

            return res;
          }

          function momentsDifference(base, other) {
            var res;
            if (!(base.isValid() && other.isValid())) {
              return { milliseconds: 0, months: 0 };
            }

            other = cloneWithOffset(other, base);
            if (base.isBefore(other)) {
              res = positiveMomentsDifference(base, other);
            } else {
              res = positiveMomentsDifference(other, base);
              res.milliseconds = -res.milliseconds;
              res.months = -res.months;
            }

            return res;
          }

          // TODO: remove 'name' arg after deprecation is removed
          function createAdder(direction, name) {
            return function(val, period) {
              var dur, tmp;
              //invert the arguments, but complain about it
              if (period !== null && !isNaN(+period)) {
                deprecateSimple(
                  name,
                  "moment()." +
                    name +
                    "(period, number) is deprecated. Please use moment()." +
                    name +
                    "(number, period). " +
                    "See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."
                );
                tmp = val;
                val = period;
                period = tmp;
              }

              val = typeof val === "string" ? +val : val;
              dur = createDuration(val, period);
              addSubtract(this, dur, direction);
              return this;
            };
          }

          function addSubtract(mom, duration, isAdding, updateOffset) {
            var milliseconds = duration._milliseconds,
              days = absRound(duration._days),
              months = absRound(duration._months);

            if (!mom.isValid()) {
              // No op
              return;
            }

            updateOffset = updateOffset == null ? true : updateOffset;

            if (months) {
              setMonth(mom, get(mom, "Month") + months * isAdding);
            }
            if (days) {
              set$1(mom, "Date", get(mom, "Date") + days * isAdding);
            }
            if (milliseconds) {
              mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
            }
            if (updateOffset) {
              hooks.updateOffset(mom, days || months);
            }
          }

          var add = createAdder(1, "add");
          var subtract = createAdder(-1, "subtract");

          function getCalendarFormat(myMoment, now) {
            var diff = myMoment.diff(now, "days", true);
            return diff < -6
              ? "sameElse"
              : diff < -1
                ? "lastWeek"
                : diff < 0
                  ? "lastDay"
                  : diff < 1
                    ? "sameDay"
                    : diff < 2 ? "nextDay" : diff < 7 ? "nextWeek" : "sameElse";
          }

          function calendar$1(time, formats) {
            // We want to compare the start of today, vs this.
            // Getting start-of-today depends on whether we're local/utc/offset or not.
            var now = time || createLocal(),
              sod = cloneWithOffset(now, this).startOf("day"),
              format = hooks.calendarFormat(this, sod) || "sameElse";

            var output =
              formats &&
              (isFunction(formats[format])
                ? formats[format].call(this, now)
                : formats[format]);

            return this.format(
              output ||
                this.localeData().calendar(format, this, createLocal(now))
            );
          }

          function clone() {
            return new Moment(this);
          }

          function isAfter(input, units) {
            var localInput = isMoment(input) ? input : createLocal(input);
            if (!(this.isValid() && localInput.isValid())) {
              return false;
            }
            units = normalizeUnits(!isUndefined(units) ? units : "millisecond");
            if (units === "millisecond") {
              return this.valueOf() > localInput.valueOf();
            } else {
              return (
                localInput.valueOf() <
                this.clone()
                  .startOf(units)
                  .valueOf()
              );
            }
          }

          function isBefore(input, units) {
            var localInput = isMoment(input) ? input : createLocal(input);
            if (!(this.isValid() && localInput.isValid())) {
              return false;
            }
            units = normalizeUnits(!isUndefined(units) ? units : "millisecond");
            if (units === "millisecond") {
              return this.valueOf() < localInput.valueOf();
            } else {
              return (
                this.clone()
                  .endOf(units)
                  .valueOf() < localInput.valueOf()
              );
            }
          }

          function isBetween(from, to, units, inclusivity) {
            inclusivity = inclusivity || "()";
            return (
              (inclusivity[0] === "("
                ? this.isAfter(from, units)
                : !this.isBefore(from, units)) &&
              (inclusivity[1] === ")"
                ? this.isBefore(to, units)
                : !this.isAfter(to, units))
            );
          }

          function isSame(input, units) {
            var localInput = isMoment(input) ? input : createLocal(input),
              inputMs;
            if (!(this.isValid() && localInput.isValid())) {
              return false;
            }
            units = normalizeUnits(units || "millisecond");
            if (units === "millisecond") {
              return this.valueOf() === localInput.valueOf();
            } else {
              inputMs = localInput.valueOf();
              return (
                this.clone()
                  .startOf(units)
                  .valueOf() <= inputMs &&
                inputMs <=
                  this.clone()
                    .endOf(units)
                    .valueOf()
              );
            }
          }

          function isSameOrAfter(input, units) {
            return this.isSame(input, units) || this.isAfter(input, units);
          }

          function isSameOrBefore(input, units) {
            return this.isSame(input, units) || this.isBefore(input, units);
          }

          function diff(input, units, asFloat) {
            var that, zoneDelta, delta, output;

            if (!this.isValid()) {
              return NaN;
            }

            that = cloneWithOffset(input, this);

            if (!that.isValid()) {
              return NaN;
            }

            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

            units = normalizeUnits(units);

            switch (units) {
              case "year":
                output = monthDiff(this, that) / 12;
                break;
              case "month":
                output = monthDiff(this, that);
                break;
              case "quarter":
                output = monthDiff(this, that) / 3;
                break;
              case "second":
                output = (this - that) / 1e3;
                break; // 1000
              case "minute":
                output = (this - that) / 6e4;
                break; // 1000 * 60
              case "hour":
                output = (this - that) / 36e5;
                break; // 1000 * 60 * 60
              case "day":
                output = (this - that - zoneDelta) / 864e5;
                break; // 1000 * 60 * 60 * 24, negate dst
              case "week":
                output = (this - that - zoneDelta) / 6048e5;
                break; // 1000 * 60 * 60 * 24 * 7, negate dst
              default:
                output = this - that;
            }

            return asFloat ? output : absFloor(output);
          }

          function monthDiff(a, b) {
            // difference in months
            var wholeMonthDiff =
                (b.year() - a.year()) * 12 + (b.month() - a.month()),
              // b is in (anchor - 1 month, anchor + 1 month)
              anchor = a.clone().add(wholeMonthDiff, "months"),
              anchor2,
              adjust;

            if (b - anchor < 0) {
              anchor2 = a.clone().add(wholeMonthDiff - 1, "months");
              // linear across the month
              adjust = (b - anchor) / (anchor - anchor2);
            } else {
              anchor2 = a.clone().add(wholeMonthDiff + 1, "months");
              // linear across the month
              adjust = (b - anchor) / (anchor2 - anchor);
            }

            //check for negative zero, return zero if negative zero
            return -(wholeMonthDiff + adjust) || 0;
          }

          hooks.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
          hooks.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";

          function toString() {
            return this.clone()
              .locale("en")
              .format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
          }

          function toISOString() {
            if (!this.isValid()) {
              return null;
            }
            var m = this.clone().utc();
            if (m.year() < 0 || m.year() > 9999) {
              return formatMoment(m, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]");
            }
            if (isFunction(Date.prototype.toISOString)) {
              // native implementation is ~50x faster, use it when we can
              return this.toDate().toISOString();
            }
            return formatMoment(m, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]");
          }

          /**
           * Return a human readable representation of a moment that can
           * also be evaluated to get a new moment which is the same
           *
           * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
           */
          function inspect() {
            if (!this.isValid()) {
              return "moment.invalid(/* " + this._i + " */)";
            }
            var func = "moment";
            var zone = "";
            if (!this.isLocal()) {
              func = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone";
              zone = "Z";
            }
            var prefix = "[" + func + '("]';
            var year =
              0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY";
            var datetime = "-MM-DD[T]HH:mm:ss.SSS";
            var suffix = zone + '[")]';

            return this.format(prefix + year + datetime + suffix);
          }

          function format(inputString) {
            if (!inputString) {
              inputString = this.isUtc()
                ? hooks.defaultFormatUtc
                : hooks.defaultFormat;
            }
            var output = formatMoment(this, inputString);
            return this.localeData().postformat(output);
          }

          function from(time, withoutSuffix) {
            if (
              this.isValid() &&
              ((isMoment(time) && time.isValid()) ||
                createLocal(time).isValid())
            ) {
              return createDuration({ to: this, from: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
            } else {
              return this.localeData().invalidDate();
            }
          }

          function fromNow(withoutSuffix) {
            return this.from(createLocal(), withoutSuffix);
          }

          function to(time, withoutSuffix) {
            if (
              this.isValid() &&
              ((isMoment(time) && time.isValid()) ||
                createLocal(time).isValid())
            ) {
              return createDuration({ from: this, to: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
            } else {
              return this.localeData().invalidDate();
            }
          }

          function toNow(withoutSuffix) {
            return this.to(createLocal(), withoutSuffix);
          }

          // If passed a locale key, it will set the locale for this
          // instance.  Otherwise, it will return the locale configuration
          // variables for this instance.
          function locale(key) {
            var newLocaleData;

            if (key === undefined) {
              return this._locale._abbr;
            } else {
              newLocaleData = getLocale(key);
              if (newLocaleData != null) {
                this._locale = newLocaleData;
              }
              return this;
            }
          }

          var lang = deprecate(
            "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
            function(key) {
              if (key === undefined) {
                return this.localeData();
              } else {
                return this.locale(key);
              }
            }
          );

          function localeData() {
            return this._locale;
          }

          function startOf(units) {
            units = normalizeUnits(units);
            // the following switch intentionally omits break keywords
            // to utilize falling through the cases.
            switch (units) {
              case "year":
                this.month(0);
              /* falls through */
              case "quarter":
              case "month":
                this.date(1);
              /* falls through */
              case "week":
              case "isoWeek":
              case "day":
              case "date":
                this.hours(0);
              /* falls through */
              case "hour":
                this.minutes(0);
              /* falls through */
              case "minute":
                this.seconds(0);
              /* falls through */
              case "second":
                this.milliseconds(0);
            }

            // weeks are a special case
            if (units === "week") {
              this.weekday(0);
            }
            if (units === "isoWeek") {
              this.isoWeekday(1);
            }

            // quarters are also special
            if (units === "quarter") {
              this.month(Math.floor(this.month() / 3) * 3);
            }

            return this;
          }

          function endOf(units) {
            units = normalizeUnits(units);
            if (units === undefined || units === "millisecond") {
              return this;
            }

            // 'date' is an alias for 'day', so it should be considered as such.
            if (units === "date") {
              units = "day";
            }

            return this.startOf(units)
              .add(1, units === "isoWeek" ? "week" : units)
              .subtract(1, "ms");
          }

          function valueOf() {
            return this._d.valueOf() - (this._offset || 0) * 60000;
          }

          function unix() {
            return Math.floor(this.valueOf() / 1000);
          }

          function toDate() {
            return new Date(this.valueOf());
          }

          function toArray() {
            var m = this;
            return [
              m.year(),
              m.month(),
              m.date(),
              m.hour(),
              m.minute(),
              m.second(),
              m.millisecond()
            ];
          }

          function toObject() {
            var m = this;
            return {
              years: m.year(),
              months: m.month(),
              date: m.date(),
              hours: m.hours(),
              minutes: m.minutes(),
              seconds: m.seconds(),
              milliseconds: m.milliseconds()
            };
          }

          function toJSON() {
            // new Date(NaN).toJSON() === null
            return this.isValid() ? this.toISOString() : null;
          }

          function isValid$2() {
            return isValid(this);
          }

          function parsingFlags() {
            return extend({}, getParsingFlags(this));
          }

          function invalidAt() {
            return getParsingFlags(this).overflow;
          }

          function creationData() {
            return {
              input: this._i,
              format: this._f,
              locale: this._locale,
              isUTC: this._isUTC,
              strict: this._strict
            };
          }

          // FORMATTING

          addFormatToken(0, ["gg", 2], 0, function() {
            return this.weekYear() % 100;
          });

          addFormatToken(0, ["GG", 2], 0, function() {
            return this.isoWeekYear() % 100;
          });

          function addWeekYearFormatToken(token, getter) {
            addFormatToken(0, [token, token.length], 0, getter);
          }

          addWeekYearFormatToken("gggg", "weekYear");
          addWeekYearFormatToken("ggggg", "weekYear");
          addWeekYearFormatToken("GGGG", "isoWeekYear");
          addWeekYearFormatToken("GGGGG", "isoWeekYear");

          // ALIASES

          addUnitAlias("weekYear", "gg");
          addUnitAlias("isoWeekYear", "GG");

          // PRIORITY

          addUnitPriority("weekYear", 1);
          addUnitPriority("isoWeekYear", 1);

          // PARSING

          addRegexToken("G", matchSigned);
          addRegexToken("g", matchSigned);
          addRegexToken("GG", match1to2, match2);
          addRegexToken("gg", match1to2, match2);
          addRegexToken("GGGG", match1to4, match4);
          addRegexToken("gggg", match1to4, match4);
          addRegexToken("GGGGG", match1to6, match6);
          addRegexToken("ggggg", match1to6, match6);

          addWeekParseToken(["gggg", "ggggg", "GGGG", "GGGGG"], function(
            input,
            week,
            config,
            token
          ) {
            week[token.substr(0, 2)] = toInt(input);
          });

          addWeekParseToken(["gg", "GG"], function(input, week, config, token) {
            week[token] = hooks.parseTwoDigitYear(input);
          });

          // MOMENTS

          function getSetWeekYear(input) {
            return getSetWeekYearHelper.call(
              this,
              input,
              this.week(),
              this.weekday(),
              this.localeData()._week.dow,
              this.localeData()._week.doy
            );
          }

          function getSetISOWeekYear(input) {
            return getSetWeekYearHelper.call(
              this,
              input,
              this.isoWeek(),
              this.isoWeekday(),
              1,
              4
            );
          }

          function getISOWeeksInYear() {
            return weeksInYear(this.year(), 1, 4);
          }

          function getWeeksInYear() {
            var weekInfo = this.localeData()._week;
            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
          }

          function getSetWeekYearHelper(input, week, weekday, dow, doy) {
            var weeksTarget;
            if (input == null) {
              return weekOfYear(this, dow, doy).year;
            } else {
              weeksTarget = weeksInYear(input, dow, doy);
              if (week > weeksTarget) {
                week = weeksTarget;
              }
              return setWeekAll.call(this, input, week, weekday, dow, doy);
            }
          }

          function setWeekAll(weekYear, week, weekday, dow, doy) {
            var dayOfYearData = dayOfYearFromWeeks(
                weekYear,
                week,
                weekday,
                dow,
                doy
              ),
              date = createUTCDate(
                dayOfYearData.year,
                0,
                dayOfYearData.dayOfYear
              );

            this.year(date.getUTCFullYear());
            this.month(date.getUTCMonth());
            this.date(date.getUTCDate());
            return this;
          }

          // FORMATTING

          addFormatToken("Q", 0, "Qo", "quarter");

          // ALIASES

          addUnitAlias("quarter", "Q");

          // PRIORITY

          addUnitPriority("quarter", 7);

          // PARSING

          addRegexToken("Q", match1);
          addParseToken("Q", function(input, array) {
            array[MONTH] = (toInt(input) - 1) * 3;
          });

          // MOMENTS

          function getSetQuarter(input) {
            return input == null
              ? Math.ceil((this.month() + 1) / 3)
              : this.month((input - 1) * 3 + this.month() % 3);
          }

          // FORMATTING

          addFormatToken("D", ["DD", 2], "Do", "date");

          // ALIASES

          addUnitAlias("date", "D");

          // PRIOROITY
          addUnitPriority("date", 9);

          // PARSING

          addRegexToken("D", match1to2);
          addRegexToken("DD", match1to2, match2);
          addRegexToken("Do", function(isStrict, locale) {
            // TODO: Remove "ordinalParse" fallback in next major release.
            return isStrict
              ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
              : locale._dayOfMonthOrdinalParseLenient;
          });

          addParseToken(["D", "DD"], DATE);
          addParseToken("Do", function(input, array) {
            array[DATE] = toInt(input.match(match1to2)[0]);
          });

          // MOMENTS

          var getSetDayOfMonth = makeGetSet("Date", true);

          // FORMATTING

          addFormatToken("DDD", ["DDDD", 3], "DDDo", "dayOfYear");

          // ALIASES

          addUnitAlias("dayOfYear", "DDD");

          // PRIORITY
          addUnitPriority("dayOfYear", 4);

          // PARSING

          addRegexToken("DDD", match1to3);
          addRegexToken("DDDD", match3);
          addParseToken(["DDD", "DDDD"], function(input, array, config) {
            config._dayOfYear = toInt(input);
          });

          // HELPERS

          // MOMENTS

          function getSetDayOfYear(input) {
            var dayOfYear =
              Math.round(
                (this.clone().startOf("day") - this.clone().startOf("year")) /
                  864e5
              ) + 1;
            return input == null ? dayOfYear : this.add(input - dayOfYear, "d");
          }

          // FORMATTING

          addFormatToken("m", ["mm", 2], 0, "minute");

          // ALIASES

          addUnitAlias("minute", "m");

          // PRIORITY

          addUnitPriority("minute", 14);

          // PARSING

          addRegexToken("m", match1to2);
          addRegexToken("mm", match1to2, match2);
          addParseToken(["m", "mm"], MINUTE);

          // MOMENTS

          var getSetMinute = makeGetSet("Minutes", false);

          // FORMATTING

          addFormatToken("s", ["ss", 2], 0, "second");

          // ALIASES

          addUnitAlias("second", "s");

          // PRIORITY

          addUnitPriority("second", 15);

          // PARSING

          addRegexToken("s", match1to2);
          addRegexToken("ss", match1to2, match2);
          addParseToken(["s", "ss"], SECOND);

          // MOMENTS

          var getSetSecond = makeGetSet("Seconds", false);

          // FORMATTING

          addFormatToken("S", 0, 0, function() {
            return ~~(this.millisecond() / 100);
          });

          addFormatToken(0, ["SS", 2], 0, function() {
            return ~~(this.millisecond() / 10);
          });

          addFormatToken(0, ["SSS", 3], 0, "millisecond");
          addFormatToken(0, ["SSSS", 4], 0, function() {
            return this.millisecond() * 10;
          });
          addFormatToken(0, ["SSSSS", 5], 0, function() {
            return this.millisecond() * 100;
          });
          addFormatToken(0, ["SSSSSS", 6], 0, function() {
            return this.millisecond() * 1000;
          });
          addFormatToken(0, ["SSSSSSS", 7], 0, function() {
            return this.millisecond() * 10000;
          });
          addFormatToken(0, ["SSSSSSSS", 8], 0, function() {
            return this.millisecond() * 100000;
          });
          addFormatToken(0, ["SSSSSSSSS", 9], 0, function() {
            return this.millisecond() * 1000000;
          });

          // ALIASES

          addUnitAlias("millisecond", "ms");

          // PRIORITY

          addUnitPriority("millisecond", 16);

          // PARSING

          addRegexToken("S", match1to3, match1);
          addRegexToken("SS", match1to3, match2);
          addRegexToken("SSS", match1to3, match3);

          var token;
          for (token = "SSSS"; token.length <= 9; token += "S") {
            addRegexToken(token, matchUnsigned);
          }

          function parseMs(input, array) {
            array[MILLISECOND] = toInt(("0." + input) * 1000);
          }

          for (token = "S"; token.length <= 9; token += "S") {
            addParseToken(token, parseMs);
          }
          // MOMENTS

          var getSetMillisecond = makeGetSet("Milliseconds", false);

          // FORMATTING

          addFormatToken("z", 0, 0, "zoneAbbr");
          addFormatToken("zz", 0, 0, "zoneName");

          // MOMENTS

          function getZoneAbbr() {
            return this._isUTC ? "UTC" : "";
          }

          function getZoneName() {
            return this._isUTC ? "Coordinated Universal Time" : "";
          }

          var proto = Moment.prototype;

          proto.add = add;
          proto.calendar = calendar$1;
          proto.clone = clone;
          proto.diff = diff;
          proto.endOf = endOf;
          proto.format = format;
          proto.from = from;
          proto.fromNow = fromNow;
          proto.to = to;
          proto.toNow = toNow;
          proto.get = stringGet;
          proto.invalidAt = invalidAt;
          proto.isAfter = isAfter;
          proto.isBefore = isBefore;
          proto.isBetween = isBetween;
          proto.isSame = isSame;
          proto.isSameOrAfter = isSameOrAfter;
          proto.isSameOrBefore = isSameOrBefore;
          proto.isValid = isValid$2;
          proto.lang = lang;
          proto.locale = locale;
          proto.localeData = localeData;
          proto.max = prototypeMax;
          proto.min = prototypeMin;
          proto.parsingFlags = parsingFlags;
          proto.set = stringSet;
          proto.startOf = startOf;
          proto.subtract = subtract;
          proto.toArray = toArray;
          proto.toObject = toObject;
          proto.toDate = toDate;
          proto.toISOString = toISOString;
          proto.inspect = inspect;
          proto.toJSON = toJSON;
          proto.toString = toString;
          proto.unix = unix;
          proto.valueOf = valueOf;
          proto.creationData = creationData;

          // Year
          proto.year = getSetYear;
          proto.isLeapYear = getIsLeapYear;

          // Week Year
          proto.weekYear = getSetWeekYear;
          proto.isoWeekYear = getSetISOWeekYear;

          // Quarter
          proto.quarter = proto.quarters = getSetQuarter;

          // Month
          proto.month = getSetMonth;
          proto.daysInMonth = getDaysInMonth;

          // Week
          proto.week = proto.weeks = getSetWeek;
          proto.isoWeek = proto.isoWeeks = getSetISOWeek;
          proto.weeksInYear = getWeeksInYear;
          proto.isoWeeksInYear = getISOWeeksInYear;

          // Day
          proto.date = getSetDayOfMonth;
          proto.day = proto.days = getSetDayOfWeek;
          proto.weekday = getSetLocaleDayOfWeek;
          proto.isoWeekday = getSetISODayOfWeek;
          proto.dayOfYear = getSetDayOfYear;

          // Hour
          proto.hour = proto.hours = getSetHour;

          // Minute
          proto.minute = proto.minutes = getSetMinute;

          // Second
          proto.second = proto.seconds = getSetSecond;

          // Millisecond
          proto.millisecond = proto.milliseconds = getSetMillisecond;

          // Offset
          proto.utcOffset = getSetOffset;
          proto.utc = setOffsetToUTC;
          proto.local = setOffsetToLocal;
          proto.parseZone = setOffsetToParsedOffset;
          proto.hasAlignedHourOffset = hasAlignedHourOffset;
          proto.isDST = isDaylightSavingTime;
          proto.isLocal = isLocal;
          proto.isUtcOffset = isUtcOffset;
          proto.isUtc = isUtc;
          proto.isUTC = isUtc;

          // Timezone
          proto.zoneAbbr = getZoneAbbr;
          proto.zoneName = getZoneName;

          // Deprecations
          proto.dates = deprecate(
            "dates accessor is deprecated. Use date instead.",
            getSetDayOfMonth
          );
          proto.months = deprecate(
            "months accessor is deprecated. Use month instead",
            getSetMonth
          );
          proto.years = deprecate(
            "years accessor is deprecated. Use year instead",
            getSetYear
          );
          proto.zone = deprecate(
            "moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",
            getSetZone
          );
          proto.isDSTShifted = deprecate(
            "isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",
            isDaylightSavingTimeShifted
          );

          function createUnix(input) {
            return createLocal(input * 1000);
          }

          function createInZone() {
            return createLocal.apply(null, arguments).parseZone();
          }

          function preParsePostFormat(string) {
            return string;
          }

          var proto$1 = Locale.prototype;

          proto$1.calendar = calendar;
          proto$1.longDateFormat = longDateFormat;
          proto$1.invalidDate = invalidDate;
          proto$1.ordinal = ordinal;
          proto$1.preparse = preParsePostFormat;
          proto$1.postformat = preParsePostFormat;
          proto$1.relativeTime = relativeTime;
          proto$1.pastFuture = pastFuture;
          proto$1.set = set;

          // Month
          proto$1.months = localeMonths;
          proto$1.monthsShort = localeMonthsShort;
          proto$1.monthsParse = localeMonthsParse;
          proto$1.monthsRegex = monthsRegex;
          proto$1.monthsShortRegex = monthsShortRegex;

          // Week
          proto$1.week = localeWeek;
          proto$1.firstDayOfYear = localeFirstDayOfYear;
          proto$1.firstDayOfWeek = localeFirstDayOfWeek;

          // Day of Week
          proto$1.weekdays = localeWeekdays;
          proto$1.weekdaysMin = localeWeekdaysMin;
          proto$1.weekdaysShort = localeWeekdaysShort;
          proto$1.weekdaysParse = localeWeekdaysParse;

          proto$1.weekdaysRegex = weekdaysRegex;
          proto$1.weekdaysShortRegex = weekdaysShortRegex;
          proto$1.weekdaysMinRegex = weekdaysMinRegex;

          // Hours
          proto$1.isPM = localeIsPM;
          proto$1.meridiem = localeMeridiem;

          function get$1(format, index, field, setter) {
            var locale = getLocale();
            var utc = createUTC().set(setter, index);
            return locale[field](utc, format);
          }

          function listMonthsImpl(format, index, field) {
            if (isNumber(format)) {
              index = format;
              format = undefined;
            }

            format = format || "";

            if (index != null) {
              return get$1(format, index, field, "month");
            }

            var i;
            var out = [];
            for (i = 0; i < 12; i++) {
              out[i] = get$1(format, i, field, "month");
            }
            return out;
          }

          // ()
          // (5)
          // (fmt, 5)
          // (fmt)
          // (true)
          // (true, 5)
          // (true, fmt, 5)
          // (true, fmt)
          function listWeekdaysImpl(localeSorted, format, index, field) {
            if (typeof localeSorted === "boolean") {
              if (isNumber(format)) {
                index = format;
                format = undefined;
              }

              format = format || "";
            } else {
              format = localeSorted;
              index = format;
              localeSorted = false;

              if (isNumber(format)) {
                index = format;
                format = undefined;
              }

              format = format || "";
            }

            var locale = getLocale(),
              shift = localeSorted ? locale._week.dow : 0;

            if (index != null) {
              return get$1(format, (index + shift) % 7, field, "day");
            }

            var i;
            var out = [];
            for (i = 0; i < 7; i++) {
              out[i] = get$1(format, (i + shift) % 7, field, "day");
            }
            return out;
          }

          function listMonths(format, index) {
            return listMonthsImpl(format, index, "months");
          }

          function listMonthsShort(format, index) {
            return listMonthsImpl(format, index, "monthsShort");
          }

          function listWeekdays(localeSorted, format, index) {
            return listWeekdaysImpl(localeSorted, format, index, "weekdays");
          }

          function listWeekdaysShort(localeSorted, format, index) {
            return listWeekdaysImpl(
              localeSorted,
              format,
              index,
              "weekdaysShort"
            );
          }

          function listWeekdaysMin(localeSorted, format, index) {
            return listWeekdaysImpl(localeSorted, format, index, "weekdaysMin");
          }

          getSetGlobalLocale("en", {
            dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
            ordinal: function(number) {
              var b = number % 10,
                output =
                  toInt((number % 100) / 10) === 1
                    ? "th"
                    : b === 1 ? "st" : b === 2 ? "nd" : b === 3 ? "rd" : "th";
              return number + output;
            }
          });

          // Side effect imports
          hooks.lang = deprecate(
            "moment.lang is deprecated. Use moment.locale instead.",
            getSetGlobalLocale
          );
          hooks.langData = deprecate(
            "moment.langData is deprecated. Use moment.localeData instead.",
            getLocale
          );

          var mathAbs = Math.abs;

          function abs() {
            var data = this._data;

            this._milliseconds = mathAbs(this._milliseconds);
            this._days = mathAbs(this._days);
            this._months = mathAbs(this._months);

            data.milliseconds = mathAbs(data.milliseconds);
            data.seconds = mathAbs(data.seconds);
            data.minutes = mathAbs(data.minutes);
            data.hours = mathAbs(data.hours);
            data.months = mathAbs(data.months);
            data.years = mathAbs(data.years);

            return this;
          }

          function addSubtract$1(duration, input, value, direction) {
            var other = createDuration(input, value);

            duration._milliseconds += direction * other._milliseconds;
            duration._days += direction * other._days;
            duration._months += direction * other._months;

            return duration._bubble();
          }

          // supports only 2.0-style add(1, 's') or add(duration)
          function add$1(input, value) {
            return addSubtract$1(this, input, value, 1);
          }

          // supports only 2.0-style subtract(1, 's') or subtract(duration)
          function subtract$1(input, value) {
            return addSubtract$1(this, input, value, -1);
          }

          function absCeil(number) {
            if (number < 0) {
              return Math.floor(number);
            } else {
              return Math.ceil(number);
            }
          }

          function bubble() {
            var milliseconds = this._milliseconds;
            var days = this._days;
            var months = this._months;
            var data = this._data;
            var seconds, minutes, hours, years, monthsFromDays;

            // if we have a mix of positive and negative values, bubble down first
            // check: https://github.com/moment/moment/issues/2166
            if (
              !(
                (milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0)
              )
            ) {
              milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
              days = 0;
              months = 0;
            }

            // The following code bubbles up values, see the tests for
            // examples of what that means.
            data.milliseconds = milliseconds % 1000;

            seconds = absFloor(milliseconds / 1000);
            data.seconds = seconds % 60;

            minutes = absFloor(seconds / 60);
            data.minutes = minutes % 60;

            hours = absFloor(minutes / 60);
            data.hours = hours % 24;

            days += absFloor(hours / 24);

            // convert days to months
            monthsFromDays = absFloor(daysToMonths(days));
            months += monthsFromDays;
            days -= absCeil(monthsToDays(monthsFromDays));

            // 12 months -> 1 year
            years = absFloor(months / 12);
            months %= 12;

            data.days = days;
            data.months = months;
            data.years = years;

            return this;
          }

          function daysToMonths(days) {
            // 400 years have 146097 days (taking into account leap year rules)
            // 400 years have 12 months === 4800
            return days * 4800 / 146097;
          }

          function monthsToDays(months) {
            // the reverse of daysToMonths
            return months * 146097 / 4800;
          }

          function as(units) {
            if (!this.isValid()) {
              return NaN;
            }
            var days;
            var months;
            var milliseconds = this._milliseconds;

            units = normalizeUnits(units);

            if (units === "month" || units === "year") {
              days = this._days + milliseconds / 864e5;
              months = this._months + daysToMonths(days);
              return units === "month" ? months : months / 12;
            } else {
              // handle milliseconds separately because of floating point math errors (issue #1867)
              days = this._days + Math.round(monthsToDays(this._months));
              switch (units) {
                case "week":
                  return days / 7 + milliseconds / 6048e5;
                case "day":
                  return days + milliseconds / 864e5;
                case "hour":
                  return days * 24 + milliseconds / 36e5;
                case "minute":
                  return days * 1440 + milliseconds / 6e4;
                case "second":
                  return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case "millisecond":
                  return Math.floor(days * 864e5) + milliseconds;
                default:
                  throw new Error("Unknown unit " + units);
              }
            }
          }

          // TODO: Use this.as('ms')?
          function valueOf$1() {
            if (!this.isValid()) {
              return NaN;
            }
            return (
              this._milliseconds +
              this._days * 864e5 +
              (this._months % 12) * 2592e6 +
              toInt(this._months / 12) * 31536e6
            );
          }

          function makeAs(alias) {
            return function() {
              return this.as(alias);
            };
          }

          var asMilliseconds = makeAs("ms");
          var asSeconds = makeAs("s");
          var asMinutes = makeAs("m");
          var asHours = makeAs("h");
          var asDays = makeAs("d");
          var asWeeks = makeAs("w");
          var asMonths = makeAs("M");
          var asYears = makeAs("y");

          function clone$1() {
            return createDuration(this);
          }

          function get$2(units) {
            units = normalizeUnits(units);
            return this.isValid() ? this[units + "s"]() : NaN;
          }

          function makeGetter(name) {
            return function() {
              return this.isValid() ? this._data[name] : NaN;
            };
          }

          var milliseconds = makeGetter("milliseconds");
          var seconds = makeGetter("seconds");
          var minutes = makeGetter("minutes");
          var hours = makeGetter("hours");
          var days = makeGetter("days");
          var months = makeGetter("months");
          var years = makeGetter("years");

          function weeks() {
            return absFloor(this.days() / 7);
          }

          var round = Math.round;
          var thresholds = {
            ss: 44, // a few seconds to seconds
            s: 45, // seconds to minute
            m: 45, // minutes to hour
            h: 22, // hours to day
            d: 26, // days to month
            M: 11 // months to year
          };

          // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
          function substituteTimeAgo(
            string,
            number,
            withoutSuffix,
            isFuture,
            locale
          ) {
            return locale.relativeTime(
              number || 1,
              !!withoutSuffix,
              string,
              isFuture
            );
          }

          function relativeTime$1(posNegDuration, withoutSuffix, locale) {
            var duration = createDuration(posNegDuration).abs();
            var seconds = round(duration.as("s"));
            var minutes = round(duration.as("m"));
            var hours = round(duration.as("h"));
            var days = round(duration.as("d"));
            var months = round(duration.as("M"));
            var years = round(duration.as("y"));

            var a = (seconds <= thresholds.ss && ["s", seconds]) ||
              (seconds < thresholds.s && ["ss", seconds]) ||
              (minutes <= 1 && ["m"]) ||
              (minutes < thresholds.m && ["mm", minutes]) ||
              (hours <= 1 && ["h"]) ||
              (hours < thresholds.h && ["hh", hours]) ||
              (days <= 1 && ["d"]) ||
              (days < thresholds.d && ["dd", days]) ||
              (months <= 1 && ["M"]) ||
              (months < thresholds.M && ["MM", months]) ||
              (years <= 1 && ["y"]) || ["yy", years];

            a[2] = withoutSuffix;
            a[3] = +posNegDuration > 0;
            a[4] = locale;
            return substituteTimeAgo.apply(null, a);
          }

          // This function allows you to set the rounding function for relative time strings
          function getSetRelativeTimeRounding(roundingFunction) {
            if (roundingFunction === undefined) {
              return round;
            }
            if (typeof roundingFunction === "function") {
              round = roundingFunction;
              return true;
            }
            return false;
          }

          // This function allows you to set a threshold for relative time strings
          function getSetRelativeTimeThreshold(threshold, limit) {
            if (thresholds[threshold] === undefined) {
              return false;
            }
            if (limit === undefined) {
              return thresholds[threshold];
            }
            thresholds[threshold] = limit;
            if (threshold === "s") {
              thresholds.ss = limit - 1;
            }
            return true;
          }

          function humanize(withSuffix) {
            if (!this.isValid()) {
              return this.localeData().invalidDate();
            }

            var locale = this.localeData();
            var output = relativeTime$1(this, !withSuffix, locale);

            if (withSuffix) {
              output = locale.pastFuture(+this, output);
            }

            return locale.postformat(output);
          }

          var abs$1 = Math.abs;

          function sign(x) {
            return (x > 0) - (x < 0) || +x;
          }

          function toISOString$1() {
            // for ISO strings we do not use the normal bubbling rules:
            //  * milliseconds bubble up until they become hours
            //  * days do not bubble at all
            //  * months bubble up until they become years
            // This is because there is no context-free conversion between hours and days
            // (think of clock changes)
            // and also not between days and months (28-31 days per month)
            if (!this.isValid()) {
              return this.localeData().invalidDate();
            }

            var seconds = abs$1(this._milliseconds) / 1000;
            var days = abs$1(this._days);
            var months = abs$1(this._months);
            var minutes, hours, years;

            // 3600 seconds -> 60 minutes -> 1 hour
            minutes = absFloor(seconds / 60);
            hours = absFloor(minutes / 60);
            seconds %= 60;
            minutes %= 60;

            // 12 months -> 1 year
            years = absFloor(months / 12);
            months %= 12;

            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
            var Y = years;
            var M = months;
            var D = days;
            var h = hours;
            var m = minutes;
            var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, "") : "";
            var total = this.asSeconds();

            if (!total) {
              // this is the same as C#'s (Noda) and python (isodate)...
              // but not other JS (goog.date)
              return "P0D";
            }

            var totalSign = total < 0 ? "-" : "";
            var ymSign = sign(this._months) !== sign(total) ? "-" : "";
            var daysSign = sign(this._days) !== sign(total) ? "-" : "";
            var hmsSign = sign(this._milliseconds) !== sign(total) ? "-" : "";

            return (
              totalSign +
              "P" +
              (Y ? ymSign + Y + "Y" : "") +
              (M ? ymSign + M + "M" : "") +
              (D ? daysSign + D + "D" : "") +
              (h || m || s ? "T" : "") +
              (h ? hmsSign + h + "H" : "") +
              (m ? hmsSign + m + "M" : "") +
              (s ? hmsSign + s + "S" : "")
            );
          }

          var proto$2 = Duration.prototype;

          proto$2.isValid = isValid$1;
          proto$2.abs = abs;
          proto$2.add = add$1;
          proto$2.subtract = subtract$1;
          proto$2.as = as;
          proto$2.asMilliseconds = asMilliseconds;
          proto$2.asSeconds = asSeconds;
          proto$2.asMinutes = asMinutes;
          proto$2.asHours = asHours;
          proto$2.asDays = asDays;
          proto$2.asWeeks = asWeeks;
          proto$2.asMonths = asMonths;
          proto$2.asYears = asYears;
          proto$2.valueOf = valueOf$1;
          proto$2._bubble = bubble;
          proto$2.clone = clone$1;
          proto$2.get = get$2;
          proto$2.milliseconds = milliseconds;
          proto$2.seconds = seconds;
          proto$2.minutes = minutes;
          proto$2.hours = hours;
          proto$2.days = days;
          proto$2.weeks = weeks;
          proto$2.months = months;
          proto$2.years = years;
          proto$2.humanize = humanize;
          proto$2.toISOString = toISOString$1;
          proto$2.toString = toISOString$1;
          proto$2.toJSON = toISOString$1;
          proto$2.locale = locale;
          proto$2.localeData = localeData;

          // Deprecations
          proto$2.toIsoString = deprecate(
            "toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
            toISOString$1
          );
          proto$2.lang = lang;

          // Side effect imports

          // FORMATTING

          addFormatToken("X", 0, 0, "unix");
          addFormatToken("x", 0, 0, "valueOf");

          // PARSING

          addRegexToken("x", matchSigned);
          addRegexToken("X", matchTimestamp);
          addParseToken("X", function(input, array, config) {
            config._d = new Date(parseFloat(input, 10) * 1000);
          });
          addParseToken("x", function(input, array, config) {
            config._d = new Date(toInt(input));
          });

          // Side effect imports

          hooks.version = "2.19.4";

          setHookCallback(createLocal);

          hooks.fn = proto;
          hooks.min = min;
          hooks.max = max;
          hooks.now = now;
          hooks.utc = createUTC;
          hooks.unix = createUnix;
          hooks.months = listMonths;
          hooks.isDate = isDate;
          hooks.locale = getSetGlobalLocale;
          hooks.invalid = createInvalid;
          hooks.duration = createDuration;
          hooks.isMoment = isMoment;
          hooks.weekdays = listWeekdays;
          hooks.parseZone = createInZone;
          hooks.localeData = getLocale;
          hooks.isDuration = isDuration;
          hooks.monthsShort = listMonthsShort;
          hooks.weekdaysMin = listWeekdaysMin;
          hooks.defineLocale = defineLocale;
          hooks.updateLocale = updateLocale;
          hooks.locales = listLocales;
          hooks.weekdaysShort = listWeekdaysShort;
          hooks.normalizeUnits = normalizeUnits;
          hooks.relativeTimeRounding = getSetRelativeTimeRounding;
          hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
          hooks.calendarFormat = getCalendarFormat;
          hooks.prototype = proto;

          return hooks;
        });

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(219)(module)));

      /***/
    },
    /* 219 */
    /***/ function(module, exports) {
      module.exports = function(module) {
        if (!module.webpackPolyfill) {
          module.deprecate = function() {};
          module.paths = [];
          // module.parent = undefined by default
          module.children = [];
          module.webpackPolyfill = 1;
        }
        return module;
      };

      /***/
    },
    /* 220 */
    /***/ function(module, exports, __webpack_require__) {
      var map = {
        "./af": 221,
        "./af.js": 221,
        "./ar": 222,
        "./ar-dz": 223,
        "./ar-dz.js": 223,
        "./ar-kw": 224,
        "./ar-kw.js": 224,
        "./ar-ly": 225,
        "./ar-ly.js": 225,
        "./ar-ma": 226,
        "./ar-ma.js": 226,
        "./ar-sa": 227,
        "./ar-sa.js": 227,
        "./ar-tn": 228,
        "./ar-tn.js": 228,
        "./ar.js": 222,
        "./az": 229,
        "./az.js": 229,
        "./be": 230,
        "./be.js": 230,
        "./bg": 231,
        "./bg.js": 231,
        "./bm": 232,
        "./bm.js": 232,
        "./bn": 233,
        "./bn.js": 233,
        "./bo": 234,
        "./bo.js": 234,
        "./br": 235,
        "./br.js": 235,
        "./bs": 236,
        "./bs.js": 236,
        "./ca": 237,
        "./ca.js": 237,
        "./cs": 238,
        "./cs.js": 238,
        "./cv": 239,
        "./cv.js": 239,
        "./cy": 240,
        "./cy.js": 240,
        "./da": 241,
        "./da.js": 241,
        "./de": 242,
        "./de-at": 243,
        "./de-at.js": 243,
        "./de-ch": 244,
        "./de-ch.js": 244,
        "./de.js": 242,
        "./dv": 245,
        "./dv.js": 245,
        "./el": 246,
        "./el.js": 246,
        "./en-au": 247,
        "./en-au.js": 247,
        "./en-ca": 248,
        "./en-ca.js": 248,
        "./en-gb": 249,
        "./en-gb.js": 249,
        "./en-ie": 250,
        "./en-ie.js": 250,
        "./en-nz": 251,
        "./en-nz.js": 251,
        "./eo": 252,
        "./eo.js": 252,
        "./es": 253,
        "./es-do": 254,
        "./es-do.js": 254,
        "./es-us": 255,
        "./es-us.js": 255,
        "./es.js": 253,
        "./et": 256,
        "./et.js": 256,
        "./eu": 257,
        "./eu.js": 257,
        "./fa": 258,
        "./fa.js": 258,
        "./fi": 259,
        "./fi.js": 259,
        "./fo": 260,
        "./fo.js": 260,
        "./fr": 261,
        "./fr-ca": 262,
        "./fr-ca.js": 262,
        "./fr-ch": 263,
        "./fr-ch.js": 263,
        "./fr.js": 261,
        "./fy": 264,
        "./fy.js": 264,
        "./gd": 265,
        "./gd.js": 265,
        "./gl": 266,
        "./gl.js": 266,
        "./gom-latn": 267,
        "./gom-latn.js": 267,
        "./gu": 268,
        "./gu.js": 268,
        "./he": 269,
        "./he.js": 269,
        "./hi": 270,
        "./hi.js": 270,
        "./hr": 271,
        "./hr.js": 271,
        "./hu": 272,
        "./hu.js": 272,
        "./hy-am": 273,
        "./hy-am.js": 273,
        "./id": 274,
        "./id.js": 274,
        "./is": 275,
        "./is.js": 275,
        "./it": 276,
        "./it.js": 276,
        "./ja": 277,
        "./ja.js": 277,
        "./jv": 278,
        "./jv.js": 278,
        "./ka": 279,
        "./ka.js": 279,
        "./kk": 280,
        "./kk.js": 280,
        "./km": 281,
        "./km.js": 281,
        "./kn": 282,
        "./kn.js": 282,
        "./ko": 283,
        "./ko.js": 283,
        "./ky": 284,
        "./ky.js": 284,
        "./lb": 285,
        "./lb.js": 285,
        "./lo": 286,
        "./lo.js": 286,
        "./lt": 287,
        "./lt.js": 287,
        "./lv": 288,
        "./lv.js": 288,
        "./me": 289,
        "./me.js": 289,
        "./mi": 290,
        "./mi.js": 290,
        "./mk": 291,
        "./mk.js": 291,
        "./ml": 292,
        "./ml.js": 292,
        "./mr": 293,
        "./mr.js": 293,
        "./ms": 294,
        "./ms-my": 295,
        "./ms-my.js": 295,
        "./ms.js": 294,
        "./my": 296,
        "./my.js": 296,
        "./nb": 297,
        "./nb.js": 297,
        "./ne": 298,
        "./ne.js": 298,
        "./nl": 299,
        "./nl-be": 300,
        "./nl-be.js": 300,
        "./nl.js": 299,
        "./nn": 301,
        "./nn.js": 301,
        "./pa-in": 302,
        "./pa-in.js": 302,
        "./pl": 303,
        "./pl.js": 303,
        "./pt": 304,
        "./pt-br": 305,
        "./pt-br.js": 305,
        "./pt.js": 304,
        "./ro": 306,
        "./ro.js": 306,
        "./ru": 307,
        "./ru.js": 307,
        "./sd": 308,
        "./sd.js": 308,
        "./se": 309,
        "./se.js": 309,
        "./si": 310,
        "./si.js": 310,
        "./sk": 311,
        "./sk.js": 311,
        "./sl": 312,
        "./sl.js": 312,
        "./sq": 313,
        "./sq.js": 313,
        "./sr": 314,
        "./sr-cyrl": 315,
        "./sr-cyrl.js": 315,
        "./sr.js": 314,
        "./ss": 316,
        "./ss.js": 316,
        "./sv": 317,
        "./sv.js": 317,
        "./sw": 318,
        "./sw.js": 318,
        "./ta": 319,
        "./ta.js": 319,
        "./te": 320,
        "./te.js": 320,
        "./tet": 321,
        "./tet.js": 321,
        "./th": 322,
        "./th.js": 322,
        "./tl-ph": 323,
        "./tl-ph.js": 323,
        "./tlh": 324,
        "./tlh.js": 324,
        "./tr": 325,
        "./tr.js": 325,
        "./tzl": 326,
        "./tzl.js": 326,
        "./tzm": 327,
        "./tzm-latn": 328,
        "./tzm-latn.js": 328,
        "./tzm.js": 327,
        "./uk": 329,
        "./uk.js": 329,
        "./ur": 330,
        "./ur.js": 330,
        "./uz": 331,
        "./uz-latn": 332,
        "./uz-latn.js": 332,
        "./uz.js": 331,
        "./vi": 333,
        "./vi.js": 333,
        "./x-pseudo": 334,
        "./x-pseudo.js": 334,
        "./yo": 335,
        "./yo.js": 335,
        "./zh-cn": 336,
        "./zh-cn.js": 336,
        "./zh-hk": 337,
        "./zh-hk.js": 337,
        "./zh-tw": 338,
        "./zh-tw.js": 338
      };
      function webpackContext(req) {
        return __webpack_require__(webpackContextResolve(req));
      }
      function webpackContextResolve(req) {
        return (
          map[req] ||
          (function() {
            throw new Error("Cannot find module '" + req + "'.");
          })()
        );
      }
      webpackContext.keys = function webpackContextKeys() {
        return Object.keys(map);
      };
      webpackContext.resolve = webpackContextResolve;
      module.exports = webpackContext;
      webpackContext.id = 220;

      /***/
    },
    /* 221 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Afrikaans [af]
      //! author : Werner Mollentze : https://github.com/wernerm

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var af = moment.defineLocale("af", {
          months: "Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember".split(
            "_"
          ),
          monthsShort: "Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des".split(
            "_"
          ),
          weekdays: "Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag".split(
            "_"
          ),
          weekdaysShort: "Son_Maa_Din_Woe_Don_Vry_Sat".split("_"),
          weekdaysMin: "So_Ma_Di_Wo_Do_Vr_Sa".split("_"),
          meridiemParse: /vm|nm/i,
          isPM: function(input) {
            return /^nm$/i.test(input);
          },
          meridiem: function(hours, minutes, isLower) {
            if (hours < 12) {
              return isLower ? "vm" : "VM";
            } else {
              return isLower ? "nm" : "NM";
            }
          },
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Vandag om] LT",
            nextDay: "[Môre om] LT",
            nextWeek: "dddd [om] LT",
            lastDay: "[Gister om] LT",
            lastWeek: "[Laas] dddd [om] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "oor %s",
            past: "%s gelede",
            s: "'n paar sekondes",
            m: "'n minuut",
            mm: "%d minute",
            h: "'n uur",
            hh: "%d ure",
            d: "'n dag",
            dd: "%d dae",
            M: "'n maand",
            MM: "%d maande",
            y: "'n jaar",
            yy: "%d jaar"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
          ordinal: function(number) {
            return (
              number +
              (number === 1 || number === 8 || number >= 20 ? "ste" : "de")
            ); // Thanks to Joris Röling : https://github.com/jjupiter
          },
          week: {
            dow: 1, // Maandag is die eerste dag van die week.
            doy: 4 // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
          }
        });

        return af;
      });

      /***/
    },
    /* 222 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Arabic [ar]
      //! author : Abdel Said: https://github.com/abdelsaid
      //! author : Ahmed Elkhatib
      //! author : forabi https://github.com/forabi

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var symbolMap = {
          "1": "١",
          "2": "٢",
          "3": "٣",
          "4": "٤",
          "5": "٥",
          "6": "٦",
          "7": "٧",
          "8": "٨",
          "9": "٩",
          "0": "٠"
        };
        var numberMap = {
          "١": "1",
          "٢": "2",
          "٣": "3",
          "٤": "4",
          "٥": "5",
          "٦": "6",
          "٧": "7",
          "٨": "8",
          "٩": "9",
          "٠": "0"
        };
        var pluralForm = function(n) {
          return n === 0
            ? 0
            : n === 1
              ? 1
              : n === 2
                ? 2
                : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
        };
        var plurals = {
          s: [
            "أقل من ثانية",
            "ثانية واحدة",
            ["ثانيتان", "ثانيتين"],
            "%d ثوان",
            "%d ثانية",
            "%d ثانية"
          ],
          m: [
            "أقل من دقيقة",
            "دقيقة واحدة",
            ["دقيقتان", "دقيقتين"],
            "%d دقائق",
            "%d دقيقة",
            "%d دقيقة"
          ],
          h: [
            "أقل من ساعة",
            "ساعة واحدة",
            ["ساعتان", "ساعتين"],
            "%d ساعات",
            "%d ساعة",
            "%d ساعة"
          ],
          d: [
            "أقل من يوم",
            "يوم واحد",
            ["يومان", "يومين"],
            "%d أيام",
            "%d يومًا",
            "%d يوم"
          ],
          M: [
            "أقل من شهر",
            "شهر واحد",
            ["شهران", "شهرين"],
            "%d أشهر",
            "%d شهرا",
            "%d شهر"
          ],
          y: [
            "أقل من عام",
            "عام واحد",
            ["عامان", "عامين"],
            "%d أعوام",
            "%d عامًا",
            "%d عام"
          ]
        };
        var pluralize = function(u) {
          return function(number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
              str = plurals[u][pluralForm(number)];
            if (f === 2) {
              str = str[withoutSuffix ? 0 : 1];
            }
            return str.replace(/%d/i, number);
          };
        };
        var months = [
          "كانون الثاني يناير",
          "شباط فبراير",
          "آذار مارس",
          "نيسان أبريل",
          "أيار مايو",
          "حزيران يونيو",
          "تموز يوليو",
          "آب أغسطس",
          "أيلول سبتمبر",
          "تشرين الأول أكتوبر",
          "تشرين الثاني نوفمبر",
          "كانون الأول ديسمبر"
        ];

        var ar = moment.defineLocale("ar", {
          months: months,
          monthsShort: months,
          weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split(
            "_"
          ),
          weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
          weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "D/\u200FM/\u200FYYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          meridiemParse: /ص|م/,
          isPM: function(input) {
            return "م" === input;
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 12) {
              return "ص";
            } else {
              return "م";
            }
          },
          calendar: {
            sameDay: "[اليوم عند الساعة] LT",
            nextDay: "[غدًا عند الساعة] LT",
            nextWeek: "dddd [عند الساعة] LT",
            lastDay: "[أمس عند الساعة] LT",
            lastWeek: "dddd [عند الساعة] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "بعد %s",
            past: "منذ %s",
            s: pluralize("s"),
            m: pluralize("m"),
            mm: pluralize("m"),
            h: pluralize("h"),
            hh: pluralize("h"),
            d: pluralize("d"),
            dd: pluralize("d"),
            M: pluralize("M"),
            MM: pluralize("M"),
            y: pluralize("y"),
            yy: pluralize("y")
          },
          preparse: function(string) {
            return string
              .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function(match) {
                return numberMap[match];
              })
              .replace(/،/g, ",");
          },
          postformat: function(string) {
            return string
              .replace(/\d/g, function(match) {
                return symbolMap[match];
              })
              .replace(/,/g, "،");
          },
          week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return ar;
      });

      /***/
    },
    /* 223 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Arabic (Algeria) [ar-dz]
      //! author : Noureddine LOUAHEDJ : https://github.com/noureddineme

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var arDz = moment.defineLocale("ar-dz", {
          months: "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split(
            "_"
          ),
          monthsShort: "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split(
            "_"
          ),
          weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split(
            "_"
          ),
          weekdaysShort: "احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
          weekdaysMin: "أح_إث_ثلا_أر_خم_جم_سب".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[اليوم على الساعة] LT",
            nextDay: "[غدا على الساعة] LT",
            nextWeek: "dddd [على الساعة] LT",
            lastDay: "[أمس على الساعة] LT",
            lastWeek: "dddd [على الساعة] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "في %s",
            past: "منذ %s",
            s: "ثوان",
            m: "دقيقة",
            mm: "%d دقائق",
            h: "ساعة",
            hh: "%d ساعات",
            d: "يوم",
            dd: "%d أيام",
            M: "شهر",
            MM: "%d أشهر",
            y: "سنة",
            yy: "%d سنوات"
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 4 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return arDz;
      });

      /***/
    },
    /* 224 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Arabic (Kuwait) [ar-kw]
      //! author : Nusret Parlak: https://github.com/nusretparlak

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var arKw = moment.defineLocale("ar-kw", {
          months: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split(
            "_"
          ),
          monthsShort: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split(
            "_"
          ),
          weekdays: "الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split(
            "_"
          ),
          weekdaysShort: "احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
          weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[اليوم على الساعة] LT",
            nextDay: "[غدا على الساعة] LT",
            nextWeek: "dddd [على الساعة] LT",
            lastDay: "[أمس على الساعة] LT",
            lastWeek: "dddd [على الساعة] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "في %s",
            past: "منذ %s",
            s: "ثوان",
            m: "دقيقة",
            mm: "%d دقائق",
            h: "ساعة",
            hh: "%d ساعات",
            d: "يوم",
            dd: "%d أيام",
            M: "شهر",
            MM: "%d أشهر",
            y: "سنة",
            yy: "%d سنوات"
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 12 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return arKw;
      });

      /***/
    },
    /* 225 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Arabic (Lybia) [ar-ly]
      //! author : Ali Hmer: https://github.com/kikoanis

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var symbolMap = {
          "1": "1",
          "2": "2",
          "3": "3",
          "4": "4",
          "5": "5",
          "6": "6",
          "7": "7",
          "8": "8",
          "9": "9",
          "0": "0"
        };
        var pluralForm = function(n) {
          return n === 0
            ? 0
            : n === 1
              ? 1
              : n === 2
                ? 2
                : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
        };
        var plurals = {
          s: [
            "أقل من ثانية",
            "ثانية واحدة",
            ["ثانيتان", "ثانيتين"],
            "%d ثوان",
            "%d ثانية",
            "%d ثانية"
          ],
          m: [
            "أقل من دقيقة",
            "دقيقة واحدة",
            ["دقيقتان", "دقيقتين"],
            "%d دقائق",
            "%d دقيقة",
            "%d دقيقة"
          ],
          h: [
            "أقل من ساعة",
            "ساعة واحدة",
            ["ساعتان", "ساعتين"],
            "%d ساعات",
            "%d ساعة",
            "%d ساعة"
          ],
          d: [
            "أقل من يوم",
            "يوم واحد",
            ["يومان", "يومين"],
            "%d أيام",
            "%d يومًا",
            "%d يوم"
          ],
          M: [
            "أقل من شهر",
            "شهر واحد",
            ["شهران", "شهرين"],
            "%d أشهر",
            "%d شهرا",
            "%d شهر"
          ],
          y: [
            "أقل من عام",
            "عام واحد",
            ["عامان", "عامين"],
            "%d أعوام",
            "%d عامًا",
            "%d عام"
          ]
        };
        var pluralize = function(u) {
          return function(number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
              str = plurals[u][pluralForm(number)];
            if (f === 2) {
              str = str[withoutSuffix ? 0 : 1];
            }
            return str.replace(/%d/i, number);
          };
        };
        var months = [
          "يناير",
          "فبراير",
          "مارس",
          "أبريل",
          "مايو",
          "يونيو",
          "يوليو",
          "أغسطس",
          "سبتمبر",
          "أكتوبر",
          "نوفمبر",
          "ديسمبر"
        ];

        var arLy = moment.defineLocale("ar-ly", {
          months: months,
          monthsShort: months,
          weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split(
            "_"
          ),
          weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
          weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "D/\u200FM/\u200FYYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          meridiemParse: /ص|م/,
          isPM: function(input) {
            return "م" === input;
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 12) {
              return "ص";
            } else {
              return "م";
            }
          },
          calendar: {
            sameDay: "[اليوم عند الساعة] LT",
            nextDay: "[غدًا عند الساعة] LT",
            nextWeek: "dddd [عند الساعة] LT",
            lastDay: "[أمس عند الساعة] LT",
            lastWeek: "dddd [عند الساعة] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "بعد %s",
            past: "منذ %s",
            s: pluralize("s"),
            m: pluralize("m"),
            mm: pluralize("m"),
            h: pluralize("h"),
            hh: pluralize("h"),
            d: pluralize("d"),
            dd: pluralize("d"),
            M: pluralize("M"),
            MM: pluralize("M"),
            y: pluralize("y"),
            yy: pluralize("y")
          },
          preparse: function(string) {
            return string.replace(/،/g, ",");
          },
          postformat: function(string) {
            return string
              .replace(/\d/g, function(match) {
                return symbolMap[match];
              })
              .replace(/,/g, "،");
          },
          week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return arLy;
      });

      /***/
    },
    /* 226 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Arabic (Morocco) [ar-ma]
      //! author : ElFadili Yassine : https://github.com/ElFadiliY
      //! author : Abdel Said : https://github.com/abdelsaid

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var arMa = moment.defineLocale("ar-ma", {
          months: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split(
            "_"
          ),
          monthsShort: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split(
            "_"
          ),
          weekdays: "الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split(
            "_"
          ),
          weekdaysShort: "احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
          weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[اليوم على الساعة] LT",
            nextDay: "[غدا على الساعة] LT",
            nextWeek: "dddd [على الساعة] LT",
            lastDay: "[أمس على الساعة] LT",
            lastWeek: "dddd [على الساعة] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "في %s",
            past: "منذ %s",
            s: "ثوان",
            m: "دقيقة",
            mm: "%d دقائق",
            h: "ساعة",
            hh: "%d ساعات",
            d: "يوم",
            dd: "%d أيام",
            M: "شهر",
            MM: "%d أشهر",
            y: "سنة",
            yy: "%d سنوات"
          },
          week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return arMa;
      });

      /***/
    },
    /* 227 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Arabic (Saudi Arabia) [ar-sa]
      //! author : Suhail Alkowaileet : https://github.com/xsoh

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var symbolMap = {
          "1": "١",
          "2": "٢",
          "3": "٣",
          "4": "٤",
          "5": "٥",
          "6": "٦",
          "7": "٧",
          "8": "٨",
          "9": "٩",
          "0": "٠"
        };
        var numberMap = {
          "١": "1",
          "٢": "2",
          "٣": "3",
          "٤": "4",
          "٥": "5",
          "٦": "6",
          "٧": "7",
          "٨": "8",
          "٩": "9",
          "٠": "0"
        };

        var arSa = moment.defineLocale("ar-sa", {
          months: "يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split(
            "_"
          ),
          monthsShort: "يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split(
            "_"
          ),
          weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split(
            "_"
          ),
          weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
          weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          meridiemParse: /ص|م/,
          isPM: function(input) {
            return "م" === input;
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 12) {
              return "ص";
            } else {
              return "م";
            }
          },
          calendar: {
            sameDay: "[اليوم على الساعة] LT",
            nextDay: "[غدا على الساعة] LT",
            nextWeek: "dddd [على الساعة] LT",
            lastDay: "[أمس على الساعة] LT",
            lastWeek: "dddd [على الساعة] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "في %s",
            past: "منذ %s",
            s: "ثوان",
            m: "دقيقة",
            mm: "%d دقائق",
            h: "ساعة",
            hh: "%d ساعات",
            d: "يوم",
            dd: "%d أيام",
            M: "شهر",
            MM: "%d أشهر",
            y: "سنة",
            yy: "%d سنوات"
          },
          preparse: function(string) {
            return string
              .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function(match) {
                return numberMap[match];
              })
              .replace(/،/g, ",");
          },
          postformat: function(string) {
            return string
              .replace(/\d/g, function(match) {
                return symbolMap[match];
              })
              .replace(/,/g, "،");
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return arSa;
      });

      /***/
    },
    /* 228 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale  :  Arabic (Tunisia) [ar-tn]
      //! author : Nader Toukabri : https://github.com/naderio

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var arTn = moment.defineLocale("ar-tn", {
          months: "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split(
            "_"
          ),
          monthsShort: "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split(
            "_"
          ),
          weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split(
            "_"
          ),
          weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
          weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[اليوم على الساعة] LT",
            nextDay: "[غدا على الساعة] LT",
            nextWeek: "dddd [على الساعة] LT",
            lastDay: "[أمس على الساعة] LT",
            lastWeek: "dddd [على الساعة] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "في %s",
            past: "منذ %s",
            s: "ثوان",
            m: "دقيقة",
            mm: "%d دقائق",
            h: "ساعة",
            hh: "%d ساعات",
            d: "يوم",
            dd: "%d أيام",
            M: "شهر",
            MM: "%d أشهر",
            y: "سنة",
            yy: "%d سنوات"
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return arTn;
      });

      /***/
    },
    /* 229 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Azerbaijani [az]
      //! author : topchiyev : https://github.com/topchiyev

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var suffixes = {
          1: "-inci",
          5: "-inci",
          8: "-inci",
          70: "-inci",
          80: "-inci",
          2: "-nci",
          7: "-nci",
          20: "-nci",
          50: "-nci",
          3: "-üncü",
          4: "-üncü",
          100: "-üncü",
          6: "-ncı",
          9: "-uncu",
          10: "-uncu",
          30: "-uncu",
          60: "-ıncı",
          90: "-ıncı"
        };

        var az = moment.defineLocale("az", {
          months: "yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr".split(
            "_"
          ),
          monthsShort: "yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek".split(
            "_"
          ),
          weekdays: "Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə".split(
            "_"
          ),
          weekdaysShort: "Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən".split("_"),
          weekdaysMin: "Bz_BE_ÇA_Çə_CA_Cü_Şə".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[bugün saat] LT",
            nextDay: "[sabah saat] LT",
            nextWeek: "[gələn həftə] dddd [saat] LT",
            lastDay: "[dünən] LT",
            lastWeek: "[keçən həftə] dddd [saat] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s sonra",
            past: "%s əvvəl",
            s: "birneçə saniyyə",
            m: "bir dəqiqə",
            mm: "%d dəqiqə",
            h: "bir saat",
            hh: "%d saat",
            d: "bir gün",
            dd: "%d gün",
            M: "bir ay",
            MM: "%d ay",
            y: "bir il",
            yy: "%d il"
          },
          meridiemParse: /gecə|səhər|gündüz|axşam/,
          isPM: function(input) {
            return /^(gündüz|axşam)$/.test(input);
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 4) {
              return "gecə";
            } else if (hour < 12) {
              return "səhər";
            } else if (hour < 17) {
              return "gündüz";
            } else {
              return "axşam";
            }
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
          ordinal: function(number) {
            if (number === 0) {
              // special case for zero
              return number + "-ıncı";
            }
            var a = number % 10,
              b = number % 100 - a,
              c = number >= 100 ? 100 : null;
            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return az;
      });

      /***/
    },
    /* 230 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Belarusian [be]
      //! author : Dmitry Demidov : https://github.com/demidov91
      //! author: Praleska: http://praleska.pro/
      //! Author : Menelion Elensúle : https://github.com/Oire

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        function plural(word, num) {
          var forms = word.split("_");
          return num % 10 === 1 && num % 100 !== 11
            ? forms[0]
            : num % 10 >= 2 &&
              num % 10 <= 4 &&
              (num % 100 < 10 || num % 100 >= 20)
              ? forms[1]
              : forms[2];
        }
        function relativeTimeWithPlural(number, withoutSuffix, key) {
          var format = {
            mm: withoutSuffix
              ? "хвіліна_хвіліны_хвілін"
              : "хвіліну_хвіліны_хвілін",
            hh: withoutSuffix
              ? "гадзіна_гадзіны_гадзін"
              : "гадзіну_гадзіны_гадзін",
            dd: "дзень_дні_дзён",
            MM: "месяц_месяцы_месяцаў",
            yy: "год_гады_гадоў"
          };
          if (key === "m") {
            return withoutSuffix ? "хвіліна" : "хвіліну";
          } else if (key === "h") {
            return withoutSuffix ? "гадзіна" : "гадзіну";
          } else {
            return number + " " + plural(format[key], +number);
          }
        }

        var be = moment.defineLocale("be", {
          months: {
            format: "студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня".split(
              "_"
            ),
            standalone: "студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань".split(
              "_"
            )
          },
          monthsShort: "студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж".split(
            "_"
          ),
          weekdays: {
            format: "нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу".split(
              "_"
            ),
            standalone: "нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота".split(
              "_"
            ),
            isFormat: /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/
          },
          weekdaysShort: "нд_пн_ат_ср_чц_пт_сб".split("_"),
          weekdaysMin: "нд_пн_ат_ср_чц_пт_сб".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY г.",
            LLL: "D MMMM YYYY г., HH:mm",
            LLLL: "dddd, D MMMM YYYY г., HH:mm"
          },
          calendar: {
            sameDay: "[Сёння ў] LT",
            nextDay: "[Заўтра ў] LT",
            lastDay: "[Учора ў] LT",
            nextWeek: function() {
              return "[У] dddd [ў] LT";
            },
            lastWeek: function() {
              switch (this.day()) {
                case 0:
                case 3:
                case 5:
                case 6:
                  return "[У мінулую] dddd [ў] LT";
                case 1:
                case 2:
                case 4:
                  return "[У мінулы] dddd [ў] LT";
              }
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "праз %s",
            past: "%s таму",
            s: "некалькі секунд",
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: relativeTimeWithPlural,
            hh: relativeTimeWithPlural,
            d: "дзень",
            dd: relativeTimeWithPlural,
            M: "месяц",
            MM: relativeTimeWithPlural,
            y: "год",
            yy: relativeTimeWithPlural
          },
          meridiemParse: /ночы|раніцы|дня|вечара/,
          isPM: function(input) {
            return /^(дня|вечара)$/.test(input);
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 4) {
              return "ночы";
            } else if (hour < 12) {
              return "раніцы";
            } else if (hour < 17) {
              return "дня";
            } else {
              return "вечара";
            }
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
          ordinal: function(number, period) {
            switch (period) {
              case "M":
              case "d":
              case "DDD":
              case "w":
              case "W":
                return (number % 10 === 2 || number % 10 === 3) &&
                  (number % 100 !== 12 && number % 100 !== 13)
                  ? number + "-і"
                  : number + "-ы";
              case "D":
                return number + "-га";
              default:
                return number;
            }
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return be;
      });

      /***/
    },
    /* 231 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Bulgarian [bg]
      //! author : Krasen Borisov : https://github.com/kraz

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var bg = moment.defineLocale("bg", {
          months: "януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември".split(
            "_"
          ),
          monthsShort: "янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек".split(
            "_"
          ),
          weekdays: "неделя_понеделник_вторник_сряда_четвъртък_петък_събота".split(
            "_"
          ),
          weekdaysShort: "нед_пон_вто_сря_чет_пет_съб".split("_"),
          weekdaysMin: "нд_пн_вт_ср_чт_пт_сб".split("_"),
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "D.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY H:mm",
            LLLL: "dddd, D MMMM YYYY H:mm"
          },
          calendar: {
            sameDay: "[Днес в] LT",
            nextDay: "[Утре в] LT",
            nextWeek: "dddd [в] LT",
            lastDay: "[Вчера в] LT",
            lastWeek: function() {
              switch (this.day()) {
                case 0:
                case 3:
                case 6:
                  return "[В изминалата] dddd [в] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[В изминалия] dddd [в] LT";
              }
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "след %s",
            past: "преди %s",
            s: "няколко секунди",
            m: "минута",
            mm: "%d минути",
            h: "час",
            hh: "%d часа",
            d: "ден",
            dd: "%d дни",
            M: "месец",
            MM: "%d месеца",
            y: "година",
            yy: "%d години"
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
          ordinal: function(number) {
            var lastDigit = number % 10,
              last2Digits = number % 100;
            if (number === 0) {
              return number + "-ев";
            } else if (last2Digits === 0) {
              return number + "-ен";
            } else if (last2Digits > 10 && last2Digits < 20) {
              return number + "-ти";
            } else if (lastDigit === 1) {
              return number + "-ви";
            } else if (lastDigit === 2) {
              return number + "-ри";
            } else if (lastDigit === 7 || lastDigit === 8) {
              return number + "-ми";
            } else {
              return number + "-ти";
            }
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return bg;
      });

      /***/
    },
    /* 232 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Bambara [bm]
      //! author : Estelle Comment : https://github.com/estellecomment

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        // Language contact person : Abdoufata Kane : https://github.com/abdoufata

        var bm = moment.defineLocale("bm", {
          months: "Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo".split(
            "_"
          ),
          monthsShort: "Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des".split(
            "_"
          ),
          weekdays: "Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri".split("_"),
          weekdaysShort: "Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib".split("_"),
          weekdaysMin: "Ka_Nt_Ta_Ar_Al_Ju_Si".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "MMMM [tile] D [san] YYYY",
            LLL: "MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm",
            LLLL: "dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm"
          },
          calendar: {
            sameDay: "[Bi lɛrɛ] LT",
            nextDay: "[Sini lɛrɛ] LT",
            nextWeek: "dddd [don lɛrɛ] LT",
            lastDay: "[Kunu lɛrɛ] LT",
            lastWeek: "dddd [tɛmɛnen lɛrɛ] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s kɔnɔ",
            past: "a bɛ %s bɔ",
            s: "sanga dama dama",
            m: "miniti kelen",
            mm: "miniti %d",
            h: "lɛrɛ kelen",
            hh: "lɛrɛ %d",
            d: "tile kelen",
            dd: "tile %d",
            M: "kalo kelen",
            MM: "kalo %d",
            y: "san kelen",
            yy: "san %d"
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return bm;
      });

      /***/
    },
    /* 233 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Bengali [bn]
      //! author : Kaushik Gandhi : https://github.com/kaushikgandhi

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var symbolMap = {
          "1": "১",
          "2": "২",
          "3": "৩",
          "4": "৪",
          "5": "৫",
          "6": "৬",
          "7": "৭",
          "8": "৮",
          "9": "৯",
          "0": "০"
        };
        var numberMap = {
          "১": "1",
          "২": "2",
          "৩": "3",
          "৪": "4",
          "৫": "5",
          "৬": "6",
          "৭": "7",
          "৮": "8",
          "৯": "9",
          "০": "0"
        };

        var bn = moment.defineLocale("bn", {
          months: "জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর".split(
            "_"
          ),
          monthsShort: "জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে".split(
            "_"
          ),
          weekdays: "রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার".split(
            "_"
          ),
          weekdaysShort: "রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি".split("_"),
          weekdaysMin: "রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি".split("_"),
          longDateFormat: {
            LT: "A h:mm সময়",
            LTS: "A h:mm:ss সময়",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm সময়",
            LLLL: "dddd, D MMMM YYYY, A h:mm সময়"
          },
          calendar: {
            sameDay: "[আজ] LT",
            nextDay: "[আগামীকাল] LT",
            nextWeek: "dddd, LT",
            lastDay: "[গতকাল] LT",
            lastWeek: "[গত] dddd, LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s পরে",
            past: "%s আগে",
            s: "কয়েক সেকেন্ড",
            m: "এক মিনিট",
            mm: "%d মিনিট",
            h: "এক ঘন্টা",
            hh: "%d ঘন্টা",
            d: "এক দিন",
            dd: "%d দিন",
            M: "এক মাস",
            MM: "%d মাস",
            y: "এক বছর",
            yy: "%d বছর"
          },
          preparse: function(string) {
            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function(match) {
              return numberMap[match];
            });
          },
          postformat: function(string) {
            return string.replace(/\d/g, function(match) {
              return symbolMap[match];
            });
          },
          meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (
              (meridiem === "রাত" && hour >= 4) ||
              (meridiem === "দুপুর" && hour < 5) ||
              meridiem === "বিকাল"
            ) {
              return hour + 12;
            } else {
              return hour;
            }
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 4) {
              return "রাত";
            } else if (hour < 10) {
              return "সকাল";
            } else if (hour < 17) {
              return "দুপুর";
            } else if (hour < 20) {
              return "বিকাল";
            } else {
              return "রাত";
            }
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return bn;
      });

      /***/
    },
    /* 234 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Tibetan [bo]
      //! author : Thupten N. Chakrishar : https://github.com/vajradog

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var symbolMap = {
          "1": "༡",
          "2": "༢",
          "3": "༣",
          "4": "༤",
          "5": "༥",
          "6": "༦",
          "7": "༧",
          "8": "༨",
          "9": "༩",
          "0": "༠"
        };
        var numberMap = {
          "༡": "1",
          "༢": "2",
          "༣": "3",
          "༤": "4",
          "༥": "5",
          "༦": "6",
          "༧": "7",
          "༨": "8",
          "༩": "9",
          "༠": "0"
        };

        var bo = moment.defineLocale("bo", {
          months: "ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ".split(
            "_"
          ),
          monthsShort: "ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ".split(
            "_"
          ),
          weekdays: "གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་".split(
            "_"
          ),
          weekdaysShort: "ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་".split(
            "_"
          ),
          weekdaysMin: "ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་".split(
            "_"
          ),
          longDateFormat: {
            LT: "A h:mm",
            LTS: "A h:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm",
            LLLL: "dddd, D MMMM YYYY, A h:mm"
          },
          calendar: {
            sameDay: "[དི་རིང] LT",
            nextDay: "[སང་ཉིན] LT",
            nextWeek: "[བདུན་ཕྲག་རྗེས་མ], LT",
            lastDay: "[ཁ་སང] LT",
            lastWeek: "[བདུན་ཕྲག་མཐའ་མ] dddd, LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s ལ་",
            past: "%s སྔན་ལ",
            s: "ལམ་སང",
            m: "སྐར་མ་གཅིག",
            mm: "%d སྐར་མ",
            h: "ཆུ་ཚོད་གཅིག",
            hh: "%d ཆུ་ཚོད",
            d: "ཉིན་གཅིག",
            dd: "%d ཉིན་",
            M: "ཟླ་བ་གཅིག",
            MM: "%d ཟླ་བ",
            y: "ལོ་གཅིག",
            yy: "%d ལོ"
          },
          preparse: function(string) {
            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function(match) {
              return numberMap[match];
            });
          },
          postformat: function(string) {
            return string.replace(/\d/g, function(match) {
              return symbolMap[match];
            });
          },
          meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (
              (meridiem === "མཚན་མོ" && hour >= 4) ||
              (meridiem === "ཉིན་གུང" && hour < 5) ||
              meridiem === "དགོང་དག"
            ) {
              return hour + 12;
            } else {
              return hour;
            }
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 4) {
              return "མཚན་མོ";
            } else if (hour < 10) {
              return "ཞོགས་ཀས";
            } else if (hour < 17) {
              return "ཉིན་གུང";
            } else if (hour < 20) {
              return "དགོང་དག";
            } else {
              return "མཚན་མོ";
            }
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return bo;
      });

      /***/
    },
    /* 235 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Breton [br]
      //! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        function relativeTimeWithMutation(number, withoutSuffix, key) {
          var format = {
            mm: "munutenn",
            MM: "miz",
            dd: "devezh"
          };
          return number + " " + mutation(format[key], number);
        }
        function specialMutationForYears(number) {
          switch (lastNumber(number)) {
            case 1:
            case 3:
            case 4:
            case 5:
            case 9:
              return number + " bloaz";
            default:
              return number + " vloaz";
          }
        }
        function lastNumber(number) {
          if (number > 9) {
            return lastNumber(number % 10);
          }
          return number;
        }
        function mutation(text, number) {
          if (number === 2) {
            return softMutation(text);
          }
          return text;
        }
        function softMutation(text) {
          var mutationTable = {
            m: "v",
            b: "v",
            d: "z"
          };
          if (mutationTable[text.charAt(0)] === undefined) {
            return text;
          }
          return mutationTable[text.charAt(0)] + text.substring(1);
        }

        var br = moment.defineLocale("br", {
          months: "Genver_C'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu".split(
            "_"
          ),
          monthsShort: "Gen_C'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker".split(
            "_"
          ),
          weekdays: "Sul_Lun_Meurzh_Merc'her_Yaou_Gwener_Sadorn".split("_"),
          weekdaysShort: "Sul_Lun_Meu_Mer_Yao_Gwe_Sad".split("_"),
          weekdaysMin: "Su_Lu_Me_Mer_Ya_Gw_Sa".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "h[e]mm A",
            LTS: "h[e]mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D [a viz] MMMM YYYY",
            LLL: "D [a viz] MMMM YYYY h[e]mm A",
            LLLL: "dddd, D [a viz] MMMM YYYY h[e]mm A"
          },
          calendar: {
            sameDay: "[Hiziv da] LT",
            nextDay: "[Warc'hoazh da] LT",
            nextWeek: "dddd [da] LT",
            lastDay: "[Dec'h da] LT",
            lastWeek: "dddd [paset da] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "a-benn %s",
            past: "%s 'zo",
            s: "un nebeud segondennoù",
            m: "ur vunutenn",
            mm: relativeTimeWithMutation,
            h: "un eur",
            hh: "%d eur",
            d: "un devezh",
            dd: relativeTimeWithMutation,
            M: "ur miz",
            MM: relativeTimeWithMutation,
            y: "ur bloaz",
            yy: specialMutationForYears
          },
          dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
          ordinal: function(number) {
            var output = number === 1 ? "añ" : "vet";
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return br;
      });

      /***/
    },
    /* 236 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Bosnian [bs]
      //! author : Nedim Cholich : https://github.com/frontyard
      //! based on (hr) translation by Bojan Marković

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        function translate(number, withoutSuffix, key) {
          var result = number + " ";
          switch (key) {
            case "m":
              return withoutSuffix ? "jedna minuta" : "jedne minute";
            case "mm":
              if (number === 1) {
                result += "minuta";
              } else if (number === 2 || number === 3 || number === 4) {
                result += "minute";
              } else {
                result += "minuta";
              }
              return result;
            case "h":
              return withoutSuffix ? "jedan sat" : "jednog sata";
            case "hh":
              if (number === 1) {
                result += "sat";
              } else if (number === 2 || number === 3 || number === 4) {
                result += "sata";
              } else {
                result += "sati";
              }
              return result;
            case "dd":
              if (number === 1) {
                result += "dan";
              } else {
                result += "dana";
              }
              return result;
            case "MM":
              if (number === 1) {
                result += "mjesec";
              } else if (number === 2 || number === 3 || number === 4) {
                result += "mjeseca";
              } else {
                result += "mjeseci";
              }
              return result;
            case "yy":
              if (number === 1) {
                result += "godina";
              } else if (number === 2 || number === 3 || number === 4) {
                result += "godine";
              } else {
                result += "godina";
              }
              return result;
          }
        }

        var bs = moment.defineLocale("bs", {
          months: "januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar".split(
            "_"
          ),
          monthsShort: "jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split(
            "_"
          ),
          weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
          weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm"
          },
          calendar: {
            sameDay: "[danas u] LT",
            nextDay: "[sutra u] LT",
            nextWeek: function() {
              switch (this.day()) {
                case 0:
                  return "[u] [nedjelju] [u] LT";
                case 3:
                  return "[u] [srijedu] [u] LT";
                case 6:
                  return "[u] [subotu] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[u] dddd [u] LT";
              }
            },
            lastDay: "[jučer u] LT",
            lastWeek: function() {
              switch (this.day()) {
                case 0:
                case 3:
                  return "[prošlu] dddd [u] LT";
                case 6:
                  return "[prošle] [subote] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[prošli] dddd [u] LT";
              }
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "za %s",
            past: "prije %s",
            s: "par sekundi",
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: "dan",
            dd: translate,
            M: "mjesec",
            MM: translate,
            y: "godinu",
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return bs;
      });

      /***/
    },
    /* 237 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Catalan [ca]
      //! author : Juan G. Hurtado : https://github.com/juanghurtado

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var ca = moment.defineLocale("ca", {
          months: {
            standalone: "gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre".split(
              "_"
            ),
            format: "de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split(
              "_"
            ),
            isFormat: /D[oD]?(\s)+MMMM/
          },
          monthsShort: "gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte".split(
            "_"
          ),
          weekdaysShort: "dg._dl._dt._dc._dj._dv._ds.".split("_"),
          weekdaysMin: "dg_dl_dt_dc_dj_dv_ds".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM [de] YYYY",
            ll: "D MMM YYYY",
            LLL: "D MMMM [de] YYYY [a les] H:mm",
            lll: "D MMM YYYY, H:mm",
            LLLL: "dddd D MMMM [de] YYYY [a les] H:mm",
            llll: "ddd D MMM YYYY, H:mm"
          },
          calendar: {
            sameDay: function() {
              return "[avui a " + (this.hours() !== 1 ? "les" : "la") + "] LT";
            },
            nextDay: function() {
              return "[demà a " + (this.hours() !== 1 ? "les" : "la") + "] LT";
            },
            nextWeek: function() {
              return "dddd [a " + (this.hours() !== 1 ? "les" : "la") + "] LT";
            },
            lastDay: function() {
              return "[ahir a " + (this.hours() !== 1 ? "les" : "la") + "] LT";
            },
            lastWeek: function() {
              return (
                "[el] dddd [passat a " +
                (this.hours() !== 1 ? "les" : "la") +
                "] LT"
              );
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "d'aquí %s",
            past: "fa %s",
            s: "uns segons",
            m: "un minut",
            mm: "%d minuts",
            h: "una hora",
            hh: "%d hores",
            d: "un dia",
            dd: "%d dies",
            M: "un mes",
            MM: "%d mesos",
            y: "un any",
            yy: "%d anys"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
          ordinal: function(number, period) {
            var output =
              number === 1
                ? "r"
                : number === 2
                  ? "n"
                  : number === 3 ? "r" : number === 4 ? "t" : "è";
            if (period === "w" || period === "W") {
              output = "a";
            }
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return ca;
      });

      /***/
    },
    /* 238 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Czech [cs]
      //! author : petrbela : https://github.com/petrbela

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var months = "leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec".split(
          "_"
        );
        var monthsShort = "led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro".split(
          "_"
        );
        function plural(n) {
          return n > 1 && n < 5 && ~~(n / 10) !== 1;
        }
        function translate(number, withoutSuffix, key, isFuture) {
          var result = number + " ";
          switch (key) {
            case "s": // a few seconds / in a few seconds / a few seconds ago
              return withoutSuffix || isFuture ? "pár sekund" : "pár sekundami";
            case "m": // a minute / in a minute / a minute ago
              return withoutSuffix ? "minuta" : isFuture ? "minutu" : "minutou";
            case "mm": // 9 minutes / in 9 minutes / 9 minutes ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? "minuty" : "minut");
              } else {
                return result + "minutami";
              }
              break;
            case "h": // an hour / in an hour / an hour ago
              return withoutSuffix ? "hodina" : isFuture ? "hodinu" : "hodinou";
            case "hh": // 9 hours / in 9 hours / 9 hours ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? "hodiny" : "hodin");
              } else {
                return result + "hodinami";
              }
              break;
            case "d": // a day / in a day / a day ago
              return withoutSuffix || isFuture ? "den" : "dnem";
            case "dd": // 9 days / in 9 days / 9 days ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? "dny" : "dní");
              } else {
                return result + "dny";
              }
              break;
            case "M": // a month / in a month / a month ago
              return withoutSuffix || isFuture ? "měsíc" : "měsícem";
            case "MM": // 9 months / in 9 months / 9 months ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? "měsíce" : "měsíců");
              } else {
                return result + "měsíci";
              }
              break;
            case "y": // a year / in a year / a year ago
              return withoutSuffix || isFuture ? "rok" : "rokem";
            case "yy": // 9 years / in 9 years / 9 years ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? "roky" : "let");
              } else {
                return result + "lety";
              }
              break;
          }
        }

        var cs = moment.defineLocale("cs", {
          months: months,
          monthsShort: monthsShort,
          monthsParse: (function(months, monthsShort) {
            var i,
              _monthsParse = [];
            for (i = 0; i < 12; i++) {
              // use custom parser to solve problem with July (červenec)
              _monthsParse[i] = new RegExp(
                "^" + months[i] + "$|^" + monthsShort[i] + "$",
                "i"
              );
            }
            return _monthsParse;
          })(months, monthsShort),
          shortMonthsParse: (function(monthsShort) {
            var i,
              _shortMonthsParse = [];
            for (i = 0; i < 12; i++) {
              _shortMonthsParse[i] = new RegExp(
                "^" + monthsShort[i] + "$",
                "i"
              );
            }
            return _shortMonthsParse;
          })(monthsShort),
          longMonthsParse: (function(months) {
            var i,
              _longMonthsParse = [];
            for (i = 0; i < 12; i++) {
              _longMonthsParse[i] = new RegExp("^" + months[i] + "$", "i");
            }
            return _longMonthsParse;
          })(months),
          weekdays: "neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota".split(
            "_"
          ),
          weekdaysShort: "ne_po_út_st_čt_pá_so".split("_"),
          weekdaysMin: "ne_po_út_st_čt_pá_so".split("_"),
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd D. MMMM YYYY H:mm",
            l: "D. M. YYYY"
          },
          calendar: {
            sameDay: "[dnes v] LT",
            nextDay: "[zítra v] LT",
            nextWeek: function() {
              switch (this.day()) {
                case 0:
                  return "[v neděli v] LT";
                case 1:
                case 2:
                  return "[v] dddd [v] LT";
                case 3:
                  return "[ve středu v] LT";
                case 4:
                  return "[ve čtvrtek v] LT";
                case 5:
                  return "[v pátek v] LT";
                case 6:
                  return "[v sobotu v] LT";
              }
            },
            lastDay: "[včera v] LT",
            lastWeek: function() {
              switch (this.day()) {
                case 0:
                  return "[minulou neděli v] LT";
                case 1:
                case 2:
                  return "[minulé] dddd [v] LT";
                case 3:
                  return "[minulou středu v] LT";
                case 4:
                case 5:
                  return "[minulý] dddd [v] LT";
                case 6:
                  return "[minulou sobotu v] LT";
              }
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "za %s",
            past: "před %s",
            s: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return cs;
      });

      /***/
    },
    /* 239 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Chuvash [cv]
      //! author : Anatoly Mironov : https://github.com/mirontoli

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var cv = moment.defineLocale("cv", {
          months: "кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав".split(
            "_"
          ),
          monthsShort: "кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш".split(
            "_"
          ),
          weekdays: "вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун".split(
            "_"
          ),
          weekdaysShort: "выр_тун_ытл_юн_кӗҫ_эрн_шӑм".split("_"),
          weekdaysMin: "вр_тн_ыт_юн_кҫ_эр_шм".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD-MM-YYYY",
            LL: "YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]",
            LLL: "YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm",
            LLLL: "dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm"
          },
          calendar: {
            sameDay: "[Паян] LT [сехетре]",
            nextDay: "[Ыран] LT [сехетре]",
            lastDay: "[Ӗнер] LT [сехетре]",
            nextWeek: "[Ҫитес] dddd LT [сехетре]",
            lastWeek: "[Иртнӗ] dddd LT [сехетре]",
            sameElse: "L"
          },
          relativeTime: {
            future: function(output) {
              var affix = /сехет$/i.exec(output)
                ? "рен"
                : /ҫул$/i.exec(output) ? "тан" : "ран";
              return output + affix;
            },
            past: "%s каялла",
            s: "пӗр-ик ҫеккунт",
            m: "пӗр минут",
            mm: "%d минут",
            h: "пӗр сехет",
            hh: "%d сехет",
            d: "пӗр кун",
            dd: "%d кун",
            M: "пӗр уйӑх",
            MM: "%d уйӑх",
            y: "пӗр ҫул",
            yy: "%d ҫул"
          },
          dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
          ordinal: "%d-мӗш",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return cv;
      });

      /***/
    },
    /* 240 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Welsh [cy]
      //! author : Robert Allen : https://github.com/robgallen
      //! author : https://github.com/ryangreaves

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var cy = moment.defineLocale("cy", {
          months: "Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr".split(
            "_"
          ),
          monthsShort: "Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag".split(
            "_"
          ),
          weekdays: "Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn".split(
            "_"
          ),
          weekdaysShort: "Sul_Llun_Maw_Mer_Iau_Gwe_Sad".split("_"),
          weekdaysMin: "Su_Ll_Ma_Me_Ia_Gw_Sa".split("_"),
          weekdaysParseExact: true,
          // time formats are the same as en-gb
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Heddiw am] LT",
            nextDay: "[Yfory am] LT",
            nextWeek: "dddd [am] LT",
            lastDay: "[Ddoe am] LT",
            lastWeek: "dddd [diwethaf am] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "mewn %s",
            past: "%s yn ôl",
            s: "ychydig eiliadau",
            m: "munud",
            mm: "%d munud",
            h: "awr",
            hh: "%d awr",
            d: "diwrnod",
            dd: "%d diwrnod",
            M: "mis",
            MM: "%d mis",
            y: "blwyddyn",
            yy: "%d flynedd"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
          // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
          ordinal: function(number) {
            var b = number,
              output = "",
              lookup = [
                "",
                "af",
                "il",
                "ydd",
                "ydd",
                "ed",
                "ed",
                "ed",
                "fed",
                "fed",
                "fed", // 1af to 10fed
                "eg",
                "fed",
                "eg",
                "eg",
                "fed",
                "eg",
                "eg",
                "fed",
                "eg",
                "fed" // 11eg to 20fed
              ];
            if (b > 20) {
              if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                output = "fed"; // not 30ain, 70ain or 90ain
              } else {
                output = "ain";
              }
            } else if (b > 0) {
              output = lookup[b];
            }
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return cy;
      });

      /***/
    },
    /* 241 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Danish [da]
      //! author : Ulrik Nielsen : https://github.com/mrbase

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var da = moment.defineLocale("da", {
          months: "januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december".split(
            "_"
          ),
          monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split(
            "_"
          ),
          weekdays: "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split(
            "_"
          ),
          weekdaysShort: "søn_man_tir_ons_tor_fre_lør".split("_"),
          weekdaysMin: "sø_ma_ti_on_to_fr_lø".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY HH:mm",
            LLLL: "dddd [d.] D. MMMM YYYY [kl.] HH:mm"
          },
          calendar: {
            sameDay: "[i dag kl.] LT",
            nextDay: "[i morgen kl.] LT",
            nextWeek: "på dddd [kl.] LT",
            lastDay: "[i går kl.] LT",
            lastWeek: "[i] dddd[s kl.] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "om %s",
            past: "%s siden",
            s: "få sekunder",
            m: "et minut",
            mm: "%d minutter",
            h: "en time",
            hh: "%d timer",
            d: "en dag",
            dd: "%d dage",
            M: "en måned",
            MM: "%d måneder",
            y: "et år",
            yy: "%d år"
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return da;
      });

      /***/
    },
    /* 242 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : German [de]
      //! author : lluchs : https://github.com/lluchs
      //! author: Menelion Elensúle: https://github.com/Oire
      //! author : Mikolaj Dadela : https://github.com/mik01aj

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            m: ["eine Minute", "einer Minute"],
            h: ["eine Stunde", "einer Stunde"],
            d: ["ein Tag", "einem Tag"],
            dd: [number + " Tage", number + " Tagen"],
            M: ["ein Monat", "einem Monat"],
            MM: [number + " Monate", number + " Monaten"],
            y: ["ein Jahr", "einem Jahr"],
            yy: [number + " Jahre", number + " Jahren"]
          };
          return withoutSuffix ? format[key][0] : format[key][1];
        }

        var de = moment.defineLocale("de", {
          months: "Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split(
            "_"
          ),
          monthsShort: "Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split(
            "_"
          ),
          weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
          weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY HH:mm",
            LLLL: "dddd, D. MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[heute um] LT [Uhr]",
            sameElse: "L",
            nextDay: "[morgen um] LT [Uhr]",
            nextWeek: "dddd [um] LT [Uhr]",
            lastDay: "[gestern um] LT [Uhr]",
            lastWeek: "[letzten] dddd [um] LT [Uhr]"
          },
          relativeTime: {
            future: "in %s",
            past: "vor %s",
            s: "ein paar Sekunden",
            m: processRelativeTime,
            mm: "%d Minuten",
            h: processRelativeTime,
            hh: "%d Stunden",
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return de;
      });

      /***/
    },
    /* 243 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : German (Austria) [de-at]
      //! author : lluchs : https://github.com/lluchs
      //! author: Menelion Elensúle: https://github.com/Oire
      //! author : Martin Groller : https://github.com/MadMG
      //! author : Mikolaj Dadela : https://github.com/mik01aj

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            m: ["eine Minute", "einer Minute"],
            h: ["eine Stunde", "einer Stunde"],
            d: ["ein Tag", "einem Tag"],
            dd: [number + " Tage", number + " Tagen"],
            M: ["ein Monat", "einem Monat"],
            MM: [number + " Monate", number + " Monaten"],
            y: ["ein Jahr", "einem Jahr"],
            yy: [number + " Jahre", number + " Jahren"]
          };
          return withoutSuffix ? format[key][0] : format[key][1];
        }

        var deAt = moment.defineLocale("de-at", {
          months: "Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split(
            "_"
          ),
          monthsShort: "Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split(
            "_"
          ),
          weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
          weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY HH:mm",
            LLLL: "dddd, D. MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[heute um] LT [Uhr]",
            sameElse: "L",
            nextDay: "[morgen um] LT [Uhr]",
            nextWeek: "dddd [um] LT [Uhr]",
            lastDay: "[gestern um] LT [Uhr]",
            lastWeek: "[letzten] dddd [um] LT [Uhr]"
          },
          relativeTime: {
            future: "in %s",
            past: "vor %s",
            s: "ein paar Sekunden",
            m: processRelativeTime,
            mm: "%d Minuten",
            h: processRelativeTime,
            hh: "%d Stunden",
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return deAt;
      });

      /***/
    },
    /* 244 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : German (Switzerland) [de-ch]
      //! author : sschueller : https://github.com/sschueller

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        // based on: https://www.bk.admin.ch/dokumentation/sprachen/04915/05016/index.html?lang=de#

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            m: ["eine Minute", "einer Minute"],
            h: ["eine Stunde", "einer Stunde"],
            d: ["ein Tag", "einem Tag"],
            dd: [number + " Tage", number + " Tagen"],
            M: ["ein Monat", "einem Monat"],
            MM: [number + " Monate", number + " Monaten"],
            y: ["ein Jahr", "einem Jahr"],
            yy: [number + " Jahre", number + " Jahren"]
          };
          return withoutSuffix ? format[key][0] : format[key][1];
        }

        var deCh = moment.defineLocale("de-ch", {
          months: "Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split(
            "_"
          ),
          monthsShort: "Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split(
            "_"
          ),
          weekdaysShort: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
          weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY HH.mm",
            LLLL: "dddd, D. MMMM YYYY HH.mm"
          },
          calendar: {
            sameDay: "[heute um] LT [Uhr]",
            sameElse: "L",
            nextDay: "[morgen um] LT [Uhr]",
            nextWeek: "dddd [um] LT [Uhr]",
            lastDay: "[gestern um] LT [Uhr]",
            lastWeek: "[letzten] dddd [um] LT [Uhr]"
          },
          relativeTime: {
            future: "in %s",
            past: "vor %s",
            s: "ein paar Sekunden",
            m: processRelativeTime,
            mm: "%d Minuten",
            h: processRelativeTime,
            hh: "%d Stunden",
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return deCh;
      });

      /***/
    },
    /* 245 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Maldivian [dv]
      //! author : Jawish Hameed : https://github.com/jawish

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var months = [
          "ޖެނުއަރީ",
          "ފެބްރުއަރީ",
          "މާރިޗު",
          "އޭޕްރީލު",
          "މޭ",
          "ޖޫން",
          "ޖުލައި",
          "އޯގަސްޓު",
          "ސެޕްޓެމްބަރު",
          "އޮކްޓޯބަރު",
          "ނޮވެމްބަރު",
          "ޑިސެމްބަރު"
        ];
        var weekdays = [
          "އާދިއްތަ",
          "ހޯމަ",
          "އަންގާރަ",
          "ބުދަ",
          "ބުރާސްފަތި",
          "ހުކުރު",
          "ހޮނިހިރު"
        ];

        var dv = moment.defineLocale("dv", {
          months: months,
          monthsShort: months,
          weekdays: weekdays,
          weekdaysShort: weekdays,
          weekdaysMin: "އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "D/M/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          meridiemParse: /މކ|މފ/,
          isPM: function(input) {
            return "މފ" === input;
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 12) {
              return "މކ";
            } else {
              return "މފ";
            }
          },
          calendar: {
            sameDay: "[މިއަދު] LT",
            nextDay: "[މާދަމާ] LT",
            nextWeek: "dddd LT",
            lastDay: "[އިއްޔެ] LT",
            lastWeek: "[ފާއިތުވި] dddd LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "ތެރޭގައި %s",
            past: "ކުރިން %s",
            s: "ސިކުންތުކޮޅެއް",
            m: "މިނިޓެއް",
            mm: "މިނިޓު %d",
            h: "ގަޑިއިރެއް",
            hh: "ގަޑިއިރު %d",
            d: "ދުވަހެއް",
            dd: "ދުވަސް %d",
            M: "މަހެއް",
            MM: "މަސް %d",
            y: "އަހަރެއް",
            yy: "އަހަރު %d"
          },
          preparse: function(string) {
            return string.replace(/،/g, ",");
          },
          postformat: function(string) {
            return string.replace(/,/g, "،");
          },
          week: {
            dow: 7, // Sunday is the first day of the week.
            doy: 12 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return dv;
      });

      /***/
    },
    /* 246 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Greek [el]
      //! author : Aggelos Karalias : https://github.com/mehiel

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        function isFunction(input) {
          return (
            input instanceof Function ||
            Object.prototype.toString.call(input) === "[object Function]"
          );
        }

        var el = moment.defineLocale("el", {
          monthsNominativeEl: "Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος".split(
            "_"
          ),
          monthsGenitiveEl: "Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου".split(
            "_"
          ),
          months: function(momentToFormat, format) {
            if (!momentToFormat) {
              return this._monthsNominativeEl;
            } else if (
              typeof format === "string" &&
              /D/.test(format.substring(0, format.indexOf("MMMM")))
            ) {
              // if there is a day number before 'MMMM'
              return this._monthsGenitiveEl[momentToFormat.month()];
            } else {
              return this._monthsNominativeEl[momentToFormat.month()];
            }
          },
          monthsShort: "Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ".split(
            "_"
          ),
          weekdays: "Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο".split(
            "_"
          ),
          weekdaysShort: "Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ".split("_"),
          weekdaysMin: "Κυ_Δε_Τρ_Τε_Πε_Πα_Σα".split("_"),
          meridiem: function(hours, minutes, isLower) {
            if (hours > 11) {
              return isLower ? "μμ" : "ΜΜ";
            } else {
              return isLower ? "πμ" : "ΠΜ";
            }
          },
          isPM: function(input) {
            return (input + "").toLowerCase()[0] === "μ";
          },
          meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A"
          },
          calendarEl: {
            sameDay: "[Σήμερα {}] LT",
            nextDay: "[Αύριο {}] LT",
            nextWeek: "dddd [{}] LT",
            lastDay: "[Χθες {}] LT",
            lastWeek: function() {
              switch (this.day()) {
                case 6:
                  return "[το προηγούμενο] dddd [{}] LT";
                default:
                  return "[την προηγούμενη] dddd [{}] LT";
              }
            },
            sameElse: "L"
          },
          calendar: function(key, mom) {
            var output = this._calendarEl[key],
              hours = mom && mom.hours();
            if (isFunction(output)) {
              output = output.apply(mom);
            }
            return output.replace("{}", hours % 12 === 1 ? "στη" : "στις");
          },
          relativeTime: {
            future: "σε %s",
            past: "%s πριν",
            s: "λίγα δευτερόλεπτα",
            m: "ένα λεπτό",
            mm: "%d λεπτά",
            h: "μία ώρα",
            hh: "%d ώρες",
            d: "μία μέρα",
            dd: "%d μέρες",
            M: "ένας μήνας",
            MM: "%d μήνες",
            y: "ένας χρόνος",
            yy: "%d χρόνια"
          },
          dayOfMonthOrdinalParse: /\d{1,2}η/,
          ordinal: "%dη",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4st is the first week of the year.
          }
        });

        return el;
      });

      /***/
    },
    /* 247 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (Australia) [en-au]
      //! author : Jared Morse : https://github.com/jarcoal

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var enAu = moment.defineLocale("en-au", {
          months: "January_February_March_April_May_June_July_August_September_October_November_December".split(
            "_"
          ),
          monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
            "_"
          ),
          weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
            "_"
          ),
          weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
          weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A"
          },
          calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function(number) {
            var b = number % 10,
              output =
                ~~((number % 100) / 10) === 1
                  ? "th"
                  : b === 1 ? "st" : b === 2 ? "nd" : b === 3 ? "rd" : "th";
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return enAu;
      });

      /***/
    },
    /* 248 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (Canada) [en-ca]
      //! author : Jonathan Abourbih : https://github.com/jonbca

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var enCa = moment.defineLocale("en-ca", {
          months: "January_February_March_April_May_June_July_August_September_October_November_December".split(
            "_"
          ),
          monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
            "_"
          ),
          weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
            "_"
          ),
          weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
          weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "YYYY-MM-DD",
            LL: "MMMM D, YYYY",
            LLL: "MMMM D, YYYY h:mm A",
            LLLL: "dddd, MMMM D, YYYY h:mm A"
          },
          calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function(number) {
            var b = number % 10,
              output =
                ~~((number % 100) / 10) === 1
                  ? "th"
                  : b === 1 ? "st" : b === 2 ? "nd" : b === 3 ? "rd" : "th";
            return number + output;
          }
        });

        return enCa;
      });

      /***/
    },
    /* 249 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (United Kingdom) [en-gb]
      //! author : Chris Gedrim : https://github.com/chrisgedrim

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var enGb = moment.defineLocale("en-gb", {
          months: "January_February_March_April_May_June_July_August_September_October_November_December".split(
            "_"
          ),
          monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
            "_"
          ),
          weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
            "_"
          ),
          weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
          weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function(number) {
            var b = number % 10,
              output =
                ~~((number % 100) / 10) === 1
                  ? "th"
                  : b === 1 ? "st" : b === 2 ? "nd" : b === 3 ? "rd" : "th";
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return enGb;
      });

      /***/
    },
    /* 250 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (Ireland) [en-ie]
      //! author : Chris Cartlidge : https://github.com/chriscartlidge

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var enIe = moment.defineLocale("en-ie", {
          months: "January_February_March_April_May_June_July_August_September_October_November_December".split(
            "_"
          ),
          monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
            "_"
          ),
          weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
            "_"
          ),
          weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
          weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD-MM-YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function(number) {
            var b = number % 10,
              output =
                ~~((number % 100) / 10) === 1
                  ? "th"
                  : b === 1 ? "st" : b === 2 ? "nd" : b === 3 ? "rd" : "th";
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return enIe;
      });

      /***/
    },
    /* 251 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (New Zealand) [en-nz]
      //! author : Luke McGregor : https://github.com/lukemcgregor

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var enNz = moment.defineLocale("en-nz", {
          months: "January_February_March_April_May_June_July_August_September_October_November_December".split(
            "_"
          ),
          monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
            "_"
          ),
          weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
            "_"
          ),
          weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
          weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A"
          },
          calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function(number) {
            var b = number % 10,
              output =
                ~~((number % 100) / 10) === 1
                  ? "th"
                  : b === 1 ? "st" : b === 2 ? "nd" : b === 3 ? "rd" : "th";
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return enNz;
      });

      /***/
    },
    /* 252 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Esperanto [eo]
      //! author : Colin Dean : https://github.com/colindean
      //! author : Mia Nordentoft Imperatori : https://github.com/miestasmia
      //! comment : miestasmia corrected the translation by colindean

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var eo = moment.defineLocale("eo", {
          months: "januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro".split(
            "_"
          ),
          monthsShort: "jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec".split(
            "_"
          ),
          weekdays: "dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato".split(
            "_"
          ),
          weekdaysShort: "dim_lun_mard_merk_ĵaŭ_ven_sab".split("_"),
          weekdaysMin: "di_lu_ma_me_ĵa_ve_sa".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "D[-a de] MMMM, YYYY",
            LLL: "D[-a de] MMMM, YYYY HH:mm",
            LLLL: "dddd, [la] D[-a de] MMMM, YYYY HH:mm"
          },
          meridiemParse: /[ap]\.t\.m/i,
          isPM: function(input) {
            return input.charAt(0).toLowerCase() === "p";
          },
          meridiem: function(hours, minutes, isLower) {
            if (hours > 11) {
              return isLower ? "p.t.m." : "P.T.M.";
            } else {
              return isLower ? "a.t.m." : "A.T.M.";
            }
          },
          calendar: {
            sameDay: "[Hodiaŭ je] LT",
            nextDay: "[Morgaŭ je] LT",
            nextWeek: "dddd [je] LT",
            lastDay: "[Hieraŭ je] LT",
            lastWeek: "[pasinta] dddd [je] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "post %s",
            past: "antaŭ %s",
            s: "sekundoj",
            m: "minuto",
            mm: "%d minutoj",
            h: "horo",
            hh: "%d horoj",
            d: "tago", //ne 'diurno', ĉar estas uzita por proksimumo
            dd: "%d tagoj",
            M: "monato",
            MM: "%d monatoj",
            y: "jaro",
            yy: "%d jaroj"
          },
          dayOfMonthOrdinalParse: /\d{1,2}a/,
          ordinal: "%da",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return eo;
      });

      /***/
    },
    /* 253 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Spanish [es]
      //! author : Julio Napurí : https://github.com/julionc

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var monthsShortDot = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split(
          "_"
        );
        var monthsShort = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split(
          "_"
        );

        var monthsParse = [
          /^ene/i,
          /^feb/i,
          /^mar/i,
          /^abr/i,
          /^may/i,
          /^jun/i,
          /^jul/i,
          /^ago/i,
          /^sep/i,
          /^oct/i,
          /^nov/i,
          /^dic/i
        ];
        var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

        var es = moment.defineLocale("es", {
          months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split(
            "_"
          ),
          monthsShort: function(m, format) {
            if (!m) {
              return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
              return monthsShort[m.month()];
            } else {
              return monthsShortDot[m.month()];
            }
          },
          monthsRegex: monthsRegex,
          monthsShortRegex: monthsRegex,
          monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
          monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,
          weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split(
            "_"
          ),
          weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
          weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY H:mm",
            LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
          },
          calendar: {
            sameDay: function() {
              return "[hoy a la" + (this.hours() !== 1 ? "s" : "") + "] LT";
            },
            nextDay: function() {
              return "[mañana a la" + (this.hours() !== 1 ? "s" : "") + "] LT";
            },
            nextWeek: function() {
              return "dddd [a la" + (this.hours() !== 1 ? "s" : "") + "] LT";
            },
            lastDay: function() {
              return "[ayer a la" + (this.hours() !== 1 ? "s" : "") + "] LT";
            },
            lastWeek: function() {
              return (
                "[el] dddd [pasado a la" +
                (this.hours() !== 1 ? "s" : "") +
                "] LT"
              );
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "en %s",
            past: "hace %s",
            s: "unos segundos",
            m: "un minuto",
            mm: "%d minutos",
            h: "una hora",
            hh: "%d horas",
            d: "un día",
            dd: "%d días",
            M: "un mes",
            MM: "%d meses",
            y: "un año",
            yy: "%d años"
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return es;
      });

      /***/
    },
    /* 254 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Spanish (Dominican Republic) [es-do]

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var monthsShortDot = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split(
          "_"
        );
        var monthsShort = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split(
          "_"
        );

        var monthsParse = [
          /^ene/i,
          /^feb/i,
          /^mar/i,
          /^abr/i,
          /^may/i,
          /^jun/i,
          /^jul/i,
          /^ago/i,
          /^sep/i,
          /^oct/i,
          /^nov/i,
          /^dic/i
        ];
        var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

        var esDo = moment.defineLocale("es-do", {
          months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split(
            "_"
          ),
          monthsShort: function(m, format) {
            if (!m) {
              return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
              return monthsShort[m.month()];
            } else {
              return monthsShortDot[m.month()];
            }
          },
          monthsRegex: monthsRegex,
          monthsShortRegex: monthsRegex,
          monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
          monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,
          weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split(
            "_"
          ),
          weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
          weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY h:mm A",
            LLLL: "dddd, D [de] MMMM [de] YYYY h:mm A"
          },
          calendar: {
            sameDay: function() {
              return "[hoy a la" + (this.hours() !== 1 ? "s" : "") + "] LT";
            },
            nextDay: function() {
              return "[mañana a la" + (this.hours() !== 1 ? "s" : "") + "] LT";
            },
            nextWeek: function() {
              return "dddd [a la" + (this.hours() !== 1 ? "s" : "") + "] LT";
            },
            lastDay: function() {
              return "[ayer a la" + (this.hours() !== 1 ? "s" : "") + "] LT";
            },
            lastWeek: function() {
              return (
                "[el] dddd [pasado a la" +
                (this.hours() !== 1 ? "s" : "") +
                "] LT"
              );
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "en %s",
            past: "hace %s",
            s: "unos segundos",
            m: "un minuto",
            mm: "%d minutos",
            h: "una hora",
            hh: "%d horas",
            d: "un día",
            dd: "%d días",
            M: "un mes",
            MM: "%d meses",
            y: "un año",
            yy: "%d años"
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return esDo;
      });

      /***/
    },
    /* 255 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Spanish (United States) [es-us]
      //! author : bustta : https://github.com/bustta

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var monthsShortDot = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split(
          "_"
        );
        var monthsShort = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split(
          "_"
        );

        var esUs = moment.defineLocale("es-us", {
          months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split(
            "_"
          ),
          monthsShort: function(m, format) {
            if (!m) {
              return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
              return monthsShort[m.month()];
            } else {
              return monthsShortDot[m.month()];
            }
          },
          monthsParseExact: true,
          weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split(
            "_"
          ),
          weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
          weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "MM/DD/YYYY",
            LL: "MMMM [de] D [de] YYYY",
            LLL: "MMMM [de] D [de] YYYY H:mm",
            LLLL: "dddd, MMMM [de] D [de] YYYY H:mm"
          },
          calendar: {
            sameDay: function() {
              return "[hoy a la" + (this.hours() !== 1 ? "s" : "") + "] LT";
            },
            nextDay: function() {
              return "[mañana a la" + (this.hours() !== 1 ? "s" : "") + "] LT";
            },
            nextWeek: function() {
              return "dddd [a la" + (this.hours() !== 1 ? "s" : "") + "] LT";
            },
            lastDay: function() {
              return "[ayer a la" + (this.hours() !== 1 ? "s" : "") + "] LT";
            },
            lastWeek: function() {
              return (
                "[el] dddd [pasado a la" +
                (this.hours() !== 1 ? "s" : "") +
                "] LT"
              );
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "en %s",
            past: "hace %s",
            s: "unos segundos",
            m: "un minuto",
            mm: "%d minutos",
            h: "una hora",
            hh: "%d horas",
            d: "un día",
            dd: "%d días",
            M: "un mes",
            MM: "%d meses",
            y: "un año",
            yy: "%d años"
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return esUs;
      });

      /***/
    },
    /* 256 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Estonian [et]
      //! author : Henry Kehlmann : https://github.com/madhenry
      //! improvements : Illimar Tambek : https://github.com/ragulka

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            s: ["mõne sekundi", "mõni sekund", "paar sekundit"],
            m: ["ühe minuti", "üks minut"],
            mm: [number + " minuti", number + " minutit"],
            h: ["ühe tunni", "tund aega", "üks tund"],
            hh: [number + " tunni", number + " tundi"],
            d: ["ühe päeva", "üks päev"],
            M: ["kuu aja", "kuu aega", "üks kuu"],
            MM: [number + " kuu", number + " kuud"],
            y: ["ühe aasta", "aasta", "üks aasta"],
            yy: [number + " aasta", number + " aastat"]
          };
          if (withoutSuffix) {
            return format[key][2] ? format[key][2] : format[key][1];
          }
          return isFuture ? format[key][0] : format[key][1];
        }

        var et = moment.defineLocale("et", {
          months: "jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember".split(
            "_"
          ),
          monthsShort: "jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets".split(
            "_"
          ),
          weekdays: "pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev".split(
            "_"
          ),
          weekdaysShort: "P_E_T_K_N_R_L".split("_"),
          weekdaysMin: "P_E_T_K_N_R_L".split("_"),
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm"
          },
          calendar: {
            sameDay: "[Täna,] LT",
            nextDay: "[Homme,] LT",
            nextWeek: "[Järgmine] dddd LT",
            lastDay: "[Eile,] LT",
            lastWeek: "[Eelmine] dddd LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s pärast",
            past: "%s tagasi",
            s: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: "%d päeva",
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return et;
      });

      /***/
    },
    /* 257 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Basque [eu]
      //! author : Eneko Illarramendi : https://github.com/eillarra

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var eu = moment.defineLocale("eu", {
          months: "urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua".split(
            "_"
          ),
          monthsShort: "urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata".split(
            "_"
          ),
          weekdaysShort: "ig._al._ar._az._og._ol._lr.".split("_"),
          weekdaysMin: "ig_al_ar_az_og_ol_lr".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "YYYY[ko] MMMM[ren] D[a]",
            LLL: "YYYY[ko] MMMM[ren] D[a] HH:mm",
            LLLL: "dddd, YYYY[ko] MMMM[ren] D[a] HH:mm",
            l: "YYYY-M-D",
            ll: "YYYY[ko] MMM D[a]",
            lll: "YYYY[ko] MMM D[a] HH:mm",
            llll: "ddd, YYYY[ko] MMM D[a] HH:mm"
          },
          calendar: {
            sameDay: "[gaur] LT[etan]",
            nextDay: "[bihar] LT[etan]",
            nextWeek: "dddd LT[etan]",
            lastDay: "[atzo] LT[etan]",
            lastWeek: "[aurreko] dddd LT[etan]",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s barru",
            past: "duela %s",
            s: "segundo batzuk",
            m: "minutu bat",
            mm: "%d minutu",
            h: "ordu bat",
            hh: "%d ordu",
            d: "egun bat",
            dd: "%d egun",
            M: "hilabete bat",
            MM: "%d hilabete",
            y: "urte bat",
            yy: "%d urte"
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return eu;
      });

      /***/
    },
    /* 258 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Persian [fa]
      //! author : Ebrahim Byagowi : https://github.com/ebraminio

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var symbolMap = {
          "1": "۱",
          "2": "۲",
          "3": "۳",
          "4": "۴",
          "5": "۵",
          "6": "۶",
          "7": "۷",
          "8": "۸",
          "9": "۹",
          "0": "۰"
        };
        var numberMap = {
          "۱": "1",
          "۲": "2",
          "۳": "3",
          "۴": "4",
          "۵": "5",
          "۶": "6",
          "۷": "7",
          "۸": "8",
          "۹": "9",
          "۰": "0"
        };

        var fa = moment.defineLocale("fa", {
          months: "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split(
            "_"
          ),
          monthsShort: "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split(
            "_"
          ),
          weekdays: "یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه".split(
            "_"
          ),
          weekdaysShort: "یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه".split(
            "_"
          ),
          weekdaysMin: "ی_د_س_چ_پ_ج_ش".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          meridiemParse: /قبل از ظهر|بعد از ظهر/,
          isPM: function(input) {
            return /بعد از ظهر/.test(input);
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 12) {
              return "قبل از ظهر";
            } else {
              return "بعد از ظهر";
            }
          },
          calendar: {
            sameDay: "[امروز ساعت] LT",
            nextDay: "[فردا ساعت] LT",
            nextWeek: "dddd [ساعت] LT",
            lastDay: "[دیروز ساعت] LT",
            lastWeek: "dddd [پیش] [ساعت] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "در %s",
            past: "%s پیش",
            s: "چند ثانیه",
            m: "یک دقیقه",
            mm: "%d دقیقه",
            h: "یک ساعت",
            hh: "%d ساعت",
            d: "یک روز",
            dd: "%d روز",
            M: "یک ماه",
            MM: "%d ماه",
            y: "یک سال",
            yy: "%d سال"
          },
          preparse: function(string) {
            return string
              .replace(/[۰-۹]/g, function(match) {
                return numberMap[match];
              })
              .replace(/،/g, ",");
          },
          postformat: function(string) {
            return string
              .replace(/\d/g, function(match) {
                return symbolMap[match];
              })
              .replace(/,/g, "،");
          },
          dayOfMonthOrdinalParse: /\d{1,2}م/,
          ordinal: "%dم",
          week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return fa;
      });

      /***/
    },
    /* 259 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Finnish [fi]
      //! author : Tarmo Aidantausta : https://github.com/bleadof

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var numbersPast = "nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän".split(
          " "
        );
        var numbersFuture = [
          "nolla",
          "yhden",
          "kahden",
          "kolmen",
          "neljän",
          "viiden",
          "kuuden",
          numbersPast[7],
          numbersPast[8],
          numbersPast[9]
        ];
        function translate(number, withoutSuffix, key, isFuture) {
          var result = "";
          switch (key) {
            case "s":
              return isFuture ? "muutaman sekunnin" : "muutama sekunti";
            case "m":
              return isFuture ? "minuutin" : "minuutti";
            case "mm":
              result = isFuture ? "minuutin" : "minuuttia";
              break;
            case "h":
              return isFuture ? "tunnin" : "tunti";
            case "hh":
              result = isFuture ? "tunnin" : "tuntia";
              break;
            case "d":
              return isFuture ? "päivän" : "päivä";
            case "dd":
              result = isFuture ? "päivän" : "päivää";
              break;
            case "M":
              return isFuture ? "kuukauden" : "kuukausi";
            case "MM":
              result = isFuture ? "kuukauden" : "kuukautta";
              break;
            case "y":
              return isFuture ? "vuoden" : "vuosi";
            case "yy":
              result = isFuture ? "vuoden" : "vuotta";
              break;
          }
          result = verbalNumber(number, isFuture) + " " + result;
          return result;
        }
        function verbalNumber(number, isFuture) {
          return number < 10
            ? isFuture ? numbersFuture[number] : numbersPast[number]
            : number;
        }

        var fi = moment.defineLocale("fi", {
          months: "tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu".split(
            "_"
          ),
          monthsShort: "tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu".split(
            "_"
          ),
          weekdays: "sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai".split(
            "_"
          ),
          weekdaysShort: "su_ma_ti_ke_to_pe_la".split("_"),
          weekdaysMin: "su_ma_ti_ke_to_pe_la".split("_"),
          longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD.MM.YYYY",
            LL: "Do MMMM[ta] YYYY",
            LLL: "Do MMMM[ta] YYYY, [klo] HH.mm",
            LLLL: "dddd, Do MMMM[ta] YYYY, [klo] HH.mm",
            l: "D.M.YYYY",
            ll: "Do MMM YYYY",
            lll: "Do MMM YYYY, [klo] HH.mm",
            llll: "ddd, Do MMM YYYY, [klo] HH.mm"
          },
          calendar: {
            sameDay: "[tänään] [klo] LT",
            nextDay: "[huomenna] [klo] LT",
            nextWeek: "dddd [klo] LT",
            lastDay: "[eilen] [klo] LT",
            lastWeek: "[viime] dddd[na] [klo] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s päästä",
            past: "%s sitten",
            s: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return fi;
      });

      /***/
    },
    /* 260 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Faroese [fo]
      //! author : Ragnar Johannesen : https://github.com/ragnar123

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var fo = moment.defineLocale("fo", {
          months: "januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember".split(
            "_"
          ),
          monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split(
            "_"
          ),
          weekdays: "sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur".split(
            "_"
          ),
          weekdaysShort: "sun_mán_týs_mik_hós_frí_ley".split("_"),
          weekdaysMin: "su_má_tý_mi_hó_fr_le".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D. MMMM, YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Í dag kl.] LT",
            nextDay: "[Í morgin kl.] LT",
            nextWeek: "dddd [kl.] LT",
            lastDay: "[Í gjár kl.] LT",
            lastWeek: "[síðstu] dddd [kl] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "um %s",
            past: "%s síðani",
            s: "fá sekund",
            m: "ein minutt",
            mm: "%d minuttir",
            h: "ein tími",
            hh: "%d tímar",
            d: "ein dagur",
            dd: "%d dagar",
            M: "ein mánaði",
            MM: "%d mánaðir",
            y: "eitt ár",
            yy: "%d ár"
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return fo;
      });

      /***/
    },
    /* 261 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : French [fr]
      //! author : John Fischer : https://github.com/jfroffice

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var fr = moment.defineLocale("fr", {
          months: "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split(
            "_"
          ),
          monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split(
            "_"
          ),
          weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
          weekdaysMin: "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Aujourd’hui à] LT",
            nextDay: "[Demain à] LT",
            nextWeek: "dddd [à] LT",
            lastDay: "[Hier à] LT",
            lastWeek: "dddd [dernier à] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "dans %s",
            past: "il y a %s",
            s: "quelques secondes",
            m: "une minute",
            mm: "%d minutes",
            h: "une heure",
            hh: "%d heures",
            d: "un jour",
            dd: "%d jours",
            M: "un mois",
            MM: "%d mois",
            y: "un an",
            yy: "%d ans"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
          ordinal: function(number, period) {
            switch (period) {
              // TODO: Return 'e' when day of month > 1. Move this case inside
              // block for masculine words below.
              // See https://github.com/moment/moment/issues/3375
              case "D":
                return number + (number === 1 ? "er" : "");

              // Words with masculine grammatical gender: mois, trimestre, jour
              default:
              case "M":
              case "Q":
              case "DDD":
              case "d":
                return number + (number === 1 ? "er" : "e");

              // Words with feminine grammatical gender: semaine
              case "w":
              case "W":
                return number + (number === 1 ? "re" : "e");
            }
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return fr;
      });

      /***/
    },
    /* 262 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : French (Canada) [fr-ca]
      //! author : Jonathan Abourbih : https://github.com/jonbca

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var frCa = moment.defineLocale("fr-ca", {
          months: "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split(
            "_"
          ),
          monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split(
            "_"
          ),
          weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
          weekdaysMin: "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Aujourd’hui à] LT",
            nextDay: "[Demain à] LT",
            nextWeek: "dddd [à] LT",
            lastDay: "[Hier à] LT",
            lastWeek: "dddd [dernier à] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "dans %s",
            past: "il y a %s",
            s: "quelques secondes",
            m: "une minute",
            mm: "%d minutes",
            h: "une heure",
            hh: "%d heures",
            d: "un jour",
            dd: "%d jours",
            M: "un mois",
            MM: "%d mois",
            y: "un an",
            yy: "%d ans"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
          ordinal: function(number, period) {
            switch (period) {
              // Words with masculine grammatical gender: mois, trimestre, jour
              default:
              case "M":
              case "Q":
              case "D":
              case "DDD":
              case "d":
                return number + (number === 1 ? "er" : "e");

              // Words with feminine grammatical gender: semaine
              case "w":
              case "W":
                return number + (number === 1 ? "re" : "e");
            }
          }
        });

        return frCa;
      });

      /***/
    },
    /* 263 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : French (Switzerland) [fr-ch]
      //! author : Gaspard Bucher : https://github.com/gaspard

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var frCh = moment.defineLocale("fr-ch", {
          months: "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split(
            "_"
          ),
          monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split(
            "_"
          ),
          weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
          weekdaysMin: "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Aujourd’hui à] LT",
            nextDay: "[Demain à] LT",
            nextWeek: "dddd [à] LT",
            lastDay: "[Hier à] LT",
            lastWeek: "dddd [dernier à] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "dans %s",
            past: "il y a %s",
            s: "quelques secondes",
            m: "une minute",
            mm: "%d minutes",
            h: "une heure",
            hh: "%d heures",
            d: "un jour",
            dd: "%d jours",
            M: "un mois",
            MM: "%d mois",
            y: "un an",
            yy: "%d ans"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
          ordinal: function(number, period) {
            switch (period) {
              // Words with masculine grammatical gender: mois, trimestre, jour
              default:
              case "M":
              case "Q":
              case "D":
              case "DDD":
              case "d":
                return number + (number === 1 ? "er" : "e");

              // Words with feminine grammatical gender: semaine
              case "w":
              case "W":
                return number + (number === 1 ? "re" : "e");
            }
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return frCh;
      });

      /***/
    },
    /* 264 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Frisian [fy]
      //! author : Robin van der Vliet : https://github.com/robin0van0der0v

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var monthsShortWithDots = "jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.".split(
          "_"
        );
        var monthsShortWithoutDots = "jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des".split(
          "_"
        );

        var fy = moment.defineLocale("fy", {
          months: "jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber".split(
            "_"
          ),
          monthsShort: function(m, format) {
            if (!m) {
              return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
              return monthsShortWithoutDots[m.month()];
            } else {
              return monthsShortWithDots[m.month()];
            }
          },
          monthsParseExact: true,
          weekdays: "snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon".split(
            "_"
          ),
          weekdaysShort: "si._mo._ti._wo._to._fr._so.".split("_"),
          weekdaysMin: "Si_Mo_Ti_Wo_To_Fr_So".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD-MM-YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[hjoed om] LT",
            nextDay: "[moarn om] LT",
            nextWeek: "dddd [om] LT",
            lastDay: "[juster om] LT",
            lastWeek: "[ôfrûne] dddd [om] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "oer %s",
            past: "%s lyn",
            s: "in pear sekonden",
            m: "ien minút",
            mm: "%d minuten",
            h: "ien oere",
            hh: "%d oeren",
            d: "ien dei",
            dd: "%d dagen",
            M: "ien moanne",
            MM: "%d moannen",
            y: "ien jier",
            yy: "%d jierren"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
          ordinal: function(number) {
            return (
              number +
              (number === 1 || number === 8 || number >= 20 ? "ste" : "de")
            );
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return fy;
      });

      /***/
    },
    /* 265 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Scottish Gaelic [gd]
      //! author : Jon Ashdown : https://github.com/jonashdown

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var months = [
          "Am Faoilleach",
          "An Gearran",
          "Am Màrt",
          "An Giblean",
          "An Cèitean",
          "An t-Ògmhios",
          "An t-Iuchar",
          "An Lùnastal",
          "An t-Sultain",
          "An Dàmhair",
          "An t-Samhain",
          "An Dùbhlachd"
        ];

        var monthsShort = [
          "Faoi",
          "Gear",
          "Màrt",
          "Gibl",
          "Cèit",
          "Ògmh",
          "Iuch",
          "Lùn",
          "Sult",
          "Dàmh",
          "Samh",
          "Dùbh"
        ];

        var weekdays = [
          "Didòmhnaich",
          "Diluain",
          "Dimàirt",
          "Diciadain",
          "Diardaoin",
          "Dihaoine",
          "Disathairne"
        ];

        var weekdaysShort = ["Did", "Dil", "Dim", "Dic", "Dia", "Dih", "Dis"];

        var weekdaysMin = ["Dò", "Lu", "Mà", "Ci", "Ar", "Ha", "Sa"];

        var gd = moment.defineLocale("gd", {
          months: months,
          monthsShort: monthsShort,
          monthsParseExact: true,
          weekdays: weekdays,
          weekdaysShort: weekdaysShort,
          weekdaysMin: weekdaysMin,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[An-diugh aig] LT",
            nextDay: "[A-màireach aig] LT",
            nextWeek: "dddd [aig] LT",
            lastDay: "[An-dè aig] LT",
            lastWeek: "dddd [seo chaidh] [aig] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "ann an %s",
            past: "bho chionn %s",
            s: "beagan diogan",
            m: "mionaid",
            mm: "%d mionaidean",
            h: "uair",
            hh: "%d uairean",
            d: "latha",
            dd: "%d latha",
            M: "mìos",
            MM: "%d mìosan",
            y: "bliadhna",
            yy: "%d bliadhna"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
          ordinal: function(number) {
            var output = number === 1 ? "d" : number % 10 === 2 ? "na" : "mh";
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return gd;
      });

      /***/
    },
    /* 266 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Galician [gl]
      //! author : Juan G. Hurtado : https://github.com/juanghurtado

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var gl = moment.defineLocale("gl", {
          months: "xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro".split(
            "_"
          ),
          monthsShort: "xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "domingo_luns_martes_mércores_xoves_venres_sábado".split(
            "_"
          ),
          weekdaysShort: "dom._lun._mar._mér._xov._ven._sáb.".split("_"),
          weekdaysMin: "do_lu_ma_mé_xo_ve_sá".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY H:mm",
            LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
          },
          calendar: {
            sameDay: function() {
              return "[hoxe " + (this.hours() !== 1 ? "ás" : "á") + "] LT";
            },
            nextDay: function() {
              return "[mañá " + (this.hours() !== 1 ? "ás" : "á") + "] LT";
            },
            nextWeek: function() {
              return "dddd [" + (this.hours() !== 1 ? "ás" : "a") + "] LT";
            },
            lastDay: function() {
              return "[onte " + (this.hours() !== 1 ? "á" : "a") + "] LT";
            },
            lastWeek: function() {
              return (
                "[o] dddd [pasado " + (this.hours() !== 1 ? "ás" : "a") + "] LT"
              );
            },
            sameElse: "L"
          },
          relativeTime: {
            future: function(str) {
              if (str.indexOf("un") === 0) {
                return "n" + str;
              }
              return "en " + str;
            },
            past: "hai %s",
            s: "uns segundos",
            m: "un minuto",
            mm: "%d minutos",
            h: "unha hora",
            hh: "%d horas",
            d: "un día",
            dd: "%d días",
            M: "un mes",
            MM: "%d meses",
            y: "un ano",
            yy: "%d anos"
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return gl;
      });

      /***/
    },
    /* 267 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Konkani Latin script [gom-latn]
      //! author : The Discoverer : https://github.com/WikiDiscoverer

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            s: ["thodde secondanim", "thodde second"],
            m: ["eka mintan", "ek minute"],
            mm: [number + " mintanim", number + " mintam"],
            h: ["eka horan", "ek hor"],
            hh: [number + " horanim", number + " hor"],
            d: ["eka disan", "ek dis"],
            dd: [number + " disanim", number + " dis"],
            M: ["eka mhoinean", "ek mhoino"],
            MM: [number + " mhoineanim", number + " mhoine"],
            y: ["eka vorsan", "ek voros"],
            yy: [number + " vorsanim", number + " vorsam"]
          };
          return withoutSuffix ? format[key][0] : format[key][1];
        }

        var gomLatn = moment.defineLocale("gom-latn", {
          months: "Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr".split(
            "_"
          ),
          monthsShort: "Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son'var".split(
            "_"
          ),
          weekdaysShort: "Ait._Som._Mon._Bud._Bre._Suk._Son.".split("_"),
          weekdaysMin: "Ai_Sm_Mo_Bu_Br_Su_Sn".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "A h:mm [vazta]",
            LTS: "A h:mm:ss [vazta]",
            L: "DD-MM-YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY A h:mm [vazta]",
            LLLL: "dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]",
            llll: "ddd, D MMM YYYY, A h:mm [vazta]"
          },
          calendar: {
            sameDay: "[Aiz] LT",
            nextDay: "[Faleam] LT",
            nextWeek: "[Ieta to] dddd[,] LT",
            lastDay: "[Kal] LT",
            lastWeek: "[Fatlo] dddd[,] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s",
            past: "%s adim",
            s: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
          },
          dayOfMonthOrdinalParse: /\d{1,2}(er)/,
          ordinal: function(number, period) {
            switch (period) {
              // the ordinal 'er' only applies to day of the month
              case "D":
                return number + "er";
              default:
              case "M":
              case "Q":
              case "DDD":
              case "d":
              case "w":
              case "W":
                return number;
            }
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          },
          meridiemParse: /rati|sokalli|donparam|sanje/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === "rati") {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === "sokalli") {
              return hour;
            } else if (meridiem === "donparam") {
              return hour > 12 ? hour : hour + 12;
            } else if (meridiem === "sanje") {
              return hour + 12;
            }
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 4) {
              return "rati";
            } else if (hour < 12) {
              return "sokalli";
            } else if (hour < 16) {
              return "donparam";
            } else if (hour < 20) {
              return "sanje";
            } else {
              return "rati";
            }
          }
        });

        return gomLatn;
      });

      /***/
    },
    /* 268 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Gujarati [gu]
      //! author : Kaushik Thanki : https://github.com/Kaushik1987

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var symbolMap = {
          "1": "૧",
          "2": "૨",
          "3": "૩",
          "4": "૪",
          "5": "૫",
          "6": "૬",
          "7": "૭",
          "8": "૮",
          "9": "૯",
          "0": "૦"
        };
        var numberMap = {
          "૧": "1",
          "૨": "2",
          "૩": "3",
          "૪": "4",
          "૫": "5",
          "૬": "6",
          "૭": "7",
          "૮": "8",
          "૯": "9",
          "૦": "0"
        };

        var gu = moment.defineLocale("gu", {
          months: "જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર".split(
            "_"
          ),
          monthsShort: "જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર".split(
            "_"
          ),
          weekdaysShort: "રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ".split("_"),
          weekdaysMin: "ર_સો_મં_બુ_ગુ_શુ_શ".split("_"),
          longDateFormat: {
            LT: "A h:mm વાગ્યે",
            LTS: "A h:mm:ss વાગ્યે",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm વાગ્યે",
            LLLL: "dddd, D MMMM YYYY, A h:mm વાગ્યે"
          },
          calendar: {
            sameDay: "[આજ] LT",
            nextDay: "[કાલે] LT",
            nextWeek: "dddd, LT",
            lastDay: "[ગઇકાલે] LT",
            lastWeek: "[પાછલા] dddd, LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s મા",
            past: "%s પેહલા",
            s: "અમુક પળો",
            m: "એક મિનિટ",
            mm: "%d મિનિટ",
            h: "એક કલાક",
            hh: "%d કલાક",
            d: "એક દિવસ",
            dd: "%d દિવસ",
            M: "એક મહિનો",
            MM: "%d મહિનો",
            y: "એક વર્ષ",
            yy: "%d વર્ષ"
          },
          preparse: function(string) {
            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function(match) {
              return numberMap[match];
            });
          },
          postformat: function(string) {
            return string.replace(/\d/g, function(match) {
              return symbolMap[match];
            });
          },
          // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
          // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
          meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === "રાત") {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === "સવાર") {
              return hour;
            } else if (meridiem === "બપોર") {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === "સાંજ") {
              return hour + 12;
            }
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 4) {
              return "રાત";
            } else if (hour < 10) {
              return "સવાર";
            } else if (hour < 17) {
              return "બપોર";
            } else if (hour < 20) {
              return "સાંજ";
            } else {
              return "રાત";
            }
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return gu;
      });

      /***/
    },
    /* 269 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Hebrew [he]
      //! author : Tomer Cohen : https://github.com/tomer
      //! author : Moshe Simantov : https://github.com/DevelopmentIL
      //! author : Tal Ater : https://github.com/TalAter

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var he = moment.defineLocale("he", {
          months: "ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר".split(
            "_"
          ),
          monthsShort: "ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳".split(
            "_"
          ),
          weekdays: "ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת".split("_"),
          weekdaysShort: "א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳".split("_"),
          weekdaysMin: "א_ב_ג_ד_ה_ו_ש".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D [ב]MMMM YYYY",
            LLL: "D [ב]MMMM YYYY HH:mm",
            LLLL: "dddd, D [ב]MMMM YYYY HH:mm",
            l: "D/M/YYYY",
            ll: "D MMM YYYY",
            lll: "D MMM YYYY HH:mm",
            llll: "ddd, D MMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[היום ב־]LT",
            nextDay: "[מחר ב־]LT",
            nextWeek: "dddd [בשעה] LT",
            lastDay: "[אתמול ב־]LT",
            lastWeek: "[ביום] dddd [האחרון בשעה] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "בעוד %s",
            past: "לפני %s",
            s: "מספר שניות",
            m: "דקה",
            mm: "%d דקות",
            h: "שעה",
            hh: function(number) {
              if (number === 2) {
                return "שעתיים";
              }
              return number + " שעות";
            },
            d: "יום",
            dd: function(number) {
              if (number === 2) {
                return "יומיים";
              }
              return number + " ימים";
            },
            M: "חודש",
            MM: function(number) {
              if (number === 2) {
                return "חודשיים";
              }
              return number + " חודשים";
            },
            y: "שנה",
            yy: function(number) {
              if (number === 2) {
                return "שנתיים";
              } else if (number % 10 === 0 && number !== 10) {
                return number + " שנה";
              }
              return number + " שנים";
            }
          },
          meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
          isPM: function(input) {
            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 5) {
              return "לפנות בוקר";
            } else if (hour < 10) {
              return "בבוקר";
            } else if (hour < 12) {
              return isLower ? 'לפנה"צ' : "לפני הצהריים";
            } else if (hour < 18) {
              return isLower ? 'אחה"צ' : "אחרי הצהריים";
            } else {
              return "בערב";
            }
          }
        });

        return he;
      });

      /***/
    },
    /* 270 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Hindi [hi]
      //! author : Mayank Singhal : https://github.com/mayanksinghal

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var symbolMap = {
          "1": "१",
          "2": "२",
          "3": "३",
          "4": "४",
          "5": "५",
          "6": "६",
          "7": "७",
          "8": "८",
          "9": "९",
          "0": "०"
        };
        var numberMap = {
          "१": "1",
          "२": "2",
          "३": "3",
          "४": "4",
          "५": "5",
          "६": "6",
          "७": "7",
          "८": "8",
          "९": "9",
          "०": "0"
        };

        var hi = moment.defineLocale("hi", {
          months: "जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर".split(
            "_"
          ),
          monthsShort: "जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split(
            "_"
          ),
          weekdaysShort: "रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि".split("_"),
          weekdaysMin: "र_सो_मं_बु_गु_शु_श".split("_"),
          longDateFormat: {
            LT: "A h:mm बजे",
            LTS: "A h:mm:ss बजे",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm बजे",
            LLLL: "dddd, D MMMM YYYY, A h:mm बजे"
          },
          calendar: {
            sameDay: "[आज] LT",
            nextDay: "[कल] LT",
            nextWeek: "dddd, LT",
            lastDay: "[कल] LT",
            lastWeek: "[पिछले] dddd, LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s में",
            past: "%s पहले",
            s: "कुछ ही क्षण",
            m: "एक मिनट",
            mm: "%d मिनट",
            h: "एक घंटा",
            hh: "%d घंटे",
            d: "एक दिन",
            dd: "%d दिन",
            M: "एक महीने",
            MM: "%d महीने",
            y: "एक वर्ष",
            yy: "%d वर्ष"
          },
          preparse: function(string) {
            return string.replace(/[१२३४५६७८९०]/g, function(match) {
              return numberMap[match];
            });
          },
          postformat: function(string) {
            return string.replace(/\d/g, function(match) {
              return symbolMap[match];
            });
          },
          // Hindi notation for meridiems are quite fuzzy in practice. While there exists
          // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
          meridiemParse: /रात|सुबह|दोपहर|शाम/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === "रात") {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === "सुबह") {
              return hour;
            } else if (meridiem === "दोपहर") {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === "शाम") {
              return hour + 12;
            }
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 4) {
              return "रात";
            } else if (hour < 10) {
              return "सुबह";
            } else if (hour < 17) {
              return "दोपहर";
            } else if (hour < 20) {
              return "शाम";
            } else {
              return "रात";
            }
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return hi;
      });

      /***/
    },
    /* 271 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Croatian [hr]
      //! author : Bojan Marković : https://github.com/bmarkovic

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        function translate(number, withoutSuffix, key) {
          var result = number + " ";
          switch (key) {
            case "m":
              return withoutSuffix ? "jedna minuta" : "jedne minute";
            case "mm":
              if (number === 1) {
                result += "minuta";
              } else if (number === 2 || number === 3 || number === 4) {
                result += "minute";
              } else {
                result += "minuta";
              }
              return result;
            case "h":
              return withoutSuffix ? "jedan sat" : "jednog sata";
            case "hh":
              if (number === 1) {
                result += "sat";
              } else if (number === 2 || number === 3 || number === 4) {
                result += "sata";
              } else {
                result += "sati";
              }
              return result;
            case "dd":
              if (number === 1) {
                result += "dan";
              } else {
                result += "dana";
              }
              return result;
            case "MM":
              if (number === 1) {
                result += "mjesec";
              } else if (number === 2 || number === 3 || number === 4) {
                result += "mjeseca";
              } else {
                result += "mjeseci";
              }
              return result;
            case "yy":
              if (number === 1) {
                result += "godina";
              } else if (number === 2 || number === 3 || number === 4) {
                result += "godine";
              } else {
                result += "godina";
              }
              return result;
          }
        }

        var hr = moment.defineLocale("hr", {
          months: {
            format: "siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca".split(
              "_"
            ),
            standalone: "siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac".split(
              "_"
            )
          },
          monthsShort: "sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split(
            "_"
          ),
          weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
          weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm"
          },
          calendar: {
            sameDay: "[danas u] LT",
            nextDay: "[sutra u] LT",
            nextWeek: function() {
              switch (this.day()) {
                case 0:
                  return "[u] [nedjelju] [u] LT";
                case 3:
                  return "[u] [srijedu] [u] LT";
                case 6:
                  return "[u] [subotu] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[u] dddd [u] LT";
              }
            },
            lastDay: "[jučer u] LT",
            lastWeek: function() {
              switch (this.day()) {
                case 0:
                case 3:
                  return "[prošlu] dddd [u] LT";
                case 6:
                  return "[prošle] [subote] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[prošli] dddd [u] LT";
              }
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "za %s",
            past: "prije %s",
            s: "par sekundi",
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: "dan",
            dd: translate,
            M: "mjesec",
            MM: translate,
            y: "godinu",
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return hr;
      });

      /***/
    },
    /* 272 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Hungarian [hu]
      //! author : Adam Brunner : https://github.com/adambrunner

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var weekEndings = "vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton".split(
          " "
        );
        function translate(number, withoutSuffix, key, isFuture) {
          var num = number;
          switch (key) {
            case "s":
              return isFuture || withoutSuffix
                ? "néhány másodperc"
                : "néhány másodperce";
            case "m":
              return "egy" + (isFuture || withoutSuffix ? " perc" : " perce");
            case "mm":
              return num + (isFuture || withoutSuffix ? " perc" : " perce");
            case "h":
              return "egy" + (isFuture || withoutSuffix ? " óra" : " órája");
            case "hh":
              return num + (isFuture || withoutSuffix ? " óra" : " órája");
            case "d":
              return "egy" + (isFuture || withoutSuffix ? " nap" : " napja");
            case "dd":
              return num + (isFuture || withoutSuffix ? " nap" : " napja");
            case "M":
              return (
                "egy" + (isFuture || withoutSuffix ? " hónap" : " hónapja")
              );
            case "MM":
              return num + (isFuture || withoutSuffix ? " hónap" : " hónapja");
            case "y":
              return "egy" + (isFuture || withoutSuffix ? " év" : " éve");
            case "yy":
              return num + (isFuture || withoutSuffix ? " év" : " éve");
          }
          return "";
        }
        function week(isFuture) {
          return (
            (isFuture ? "" : "[múlt] ") +
            "[" +
            weekEndings[this.day()] +
            "] LT[-kor]"
          );
        }

        var hu = moment.defineLocale("hu", {
          months: "január_február_március_április_május_június_július_augusztus_szeptember_október_november_december".split(
            "_"
          ),
          monthsShort: "jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec".split(
            "_"
          ),
          weekdays: "vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat".split(
            "_"
          ),
          weekdaysShort: "vas_hét_kedd_sze_csüt_pén_szo".split("_"),
          weekdaysMin: "v_h_k_sze_cs_p_szo".split("_"),
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "YYYY.MM.DD.",
            LL: "YYYY. MMMM D.",
            LLL: "YYYY. MMMM D. H:mm",
            LLLL: "YYYY. MMMM D., dddd H:mm"
          },
          meridiemParse: /de|du/i,
          isPM: function(input) {
            return input.charAt(1).toLowerCase() === "u";
          },
          meridiem: function(hours, minutes, isLower) {
            if (hours < 12) {
              return isLower === true ? "de" : "DE";
            } else {
              return isLower === true ? "du" : "DU";
            }
          },
          calendar: {
            sameDay: "[ma] LT[-kor]",
            nextDay: "[holnap] LT[-kor]",
            nextWeek: function() {
              return week.call(this, true);
            },
            lastDay: "[tegnap] LT[-kor]",
            lastWeek: function() {
              return week.call(this, false);
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "%s múlva",
            past: "%s",
            s: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return hu;
      });

      /***/
    },
    /* 273 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Armenian [hy-am]
      //! author : Armendarabyan : https://github.com/armendarabyan

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var hyAm = moment.defineLocale("hy-am", {
          months: {
            format: "հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի".split(
              "_"
            ),
            standalone: "հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր".split(
              "_"
            )
          },
          monthsShort: "հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ".split(
            "_"
          ),
          weekdays: "կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ".split(
            "_"
          ),
          weekdaysShort: "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
          weekdaysMin: "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY թ.",
            LLL: "D MMMM YYYY թ., HH:mm",
            LLLL: "dddd, D MMMM YYYY թ., HH:mm"
          },
          calendar: {
            sameDay: "[այսօր] LT",
            nextDay: "[վաղը] LT",
            lastDay: "[երեկ] LT",
            nextWeek: function() {
              return "dddd [օրը ժամը] LT";
            },
            lastWeek: function() {
              return "[անցած] dddd [օրը ժամը] LT";
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "%s հետո",
            past: "%s առաջ",
            s: "մի քանի վայրկյան",
            m: "րոպե",
            mm: "%d րոպե",
            h: "ժամ",
            hh: "%d ժամ",
            d: "օր",
            dd: "%d օր",
            M: "ամիս",
            MM: "%d ամիս",
            y: "տարի",
            yy: "%d տարի"
          },
          meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
          isPM: function(input) {
            return /^(ցերեկվա|երեկոյան)$/.test(input);
          },
          meridiem: function(hour) {
            if (hour < 4) {
              return "գիշերվա";
            } else if (hour < 12) {
              return "առավոտվա";
            } else if (hour < 17) {
              return "ցերեկվա";
            } else {
              return "երեկոյան";
            }
          },
          dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
          ordinal: function(number, period) {
            switch (period) {
              case "DDD":
              case "w":
              case "W":
              case "DDDo":
                if (number === 1) {
                  return number + "-ին";
                }
                return number + "-րդ";
              default:
                return number;
            }
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return hyAm;
      });

      /***/
    },
    /* 274 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Indonesian [id]
      //! author : Mohammad Satrio Utomo : https://github.com/tyok
      //! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var id = moment.defineLocale("id", {
          months: "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember".split(
            "_"
          ),
          monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des".split(
            "_"
          ),
          weekdays: "Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu".split("_"),
          weekdaysShort: "Min_Sen_Sel_Rab_Kam_Jum_Sab".split("_"),
          weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sb".split("_"),
          longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [pukul] HH.mm",
            LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
          },
          meridiemParse: /pagi|siang|sore|malam/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === "pagi") {
              return hour;
            } else if (meridiem === "siang") {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === "sore" || meridiem === "malam") {
              return hour + 12;
            }
          },
          meridiem: function(hours, minutes, isLower) {
            if (hours < 11) {
              return "pagi";
            } else if (hours < 15) {
              return "siang";
            } else if (hours < 19) {
              return "sore";
            } else {
              return "malam";
            }
          },
          calendar: {
            sameDay: "[Hari ini pukul] LT",
            nextDay: "[Besok pukul] LT",
            nextWeek: "dddd [pukul] LT",
            lastDay: "[Kemarin pukul] LT",
            lastWeek: "dddd [lalu pukul] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "dalam %s",
            past: "%s yang lalu",
            s: "beberapa detik",
            m: "semenit",
            mm: "%d menit",
            h: "sejam",
            hh: "%d jam",
            d: "sehari",
            dd: "%d hari",
            M: "sebulan",
            MM: "%d bulan",
            y: "setahun",
            yy: "%d tahun"
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return id;
      });

      /***/
    },
    /* 275 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Icelandic [is]
      //! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        function plural(n) {
          if (n % 100 === 11) {
            return true;
          } else if (n % 10 === 1) {
            return false;
          }
          return true;
        }
        function translate(number, withoutSuffix, key, isFuture) {
          var result = number + " ";
          switch (key) {
            case "s":
              return withoutSuffix || isFuture
                ? "nokkrar sekúndur"
                : "nokkrum sekúndum";
            case "m":
              return withoutSuffix ? "mínúta" : "mínútu";
            case "mm":
              if (plural(number)) {
                return (
                  result + (withoutSuffix || isFuture ? "mínútur" : "mínútum")
                );
              } else if (withoutSuffix) {
                return result + "mínúta";
              }
              return result + "mínútu";
            case "hh":
              if (plural(number)) {
                return (
                  result +
                  (withoutSuffix || isFuture
                    ? "klukkustundir"
                    : "klukkustundum")
                );
              }
              return result + "klukkustund";
            case "d":
              if (withoutSuffix) {
                return "dagur";
              }
              return isFuture ? "dag" : "degi";
            case "dd":
              if (plural(number)) {
                if (withoutSuffix) {
                  return result + "dagar";
                }
                return result + (isFuture ? "daga" : "dögum");
              } else if (withoutSuffix) {
                return result + "dagur";
              }
              return result + (isFuture ? "dag" : "degi");
            case "M":
              if (withoutSuffix) {
                return "mánuður";
              }
              return isFuture ? "mánuð" : "mánuði";
            case "MM":
              if (plural(number)) {
                if (withoutSuffix) {
                  return result + "mánuðir";
                }
                return result + (isFuture ? "mánuði" : "mánuðum");
              } else if (withoutSuffix) {
                return result + "mánuður";
              }
              return result + (isFuture ? "mánuð" : "mánuði");
            case "y":
              return withoutSuffix || isFuture ? "ár" : "ári";
            case "yy":
              if (plural(number)) {
                return result + (withoutSuffix || isFuture ? "ár" : "árum");
              }
              return result + (withoutSuffix || isFuture ? "ár" : "ári");
          }
        }

        var is = moment.defineLocale("is", {
          months: "janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember".split(
            "_"
          ),
          monthsShort: "jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des".split(
            "_"
          ),
          weekdays: "sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur".split(
            "_"
          ),
          weekdaysShort: "sun_mán_þri_mið_fim_fös_lau".split("_"),
          weekdaysMin: "Su_Má_Þr_Mi_Fi_Fö_La".split("_"),
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY [kl.] H:mm",
            LLLL: "dddd, D. MMMM YYYY [kl.] H:mm"
          },
          calendar: {
            sameDay: "[í dag kl.] LT",
            nextDay: "[á morgun kl.] LT",
            nextWeek: "dddd [kl.] LT",
            lastDay: "[í gær kl.] LT",
            lastWeek: "[síðasta] dddd [kl.] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "eftir %s",
            past: "fyrir %s síðan",
            s: translate,
            m: translate,
            mm: translate,
            h: "klukkustund",
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return is;
      });

      /***/
    },
    /* 276 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Italian [it]
      //! author : Lorenzo : https://github.com/aliem
      //! author: Mattia Larentis: https://github.com/nostalgiaz

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var it = moment.defineLocale("it", {
          months: "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split(
            "_"
          ),
          monthsShort: "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split(
            "_"
          ),
          weekdays: "domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato".split(
            "_"
          ),
          weekdaysShort: "dom_lun_mar_mer_gio_ven_sab".split("_"),
          weekdaysMin: "do_lu_ma_me_gi_ve_sa".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Oggi alle] LT",
            nextDay: "[Domani alle] LT",
            nextWeek: "dddd [alle] LT",
            lastDay: "[Ieri alle] LT",
            lastWeek: function() {
              switch (this.day()) {
                case 0:
                  return "[la scorsa] dddd [alle] LT";
                default:
                  return "[lo scorso] dddd [alle] LT";
              }
            },
            sameElse: "L"
          },
          relativeTime: {
            future: function(s) {
              return (/^[0-9].+$/.test(s) ? "tra" : "in") + " " + s;
            },
            past: "%s fa",
            s: "alcuni secondi",
            m: "un minuto",
            mm: "%d minuti",
            h: "un'ora",
            hh: "%d ore",
            d: "un giorno",
            dd: "%d giorni",
            M: "un mese",
            MM: "%d mesi",
            y: "un anno",
            yy: "%d anni"
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return it;
      });

      /***/
    },
    /* 277 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Japanese [ja]
      //! author : LI Long : https://github.com/baryon

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var ja = moment.defineLocale("ja", {
          months: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split(
            "_"
          ),
          monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split(
            "_"
          ),
          weekdays: "日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日".split(
            "_"
          ),
          weekdaysShort: "日_月_火_水_木_金_土".split("_"),
          weekdaysMin: "日_月_火_水_木_金_土".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY/MM/DD",
            LL: "YYYY年M月D日",
            LLL: "YYYY年M月D日 HH:mm",
            LLLL: "YYYY年M月D日 HH:mm dddd",
            l: "YYYY/MM/DD",
            ll: "YYYY年M月D日",
            lll: "YYYY年M月D日 HH:mm",
            llll: "YYYY年M月D日 HH:mm dddd"
          },
          meridiemParse: /午前|午後/i,
          isPM: function(input) {
            return input === "午後";
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 12) {
              return "午前";
            } else {
              return "午後";
            }
          },
          calendar: {
            sameDay: "[今日] LT",
            nextDay: "[明日] LT",
            nextWeek: "[来週]dddd LT",
            lastDay: "[昨日] LT",
            lastWeek: "[前週]dddd LT",
            sameElse: "L"
          },
          dayOfMonthOrdinalParse: /\d{1,2}日/,
          ordinal: function(number, period) {
            switch (period) {
              case "d":
              case "D":
              case "DDD":
                return number + "日";
              default:
                return number;
            }
          },
          relativeTime: {
            future: "%s後",
            past: "%s前",
            s: "数秒",
            m: "1分",
            mm: "%d分",
            h: "1時間",
            hh: "%d時間",
            d: "1日",
            dd: "%d日",
            M: "1ヶ月",
            MM: "%dヶ月",
            y: "1年",
            yy: "%d年"
          }
        });

        return ja;
      });

      /***/
    },
    /* 278 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Javanese [jv]
      //! author : Rony Lantip : https://github.com/lantip
      //! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var jv = moment.defineLocale("jv", {
          months: "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember".split(
            "_"
          ),
          monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des".split(
            "_"
          ),
          weekdays: "Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu".split("_"),
          weekdaysShort: "Min_Sen_Sel_Reb_Kem_Jem_Sep".split("_"),
          weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sp".split("_"),
          longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [pukul] HH.mm",
            LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
          },
          meridiemParse: /enjing|siyang|sonten|ndalu/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === "enjing") {
              return hour;
            } else if (meridiem === "siyang") {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === "sonten" || meridiem === "ndalu") {
              return hour + 12;
            }
          },
          meridiem: function(hours, minutes, isLower) {
            if (hours < 11) {
              return "enjing";
            } else if (hours < 15) {
              return "siyang";
            } else if (hours < 19) {
              return "sonten";
            } else {
              return "ndalu";
            }
          },
          calendar: {
            sameDay: "[Dinten puniko pukul] LT",
            nextDay: "[Mbenjang pukul] LT",
            nextWeek: "dddd [pukul] LT",
            lastDay: "[Kala wingi pukul] LT",
            lastWeek: "dddd [kepengker pukul] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "wonten ing %s",
            past: "%s ingkang kepengker",
            s: "sawetawis detik",
            m: "setunggal menit",
            mm: "%d menit",
            h: "setunggal jam",
            hh: "%d jam",
            d: "sedinten",
            dd: "%d dinten",
            M: "sewulan",
            MM: "%d wulan",
            y: "setaun",
            yy: "%d taun"
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return jv;
      });

      /***/
    },
    /* 279 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Georgian [ka]
      //! author : Irakli Janiashvili : https://github.com/irakli-janiashvili

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var ka = moment.defineLocale("ka", {
          months: {
            standalone: "იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი".split(
              "_"
            ),
            format: "იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს".split(
              "_"
            )
          },
          monthsShort: "იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ".split(
            "_"
          ),
          weekdays: {
            standalone: "კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი".split(
              "_"
            ),
            format: "კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს".split(
              "_"
            ),
            isFormat: /(წინა|შემდეგ)/
          },
          weekdaysShort: "კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ".split("_"),
          weekdaysMin: "კვ_ორ_სა_ოთ_ხუ_პა_შა".split("_"),
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A"
          },
          calendar: {
            sameDay: "[დღეს] LT[-ზე]",
            nextDay: "[ხვალ] LT[-ზე]",
            lastDay: "[გუშინ] LT[-ზე]",
            nextWeek: "[შემდეგ] dddd LT[-ზე]",
            lastWeek: "[წინა] dddd LT-ზე",
            sameElse: "L"
          },
          relativeTime: {
            future: function(s) {
              return /(წამი|წუთი|საათი|წელი)/.test(s)
                ? s.replace(/ი$/, "ში")
                : s + "ში";
            },
            past: function(s) {
              if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {
                return s.replace(/(ი|ე)$/, "ის უკან");
              }
              if (/წელი/.test(s)) {
                return s.replace(/წელი$/, "წლის უკან");
              }
            },
            s: "რამდენიმე წამი",
            m: "წუთი",
            mm: "%d წუთი",
            h: "საათი",
            hh: "%d საათი",
            d: "დღე",
            dd: "%d დღე",
            M: "თვე",
            MM: "%d თვე",
            y: "წელი",
            yy: "%d წელი"
          },
          dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
          ordinal: function(number) {
            if (number === 0) {
              return number;
            }
            if (number === 1) {
              return number + "-ლი";
            }
            if (
              number < 20 ||
              (number <= 100 && number % 20 === 0) ||
              number % 100 === 0
            ) {
              return "მე-" + number;
            }
            return number + "-ე";
          },
          week: {
            dow: 1,
            doy: 7
          }
        });

        return ka;
      });

      /***/
    },
    /* 280 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Kazakh [kk]
      //! authors : Nurlan Rakhimzhanov : https://github.com/nurlan

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var suffixes = {
          0: "-ші",
          1: "-ші",
          2: "-ші",
          3: "-ші",
          4: "-ші",
          5: "-ші",
          6: "-шы",
          7: "-ші",
          8: "-ші",
          9: "-шы",
          10: "-шы",
          20: "-шы",
          30: "-шы",
          40: "-шы",
          50: "-ші",
          60: "-шы",
          70: "-ші",
          80: "-ші",
          90: "-шы",
          100: "-ші"
        };

        var kk = moment.defineLocale("kk", {
          months: "қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан".split(
            "_"
          ),
          monthsShort: "қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел".split(
            "_"
          ),
          weekdays: "жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі".split(
            "_"
          ),
          weekdaysShort: "жек_дүй_сей_сәр_бей_жұм_сен".split("_"),
          weekdaysMin: "жк_дй_сй_ср_бй_жм_сн".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Бүгін сағат] LT",
            nextDay: "[Ертең сағат] LT",
            nextWeek: "dddd [сағат] LT",
            lastDay: "[Кеше сағат] LT",
            lastWeek: "[Өткен аптаның] dddd [сағат] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s ішінде",
            past: "%s бұрын",
            s: "бірнеше секунд",
            m: "бір минут",
            mm: "%d минут",
            h: "бір сағат",
            hh: "%d сағат",
            d: "бір күн",
            dd: "%d күн",
            M: "бір ай",
            MM: "%d ай",
            y: "бір жыл",
            yy: "%d жыл"
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
          ordinal: function(number) {
            var a = number % 10,
              b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return kk;
      });

      /***/
    },
    /* 281 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Cambodian [km]
      //! author : Kruy Vanna : https://github.com/kruyvanna

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var km = moment.defineLocale("km", {
          months: "មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split(
            "_"
          ),
          monthsShort: "មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split(
            "_"
          ),
          weekdays: "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
          weekdaysShort: "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split(
            "_"
          ),
          weekdaysMin: "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split(
            "_"
          ),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[ថ្ងៃនេះ ម៉ោង] LT",
            nextDay: "[ស្អែក ម៉ោង] LT",
            nextWeek: "dddd [ម៉ោង] LT",
            lastDay: "[ម្សិលមិញ ម៉ោង] LT",
            lastWeek: "dddd [សប្តាហ៍មុន] [ម៉ោង] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%sទៀត",
            past: "%sមុន",
            s: "ប៉ុន្មានវិនាទី",
            m: "មួយនាទី",
            mm: "%d នាទី",
            h: "មួយម៉ោង",
            hh: "%d ម៉ោង",
            d: "មួយថ្ងៃ",
            dd: "%d ថ្ងៃ",
            M: "មួយខែ",
            MM: "%d ខែ",
            y: "មួយឆ្នាំ",
            yy: "%d ឆ្នាំ"
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return km;
      });

      /***/
    },
    /* 282 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Kannada [kn]
      //! author : Rajeev Naik : https://github.com/rajeevnaikte

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var symbolMap = {
          "1": "೧",
          "2": "೨",
          "3": "೩",
          "4": "೪",
          "5": "೫",
          "6": "೬",
          "7": "೭",
          "8": "೮",
          "9": "೯",
          "0": "೦"
        };
        var numberMap = {
          "೧": "1",
          "೨": "2",
          "೩": "3",
          "೪": "4",
          "೫": "5",
          "೬": "6",
          "೭": "7",
          "೮": "8",
          "೯": "9",
          "೦": "0"
        };

        var kn = moment.defineLocale("kn", {
          months: "ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್".split(
            "_"
          ),
          monthsShort: "ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬ_ಅಕ್ಟೋಬ_ನವೆಂಬ_ಡಿಸೆಂಬ".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ".split(
            "_"
          ),
          weekdaysShort: "ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ".split("_"),
          weekdaysMin: "ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ".split("_"),
          longDateFormat: {
            LT: "A h:mm",
            LTS: "A h:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm",
            LLLL: "dddd, D MMMM YYYY, A h:mm"
          },
          calendar: {
            sameDay: "[ಇಂದು] LT",
            nextDay: "[ನಾಳೆ] LT",
            nextWeek: "dddd, LT",
            lastDay: "[ನಿನ್ನೆ] LT",
            lastWeek: "[ಕೊನೆಯ] dddd, LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s ನಂತರ",
            past: "%s ಹಿಂದೆ",
            s: "ಕೆಲವು ಕ್ಷಣಗಳು",
            m: "ಒಂದು ನಿಮಿಷ",
            mm: "%d ನಿಮಿಷ",
            h: "ಒಂದು ಗಂಟೆ",
            hh: "%d ಗಂಟೆ",
            d: "ಒಂದು ದಿನ",
            dd: "%d ದಿನ",
            M: "ಒಂದು ತಿಂಗಳು",
            MM: "%d ತಿಂಗಳು",
            y: "ಒಂದು ವರ್ಷ",
            yy: "%d ವರ್ಷ"
          },
          preparse: function(string) {
            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function(match) {
              return numberMap[match];
            });
          },
          postformat: function(string) {
            return string.replace(/\d/g, function(match) {
              return symbolMap[match];
            });
          },
          meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === "ರಾತ್ರಿ") {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === "ಬೆಳಿಗ್ಗೆ") {
              return hour;
            } else if (meridiem === "ಮಧ್ಯಾಹ್ನ") {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === "ಸಂಜೆ") {
              return hour + 12;
            }
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 4) {
              return "ರಾತ್ರಿ";
            } else if (hour < 10) {
              return "ಬೆಳಿಗ್ಗೆ";
            } else if (hour < 17) {
              return "ಮಧ್ಯಾಹ್ನ";
            } else if (hour < 20) {
              return "ಸಂಜೆ";
            } else {
              return "ರಾತ್ರಿ";
            }
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
          ordinal: function(number) {
            return number + "ನೇ";
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return kn;
      });

      /***/
    },
    /* 283 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Korean [ko]
      //! author : Kyungwook, Park : https://github.com/kyungw00k
      //! author : Jeeeyul Lee <jeeeyul@gmail.com>

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var ko = moment.defineLocale("ko", {
          months: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split(
            "_"
          ),
          monthsShort: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split(
            "_"
          ),
          weekdays: "일요일_월요일_화요일_수요일_목요일_금요일_토요일".split(
            "_"
          ),
          weekdaysShort: "일_월_화_수_목_금_토".split("_"),
          weekdaysMin: "일_월_화_수_목_금_토".split("_"),
          longDateFormat: {
            LT: "A h:mm",
            LTS: "A h:mm:ss",
            L: "YYYY.MM.DD",
            LL: "YYYY년 MMMM D일",
            LLL: "YYYY년 MMMM D일 A h:mm",
            LLLL: "YYYY년 MMMM D일 dddd A h:mm",
            l: "YYYY.MM.DD",
            ll: "YYYY년 MMMM D일",
            lll: "YYYY년 MMMM D일 A h:mm",
            llll: "YYYY년 MMMM D일 dddd A h:mm"
          },
          calendar: {
            sameDay: "오늘 LT",
            nextDay: "내일 LT",
            nextWeek: "dddd LT",
            lastDay: "어제 LT",
            lastWeek: "지난주 dddd LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s 후",
            past: "%s 전",
            s: "몇 초",
            ss: "%d초",
            m: "1분",
            mm: "%d분",
            h: "한 시간",
            hh: "%d시간",
            d: "하루",
            dd: "%d일",
            M: "한 달",
            MM: "%d달",
            y: "일 년",
            yy: "%d년"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(일|월|주)/,
          ordinal: function(number, period) {
            switch (period) {
              case "d":
              case "D":
              case "DDD":
                return number + "일";
              case "M":
                return number + "월";
              case "w":
              case "W":
                return number + "주";
              default:
                return number;
            }
          },
          meridiemParse: /오전|오후/,
          isPM: function(token) {
            return token === "오후";
          },
          meridiem: function(hour, minute, isUpper) {
            return hour < 12 ? "오전" : "오후";
          }
        });

        return ko;
      });

      /***/
    },
    /* 284 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Kyrgyz [ky]
      //! author : Chyngyz Arystan uulu : https://github.com/chyngyz

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var suffixes = {
          0: "-чү",
          1: "-чи",
          2: "-чи",
          3: "-чү",
          4: "-чү",
          5: "-чи",
          6: "-чы",
          7: "-чи",
          8: "-чи",
          9: "-чу",
          10: "-чу",
          20: "-чы",
          30: "-чу",
          40: "-чы",
          50: "-чү",
          60: "-чы",
          70: "-чи",
          80: "-чи",
          90: "-чу",
          100: "-чү"
        };

        var ky = moment.defineLocale("ky", {
          months: "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split(
            "_"
          ),
          monthsShort: "янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек".split(
            "_"
          ),
          weekdays: "Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби".split(
            "_"
          ),
          weekdaysShort: "Жек_Дүй_Шей_Шар_Бей_Жум_Ише".split("_"),
          weekdaysMin: "Жк_Дй_Шй_Шр_Бй_Жм_Иш".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Бүгүн саат] LT",
            nextDay: "[Эртең саат] LT",
            nextWeek: "dddd [саат] LT",
            lastDay: "[Кече саат] LT",
            lastWeek: "[Өткен аптанын] dddd [күнү] [саат] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s ичинде",
            past: "%s мурун",
            s: "бирнече секунд",
            m: "бир мүнөт",
            mm: "%d мүнөт",
            h: "бир саат",
            hh: "%d саат",
            d: "бир күн",
            dd: "%d күн",
            M: "бир ай",
            MM: "%d ай",
            y: "бир жыл",
            yy: "%d жыл"
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
          ordinal: function(number) {
            var a = number % 10,
              b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return ky;
      });

      /***/
    },
    /* 285 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Luxembourgish [lb]
      //! author : mweimerskirch : https://github.com/mweimerskirch
      //! author : David Raison : https://github.com/kwisatz

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            m: ["eng Minutt", "enger Minutt"],
            h: ["eng Stonn", "enger Stonn"],
            d: ["een Dag", "engem Dag"],
            M: ["ee Mount", "engem Mount"],
            y: ["ee Joer", "engem Joer"]
          };
          return withoutSuffix ? format[key][0] : format[key][1];
        }
        function processFutureTime(string) {
          var number = string.substr(0, string.indexOf(" "));
          if (eifelerRegelAppliesToNumber(number)) {
            return "a " + string;
          }
          return "an " + string;
        }
        function processPastTime(string) {
          var number = string.substr(0, string.indexOf(" "));
          if (eifelerRegelAppliesToNumber(number)) {
            return "viru " + string;
          }
          return "virun " + string;
        }
        /**
         * Returns true if the word before the given number loses the '-n' ending.
         * e.g. 'an 10 Deeg' but 'a 5 Deeg'
         *
         * @param number {integer}
         * @returns {boolean}
         */
        function eifelerRegelAppliesToNumber(number) {
          number = parseInt(number, 10);
          if (isNaN(number)) {
            return false;
          }
          if (number < 0) {
            // Negative Number --> always true
            return true;
          } else if (number < 10) {
            // Only 1 digit
            if (4 <= number && number <= 7) {
              return true;
            }
            return false;
          } else if (number < 100) {
            // 2 digits
            var lastDigit = number % 10,
              firstDigit = number / 10;
            if (lastDigit === 0) {
              return eifelerRegelAppliesToNumber(firstDigit);
            }
            return eifelerRegelAppliesToNumber(lastDigit);
          } else if (number < 10000) {
            // 3 or 4 digits --> recursively check first digit
            while (number >= 10) {
              number = number / 10;
            }
            return eifelerRegelAppliesToNumber(number);
          } else {
            // Anything larger than 4 digits: recursively check first n-3 digits
            number = number / 1000;
            return eifelerRegelAppliesToNumber(number);
          }
        }

        var lb = moment.defineLocale("lb", {
          months: "Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split(
            "_"
          ),
          monthsShort: "Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg".split(
            "_"
          ),
          weekdaysShort: "So._Mé._Dë._Më._Do._Fr._Sa.".split("_"),
          weekdaysMin: "So_Mé_Dë_Më_Do_Fr_Sa".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "H:mm [Auer]",
            LTS: "H:mm:ss [Auer]",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm [Auer]",
            LLLL: "dddd, D. MMMM YYYY H:mm [Auer]"
          },
          calendar: {
            sameDay: "[Haut um] LT",
            sameElse: "L",
            nextDay: "[Muer um] LT",
            nextWeek: "dddd [um] LT",
            lastDay: "[Gëschter um] LT",
            lastWeek: function() {
              // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
              switch (this.day()) {
                case 2:
                case 4:
                  return "[Leschten] dddd [um] LT";
                default:
                  return "[Leschte] dddd [um] LT";
              }
            }
          },
          relativeTime: {
            future: processFutureTime,
            past: processPastTime,
            s: "e puer Sekonnen",
            m: processRelativeTime,
            mm: "%d Minutten",
            h: processRelativeTime,
            hh: "%d Stonnen",
            d: processRelativeTime,
            dd: "%d Deeg",
            M: processRelativeTime,
            MM: "%d Méint",
            y: processRelativeTime,
            yy: "%d Joer"
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return lb;
      });

      /***/
    },
    /* 286 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Lao [lo]
      //! author : Ryan Hart : https://github.com/ryanhart2

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var lo = moment.defineLocale("lo", {
          months: "ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ".split(
            "_"
          ),
          monthsShort: "ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ".split(
            "_"
          ),
          weekdays: "ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ".split("_"),
          weekdaysShort: "ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ".split("_"),
          weekdaysMin: "ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "ວັນdddd D MMMM YYYY HH:mm"
          },
          meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
          isPM: function(input) {
            return input === "ຕອນແລງ";
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 12) {
              return "ຕອນເຊົ້າ";
            } else {
              return "ຕອນແລງ";
            }
          },
          calendar: {
            sameDay: "[ມື້ນີ້ເວລາ] LT",
            nextDay: "[ມື້ອື່ນເວລາ] LT",
            nextWeek: "[ວັນ]dddd[ໜ້າເວລາ] LT",
            lastDay: "[ມື້ວານນີ້ເວລາ] LT",
            lastWeek: "[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "ອີກ %s",
            past: "%sຜ່ານມາ",
            s: "ບໍ່ເທົ່າໃດວິນາທີ",
            m: "1 ນາທີ",
            mm: "%d ນາທີ",
            h: "1 ຊົ່ວໂມງ",
            hh: "%d ຊົ່ວໂມງ",
            d: "1 ມື້",
            dd: "%d ມື້",
            M: "1 ເດືອນ",
            MM: "%d ເດືອນ",
            y: "1 ປີ",
            yy: "%d ປີ"
          },
          dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
          ordinal: function(number) {
            return "ທີ່" + number;
          }
        });

        return lo;
      });

      /***/
    },
    /* 287 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Lithuanian [lt]
      //! author : Mindaugas Mozūras : https://github.com/mmozuras

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var units = {
          m: "minutė_minutės_minutę",
          mm: "minutės_minučių_minutes",
          h: "valanda_valandos_valandą",
          hh: "valandos_valandų_valandas",
          d: "diena_dienos_dieną",
          dd: "dienos_dienų_dienas",
          M: "mėnuo_mėnesio_mėnesį",
          MM: "mėnesiai_mėnesių_mėnesius",
          y: "metai_metų_metus",
          yy: "metai_metų_metus"
        };
        function translateSeconds(number, withoutSuffix, key, isFuture) {
          if (withoutSuffix) {
            return "kelios sekundės";
          } else {
            return isFuture ? "kelių sekundžių" : "kelias sekundes";
          }
        }
        function translateSingular(number, withoutSuffix, key, isFuture) {
          return withoutSuffix
            ? forms(key)[0]
            : isFuture ? forms(key)[1] : forms(key)[2];
        }
        function special(number) {
          return number % 10 === 0 || (number > 10 && number < 20);
        }
        function forms(key) {
          return units[key].split("_");
        }
        function translate(number, withoutSuffix, key, isFuture) {
          var result = number + " ";
          if (number === 1) {
            return (
              result +
              translateSingular(number, withoutSuffix, key[0], isFuture)
            );
          } else if (withoutSuffix) {
            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
          } else {
            if (isFuture) {
              return result + forms(key)[1];
            } else {
              return result + (special(number) ? forms(key)[1] : forms(key)[2]);
            }
          }
        }
        var lt = moment.defineLocale("lt", {
          months: {
            format: "sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio".split(
              "_"
            ),
            standalone: "sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis".split(
              "_"
            ),
            isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
          },
          monthsShort: "sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd".split(
            "_"
          ),
          weekdays: {
            format: "sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį".split(
              "_"
            ),
            standalone: "sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis".split(
              "_"
            ),
            isFormat: /dddd HH:mm/
          },
          weekdaysShort: "Sek_Pir_Ant_Tre_Ket_Pen_Šeš".split("_"),
          weekdaysMin: "S_P_A_T_K_Pn_Š".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "YYYY [m.] MMMM D [d.]",
            LLL: "YYYY [m.] MMMM D [d.], HH:mm [val.]",
            LLLL: "YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]",
            l: "YYYY-MM-DD",
            ll: "YYYY [m.] MMMM D [d.]",
            lll: "YYYY [m.] MMMM D [d.], HH:mm [val.]",
            llll: "YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]"
          },
          calendar: {
            sameDay: "[Šiandien] LT",
            nextDay: "[Rytoj] LT",
            nextWeek: "dddd LT",
            lastDay: "[Vakar] LT",
            lastWeek: "[Praėjusį] dddd LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "po %s",
            past: "prieš %s",
            s: translateSeconds,
            m: translateSingular,
            mm: translate,
            h: translateSingular,
            hh: translate,
            d: translateSingular,
            dd: translate,
            M: translateSingular,
            MM: translate,
            y: translateSingular,
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}-oji/,
          ordinal: function(number) {
            return number + "-oji";
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return lt;
      });

      /***/
    },
    /* 288 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Latvian [lv]
      //! author : Kristaps Karlsons : https://github.com/skakri
      //! author : Jānis Elmeris : https://github.com/JanisE

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var units = {
          m: "minūtes_minūtēm_minūte_minūtes".split("_"),
          mm: "minūtes_minūtēm_minūte_minūtes".split("_"),
          h: "stundas_stundām_stunda_stundas".split("_"),
          hh: "stundas_stundām_stunda_stundas".split("_"),
          d: "dienas_dienām_diena_dienas".split("_"),
          dd: "dienas_dienām_diena_dienas".split("_"),
          M: "mēneša_mēnešiem_mēnesis_mēneši".split("_"),
          MM: "mēneša_mēnešiem_mēnesis_mēneši".split("_"),
          y: "gada_gadiem_gads_gadi".split("_"),
          yy: "gada_gadiem_gads_gadi".split("_")
        };
        /**
         * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
         */
        function format(forms, number, withoutSuffix) {
          if (withoutSuffix) {
            // E.g. "21 minūte", "3 minūtes".
            return number % 10 === 1 && number % 100 !== 11
              ? forms[2]
              : forms[3];
          } else {
            // E.g. "21 minūtes" as in "pēc 21 minūtes".
            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
            return number % 10 === 1 && number % 100 !== 11
              ? forms[0]
              : forms[1];
          }
        }
        function relativeTimeWithPlural(number, withoutSuffix, key) {
          return number + " " + format(units[key], number, withoutSuffix);
        }
        function relativeTimeWithSingular(number, withoutSuffix, key) {
          return format(units[key], number, withoutSuffix);
        }
        function relativeSeconds(number, withoutSuffix) {
          return withoutSuffix ? "dažas sekundes" : "dažām sekundēm";
        }

        var lv = moment.defineLocale("lv", {
          months: "janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris".split(
            "_"
          ),
          monthsShort: "jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec".split(
            "_"
          ),
          weekdays: "svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena".split(
            "_"
          ),
          weekdaysShort: "Sv_P_O_T_C_Pk_S".split("_"),
          weekdaysMin: "Sv_P_O_T_C_Pk_S".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY.",
            LL: "YYYY. [gada] D. MMMM",
            LLL: "YYYY. [gada] D. MMMM, HH:mm",
            LLLL: "YYYY. [gada] D. MMMM, dddd, HH:mm"
          },
          calendar: {
            sameDay: "[Šodien pulksten] LT",
            nextDay: "[Rīt pulksten] LT",
            nextWeek: "dddd [pulksten] LT",
            lastDay: "[Vakar pulksten] LT",
            lastWeek: "[Pagājušā] dddd [pulksten] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "pēc %s",
            past: "pirms %s",
            s: relativeSeconds,
            m: relativeTimeWithSingular,
            mm: relativeTimeWithPlural,
            h: relativeTimeWithSingular,
            hh: relativeTimeWithPlural,
            d: relativeTimeWithSingular,
            dd: relativeTimeWithPlural,
            M: relativeTimeWithSingular,
            MM: relativeTimeWithPlural,
            y: relativeTimeWithSingular,
            yy: relativeTimeWithPlural
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return lv;
      });

      /***/
    },
    /* 289 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Montenegrin [me]
      //! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var translator = {
          words: {
            //Different grammatical cases
            m: ["jedan minut", "jednog minuta"],
            mm: ["minut", "minuta", "minuta"],
            h: ["jedan sat", "jednog sata"],
            hh: ["sat", "sata", "sati"],
            dd: ["dan", "dana", "dana"],
            MM: ["mjesec", "mjeseca", "mjeseci"],
            yy: ["godina", "godine", "godina"]
          },
          correctGrammaticalCase: function(number, wordKey) {
            return number === 1
              ? wordKey[0]
              : number >= 2 && number <= 4 ? wordKey[1] : wordKey[2];
          },
          translate: function(number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
              return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
              return (
                number +
                " " +
                translator.correctGrammaticalCase(number, wordKey)
              );
            }
          }
        };

        var me = moment.defineLocale("me", {
          months: "januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split(
            "_"
          ),
          monthsShort: "jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split(
            "_"
          ),
          weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
          weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm"
          },
          calendar: {
            sameDay: "[danas u] LT",
            nextDay: "[sjutra u] LT",

            nextWeek: function() {
              switch (this.day()) {
                case 0:
                  return "[u] [nedjelju] [u] LT";
                case 3:
                  return "[u] [srijedu] [u] LT";
                case 6:
                  return "[u] [subotu] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[u] dddd [u] LT";
              }
            },
            lastDay: "[juče u] LT",
            lastWeek: function() {
              var lastWeekDays = [
                "[prošle] [nedjelje] [u] LT",
                "[prošlog] [ponedjeljka] [u] LT",
                "[prošlog] [utorka] [u] LT",
                "[prošle] [srijede] [u] LT",
                "[prošlog] [četvrtka] [u] LT",
                "[prošlog] [petka] [u] LT",
                "[prošle] [subote] [u] LT"
              ];
              return lastWeekDays[this.day()];
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "za %s",
            past: "prije %s",
            s: "nekoliko sekundi",
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: "dan",
            dd: translator.translate,
            M: "mjesec",
            MM: translator.translate,
            y: "godinu",
            yy: translator.translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return me;
      });

      /***/
    },
    /* 290 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Maori [mi]
      //! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var mi = moment.defineLocale("mi", {
          months: "Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea".split(
            "_"
          ),
          monthsShort: "Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki".split(
            "_"
          ),
          monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
          monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
          monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
          monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
          weekdays: "Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei".split(
            "_"
          ),
          weekdaysShort: "Ta_Ma_Tū_We_Tāi_Pa_Hā".split("_"),
          weekdaysMin: "Ta_Ma_Tū_We_Tāi_Pa_Hā".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [i] HH:mm",
            LLLL: "dddd, D MMMM YYYY [i] HH:mm"
          },
          calendar: {
            sameDay: "[i teie mahana, i] LT",
            nextDay: "[apopo i] LT",
            nextWeek: "dddd [i] LT",
            lastDay: "[inanahi i] LT",
            lastWeek: "dddd [whakamutunga i] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "i roto i %s",
            past: "%s i mua",
            s: "te hēkona ruarua",
            m: "he meneti",
            mm: "%d meneti",
            h: "te haora",
            hh: "%d haora",
            d: "he ra",
            dd: "%d ra",
            M: "he marama",
            MM: "%d marama",
            y: "he tau",
            yy: "%d tau"
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return mi;
      });

      /***/
    },
    /* 291 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Macedonian [mk]
      //! author : Borislav Mickov : https://github.com/B0k0

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var mk = moment.defineLocale("mk", {
          months: "јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември".split(
            "_"
          ),
          monthsShort: "јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек".split(
            "_"
          ),
          weekdays: "недела_понеделник_вторник_среда_четврток_петок_сабота".split(
            "_"
          ),
          weekdaysShort: "нед_пон_вто_сре_чет_пет_саб".split("_"),
          weekdaysMin: "нe_пo_вт_ср_че_пе_сa".split("_"),
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "D.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY H:mm",
            LLLL: "dddd, D MMMM YYYY H:mm"
          },
          calendar: {
            sameDay: "[Денес во] LT",
            nextDay: "[Утре во] LT",
            nextWeek: "[Во] dddd [во] LT",
            lastDay: "[Вчера во] LT",
            lastWeek: function() {
              switch (this.day()) {
                case 0:
                case 3:
                case 6:
                  return "[Изминатата] dddd [во] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[Изминатиот] dddd [во] LT";
              }
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "после %s",
            past: "пред %s",
            s: "неколку секунди",
            m: "минута",
            mm: "%d минути",
            h: "час",
            hh: "%d часа",
            d: "ден",
            dd: "%d дена",
            M: "месец",
            MM: "%d месеци",
            y: "година",
            yy: "%d години"
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
          ordinal: function(number) {
            var lastDigit = number % 10,
              last2Digits = number % 100;
            if (number === 0) {
              return number + "-ев";
            } else if (last2Digits === 0) {
              return number + "-ен";
            } else if (last2Digits > 10 && last2Digits < 20) {
              return number + "-ти";
            } else if (lastDigit === 1) {
              return number + "-ви";
            } else if (lastDigit === 2) {
              return number + "-ри";
            } else if (lastDigit === 7 || lastDigit === 8) {
              return number + "-ми";
            } else {
              return number + "-ти";
            }
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return mk;
      });

      /***/
    },
    /* 292 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Malayalam [ml]
      //! author : Floyd Pink : https://github.com/floydpink

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var ml = moment.defineLocale("ml", {
          months: "ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ".split(
            "_"
          ),
          monthsShort: "ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച".split(
            "_"
          ),
          weekdaysShort: "ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി".split("_"),
          weekdaysMin: "ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ".split("_"),
          longDateFormat: {
            LT: "A h:mm -നു",
            LTS: "A h:mm:ss -നു",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm -നു",
            LLLL: "dddd, D MMMM YYYY, A h:mm -നു"
          },
          calendar: {
            sameDay: "[ഇന്ന്] LT",
            nextDay: "[നാളെ] LT",
            nextWeek: "dddd, LT",
            lastDay: "[ഇന്നലെ] LT",
            lastWeek: "[കഴിഞ്ഞ] dddd, LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s കഴിഞ്ഞ്",
            past: "%s മുൻപ്",
            s: "അൽപ നിമിഷങ്ങൾ",
            m: "ഒരു മിനിറ്റ്",
            mm: "%d മിനിറ്റ്",
            h: "ഒരു മണിക്കൂർ",
            hh: "%d മണിക്കൂർ",
            d: "ഒരു ദിവസം",
            dd: "%d ദിവസം",
            M: "ഒരു മാസം",
            MM: "%d മാസം",
            y: "ഒരു വർഷം",
            yy: "%d വർഷം"
          },
          meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (
              (meridiem === "രാത്രി" && hour >= 4) ||
              meridiem === "ഉച്ച കഴിഞ്ഞ്" ||
              meridiem === "വൈകുന്നേരം"
            ) {
              return hour + 12;
            } else {
              return hour;
            }
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 4) {
              return "രാത്രി";
            } else if (hour < 12) {
              return "രാവിലെ";
            } else if (hour < 17) {
              return "ഉച്ച കഴിഞ്ഞ്";
            } else if (hour < 20) {
              return "വൈകുന്നേരം";
            } else {
              return "രാത്രി";
            }
          }
        });

        return ml;
      });

      /***/
    },
    /* 293 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Marathi [mr]
      //! author : Harshad Kale : https://github.com/kalehv
      //! author : Vivek Athalye : https://github.com/vnathalye

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var symbolMap = {
          "1": "१",
          "2": "२",
          "3": "३",
          "4": "४",
          "5": "५",
          "6": "६",
          "7": "७",
          "8": "८",
          "9": "९",
          "0": "०"
        };
        var numberMap = {
          "१": "1",
          "२": "2",
          "३": "3",
          "४": "4",
          "५": "5",
          "६": "6",
          "७": "7",
          "८": "8",
          "९": "9",
          "०": "0"
        };

        function relativeTimeMr(number, withoutSuffix, string, isFuture) {
          var output = "";
          if (withoutSuffix) {
            switch (string) {
              case "s":
                output = "काही सेकंद";
                break;
              case "m":
                output = "एक मिनिट";
                break;
              case "mm":
                output = "%d मिनिटे";
                break;
              case "h":
                output = "एक तास";
                break;
              case "hh":
                output = "%d तास";
                break;
              case "d":
                output = "एक दिवस";
                break;
              case "dd":
                output = "%d दिवस";
                break;
              case "M":
                output = "एक महिना";
                break;
              case "MM":
                output = "%d महिने";
                break;
              case "y":
                output = "एक वर्ष";
                break;
              case "yy":
                output = "%d वर्षे";
                break;
            }
          } else {
            switch (string) {
              case "s":
                output = "काही सेकंदां";
                break;
              case "m":
                output = "एका मिनिटा";
                break;
              case "mm":
                output = "%d मिनिटां";
                break;
              case "h":
                output = "एका तासा";
                break;
              case "hh":
                output = "%d तासां";
                break;
              case "d":
                output = "एका दिवसा";
                break;
              case "dd":
                output = "%d दिवसां";
                break;
              case "M":
                output = "एका महिन्या";
                break;
              case "MM":
                output = "%d महिन्यां";
                break;
              case "y":
                output = "एका वर्षा";
                break;
              case "yy":
                output = "%d वर्षां";
                break;
            }
          }
          return output.replace(/%d/i, number);
        }

        var mr = moment.defineLocale("mr", {
          months: "जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर".split(
            "_"
          ),
          monthsShort: "जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split(
            "_"
          ),
          weekdaysShort: "रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि".split("_"),
          weekdaysMin: "र_सो_मं_बु_गु_शु_श".split("_"),
          longDateFormat: {
            LT: "A h:mm वाजता",
            LTS: "A h:mm:ss वाजता",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm वाजता",
            LLLL: "dddd, D MMMM YYYY, A h:mm वाजता"
          },
          calendar: {
            sameDay: "[आज] LT",
            nextDay: "[उद्या] LT",
            nextWeek: "dddd, LT",
            lastDay: "[काल] LT",
            lastWeek: "[मागील] dddd, LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%sमध्ये",
            past: "%sपूर्वी",
            s: relativeTimeMr,
            m: relativeTimeMr,
            mm: relativeTimeMr,
            h: relativeTimeMr,
            hh: relativeTimeMr,
            d: relativeTimeMr,
            dd: relativeTimeMr,
            M: relativeTimeMr,
            MM: relativeTimeMr,
            y: relativeTimeMr,
            yy: relativeTimeMr
          },
          preparse: function(string) {
            return string.replace(/[१२३४५६७८९०]/g, function(match) {
              return numberMap[match];
            });
          },
          postformat: function(string) {
            return string.replace(/\d/g, function(match) {
              return symbolMap[match];
            });
          },
          meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === "रात्री") {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === "सकाळी") {
              return hour;
            } else if (meridiem === "दुपारी") {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === "सायंकाळी") {
              return hour + 12;
            }
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 4) {
              return "रात्री";
            } else if (hour < 10) {
              return "सकाळी";
            } else if (hour < 17) {
              return "दुपारी";
            } else if (hour < 20) {
              return "सायंकाळी";
            } else {
              return "रात्री";
            }
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return mr;
      });

      /***/
    },
    /* 294 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Malay [ms]
      //! author : Weldan Jamili : https://github.com/weldan

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var ms = moment.defineLocale("ms", {
          months: "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split(
            "_"
          ),
          monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split(
            "_"
          ),
          weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
          weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
          weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
          longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [pukul] HH.mm",
            LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
          },
          meridiemParse: /pagi|tengahari|petang|malam/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === "pagi") {
              return hour;
            } else if (meridiem === "tengahari") {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === "petang" || meridiem === "malam") {
              return hour + 12;
            }
          },
          meridiem: function(hours, minutes, isLower) {
            if (hours < 11) {
              return "pagi";
            } else if (hours < 15) {
              return "tengahari";
            } else if (hours < 19) {
              return "petang";
            } else {
              return "malam";
            }
          },
          calendar: {
            sameDay: "[Hari ini pukul] LT",
            nextDay: "[Esok pukul] LT",
            nextWeek: "dddd [pukul] LT",
            lastDay: "[Kelmarin pukul] LT",
            lastWeek: "dddd [lepas pukul] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "dalam %s",
            past: "%s yang lepas",
            s: "beberapa saat",
            m: "seminit",
            mm: "%d minit",
            h: "sejam",
            hh: "%d jam",
            d: "sehari",
            dd: "%d hari",
            M: "sebulan",
            MM: "%d bulan",
            y: "setahun",
            yy: "%d tahun"
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return ms;
      });

      /***/
    },
    /* 295 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Malay [ms-my]
      //! note : DEPRECATED, the correct one is [ms]
      //! author : Weldan Jamili : https://github.com/weldan

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var msMy = moment.defineLocale("ms-my", {
          months: "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split(
            "_"
          ),
          monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split(
            "_"
          ),
          weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
          weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
          weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
          longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [pukul] HH.mm",
            LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
          },
          meridiemParse: /pagi|tengahari|petang|malam/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === "pagi") {
              return hour;
            } else if (meridiem === "tengahari") {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === "petang" || meridiem === "malam") {
              return hour + 12;
            }
          },
          meridiem: function(hours, minutes, isLower) {
            if (hours < 11) {
              return "pagi";
            } else if (hours < 15) {
              return "tengahari";
            } else if (hours < 19) {
              return "petang";
            } else {
              return "malam";
            }
          },
          calendar: {
            sameDay: "[Hari ini pukul] LT",
            nextDay: "[Esok pukul] LT",
            nextWeek: "dddd [pukul] LT",
            lastDay: "[Kelmarin pukul] LT",
            lastWeek: "dddd [lepas pukul] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "dalam %s",
            past: "%s yang lepas",
            s: "beberapa saat",
            m: "seminit",
            mm: "%d minit",
            h: "sejam",
            hh: "%d jam",
            d: "sehari",
            dd: "%d hari",
            M: "sebulan",
            MM: "%d bulan",
            y: "setahun",
            yy: "%d tahun"
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return msMy;
      });

      /***/
    },
    /* 296 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Burmese [my]
      //! author : Squar team, mysquar.com
      //! author : David Rossellat : https://github.com/gholadr
      //! author : Tin Aung Lin : https://github.com/thanyawzinmin

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var symbolMap = {
          "1": "၁",
          "2": "၂",
          "3": "၃",
          "4": "၄",
          "5": "၅",
          "6": "၆",
          "7": "၇",
          "8": "၈",
          "9": "၉",
          "0": "၀"
        };
        var numberMap = {
          "၁": "1",
          "၂": "2",
          "၃": "3",
          "၄": "4",
          "၅": "5",
          "၆": "6",
          "၇": "7",
          "၈": "8",
          "၉": "9",
          "၀": "0"
        };

        var my = moment.defineLocale("my", {
          months: "ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ".split(
            "_"
          ),
          monthsShort: "ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ".split(
            "_"
          ),
          weekdays: "တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ".split(
            "_"
          ),
          weekdaysShort: "နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),
          weekdaysMin: "နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),

          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[ယနေ.] LT [မှာ]",
            nextDay: "[မနက်ဖြန်] LT [မှာ]",
            nextWeek: "dddd LT [မှာ]",
            lastDay: "[မနေ.က] LT [မှာ]",
            lastWeek: "[ပြီးခဲ့သော] dddd LT [မှာ]",
            sameElse: "L"
          },
          relativeTime: {
            future: "လာမည့် %s မှာ",
            past: "လွန်ခဲ့သော %s က",
            s: "စက္ကန်.အနည်းငယ်",
            m: "တစ်မိနစ်",
            mm: "%d မိနစ်",
            h: "တစ်နာရီ",
            hh: "%d နာရီ",
            d: "တစ်ရက်",
            dd: "%d ရက်",
            M: "တစ်လ",
            MM: "%d လ",
            y: "တစ်နှစ်",
            yy: "%d နှစ်"
          },
          preparse: function(string) {
            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function(match) {
              return numberMap[match];
            });
          },
          postformat: function(string) {
            return string.replace(/\d/g, function(match) {
              return symbolMap[match];
            });
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return my;
      });

      /***/
    },
    /* 297 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Norwegian Bokmål [nb]
      //! authors : Espen Hovlandsdal : https://github.com/rexxars
      //!           Sigurd Gartmann : https://github.com/sigurdga

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var nb = moment.defineLocale("nb", {
          months: "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split(
            "_"
          ),
          monthsShort: "jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split(
            "_"
          ),
          weekdaysShort: "sø._ma._ti._on._to._fr._lø.".split("_"),
          weekdaysMin: "sø_ma_ti_on_to_fr_lø".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY [kl.] HH:mm",
            LLLL: "dddd D. MMMM YYYY [kl.] HH:mm"
          },
          calendar: {
            sameDay: "[i dag kl.] LT",
            nextDay: "[i morgen kl.] LT",
            nextWeek: "dddd [kl.] LT",
            lastDay: "[i går kl.] LT",
            lastWeek: "[forrige] dddd [kl.] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "om %s",
            past: "%s siden",
            s: "noen sekunder",
            m: "ett minutt",
            mm: "%d minutter",
            h: "en time",
            hh: "%d timer",
            d: "en dag",
            dd: "%d dager",
            M: "en måned",
            MM: "%d måneder",
            y: "ett år",
            yy: "%d år"
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return nb;
      });

      /***/
    },
    /* 298 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Nepalese [ne]
      //! author : suvash : https://github.com/suvash

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var symbolMap = {
          "1": "१",
          "2": "२",
          "3": "३",
          "4": "४",
          "5": "५",
          "6": "६",
          "7": "७",
          "8": "८",
          "9": "९",
          "0": "०"
        };
        var numberMap = {
          "१": "1",
          "२": "2",
          "३": "3",
          "४": "4",
          "५": "5",
          "६": "6",
          "७": "7",
          "८": "8",
          "९": "9",
          "०": "0"
        };

        var ne = moment.defineLocale("ne", {
          months: "जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर".split(
            "_"
          ),
          monthsShort: "जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार".split(
            "_"
          ),
          weekdaysShort: "आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.".split("_"),
          weekdaysMin: "आ._सो._मं._बु._बि._शु._श.".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "Aको h:mm बजे",
            LTS: "Aको h:mm:ss बजे",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, Aको h:mm बजे",
            LLLL: "dddd, D MMMM YYYY, Aको h:mm बजे"
          },
          preparse: function(string) {
            return string.replace(/[१२३४५६७८९०]/g, function(match) {
              return numberMap[match];
            });
          },
          postformat: function(string) {
            return string.replace(/\d/g, function(match) {
              return symbolMap[match];
            });
          },
          meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === "राति") {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === "बिहान") {
              return hour;
            } else if (meridiem === "दिउँसो") {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === "साँझ") {
              return hour + 12;
            }
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 3) {
              return "राति";
            } else if (hour < 12) {
              return "बिहान";
            } else if (hour < 16) {
              return "दिउँसो";
            } else if (hour < 20) {
              return "साँझ";
            } else {
              return "राति";
            }
          },
          calendar: {
            sameDay: "[आज] LT",
            nextDay: "[भोलि] LT",
            nextWeek: "[आउँदो] dddd[,] LT",
            lastDay: "[हिजो] LT",
            lastWeek: "[गएको] dddd[,] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%sमा",
            past: "%s अगाडि",
            s: "केही क्षण",
            m: "एक मिनेट",
            mm: "%d मिनेट",
            h: "एक घण्टा",
            hh: "%d घण्टा",
            d: "एक दिन",
            dd: "%d दिन",
            M: "एक महिना",
            MM: "%d महिना",
            y: "एक बर्ष",
            yy: "%d बर्ष"
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return ne;
      });

      /***/
    },
    /* 299 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Dutch [nl]
      //! author : Joris Röling : https://github.com/jorisroling
      //! author : Jacob Middag : https://github.com/middagj

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var monthsShortWithDots = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split(
          "_"
        );
        var monthsShortWithoutDots = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split(
          "_"
        );

        var monthsParse = [
          /^jan/i,
          /^feb/i,
          /^maart|mrt.?$/i,
          /^apr/i,
          /^mei$/i,
          /^jun[i.]?$/i,
          /^jul[i.]?$/i,
          /^aug/i,
          /^sep/i,
          /^okt/i,
          /^nov/i,
          /^dec/i
        ];
        var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

        var nl = moment.defineLocale("nl", {
          months: "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split(
            "_"
          ),
          monthsShort: function(m, format) {
            if (!m) {
              return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
              return monthsShortWithoutDots[m.month()];
            } else {
              return monthsShortWithDots[m.month()];
            }
          },

          monthsRegex: monthsRegex,
          monthsShortRegex: monthsRegex,
          monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
          monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,

          weekdays: "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split(
            "_"
          ),
          weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
          weekdaysMin: "zo_ma_di_wo_do_vr_za".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD-MM-YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[vandaag om] LT",
            nextDay: "[morgen om] LT",
            nextWeek: "dddd [om] LT",
            lastDay: "[gisteren om] LT",
            lastWeek: "[afgelopen] dddd [om] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "over %s",
            past: "%s geleden",
            s: "een paar seconden",
            m: "één minuut",
            mm: "%d minuten",
            h: "één uur",
            hh: "%d uur",
            d: "één dag",
            dd: "%d dagen",
            M: "één maand",
            MM: "%d maanden",
            y: "één jaar",
            yy: "%d jaar"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
          ordinal: function(number) {
            return (
              number +
              (number === 1 || number === 8 || number >= 20 ? "ste" : "de")
            );
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return nl;
      });

      /***/
    },
    /* 300 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Dutch (Belgium) [nl-be]
      //! author : Joris Röling : https://github.com/jorisroling
      //! author : Jacob Middag : https://github.com/middagj

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var monthsShortWithDots = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split(
          "_"
        );
        var monthsShortWithoutDots = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split(
          "_"
        );

        var monthsParse = [
          /^jan/i,
          /^feb/i,
          /^maart|mrt.?$/i,
          /^apr/i,
          /^mei$/i,
          /^jun[i.]?$/i,
          /^jul[i.]?$/i,
          /^aug/i,
          /^sep/i,
          /^okt/i,
          /^nov/i,
          /^dec/i
        ];
        var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

        var nlBe = moment.defineLocale("nl-be", {
          months: "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split(
            "_"
          ),
          monthsShort: function(m, format) {
            if (!m) {
              return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
              return monthsShortWithoutDots[m.month()];
            } else {
              return monthsShortWithDots[m.month()];
            }
          },

          monthsRegex: monthsRegex,
          monthsShortRegex: monthsRegex,
          monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
          monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,

          weekdays: "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split(
            "_"
          ),
          weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
          weekdaysMin: "zo_ma_di_wo_do_vr_za".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[vandaag om] LT",
            nextDay: "[morgen om] LT",
            nextWeek: "dddd [om] LT",
            lastDay: "[gisteren om] LT",
            lastWeek: "[afgelopen] dddd [om] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "over %s",
            past: "%s geleden",
            s: "een paar seconden",
            m: "één minuut",
            mm: "%d minuten",
            h: "één uur",
            hh: "%d uur",
            d: "één dag",
            dd: "%d dagen",
            M: "één maand",
            MM: "%d maanden",
            y: "één jaar",
            yy: "%d jaar"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
          ordinal: function(number) {
            return (
              number +
              (number === 1 || number === 8 || number >= 20 ? "ste" : "de")
            );
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return nlBe;
      });

      /***/
    },
    /* 301 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Nynorsk [nn]
      //! author : https://github.com/mechuwind

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var nn = moment.defineLocale("nn", {
          months: "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split(
            "_"
          ),
          monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split(
            "_"
          ),
          weekdays: "sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag".split(
            "_"
          ),
          weekdaysShort: "sun_mån_tys_ons_tor_fre_lau".split("_"),
          weekdaysMin: "su_må_ty_on_to_fr_lø".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY [kl.] H:mm",
            LLLL: "dddd D. MMMM YYYY [kl.] HH:mm"
          },
          calendar: {
            sameDay: "[I dag klokka] LT",
            nextDay: "[I morgon klokka] LT",
            nextWeek: "dddd [klokka] LT",
            lastDay: "[I går klokka] LT",
            lastWeek: "[Føregåande] dddd [klokka] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "om %s",
            past: "%s sidan",
            s: "nokre sekund",
            m: "eit minutt",
            mm: "%d minutt",
            h: "ein time",
            hh: "%d timar",
            d: "ein dag",
            dd: "%d dagar",
            M: "ein månad",
            MM: "%d månader",
            y: "eit år",
            yy: "%d år"
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return nn;
      });

      /***/
    },
    /* 302 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Punjabi (India) [pa-in]
      //! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var symbolMap = {
          "1": "੧",
          "2": "੨",
          "3": "੩",
          "4": "੪",
          "5": "੫",
          "6": "੬",
          "7": "੭",
          "8": "੮",
          "9": "੯",
          "0": "੦"
        };
        var numberMap = {
          "੧": "1",
          "੨": "2",
          "੩": "3",
          "੪": "4",
          "੫": "5",
          "੬": "6",
          "੭": "7",
          "੮": "8",
          "੯": "9",
          "੦": "0"
        };

        var paIn = moment.defineLocale("pa-in", {
          // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.
          months: "ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ".split(
            "_"
          ),
          monthsShort: "ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ".split(
            "_"
          ),
          weekdays: "ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ".split(
            "_"
          ),
          weekdaysShort: "ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ".split("_"),
          weekdaysMin: "ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ".split("_"),
          longDateFormat: {
            LT: "A h:mm ਵਜੇ",
            LTS: "A h:mm:ss ਵਜੇ",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm ਵਜੇ",
            LLLL: "dddd, D MMMM YYYY, A h:mm ਵਜੇ"
          },
          calendar: {
            sameDay: "[ਅਜ] LT",
            nextDay: "[ਕਲ] LT",
            nextWeek: "dddd, LT",
            lastDay: "[ਕਲ] LT",
            lastWeek: "[ਪਿਛਲੇ] dddd, LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s ਵਿੱਚ",
            past: "%s ਪਿਛਲੇ",
            s: "ਕੁਝ ਸਕਿੰਟ",
            m: "ਇਕ ਮਿੰਟ",
            mm: "%d ਮਿੰਟ",
            h: "ਇੱਕ ਘੰਟਾ",
            hh: "%d ਘੰਟੇ",
            d: "ਇੱਕ ਦਿਨ",
            dd: "%d ਦਿਨ",
            M: "ਇੱਕ ਮਹੀਨਾ",
            MM: "%d ਮਹੀਨੇ",
            y: "ਇੱਕ ਸਾਲ",
            yy: "%d ਸਾਲ"
          },
          preparse: function(string) {
            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function(match) {
              return numberMap[match];
            });
          },
          postformat: function(string) {
            return string.replace(/\d/g, function(match) {
              return symbolMap[match];
            });
          },
          // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
          // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
          meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === "ਰਾਤ") {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === "ਸਵੇਰ") {
              return hour;
            } else if (meridiem === "ਦੁਪਹਿਰ") {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === "ਸ਼ਾਮ") {
              return hour + 12;
            }
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 4) {
              return "ਰਾਤ";
            } else if (hour < 10) {
              return "ਸਵੇਰ";
            } else if (hour < 17) {
              return "ਦੁਪਹਿਰ";
            } else if (hour < 20) {
              return "ਸ਼ਾਮ";
            } else {
              return "ਰਾਤ";
            }
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return paIn;
      });

      /***/
    },
    /* 303 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Polish [pl]
      //! author : Rafal Hirsz : https://github.com/evoL

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var monthsNominative = "styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień".split(
          "_"
        );
        var monthsSubjective = "stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia".split(
          "_"
        );
        function plural(n) {
          return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;
        }
        function translate(number, withoutSuffix, key) {
          var result = number + " ";
          switch (key) {
            case "m":
              return withoutSuffix ? "minuta" : "minutę";
            case "mm":
              return result + (plural(number) ? "minuty" : "minut");
            case "h":
              return withoutSuffix ? "godzina" : "godzinę";
            case "hh":
              return result + (plural(number) ? "godziny" : "godzin");
            case "MM":
              return result + (plural(number) ? "miesiące" : "miesięcy");
            case "yy":
              return result + (plural(number) ? "lata" : "lat");
          }
        }

        var pl = moment.defineLocale("pl", {
          months: function(momentToFormat, format) {
            if (!momentToFormat) {
              return monthsNominative;
            } else if (format === "") {
              // Hack: if format empty we know this is used to generate
              // RegExp by moment. Give then back both valid forms of months
              // in RegExp ready format.
              return (
                "(" +
                monthsSubjective[momentToFormat.month()] +
                "|" +
                monthsNominative[momentToFormat.month()] +
                ")"
              );
            } else if (/D MMMM/.test(format)) {
              return monthsSubjective[momentToFormat.month()];
            } else {
              return monthsNominative[momentToFormat.month()];
            }
          },
          monthsShort: "sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru".split(
            "_"
          ),
          weekdays: "niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota".split(
            "_"
          ),
          weekdaysShort: "ndz_pon_wt_śr_czw_pt_sob".split("_"),
          weekdaysMin: "Nd_Pn_Wt_Śr_Cz_Pt_So".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Dziś o] LT",
            nextDay: "[Jutro o] LT",
            nextWeek: function() {
              switch (this.day()) {
                case 0:
                  return "[W niedzielę o] LT";

                case 2:
                  return "[We wtorek o] LT";

                case 3:
                  return "[W środę o] LT";

                case 6:
                  return "[W sobotę o] LT";

                default:
                  return "[W] dddd [o] LT";
              }
            },
            lastDay: "[Wczoraj o] LT",
            lastWeek: function() {
              switch (this.day()) {
                case 0:
                  return "[W zeszłą niedzielę o] LT";
                case 3:
                  return "[W zeszłą środę o] LT";
                case 6:
                  return "[W zeszłą sobotę o] LT";
                default:
                  return "[W zeszły] dddd [o] LT";
              }
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "za %s",
            past: "%s temu",
            s: "kilka sekund",
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: "1 dzień",
            dd: "%d dni",
            M: "miesiąc",
            MM: translate,
            y: "rok",
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return pl;
      });

      /***/
    },
    /* 304 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Portuguese [pt]
      //! author : Jefferson : https://github.com/jalex79

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var pt = moment.defineLocale("pt", {
          months: "janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split(
            "_"
          ),
          monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split(
            "_"
          ),
          weekdays: "Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado".split(
            "_"
          ),
          weekdaysShort: "Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"),
          weekdaysMin: "Do_2ª_3ª_4ª_5ª_6ª_Sá".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY HH:mm",
            LLLL: "dddd, D [de] MMMM [de] YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Hoje às] LT",
            nextDay: "[Amanhã às] LT",
            nextWeek: "dddd [às] LT",
            lastDay: "[Ontem às] LT",
            lastWeek: function() {
              return this.day() === 0 || this.day() === 6
                ? "[Último] dddd [às] LT" // Saturday + Sunday
                : "[Última] dddd [às] LT"; // Monday - Friday
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "em %s",
            past: "há %s",
            s: "segundos",
            m: "um minuto",
            mm: "%d minutos",
            h: "uma hora",
            hh: "%d horas",
            d: "um dia",
            dd: "%d dias",
            M: "um mês",
            MM: "%d meses",
            y: "um ano",
            yy: "%d anos"
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return pt;
      });

      /***/
    },
    /* 305 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Portuguese (Brazil) [pt-br]
      //! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var ptBr = moment.defineLocale("pt-br", {
          months: "janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split(
            "_"
          ),
          monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split(
            "_"
          ),
          weekdays: "Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado".split(
            "_"
          ),
          weekdaysShort: "Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"),
          weekdaysMin: "Do_2ª_3ª_4ª_5ª_6ª_Sá".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY [às] HH:mm",
            LLLL: "dddd, D [de] MMMM [de] YYYY [às] HH:mm"
          },
          calendar: {
            sameDay: "[Hoje às] LT",
            nextDay: "[Amanhã às] LT",
            nextWeek: "dddd [às] LT",
            lastDay: "[Ontem às] LT",
            lastWeek: function() {
              return this.day() === 0 || this.day() === 6
                ? "[Último] dddd [às] LT" // Saturday + Sunday
                : "[Última] dddd [às] LT"; // Monday - Friday
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "em %s",
            past: "%s atrás",
            s: "poucos segundos",
            ss: "%d segundos",
            m: "um minuto",
            mm: "%d minutos",
            h: "uma hora",
            hh: "%d horas",
            d: "um dia",
            dd: "%d dias",
            M: "um mês",
            MM: "%d meses",
            y: "um ano",
            yy: "%d anos"
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: "%dº"
        });

        return ptBr;
      });

      /***/
    },
    /* 306 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Romanian [ro]
      //! author : Vlad Gurdiga : https://github.com/gurdiga
      //! author : Valentin Agachi : https://github.com/avaly

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        function relativeTimeWithPlural(number, withoutSuffix, key) {
          var format = {
              mm: "minute",
              hh: "ore",
              dd: "zile",
              MM: "luni",
              yy: "ani"
            },
            separator = " ";
          if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
            separator = " de ";
          }
          return number + separator + format[key];
        }

        var ro = moment.defineLocale("ro", {
          months: "ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie".split(
            "_"
          ),
          monthsShort: "ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "duminică_luni_marți_miercuri_joi_vineri_sâmbătă".split(
            "_"
          ),
          weekdaysShort: "Dum_Lun_Mar_Mie_Joi_Vin_Sâm".split("_"),
          weekdaysMin: "Du_Lu_Ma_Mi_Jo_Vi_Sâ".split("_"),
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY H:mm",
            LLLL: "dddd, D MMMM YYYY H:mm"
          },
          calendar: {
            sameDay: "[azi la] LT",
            nextDay: "[mâine la] LT",
            nextWeek: "dddd [la] LT",
            lastDay: "[ieri la] LT",
            lastWeek: "[fosta] dddd [la] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "peste %s",
            past: "%s în urmă",
            s: "câteva secunde",
            m: "un minut",
            mm: relativeTimeWithPlural,
            h: "o oră",
            hh: relativeTimeWithPlural,
            d: "o zi",
            dd: relativeTimeWithPlural,
            M: "o lună",
            MM: relativeTimeWithPlural,
            y: "un an",
            yy: relativeTimeWithPlural
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return ro;
      });

      /***/
    },
    /* 307 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Russian [ru]
      //! author : Viktorminator : https://github.com/Viktorminator
      //! Author : Menelion Elensúle : https://github.com/Oire
      //! author : Коренберг Марк : https://github.com/socketpair

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        function plural(word, num) {
          var forms = word.split("_");
          return num % 10 === 1 && num % 100 !== 11
            ? forms[0]
            : num % 10 >= 2 &&
              num % 10 <= 4 &&
              (num % 100 < 10 || num % 100 >= 20)
              ? forms[1]
              : forms[2];
        }
        function relativeTimeWithPlural(number, withoutSuffix, key) {
          var format = {
            mm: withoutSuffix ? "минута_минуты_минут" : "минуту_минуты_минут",
            hh: "час_часа_часов",
            dd: "день_дня_дней",
            MM: "месяц_месяца_месяцев",
            yy: "год_года_лет"
          };
          if (key === "m") {
            return withoutSuffix ? "минута" : "минуту";
          } else {
            return number + " " + plural(format[key], +number);
          }
        }
        var monthsParse = [
          /^янв/i,
          /^фев/i,
          /^мар/i,
          /^апр/i,
          /^ма[йя]/i,
          /^июн/i,
          /^июл/i,
          /^авг/i,
          /^сен/i,
          /^окт/i,
          /^ноя/i,
          /^дек/i
        ];

        // http://new.gramota.ru/spravka/rules/139-prop : § 103
        // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
        // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
        var ru = moment.defineLocale("ru", {
          months: {
            format: "января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря".split(
              "_"
            ),
            standalone: "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split(
              "_"
            )
          },
          monthsShort: {
            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
            format: "янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.".split(
              "_"
            ),
            standalone: "янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.".split(
              "_"
            )
          },
          weekdays: {
            standalone: "воскресенье_понедельник_вторник_среда_четверг_пятница_суббота".split(
              "_"
            ),
            format: "воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу".split(
              "_"
            ),
            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
          },
          weekdaysShort: "вс_пн_вт_ср_чт_пт_сб".split("_"),
          weekdaysMin: "вс_пн_вт_ср_чт_пт_сб".split("_"),
          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,

          // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
          monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

          // копия предыдущего
          monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

          // полные названия с падежами
          monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

          // Выражение, которое соотвествует только сокращённым формам
          monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY г.",
            LLL: "D MMMM YYYY г., HH:mm",
            LLLL: "dddd, D MMMM YYYY г., HH:mm"
          },
          calendar: {
            sameDay: "[Сегодня в] LT",
            nextDay: "[Завтра в] LT",
            lastDay: "[Вчера в] LT",
            nextWeek: function(now) {
              if (now.week() !== this.week()) {
                switch (this.day()) {
                  case 0:
                    return "[В следующее] dddd [в] LT";
                  case 1:
                  case 2:
                  case 4:
                    return "[В следующий] dddd [в] LT";
                  case 3:
                  case 5:
                  case 6:
                    return "[В следующую] dddd [в] LT";
                }
              } else {
                if (this.day() === 2) {
                  return "[Во] dddd [в] LT";
                } else {
                  return "[В] dddd [в] LT";
                }
              }
            },
            lastWeek: function(now) {
              if (now.week() !== this.week()) {
                switch (this.day()) {
                  case 0:
                    return "[В прошлое] dddd [в] LT";
                  case 1:
                  case 2:
                  case 4:
                    return "[В прошлый] dddd [в] LT";
                  case 3:
                  case 5:
                  case 6:
                    return "[В прошлую] dddd [в] LT";
                }
              } else {
                if (this.day() === 2) {
                  return "[Во] dddd [в] LT";
                } else {
                  return "[В] dddd [в] LT";
                }
              }
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "через %s",
            past: "%s назад",
            s: "несколько секунд",
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: "час",
            hh: relativeTimeWithPlural,
            d: "день",
            dd: relativeTimeWithPlural,
            M: "месяц",
            MM: relativeTimeWithPlural,
            y: "год",
            yy: relativeTimeWithPlural
          },
          meridiemParse: /ночи|утра|дня|вечера/i,
          isPM: function(input) {
            return /^(дня|вечера)$/.test(input);
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 4) {
              return "ночи";
            } else if (hour < 12) {
              return "утра";
            } else if (hour < 17) {
              return "дня";
            } else {
              return "вечера";
            }
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
          ordinal: function(number, period) {
            switch (period) {
              case "M":
              case "d":
              case "DDD":
                return number + "-й";
              case "D":
                return number + "-го";
              case "w":
              case "W":
                return number + "-я";
              default:
                return number;
            }
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return ru;
      });

      /***/
    },
    /* 308 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Sindhi [sd]
      //! author : Narain Sagar : https://github.com/narainsagar

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var months = [
          "جنوري",
          "فيبروري",
          "مارچ",
          "اپريل",
          "مئي",
          "جون",
          "جولاءِ",
          "آگسٽ",
          "سيپٽمبر",
          "آڪٽوبر",
          "نومبر",
          "ڊسمبر"
        ];
        var days = ["آچر", "سومر", "اڱارو", "اربع", "خميس", "جمع", "ڇنڇر"];

        var sd = moment.defineLocale("sd", {
          months: months,
          monthsShort: months,
          weekdays: days,
          weekdaysShort: days,
          weekdaysMin: days,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd، D MMMM YYYY HH:mm"
          },
          meridiemParse: /صبح|شام/,
          isPM: function(input) {
            return "شام" === input;
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 12) {
              return "صبح";
            }
            return "شام";
          },
          calendar: {
            sameDay: "[اڄ] LT",
            nextDay: "[سڀاڻي] LT",
            nextWeek: "dddd [اڳين هفتي تي] LT",
            lastDay: "[ڪالهه] LT",
            lastWeek: "[گزريل هفتي] dddd [تي] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s پوء",
            past: "%s اڳ",
            s: "چند سيڪنڊ",
            m: "هڪ منٽ",
            mm: "%d منٽ",
            h: "هڪ ڪلاڪ",
            hh: "%d ڪلاڪ",
            d: "هڪ ڏينهن",
            dd: "%d ڏينهن",
            M: "هڪ مهينو",
            MM: "%d مهينا",
            y: "هڪ سال",
            yy: "%d سال"
          },
          preparse: function(string) {
            return string.replace(/،/g, ",");
          },
          postformat: function(string) {
            return string.replace(/,/g, "،");
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return sd;
      });

      /***/
    },
    /* 309 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Northern Sami [se]
      //! authors : Bård Rolstad Henriksen : https://github.com/karamell

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var se = moment.defineLocale("se", {
          months: "ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu".split(
            "_"
          ),
          monthsShort: "ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov".split(
            "_"
          ),
          weekdays: "sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat".split(
            "_"
          ),
          weekdaysShort: "sotn_vuos_maŋ_gask_duor_bear_láv".split("_"),
          weekdaysMin: "s_v_m_g_d_b_L".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "MMMM D. [b.] YYYY",
            LLL: "MMMM D. [b.] YYYY [ti.] HH:mm",
            LLLL: "dddd, MMMM D. [b.] YYYY [ti.] HH:mm"
          },
          calendar: {
            sameDay: "[otne ti] LT",
            nextDay: "[ihttin ti] LT",
            nextWeek: "dddd [ti] LT",
            lastDay: "[ikte ti] LT",
            lastWeek: "[ovddit] dddd [ti] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s geažes",
            past: "maŋit %s",
            s: "moadde sekunddat",
            m: "okta minuhta",
            mm: "%d minuhtat",
            h: "okta diimmu",
            hh: "%d diimmut",
            d: "okta beaivi",
            dd: "%d beaivvit",
            M: "okta mánnu",
            MM: "%d mánut",
            y: "okta jahki",
            yy: "%d jagit"
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return se;
      });

      /***/
    },
    /* 310 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Sinhalese [si]
      //! author : Sampath Sitinamaluwa : https://github.com/sampathsris

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        /*jshint -W100*/
        var si = moment.defineLocale("si", {
          months: "ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්".split(
            "_"
          ),
          monthsShort: "ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ".split(
            "_"
          ),
          weekdays: "ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා".split(
            "_"
          ),
          weekdaysShort: "ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන".split("_"),
          weekdaysMin: "ඉ_ස_අ_බ_බ්‍ර_සි_සෙ".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "a h:mm",
            LTS: "a h:mm:ss",
            L: "YYYY/MM/DD",
            LL: "YYYY MMMM D",
            LLL: "YYYY MMMM D, a h:mm",
            LLLL: "YYYY MMMM D [වැනි] dddd, a h:mm:ss"
          },
          calendar: {
            sameDay: "[අද] LT[ට]",
            nextDay: "[හෙට] LT[ට]",
            nextWeek: "dddd LT[ට]",
            lastDay: "[ඊයේ] LT[ට]",
            lastWeek: "[පසුගිය] dddd LT[ට]",
            sameElse: "L"
          },
          relativeTime: {
            future: "%sකින්",
            past: "%sකට පෙර",
            s: "තත්පර කිහිපය",
            m: "මිනිත්තුව",
            mm: "මිනිත්තු %d",
            h: "පැය",
            hh: "පැය %d",
            d: "දිනය",
            dd: "දින %d",
            M: "මාසය",
            MM: "මාස %d",
            y: "වසර",
            yy: "වසර %d"
          },
          dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
          ordinal: function(number) {
            return number + " වැනි";
          },
          meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
          isPM: function(input) {
            return input === "ප.ව." || input === "පස් වරු";
          },
          meridiem: function(hours, minutes, isLower) {
            if (hours > 11) {
              return isLower ? "ප.ව." : "පස් වරු";
            } else {
              return isLower ? "පෙ.ව." : "පෙර වරු";
            }
          }
        });

        return si;
      });

      /***/
    },
    /* 311 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Slovak [sk]
      //! author : Martin Minka : https://github.com/k2s
      //! based on work of petrbela : https://github.com/petrbela

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var months = "január_február_marec_apríl_máj_jún_júl_august_september_október_november_december".split(
          "_"
        );
        var monthsShort = "jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec".split(
          "_"
        );
        function plural(n) {
          return n > 1 && n < 5;
        }
        function translate(number, withoutSuffix, key, isFuture) {
          var result = number + " ";
          switch (key) {
            case "s": // a few seconds / in a few seconds / a few seconds ago
              return withoutSuffix || isFuture ? "pár sekúnd" : "pár sekundami";
            case "m": // a minute / in a minute / a minute ago
              return withoutSuffix ? "minúta" : isFuture ? "minútu" : "minútou";
            case "mm": // 9 minutes / in 9 minutes / 9 minutes ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? "minúty" : "minút");
              } else {
                return result + "minútami";
              }
              break;
            case "h": // an hour / in an hour / an hour ago
              return withoutSuffix ? "hodina" : isFuture ? "hodinu" : "hodinou";
            case "hh": // 9 hours / in 9 hours / 9 hours ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? "hodiny" : "hodín");
              } else {
                return result + "hodinami";
              }
              break;
            case "d": // a day / in a day / a day ago
              return withoutSuffix || isFuture ? "deň" : "dňom";
            case "dd": // 9 days / in 9 days / 9 days ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? "dni" : "dní");
              } else {
                return result + "dňami";
              }
              break;
            case "M": // a month / in a month / a month ago
              return withoutSuffix || isFuture ? "mesiac" : "mesiacom";
            case "MM": // 9 months / in 9 months / 9 months ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? "mesiace" : "mesiacov");
              } else {
                return result + "mesiacmi";
              }
              break;
            case "y": // a year / in a year / a year ago
              return withoutSuffix || isFuture ? "rok" : "rokom";
            case "yy": // 9 years / in 9 years / 9 years ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? "roky" : "rokov");
              } else {
                return result + "rokmi";
              }
              break;
          }
        }

        var sk = moment.defineLocale("sk", {
          months: months,
          monthsShort: monthsShort,
          weekdays: "nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota".split(
            "_"
          ),
          weekdaysShort: "ne_po_ut_st_št_pi_so".split("_"),
          weekdaysMin: "ne_po_ut_st_št_pi_so".split("_"),
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd D. MMMM YYYY H:mm"
          },
          calendar: {
            sameDay: "[dnes o] LT",
            nextDay: "[zajtra o] LT",
            nextWeek: function() {
              switch (this.day()) {
                case 0:
                  return "[v nedeľu o] LT";
                case 1:
                case 2:
                  return "[v] dddd [o] LT";
                case 3:
                  return "[v stredu o] LT";
                case 4:
                  return "[vo štvrtok o] LT";
                case 5:
                  return "[v piatok o] LT";
                case 6:
                  return "[v sobotu o] LT";
              }
            },
            lastDay: "[včera o] LT",
            lastWeek: function() {
              switch (this.day()) {
                case 0:
                  return "[minulú nedeľu o] LT";
                case 1:
                case 2:
                  return "[minulý] dddd [o] LT";
                case 3:
                  return "[minulú stredu o] LT";
                case 4:
                case 5:
                  return "[minulý] dddd [o] LT";
                case 6:
                  return "[minulú sobotu o] LT";
              }
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "za %s",
            past: "pred %s",
            s: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return sk;
      });

      /***/
    },
    /* 312 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Slovenian [sl]
      //! author : Robert Sedovšek : https://github.com/sedovsek

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var result = number + " ";
          switch (key) {
            case "s":
              return withoutSuffix || isFuture
                ? "nekaj sekund"
                : "nekaj sekundami";
            case "m":
              return withoutSuffix ? "ena minuta" : "eno minuto";
            case "mm":
              if (number === 1) {
                result += withoutSuffix ? "minuta" : "minuto";
              } else if (number === 2) {
                result += withoutSuffix || isFuture ? "minuti" : "minutama";
              } else if (number < 5) {
                result += withoutSuffix || isFuture ? "minute" : "minutami";
              } else {
                result += withoutSuffix || isFuture ? "minut" : "minutami";
              }
              return result;
            case "h":
              return withoutSuffix ? "ena ura" : "eno uro";
            case "hh":
              if (number === 1) {
                result += withoutSuffix ? "ura" : "uro";
              } else if (number === 2) {
                result += withoutSuffix || isFuture ? "uri" : "urama";
              } else if (number < 5) {
                result += withoutSuffix || isFuture ? "ure" : "urami";
              } else {
                result += withoutSuffix || isFuture ? "ur" : "urami";
              }
              return result;
            case "d":
              return withoutSuffix || isFuture ? "en dan" : "enim dnem";
            case "dd":
              if (number === 1) {
                result += withoutSuffix || isFuture ? "dan" : "dnem";
              } else if (number === 2) {
                result += withoutSuffix || isFuture ? "dni" : "dnevoma";
              } else {
                result += withoutSuffix || isFuture ? "dni" : "dnevi";
              }
              return result;
            case "M":
              return withoutSuffix || isFuture ? "en mesec" : "enim mesecem";
            case "MM":
              if (number === 1) {
                result += withoutSuffix || isFuture ? "mesec" : "mesecem";
              } else if (number === 2) {
                result += withoutSuffix || isFuture ? "meseca" : "mesecema";
              } else if (number < 5) {
                result += withoutSuffix || isFuture ? "mesece" : "meseci";
              } else {
                result += withoutSuffix || isFuture ? "mesecev" : "meseci";
              }
              return result;
            case "y":
              return withoutSuffix || isFuture ? "eno leto" : "enim letom";
            case "yy":
              if (number === 1) {
                result += withoutSuffix || isFuture ? "leto" : "letom";
              } else if (number === 2) {
                result += withoutSuffix || isFuture ? "leti" : "letoma";
              } else if (number < 5) {
                result += withoutSuffix || isFuture ? "leta" : "leti";
              } else {
                result += withoutSuffix || isFuture ? "let" : "leti";
              }
              return result;
          }
        }

        var sl = moment.defineLocale("sl", {
          months: "januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december".split(
            "_"
          ),
          monthsShort: "jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota".split(
            "_"
          ),
          weekdaysShort: "ned._pon._tor._sre._čet._pet._sob.".split("_"),
          weekdaysMin: "ne_po_to_sr_če_pe_so".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm"
          },
          calendar: {
            sameDay: "[danes ob] LT",
            nextDay: "[jutri ob] LT",

            nextWeek: function() {
              switch (this.day()) {
                case 0:
                  return "[v] [nedeljo] [ob] LT";
                case 3:
                  return "[v] [sredo] [ob] LT";
                case 6:
                  return "[v] [soboto] [ob] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[v] dddd [ob] LT";
              }
            },
            lastDay: "[včeraj ob] LT",
            lastWeek: function() {
              switch (this.day()) {
                case 0:
                  return "[prejšnjo] [nedeljo] [ob] LT";
                case 3:
                  return "[prejšnjo] [sredo] [ob] LT";
                case 6:
                  return "[prejšnjo] [soboto] [ob] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[prejšnji] dddd [ob] LT";
              }
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "čez %s",
            past: "pred %s",
            s: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return sl;
      });

      /***/
    },
    /* 313 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Albanian [sq]
      //! author : Flakërim Ismani : https://github.com/flakerimi
      //! author : Menelion Elensúle : https://github.com/Oire
      //! author : Oerd Cukalla : https://github.com/oerd

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var sq = moment.defineLocale("sq", {
          months: "Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor".split(
            "_"
          ),
          monthsShort: "Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj".split(
            "_"
          ),
          weekdays: "E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë".split(
            "_"
          ),
          weekdaysShort: "Die_Hën_Mar_Mër_Enj_Pre_Sht".split("_"),
          weekdaysMin: "D_H_Ma_Më_E_P_Sh".split("_"),
          weekdaysParseExact: true,
          meridiemParse: /PD|MD/,
          isPM: function(input) {
            return input.charAt(0) === "M";
          },
          meridiem: function(hours, minutes, isLower) {
            return hours < 12 ? "PD" : "MD";
          },
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Sot në] LT",
            nextDay: "[Nesër në] LT",
            nextWeek: "dddd [në] LT",
            lastDay: "[Dje në] LT",
            lastWeek: "dddd [e kaluar në] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "në %s",
            past: "%s më parë",
            s: "disa sekonda",
            m: "një minutë",
            mm: "%d minuta",
            h: "një orë",
            hh: "%d orë",
            d: "një ditë",
            dd: "%d ditë",
            M: "një muaj",
            MM: "%d muaj",
            y: "një vit",
            yy: "%d vite"
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return sq;
      });

      /***/
    },
    /* 314 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Serbian [sr]
      //! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var translator = {
          words: {
            //Different grammatical cases
            m: ["jedan minut", "jedne minute"],
            mm: ["minut", "minute", "minuta"],
            h: ["jedan sat", "jednog sata"],
            hh: ["sat", "sata", "sati"],
            dd: ["dan", "dana", "dana"],
            MM: ["mesec", "meseca", "meseci"],
            yy: ["godina", "godine", "godina"]
          },
          correctGrammaticalCase: function(number, wordKey) {
            return number === 1
              ? wordKey[0]
              : number >= 2 && number <= 4 ? wordKey[1] : wordKey[2];
          },
          translate: function(number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
              return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
              return (
                number +
                " " +
                translator.correctGrammaticalCase(number, wordKey)
              );
            }
          }
        };

        var sr = moment.defineLocale("sr", {
          months: "januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split(
            "_"
          ),
          monthsShort: "jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota".split(
            "_"
          ),
          weekdaysShort: "ned._pon._uto._sre._čet._pet._sub.".split("_"),
          weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm"
          },
          calendar: {
            sameDay: "[danas u] LT",
            nextDay: "[sutra u] LT",
            nextWeek: function() {
              switch (this.day()) {
                case 0:
                  return "[u] [nedelju] [u] LT";
                case 3:
                  return "[u] [sredu] [u] LT";
                case 6:
                  return "[u] [subotu] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[u] dddd [u] LT";
              }
            },
            lastDay: "[juče u] LT",
            lastWeek: function() {
              var lastWeekDays = [
                "[prošle] [nedelje] [u] LT",
                "[prošlog] [ponedeljka] [u] LT",
                "[prošlog] [utorka] [u] LT",
                "[prošle] [srede] [u] LT",
                "[prošlog] [četvrtka] [u] LT",
                "[prošlog] [petka] [u] LT",
                "[prošle] [subote] [u] LT"
              ];
              return lastWeekDays[this.day()];
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "za %s",
            past: "pre %s",
            s: "nekoliko sekundi",
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: "dan",
            dd: translator.translate,
            M: "mesec",
            MM: translator.translate,
            y: "godinu",
            yy: translator.translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return sr;
      });

      /***/
    },
    /* 315 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Serbian Cyrillic [sr-cyrl]
      //! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var translator = {
          words: {
            //Different grammatical cases
            m: ["један минут", "једне минуте"],
            mm: ["минут", "минуте", "минута"],
            h: ["један сат", "једног сата"],
            hh: ["сат", "сата", "сати"],
            dd: ["дан", "дана", "дана"],
            MM: ["месец", "месеца", "месеци"],
            yy: ["година", "године", "година"]
          },
          correctGrammaticalCase: function(number, wordKey) {
            return number === 1
              ? wordKey[0]
              : number >= 2 && number <= 4 ? wordKey[1] : wordKey[2];
          },
          translate: function(number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
              return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
              return (
                number +
                " " +
                translator.correctGrammaticalCase(number, wordKey)
              );
            }
          }
        };

        var srCyrl = moment.defineLocale("sr-cyrl", {
          months: "јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар".split(
            "_"
          ),
          monthsShort: "јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "недеља_понедељак_уторак_среда_четвртак_петак_субота".split(
            "_"
          ),
          weekdaysShort: "нед._пон._уто._сре._чет._пет._суб.".split("_"),
          weekdaysMin: "не_по_ут_ср_че_пе_су".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm"
          },
          calendar: {
            sameDay: "[данас у] LT",
            nextDay: "[сутра у] LT",
            nextWeek: function() {
              switch (this.day()) {
                case 0:
                  return "[у] [недељу] [у] LT";
                case 3:
                  return "[у] [среду] [у] LT";
                case 6:
                  return "[у] [суботу] [у] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                  return "[у] dddd [у] LT";
              }
            },
            lastDay: "[јуче у] LT",
            lastWeek: function() {
              var lastWeekDays = [
                "[прошле] [недеље] [у] LT",
                "[прошлог] [понедељка] [у] LT",
                "[прошлог] [уторка] [у] LT",
                "[прошле] [среде] [у] LT",
                "[прошлог] [четвртка] [у] LT",
                "[прошлог] [петка] [у] LT",
                "[прошле] [суботе] [у] LT"
              ];
              return lastWeekDays[this.day()];
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "за %s",
            past: "пре %s",
            s: "неколико секунди",
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: "дан",
            dd: translator.translate,
            M: "месец",
            MM: translator.translate,
            y: "годину",
            yy: translator.translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return srCyrl;
      });

      /***/
    },
    /* 316 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : siSwati [ss]
      //! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var ss = moment.defineLocale("ss", {
          months: "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split(
            "_"
          ),
          monthsShort: "Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo".split(
            "_"
          ),
          weekdays: "Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo".split(
            "_"
          ),
          weekdaysShort: "Lis_Umb_Lsb_Les_Lsi_Lsh_Umg".split("_"),
          weekdaysMin: "Li_Us_Lb_Lt_Ls_Lh_Ug".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A"
          },
          calendar: {
            sameDay: "[Namuhla nga] LT",
            nextDay: "[Kusasa nga] LT",
            nextWeek: "dddd [nga] LT",
            lastDay: "[Itolo nga] LT",
            lastWeek: "dddd [leliphelile] [nga] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "nga %s",
            past: "wenteka nga %s",
            s: "emizuzwana lomcane",
            m: "umzuzu",
            mm: "%d emizuzu",
            h: "lihora",
            hh: "%d emahora",
            d: "lilanga",
            dd: "%d emalanga",
            M: "inyanga",
            MM: "%d tinyanga",
            y: "umnyaka",
            yy: "%d iminyaka"
          },
          meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
          meridiem: function(hours, minutes, isLower) {
            if (hours < 11) {
              return "ekuseni";
            } else if (hours < 15) {
              return "emini";
            } else if (hours < 19) {
              return "entsambama";
            } else {
              return "ebusuku";
            }
          },
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === "ekuseni") {
              return hour;
            } else if (meridiem === "emini") {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === "entsambama" || meridiem === "ebusuku") {
              if (hour === 0) {
                return 0;
              }
              return hour + 12;
            }
          },
          dayOfMonthOrdinalParse: /\d{1,2}/,
          ordinal: "%d",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return ss;
      });

      /***/
    },
    /* 317 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Swedish [sv]
      //! author : Jens Alm : https://github.com/ulmus

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var sv = moment.defineLocale("sv", {
          months: "januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december".split(
            "_"
          ),
          monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split(
            "_"
          ),
          weekdays: "söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag".split(
            "_"
          ),
          weekdaysShort: "sön_mån_tis_ons_tor_fre_lör".split("_"),
          weekdaysMin: "sö_må_ti_on_to_fr_lö".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [kl.] HH:mm",
            LLLL: "dddd D MMMM YYYY [kl.] HH:mm",
            lll: "D MMM YYYY HH:mm",
            llll: "ddd D MMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Idag] LT",
            nextDay: "[Imorgon] LT",
            lastDay: "[Igår] LT",
            nextWeek: "[På] dddd LT",
            lastWeek: "[I] dddd[s] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "om %s",
            past: "för %s sedan",
            s: "några sekunder",
            m: "en minut",
            mm: "%d minuter",
            h: "en timme",
            hh: "%d timmar",
            d: "en dag",
            dd: "%d dagar",
            M: "en månad",
            MM: "%d månader",
            y: "ett år",
            yy: "%d år"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
          ordinal: function(number) {
            var b = number % 10,
              output =
                ~~((number % 100) / 10) === 1
                  ? "e"
                  : b === 1 ? "a" : b === 2 ? "a" : b === 3 ? "e" : "e";
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return sv;
      });

      /***/
    },
    /* 318 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Swahili [sw]
      //! author : Fahad Kassim : https://github.com/fadsel

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var sw = moment.defineLocale("sw", {
          months: "Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba".split(
            "_"
          ),
          monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des".split(
            "_"
          ),
          weekdays: "Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi".split(
            "_"
          ),
          weekdaysShort: "Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos".split("_"),
          weekdaysMin: "J2_J3_J4_J5_Al_Ij_J1".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[leo saa] LT",
            nextDay: "[kesho saa] LT",
            nextWeek: "[wiki ijayo] dddd [saat] LT",
            lastDay: "[jana] LT",
            lastWeek: "[wiki iliyopita] dddd [saat] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s baadaye",
            past: "tokea %s",
            s: "hivi punde",
            m: "dakika moja",
            mm: "dakika %d",
            h: "saa limoja",
            hh: "masaa %d",
            d: "siku moja",
            dd: "masiku %d",
            M: "mwezi mmoja",
            MM: "miezi %d",
            y: "mwaka mmoja",
            yy: "miaka %d"
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return sw;
      });

      /***/
    },
    /* 319 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Tamil [ta]
      //! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var symbolMap = {
          "1": "௧",
          "2": "௨",
          "3": "௩",
          "4": "௪",
          "5": "௫",
          "6": "௬",
          "7": "௭",
          "8": "௮",
          "9": "௯",
          "0": "௦"
        };
        var numberMap = {
          "௧": "1",
          "௨": "2",
          "௩": "3",
          "௪": "4",
          "௫": "5",
          "௬": "6",
          "௭": "7",
          "௮": "8",
          "௯": "9",
          "௦": "0"
        };

        var ta = moment.defineLocale("ta", {
          months: "ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split(
            "_"
          ),
          monthsShort: "ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split(
            "_"
          ),
          weekdays: "ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை".split(
            "_"
          ),
          weekdaysShort: "ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி".split(
            "_"
          ),
          weekdaysMin: "ஞா_தி_செ_பு_வி_வெ_ச".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, HH:mm",
            LLLL: "dddd, D MMMM YYYY, HH:mm"
          },
          calendar: {
            sameDay: "[இன்று] LT",
            nextDay: "[நாளை] LT",
            nextWeek: "dddd, LT",
            lastDay: "[நேற்று] LT",
            lastWeek: "[கடந்த வாரம்] dddd, LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s இல்",
            past: "%s முன்",
            s: "ஒரு சில விநாடிகள்",
            m: "ஒரு நிமிடம்",
            mm: "%d நிமிடங்கள்",
            h: "ஒரு மணி நேரம்",
            hh: "%d மணி நேரம்",
            d: "ஒரு நாள்",
            dd: "%d நாட்கள்",
            M: "ஒரு மாதம்",
            MM: "%d மாதங்கள்",
            y: "ஒரு வருடம்",
            yy: "%d ஆண்டுகள்"
          },
          dayOfMonthOrdinalParse: /\d{1,2}வது/,
          ordinal: function(number) {
            return number + "வது";
          },
          preparse: function(string) {
            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function(match) {
              return numberMap[match];
            });
          },
          postformat: function(string) {
            return string.replace(/\d/g, function(match) {
              return symbolMap[match];
            });
          },
          // refer http://ta.wikipedia.org/s/1er1
          meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
          meridiem: function(hour, minute, isLower) {
            if (hour < 2) {
              return " யாமம்";
            } else if (hour < 6) {
              return " வைகறை"; // வைகறை
            } else if (hour < 10) {
              return " காலை"; // காலை
            } else if (hour < 14) {
              return " நண்பகல்"; // நண்பகல்
            } else if (hour < 18) {
              return " எற்பாடு"; // எற்பாடு
            } else if (hour < 22) {
              return " மாலை"; // மாலை
            } else {
              return " யாமம்";
            }
          },
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === "யாமம்") {
              return hour < 2 ? hour : hour + 12;
            } else if (meridiem === "வைகறை" || meridiem === "காலை") {
              return hour;
            } else if (meridiem === "நண்பகல்") {
              return hour >= 10 ? hour : hour + 12;
            } else {
              return hour + 12;
            }
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return ta;
      });

      /***/
    },
    /* 320 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Telugu [te]
      //! author : Krishna Chaitanya Thota : https://github.com/kcthota

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var te = moment.defineLocale("te", {
          months: "జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్".split(
            "_"
          ),
          monthsShort: "జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం".split(
            "_"
          ),
          weekdaysShort: "ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని".split("_"),
          weekdaysMin: "ఆ_సో_మం_బు_గు_శు_శ".split("_"),
          longDateFormat: {
            LT: "A h:mm",
            LTS: "A h:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm",
            LLLL: "dddd, D MMMM YYYY, A h:mm"
          },
          calendar: {
            sameDay: "[నేడు] LT",
            nextDay: "[రేపు] LT",
            nextWeek: "dddd, LT",
            lastDay: "[నిన్న] LT",
            lastWeek: "[గత] dddd, LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s లో",
            past: "%s క్రితం",
            s: "కొన్ని క్షణాలు",
            m: "ఒక నిమిషం",
            mm: "%d నిమిషాలు",
            h: "ఒక గంట",
            hh: "%d గంటలు",
            d: "ఒక రోజు",
            dd: "%d రోజులు",
            M: "ఒక నెల",
            MM: "%d నెలలు",
            y: "ఒక సంవత్సరం",
            yy: "%d సంవత్సరాలు"
          },
          dayOfMonthOrdinalParse: /\d{1,2}వ/,
          ordinal: "%dవ",
          meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === "రాత్రి") {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === "ఉదయం") {
              return hour;
            } else if (meridiem === "మధ్యాహ్నం") {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === "సాయంత్రం") {
              return hour + 12;
            }
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 4) {
              return "రాత్రి";
            } else if (hour < 10) {
              return "ఉదయం";
            } else if (hour < 17) {
              return "మధ్యాహ్నం";
            } else if (hour < 20) {
              return "సాయంత్రం";
            } else {
              return "రాత్రి";
            }
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return te;
      });

      /***/
    },
    /* 321 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Tetun Dili (East Timor) [tet]
      //! author : Joshua Brooks : https://github.com/joshbrooks
      //! author : Onorio De J. Afonso : https://github.com/marobo

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var tet = moment.defineLocale("tet", {
          months: "Janeiru_Fevereiru_Marsu_Abril_Maiu_Juniu_Juliu_Augustu_Setembru_Outubru_Novembru_Dezembru".split(
            "_"
          ),
          monthsShort: "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Aug_Set_Out_Nov_Dez".split(
            "_"
          ),
          weekdays: "Domingu_Segunda_Tersa_Kuarta_Kinta_Sexta_Sabadu".split(
            "_"
          ),
          weekdaysShort: "Dom_Seg_Ters_Kua_Kint_Sext_Sab".split("_"),
          weekdaysMin: "Do_Seg_Te_Ku_Ki_Sex_Sa".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Ohin iha] LT",
            nextDay: "[Aban iha] LT",
            nextWeek: "dddd [iha] LT",
            lastDay: "[Horiseik iha] LT",
            lastWeek: "dddd [semana kotuk] [iha] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "iha %s",
            past: "%s liuba",
            s: "minutu balun",
            m: "minutu ida",
            mm: "minutus %d",
            h: "horas ida",
            hh: "horas %d",
            d: "loron ida",
            dd: "loron %d",
            M: "fulan ida",
            MM: "fulan %d",
            y: "tinan ida",
            yy: "tinan %d"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function(number) {
            var b = number % 10,
              output =
                ~~((number % 100) / 10) === 1
                  ? "th"
                  : b === 1 ? "st" : b === 2 ? "nd" : b === 3 ? "rd" : "th";
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return tet;
      });

      /***/
    },
    /* 322 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Thai [th]
      //! author : Kridsada Thanabulpong : https://github.com/sirn

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var th = moment.defineLocale("th", {
          months: "มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม".split(
            "_"
          ),
          monthsShort: "ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์".split("_"),
          weekdaysShort: "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์".split(
            "_"
          ), // yes, three characters difference
          weekdaysMin: "อา._จ._อ._พ._พฤ._ศ._ส.".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY เวลา H:mm",
            LLLL: "วันddddที่ D MMMM YYYY เวลา H:mm"
          },
          meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
          isPM: function(input) {
            return input === "หลังเที่ยง";
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 12) {
              return "ก่อนเที่ยง";
            } else {
              return "หลังเที่ยง";
            }
          },
          calendar: {
            sameDay: "[วันนี้ เวลา] LT",
            nextDay: "[พรุ่งนี้ เวลา] LT",
            nextWeek: "dddd[หน้า เวลา] LT",
            lastDay: "[เมื่อวานนี้ เวลา] LT",
            lastWeek: "[วัน]dddd[ที่แล้ว เวลา] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "อีก %s",
            past: "%sที่แล้ว",
            s: "ไม่กี่วินาที",
            m: "1 นาที",
            mm: "%d นาที",
            h: "1 ชั่วโมง",
            hh: "%d ชั่วโมง",
            d: "1 วัน",
            dd: "%d วัน",
            M: "1 เดือน",
            MM: "%d เดือน",
            y: "1 ปี",
            yy: "%d ปี"
          }
        });

        return th;
      });

      /***/
    },
    /* 323 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Tagalog (Philippines) [tl-ph]
      //! author : Dan Hagman : https://github.com/hagmandan

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var tlPh = moment.defineLocale("tl-ph", {
          months: "Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split(
            "_"
          ),
          monthsShort: "Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split(
            "_"
          ),
          weekdays: "Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split(
            "_"
          ),
          weekdaysShort: "Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),
          weekdaysMin: "Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "MM/D/YYYY",
            LL: "MMMM D, YYYY",
            LLL: "MMMM D, YYYY HH:mm",
            LLLL: "dddd, MMMM DD, YYYY HH:mm"
          },
          calendar: {
            sameDay: "LT [ngayong araw]",
            nextDay: "[Bukas ng] LT",
            nextWeek: "LT [sa susunod na] dddd",
            lastDay: "LT [kahapon]",
            lastWeek: "LT [noong nakaraang] dddd",
            sameElse: "L"
          },
          relativeTime: {
            future: "sa loob ng %s",
            past: "%s ang nakalipas",
            s: "ilang segundo",
            m: "isang minuto",
            mm: "%d minuto",
            h: "isang oras",
            hh: "%d oras",
            d: "isang araw",
            dd: "%d araw",
            M: "isang buwan",
            MM: "%d buwan",
            y: "isang taon",
            yy: "%d taon"
          },
          dayOfMonthOrdinalParse: /\d{1,2}/,
          ordinal: function(number) {
            return number;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return tlPh;
      });

      /***/
    },
    /* 324 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Klingon [tlh]
      //! author : Dominika Kruk : https://github.com/amaranthrose

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var numbersNouns = "pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut".split(
          "_"
        );

        function translateFuture(output) {
          var time = output;
          time =
            output.indexOf("jaj") !== -1
              ? time.slice(0, -3) + "leS"
              : output.indexOf("jar") !== -1
                ? time.slice(0, -3) + "waQ"
                : output.indexOf("DIS") !== -1
                  ? time.slice(0, -3) + "nem"
                  : time + " pIq";
          return time;
        }

        function translatePast(output) {
          var time = output;
          time =
            output.indexOf("jaj") !== -1
              ? time.slice(0, -3) + "Hu’"
              : output.indexOf("jar") !== -1
                ? time.slice(0, -3) + "wen"
                : output.indexOf("DIS") !== -1
                  ? time.slice(0, -3) + "ben"
                  : time + " ret";
          return time;
        }

        function translate(number, withoutSuffix, string, isFuture) {
          var numberNoun = numberAsNoun(number);
          switch (string) {
            case "mm":
              return numberNoun + " tup";
            case "hh":
              return numberNoun + " rep";
            case "dd":
              return numberNoun + " jaj";
            case "MM":
              return numberNoun + " jar";
            case "yy":
              return numberNoun + " DIS";
          }
        }

        function numberAsNoun(number) {
          var hundred = Math.floor((number % 1000) / 100),
            ten = Math.floor((number % 100) / 10),
            one = number % 10,
            word = "";
          if (hundred > 0) {
            word += numbersNouns[hundred] + "vatlh";
          }
          if (ten > 0) {
            word += (word !== "" ? " " : "") + numbersNouns[ten] + "maH";
          }
          if (one > 0) {
            word += (word !== "" ? " " : "") + numbersNouns[one];
          }
          return word === "" ? "pagh" : word;
        }

        var tlh = moment.defineLocale("tlh", {
          months: "tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’".split(
            "_"
          ),
          monthsShort: "jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split(
            "_"
          ),
          weekdaysShort: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split(
            "_"
          ),
          weekdaysMin: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split(
            "_"
          ),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[DaHjaj] LT",
            nextDay: "[wa’leS] LT",
            nextWeek: "LLL",
            lastDay: "[wa’Hu’] LT",
            lastWeek: "LLL",
            sameElse: "L"
          },
          relativeTime: {
            future: translateFuture,
            past: translatePast,
            s: "puS lup",
            m: "wa’ tup",
            mm: translate,
            h: "wa’ rep",
            hh: translate,
            d: "wa’ jaj",
            dd: translate,
            M: "wa’ jar",
            MM: translate,
            y: "wa’ DIS",
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return tlh;
      });

      /***/
    },
    /* 325 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Turkish [tr]
      //! authors : Erhan Gundogan : https://github.com/erhangundogan,
      //!           Burak Yiğit Kaya: https://github.com/BYK

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var suffixes = {
          1: "'inci",
          5: "'inci",
          8: "'inci",
          70: "'inci",
          80: "'inci",
          2: "'nci",
          7: "'nci",
          20: "'nci",
          50: "'nci",
          3: "'üncü",
          4: "'üncü",
          100: "'üncü",
          6: "'ncı",
          9: "'uncu",
          10: "'uncu",
          30: "'uncu",
          60: "'ıncı",
          90: "'ıncı"
        };

        var tr = moment.defineLocale("tr", {
          months: "Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık".split(
            "_"
          ),
          monthsShort: "Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara".split(
            "_"
          ),
          weekdays: "Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi".split(
            "_"
          ),
          weekdaysShort: "Paz_Pts_Sal_Çar_Per_Cum_Cts".split("_"),
          weekdaysMin: "Pz_Pt_Sa_Ça_Pe_Cu_Ct".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[bugün saat] LT",
            nextDay: "[yarın saat] LT",
            nextWeek: "[gelecek] dddd [saat] LT",
            lastDay: "[dün] LT",
            lastWeek: "[geçen] dddd [saat] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s sonra",
            past: "%s önce",
            s: "birkaç saniye",
            m: "bir dakika",
            mm: "%d dakika",
            h: "bir saat",
            hh: "%d saat",
            d: "bir gün",
            dd: "%d gün",
            M: "bir ay",
            MM: "%d ay",
            y: "bir yıl",
            yy: "%d yıl"
          },
          dayOfMonthOrdinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
          ordinal: function(number) {
            if (number === 0) {
              // special case for zero
              return number + "'ıncı";
            }
            var a = number % 10,
              b = number % 100 - a,
              c = number >= 100 ? 100 : null;
            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return tr;
      });

      /***/
    },
    /* 326 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Talossan [tzl]
      //! author : Robin van der Vliet : https://github.com/robin0van0der0v
      //! author : Iustì Canun

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
        // This is currently too difficult (maybe even impossible) to add.
        var tzl = moment.defineLocale("tzl", {
          months: "Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar".split(
            "_"
          ),
          monthsShort: "Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec".split(
            "_"
          ),
          weekdays: "Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi".split(
            "_"
          ),
          weekdaysShort: "Súl_Lún_Mai_Már_Xhú_Vié_Sát".split("_"),
          weekdaysMin: "Sú_Lú_Ma_Má_Xh_Vi_Sá".split("_"),
          longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM [dallas] YYYY",
            LLL: "D. MMMM [dallas] YYYY HH.mm",
            LLLL: "dddd, [li] D. MMMM [dallas] YYYY HH.mm"
          },
          meridiemParse: /d\'o|d\'a/i,
          isPM: function(input) {
            return "d'o" === input.toLowerCase();
          },
          meridiem: function(hours, minutes, isLower) {
            if (hours > 11) {
              return isLower ? "d'o" : "D'O";
            } else {
              return isLower ? "d'a" : "D'A";
            }
          },
          calendar: {
            sameDay: "[oxhi à] LT",
            nextDay: "[demà à] LT",
            nextWeek: "dddd [à] LT",
            lastDay: "[ieiri à] LT",
            lastWeek: "[sür el] dddd [lasteu à] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "osprei %s",
            past: "ja%s",
            s: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: "%d.",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            s: ["viensas secunds", "'iensas secunds"],
            m: ["'n míut", "'iens míut"],
            mm: [number + " míuts", "" + number + " míuts"],
            h: ["'n þora", "'iensa þora"],
            hh: [number + " þoras", "" + number + " þoras"],
            d: ["'n ziua", "'iensa ziua"],
            dd: [number + " ziuas", "" + number + " ziuas"],
            M: ["'n mes", "'iens mes"],
            MM: [number + " mesen", "" + number + " mesen"],
            y: ["'n ar", "'iens ar"],
            yy: [number + " ars", "" + number + " ars"]
          };
          return isFuture
            ? format[key][0]
            : withoutSuffix ? format[key][0] : format[key][1];
        }

        return tzl;
      });

      /***/
    },
    /* 327 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Central Atlas Tamazight [tzm]
      //! author : Abdel Said : https://github.com/abdelsaid

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var tzm = moment.defineLocale("tzm", {
          months: "ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split(
            "_"
          ),
          monthsShort: "ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split(
            "_"
          ),
          weekdays: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split(
            "_"
          ),
          weekdaysShort: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split(
            "_"
          ),
          weekdaysMin: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split(
            "_"
          ),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[ⴰⵙⴷⵅ ⴴ] LT",
            nextDay: "[ⴰⵙⴽⴰ ⴴ] LT",
            nextWeek: "dddd [ⴴ] LT",
            lastDay: "[ⴰⵚⴰⵏⵜ ⴴ] LT",
            lastWeek: "dddd [ⴴ] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s",
            past: "ⵢⴰⵏ %s",
            s: "ⵉⵎⵉⴽ",
            m: "ⵎⵉⵏⵓⴺ",
            mm: "%d ⵎⵉⵏⵓⴺ",
            h: "ⵙⴰⵄⴰ",
            hh: "%d ⵜⴰⵙⵙⴰⵄⵉⵏ",
            d: "ⴰⵙⵙ",
            dd: "%d oⵙⵙⴰⵏ",
            M: "ⴰⵢoⵓⵔ",
            MM: "%d ⵉⵢⵢⵉⵔⵏ",
            y: "ⴰⵙⴳⴰⵙ",
            yy: "%d ⵉⵙⴳⴰⵙⵏ"
          },
          week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return tzm;
      });

      /***/
    },
    /* 328 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Central Atlas Tamazight Latin [tzm-latn]
      //! author : Abdel Said : https://github.com/abdelsaid

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var tzmLatn = moment.defineLocale("tzm-latn", {
          months: "innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split(
            "_"
          ),
          monthsShort: "innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split(
            "_"
          ),
          weekdays: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split(
            "_"
          ),
          weekdaysShort: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split(
            "_"
          ),
          weekdaysMin: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split(
            "_"
          ),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[asdkh g] LT",
            nextDay: "[aska g] LT",
            nextWeek: "dddd [g] LT",
            lastDay: "[assant g] LT",
            lastWeek: "dddd [g] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "dadkh s yan %s",
            past: "yan %s",
            s: "imik",
            m: "minuḍ",
            mm: "%d minuḍ",
            h: "saɛa",
            hh: "%d tassaɛin",
            d: "ass",
            dd: "%d ossan",
            M: "ayowr",
            MM: "%d iyyirn",
            y: "asgas",
            yy: "%d isgasn"
          },
          week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return tzmLatn;
      });

      /***/
    },
    /* 329 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Ukrainian [uk]
      //! author : zemlanin : https://github.com/zemlanin
      //! Author : Menelion Elensúle : https://github.com/Oire

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        function plural(word, num) {
          var forms = word.split("_");
          return num % 10 === 1 && num % 100 !== 11
            ? forms[0]
            : num % 10 >= 2 &&
              num % 10 <= 4 &&
              (num % 100 < 10 || num % 100 >= 20)
              ? forms[1]
              : forms[2];
        }
        function relativeTimeWithPlural(number, withoutSuffix, key) {
          var format = {
            mm: withoutSuffix
              ? "хвилина_хвилини_хвилин"
              : "хвилину_хвилини_хвилин",
            hh: withoutSuffix ? "година_години_годин" : "годину_години_годин",
            dd: "день_дні_днів",
            MM: "місяць_місяці_місяців",
            yy: "рік_роки_років"
          };
          if (key === "m") {
            return withoutSuffix ? "хвилина" : "хвилину";
          } else if (key === "h") {
            return withoutSuffix ? "година" : "годину";
          } else {
            return number + " " + plural(format[key], +number);
          }
        }
        function weekdaysCaseReplace(m, format) {
          var weekdays = {
            nominative: "неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота".split(
              "_"
            ),
            accusative: "неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу".split(
              "_"
            ),
            genitive: "неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи".split(
              "_"
            )
          };

          if (!m) {
            return weekdays["nominative"];
          }

          var nounCase = /(\[[ВвУу]\]) ?dddd/.test(format)
            ? "accusative"
            : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(format)
              ? "genitive"
              : "nominative";
          return weekdays[nounCase][m.day()];
        }
        function processHoursFunction(str) {
          return function() {
            return str + "о" + (this.hours() === 11 ? "б" : "") + "] LT";
          };
        }

        var uk = moment.defineLocale("uk", {
          months: {
            format: "січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня".split(
              "_"
            ),
            standalone: "січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень".split(
              "_"
            )
          },
          monthsShort: "січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд".split(
            "_"
          ),
          weekdays: weekdaysCaseReplace,
          weekdaysShort: "нд_пн_вт_ср_чт_пт_сб".split("_"),
          weekdaysMin: "нд_пн_вт_ср_чт_пт_сб".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY р.",
            LLL: "D MMMM YYYY р., HH:mm",
            LLLL: "dddd, D MMMM YYYY р., HH:mm"
          },
          calendar: {
            sameDay: processHoursFunction("[Сьогодні "),
            nextDay: processHoursFunction("[Завтра "),
            lastDay: processHoursFunction("[Вчора "),
            nextWeek: processHoursFunction("[У] dddd ["),
            lastWeek: function() {
              switch (this.day()) {
                case 0:
                case 3:
                case 5:
                case 6:
                  return processHoursFunction("[Минулої] dddd [").call(this);
                case 1:
                case 2:
                case 4:
                  return processHoursFunction("[Минулого] dddd [").call(this);
              }
            },
            sameElse: "L"
          },
          relativeTime: {
            future: "за %s",
            past: "%s тому",
            s: "декілька секунд",
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: "годину",
            hh: relativeTimeWithPlural,
            d: "день",
            dd: relativeTimeWithPlural,
            M: "місяць",
            MM: relativeTimeWithPlural,
            y: "рік",
            yy: relativeTimeWithPlural
          },
          // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
          meridiemParse: /ночі|ранку|дня|вечора/,
          isPM: function(input) {
            return /^(дня|вечора)$/.test(input);
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 4) {
              return "ночі";
            } else if (hour < 12) {
              return "ранку";
            } else if (hour < 17) {
              return "дня";
            } else {
              return "вечора";
            }
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
          ordinal: function(number, period) {
            switch (period) {
              case "M":
              case "d":
              case "DDD":
              case "w":
              case "W":
                return number + "-й";
              case "D":
                return number + "-го";
              default:
                return number;
            }
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return uk;
      });

      /***/
    },
    /* 330 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Urdu [ur]
      //! author : Sawood Alam : https://github.com/ibnesayeed
      //! author : Zack : https://github.com/ZackVision

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var months = [
          "جنوری",
          "فروری",
          "مارچ",
          "اپریل",
          "مئی",
          "جون",
          "جولائی",
          "اگست",
          "ستمبر",
          "اکتوبر",
          "نومبر",
          "دسمبر"
        ];
        var days = ["اتوار", "پیر", "منگل", "بدھ", "جمعرات", "جمعہ", "ہفتہ"];

        var ur = moment.defineLocale("ur", {
          months: months,
          monthsShort: months,
          weekdays: days,
          weekdaysShort: days,
          weekdaysMin: days,
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd، D MMMM YYYY HH:mm"
          },
          meridiemParse: /صبح|شام/,
          isPM: function(input) {
            return "شام" === input;
          },
          meridiem: function(hour, minute, isLower) {
            if (hour < 12) {
              return "صبح";
            }
            return "شام";
          },
          calendar: {
            sameDay: "[آج بوقت] LT",
            nextDay: "[کل بوقت] LT",
            nextWeek: "dddd [بوقت] LT",
            lastDay: "[گذشتہ روز بوقت] LT",
            lastWeek: "[گذشتہ] dddd [بوقت] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s بعد",
            past: "%s قبل",
            s: "چند سیکنڈ",
            m: "ایک منٹ",
            mm: "%d منٹ",
            h: "ایک گھنٹہ",
            hh: "%d گھنٹے",
            d: "ایک دن",
            dd: "%d دن",
            M: "ایک ماہ",
            MM: "%d ماہ",
            y: "ایک سال",
            yy: "%d سال"
          },
          preparse: function(string) {
            return string.replace(/،/g, ",");
          },
          postformat: function(string) {
            return string.replace(/,/g, "،");
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return ur;
      });

      /***/
    },
    /* 331 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Uzbek [uz]
      //! author : Sardor Muminov : https://github.com/muminoff

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var uz = moment.defineLocale("uz", {
          months: "январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр".split(
            "_"
          ),
          monthsShort: "янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split(
            "_"
          ),
          weekdays: "Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба".split(
            "_"
          ),
          weekdaysShort: "Якш_Душ_Сеш_Чор_Пай_Жум_Шан".split("_"),
          weekdaysMin: "Як_Ду_Се_Чо_Па_Жу_Ша".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "D MMMM YYYY, dddd HH:mm"
          },
          calendar: {
            sameDay: "[Бугун соат] LT [да]",
            nextDay: "[Эртага] LT [да]",
            nextWeek: "dddd [куни соат] LT [да]",
            lastDay: "[Кеча соат] LT [да]",
            lastWeek: "[Утган] dddd [куни соат] LT [да]",
            sameElse: "L"
          },
          relativeTime: {
            future: "Якин %s ичида",
            past: "Бир неча %s олдин",
            s: "фурсат",
            m: "бир дакика",
            mm: "%d дакика",
            h: "бир соат",
            hh: "%d соат",
            d: "бир кун",
            dd: "%d кун",
            M: "бир ой",
            MM: "%d ой",
            y: "бир йил",
            yy: "%d йил"
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return uz;
      });

      /***/
    },
    /* 332 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Uzbek Latin [uz-latn]
      //! author : Rasulbek Mirzayev : github.com/Rasulbeeek

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var uzLatn = moment.defineLocale("uz-latn", {
          months: "Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr".split(
            "_"
          ),
          monthsShort: "Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek".split(
            "_"
          ),
          weekdays: "Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba".split(
            "_"
          ),
          weekdaysShort: "Yak_Dush_Sesh_Chor_Pay_Jum_Shan".split("_"),
          weekdaysMin: "Ya_Du_Se_Cho_Pa_Ju_Sha".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "D MMMM YYYY, dddd HH:mm"
          },
          calendar: {
            sameDay: "[Bugun soat] LT [da]",
            nextDay: "[Ertaga] LT [da]",
            nextWeek: "dddd [kuni soat] LT [da]",
            lastDay: "[Kecha soat] LT [da]",
            lastWeek: "[O'tgan] dddd [kuni soat] LT [da]",
            sameElse: "L"
          },
          relativeTime: {
            future: "Yaqin %s ichida",
            past: "Bir necha %s oldin",
            s: "soniya",
            m: "bir daqiqa",
            mm: "%d daqiqa",
            h: "bir soat",
            hh: "%d soat",
            d: "bir kun",
            dd: "%d kun",
            M: "bir oy",
            MM: "%d oy",
            y: "bir yil",
            yy: "%d yil"
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
          }
        });

        return uzLatn;
      });

      /***/
    },
    /* 333 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Vietnamese [vi]
      //! author : Bang Nguyen : https://github.com/bangnk

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var vi = moment.defineLocale("vi", {
          months: "tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12".split(
            "_"
          ),
          monthsShort: "Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy".split(
            "_"
          ),
          weekdaysShort: "CN_T2_T3_T4_T5_T6_T7".split("_"),
          weekdaysMin: "CN_T2_T3_T4_T5_T6_T7".split("_"),
          weekdaysParseExact: true,
          meridiemParse: /sa|ch/i,
          isPM: function(input) {
            return /^ch$/i.test(input);
          },
          meridiem: function(hours, minutes, isLower) {
            if (hours < 12) {
              return isLower ? "sa" : "SA";
            } else {
              return isLower ? "ch" : "CH";
            }
          },
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM [năm] YYYY",
            LLL: "D MMMM [năm] YYYY HH:mm",
            LLLL: "dddd, D MMMM [năm] YYYY HH:mm",
            l: "DD/M/YYYY",
            ll: "D MMM YYYY",
            lll: "D MMM YYYY HH:mm",
            llll: "ddd, D MMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[Hôm nay lúc] LT",
            nextDay: "[Ngày mai lúc] LT",
            nextWeek: "dddd [tuần tới lúc] LT",
            lastDay: "[Hôm qua lúc] LT",
            lastWeek: "dddd [tuần rồi lúc] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "%s tới",
            past: "%s trước",
            s: "vài giây",
            m: "một phút",
            mm: "%d phút",
            h: "một giờ",
            hh: "%d giờ",
            d: "một ngày",
            dd: "%d ngày",
            M: "một tháng",
            MM: "%d tháng",
            y: "một năm",
            yy: "%d năm"
          },
          dayOfMonthOrdinalParse: /\d{1,2}/,
          ordinal: function(number) {
            return number;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return vi;
      });

      /***/
    },
    /* 334 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Pseudo [x-pseudo]
      //! author : Andrew Hood : https://github.com/andrewhood125

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var xPseudo = moment.defineLocale("x-pseudo", {
          months: "J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér".split(
            "_"
          ),
          monthsShort: "J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc".split(
            "_"
          ),
          monthsParseExact: true,
          weekdays: "S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý".split(
            "_"
          ),
          weekdaysShort: "S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát".split("_"),
          weekdaysMin: "S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá".split("_"),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: "HH:mm",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
          },
          calendar: {
            sameDay: "[T~ódá~ý át] LT",
            nextDay: "[T~ómó~rró~w át] LT",
            nextWeek: "dddd [át] LT",
            lastDay: "[Ý~ést~érdá~ý át] LT",
            lastWeek: "[L~ást] dddd [át] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "í~ñ %s",
            past: "%s á~gó",
            s: "á ~féw ~sécó~ñds",
            m: "á ~míñ~úté",
            mm: "%d m~íñú~tés",
            h: "á~ñ hó~úr",
            hh: "%d h~óúrs",
            d: "á ~dáý",
            dd: "%d d~áýs",
            M: "á ~móñ~th",
            MM: "%d m~óñt~hs",
            y: "á ~ýéár",
            yy: "%d ý~éárs"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
          ordinal: function(number) {
            var b = number % 10,
              output =
                ~~((number % 100) / 10) === 1
                  ? "th"
                  : b === 1 ? "st" : b === 2 ? "nd" : b === 3 ? "rd" : "th";
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return xPseudo;
      });

      /***/
    },
    /* 335 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Yoruba Nigeria [yo]
      //! author : Atolagbe Abisoye : https://github.com/andela-batolagbe

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var yo = moment.defineLocale("yo", {
          months: "Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀".split(
            "_"
          ),
          monthsShort: "Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀".split(
            "_"
          ),
          weekdays: "Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta".split("_"),
          weekdaysShort: "Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá".split("_"),
          weekdaysMin: "Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb".split("_"),
          longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A"
          },
          calendar: {
            sameDay: "[Ònì ni] LT",
            nextDay: "[Ọ̀la ni] LT",
            nextWeek: "dddd [Ọsẹ̀ tón'bọ] [ni] LT",
            lastDay: "[Àna ni] LT",
            lastWeek: "dddd [Ọsẹ̀ tólọ́] [ni] LT",
            sameElse: "L"
          },
          relativeTime: {
            future: "ní %s",
            past: "%s kọjá",
            s: "ìsẹjú aayá die",
            m: "ìsẹjú kan",
            mm: "ìsẹjú %d",
            h: "wákati kan",
            hh: "wákati %d",
            d: "ọjọ́ kan",
            dd: "ọjọ́ %d",
            M: "osù kan",
            MM: "osù %d",
            y: "ọdún kan",
            yy: "ọdún %d"
          },
          dayOfMonthOrdinalParse: /ọjọ́\s\d{1,2}/,
          ordinal: "ọjọ́ %d",
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return yo;
      });

      /***/
    },
    /* 336 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Chinese (China) [zh-cn]
      //! author : suupic : https://github.com/suupic
      //! author : Zeno Zeng : https://github.com/zenozeng

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var zhCn = moment.defineLocale("zh-cn", {
          months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split(
            "_"
          ),
          monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split(
            "_"
          ),
          weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split(
            "_"
          ),
          weekdaysShort: "周日_周一_周二_周三_周四_周五_周六".split("_"),
          weekdaysMin: "日_一_二_三_四_五_六".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY年MMMD日",
            LL: "YYYY年MMMD日",
            LLL: "YYYY年MMMD日Ah点mm分",
            LLLL: "YYYY年MMMD日ddddAh点mm分",
            l: "YYYY年MMMD日",
            ll: "YYYY年MMMD日",
            lll: "YYYY年MMMD日 HH:mm",
            llll: "YYYY年MMMD日dddd HH:mm"
          },
          meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (
              meridiem === "凌晨" ||
              meridiem === "早上" ||
              meridiem === "上午"
            ) {
              return hour;
            } else if (meridiem === "下午" || meridiem === "晚上") {
              return hour + 12;
            } else {
              // '中午'
              return hour >= 11 ? hour : hour + 12;
            }
          },
          meridiem: function(hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
              return "凌晨";
            } else if (hm < 900) {
              return "早上";
            } else if (hm < 1130) {
              return "上午";
            } else if (hm < 1230) {
              return "中午";
            } else if (hm < 1800) {
              return "下午";
            } else {
              return "晚上";
            }
          },
          calendar: {
            sameDay: "[今天]LT",
            nextDay: "[明天]LT",
            nextWeek: "[下]ddddLT",
            lastDay: "[昨天]LT",
            lastWeek: "[上]ddddLT",
            sameElse: "L"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
          ordinal: function(number, period) {
            switch (period) {
              case "d":
              case "D":
              case "DDD":
                return number + "日";
              case "M":
                return number + "月";
              case "w":
              case "W":
                return number + "周";
              default:
                return number;
            }
          },
          relativeTime: {
            future: "%s内",
            past: "%s前",
            s: "几秒",
            m: "1 分钟",
            mm: "%d 分钟",
            h: "1 小时",
            hh: "%d 小时",
            d: "1 天",
            dd: "%d 天",
            M: "1 个月",
            MM: "%d 个月",
            y: "1 年",
            yy: "%d 年"
          },
          week: {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
          }
        });

        return zhCn;
      });

      /***/
    },
    /* 337 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Chinese (Hong Kong) [zh-hk]
      //! author : Ben : https://github.com/ben-lin
      //! author : Chris Lam : https://github.com/hehachris
      //! author : Konstantin : https://github.com/skfd

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var zhHk = moment.defineLocale("zh-hk", {
          months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split(
            "_"
          ),
          monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split(
            "_"
          ),
          weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split(
            "_"
          ),
          weekdaysShort: "週日_週一_週二_週三_週四_週五_週六".split("_"),
          weekdaysMin: "日_一_二_三_四_五_六".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY年MMMD日",
            LL: "YYYY年MMMD日",
            LLL: "YYYY年MMMD日 HH:mm",
            LLLL: "YYYY年MMMD日dddd HH:mm",
            l: "YYYY年MMMD日",
            ll: "YYYY年MMMD日",
            lll: "YYYY年MMMD日 HH:mm",
            llll: "YYYY年MMMD日dddd HH:mm"
          },
          meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (
              meridiem === "凌晨" ||
              meridiem === "早上" ||
              meridiem === "上午"
            ) {
              return hour;
            } else if (meridiem === "中午") {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === "下午" || meridiem === "晚上") {
              return hour + 12;
            }
          },
          meridiem: function(hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
              return "凌晨";
            } else if (hm < 900) {
              return "早上";
            } else if (hm < 1130) {
              return "上午";
            } else if (hm < 1230) {
              return "中午";
            } else if (hm < 1800) {
              return "下午";
            } else {
              return "晚上";
            }
          },
          calendar: {
            sameDay: "[今天]LT",
            nextDay: "[明天]LT",
            nextWeek: "[下]ddddLT",
            lastDay: "[昨天]LT",
            lastWeek: "[上]ddddLT",
            sameElse: "L"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
          ordinal: function(number, period) {
            switch (period) {
              case "d":
              case "D":
              case "DDD":
                return number + "日";
              case "M":
                return number + "月";
              case "w":
              case "W":
                return number + "週";
              default:
                return number;
            }
          },
          relativeTime: {
            future: "%s內",
            past: "%s前",
            s: "幾秒",
            m: "1 分鐘",
            mm: "%d 分鐘",
            h: "1 小時",
            hh: "%d 小時",
            d: "1 天",
            dd: "%d 天",
            M: "1 個月",
            MM: "%d 個月",
            y: "1 年",
            yy: "%d 年"
          }
        });

        return zhHk;
      });

      /***/
    },
    /* 338 */
    /***/ function(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Chinese (Taiwan) [zh-tw]
      //! author : Ben : https://github.com/ben-lin
      //! author : Chris Lam : https://github.com/hehachris

      (function(global, factory) {
        true
          ? factory(__webpack_require__(218))
          : typeof define === "function" && define.amd
            ? define(["../moment"], factory)
            : factory(global.moment);
      })(this, function(moment) {
        "use strict";

        var zhTw = moment.defineLocale("zh-tw", {
          months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split(
            "_"
          ),
          monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split(
            "_"
          ),
          weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split(
            "_"
          ),
          weekdaysShort: "週日_週一_週二_週三_週四_週五_週六".split("_"),
          weekdaysMin: "日_一_二_三_四_五_六".split("_"),
          longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY年MMMD日",
            LL: "YYYY年MMMD日",
            LLL: "YYYY年MMMD日 HH:mm",
            LLLL: "YYYY年MMMD日dddd HH:mm",
            l: "YYYY年MMMD日",
            ll: "YYYY年MMMD日",
            lll: "YYYY年MMMD日 HH:mm",
            llll: "YYYY年MMMD日dddd HH:mm"
          },
          meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
          meridiemHour: function(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (
              meridiem === "凌晨" ||
              meridiem === "早上" ||
              meridiem === "上午"
            ) {
              return hour;
            } else if (meridiem === "中午") {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === "下午" || meridiem === "晚上") {
              return hour + 12;
            }
          },
          meridiem: function(hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
              return "凌晨";
            } else if (hm < 900) {
              return "早上";
            } else if (hm < 1130) {
              return "上午";
            } else if (hm < 1230) {
              return "中午";
            } else if (hm < 1800) {
              return "下午";
            } else {
              return "晚上";
            }
          },
          calendar: {
            sameDay: "[今天]LT",
            nextDay: "[明天]LT",
            nextWeek: "[下]ddddLT",
            lastDay: "[昨天]LT",
            lastWeek: "[上]ddddLT",
            sameElse: "L"
          },
          dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
          ordinal: function(number, period) {
            switch (period) {
              case "d":
              case "D":
              case "DDD":
                return number + "日";
              case "M":
                return number + "月";
              case "w":
              case "W":
                return number + "週";
              default:
                return number;
            }
          },
          relativeTime: {
            future: "%s內",
            past: "%s前",
            s: "幾秒",
            m: "1 分鐘",
            mm: "%d 分鐘",
            h: "1 小時",
            hh: "%d 小時",
            d: "1 天",
            dd: "%d 天",
            M: "1 個月",
            MM: "%d 個月",
            y: "1 年",
            yy: "%d 年"
          }
        });

        return zhTw;
      });

      /***/
    },
    /* 339 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _month_dropdown_options = __webpack_require__(340);

      var _month_dropdown_options2 = _interopRequireDefault(
        _month_dropdown_options
      );

      var _reactOnclickoutside = __webpack_require__(216);

      var _reactOnclickoutside2 = _interopRequireDefault(_reactOnclickoutside);

      var _date_utils = __webpack_require__(217);

      var utils = _interopRequireWildcard(_date_utils);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key))
                newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var WrappedMonthDropdownOptions = (0, _reactOnclickoutside2.default)(
        _month_dropdown_options2.default
      );

      var MonthDropdown = (function(_React$Component) {
        _inherits(MonthDropdown, _React$Component);

        function MonthDropdown() {
          var _temp, _this, _ret;

          _classCallCheck(this, MonthDropdown);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              dropdownVisible: false
            }),
            (_this.renderSelectOptions = function(monthNames) {
              return monthNames.map(function(M, i) {
                return _react2.default.createElement(
                  "option",
                  { key: i, value: i },
                  M
                );
              });
            }),
            (_this.renderSelectMode = function(monthNames) {
              return _react2.default.createElement(
                "select",
                {
                  value: _this.props.month,
                  className: "react-datepicker__month-select",
                  onChange: function onChange(e) {
                    return _this.onChange(e.target.value);
                  }
                },
                _this.renderSelectOptions(monthNames)
              );
            }),
            (_this.renderReadView = function(visible, monthNames) {
              return _react2.default.createElement(
                "div",
                {
                  key: "read",
                  style: { visibility: visible ? "visible" : "hidden" },
                  className: "react-datepicker__month-read-view",
                  onClick: _this.toggleDropdown
                },
                _react2.default.createElement("span", {
                  className: "react-datepicker__month-read-view--down-arrow"
                }),
                _react2.default.createElement(
                  "span",
                  {
                    className:
                      "react-datepicker__month-read-view--selected-month"
                  },
                  monthNames[_this.props.month]
                )
              );
            }),
            (_this.renderDropdown = function(monthNames) {
              return _react2.default.createElement(
                WrappedMonthDropdownOptions,
                {
                  key: "dropdown",
                  ref: "options",
                  month: _this.props.month,
                  monthNames: monthNames,
                  onChange: _this.onChange,
                  onCancel: _this.toggleDropdown
                }
              );
            }),
            (_this.renderScrollMode = function(monthNames) {
              var dropdownVisible = _this.state.dropdownVisible;

              var result = [_this.renderReadView(!dropdownVisible, monthNames)];
              if (dropdownVisible) {
                result.unshift(_this.renderDropdown(monthNames));
              }
              return result;
            }),
            (_this.onChange = function(month) {
              _this.toggleDropdown();
              if (month !== _this.props.month) {
                _this.props.onChange(month);
              }
            }),
            (_this.toggleDropdown = function() {
              return _this.setState({
                dropdownVisible: !_this.state.dropdownVisible
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        MonthDropdown.prototype.render = function render() {
          var _this2 = this;

          var localeData = utils.getLocaleDataForLocale(this.props.locale);
          var monthNames = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map(
            this.props.useShortMonthInDropdown
              ? function(M) {
                  return utils.getMonthShortInLocale(
                    localeData,
                    utils.newDate({ M: M })
                  );
                }
              : function(M) {
                  return utils.getMonthInLocale(
                    localeData,
                    utils.newDate({ M: M }),
                    _this2.props.dateFormat
                  );
                }
          );

          var renderedDropdown = void 0;
          switch (this.props.dropdownMode) {
            case "scroll":
              renderedDropdown = this.renderScrollMode(monthNames);
              break;
            case "select":
              renderedDropdown = this.renderSelectMode(monthNames);
              break;
          }

          return _react2.default.createElement(
            "div",
            {
              className:
                "react-datepicker__month-dropdown-container react-datepicker__month-dropdown-container--" +
                this.props.dropdownMode
            },
            renderedDropdown
          );
        };

        return MonthDropdown;
      })(_react2.default.Component);

      MonthDropdown.propTypes = {
        dropdownMode: _propTypes2.default.oneOf(["scroll", "select"])
          .isRequired,
        locale: _propTypes2.default.string,
        dateFormat: _propTypes2.default.string.isRequired,
        month: _propTypes2.default.number.isRequired,
        onChange: _propTypes2.default.func.isRequired,
        useShortMonthInDropdown: _propTypes2.default.bool
      };
      exports.default = MonthDropdown;

      /***/
    },
    /* 340 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var MonthDropdownOptions = (function(_React$Component) {
        _inherits(MonthDropdownOptions, _React$Component);

        function MonthDropdownOptions() {
          var _temp, _this, _ret;

          _classCallCheck(this, MonthDropdownOptions);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.renderOptions = function() {
              return _this.props.monthNames.map(function(month, i) {
                return _react2.default.createElement(
                  "div",
                  {
                    className:
                      _this.props.month === i
                        ? "react-datepicker__month-option --selected_month"
                        : "react-datepicker__month-option",
                    key: month,
                    ref: month,
                    onClick: _this.onChange.bind(_this, i)
                  },
                  _this.props.month === i
                    ? _react2.default.createElement(
                        "span",
                        {
                          className: "react-datepicker__month-option--selected"
                        },
                        "\u2713"
                      )
                    : "",
                  month
                );
              });
            }),
            (_this.onChange = function(month) {
              return _this.props.onChange(month);
            }),
            (_this.handleClickOutside = function() {
              return _this.props.onCancel();
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        MonthDropdownOptions.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "react-datepicker__month-dropdown" },
            this.renderOptions()
          );
        };

        return MonthDropdownOptions;
      })(_react2.default.Component);

      MonthDropdownOptions.propTypes = {
        onCancel: _propTypes2.default.func.isRequired,
        onChange: _propTypes2.default.func.isRequired,
        month: _propTypes2.default.number.isRequired,
        monthNames: _propTypes2.default.arrayOf(
          _propTypes2.default.string.isRequired
        ).isRequired
      };
      exports.default = MonthDropdownOptions;

      /***/
    },
    /* 341 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _month_year_dropdown_options = __webpack_require__(342);

      var _month_year_dropdown_options2 = _interopRequireDefault(
        _month_year_dropdown_options
      );

      var _reactOnclickoutside = __webpack_require__(216);

      var _reactOnclickoutside2 = _interopRequireDefault(_reactOnclickoutside);

      var _date_utils = __webpack_require__(217);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var WrappedMonthYearDropdownOptions = (0, _reactOnclickoutside2.default)(
        _month_year_dropdown_options2.default
      );

      var MonthYearDropdown = (function(_React$Component) {
        _inherits(MonthYearDropdown, _React$Component);

        function MonthYearDropdown() {
          var _temp, _this, _ret;

          _classCallCheck(this, MonthYearDropdown);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              dropdownVisible: false
            }),
            (_this.renderSelectOptions = function() {
              var currDate = (0, _date_utils.getStartOfMonth)(
                (0, _date_utils.localizeDate)(
                  _this.props.minDate,
                  _this.props.locale
                )
              );
              var lastDate = (0, _date_utils.getStartOfMonth)(
                (0, _date_utils.localizeDate)(
                  _this.props.maxDate,
                  _this.props.locale
                )
              );

              var options = [];

              while (!(0, _date_utils.isAfter)(currDate, lastDate)) {
                var timepoint = currDate.valueOf();
                options.push(
                  _react2.default.createElement(
                    "option",
                    { key: timepoint, value: timepoint },
                    (0, _date_utils.formatDate)(
                      currDate,
                      _this.props.dateFormat
                    )
                  )
                );

                (0, _date_utils.addMonths)(currDate, 1);
              }

              return options;
            }),
            (_this.onSelectChange = function(e) {
              _this.onChange(e.target.value);
            }),
            (_this.renderSelectMode = function() {
              return _react2.default.createElement(
                "select",
                {
                  value: (0, _date_utils.getStartOfMonth)(
                    _this.props.date
                  ).valueOf(),
                  className: "react-datepicker__month-year-select",
                  onChange: _this.onSelectChange
                },
                _this.renderSelectOptions()
              );
            }),
            (_this.renderReadView = function(visible) {
              var yearMonth = (0, _date_utils.formatDate)(
                (0, _date_utils.localizeDate)(
                  (0, _date_utils.newDate)(_this.props.date),
                  _this.props.locale
                ),
                _this.props.dateFormat
              );

              return _react2.default.createElement(
                "div",
                {
                  key: "read",
                  style: { visibility: visible ? "visible" : "hidden" },
                  className: "react-datepicker__month-year-read-view",
                  onClick: function onClick(event) {
                    return _this.toggleDropdown(event);
                  }
                },
                _react2.default.createElement("span", {
                  className:
                    "react-datepicker__month-year-read-view--down-arrow"
                }),
                _react2.default.createElement(
                  "span",
                  {
                    className:
                      "react-datepicker__month-year-read-view--selected-month-year"
                  },
                  yearMonth
                )
              );
            }),
            (_this.renderDropdown = function() {
              return _react2.default.createElement(
                WrappedMonthYearDropdownOptions,
                {
                  key: "dropdown",
                  ref: "options",
                  date: _this.props.date,
                  dateFormat: _this.props.dateFormat,
                  onChange: _this.onChange,
                  onCancel: _this.toggleDropdown,
                  minDate: (0, _date_utils.localizeDate)(
                    _this.props.minDate,
                    _this.props.locale
                  ),
                  maxDate: (0, _date_utils.localizeDate)(
                    _this.props.maxDate,
                    _this.props.locale
                  ),
                  scrollableMonthYearDropdown:
                    _this.props.scrollableMonthYearDropdown
                }
              );
            }),
            (_this.renderScrollMode = function() {
              var dropdownVisible = _this.state.dropdownVisible;

              var result = [_this.renderReadView(!dropdownVisible)];
              if (dropdownVisible) {
                result.unshift(_this.renderDropdown());
              }
              return result;
            }),
            (_this.onChange = function(monthYearPoint) {
              _this.toggleDropdown();

              var changedDate = (0, _date_utils.newDate)(
                parseInt(monthYearPoint)
              );

              if (
                (0, _date_utils.isSameYear)(_this.props.date, changedDate) &&
                (0, _date_utils.isSameMonth)(_this.props.date, changedDate)
              ) {
                return;
              }

              _this.props.onChange(changedDate);
            }),
            (_this.toggleDropdown = function() {
              return _this.setState({
                dropdownVisible: !_this.state.dropdownVisible
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        MonthYearDropdown.prototype.render = function render() {
          var renderedDropdown = void 0;
          switch (this.props.dropdownMode) {
            case "scroll":
              renderedDropdown = this.renderScrollMode();
              break;
            case "select":
              renderedDropdown = this.renderSelectMode();
              break;
          }

          return _react2.default.createElement(
            "div",
            {
              className:
                "react-datepicker__month-year-dropdown-container react-datepicker__month-year-dropdown-container--" +
                this.props.dropdownMode
            },
            renderedDropdown
          );
        };

        return MonthYearDropdown;
      })(_react2.default.Component);

      MonthYearDropdown.propTypes = {
        dropdownMode: _propTypes2.default.oneOf(["scroll", "select"])
          .isRequired,
        dateFormat: _propTypes2.default.string.isRequired,
        locale: _propTypes2.default.string,
        maxDate: _propTypes2.default.object.isRequired,
        minDate: _propTypes2.default.object.isRequired,
        date: _propTypes2.default.object.isRequired,
        onChange: _propTypes2.default.func.isRequired,
        scrollableMonthYearDropdown: _propTypes2.default.bool
      };
      exports.default = MonthYearDropdown;

      /***/
    },
    /* 342 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _classnames = __webpack_require__(215);

      var _classnames2 = _interopRequireDefault(_classnames);

      var _date_utils = __webpack_require__(217);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function generateMonthYears(minDate, maxDate) {
        var list = [];

        var currDate = (0, _date_utils.getStartOfMonth)(
          (0, _date_utils.cloneDate)(minDate)
        );
        var lastDate = (0, _date_utils.getStartOfMonth)(
          (0, _date_utils.cloneDate)(maxDate)
        );

        while (!(0, _date_utils.isAfter)(currDate, lastDate)) {
          list.push((0, _date_utils.cloneDate)(currDate));

          (0, _date_utils.addMonths)(currDate, 1);
        }

        return list;
      }

      var MonthYearDropdownOptions = (function(_React$Component) {
        _inherits(MonthYearDropdownOptions, _React$Component);

        function MonthYearDropdownOptions(props) {
          _classCallCheck(this, MonthYearDropdownOptions);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.renderOptions = function() {
            return _this.state.monthYearsList.map(function(monthYear) {
              var monthYearPoint = monthYear.valueOf();

              var isSameMonthYear =
                (0, _date_utils.isSameYear)(_this.props.date, monthYear) &&
                (0, _date_utils.isSameMonth)(_this.props.date, monthYear);

              return _react2.default.createElement(
                "div",
                {
                  className: isSameMonthYear
                    ? "react-datepicker__month-year-option --selected_month-year"
                    : "react-datepicker__month-year-option",
                  key: monthYearPoint,
                  ref: monthYearPoint,
                  onClick: _this.onChange.bind(_this, monthYearPoint)
                },
                isSameMonthYear
                  ? _react2.default.createElement(
                      "span",
                      {
                        className:
                          "react-datepicker__month-year-option--selected"
                      },
                      "\u2713"
                    )
                  : "",
                (0, _date_utils.formatDate)(monthYear, _this.props.dateFormat)
              );
            });
          };

          _this.onChange = function(monthYear) {
            return _this.props.onChange(monthYear);
          };

          _this.handleClickOutside = function() {
            _this.props.onCancel();
          };

          _this.state = {
            monthYearsList: generateMonthYears(
              _this.props.minDate,
              _this.props.maxDate
            )
          };
          return _this;
        }

        MonthYearDropdownOptions.prototype.render = function render() {
          var dropdownClass = (0, _classnames2.default)({
            "react-datepicker__month-year-dropdown": true,
            "react-datepicker__month-year-dropdown--scrollable": this.props
              .scrollableMonthYearDropdown
          });

          return _react2.default.createElement(
            "div",
            { className: dropdownClass },
            this.renderOptions()
          );
        };

        return MonthYearDropdownOptions;
      })(_react2.default.Component);

      MonthYearDropdownOptions.propTypes = {
        minDate: _propTypes2.default.object.isRequired,
        maxDate: _propTypes2.default.object.isRequired,
        onCancel: _propTypes2.default.func.isRequired,
        onChange: _propTypes2.default.func.isRequired,
        scrollableMonthYearDropdown: _propTypes2.default.bool,
        date: _propTypes2.default.object.isRequired,
        dateFormat: _propTypes2.default.string.isRequired
      };
      exports.default = MonthYearDropdownOptions;

      /***/
    },
    /* 343 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _classnames = __webpack_require__(215);

      var _classnames2 = _interopRequireDefault(_classnames);

      var _week = __webpack_require__(344);

      var _week2 = _interopRequireDefault(_week);

      var _date_utils = __webpack_require__(217);

      var utils = _interopRequireWildcard(_date_utils);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key))
                newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var FIXED_HEIGHT_STANDARD_WEEK_COUNT = 6;

      var Month = (function(_React$Component) {
        _inherits(Month, _React$Component);

        function Month() {
          var _temp, _this, _ret;

          _classCallCheck(this, Month);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.handleDayClick = function(day, event) {
              if (_this.props.onDayClick) {
                _this.props.onDayClick(day, event);
              }
            }),
            (_this.handleDayMouseEnter = function(day) {
              if (_this.props.onDayMouseEnter) {
                _this.props.onDayMouseEnter(day);
              }
            }),
            (_this.handleMouseLeave = function() {
              if (_this.props.onMouseLeave) {
                _this.props.onMouseLeave();
              }
            }),
            (_this.isWeekInMonth = function(startOfWeek) {
              var day = _this.props.day;
              var endOfWeek = utils.addDays(utils.cloneDate(startOfWeek), 6);
              return (
                utils.isSameMonth(startOfWeek, day) ||
                utils.isSameMonth(endOfWeek, day)
              );
            }),
            (_this.renderWeeks = function() {
              var weeks = [];
              var isFixedHeight = _this.props.fixedHeight;
              var currentWeekStart = utils.getStartOfWeek(
                utils.getStartOfMonth(utils.cloneDate(_this.props.day))
              );
              var i = 0;
              var breakAfterNextPush = false;

              while (true) {
                weeks.push(
                  _react2.default.createElement(_week2.default, {
                    key: i,
                    day: currentWeekStart,
                    month: utils.getMonth(_this.props.day),
                    onDayClick: _this.handleDayClick,
                    onDayMouseEnter: _this.handleDayMouseEnter,
                    onWeekSelect: _this.props.onWeekSelect,
                    formatWeekNumber: _this.props.formatWeekNumber,
                    minDate: _this.props.minDate,
                    maxDate: _this.props.maxDate,
                    excludeDates: _this.props.excludeDates,
                    includeDates: _this.props.includeDates,
                    inline: _this.props.inline,
                    highlightDates: _this.props.highlightDates,
                    selectingDate: _this.props.selectingDate,
                    filterDate: _this.props.filterDate,
                    preSelection: _this.props.preSelection,
                    selected: _this.props.selected,
                    selectsStart: _this.props.selectsStart,
                    selectsEnd: _this.props.selectsEnd,
                    showWeekNumber: _this.props.showWeekNumbers,
                    startDate: _this.props.startDate,
                    endDate: _this.props.endDate,
                    dayClassName: _this.props.dayClassName,
                    utcOffset: _this.props.utcOffset
                  })
                );

                if (breakAfterNextPush) break;

                i++;
                currentWeekStart = utils.addWeeks(
                  utils.cloneDate(currentWeekStart),
                  1
                );

                // If one of these conditions is true, we will either break on this week
                // or break on the next week
                var isFixedAndFinalWeek =
                  isFixedHeight && i >= FIXED_HEIGHT_STANDARD_WEEK_COUNT;
                var isNonFixedAndOutOfMonth =
                  !isFixedHeight && !_this.isWeekInMonth(currentWeekStart);

                if (isFixedAndFinalWeek || isNonFixedAndOutOfMonth) {
                  if (_this.props.peekNextMonth) {
                    breakAfterNextPush = true;
                  } else {
                    break;
                  }
                }
              }

              return weeks;
            }),
            (_this.getClassNames = function() {
              var _this$props = _this.props,
                selectingDate = _this$props.selectingDate,
                selectsStart = _this$props.selectsStart,
                selectsEnd = _this$props.selectsEnd;

              return (0, _classnames2.default)("react-datepicker__month", {
                "react-datepicker__month--selecting-range":
                  selectingDate && (selectsStart || selectsEnd)
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        Month.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            {
              className: this.getClassNames(),
              onMouseLeave: this.handleMouseLeave,
              role: "listbox"
            },
            this.renderWeeks()
          );
        };

        return Month;
      })(_react2.default.Component);

      Month.propTypes = {
        day: _propTypes2.default.object.isRequired,
        dayClassName: _propTypes2.default.func,
        endDate: _propTypes2.default.object,
        excludeDates: _propTypes2.default.array,
        filterDate: _propTypes2.default.func,
        fixedHeight: _propTypes2.default.bool,
        formatWeekNumber: _propTypes2.default.func,
        highlightDates: _propTypes2.default.instanceOf(Map),
        includeDates: _propTypes2.default.array,
        inline: _propTypes2.default.bool,
        maxDate: _propTypes2.default.object,
        minDate: _propTypes2.default.object,
        onDayClick: _propTypes2.default.func,
        onDayMouseEnter: _propTypes2.default.func,
        onMouseLeave: _propTypes2.default.func,
        onWeekSelect: _propTypes2.default.func,
        peekNextMonth: _propTypes2.default.bool,
        preSelection: _propTypes2.default.object,
        selected: _propTypes2.default.object,
        selectingDate: _propTypes2.default.object,
        selectsEnd: _propTypes2.default.bool,
        selectsStart: _propTypes2.default.bool,
        showWeekNumbers: _propTypes2.default.bool,
        startDate: _propTypes2.default.object,
        utcOffset: _propTypes2.default.number
      };
      exports.default = Month;

      /***/
    },
    /* 344 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _day = __webpack_require__(345);

      var _day2 = _interopRequireDefault(_day);

      var _week_number = __webpack_require__(346);

      var _week_number2 = _interopRequireDefault(_week_number);

      var _date_utils = __webpack_require__(217);

      var utils = _interopRequireWildcard(_date_utils);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key))
                newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Week = (function(_React$Component) {
        _inherits(Week, _React$Component);

        function Week() {
          var _temp, _this, _ret;

          _classCallCheck(this, Week);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.handleDayClick = function(day, event) {
              if (_this.props.onDayClick) {
                _this.props.onDayClick(day, event);
              }
            }),
            (_this.handleDayMouseEnter = function(day) {
              if (_this.props.onDayMouseEnter) {
                _this.props.onDayMouseEnter(day);
              }
            }),
            (_this.handleWeekClick = function(day, weekNumber, event) {
              if (typeof _this.props.onWeekSelect === "function") {
                _this.props.onWeekSelect(day, weekNumber, event);
              }
            }),
            (_this.formatWeekNumber = function(startOfWeek) {
              if (_this.props.formatWeekNumber) {
                return _this.props.formatWeekNumber(startOfWeek);
              }
              return utils.getWeek(startOfWeek);
            }),
            (_this.renderDays = function() {
              var startOfWeek = utils.getStartOfWeek(
                utils.cloneDate(_this.props.day)
              );
              var days = [];
              var weekNumber = _this.formatWeekNumber(startOfWeek);
              if (_this.props.showWeekNumber) {
                var onClickAction = _this.props.onWeekSelect
                  ? _this.handleWeekClick.bind(_this, startOfWeek, weekNumber)
                  : undefined;
                days.push(
                  _react2.default.createElement(_week_number2.default, {
                    key: "W",
                    weekNumber: weekNumber,
                    onClick: onClickAction
                  })
                );
              }
              return days.concat(
                [0, 1, 2, 3, 4, 5, 6].map(function(offset) {
                  var day = utils.addDays(utils.cloneDate(startOfWeek), offset);
                  return _react2.default.createElement(_day2.default, {
                    key: offset,
                    day: day,
                    month: _this.props.month,
                    onClick: _this.handleDayClick.bind(_this, day),
                    onMouseEnter: _this.handleDayMouseEnter.bind(_this, day),
                    minDate: _this.props.minDate,
                    maxDate: _this.props.maxDate,
                    excludeDates: _this.props.excludeDates,
                    includeDates: _this.props.includeDates,
                    inline: _this.props.inline,
                    highlightDates: _this.props.highlightDates,
                    selectingDate: _this.props.selectingDate,
                    filterDate: _this.props.filterDate,
                    preSelection: _this.props.preSelection,
                    selected: _this.props.selected,
                    selectsStart: _this.props.selectsStart,
                    selectsEnd: _this.props.selectsEnd,
                    startDate: _this.props.startDate,
                    endDate: _this.props.endDate,
                    dayClassName: _this.props.dayClassName,
                    utcOffset: _this.props.utcOffset
                  });
                })
              );
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        Week.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "react-datepicker__week" },
            this.renderDays()
          );
        };

        return Week;
      })(_react2.default.Component);

      Week.propTypes = {
        day: _propTypes2.default.object.isRequired,
        dayClassName: _propTypes2.default.func,
        endDate: _propTypes2.default.object,
        excludeDates: _propTypes2.default.array,
        filterDate: _propTypes2.default.func,
        formatWeekNumber: _propTypes2.default.func,
        highlightDates: _propTypes2.default.instanceOf(Map),
        includeDates: _propTypes2.default.array,
        inline: _propTypes2.default.bool,
        maxDate: _propTypes2.default.object,
        minDate: _propTypes2.default.object,
        month: _propTypes2.default.number,
        onDayClick: _propTypes2.default.func,
        onDayMouseEnter: _propTypes2.default.func,
        onWeekSelect: _propTypes2.default.func,
        preSelection: _propTypes2.default.object,
        selected: _propTypes2.default.object,
        selectingDate: _propTypes2.default.object,
        selectsEnd: _propTypes2.default.bool,
        selectsStart: _propTypes2.default.bool,
        showWeekNumber: _propTypes2.default.bool,
        startDate: _propTypes2.default.object,
        utcOffset: _propTypes2.default.number
      };
      exports.default = Week;

      /***/
    },
    /* 345 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _classnames = __webpack_require__(215);

      var _classnames2 = _interopRequireDefault(_classnames);

      var _date_utils = __webpack_require__(217);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Day = (function(_React$Component) {
        _inherits(Day, _React$Component);

        function Day() {
          var _temp, _this, _ret;

          _classCallCheck(this, Day);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.handleClick = function(event) {
              if (!_this.isDisabled() && _this.props.onClick) {
                _this.props.onClick(event);
              }
            }),
            (_this.handleMouseEnter = function(event) {
              if (!_this.isDisabled() && _this.props.onMouseEnter) {
                _this.props.onMouseEnter(event);
              }
            }),
            (_this.isSameDay = function(other) {
              return (0, _date_utils.isSameDay)(_this.props.day, other);
            }),
            (_this.isKeyboardSelected = function() {
              return (
                !_this.props.inline &&
                !_this.isSameDay(_this.props.selected) &&
                _this.isSameDay(_this.props.preSelection)
              );
            }),
            (_this.isDisabled = function() {
              return (0, _date_utils.isDayDisabled)(
                _this.props.day,
                _this.props
              );
            }),
            (_this.getHighLightedClass = function(defaultClassName) {
              var _this$props = _this.props,
                day = _this$props.day,
                highlightDates = _this$props.highlightDates;

              if (!highlightDates) {
                return false;
              }

              // Looking for className in the Map of {'day string, 'className'}
              var dayStr = day.format("MM.DD.YYYY");
              return highlightDates.get(dayStr);
            }),
            (_this.isInRange = function() {
              var _this$props2 = _this.props,
                day = _this$props2.day,
                startDate = _this$props2.startDate,
                endDate = _this$props2.endDate;

              if (!startDate || !endDate) {
                return false;
              }
              return (0, _date_utils.isDayInRange)(day, startDate, endDate);
            }),
            (_this.isInSelectingRange = function() {
              var _this$props3 = _this.props,
                day = _this$props3.day,
                selectsStart = _this$props3.selectsStart,
                selectsEnd = _this$props3.selectsEnd,
                selectingDate = _this$props3.selectingDate,
                startDate = _this$props3.startDate,
                endDate = _this$props3.endDate;

              if (
                !(selectsStart || selectsEnd) ||
                !selectingDate ||
                _this.isDisabled()
              ) {
                return false;
              }

              if (
                selectsStart &&
                endDate &&
                selectingDate.isSameOrBefore(endDate)
              ) {
                return (0, _date_utils.isDayInRange)(
                  day,
                  selectingDate,
                  endDate
                );
              }

              if (
                selectsEnd &&
                startDate &&
                selectingDate.isSameOrAfter(startDate)
              ) {
                return (0, _date_utils.isDayInRange)(
                  day,
                  startDate,
                  selectingDate
                );
              }

              return false;
            }),
            (_this.isSelectingRangeStart = function() {
              if (!_this.isInSelectingRange()) {
                return false;
              }

              var _this$props4 = _this.props,
                day = _this$props4.day,
                selectingDate = _this$props4.selectingDate,
                startDate = _this$props4.startDate,
                selectsStart = _this$props4.selectsStart;

              if (selectsStart) {
                return (0, _date_utils.isSameDay)(day, selectingDate);
              } else {
                return (0, _date_utils.isSameDay)(day, startDate);
              }
            }),
            (_this.isSelectingRangeEnd = function() {
              if (!_this.isInSelectingRange()) {
                return false;
              }

              var _this$props5 = _this.props,
                day = _this$props5.day,
                selectingDate = _this$props5.selectingDate,
                endDate = _this$props5.endDate,
                selectsEnd = _this$props5.selectsEnd;

              if (selectsEnd) {
                return (0, _date_utils.isSameDay)(day, selectingDate);
              } else {
                return (0, _date_utils.isSameDay)(day, endDate);
              }
            }),
            (_this.isRangeStart = function() {
              var _this$props6 = _this.props,
                day = _this$props6.day,
                startDate = _this$props6.startDate,
                endDate = _this$props6.endDate;

              if (!startDate || !endDate) {
                return false;
              }
              return (0, _date_utils.isSameDay)(startDate, day);
            }),
            (_this.isRangeEnd = function() {
              var _this$props7 = _this.props,
                day = _this$props7.day,
                startDate = _this$props7.startDate,
                endDate = _this$props7.endDate;

              if (!startDate || !endDate) {
                return false;
              }
              return (0, _date_utils.isSameDay)(endDate, day);
            }),
            (_this.isWeekend = function() {
              var weekday = (0, _date_utils.getDay)(_this.props.day);
              return weekday === 0 || weekday === 6;
            }),
            (_this.isOutsideMonth = function() {
              return (
                _this.props.month !== undefined &&
                _this.props.month !== (0, _date_utils.getMonth)(_this.props.day)
              );
            }),
            (_this.getClassNames = function(date) {
              var dayClassName = _this.props.dayClassName
                ? _this.props.dayClassName(date)
                : undefined;
              return (0, _classnames2.default)(
                "react-datepicker__day",
                dayClassName,
                "react-datepicker__day--" +
                  (0, _date_utils.getDayOfWeekCode)(_this.props.day),
                {
                  "react-datepicker__day--disabled": _this.isDisabled(),
                  "react-datepicker__day--selected": _this.isSameDay(
                    _this.props.selected
                  ),
                  "react-datepicker__day--keyboard-selected": _this.isKeyboardSelected(),
                  "react-datepicker__day--range-start": _this.isRangeStart(),
                  "react-datepicker__day--range-end": _this.isRangeEnd(),
                  "react-datepicker__day--in-range": _this.isInRange(),
                  "react-datepicker__day--in-selecting-range": _this.isInSelectingRange(),
                  "react-datepicker__day--selecting-range-start": _this.isSelectingRangeStart(),
                  "react-datepicker__day--selecting-range-end": _this.isSelectingRangeEnd(),
                  "react-datepicker__day--today": _this.isSameDay(
                    (0, _date_utils.now)(_this.props.utcOffset)
                  ),
                  "react-datepicker__day--weekend": _this.isWeekend(),
                  "react-datepicker__day--outside-month": _this.isOutsideMonth()
                },
                _this.getHighLightedClass("react-datepicker__day--highlighted")
              );
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        Day.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            {
              className: this.getClassNames(this.props.day),
              onClick: this.handleClick,
              onMouseEnter: this.handleMouseEnter,
              "aria-label": "day-" + (0, _date_utils.getDate)(this.props.day),
              role: "option"
            },
            (0, _date_utils.getDate)(this.props.day)
          );
        };

        return Day;
      })(_react2.default.Component);

      Day.propTypes = {
        day: _propTypes2.default.object.isRequired,
        dayClassName: _propTypes2.default.func,
        endDate: _propTypes2.default.object,
        highlightDates: _propTypes2.default.instanceOf(Map),
        inline: _propTypes2.default.bool,
        month: _propTypes2.default.number,
        onClick: _propTypes2.default.func,
        onMouseEnter: _propTypes2.default.func,
        preSelection: _propTypes2.default.object,
        selected: _propTypes2.default.object,
        selectingDate: _propTypes2.default.object,
        selectsEnd: _propTypes2.default.bool,
        selectsStart: _propTypes2.default.bool,
        startDate: _propTypes2.default.object,
        utcOffset: _propTypes2.default.number
      };
      exports.default = Day;

      /***/
    },
    /* 346 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _classnames = __webpack_require__(215);

      var _classnames2 = _interopRequireDefault(_classnames);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var WeekNumber = (function(_React$Component) {
        _inherits(WeekNumber, _React$Component);

        function WeekNumber() {
          var _temp, _this, _ret;

          _classCallCheck(this, WeekNumber);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.handleClick = function(event) {
              if (_this.props.onClick) {
                _this.props.onClick(event);
              }
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        WeekNumber.prototype.render = function render() {
          var weekNumberClasses = {
            "react-datepicker__week-number": true,
            "react-datepicker__week-number--clickable": !!this.props.onClick
          };
          return _react2.default.createElement(
            "div",
            {
              className: (0, _classnames2.default)(weekNumberClasses),
              "aria-label": "week-" + this.props.weekNumber,
              onClick: this.handleClick
            },
            this.props.weekNumber
          );
        };

        return WeekNumber;
      })(_react2.default.Component);

      WeekNumber.propTypes = {
        weekNumber: _propTypes2.default.number.isRequired,
        onClick: _propTypes2.default.func
      };
      exports.default = WeekNumber;

      /***/
    },
    /* 347 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _createClass = (function() {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _date_utils = __webpack_require__(217);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Time = (function(_React$Component) {
        _inherits(Time, _React$Component);

        function Time() {
          var _temp, _this, _ret;

          _classCallCheck(this, Time);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.handleClick = function(time) {
              if (
                ((_this.props.minTime || _this.props.maxTime) &&
                  (0, _date_utils.isTimeInDisabledRange)(time, _this.props)) ||
                (_this.props.excludeTimes &&
                  (0, _date_utils.isTimeDisabled)(
                    time,
                    _this.props.excludeTimes
                  ))
              ) {
                return;
              }

              _this.props.onChange(time);
            }),
            (_this.liClasses = function(time, currH, currM) {
              var classes = ["react-datepicker__time-list-item"];

              if (
                currH === (0, _date_utils.getHour)(time) &&
                currM === (0, _date_utils.getMinute)(time)
              ) {
                classes.push("react-datepicker__time-list-item--selected");
              }
              if (
                ((_this.props.minTime || _this.props.maxTime) &&
                  (0, _date_utils.isTimeInDisabledRange)(time, _this.props)) ||
                (_this.props.excludeTimes &&
                  (0, _date_utils.isTimeDisabled)(
                    time,
                    _this.props.excludeTimes
                  ))
              ) {
                classes.push("react-datepicker__time-list-item--disabled");
              }

              return classes.join(" ");
            }),
            (_this.renderTimes = function() {
              var times = [];
              var format = _this.props.format ? _this.props.format : "hh:mm A";
              var intervals = _this.props.intervals;
              var activeTime = _this.props.selected
                ? _this.props.selected
                : (0, _date_utils.newDate)();
              var currH = (0, _date_utils.getHour)(activeTime);
              var currM = (0, _date_utils.getMinute)(activeTime);
              var base = (0, _date_utils.getStartOfDay)(
                (0, _date_utils.newDate)()
              );
              var multiplier = 1440 / intervals;
              for (var i = 0; i < multiplier; i++) {
                times.push(
                  (0, _date_utils.addMinutes)(
                    (0, _date_utils.cloneDate)(base),
                    i * intervals
                  )
                );
              }

              return times.map(function(time, i) {
                return _react2.default.createElement(
                  "li",
                  {
                    key: i,
                    onClick: _this.handleClick.bind(_this, time),
                    className: _this.liClasses(time, currH, currM)
                  },
                  (0, _date_utils.formatDate)(time, format)
                );
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        Time.prototype.componentDidMount = function componentDidMount() {
          // code to ensure selected time will always be in focus within time window when it first appears
          var multiplier = 60 / this.props.intervals;
          var currH = this.props.selected
            ? (0, _date_utils.getHour)(this.props.selected)
            : (0, _date_utils.getHour)((0, _date_utils.newDate)());
          this.list.scrollTop = 30 * (multiplier * currH);
        };

        Time.prototype.render = function render() {
          var _this2 = this;

          var height = null;
          if (this.props.monthRef) {
            height = this.props.monthRef.clientHeight - 39;
          }

          return _react2.default.createElement(
            "div",
            {
              className:
                "react-datepicker__time-container " +
                (this.props.todayButton
                  ? "react-datepicker__time-container--with-today-button"
                  : "")
            },
            _react2.default.createElement(
              "div",
              {
                className:
                  "react-datepicker__header react-datepicker__header--time"
              },
              _react2.default.createElement(
                "div",
                { className: "react-datepicker-time__header" },
                "Time"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "react-datepicker__time" },
              _react2.default.createElement(
                "div",
                { className: "react-datepicker__time-box" },
                _react2.default.createElement(
                  "ul",
                  {
                    className: "react-datepicker__time-list",
                    ref: function ref(list) {
                      _this2.list = list;
                    },
                    style: height ? { height: height } : {}
                  },
                  this.renderTimes.bind(this)()
                )
              )
            )
          );
        };

        _createClass(Time, null, [
          {
            key: "defaultProps",
            get: function get() {
              return {
                intervals: 30,
                onTimeChange: function onTimeChange() {},
                todayButton: null
              };
            }
          }
        ]);

        return Time;
      })(_react2.default.Component);

      Time.propTypes = {
        format: _propTypes2.default.string,
        intervals: _propTypes2.default.number,
        selected: _propTypes2.default.object,
        onChange: _propTypes2.default.func,
        todayButton: _propTypes2.default.string,
        minTime: _propTypes2.default.object,
        maxTime: _propTypes2.default.object,
        excludeTimes: _propTypes2.default.array,
        monthRef: _propTypes2.default.object
      };
      exports.default = Time;

      /***/
    },
    /* 348 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;
      exports.popperPlacementPositions = undefined;

      var _createClass = (function() {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _classnames = __webpack_require__(215);

      var _classnames2 = _interopRequireDefault(_classnames);

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _reactPopper = __webpack_require__(349);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var popperPlacementPositions = (exports.popperPlacementPositions = [
        "auto",
        "auto-left",
        "auto-right",
        "bottom",
        "bottom-end",
        "bottom-start",
        "left",
        "left-end",
        "left-start",
        "right",
        "right-end",
        "right-start",
        "top",
        "top-end",
        "top-start"
      ]);

      var PopperComponent = (function(_React$Component) {
        _inherits(PopperComponent, _React$Component);

        function PopperComponent() {
          _classCallCheck(this, PopperComponent);

          return _possibleConstructorReturn(
            this,
            _React$Component.apply(this, arguments)
          );
        }

        PopperComponent.prototype.render = function render() {
          var _props = this.props,
            className = _props.className,
            hidePopper = _props.hidePopper,
            popperComponent = _props.popperComponent,
            popperModifiers = _props.popperModifiers,
            popperPlacement = _props.popperPlacement,
            targetComponent = _props.targetComponent;

          var popper = void 0;

          if (!hidePopper) {
            var classes = (0, _classnames2.default)(
              "react-datepicker-popper",
              className
            );
            popper = _react2.default.createElement(
              _reactPopper.Popper,
              {
                className: classes,
                modifiers: popperModifiers,
                placement: popperPlacement
              },
              popperComponent
            );
          }

          if (this.props.popperContainer) {
            popper = _react2.default.createElement(
              this.props.popperContainer,
              {},
              popper
            );
          }

          return _react2.default.createElement(
            _reactPopper.Manager,
            null,
            _react2.default.createElement(
              _reactPopper.Target,
              { className: "react-datepicker-wrapper" },
              targetComponent
            ),
            popper
          );
        };

        _createClass(PopperComponent, null, [
          {
            key: "defaultProps",
            get: function get() {
              return {
                hidePopper: true,
                popperModifiers: {
                  preventOverflow: {
                    enabled: true,
                    escapeWithReference: true,
                    boundariesElement: "viewport"
                  }
                },
                popperPlacement: "bottom-start"
              };
            }
          }
        ]);

        return PopperComponent;
      })(_react2.default.Component);

      PopperComponent.propTypes = {
        className: _propTypes2.default.string,
        hidePopper: _propTypes2.default.bool,
        popperComponent: _propTypes2.default.element,
        popperModifiers: _propTypes2.default.object, // <datepicker/> props
        popperPlacement: _propTypes2.default.oneOf(popperPlacementPositions), // <datepicker/> props
        popperContainer: _propTypes2.default.func,
        targetComponent: _propTypes2.default.element
      };
      exports.default = PopperComponent;

      /***/
    },
    /* 349 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.Arrow = exports.Popper = exports.Target = exports.Manager = undefined;

      var _Manager2 = __webpack_require__(350);

      var _Manager3 = _interopRequireDefault(_Manager2);

      var _Target2 = __webpack_require__(351);

      var _Target3 = _interopRequireDefault(_Target2);

      var _Popper2 = __webpack_require__(352);

      var _Popper3 = _interopRequireDefault(_Popper2);

      var _Arrow2 = __webpack_require__(354);

      var _Arrow3 = _interopRequireDefault(_Arrow2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.Manager = _Manager3.default;
      exports.Target = _Target3.default;
      exports.Popper = _Popper3.default;
      exports.Arrow = _Arrow3.default;

      /***/
    },
    /* 350 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _createClass = (function() {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Manager = (function(_Component) {
        _inherits(Manager, _Component);

        function Manager() {
          var _ref;

          var _temp, _this, _ret;

          _classCallCheck(this, Manager);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              (_ref =
                Manager.__proto__ || Object.getPrototypeOf(Manager)).call.apply(
                _ref,
                [this].concat(args)
              )
            )),
            _this)),
            (_this._setTargetNode = function(node) {
              _this._targetNode = node;
            }),
            (_this._getTargetNode = function() {
              return _this._targetNode;
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(Manager, [
          {
            key: "getChildContext",
            value: function getChildContext() {
              return {
                popperManager: {
                  setTargetNode: this._setTargetNode,
                  getTargetNode: this._getTargetNode
                }
              };
            }
          },
          {
            key: "render",
            value: function render() {
              var _props = this.props,
                tag = _props.tag,
                children = _props.children,
                restProps = _objectWithoutProperties(_props, [
                  "tag",
                  "children"
                ]);

              if (tag !== false) {
                return (0, _react.createElement)(tag, restProps, children);
              } else {
                return children;
              }
            }
          }
        ]);

        return Manager;
      })(_react.Component);

      Manager.childContextTypes = {
        popperManager: _propTypes2.default.object.isRequired
      };
      Manager.propTypes = {
        tag: _propTypes2.default.oneOfType([
          _propTypes2.default.string,
          _propTypes2.default.bool
        ])
      };
      Manager.defaultProps = {
        tag: "div"
      };
      exports.default = Manager;

      /***/
    },
    /* 351 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends =
        Object.assign ||
        function(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      var Target = function Target(props, context) {
        var _props$component = props.component,
          component = _props$component === undefined ? "div" : _props$component,
          innerRef = props.innerRef,
          children = props.children,
          restProps = _objectWithoutProperties(props, [
            "component",
            "innerRef",
            "children"
          ]);

        var popperManager = context.popperManager;

        var targetRef = function targetRef(node) {
          popperManager.setTargetNode(node);
          if (typeof innerRef === "function") {
            innerRef(node);
          }
        };

        if (typeof children === "function") {
          var targetProps = { ref: targetRef };
          return children({ targetProps: targetProps, restProps: restProps });
        }

        var componentProps = _extends({}, restProps);

        if (typeof component === "string") {
          componentProps.ref = targetRef;
        } else {
          componentProps.innerRef = targetRef;
        }

        return (0, _react.createElement)(component, componentProps, children);
      };

      Target.contextTypes = {
        popperManager: _propTypes2.default.object.isRequired
      };

      Target.propTypes = {
        component: _propTypes2.default.oneOfType([
          _propTypes2.default.node,
          _propTypes2.default.func
        ]),
        innerRef: _propTypes2.default.func,
        children: _propTypes2.default.oneOfType([
          _propTypes2.default.node,
          _propTypes2.default.func
        ])
      };

      exports.default = Target;

      /***/
    },
    /* 352 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends =
        Object.assign ||
        function(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function() {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _popper = __webpack_require__(353);

      var _popper2 = _interopRequireDefault(_popper);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var noop = function noop() {
        return null;
      };

      var Popper = (function(_Component) {
        _inherits(Popper, _Component);

        function Popper() {
          var _ref;

          var _temp, _this, _ret;

          _classCallCheck(this, Popper);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              (_ref =
                Popper.__proto__ || Object.getPrototypeOf(Popper)).call.apply(
                _ref,
                [this].concat(args)
              )
            )),
            _this)),
            (_this.state = {}),
            (_this._setArrowNode = function(node) {
              _this._arrowNode = node;
            }),
            (_this._getTargetNode = function() {
              return _this.context.popperManager.getTargetNode();
            }),
            (_this._getOffsets = function(data) {
              return Object.keys(data.offsets).map(function(key) {
                return data.offsets[key];
              });
            }),
            (_this._isDataDirty = function(data) {
              if (_this.state.data) {
                return (
                  JSON.stringify(_this._getOffsets(_this.state.data)) !==
                  JSON.stringify(_this._getOffsets(data))
                );
              } else {
                return true;
              }
            }),
            (_this._updateStateModifier = {
              enabled: true,
              order: 900,
              fn: function fn(data) {
                if (_this._isDataDirty(data)) {
                  _this.setState({ data: data });
                }
                return data;
              }
            }),
            (_this._getPopperStyle = function() {
              var data = _this.state.data;

              // If Popper isn't instantiated, hide the popperElement
              // to avoid flash of unstyled content

              if (!_this._popper || !data) {
                return {
                  position: "absolute",
                  pointerEvents: "none",
                  opacity: 0
                };
              }

              var _data$offsets$popper = data.offsets.popper,
                top = _data$offsets$popper.top,
                left = _data$offsets$popper.left,
                position = _data$offsets$popper.position;

              return _extends(
                {
                  position: position
                },
                data.styles
              );
            }),
            (_this._getPopperPlacement = function() {
              return !!_this.state.data
                ? _this.state.data.placement
                : undefined;
            }),
            (_this._getPopperHide = function() {
              return !!_this.state.data && _this.state.data.hide
                ? ""
                : undefined;
            }),
            (_this._getArrowStyle = function() {
              if (!_this.state.data || !_this.state.data.offsets.arrow) {
                return {};
              } else {
                var _this$state$data$offs = _this.state.data.offsets.arrow,
                  top = _this$state$data$offs.top,
                  left = _this$state$data$offs.left;

                return { top: top, left: left };
              }
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(Popper, [
          {
            key: "getChildContext",
            value: function getChildContext() {
              return {
                popper: {
                  setArrowNode: this._setArrowNode,
                  getArrowStyle: this._getArrowStyle
                }
              };
            }
          },
          {
            key: "componentDidMount",
            value: function componentDidMount() {
              this._updatePopper();
            }
          },
          {
            key: "componentDidUpdate",
            value: function componentDidUpdate(lastProps) {
              if (
                lastProps.placement !== this.props.placement ||
                lastProps.eventsEnabled !== this.props.eventsEnabled
              ) {
                this._updatePopper();
              }

              if (this._popper && lastProps.children !== this.props.children) {
                this._popper.scheduleUpdate();
              }
            }
          },
          {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
              this._destroyPopper();
            }
          },
          {
            key: "_updatePopper",
            value: function _updatePopper() {
              this._destroyPopper();
              if (this._node) {
                this._createPopper();
              }
            }
          },
          {
            key: "_createPopper",
            value: function _createPopper() {
              var _props = this.props,
                placement = _props.placement,
                eventsEnabled = _props.eventsEnabled;

              var modifiers = _extends({}, this.props.modifiers, {
                applyStyle: { enabled: false },
                updateState: this._updateStateModifier
              });

              if (this._arrowNode) {
                modifiers.arrow = {
                  element: this._arrowNode
                };
              }

              this._popper = new _popper2.default(
                this._getTargetNode(),
                this._node,
                {
                  placement: placement,
                  eventsEnabled: eventsEnabled,
                  modifiers: modifiers
                }
              );

              // schedule an update to make sure everything gets positioned correct
              // after being instantiated
              this._popper.scheduleUpdate();
            }
          },
          {
            key: "_destroyPopper",
            value: function _destroyPopper() {
              if (this._popper) {
                this._popper.destroy();
              }
            }
          },
          {
            key: "render",
            value: function render() {
              var _this2 = this;

              var _props2 = this.props,
                component = _props2.component,
                innerRef = _props2.innerRef,
                placement = _props2.placement,
                eventsEnabled = _props2.eventsEnabled,
                modifiers = _props2.modifiers,
                children = _props2.children,
                restProps = _objectWithoutProperties(_props2, [
                  "component",
                  "innerRef",
                  "placement",
                  "eventsEnabled",
                  "modifiers",
                  "children"
                ]);

              var popperRef = function popperRef(node) {
                _this2._node = node;
                if (typeof innerRef === "function") {
                  innerRef(node);
                }
              };
              var popperStyle = this._getPopperStyle();
              var popperPlacement = this._getPopperPlacement();
              var popperHide = this._getPopperHide();

              if (typeof children === "function") {
                var _popperProps;

                var popperProps = ((_popperProps = {
                  ref: popperRef,
                  style: popperStyle
                }),
                _defineProperty(
                  _popperProps,
                  "data-placement",
                  popperPlacement
                ),
                _defineProperty(
                  _popperProps,
                  "data-x-out-of-boundaries",
                  popperHide
                ),
                _popperProps);
                return children({
                  popperProps: popperProps,
                  restProps: restProps,
                  scheduleUpdate: this._popper && this._popper.scheduleUpdate
                });
              }

              var componentProps = _extends({}, restProps, {
                style: _extends({}, restProps.style, popperStyle),
                "data-placement": popperPlacement,
                "data-x-out-of-boundaries": popperHide
              });

              if (typeof component === "string") {
                componentProps.ref = popperRef;
              } else {
                componentProps.innerRef = popperRef;
              }

              return (0, _react.createElement)(
                component,
                componentProps,
                children
              );
            }
          }
        ]);

        return Popper;
      })(_react.Component);

      Popper.contextTypes = {
        popperManager: _propTypes2.default.object.isRequired
      };
      Popper.childContextTypes = {
        popper: _propTypes2.default.object.isRequired
      };
      Popper.propTypes = {
        component: _propTypes2.default.oneOfType([
          _propTypes2.default.node,
          _propTypes2.default.func
        ]),
        innerRef: _propTypes2.default.func,
        placement: _propTypes2.default.oneOf(_popper2.default.placements),
        eventsEnabled: _propTypes2.default.bool,
        modifiers: _propTypes2.default.object,
        children: _propTypes2.default.oneOfType([
          _propTypes2.default.node,
          _propTypes2.default.func
        ])
      };
      Popper.defaultProps = {
        component: "div",
        placement: "bottom",
        eventsEnabled: true,
        modifiers: {}
      };
      exports.default = Popper;

      /***/
    },
    /* 353 */
    /***/ function(module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function(global) {
        /**!
         * @fileOverview Kickass library to create and place poppers near their reference elements.
         * @version 1.12.9
         * @license
         * Copyright (c) 2016 Federico Zivolo and contributors
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in all
         * copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
         * SOFTWARE.
         */
        (function(global, factory) {
          true
            ? (module.exports = factory())
            : typeof define === "function" && define.amd
              ? define(factory)
              : (global.Popper = factory());
        })(this, function() {
          "use strict";

          var isBrowser =
            typeof window !== "undefined" && typeof document !== "undefined";
          var longerTimeoutBrowsers = ["Edge", "Trident", "Firefox"];
          var timeoutDuration = 0;
          for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
            if (
              isBrowser &&
              navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0
            ) {
              timeoutDuration = 1;
              break;
            }
          }

          function microtaskDebounce(fn) {
            var called = false;
            return function() {
              if (called) {
                return;
              }
              called = true;
              window.Promise.resolve().then(function() {
                called = false;
                fn();
              });
            };
          }

          function taskDebounce(fn) {
            var scheduled = false;
            return function() {
              if (!scheduled) {
                scheduled = true;
                setTimeout(function() {
                  scheduled = false;
                  fn();
                }, timeoutDuration);
              }
            };
          }

          var supportsMicroTasks = isBrowser && window.Promise;

          /**
           * Create a debounced version of a method, that's asynchronously deferred
           * but called in the minimum time possible.
           *
           * @method
           * @memberof Popper.Utils
           * @argument {Function} fn
           * @returns {Function}
           */
          var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

          /**
           * Check if the given variable is a function
           * @method
           * @memberof Popper.Utils
           * @argument {Any} functionToCheck - variable to check
           * @returns {Boolean} answer to: is a function?
           */
          function isFunction(functionToCheck) {
            var getType = {};
            return (
              functionToCheck &&
              getType.toString.call(functionToCheck) === "[object Function]"
            );
          }

          /**
           * Get CSS computed property of the given element
           * @method
           * @memberof Popper.Utils
           * @argument {Eement} element
           * @argument {String} property
           */
          function getStyleComputedProperty(element, property) {
            if (element.nodeType !== 1) {
              return [];
            }
            // NOTE: 1 DOM access here
            var css = getComputedStyle(element, null);
            return property ? css[property] : css;
          }

          /**
           * Returns the parentNode or the host of the element
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @returns {Element} parent
           */
          function getParentNode(element) {
            if (element.nodeName === "HTML") {
              return element;
            }
            return element.parentNode || element.host;
          }

          /**
           * Returns the scrolling parent of the given element
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @returns {Element} scroll parent
           */
          function getScrollParent(element) {
            // Return body, `getScroll` will take care to get the correct `scrollTop` from it
            if (!element) {
              return document.body;
            }

            switch (element.nodeName) {
              case "HTML":
              case "BODY":
                return element.ownerDocument.body;
              case "#document":
                return element.body;
            }

            // Firefox want us to check `-x` and `-y` variations as well

            var _getStyleComputedProp = getStyleComputedProperty(element),
              overflow = _getStyleComputedProp.overflow,
              overflowX = _getStyleComputedProp.overflowX,
              overflowY = _getStyleComputedProp.overflowY;

            if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {
              return element;
            }

            return getScrollParent(getParentNode(element));
          }

          /**
           * Returns the offset parent of the given element
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @returns {Element} offset parent
           */
          function getOffsetParent(element) {
            // NOTE: 1 DOM access here
            var offsetParent = element && element.offsetParent;
            var nodeName = offsetParent && offsetParent.nodeName;

            if (!nodeName || nodeName === "BODY" || nodeName === "HTML") {
              if (element) {
                return element.ownerDocument.documentElement;
              }

              return document.documentElement;
            }

            // .offsetParent will return the closest TD or TABLE in case
            // no offsetParent is present, I hate this job...
            if (
              ["TD", "TABLE"].indexOf(offsetParent.nodeName) !== -1 &&
              getStyleComputedProperty(offsetParent, "position") === "static"
            ) {
              return getOffsetParent(offsetParent);
            }

            return offsetParent;
          }

          function isOffsetContainer(element) {
            var nodeName = element.nodeName;

            if (nodeName === "BODY") {
              return false;
            }
            return (
              nodeName === "HTML" ||
              getOffsetParent(element.firstElementChild) === element
            );
          }

          /**
           * Finds the root node (document, shadowDOM root) of the given element
           * @method
           * @memberof Popper.Utils
           * @argument {Element} node
           * @returns {Element} root node
           */
          function getRoot(node) {
            if (node.parentNode !== null) {
              return getRoot(node.parentNode);
            }

            return node;
          }

          /**
           * Finds the offset parent common to the two provided nodes
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element1
           * @argument {Element} element2
           * @returns {Element} common offset parent
           */
          function findCommonOffsetParent(element1, element2) {
            // This check is needed to avoid errors in case one of the elements isn't defined for any reason
            if (
              !element1 ||
              !element1.nodeType ||
              !element2 ||
              !element2.nodeType
            ) {
              return document.documentElement;
            }

            // Here we make sure to give as "start" the element that comes first in the DOM
            var order =
              element1.compareDocumentPosition(element2) &
              Node.DOCUMENT_POSITION_FOLLOWING;
            var start = order ? element1 : element2;
            var end = order ? element2 : element1;

            // Get common ancestor container
            var range = document.createRange();
            range.setStart(start, 0);
            range.setEnd(end, 0);
            var commonAncestorContainer = range.commonAncestorContainer;

            // Both nodes are inside #document

            if (
              (element1 !== commonAncestorContainer &&
                element2 !== commonAncestorContainer) ||
              start.contains(end)
            ) {
              if (isOffsetContainer(commonAncestorContainer)) {
                return commonAncestorContainer;
              }

              return getOffsetParent(commonAncestorContainer);
            }

            // one of the nodes is inside shadowDOM, find which one
            var element1root = getRoot(element1);
            if (element1root.host) {
              return findCommonOffsetParent(element1root.host, element2);
            } else {
              return findCommonOffsetParent(element1, getRoot(element2).host);
            }
          }

          /**
           * Gets the scroll value of the given element in the given side (top and left)
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @argument {String} side `top` or `left`
           * @returns {number} amount of scrolled pixels
           */
          function getScroll(element) {
            var side =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : "top";

            var upperSide = side === "top" ? "scrollTop" : "scrollLeft";
            var nodeName = element.nodeName;

            if (nodeName === "BODY" || nodeName === "HTML") {
              var html = element.ownerDocument.documentElement;
              var scrollingElement =
                element.ownerDocument.scrollingElement || html;
              return scrollingElement[upperSide];
            }

            return element[upperSide];
          }

          /*
	 * Sum or subtract the element scroll values (left and top) from a given rect object
	 * @method
	 * @memberof Popper.Utils
	 * @param {Object} rect - Rect object you want to change
	 * @param {HTMLElement} element - The element from the function reads the scroll values
	 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
	 * @return {Object} rect - The modifier rect object
	 */
          function includeScroll(rect, element) {
            var subtract =
              arguments.length > 2 && arguments[2] !== undefined
                ? arguments[2]
                : false;

            var scrollTop = getScroll(element, "top");
            var scrollLeft = getScroll(element, "left");
            var modifier = subtract ? -1 : 1;
            rect.top += scrollTop * modifier;
            rect.bottom += scrollTop * modifier;
            rect.left += scrollLeft * modifier;
            rect.right += scrollLeft * modifier;
            return rect;
          }

          /*
	 * Helper to detect borders of a given element
	 * @method
	 * @memberof Popper.Utils
	 * @param {CSSStyleDeclaration} styles
	 * Result of `getStyleComputedProperty` on the given element
	 * @param {String} axis - `x` or `y`
	 * @return {number} borders - The borders size of the given axis
	 */

          function getBordersSize(styles, axis) {
            var sideA = axis === "x" ? "Left" : "Top";
            var sideB = sideA === "Left" ? "Right" : "Bottom";

            return (
              parseFloat(styles["border" + sideA + "Width"], 10) +
              parseFloat(styles["border" + sideB + "Width"], 10)
            );
          }

          /**
           * Tells if you are running Internet Explorer 10
           * @method
           * @memberof Popper.Utils
           * @returns {Boolean} isIE10
           */
          var isIE10 = undefined;

          var isIE10$1 = function() {
            if (isIE10 === undefined) {
              isIE10 = navigator.appVersion.indexOf("MSIE 10") !== -1;
            }
            return isIE10;
          };

          function getSize(axis, body, html, computedStyle) {
            return Math.max(
              body["offset" + axis],
              body["scroll" + axis],
              html["client" + axis],
              html["offset" + axis],
              html["scroll" + axis],
              isIE10$1()
                ? html["offset" + axis] +
                  computedStyle[
                    "margin" + (axis === "Height" ? "Top" : "Left")
                  ] +
                  computedStyle[
                    "margin" + (axis === "Height" ? "Bottom" : "Right")
                  ]
                : 0
            );
          }

          function getWindowSizes() {
            var body = document.body;
            var html = document.documentElement;
            var computedStyle = isIE10$1() && getComputedStyle(html);

            return {
              height: getSize("Height", body, html, computedStyle),
              width: getSize("Width", body, html, computedStyle)
            };
          }

          var classCallCheck = function(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          };

          var createClass = (function() {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();

          var defineProperty = function(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
              });
            } else {
              obj[key] = value;
            }

            return obj;
          };

          var _extends =
            Object.assign ||
            function(target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];

                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }

              return target;
            };

          /**
           * Given element offsets, generate an output similar to getBoundingClientRect
           * @method
           * @memberof Popper.Utils
           * @argument {Object} offsets
           * @returns {Object} ClientRect like output
           */
          function getClientRect(offsets) {
            return _extends({}, offsets, {
              right: offsets.left + offsets.width,
              bottom: offsets.top + offsets.height
            });
          }

          /**
           * Get bounding client rect of given element
           * @method
           * @memberof Popper.Utils
           * @param {HTMLElement} element
           * @return {Object} client rect
           */
          function getBoundingClientRect(element) {
            var rect = {};

            // IE10 10 FIX: Please, don't ask, the element isn't
            // considered in DOM in some circumstances...
            // This isn't reproducible in IE10 compatibility mode of IE11
            if (isIE10$1()) {
              try {
                rect = element.getBoundingClientRect();
                var scrollTop = getScroll(element, "top");
                var scrollLeft = getScroll(element, "left");
                rect.top += scrollTop;
                rect.left += scrollLeft;
                rect.bottom += scrollTop;
                rect.right += scrollLeft;
              } catch (err) {}
            } else {
              rect = element.getBoundingClientRect();
            }

            var result = {
              left: rect.left,
              top: rect.top,
              width: rect.right - rect.left,
              height: rect.bottom - rect.top
            };

            // subtract scrollbar size from sizes
            var sizes = element.nodeName === "HTML" ? getWindowSizes() : {};
            var width =
              sizes.width || element.clientWidth || result.right - result.left;
            var height =
              sizes.height ||
              element.clientHeight ||
              result.bottom - result.top;

            var horizScrollbar = element.offsetWidth - width;
            var vertScrollbar = element.offsetHeight - height;

            // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
            // we make this check conditional for performance reasons
            if (horizScrollbar || vertScrollbar) {
              var styles = getStyleComputedProperty(element);
              horizScrollbar -= getBordersSize(styles, "x");
              vertScrollbar -= getBordersSize(styles, "y");

              result.width -= horizScrollbar;
              result.height -= vertScrollbar;
            }

            return getClientRect(result);
          }

          function getOffsetRectRelativeToArbitraryNode(children, parent) {
            var isIE10 = isIE10$1();
            var isHTML = parent.nodeName === "HTML";
            var childrenRect = getBoundingClientRect(children);
            var parentRect = getBoundingClientRect(parent);
            var scrollParent = getScrollParent(children);

            var styles = getStyleComputedProperty(parent);
            var borderTopWidth = parseFloat(styles.borderTopWidth, 10);
            var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);

            var offsets = getClientRect({
              top: childrenRect.top - parentRect.top - borderTopWidth,
              left: childrenRect.left - parentRect.left - borderLeftWidth,
              width: childrenRect.width,
              height: childrenRect.height
            });
            offsets.marginTop = 0;
            offsets.marginLeft = 0;

            // Subtract margins of documentElement in case it's being used as parent
            // we do this only on HTML because it's the only element that behaves
            // differently when margins are applied to it. The margins are included in
            // the box of the documentElement, in the other cases not.
            if (!isIE10 && isHTML) {
              var marginTop = parseFloat(styles.marginTop, 10);
              var marginLeft = parseFloat(styles.marginLeft, 10);

              offsets.top -= borderTopWidth - marginTop;
              offsets.bottom -= borderTopWidth - marginTop;
              offsets.left -= borderLeftWidth - marginLeft;
              offsets.right -= borderLeftWidth - marginLeft;

              // Attach marginTop and marginLeft because in some circumstances we may need them
              offsets.marginTop = marginTop;
              offsets.marginLeft = marginLeft;
            }

            if (
              isIE10
                ? parent.contains(scrollParent)
                : parent === scrollParent && scrollParent.nodeName !== "BODY"
            ) {
              offsets = includeScroll(offsets, parent);
            }

            return offsets;
          }

          function getViewportOffsetRectRelativeToArtbitraryNode(element) {
            var html = element.ownerDocument.documentElement;
            var relativeOffset = getOffsetRectRelativeToArbitraryNode(
              element,
              html
            );
            var width = Math.max(html.clientWidth, window.innerWidth || 0);
            var height = Math.max(html.clientHeight, window.innerHeight || 0);

            var scrollTop = getScroll(html);
            var scrollLeft = getScroll(html, "left");

            var offset = {
              top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
              left:
                scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
              width: width,
              height: height
            };

            return getClientRect(offset);
          }

          /**
           * Check if the given element is fixed or is inside a fixed parent
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @argument {Element} customContainer
           * @returns {Boolean} answer to "isFixed?"
           */
          function isFixed(element) {
            var nodeName = element.nodeName;
            if (nodeName === "BODY" || nodeName === "HTML") {
              return false;
            }
            if (getStyleComputedProperty(element, "position") === "fixed") {
              return true;
            }
            return isFixed(getParentNode(element));
          }

          /**
           * Computed the boundaries limits and return them
           * @method
           * @memberof Popper.Utils
           * @param {HTMLElement} popper
           * @param {HTMLElement} reference
           * @param {number} padding
           * @param {HTMLElement} boundariesElement - Element used to define the boundaries
           * @returns {Object} Coordinates of the boundaries
           */
          function getBoundaries(
            popper,
            reference,
            padding,
            boundariesElement
          ) {
            // NOTE: 1 DOM access here
            var boundaries = { top: 0, left: 0 };
            var offsetParent = findCommonOffsetParent(popper, reference);

            // Handle viewport case
            if (boundariesElement === "viewport") {
              boundaries = getViewportOffsetRectRelativeToArtbitraryNode(
                offsetParent
              );
            } else {
              // Handle other cases based on DOM element used as boundaries
              var boundariesNode = void 0;
              if (boundariesElement === "scrollParent") {
                boundariesNode = getScrollParent(getParentNode(reference));
                if (boundariesNode.nodeName === "BODY") {
                  boundariesNode = popper.ownerDocument.documentElement;
                }
              } else if (boundariesElement === "window") {
                boundariesNode = popper.ownerDocument.documentElement;
              } else {
                boundariesNode = boundariesElement;
              }

              var offsets = getOffsetRectRelativeToArbitraryNode(
                boundariesNode,
                offsetParent
              );

              // In case of HTML, we need a different computation
              if (
                boundariesNode.nodeName === "HTML" &&
                !isFixed(offsetParent)
              ) {
                var _getWindowSizes = getWindowSizes(),
                  height = _getWindowSizes.height,
                  width = _getWindowSizes.width;

                boundaries.top += offsets.top - offsets.marginTop;
                boundaries.bottom = height + offsets.top;
                boundaries.left += offsets.left - offsets.marginLeft;
                boundaries.right = width + offsets.left;
              } else {
                // for all the other DOM elements, this one is good
                boundaries = offsets;
              }
            }

            // Add paddings
            boundaries.left += padding;
            boundaries.top += padding;
            boundaries.right -= padding;
            boundaries.bottom -= padding;

            return boundaries;
          }

          function getArea(_ref) {
            var width = _ref.width,
              height = _ref.height;

            return width * height;
          }

          /**
           * Utility used to transform the `auto` placement to the placement with more
           * available space.
           * @method
           * @memberof Popper.Utils
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function computeAutoPlacement(
            placement,
            refRect,
            popper,
            reference,
            boundariesElement
          ) {
            var padding =
              arguments.length > 5 && arguments[5] !== undefined
                ? arguments[5]
                : 0;

            if (placement.indexOf("auto") === -1) {
              return placement;
            }

            var boundaries = getBoundaries(
              popper,
              reference,
              padding,
              boundariesElement
            );

            var rects = {
              top: {
                width: boundaries.width,
                height: refRect.top - boundaries.top
              },
              right: {
                width: boundaries.right - refRect.right,
                height: boundaries.height
              },
              bottom: {
                width: boundaries.width,
                height: boundaries.bottom - refRect.bottom
              },
              left: {
                width: refRect.left - boundaries.left,
                height: boundaries.height
              }
            };

            var sortedAreas = Object.keys(rects)
              .map(function(key) {
                return _extends(
                  {
                    key: key
                  },
                  rects[key],
                  {
                    area: getArea(rects[key])
                  }
                );
              })
              .sort(function(a, b) {
                return b.area - a.area;
              });

            var filteredAreas = sortedAreas.filter(function(_ref2) {
              var width = _ref2.width,
                height = _ref2.height;
              return (
                width >= popper.clientWidth && height >= popper.clientHeight
              );
            });

            var computedPlacement =
              filteredAreas.length > 0
                ? filteredAreas[0].key
                : sortedAreas[0].key;

            var variation = placement.split("-")[1];

            return computedPlacement + (variation ? "-" + variation : "");
          }

          /**
           * Get offsets to the reference element
           * @method
           * @memberof Popper.Utils
           * @param {Object} state
           * @param {Element} popper - the popper element
           * @param {Element} reference - the reference element (the popper will be relative to this)
           * @returns {Object} An object containing the offsets which will be applied to the popper
           */
          function getReferenceOffsets(state, popper, reference) {
            var commonOffsetParent = findCommonOffsetParent(popper, reference);
            return getOffsetRectRelativeToArbitraryNode(
              reference,
              commonOffsetParent
            );
          }

          /**
           * Get the outer sizes of the given element (offset size + margins)
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @returns {Object} object containing width and height properties
           */
          function getOuterSizes(element) {
            var styles = getComputedStyle(element);
            var x =
              parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);
            var y =
              parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);
            var result = {
              width: element.offsetWidth + y,
              height: element.offsetHeight + x
            };
            return result;
          }

          /**
           * Get the opposite placement of the given one
           * @method
           * @memberof Popper.Utils
           * @argument {String} placement
           * @returns {String} flipped placement
           */
          function getOppositePlacement(placement) {
            var hash = {
              left: "right",
              right: "left",
              bottom: "top",
              top: "bottom"
            };
            return placement.replace(/left|right|bottom|top/g, function(
              matched
            ) {
              return hash[matched];
            });
          }

          /**
           * Get offsets to the popper
           * @method
           * @memberof Popper.Utils
           * @param {Object} position - CSS position the Popper will get applied
           * @param {HTMLElement} popper - the popper element
           * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
           * @param {String} placement - one of the valid placement options
           * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
           */
          function getPopperOffsets(popper, referenceOffsets, placement) {
            placement = placement.split("-")[0];

            // Get popper node sizes
            var popperRect = getOuterSizes(popper);

            // Add position, width and height to our offsets object
            var popperOffsets = {
              width: popperRect.width,
              height: popperRect.height
            };

            // depending by the popper placement we have to compute its offsets slightly differently
            var isHoriz = ["right", "left"].indexOf(placement) !== -1;
            var mainSide = isHoriz ? "top" : "left";
            var secondarySide = isHoriz ? "left" : "top";
            var measurement = isHoriz ? "height" : "width";
            var secondaryMeasurement = !isHoriz ? "height" : "width";

            popperOffsets[mainSide] =
              referenceOffsets[mainSide] +
              referenceOffsets[measurement] / 2 -
              popperRect[measurement] / 2;
            if (placement === secondarySide) {
              popperOffsets[secondarySide] =
                referenceOffsets[secondarySide] -
                popperRect[secondaryMeasurement];
            } else {
              popperOffsets[secondarySide] =
                referenceOffsets[getOppositePlacement(secondarySide)];
            }

            return popperOffsets;
          }

          /**
           * Mimics the `find` method of Array
           * @method
           * @memberof Popper.Utils
           * @argument {Array} arr
           * @argument prop
           * @argument value
           * @returns index or -1
           */
          function find(arr, check) {
            // use native find if supported
            if (Array.prototype.find) {
              return arr.find(check);
            }

            // use `filter` to obtain the same behavior of `find`
            return arr.filter(check)[0];
          }

          /**
           * Return the index of the matching object
           * @method
           * @memberof Popper.Utils
           * @argument {Array} arr
           * @argument prop
           * @argument value
           * @returns index or -1
           */
          function findIndex(arr, prop, value) {
            // use native findIndex if supported
            if (Array.prototype.findIndex) {
              return arr.findIndex(function(cur) {
                return cur[prop] === value;
              });
            }

            // use `find` + `indexOf` if `findIndex` isn't supported
            var match = find(arr, function(obj) {
              return obj[prop] === value;
            });
            return arr.indexOf(match);
          }

          /**
           * Loop trough the list of modifiers and run them in order,
           * each of them will then edit the data object.
           * @method
           * @memberof Popper.Utils
           * @param {dataObject} data
           * @param {Array} modifiers
           * @param {String} ends - Optional modifier name used as stopper
           * @returns {dataObject}
           */
          function runModifiers(modifiers, data, ends) {
            var modifiersToRun =
              ends === undefined
                ? modifiers
                : modifiers.slice(0, findIndex(modifiers, "name", ends));

            modifiersToRun.forEach(function(modifier) {
              if (modifier["function"]) {
                // eslint-disable-line dot-notation
                console.warn(
                  "`modifier.function` is deprecated, use `modifier.fn`!"
                );
              }
              var fn = modifier["function"] || modifier.fn; // eslint-disable-line dot-notation
              if (modifier.enabled && isFunction(fn)) {
                // Add properties to offsets to make them a complete clientRect object
                // we do this before each modifier to make sure the previous one doesn't
                // mess with these values
                data.offsets.popper = getClientRect(data.offsets.popper);
                data.offsets.reference = getClientRect(data.offsets.reference);

                data = fn(data, modifier);
              }
            });

            return data;
          }

          /**
           * Updates the position of the popper, computing the new offsets and applying
           * the new style.<br />
           * Prefer `scheduleUpdate` over `update` because of performance reasons.
           * @method
           * @memberof Popper
           */
          function update() {
            // if popper is destroyed, don't perform any further update
            if (this.state.isDestroyed) {
              return;
            }

            var data = {
              instance: this,
              styles: {},
              arrowStyles: {},
              attributes: {},
              flipped: false,
              offsets: {}
            };

            // compute reference element offsets
            data.offsets.reference = getReferenceOffsets(
              this.state,
              this.popper,
              this.reference
            );

            // compute auto placement, store placement inside the data object,
            // modifiers will be able to edit `placement` if needed
            // and refer to originalPlacement to know the original value
            data.placement = computeAutoPlacement(
              this.options.placement,
              data.offsets.reference,
              this.popper,
              this.reference,
              this.options.modifiers.flip.boundariesElement,
              this.options.modifiers.flip.padding
            );

            // store the computed placement inside `originalPlacement`
            data.originalPlacement = data.placement;

            // compute the popper offsets
            data.offsets.popper = getPopperOffsets(
              this.popper,
              data.offsets.reference,
              data.placement
            );
            data.offsets.popper.position = "absolute";

            // run the modifiers
            data = runModifiers(this.modifiers, data);

            // the first `update` will call `onCreate` callback
            // the other ones will call `onUpdate` callback
            if (!this.state.isCreated) {
              this.state.isCreated = true;
              this.options.onCreate(data);
            } else {
              this.options.onUpdate(data);
            }
          }

          /**
           * Helper used to know if the given modifier is enabled.
           * @method
           * @memberof Popper.Utils
           * @returns {Boolean}
           */
          function isModifierEnabled(modifiers, modifierName) {
            return modifiers.some(function(_ref) {
              var name = _ref.name,
                enabled = _ref.enabled;
              return enabled && name === modifierName;
            });
          }

          /**
           * Get the prefixed supported property name
           * @method
           * @memberof Popper.Utils
           * @argument {String} property (camelCase)
           * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
           */
          function getSupportedPropertyName(property) {
            var prefixes = [false, "ms", "Webkit", "Moz", "O"];
            var upperProp =
              property.charAt(0).toUpperCase() + property.slice(1);

            for (var i = 0; i < prefixes.length - 1; i++) {
              var prefix = prefixes[i];
              var toCheck = prefix ? "" + prefix + upperProp : property;
              if (typeof document.body.style[toCheck] !== "undefined") {
                return toCheck;
              }
            }
            return null;
          }

          /**
           * Destroy the popper
           * @method
           * @memberof Popper
           */
          function destroy() {
            this.state.isDestroyed = true;

            // touch DOM only if `applyStyle` modifier is enabled
            if (isModifierEnabled(this.modifiers, "applyStyle")) {
              this.popper.removeAttribute("x-placement");
              this.popper.style.left = "";
              this.popper.style.position = "";
              this.popper.style.top = "";
              this.popper.style[getSupportedPropertyName("transform")] = "";
            }

            this.disableEventListeners();

            // remove the popper if user explicity asked for the deletion on destroy
            // do not use `remove` because IE11 doesn't support it
            if (this.options.removeOnDestroy) {
              this.popper.parentNode.removeChild(this.popper);
            }
            return this;
          }

          /**
           * Get the window associated with the element
           * @argument {Element} element
           * @returns {Window}
           */
          function getWindow(element) {
            var ownerDocument = element.ownerDocument;
            return ownerDocument ? ownerDocument.defaultView : window;
          }

          function attachToScrollParents(
            scrollParent,
            event,
            callback,
            scrollParents
          ) {
            var isBody = scrollParent.nodeName === "BODY";
            var target = isBody
              ? scrollParent.ownerDocument.defaultView
              : scrollParent;
            target.addEventListener(event, callback, { passive: true });

            if (!isBody) {
              attachToScrollParents(
                getScrollParent(target.parentNode),
                event,
                callback,
                scrollParents
              );
            }
            scrollParents.push(target);
          }

          /**
           * Setup needed event listeners used to update the popper position
           * @method
           * @memberof Popper.Utils
           * @private
           */
          function setupEventListeners(reference, options, state, updateBound) {
            // Resize event listener on window
            state.updateBound = updateBound;
            getWindow(reference).addEventListener("resize", state.updateBound, {
              passive: true
            });

            // Scroll event listener on scroll parents
            var scrollElement = getScrollParent(reference);
            attachToScrollParents(
              scrollElement,
              "scroll",
              state.updateBound,
              state.scrollParents
            );
            state.scrollElement = scrollElement;
            state.eventsEnabled = true;

            return state;
          }

          /**
           * It will add resize/scroll events and start recalculating
           * position of the popper element when they are triggered.
           * @method
           * @memberof Popper
           */
          function enableEventListeners() {
            if (!this.state.eventsEnabled) {
              this.state = setupEventListeners(
                this.reference,
                this.options,
                this.state,
                this.scheduleUpdate
              );
            }
          }

          /**
           * Remove event listeners used to update the popper position
           * @method
           * @memberof Popper.Utils
           * @private
           */
          function removeEventListeners(reference, state) {
            // Remove resize event listener on window
            getWindow(reference).removeEventListener(
              "resize",
              state.updateBound
            );

            // Remove scroll event listener on scroll parents
            state.scrollParents.forEach(function(target) {
              target.removeEventListener("scroll", state.updateBound);
            });

            // Reset state
            state.updateBound = null;
            state.scrollParents = [];
            state.scrollElement = null;
            state.eventsEnabled = false;
            return state;
          }

          /**
           * It will remove resize/scroll events and won't recalculate popper position
           * when they are triggered. It also won't trigger onUpdate callback anymore,
           * unless you call `update` method manually.
           * @method
           * @memberof Popper
           */
          function disableEventListeners() {
            if (this.state.eventsEnabled) {
              cancelAnimationFrame(this.scheduleUpdate);
              this.state = removeEventListeners(this.reference, this.state);
            }
          }

          /**
           * Tells if a given input is a number
           * @method
           * @memberof Popper.Utils
           * @param {*} input to check
           * @return {Boolean}
           */
          function isNumeric(n) {
            return n !== "" && !isNaN(parseFloat(n)) && isFinite(n);
          }

          /**
           * Set the style to the given popper
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element - Element to apply the style to
           * @argument {Object} styles
           * Object with a list of properties and values which will be applied to the element
           */
          function setStyles(element, styles) {
            Object.keys(styles).forEach(function(prop) {
              var unit = "";
              // add unit if the value is numeric and is one of the following
              if (
                ["width", "height", "top", "right", "bottom", "left"].indexOf(
                  prop
                ) !== -1 &&
                isNumeric(styles[prop])
              ) {
                unit = "px";
              }
              element.style[prop] = styles[prop] + unit;
            });
          }

          /**
           * Set the attributes to the given popper
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element - Element to apply the attributes to
           * @argument {Object} styles
           * Object with a list of properties and values which will be applied to the element
           */
          function setAttributes(element, attributes) {
            Object.keys(attributes).forEach(function(prop) {
              var value = attributes[prop];
              if (value !== false) {
                element.setAttribute(prop, attributes[prop]);
              } else {
                element.removeAttribute(prop);
              }
            });
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by `update` method
           * @argument {Object} data.styles - List of style properties - values to apply to popper element
           * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The same data object
           */
          function applyStyle(data) {
            // any property present in `data.styles` will be applied to the popper,
            // in this way we can make the 3rd party modifiers add custom styles to it
            // Be aware, modifiers could override the properties defined in the previous
            // lines of this modifier!
            setStyles(data.instance.popper, data.styles);

            // any property present in `data.attributes` will be applied to the popper,
            // they will be set as HTML attributes of the element
            setAttributes(data.instance.popper, data.attributes);

            // if arrowElement is defined and arrowStyles has some properties
            if (data.arrowElement && Object.keys(data.arrowStyles).length) {
              setStyles(data.arrowElement, data.arrowStyles);
            }

            return data;
          }

          /**
           * Set the x-placement attribute before everything else because it could be used
           * to add margins to the popper margins needs to be calculated to get the
           * correct popper offsets.
           * @method
           * @memberof Popper.modifiers
           * @param {HTMLElement} reference - The reference element used to position the popper
           * @param {HTMLElement} popper - The HTML element used as popper.
           * @param {Object} options - Popper.js options
           */
          function applyStyleOnLoad(
            reference,
            popper,
            options,
            modifierOptions,
            state
          ) {
            // compute reference element offsets
            var referenceOffsets = getReferenceOffsets(
              state,
              popper,
              reference
            );

            // compute auto placement, store placement inside the data object,
            // modifiers will be able to edit `placement` if needed
            // and refer to originalPlacement to know the original value
            var placement = computeAutoPlacement(
              options.placement,
              referenceOffsets,
              popper,
              reference,
              options.modifiers.flip.boundariesElement,
              options.modifiers.flip.padding
            );

            popper.setAttribute("x-placement", placement);

            // Apply `position` to popper before anything else because
            // without the position applied we can't guarantee correct computations
            setStyles(popper, { position: "absolute" });

            return options;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by `update` method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function computeStyle(data, options) {
            var x = options.x,
              y = options.y;
            var popper = data.offsets.popper;

            // Remove this legacy support in Popper.js v2

            var legacyGpuAccelerationOption = find(
              data.instance.modifiers,
              function(modifier) {
                return modifier.name === "applyStyle";
              }
            ).gpuAcceleration;
            if (legacyGpuAccelerationOption !== undefined) {
              console.warn(
                "WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!"
              );
            }
            var gpuAcceleration =
              legacyGpuAccelerationOption !== undefined
                ? legacyGpuAccelerationOption
                : options.gpuAcceleration;

            var offsetParent = getOffsetParent(data.instance.popper);
            var offsetParentRect = getBoundingClientRect(offsetParent);

            // Styles
            var styles = {
              position: popper.position
            };

            // floor sides to avoid blurry text
            var offsets = {
              left: Math.floor(popper.left),
              top: Math.floor(popper.top),
              bottom: Math.floor(popper.bottom),
              right: Math.floor(popper.right)
            };

            var sideA = x === "bottom" ? "top" : "bottom";
            var sideB = y === "right" ? "left" : "right";

            // if gpuAcceleration is set to `true` and transform is supported,
            //  we use `translate3d` to apply the position to the popper we
            // automatically use the supported prefixed version if needed
            var prefixedProperty = getSupportedPropertyName("transform");

            // now, let's make a step back and look at this code closely (wtf?)
            // If the content of the popper grows once it's been positioned, it
            // may happen that the popper gets misplaced because of the new content
            // overflowing its reference element
            // To avoid this problem, we provide two options (x and y), which allow
            // the consumer to define the offset origin.
            // If we position a popper on top of a reference element, we can set
            // `x` to `top` to make the popper grow towards its top instead of
            // its bottom.
            var left = void 0,
              top = void 0;
            if (sideA === "bottom") {
              top = -offsetParentRect.height + offsets.bottom;
            } else {
              top = offsets.top;
            }
            if (sideB === "right") {
              left = -offsetParentRect.width + offsets.right;
            } else {
              left = offsets.left;
            }
            if (gpuAcceleration && prefixedProperty) {
              styles[prefixedProperty] =
                "translate3d(" + left + "px, " + top + "px, 0)";
              styles[sideA] = 0;
              styles[sideB] = 0;
              styles.willChange = "transform";
            } else {
              // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
              var invertTop = sideA === "bottom" ? -1 : 1;
              var invertLeft = sideB === "right" ? -1 : 1;
              styles[sideA] = top * invertTop;
              styles[sideB] = left * invertLeft;
              styles.willChange = sideA + ", " + sideB;
            }

            // Attributes
            var attributes = {
              "x-placement": data.placement
            };

            // Update `data` attributes, styles and arrowStyles
            data.attributes = _extends({}, attributes, data.attributes);
            data.styles = _extends({}, styles, data.styles);
            data.arrowStyles = _extends(
              {},
              data.offsets.arrow,
              data.arrowStyles
            );

            return data;
          }

          /**
           * Helper used to know if the given modifier depends from another one.<br />
           * It checks if the needed modifier is listed and enabled.
           * @method
           * @memberof Popper.Utils
           * @param {Array} modifiers - list of modifiers
           * @param {String} requestingName - name of requesting modifier
           * @param {String} requestedName - name of requested modifier
           * @returns {Boolean}
           */
          function isModifierRequired(
            modifiers,
            requestingName,
            requestedName
          ) {
            var requesting = find(modifiers, function(_ref) {
              var name = _ref.name;
              return name === requestingName;
            });

            var isRequired =
              !!requesting &&
              modifiers.some(function(modifier) {
                return (
                  modifier.name === requestedName &&
                  modifier.enabled &&
                  modifier.order < requesting.order
                );
              });

            if (!isRequired) {
              var _requesting = "`" + requestingName + "`";
              var requested = "`" + requestedName + "`";
              console.warn(
                requested +
                  " modifier is required by " +
                  _requesting +
                  " modifier in order to work, be sure to include it before " +
                  _requesting +
                  "!"
              );
            }
            return isRequired;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function arrow(data, options) {
            var _data$offsets$arrow;

            // arrow depends on keepTogether in order to work
            if (
              !isModifierRequired(
                data.instance.modifiers,
                "arrow",
                "keepTogether"
              )
            ) {
              return data;
            }

            var arrowElement = options.element;

            // if arrowElement is a string, suppose it's a CSS selector
            if (typeof arrowElement === "string") {
              arrowElement = data.instance.popper.querySelector(arrowElement);

              // if arrowElement is not found, don't run the modifier
              if (!arrowElement) {
                return data;
              }
            } else {
              // if the arrowElement isn't a query selector we must check that the
              // provided DOM node is child of its popper node
              if (!data.instance.popper.contains(arrowElement)) {
                console.warn(
                  "WARNING: `arrow.element` must be child of its popper element!"
                );
                return data;
              }
            }

            var placement = data.placement.split("-")[0];
            var _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;

            var isVertical = ["left", "right"].indexOf(placement) !== -1;

            var len = isVertical ? "height" : "width";
            var sideCapitalized = isVertical ? "Top" : "Left";
            var side = sideCapitalized.toLowerCase();
            var altSide = isVertical ? "left" : "top";
            var opSide = isVertical ? "bottom" : "right";
            var arrowElementSize = getOuterSizes(arrowElement)[len];

            //
            // extends keepTogether behavior making sure the popper and its
            // reference have enough pixels in conjuction
            //

            // top/left side
            if (reference[opSide] - arrowElementSize < popper[side]) {
              data.offsets.popper[side] -=
                popper[side] - (reference[opSide] - arrowElementSize);
            }
            // bottom/right side
            if (reference[side] + arrowElementSize > popper[opSide]) {
              data.offsets.popper[side] +=
                reference[side] + arrowElementSize - popper[opSide];
            }
            data.offsets.popper = getClientRect(data.offsets.popper);

            // compute center of the popper
            var center =
              reference[side] + reference[len] / 2 - arrowElementSize / 2;

            // Compute the sideValue using the updated popper offsets
            // take popper margin in account because we don't have this info available
            var css = getStyleComputedProperty(data.instance.popper);
            var popperMarginSide = parseFloat(
              css["margin" + sideCapitalized],
              10
            );
            var popperBorderSide = parseFloat(
              css["border" + sideCapitalized + "Width"],
              10
            );
            var sideValue =
              center -
              data.offsets.popper[side] -
              popperMarginSide -
              popperBorderSide;

            // prevent arrowElement from being placed not contiguously to its popper
            sideValue = Math.max(
              Math.min(popper[len] - arrowElementSize, sideValue),
              0
            );

            data.arrowElement = arrowElement;
            data.offsets.arrow = ((_data$offsets$arrow = {}),
            defineProperty(_data$offsets$arrow, side, Math.round(sideValue)),
            defineProperty(_data$offsets$arrow, altSide, ""),
            _data$offsets$arrow);

            return data;
          }

          /**
           * Get the opposite placement variation of the given one
           * @method
           * @memberof Popper.Utils
           * @argument {String} placement variation
           * @returns {String} flipped placement variation
           */
          function getOppositeVariation(variation) {
            if (variation === "end") {
              return "start";
            } else if (variation === "start") {
              return "end";
            }
            return variation;
          }

          /**
           * List of accepted placements to use as values of the `placement` option.<br />
           * Valid placements are:
           * - `auto`
           * - `top`
           * - `right`
           * - `bottom`
           * - `left`
           *
           * Each placement can have a variation from this list:
           * - `-start`
           * - `-end`
           *
           * Variations are interpreted easily if you think of them as the left to right
           * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
           * is right.<br />
           * Vertically (`left` and `right`), `start` is top and `end` is bottom.
           *
           * Some valid examples are:
           * - `top-end` (on top of reference, right aligned)
           * - `right-start` (on right of reference, top aligned)
           * - `bottom` (on bottom, centered)
           * - `auto-right` (on the side with more space available, alignment depends by placement)
           *
           * @static
           * @type {Array}
           * @enum {String}
           * @readonly
           * @method placements
           * @memberof Popper
           */
          var placements = [
            "auto-start",
            "auto",
            "auto-end",
            "top-start",
            "top",
            "top-end",
            "right-start",
            "right",
            "right-end",
            "bottom-end",
            "bottom",
            "bottom-start",
            "left-end",
            "left",
            "left-start"
          ];

          // Get rid of `auto` `auto-start` and `auto-end`
          var validPlacements = placements.slice(3);

          /**
           * Given an initial placement, returns all the subsequent placements
           * clockwise (or counter-clockwise).
           *
           * @method
           * @memberof Popper.Utils
           * @argument {String} placement - A valid placement (it accepts variations)
           * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
           * @returns {Array} placements including their variations
           */
          function clockwise(placement) {
            var counter =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : false;

            var index = validPlacements.indexOf(placement);
            var arr = validPlacements
              .slice(index + 1)
              .concat(validPlacements.slice(0, index));
            return counter ? arr.reverse() : arr;
          }

          var BEHAVIORS = {
            FLIP: "flip",
            CLOCKWISE: "clockwise",
            COUNTERCLOCKWISE: "counterclockwise"
          };

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function flip(data, options) {
            // if `inner` modifier is enabled, we can't use the `flip` modifier
            if (isModifierEnabled(data.instance.modifiers, "inner")) {
              return data;
            }

            if (data.flipped && data.placement === data.originalPlacement) {
              // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
              return data;
            }

            var boundaries = getBoundaries(
              data.instance.popper,
              data.instance.reference,
              options.padding,
              options.boundariesElement
            );

            var placement = data.placement.split("-")[0];
            var placementOpposite = getOppositePlacement(placement);
            var variation = data.placement.split("-")[1] || "";

            var flipOrder = [];

            switch (options.behavior) {
              case BEHAVIORS.FLIP:
                flipOrder = [placement, placementOpposite];
                break;
              case BEHAVIORS.CLOCKWISE:
                flipOrder = clockwise(placement);
                break;
              case BEHAVIORS.COUNTERCLOCKWISE:
                flipOrder = clockwise(placement, true);
                break;
              default:
                flipOrder = options.behavior;
            }

            flipOrder.forEach(function(step, index) {
              if (placement !== step || flipOrder.length === index + 1) {
                return data;
              }

              placement = data.placement.split("-")[0];
              placementOpposite = getOppositePlacement(placement);

              var popperOffsets = data.offsets.popper;
              var refOffsets = data.offsets.reference;

              // using floor because the reference offsets may contain decimals we are not going to consider here
              var floor = Math.floor;
              var overlapsRef =
                (placement === "left" &&
                  floor(popperOffsets.right) > floor(refOffsets.left)) ||
                (placement === "right" &&
                  floor(popperOffsets.left) < floor(refOffsets.right)) ||
                (placement === "top" &&
                  floor(popperOffsets.bottom) > floor(refOffsets.top)) ||
                (placement === "bottom" &&
                  floor(popperOffsets.top) < floor(refOffsets.bottom));

              var overflowsLeft =
                floor(popperOffsets.left) < floor(boundaries.left);
              var overflowsRight =
                floor(popperOffsets.right) > floor(boundaries.right);
              var overflowsTop =
                floor(popperOffsets.top) < floor(boundaries.top);
              var overflowsBottom =
                floor(popperOffsets.bottom) > floor(boundaries.bottom);

              var overflowsBoundaries =
                (placement === "left" && overflowsLeft) ||
                (placement === "right" && overflowsRight) ||
                (placement === "top" && overflowsTop) ||
                (placement === "bottom" && overflowsBottom);

              // flip the variation if required
              var isVertical = ["top", "bottom"].indexOf(placement) !== -1;
              var flippedVariation =
                !!options.flipVariations &&
                ((isVertical && variation === "start" && overflowsLeft) ||
                  (isVertical && variation === "end" && overflowsRight) ||
                  (!isVertical && variation === "start" && overflowsTop) ||
                  (!isVertical && variation === "end" && overflowsBottom));

              if (overlapsRef || overflowsBoundaries || flippedVariation) {
                // this boolean to detect any flip loop
                data.flipped = true;

                if (overlapsRef || overflowsBoundaries) {
                  placement = flipOrder[index + 1];
                }

                if (flippedVariation) {
                  variation = getOppositeVariation(variation);
                }

                data.placement = placement + (variation ? "-" + variation : "");

                // this object contains `position`, we want to preserve it along with
                // any additional property we may add in the future
                data.offsets.popper = _extends(
                  {},
                  data.offsets.popper,
                  getPopperOffsets(
                    data.instance.popper,
                    data.offsets.reference,
                    data.placement
                  )
                );

                data = runModifiers(data.instance.modifiers, data, "flip");
              }
            });
            return data;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function keepTogether(data) {
            var _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;

            var placement = data.placement.split("-")[0];
            var floor = Math.floor;
            var isVertical = ["top", "bottom"].indexOf(placement) !== -1;
            var side = isVertical ? "right" : "bottom";
            var opSide = isVertical ? "left" : "top";
            var measurement = isVertical ? "width" : "height";

            if (popper[side] < floor(reference[opSide])) {
              data.offsets.popper[opSide] =
                floor(reference[opSide]) - popper[measurement];
            }
            if (popper[opSide] > floor(reference[side])) {
              data.offsets.popper[opSide] = floor(reference[side]);
            }

            return data;
          }

          /**
           * Converts a string containing value + unit into a px value number
           * @function
           * @memberof {modifiers~offset}
           * @private
           * @argument {String} str - Value + unit string
           * @argument {String} measurement - `height` or `width`
           * @argument {Object} popperOffsets
           * @argument {Object} referenceOffsets
           * @returns {Number|String}
           * Value in pixels, or original string if no values were extracted
           */
          function toValue(str, measurement, popperOffsets, referenceOffsets) {
            // separate value from unit
            var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
            var value = +split[1];
            var unit = split[2];

            // If it's not a number it's an operator, I guess
            if (!value) {
              return str;
            }

            if (unit.indexOf("%") === 0) {
              var element = void 0;
              switch (unit) {
                case "%p":
                  element = popperOffsets;
                  break;
                case "%":
                case "%r":
                default:
                  element = referenceOffsets;
              }

              var rect = getClientRect(element);
              return rect[measurement] / 100 * value;
            } else if (unit === "vh" || unit === "vw") {
              // if is a vh or vw, we calculate the size based on the viewport
              var size = void 0;
              if (unit === "vh") {
                size = Math.max(
                  document.documentElement.clientHeight,
                  window.innerHeight || 0
                );
              } else {
                size = Math.max(
                  document.documentElement.clientWidth,
                  window.innerWidth || 0
                );
              }
              return size / 100 * value;
            } else {
              // if is an explicit pixel unit, we get rid of the unit and keep the value
              // if is an implicit unit, it's px, and we return just the value
              return value;
            }
          }

          /**
           * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
           * @function
           * @memberof {modifiers~offset}
           * @private
           * @argument {String} offset
           * @argument {Object} popperOffsets
           * @argument {Object} referenceOffsets
           * @argument {String} basePlacement
           * @returns {Array} a two cells array with x and y offsets in numbers
           */
          function parseOffset(
            offset,
            popperOffsets,
            referenceOffsets,
            basePlacement
          ) {
            var offsets = [0, 0];

            // Use height if placement is left or right and index is 0 otherwise use width
            // in this way the first offset will use an axis and the second one
            // will use the other one
            var useHeight = ["right", "left"].indexOf(basePlacement) !== -1;

            // Split the offset string to obtain a list of values and operands
            // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
            var fragments = offset.split(/(\+|\-)/).map(function(frag) {
              return frag.trim();
            });

            // Detect if the offset string contains a pair of values or a single one
            // they could be separated by comma or space
            var divider = fragments.indexOf(
              find(fragments, function(frag) {
                return frag.search(/,|\s/) !== -1;
              })
            );

            if (fragments[divider] && fragments[divider].indexOf(",") === -1) {
              console.warn(
                "Offsets separated by white space(s) are deprecated, use a comma (,) instead."
              );
            }

            // If divider is found, we divide the list of values and operands to divide
            // them by ofset X and Y.
            var splitRegex = /\s*,\s*|\s+/;
            var ops =
              divider !== -1
                ? [
                    fragments
                      .slice(0, divider)
                      .concat([fragments[divider].split(splitRegex)[0]]),
                    [fragments[divider].split(splitRegex)[1]].concat(
                      fragments.slice(divider + 1)
                    )
                  ]
                : [fragments];

            // Convert the values with units to absolute pixels to allow our computations
            ops = ops.map(function(op, index) {
              // Most of the units rely on the orientation of the popper
              var measurement = (index === 1 ? !useHeight : useHeight)
                ? "height"
                : "width";
              var mergeWithPrevious = false;
              return (op
                  // This aggregates any `+` or `-` sign that aren't considered operators
                  // e.g.: 10 + +5 => [10, +, +5]
                  .reduce(function(a, b) {
                    if (
                      a[a.length - 1] === "" &&
                      ["+", "-"].indexOf(b) !== -1
                    ) {
                      a[a.length - 1] = b;
                      mergeWithPrevious = true;
                      return a;
                    } else if (mergeWithPrevious) {
                      a[a.length - 1] += b;
                      mergeWithPrevious = false;
                      return a;
                    } else {
                      return a.concat(b);
                    }
                  }, [])
                  // Here we convert the string values into number values (in px)
                  .map(function(str) {
                    return toValue(
                      str,
                      measurement,
                      popperOffsets,
                      referenceOffsets
                    );
                  }) );
            });

            // Loop trough the offsets arrays and execute the operations
            ops.forEach(function(op, index) {
              op.forEach(function(frag, index2) {
                if (isNumeric(frag)) {
                  offsets[index] += frag * (op[index2 - 1] === "-" ? -1 : 1);
                }
              });
            });
            return offsets;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @argument {Number|String} options.offset=0
           * The offset value as described in the modifier description
           * @returns {Object} The data object, properly modified
           */
          function offset(data, _ref) {
            var offset = _ref.offset;
            var placement = data.placement,
              _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;

            var basePlacement = placement.split("-")[0];

            var offsets = void 0;
            if (isNumeric(+offset)) {
              offsets = [+offset, 0];
            } else {
              offsets = parseOffset(offset, popper, reference, basePlacement);
            }

            if (basePlacement === "left") {
              popper.top += offsets[0];
              popper.left -= offsets[1];
            } else if (basePlacement === "right") {
              popper.top += offsets[0];
              popper.left += offsets[1];
            } else if (basePlacement === "top") {
              popper.left += offsets[0];
              popper.top -= offsets[1];
            } else if (basePlacement === "bottom") {
              popper.left += offsets[0];
              popper.top += offsets[1];
            }

            data.popper = popper;
            return data;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by `update` method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function preventOverflow(data, options) {
            var boundariesElement =
              options.boundariesElement ||
              getOffsetParent(data.instance.popper);

            // If offsetParent is the reference element, we really want to
            // go one step up and use the next offsetParent as reference to
            // avoid to make this modifier completely useless and look like broken
            if (data.instance.reference === boundariesElement) {
              boundariesElement = getOffsetParent(boundariesElement);
            }

            var boundaries = getBoundaries(
              data.instance.popper,
              data.instance.reference,
              options.padding,
              boundariesElement
            );
            options.boundaries = boundaries;

            var order = options.priority;
            var popper = data.offsets.popper;

            var check = {
              primary: function primary(placement) {
                var value = popper[placement];
                if (
                  popper[placement] < boundaries[placement] &&
                  !options.escapeWithReference
                ) {
                  value = Math.max(popper[placement], boundaries[placement]);
                }
                return defineProperty({}, placement, value);
              },
              secondary: function secondary(placement) {
                var mainSide = placement === "right" ? "left" : "top";
                var value = popper[mainSide];
                if (
                  popper[placement] > boundaries[placement] &&
                  !options.escapeWithReference
                ) {
                  value = Math.min(
                    popper[mainSide],
                    boundaries[placement] -
                      (placement === "right" ? popper.width : popper.height)
                  );
                }
                return defineProperty({}, mainSide, value);
              }
            };

            order.forEach(function(placement) {
              var side =
                ["left", "top"].indexOf(placement) !== -1
                  ? "primary"
                  : "secondary";
              popper = _extends({}, popper, check[side](placement));
            });

            data.offsets.popper = popper;

            return data;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by `update` method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function shift(data) {
            var placement = data.placement;
            var basePlacement = placement.split("-")[0];
            var shiftvariation = placement.split("-")[1];

            // if shift shiftvariation is specified, run the modifier
            if (shiftvariation) {
              var _data$offsets = data.offsets,
                reference = _data$offsets.reference,
                popper = _data$offsets.popper;

              var isVertical = ["bottom", "top"].indexOf(basePlacement) !== -1;
              var side = isVertical ? "left" : "top";
              var measurement = isVertical ? "width" : "height";

              var shiftOffsets = {
                start: defineProperty({}, side, reference[side]),
                end: defineProperty(
                  {},
                  side,
                  reference[side] + reference[measurement] - popper[measurement]
                )
              };

              data.offsets.popper = _extends(
                {},
                popper,
                shiftOffsets[shiftvariation]
              );
            }

            return data;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function hide(data) {
            if (
              !isModifierRequired(
                data.instance.modifiers,
                "hide",
                "preventOverflow"
              )
            ) {
              return data;
            }

            var refRect = data.offsets.reference;
            var bound = find(data.instance.modifiers, function(modifier) {
              return modifier.name === "preventOverflow";
            }).boundaries;

            if (
              refRect.bottom < bound.top ||
              refRect.left > bound.right ||
              refRect.top > bound.bottom ||
              refRect.right < bound.left
            ) {
              // Avoid unnecessary DOM access if visibility hasn't changed
              if (data.hide === true) {
                return data;
              }

              data.hide = true;
              data.attributes["x-out-of-boundaries"] = "";
            } else {
              // Avoid unnecessary DOM access if visibility hasn't changed
              if (data.hide === false) {
                return data;
              }

              data.hide = false;
              data.attributes["x-out-of-boundaries"] = false;
            }

            return data;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by `update` method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function inner(data) {
            var placement = data.placement;
            var basePlacement = placement.split("-")[0];
            var _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;

            var isHoriz = ["left", "right"].indexOf(basePlacement) !== -1;

            var subtractLength = ["top", "left"].indexOf(basePlacement) === -1;

            popper[isHoriz ? "left" : "top"] =
              reference[basePlacement] -
              (subtractLength ? popper[isHoriz ? "width" : "height"] : 0);

            data.placement = getOppositePlacement(placement);
            data.offsets.popper = getClientRect(popper);

            return data;
          }

          /**
           * Modifier function, each modifier can have a function of this type assigned
           * to its `fn` property.<br />
           * These functions will be called on each update, this means that you must
           * make sure they are performant enough to avoid performance bottlenecks.
           *
           * @function ModifierFn
           * @argument {dataObject} data - The data object generated by `update` method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {dataObject} The data object, properly modified
           */

          /**
           * Modifiers are plugins used to alter the behavior of your poppers.<br />
           * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
           * needed by the library.
           *
           * Usually you don't want to override the `order`, `fn` and `onLoad` props.
           * All the other properties are configurations that could be tweaked.
           * @namespace modifiers
           */
          var modifiers = {
            /**
             * Modifier used to shift the popper on the start or end of its reference
             * element.<br />
             * It will read the variation of the `placement` property.<br />
             * It can be one either `-end` or `-start`.
             * @memberof modifiers
             * @inner
             */
            shift: {
              /** @prop {number} order=100 - Index used to define the order of execution */
              order: 100,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: shift
            },

            /**
             * The `offset` modifier can shift your popper on both its axis.
             *
             * It accepts the following units:
             * - `px` or unitless, interpreted as pixels
             * - `%` or `%r`, percentage relative to the length of the reference element
             * - `%p`, percentage relative to the length of the popper element
             * - `vw`, CSS viewport width unit
             * - `vh`, CSS viewport height unit
             *
             * For length is intended the main axis relative to the placement of the popper.<br />
             * This means that if the placement is `top` or `bottom`, the length will be the
             * `width`. In case of `left` or `right`, it will be the height.
             *
             * You can provide a single value (as `Number` or `String`), or a pair of values
             * as `String` divided by a comma or one (or more) white spaces.<br />
             * The latter is a deprecated method because it leads to confusion and will be
             * removed in v2.<br />
             * Additionally, it accepts additions and subtractions between different units.
             * Note that multiplications and divisions aren't supported.
             *
             * Valid examples are:
             * ```
             * 10
             * '10%'
             * '10, 10'
             * '10%, 10'
             * '10 + 10%'
             * '10 - 5vh + 3%'
             * '-10px + 5vh, 5px - 6%'
             * ```
             * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
             * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
             * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)
             *
             * @memberof modifiers
             * @inner
             */
            offset: {
              /** @prop {number} order=200 - Index used to define the order of execution */
              order: 200,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: offset,
              /** @prop {Number|String} offset=0
               * The offset value as described in the modifier description
               */
              offset: 0
            },

            /**
             * Modifier used to prevent the popper from being positioned outside the boundary.
             *
             * An scenario exists where the reference itself is not within the boundaries.<br />
             * We can say it has "escaped the boundaries" — or just "escaped".<br />
             * In this case we need to decide whether the popper should either:
             *
             * - detach from the reference and remain "trapped" in the boundaries, or
             * - if it should ignore the boundary and "escape with its reference"
             *
             * When `escapeWithReference` is set to`true` and reference is completely
             * outside its boundaries, the popper will overflow (or completely leave)
             * the boundaries in order to remain attached to the edge of the reference.
             *
             * @memberof modifiers
             * @inner
             */
            preventOverflow: {
              /** @prop {number} order=300 - Index used to define the order of execution */
              order: 300,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: preventOverflow,
              /**
               * @prop {Array} [priority=['left','right','top','bottom']]
               * Popper will try to prevent overflow following these priorities by default,
               * then, it could overflow on the left and on top of the `boundariesElement`
               */
              priority: ["left", "right", "top", "bottom"],
              /**
               * @prop {number} padding=5
               * Amount of pixel used to define a minimum distance between the boundaries
               * and the popper this makes sure the popper has always a little padding
               * between the edges of its container
               */
              padding: 5,
              /**
               * @prop {String|HTMLElement} boundariesElement='scrollParent'
               * Boundaries used by the modifier, can be `scrollParent`, `window`,
               * `viewport` or any DOM element.
               */
              boundariesElement: "scrollParent"
            },

            /**
             * Modifier used to make sure the reference and its popper stay near eachothers
             * without leaving any gap between the two. Expecially useful when the arrow is
             * enabled and you want to assure it to point to its reference element.
             * It cares only about the first axis, you can still have poppers with margin
             * between the popper and its reference element.
             * @memberof modifiers
             * @inner
             */
            keepTogether: {
              /** @prop {number} order=400 - Index used to define the order of execution */
              order: 400,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: keepTogether
            },

            /**
             * This modifier is used to move the `arrowElement` of the popper to make
             * sure it is positioned between the reference element and its popper element.
             * It will read the outer size of the `arrowElement` node to detect how many
             * pixels of conjuction are needed.
             *
             * It has no effect if no `arrowElement` is provided.
             * @memberof modifiers
             * @inner
             */
            arrow: {
              /** @prop {number} order=500 - Index used to define the order of execution */
              order: 500,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: arrow,
              /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
              element: "[x-arrow]"
            },

            /**
             * Modifier used to flip the popper's placement when it starts to overlap its
             * reference element.
             *
             * Requires the `preventOverflow` modifier before it in order to work.
             *
             * **NOTE:** this modifier will interrupt the current update cycle and will
             * restart it if it detects the need to flip the placement.
             * @memberof modifiers
             * @inner
             */
            flip: {
              /** @prop {number} order=600 - Index used to define the order of execution */
              order: 600,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: flip,
              /**
               * @prop {String|Array} behavior='flip'
               * The behavior used to change the popper's placement. It can be one of
               * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
               * placements (with optional variations).
               */
              behavior: "flip",
              /**
               * @prop {number} padding=5
               * The popper will flip if it hits the edges of the `boundariesElement`
               */
              padding: 5,
              /**
               * @prop {String|HTMLElement} boundariesElement='viewport'
               * The element which will define the boundaries of the popper position,
               * the popper will never be placed outside of the defined boundaries
               * (except if keepTogether is enabled)
               */
              boundariesElement: "viewport"
            },

            /**
             * Modifier used to make the popper flow toward the inner of the reference element.
             * By default, when this modifier is disabled, the popper will be placed outside
             * the reference element.
             * @memberof modifiers
             * @inner
             */
            inner: {
              /** @prop {number} order=700 - Index used to define the order of execution */
              order: 700,
              /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
              enabled: false,
              /** @prop {ModifierFn} */
              fn: inner
            },

            /**
             * Modifier used to hide the popper when its reference element is outside of the
             * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
             * be used to hide with a CSS selector the popper when its reference is
             * out of boundaries.
             *
             * Requires the `preventOverflow` modifier before it in order to work.
             * @memberof modifiers
             * @inner
             */
            hide: {
              /** @prop {number} order=800 - Index used to define the order of execution */
              order: 800,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: hide
            },

            /**
             * Computes the style that will be applied to the popper element to gets
             * properly positioned.
             *
             * Note that this modifier will not touch the DOM, it just prepares the styles
             * so that `applyStyle` modifier can apply it. This separation is useful
             * in case you need to replace `applyStyle` with a custom implementation.
             *
             * This modifier has `850` as `order` value to maintain backward compatibility
             * with previous versions of Popper.js. Expect the modifiers ordering method
             * to change in future major versions of the library.
             *
             * @memberof modifiers
             * @inner
             */
            computeStyle: {
              /** @prop {number} order=850 - Index used to define the order of execution */
              order: 850,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: computeStyle,
              /**
               * @prop {Boolean} gpuAcceleration=true
               * If true, it uses the CSS 3d transformation to position the popper.
               * Otherwise, it will use the `top` and `left` properties.
               */
              gpuAcceleration: true,
              /**
               * @prop {string} [x='bottom']
               * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
               * Change this if your popper should grow in a direction different from `bottom`
               */
              x: "bottom",
              /**
               * @prop {string} [x='left']
               * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
               * Change this if your popper should grow in a direction different from `right`
               */
              y: "right"
            },

            /**
             * Applies the computed styles to the popper element.
             *
             * All the DOM manipulations are limited to this modifier. This is useful in case
             * you want to integrate Popper.js inside a framework or view library and you
             * want to delegate all the DOM manipulations to it.
             *
             * Note that if you disable this modifier, you must make sure the popper element
             * has its position set to `absolute` before Popper.js can do its work!
             *
             * Just disable this modifier and define you own to achieve the desired effect.
             *
             * @memberof modifiers
             * @inner
             */
            applyStyle: {
              /** @prop {number} order=900 - Index used to define the order of execution */
              order: 900,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: applyStyle,
              /** @prop {Function} */
              onLoad: applyStyleOnLoad,
              /**
               * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
               * @prop {Boolean} gpuAcceleration=true
               * If true, it uses the CSS 3d transformation to position the popper.
               * Otherwise, it will use the `top` and `left` properties.
               */
              gpuAcceleration: undefined
            }
          };

          /**
           * The `dataObject` is an object containing all the informations used by Popper.js
           * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
           * @name dataObject
           * @property {Object} data.instance The Popper.js instance
           * @property {String} data.placement Placement applied to popper
           * @property {String} data.originalPlacement Placement originally defined on init
           * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
           * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.
           * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
           * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)
           * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)
           * @property {Object} data.boundaries Offsets of the popper boundaries
           * @property {Object} data.offsets The measurements of popper, reference and arrow elements.
           * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
           * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
           * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
           */

          /**
           * Default options provided to Popper.js constructor.<br />
           * These can be overriden using the `options` argument of Popper.js.<br />
           * To override an option, simply pass as 3rd argument an object with the same
           * structure of this object, example:
           * ```
           * new Popper(ref, pop, {
           *   modifiers: {
           *     preventOverflow: { enabled: false }
           *   }
           * })
           * ```
           * @type {Object}
           * @static
           * @memberof Popper
           */
          var Defaults = {
            /**
             * Popper's placement
             * @prop {Popper.placements} placement='bottom'
             */
            placement: "bottom",

            /**
             * Whether events (resize, scroll) are initially enabled
             * @prop {Boolean} eventsEnabled=true
             */
            eventsEnabled: true,

            /**
             * Set to true if you want to automatically remove the popper when
             * you call the `destroy` method.
             * @prop {Boolean} removeOnDestroy=false
             */
            removeOnDestroy: false,

            /**
             * Callback called when the popper is created.<br />
             * By default, is set to no-op.<br />
             * Access Popper.js instance with `data.instance`.
             * @prop {onCreate}
             */
            onCreate: function onCreate() {},

            /**
             * Callback called when the popper is updated, this callback is not called
             * on the initialization/creation of the popper, but only on subsequent
             * updates.<br />
             * By default, is set to no-op.<br />
             * Access Popper.js instance with `data.instance`.
             * @prop {onUpdate}
             */
            onUpdate: function onUpdate() {},

            /**
             * List of modifiers used to modify the offsets before they are applied to the popper.
             * They provide most of the functionalities of Popper.js
             * @prop {modifiers}
             */
            modifiers: modifiers
          };

          /**
           * @callback onCreate
           * @param {dataObject} data
           */

          /**
           * @callback onUpdate
           * @param {dataObject} data
           */

          // Utils
          // Methods
          var Popper = (function() {
            /**
             * Create a new Popper.js instance
             * @class Popper
             * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper
             * @param {HTMLElement} popper - The HTML element used as popper.
             * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
             * @return {Object} instance - The generated Popper.js instance
             */
            function Popper(reference, popper) {
              var _this = this;

              var options =
                arguments.length > 2 && arguments[2] !== undefined
                  ? arguments[2]
                  : {};
              classCallCheck(this, Popper);

              this.scheduleUpdate = function() {
                return requestAnimationFrame(_this.update);
              };

              // make update() debounced, so that it only runs at most once-per-tick
              this.update = debounce(this.update.bind(this));

              // with {} we create a new object with the options inside it
              this.options = _extends({}, Popper.Defaults, options);

              // init state
              this.state = {
                isDestroyed: false,
                isCreated: false,
                scrollParents: []
              };

              // get reference and popper elements (allow jQuery wrappers)
              this.reference =
                reference && reference.jquery ? reference[0] : reference;
              this.popper = popper && popper.jquery ? popper[0] : popper;

              // Deep merge modifiers options
              this.options.modifiers = {};
              Object.keys(
                _extends({}, Popper.Defaults.modifiers, options.modifiers)
              ).forEach(function(name) {
                _this.options.modifiers[name] = _extends(
                  {},
                  Popper.Defaults.modifiers[name] || {},
                  options.modifiers ? options.modifiers[name] : {}
                );
              });

              // Refactoring modifiers' list (Object => Array)
              this.modifiers = Object.keys(this.options.modifiers)
                .map(function(name) {
                  return _extends(
                    {
                      name: name
                    },
                    _this.options.modifiers[name]
                  );
                })
                // sort the modifiers by order
                .sort(function(a, b) {
                  return a.order - b.order;
                });

              // modifiers have the ability to execute arbitrary code when Popper.js get inited
              // such code is executed in the same order of its modifier
              // they could add new properties to their options configuration
              // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
              this.modifiers.forEach(function(modifierOptions) {
                if (
                  modifierOptions.enabled &&
                  isFunction(modifierOptions.onLoad)
                ) {
                  modifierOptions.onLoad(
                    _this.reference,
                    _this.popper,
                    _this.options,
                    modifierOptions,
                    _this.state
                  );
                }
              });

              // fire the first update to position the popper in the right place
              this.update();

              var eventsEnabled = this.options.eventsEnabled;
              if (eventsEnabled) {
                // setup event listeners, they will take care of update the position in specific situations
                this.enableEventListeners();
              }

              this.state.eventsEnabled = eventsEnabled;
            }

            // We can't use class properties because they don't get listed in the
            // class prototype and break stuff like Sinon stubs

            createClass(Popper, [
              {
                key: "update",
                value: function update$$1() {
                  return update.call(this);
                }
              },
              {
                key: "destroy",
                value: function destroy$$1() {
                  return destroy.call(this);
                }
              },
              {
                key: "enableEventListeners",
                value: function enableEventListeners$$1() {
                  return enableEventListeners.call(this);
                }
              },
              {
                key: "disableEventListeners",
                value: function disableEventListeners$$1() {
                  return disableEventListeners.call(this);
                }

                /**
                 * Schedule an update, it will run on the next UI update available
                 * @method scheduleUpdate
                 * @memberof Popper
                 */

                /**
                 * Collection of utilities useful when writing custom modifiers.
                 * Starting from version 1.7, this method is available only if you
                 * include `popper-utils.js` before `popper.js`.
                 *
                 * **DEPRECATION**: This way to access PopperUtils is deprecated
                 * and will be removed in v2! Use the PopperUtils module directly instead.
                 * Due to the high instability of the methods contained in Utils, we can't
                 * guarantee them to follow semver. Use them at your own risk!
                 * @static
                 * @private
                 * @type {Object}
                 * @deprecated since version 1.8
                 * @member Utils
                 * @memberof Popper
                 */
              }
            ]);
            return Popper;
          })();

          /**
           * The `referenceObject` is an object that provides an interface compatible with Popper.js
           * and lets you use it as replacement of a real DOM node.<br />
           * You can use this method to position a popper relatively to a set of coordinates
           * in case you don't have a DOM node to use as reference.
           *
           * ```
           * new Popper(referenceObject, popperNode);
           * ```
           *
           * NB: This feature isn't supported in Internet Explorer 10
           * @name referenceObject
           * @property {Function} data.getBoundingClientRect
           * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
           * @property {number} data.clientWidth
           * An ES6 getter that will return the width of the virtual reference element.
           * @property {number} data.clientHeight
           * An ES6 getter that will return the height of the virtual reference element.
           */

          Popper.Utils = (typeof window !== "undefined"
            ? window
            : global
          ).PopperUtils;
          Popper.placements = placements;
          Popper.Defaults = Defaults;

          return Popper;
        });
        //# sourceMappingURL=popper.js.map

        /* WEBPACK VAR INJECTION */
      }.call(
        exports,
        (function() {
          return this;
        })()
      ));

      /***/
    },
    /* 354 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _extends =
        Object.assign ||
        function(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      var Arrow = function Arrow(props, context) {
        var _props$component = props.component,
          component =
            _props$component === undefined ? "span" : _props$component,
          innerRef = props.innerRef,
          children = props.children,
          restProps = _objectWithoutProperties(props, [
            "component",
            "innerRef",
            "children"
          ]);

        var popper = context.popper;

        var arrowRef = function arrowRef(node) {
          popper.setArrowNode(node);
          if (typeof innerRef === "function") {
            innerRef(node);
          }
        };
        var arrowStyle = popper.getArrowStyle();

        if (typeof children === "function") {
          var arrowProps = {
            ref: arrowRef,
            style: arrowStyle
          };
          return children({ arrowProps: arrowProps, restProps: restProps });
        }

        var componentProps = _extends({}, restProps, {
          style: _extends({}, arrowStyle, restProps.style)
        });

        if (typeof component === "string") {
          componentProps.ref = arrowRef;
        } else {
          componentProps.innerRef = arrowRef;
        }

        return (0, _react.createElement)(component, componentProps, children);
      };

      Arrow.contextTypes = {
        popper: _propTypes2.default.object.isRequired
      };

      Arrow.propTypes = {
        component: _propTypes2.default.oneOfType([
          _propTypes2.default.node,
          _propTypes2.default.func
        ]),
        innerRef: _propTypes2.default.func,
        children: _propTypes2.default.oneOfType([
          _propTypes2.default.node,
          _propTypes2.default.func
        ])
      };

      exports.default = Arrow;

      /***/
    },
    /* 355 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CodeExampleComponent = (function(_React$Component) {
        _inherits(CodeExampleComponent, _React$Component);

        function CodeExampleComponent() {
          _classCallCheck(this, CodeExampleComponent);

          return _possibleConstructorReturn(
            this,
            _React$Component.apply(this, arguments)
          );
        }

        CodeExampleComponent.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            {
              key: this.props.id,
              id: "example-" + this.props.id,
              className: "example"
            },
            _react2.default.createElement(
              "h2",
              { className: "example__heading" },
              this.props.title
            ),
            this.props.children
          );
        };

        return CodeExampleComponent;
      })(_react2.default.Component);

      CodeExampleComponent.propTypes = {
        children: _propTypes2.default.element,
        id: _propTypes2.default.number,
        title: _propTypes2.default.string
      };
      exports.default = CodeExampleComponent;

      /***/
    },
    /* 356 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CustomDateFormat = (function(_React$Component) {
        _inherits(CustomDateFormat, _React$Component);

        function CustomDateFormat(props) {
          _classCallCheck(this, CustomDateFormat);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        CustomDateFormat.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "<DatePicker",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "strong",
                  null,
                  'dateFormat="YYYY/MM/DD"'
                ),
                _react2.default.createElement("br", null),
                "selected={this.state.startDate}",
                _react2.default.createElement("br", null),
                "onChange={this.handleChange} />"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                dateFormat: "YYYY/MM/DD",
                selected: this.state.startDate,
                onChange: this.handleChange
              })
            )
          );
        };

        return CustomDateFormat;
      })(_react2.default.Component);

      exports.default = CustomDateFormat;

      /***/
    },
    /* 357 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CustomClassName = (function(_React$Component) {
        _inherits(CustomClassName, _React$Component);

        function CustomClassName(props) {
          _classCallCheck(this, CustomClassName);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        CustomClassName.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                '\n<DatePicker\n  selected={this.state.startDate}\n  onChange={this.handleChange}\n  className="red-border"\n/>\n'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                className: "red-border"
              })
            )
          );
        };

        return CustomClassName;
      })(_react2.default.Component);

      exports.default = CustomClassName;

      /***/
    },
    /* 358 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CustomCalendarClassName = (function(_React$Component) {
        _inherits(CustomCalendarClassName, _React$Component);

        function CustomCalendarClassName(props) {
          _classCallCheck(this, CustomCalendarClassName);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        CustomCalendarClassName.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                '\n<DatePicker\n  selected={this.state.startDate}\n  onChange={this.handleChange}\n  calendarClassName="rasta-stripes"\n/>\n'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                calendarClassName: "rasta-stripes"
              })
            )
          );
        };

        return CustomCalendarClassName;
      })(_react2.default.Component);

      exports.default = CustomCalendarClassName;

      /***/
    },
    /* 359 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CustomDayClassNames = (function(_React$Component) {
        _inherits(CustomDayClassNames, _React$Component);

        function CustomDayClassNames(props) {
          _classCallCheck(this, CustomDayClassNames);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        CustomDayClassNames.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "\n<DatePicker\n  selected={this.state.startDate}\n  onChange={this.handleChange}\n  dayClassName={date => date.date() < Math.random() * 31 ? 'random' : undefined} />\n/>\n"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                dayClassName: function dayClassName(date) {
                  return date.date() < Math.random() * 31
                    ? "random"
                    : undefined;
                }
              })
            )
          );
        };

        return CustomDayClassNames;
      })(_react2.default.Component);

      exports.default = CustomDayClassNames;

      /***/
    },
    /* 360 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;
      exports.default = PlaceholderText;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function PlaceholderText() {
        return _react2.default.createElement(
          "div",
          { className: "row" },
          _react2.default.createElement(
            "pre",
            { className: "column example__code" },
            _react2.default.createElement(
              "code",
              { className: "jsx" },
              '<DatePicker placeholderText="Click to select a date" />'
            )
          ),
          _react2.default.createElement(
            "div",
            { className: "column" },
            _react2.default.createElement(_reactDatepicker2.default, {
              placeholderText: "Click to select a date"
            })
          )
        );
      }

      /***/
    },
    /* 361 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var SpecificDateRange = (function(_React$Component) {
        _inherits(SpecificDateRange, _React$Component);

        function SpecificDateRange() {
          var _temp, _this, _ret;

          _classCallCheck(this, SpecificDateRange);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        SpecificDateRange.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "<DatePicker",
                _react2.default.createElement("br", null),
                "  selected={this.state.startDate}",
                _react2.default.createElement("br", null),
                "  onChange={this.handleChange}",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "strong",
                  null,
                  "  minDate={moment()}"
                ),
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "strong",
                  null,
                  '  maxDate={moment().add(5, "days")}'
                ),
                _react2.default.createElement("br", null),
                '  placeholderText="Select a date between today and 5 days in the future"',
                _react2.default.createElement("br", null),
                "/>"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                minDate: (0, _moment2.default)(),
                maxDate: (0, _moment2.default)().add(5, "days"),
                placeholderText:
                  "Select a date between today and 5 days in the future"
              })
            )
          );
        };

        return SpecificDateRange;
      })(_react2.default.Component);

      exports.default = SpecificDateRange;

      /***/
    },
    /* 362 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CustomStartDate = (function(_React$Component) {
        _inherits(CustomStartDate, _React$Component);

        function CustomStartDate() {
          var _temp, _this, _ret;

          _classCallCheck(this, CustomStartDate);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        CustomStartDate.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "<DatePicker",
                _react2.default.createElement("br", null),
                "  selected={this.state.startDate}",
                _react2.default.createElement("br", null),
                "  onChange={this.handleChange}",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "strong",
                  null,
                  '  locale="en-gb"'
                ),
                _react2.default.createElement("br", null),
                '  placeholderText="Weeks start on Monday" />'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                locale: "en-gb",
                placeholderText: "Weeks start on Monday"
              })
            )
          );
        };

        return CustomStartDate;
      })(_react2.default.Component);

      exports.default = CustomStartDate;

      /***/
    },
    /* 363 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ExcludeDates = (function(_React$Component) {
        _inherits(ExcludeDates, _React$Component);

        function ExcludeDates() {
          var _temp, _this, _ret;

          _classCallCheck(this, ExcludeDates);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        ExcludeDates.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "<DatePicker",
                _react2.default.createElement("br", null),
                "  selected={this.state.startDate}",
                _react2.default.createElement("br", null),
                "  onChange={this.handleChange}",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "strong",
                  null,
                  '  excludeDates={[moment(), moment().subtract(1, "days")]}'
                ),
                _react2.default.createElement("br", null),
                '  placeholderText="Select a date other than today or yesterday" />'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                excludeDates: [
                  (0, _moment2.default)(),
                  (0, _moment2.default)().subtract(1, "days")
                ],
                placeholderText: "Select a date other than today or yesterday"
              })
            )
          );
        };

        return ExcludeDates;
      })(_react2.default.Component);

      exports.default = ExcludeDates;

      /***/
    },
    /* 364 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var highlightDates = (function(_React$Component) {
        _inherits(highlightDates, _React$Component);

        function highlightDates() {
          var _temp, _this, _ret;

          _classCallCheck(this, highlightDates);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        highlightDates.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "<DatePicker",
                _react2.default.createElement("br", null),
                "selected={this.state.startDate}",
                _react2.default.createElement("br", null),
                "onChange={this.handleChange}",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "strong",
                  null,
                  'highlightDates={[moment().subtract(7, "days"), moment().add(7, "days")]}'
                ),
                _react2.default.createElement("br", null),
                'placeholderText="This highlights a week ago and a week from today" />'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                highlightDates: [
                  (0, _moment2.default)().subtract(7, "days"),
                  (0, _moment2.default)().add(7, "days")
                ],
                placeholderText:
                  "This highlights a week ago and a week from today"
              })
            )
          );
        };

        return highlightDates;
      })(_react2.default.Component);

      exports.default = highlightDates;

      /***/
    },
    /* 365 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var highlightDatesRanges = (function(_React$Component) {
        _inherits(highlightDatesRanges, _React$Component);

        function highlightDatesRanges(props) {
          _classCallCheck(this, highlightDatesRanges);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.state = {
            startDate: null
          };

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.highlightWithRanges = [
            {
              "react-datepicker__day--highlighted-custom-1": [
                (0, _moment2.default)().subtract(4, "days"),
                (0, _moment2.default)().subtract(3, "days"),
                (0, _moment2.default)().subtract(2, "days"),
                (0, _moment2.default)().subtract(1, "days")
              ]
            },
            {
              "react-datepicker__day--highlighted-custom-2": [
                (0, _moment2.default)().add(1, "days"),
                (0, _moment2.default)().add(2, "days"),
                (0, _moment2.default)().add(3, "days"),
                (0, _moment2.default)().add(4, "days")
              ]
            }
          ];
          return _this;
        }

        highlightDatesRanges.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                null,
                "constructor (props) {",
                _react2.default.createElement("br", null),
                "  super(props)",
                _react2.default.createElement("br", null),
                "  this.highlightWithRanges = [",
                _react2.default.createElement("br", null),
                '    { "react-datepicker__day--highlighted-custom-1": [',
                _react2.default.createElement("br", null),
                '      moment().subtract(4, "days"),',
                _react2.default.createElement("br", null),
                '      moment().subtract(3, "days"),',
                _react2.default.createElement("br", null),
                '      moment().subtract(2, "days"),',
                _react2.default.createElement("br", null),
                '      moment().subtract(1, "days") ]',
                _react2.default.createElement("br", null),
                "    },",
                _react2.default.createElement("br", null),
                '    { "react-datepicker__day--highlighted-custom-2": [',
                _react2.default.createElement("br", null),
                '      moment().add(1, "days"),',
                _react2.default.createElement("br", null),
                '      moment().add(2, "days"),',
                _react2.default.createElement("br", null),
                '      moment().add(3, "days"),',
                _react2.default.createElement("br", null),
                '      moment().add(4, "days") ]',
                _react2.default.createElement("br", null),
                "    }",
                _react2.default.createElement("br", null),
                "  ]",
                _react2.default.createElement("br", null),
                "}",
                _react2.default.createElement("br", null)
              ),
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "<DatePicker",
                _react2.default.createElement("br", null),
                "selected={this.state.startDate}",
                _react2.default.createElement("br", null),
                "onChange={this.handleChange}",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "strong",
                  null,
                  "highlightDates={this.highlightWithRanges}"
                ),
                _react2.default.createElement("br", null),
                'placeholderText="This highlight two ranges with custom classes" />'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                highlightDates: this.highlightWithRanges,
                placeholderText: "This highlight two ranges with custom classes"
              })
            )
          );
        };

        return highlightDatesRanges;
      })(_react2.default.Component);

      exports.default = highlightDatesRanges;

      /***/
    },
    /* 366 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var includeDates = (function(_React$Component) {
        _inherits(includeDates, _React$Component);

        function includeDates() {
          var _temp, _this, _ret;

          _classCallCheck(this, includeDates);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        includeDates.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "<DatePicker",
                _react2.default.createElement("br", null),
                "selected={this.state.startDate}",
                _react2.default.createElement("br", null),
                "onChange={this.handleChange}",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "strong",
                  null,
                  'includeDates={[moment(), moment().add(1, "days")]}'
                ),
                _react2.default.createElement("br", null),
                'placeholderText="This only includes today and tomorrow" />'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                includeDates: [
                  (0, _moment2.default)(),
                  (0, _moment2.default)().add(1, "days")
                ],
                placeholderText: "This only includes today and tomorrow"
              })
            )
          );
        };

        return includeDates;
      })(_react2.default.Component);

      exports.default = includeDates;

      /***/
    },
    /* 367 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var FilterDates = (function(_React$Component) {
        _inherits(FilterDates, _React$Component);

        function FilterDates() {
          var _temp, _this, _ret;

          _classCallCheck(this, FilterDates);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              date: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                date: date
              });
            }),
            (_this.isWeekday = function(date) {
              var day = date.day();
              return day !== 0 && day !== 6;
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        FilterDates.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "<DatePicker",
                _react2.default.createElement("br", null),
                "selected={this.state.date}",
                _react2.default.createElement("br", null),
                "onChange={this.handleChange}",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "strong",
                  null,
                  "filterDate={this.isWeekday}"
                ),
                _react2.default.createElement("br", null),
                'placeholderText="Select a weekday" />'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.date,
                onChange: this.handleChange,
                filterDate: this.isWeekday,
                placeholderText: "Select a weekday"
              })
            )
          );
        };

        return FilterDates;
      })(_react2.default.Component);

      exports.default = FilterDates;

      /***/
    },
    /* 368 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Disabled = (function(_React$Component) {
        _inherits(Disabled, _React$Component);

        function Disabled(props) {
          _classCallCheck(this, Disabled);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: null
          };
          return _this;
        }

        Disabled.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "<DatePicker",
                _react2.default.createElement("br", null),
                "  selected={this.state.startDate}",
                _react2.default.createElement("br", null),
                "  onChange={this.handleChange}",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "strong",
                  null,
                  "  disabled={true}"
                ),
                _react2.default.createElement("br", null),
                '  placeholderText="This is disabled"',
                " />"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                disabled: true,
                placeholderText: "This is disabled"
              })
            )
          );
        };

        return Disabled;
      })(_react2.default.Component);

      exports.default = Disabled;

      /***/
    },
    /* 369 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var DisabledKeyboardNavigation = (function(_React$Component) {
        _inherits(DisabledKeyboardNavigation, _React$Component);

        function DisabledKeyboardNavigation(props) {
          _classCallCheck(this, DisabledKeyboardNavigation);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        DisabledKeyboardNavigation.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "<DatePicker",
                _react2.default.createElement("br", null),
                "selected={this.state.startDate}",
                _react2.default.createElement("br", null),
                "onChange={this.handleChange}",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "strong",
                  null,
                  "disabledKeyboardNavigation"
                ),
                _react2.default.createElement("br", null),
                'placeholderText="This has disabled keyboard navigation" />'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                disabledKeyboardNavigation: true,
                placeholderText: "This has disabled keyboard navigation"
              })
            )
          );
        };

        return DisabledKeyboardNavigation;
      })(_react2.default.Component);

      exports.default = DisabledKeyboardNavigation;

      /***/
    },
    /* 370 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ClearInput = (function(_React$Component) {
        _inherits(ClearInput, _React$Component);

        function ClearInput(props) {
          _classCallCheck(this, ClearInput);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        ClearInput.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                '\n<DatePicker\n  selected={this.state.startDate}\n  onChange={this.handleChange }\n  isClearable={true}\n  placeholderText="I have been cleared!"\n/>\n'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                isClearable: true,
                placeholderText: "I have been cleared!"
              })
            )
          );
        };

        return ClearInput;
      })(_react2.default.Component);

      exports.default = ClearInput;

      /***/
    },
    /* 371 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Disabled = (function(_React$Component) {
        _inherits(Disabled, _React$Component);

        function Disabled() {
          var _temp, _this, _ret;

          _classCallCheck(this, Disabled);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            (_this.handleOnBlur = function(date) {
              if (date === null) {
                console.log("selected date: %s", date);
              } else {
                console.log("selected date: %s", date.format("DD/MM/YYYY"));
              }
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        Disabled.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "js" },
                '\nhandleOnBlur: function (date) {\n    if (date === null) {\n        console.log("selected date: %s", date);\n    }\n    else {\n        console.log("selected date: %s", date.format("DD/MM/YYYY"));\n    }\n};\'}\n'
              ),
              _react2.default.createElement("br", null),
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "<DatePicker",
                _react2.default.createElement("br", null),
                'key="example9"',
                _react2.default.createElement("br", null),
                "selected={this.state.startDate}",
                _react2.default.createElement("br", null),
                "onChange={this.handleChange}",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "strong",
                  null,
                  "onBlur={this.handleOnBlur}"
                ),
                _react2.default.createElement("br", null),
                'placeholderText="View blur callbacks in console" />'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                key: "example9",
                selected: this.state.startDate,
                onChange: this.handleChange,
                onBlur: this.handleOnBlur,
                placeholderText: "View blur callbacks in console"
              })
            )
          );
        };

        return Disabled;
      })(_react2.default.Component);

      exports.default = Disabled;

      /***/
    },
    /* 372 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ConfigurePopper = (function(_React$Component) {
        _inherits(ConfigurePopper, _React$Component);

        function ConfigurePopper(props) {
          _classCallCheck(this, ConfigurePopper);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        ConfigurePopper.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    popperClassName=\"some-custom-class\"\n    popperPlacement=\"top-end\"\n    popperModifiers={{\n      offset: {\n        enabled: true,\n        offset: '5px, 10px'\n      },\n      preventOverflow: {\n        enabled: true,\n        escapeWithReference: false, // force popper to stay in viewport (even when input is scrolled out of view)\n        boundariesElement: 'viewport'\n      }\n    }}\n/>\n"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                popperClassName: "some-custom-class",
                popperPlacement: "top-end",
                popperModifiers: {
                  offset: {
                    enabled: true,
                    offset: "5px, 10px"
                  },
                  preventOverflow: {
                    enabled: true,
                    escapeWithReference: false,
                    boundariesElement: "viewport"
                  }
                }
              })
            )
          );
        };

        return ConfigurePopper;
      })(_react2.default.Component);

      exports.default = ConfigurePopper;

      /***/
    },
    /* 373 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var DateRange = (function(_React$Component) {
        _inherits(DateRange, _React$Component);

        function DateRange(props) {
          _classCallCheck(this, DateRange);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(_ref) {
            var startDate = _ref.startDate,
              endDate = _ref.endDate;

            startDate = startDate || _this.state.startDate;
            endDate = endDate || _this.state.endDate;

            if (startDate.isAfter(endDate)) {
              var temp = startDate;
              startDate = endDate;
              endDate = temp;
            }

            _this.setState({ startDate: startDate, endDate: endDate });
          };

          _this.handleChangeStart = function(startDate) {
            return _this.handleChange({ startDate: startDate });
          };

          _this.handleChangeEnd = function(endDate) {
            return _this.handleChange({ endDate: endDate });
          };

          _this.state = {
            startDate: (0, _moment2.default)("2014-02-08"),
            endDate: (0, _moment2.default)("2014-02-10")
          };
          return _this;
        }

        DateRange.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "\n<DatePicker\n    selected={this.state.startDate}\n    selectsStart\n    startDate={this.state.startDate}\n    endDate={this.state.endDate}\n    onChange={this.handleChangeStart}\n/>\n\n<DatePicker\n    selected={this.state.endDate}\n    selectsEnd\n    startDate={this.state.startDate}\n    endDate={this.state.endDate}\n    onChange={this.handleChangeEnd}\n/>\n"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                selectsStart: true,
                startDate: this.state.startDate,
                endDate: this.state.endDate,
                onChange: this.handleChangeStart
              }),
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.endDate,
                selectsEnd: true,
                startDate: this.state.startDate,
                endDate: this.state.endDate,
                onChange: this.handleChangeEnd
              })
            )
          );
        };

        return DateRange;
      })(_react2.default.Component);

      exports.default = DateRange;

      /***/
    },
    /* 374 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var TabIndex = (function(_React$Component) {
        _inherits(TabIndex, _React$Component);

        function TabIndex(props) {
          _classCallCheck(this, TabIndex);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        TabIndex.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    tabIndex={1}\n/>\n"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                tabIndex: 1
              })
            )
          );
        };

        return TabIndex;
      })(_react2.default.Component);

      exports.default = TabIndex;

      /***/
    },
    /* 375 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var YearDropdown = (function(_React$Component) {
        _inherits(YearDropdown, _React$Component);

        function YearDropdown(props) {
          _classCallCheck(this, YearDropdown);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        YearDropdown.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                '\n        <DatePicker\n            selected={this.state.startDate}\n            onChange={this.handleChange}\n            showYearDropdown\n            dateFormatCalendar="MMMM"\n            scrollableYearDropdown\n            yearDropdownItemNumber={15}\n        />\n        '
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showYearDropdown: true,
                dateFormatCalendar: "MMMM",
                yearDropdownItemNumber: 15,
                scrollableYearDropdown: true
              })
            )
          );
        };

        return YearDropdown;
      })(_react2.default.Component);

      exports.default = YearDropdown;

      /***/
    },
    /* 376 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var MonthDropdown = (function(_React$Component) {
        _inherits(MonthDropdown, _React$Component);

        function MonthDropdown(props) {
          _classCallCheck(this, MonthDropdown);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        MonthDropdown.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    showMonthDropdown\n/>\n"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showMonthDropdown: true
              })
            )
          );
        };

        return MonthDropdown;
      })(_react2.default.Component);

      exports.default = MonthDropdown;

      /***/
    },
    /* 377 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var MonthYearDropdown = (function(_React$Component) {
        _inherits(MonthYearDropdown, _React$Component);

        function MonthYearDropdown(props) {
          _classCallCheck(this, MonthYearDropdown);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        MonthYearDropdown.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                '\n<DatePicker\n  selected={this.state.startDate}\n  onChange={this.handleChange}\n  dateFormatCalendar={"MMM YYYY"}\n  minDate={moment().subtract(6, "month")}\n  maxDate={moment().add(6, "month")}\n  showMonthYearDropdown\n/>\n'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                dateFormatCalendar: "MMM YYYY",
                minDate: (0, _moment2.default)().subtract(6, "month"),
                maxDate: (0, _moment2.default)().add(6, "month"),
                showMonthYearDropdown: true
              })
            )
          );
        };

        return MonthYearDropdown;
      })(_react2.default.Component);

      exports.default = MonthYearDropdown;

      /***/
    },
    /* 378 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var MonthDropdownShort = (function(_React$Component) {
        _inherits(MonthDropdownShort, _React$Component);

        function MonthDropdownShort(props) {
          _classCallCheck(this, MonthDropdownShort);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        MonthDropdownShort.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    showMonthDropdown\n    useShortMonthInDropdown\n/>\n"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showMonthDropdown: true,
                useShortMonthInDropdown: true
              })
            )
          );
        };

        return MonthDropdownShort;
      })(_react2.default.Component);

      exports.default = MonthDropdownShort;

      /***/
    },
    /* 379 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var YearDropdown = (function(_React$Component) {
        _inherits(YearDropdown, _React$Component);

        function YearDropdown(props) {
          _classCallCheck(this, YearDropdown);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        YearDropdown.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                '\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    peekNextMonth\n    showMonthDropdown\n    showYearDropdown\n    dropdownMode="select"\n/>\n'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                peekNextMonth: true,
                showMonthDropdown: true,
                showYearDropdown: true,
                dropdownMode: "select"
              })
            )
          );
        };

        return YearDropdown;
      })(_react2.default.Component);

      exports.default = YearDropdown;

      /***/
    },
    /* 380 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Today = (function(_React$Component) {
        _inherits(Today, _React$Component);

        function Today(props) {
          _classCallCheck(this, Today);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        Today.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                '\n<DatePicker\n    todayButton={"Vandaag"}\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n/>\n'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                todayButton: "Vandaag",
                selected: this.state.startDate,
                onChange: this.handleChange
              })
            )
          );
        };

        return Today;
      })(_react2.default.Component);

      exports.default = Today;

      /***/
    },
    /* 381 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var TimeZoneDate = (function(_React$Component) {
        _inherits(TimeZoneDate, _React$Component);

        function TimeZoneDate() {
          var _temp, _this, _ret;

          _classCallCheck(this, TimeZoneDate);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null,
              utcOffset: -4
            }),
            (_this.timezoneNames = [
              { name: "GMT+10", value: 10 },
              { name: "GMT+8", value: 8 },
              { name: "GMT+4", value: 4 },
              { name: "GMT+1", value: 1 },
              { name: "GMT", value: 0 },
              { name: "GMT-3", value: -3 },
              { name: "GMT-4", value: -4 },
              { name: "GMT-8", value: -8 },
              { name: "GMT-10", value: -10 }
            ]),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            (_this.handleTmzChange = function(event) {
              _this.setState({
                utcOffset: parseInt(event.target.value, 10)
              });
            }),
            (_this.getOffsetLabel = function(tmz) {
              var obj = _this.timezoneNames.find(function(_ref) {
                var value = _ref.value;
                return value === tmz;
              });
              return (obj && obj.name) || "";
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        TimeZoneDate.prototype.render = function render() {
          var selected =
            this.state.startDate &&
            this.state.startDate.clone().utcOffset(this.state.utcOffset);
          var utcText = this.getOffsetLabel(this.state.utcOffset);
          var todayTxt = "Today in " + utcText;

          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                '\n<DatePicker\n    utcOffset=-4\n    dateFormat="DD-MMM HH:mm"\n    todayButton="Today in Puerto Rico"\n    onChange={this.handleChange}\n/>\n'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                utcOffset: this.state.utcOffset * 60,
                dateFormat: "DD-MMM YYYY HH:mm",
                showTimeSelect: true,
                todayButton: todayTxt,
                selected: selected,
                onChange: this.handleChange
              }),
              _react2.default.createElement("br", null),
              _react2.default.createElement(
                "label",
                { className: "example__timezone-label" },
                "Timezone Offset:",
                _react2.default.createElement(
                  "select",
                  {
                    className: "example__timezone-selector",
                    value: this.state.utcOffset,
                    onChange: this.handleTmzChange
                  },
                  _react2.default.createElement(
                    "option",
                    { value: "10" },
                    "GMT+10:00"
                  ),
                  _react2.default.createElement(
                    "option",
                    { value: "8" },
                    "GMT+08:00"
                  ),
                  _react2.default.createElement(
                    "option",
                    { value: "4" },
                    "GMT+04:00"
                  ),
                  _react2.default.createElement(
                    "option",
                    { value: "1" },
                    "GMT+01:00"
                  ),
                  _react2.default.createElement(
                    "option",
                    { value: "0" },
                    "GMT"
                  ),
                  _react2.default.createElement(
                    "option",
                    { value: "-3" },
                    "GMT-03:00"
                  ),
                  _react2.default.createElement(
                    "option",
                    { value: "-4" },
                    "GMT-04:00"
                  ),
                  _react2.default.createElement(
                    "option",
                    { value: "-8" },
                    "GMT-08:00"
                  ),
                  _react2.default.createElement(
                    "option",
                    { value: "-10" },
                    "GMT-10:00"
                  )
                )
              )
            )
          );
        };

        return TimeZoneDate;
      })(_react2.default.Component);

      exports.default = TimeZoneDate;

      /***/
    },
    /* 382 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Inline = (function(_React$Component) {
        _inherits(Inline, _React$Component);

        function Inline(props) {
          _classCallCheck(this, Inline);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        Inline.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "\n<DatePicker\n    inline\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n/>\n"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                inline: true,
                selected: this.state.startDate,
                onChange: this.handleChange
              })
            )
          );
        };

        return Inline;
      })(_react2.default.Component);

      exports.default = Inline;

      /***/
    },
    /* 383 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var OpenToDate = (function(_React$Component) {
        _inherits(OpenToDate, _React$Component);

        function OpenToDate() {
          var _temp, _this, _ret;

          _classCallCheck(this, OpenToDate);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        OpenToDate.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                '\n<DatePicker\n    openToDate={moment("1993-09-28")}\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n/>\n'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                openToDate: (0, _moment2.default)("1993-09-28"),
                selected: this.state.startDate,
                onChange: this.handleChange
              })
            )
          );
        };

        return OpenToDate;
      })(_react2.default.Component);

      exports.default = OpenToDate;

      /***/
    },
    /* 384 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var FixedCalendar = (function(_React$Component) {
        _inherits(FixedCalendar, _React$Component);

        function FixedCalendar() {
          var _temp, _this, _ret;

          _classCallCheck(this, FixedCalendar);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        FixedCalendar.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "<DatePicker",
                _react2.default.createElement("br", null),
                "fixedHeight",
                _react2.default.createElement("br", null),
                "selected={this.state.startDate}",
                _react2.default.createElement("br", null),
                "onChange={this.handleChange} />"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                fixedHeight: true,
                selected: this.state.startDate,
                onChange: this.handleChange
              })
            )
          );
        };

        return FixedCalendar;
      })(_react2.default.Component);

      exports.default = FixedCalendar;

      /***/
    },
    /* 385 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Default = (function(_React$Component) {
        _inherits(Default, _React$Component);

        function Default(props) {
          _classCallCheck(this, Default);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        Default.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    showWeekNumbers\n/>\n"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showWeekNumbers: true
              })
            )
          );
        };

        return Default;
      })(_react2.default.Component);

      exports.default = Default;

      /***/
    },
    /* 386 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(211);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      /* eslint-disable react/no-multi-comp */
      var ExampleCustomInput = (function(_React$Component) {
        _inherits(ExampleCustomInput, _React$Component);

        function ExampleCustomInput() {
          _classCallCheck(this, ExampleCustomInput);

          return _possibleConstructorReturn(
            this,
            _React$Component.apply(this, arguments)
          );
        }

        ExampleCustomInput.prototype.render = function render() {
          return _react2.default.createElement(
            "button",
            {
              className: "example-custom-input",
              onClick: this.props.onClick
            },
            this.props.value
          );
        };

        return ExampleCustomInput;
      })(_react2.default.Component);

      ExampleCustomInput.propTypes = {
        onClick: _propTypes2.default.func,
        value: _propTypes2.default.string
      };

      var CustomInput = (function(_React$Component2) {
        _inherits(CustomInput, _React$Component2);

        function CustomInput(props) {
          _classCallCheck(this, CustomInput);

          var _this2 = _possibleConstructorReturn(
            this,
            _React$Component2.call(this, props)
          );

          _this2.handleChange = function(date) {
            _this2.setState({
              startDate: date
            });
          };

          _this2.state = {
            startDate: (0, _moment2.default)()
          };
          return _this2;
        }

        CustomInput.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                '\nclass ExampleCustomInput extends React.Component {\n\n  render () {\n    return (\n      <button\n        className="example-custom-input"\n        onClick={this.props.onClick}>\n        {this.props.value}\n      </button>\n    )\n  }\n}\n\nExampleCustomInput.propTypes = {\n  onClick: PropTypes.func,\n  value: PropTypes.string\n};\n\n...\n\n<DatePicker\n  customInput={<ExampleCustomInput />}\n  selected={this.state.startDate}\n  onChange={this.handleChange} />\n'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                customInput: _react2.default.createElement(
                  ExampleCustomInput,
                  null
                ),
                selected: this.state.startDate,
                onChange: this.handleChange
              })
            )
          );
        };

        return CustomInput;
      })(_react2.default.Component);

      exports.default = CustomInput;

      /***/
    },
    /* 387 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var MultiMonth = (function(_React$Component) {
        _inherits(MultiMonth, _React$Component);

        function MultiMonth(props) {
          _classCallCheck(this, MultiMonth);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        MultiMonth.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    monthsShown={2}\n/>\n"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                monthsShown: 2,
                onChange: this.handleChange,
                selected: this.state.startDate
              })
            )
          );
        };

        return MultiMonth;
      })(_react2.default.Component);

      exports.default = MultiMonth;

      /***/
    },
    /* 388 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var MultiMonthDrp = (function(_React$Component) {
        _inherits(MultiMonthDrp, _React$Component);

        function MultiMonthDrp(props) {
          _classCallCheck(this, MultiMonthDrp);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        MultiMonthDrp.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    showYearDropdown\n    monthsShown={2}\n/>\n"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                monthsShown: 2,
                onChange: this.handleChange,
                showYearDropdown: true,
                selected: this.state.startDate
              })
            )
          );
        };

        return MultiMonthDrp;
      })(_react2.default.Component);

      exports.default = MultiMonthDrp;

      /***/
    },
    /* 389 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Children = (function(_React$Component) {
        _inherits(Children, _React$Component);

        function Children(props) {
          _classCallCheck(this, Children);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        Children.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "\n<DatePicker\n  selected={this.state.startDate}\n  onChange={this.handleChange}\n>\n  <div style={{color: 'red'}}>\n    Don't forget to check the weather!\n  </div>\n</DatePicker>\n"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(
                _reactDatepicker2.default,
                {
                  selected: this.state.startDate,
                  onChange: this.handleChange
                },
                _react2.default.createElement(
                  "div",
                  { style: { color: "red" } },
                  "Don't forget to check the weather!"
                )
              )
            )
          );
        };

        return Children;
      })(_react2.default.Component);

      exports.default = Children;

      /***/
    },
    /* 390 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var WithPortal = (function(_React$Component) {
        _inherits(WithPortal, _React$Component);

        function WithPortal(props) {
          _classCallCheck(this, WithPortal);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        WithPortal.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    withPortal\n/>\n"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                withPortal: true
              })
            )
          );
        };

        return WithPortal;
      })(_react2.default.Component);

      exports.default = WithPortal;

      /***/
    },
    /* 391 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var InlinePortalVersion = (function(_React$Component) {
        _inherits(InlinePortalVersion, _React$Component);

        function InlinePortalVersion(props) {
          _classCallCheck(this, InlinePortalVersion);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({ startDate: date });
            _this.toggleCalendar();
          };

          _this.toggleCalendar = function(e) {
            e && e.preventDefault();
            _this.setState({ isOpen: !_this.state.isOpen });
          };

          _this.state = {
            startDate: (0, _moment2.default)(),
            isOpen: false
          };
          return _this;
        }

        InlinePortalVersion.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                '\nhandleChange (date) {\n  this.setState({startDate: date})\n  this.toggleCalendar()\n}\n\ntoggleCalendar (e) {\n  e && e.preventDefault()\n  this.setState({isOpen: !this.state.isOpen})\n}\n\n<div>\n    <button\n        className="example-custom-input"\n        onClick={this.toggleCalendar}>\n        {this.state.startDate.format("DD-MM-YYYY")}\n    </button>\n    {\n        this.state.isOpen && (\n            <DatePicker\n                selected={this.state.startDate}\n                onChange={this.handleChange}\n                withPortal\n                inline />\n        )\n    }\n</div>\n'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(
                "button",
                {
                  className: "example-custom-input",
                  onClick: this.toggleCalendar
                },
                this.state.startDate.format("DD-MM-YYYY")
              ),
              this.state.isOpen &&
                _react2.default.createElement(_reactDatepicker2.default, {
                  selected: this.state.startDate,
                  onChange: this.handleChange,
                  withPortal: true,
                  inline: true
                })
            )
          );
        };

        return InlinePortalVersion;
      })(_react2.default.Component);

      exports.default = InlinePortalVersion;

      /***/
    },
    /* 392 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var RawChanges = (function(_React$Component) {
        _inherits(RawChanges, _React$Component);

        function RawChanges() {
          var _temp, _this, _ret;

          _classCallCheck(this, RawChanges);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            (_this.handleChangeRaw = function(value) {
              if (value === "tomorrow") {
                _this.handleChange((0, _moment2.default)().add(1, "day"));
              }
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        RawChanges.prototype.render = function render() {
          var _this2 = this;

          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                '\nhandleChangeRaw(value) {\n  if(value === "tomorrow") {\n    const tomorrow = moment().add(1, "day")\n    this.handleChange(tomorrow)\n  }\n}\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    placeholderText="Enter tomorrow"\n    onChangeRaw={(event) =>\n      this.handleChangeRaw(event.target.value)}\n/>\n'
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                placeholderText: 'Enter "tomorrow"',
                onChangeRaw: function onChangeRaw(event) {
                  return _this2.handleChangeRaw(event.target.value);
                }
              })
            )
          );
        };

        return RawChanges;
      })(_react2.default.Component);

      exports.default = RawChanges;

      /***/
    },
    /* 393 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ShowTime = (function(_React$Component) {
        _inherits(ShowTime, _React$Component);

        function ShowTime(props) {
          _classCallCheck(this, ShowTime);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        ShowTime.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "strong",
                  null,
                  '    showTimeSelect\n    timeFormat="HH:mm"\n    timeIntervals={15}\n    dateFormat="LLL"\n/>\n'
                )
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showTimeSelect: true,
                timeFormat: "HH:mm",
                timeIntervals: 15,
                dateFormat: "LLL"
              })
            )
          );
        };

        return ShowTime;
      })(_react2.default.Component);

      exports.default = ShowTime;

      /***/
    },
    /* 394 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ExcludeTimes = (function(_React$Component) {
        _inherits(ExcludeTimes, _React$Component);

        function ExcludeTimes() {
          var _temp, _this, _ret;

          _classCallCheck(this, ExcludeTimes);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: (0, _moment2.default)()
                .hours(16)
                .minutes(30)
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        ExcludeTimes.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "<DatePicker",
                _react2.default.createElement("br", null),
                "  selected={this.state.startDate}",
                _react2.default.createElement("br", null),
                "  onChange={this.handleChange}",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "strong",
                  null,
                  "  showTimeSelect",
                  _react2.default.createElement("br", null),
                  "  excludeTimes={[moment().hours(17).minutes(0), moment().hours(18).minutes(30), moment().hours(19).minutes(30)], moment().hours(17).minutes(30)}"
                ),
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "strong",
                  null,
                  '  dateFormat="LLL"'
                ),
                _react2.default.createElement("br", null),
                "/>"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showTimeSelect: true,
                excludeTimes: [
                  (0, _moment2.default)()
                    .hours(17)
                    .minutes(0),
                  (0, _moment2.default)()
                    .hours(18)
                    .minutes(30),
                  (0, _moment2.default)()
                    .hours(19)
                    .minutes(30),
                  (0, _moment2.default)()
                    .hours(17)
                    .minutes(30)
                ],
                dateFormat: "LLL"
              })
            )
          );
        };

        return ExcludeTimes;
      })(_react2.default.Component);

      exports.default = ExcludeTimes;

      /***/
    },
    /* 395 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ExcludeTimePeriod = (function(_React$Component) {
        _inherits(ExcludeTimePeriod, _React$Component);

        function ExcludeTimePeriod() {
          var _temp, _this, _ret;

          _classCallCheck(this, ExcludeTimePeriod);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: (0, _moment2.default)()
                .hours(17)
                .minutes(30)
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        ExcludeTimePeriod.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "<DatePicker",
                _react2.default.createElement("br", null),
                "  selected={this.state.startDate}",
                _react2.default.createElement("br", null),
                "  onChange={this.handleChange}",
                _react2.default.createElement("br", null),
                _react2.default.createElement(
                  "strong",
                  null,
                  "  showTimeSelect",
                  _react2.default.createElement("br", null),
                  "  minTime={moment().hours(17).minutes(0)}",
                  _react2.default.createElement("br", null),
                  "  maxTime={moment().hours(20).minutes(30)}",
                  _react2.default.createElement("br", null),
                  '  dateFormat="LLL"'
                ),
                _react2.default.createElement("br", null),
                "/>"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showTimeSelect: true,
                minTime: (0, _moment2.default)()
                  .hours(17)
                  .minutes(0),
                maxTime: (0, _moment2.default)()
                  .hours(20)
                  .minutes(30),
                dateFormat: "LLL"
              })
            )
          );
        };

        return ExcludeTimePeriod;
      })(_react2.default.Component);

      exports.default = ExcludeTimePeriod;

      /***/
    },
    /* 396 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var DontCloseOnSelect = (function(_React$Component) {
        _inherits(DontCloseOnSelect, _React$Component);

        function DontCloseOnSelect(props) {
          _classCallCheck(this, DontCloseOnSelect);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        DontCloseOnSelect.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    shouldCloseOnSelect={false}\n/>\n"
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                shouldCloseOnSelect: false
              })
            )
          );
        };

        return DontCloseOnSelect;
      })(_react2.default.Component);

      exports.default = DontCloseOnSelect;

      /***/
    },
    /* 397 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var OpenByDefault = (function(_React$Component) {
        _inherits(OpenByDefault, _React$Component);

        function OpenByDefault(props) {
          _classCallCheck(this, OpenByDefault);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        OpenByDefault.prototype.render = function render() {
          return _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "pre",
              { className: "column example__code" },
              _react2.default.createElement(
                "code",
                { className: "jsx" },
                "\n          <DatePicker\n            autoFocus\n            selected={this.state.startDate}\n            onChange={this.handleChange}\n          />\n          "
              )
            ),
            _react2.default.createElement(
              "div",
              { className: "column" },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange
              })
            )
          );
        };

        return OpenByDefault;
      })(_react2.default.Component);

      exports.default = OpenByDefault;

      /***/
    },
    /* 398 */
    /***/ function(module, exports) {
      // removed by extract-text-webpack-plugin
      /***/
    },
    /* 399 */
    398,
    /* 400 */
    /***/ function(module, exports, __webpack_require__) {
      "use strict";

      exports.__esModule = true;

      var _react = __webpack_require__(2);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(208);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _moment = __webpack_require__(218);

      var _moment2 = _interopRequireDefault(_moment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === "object" || typeof call === "function")
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var HeroExample = (function(_React$Component) {
        _inherits(HeroExample, _React$Component);

        function HeroExample(props) {
          _classCallCheck(this, HeroExample);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: (0, _moment2.default)()
          };
          return _this;
        }

        HeroExample.prototype.render = function render() {
          return _react2.default.createElement(_reactDatepicker2.default, {
            autoFocus: true,
            selected: this.state.startDate,
            onChange: this.handleChange
          });
        };

        return HeroExample;
      })(_react2.default.Component);

      exports.default = HeroExample;

      /***/
    }
    /******/
  ])
);
