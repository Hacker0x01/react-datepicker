/******/ (function(modules) {
  // webpackBootstrap
  /******/ // The module cache
  /******/ var installedModules = {}; // The require function

  /******/ /******/ function __webpack_require__(moduleId) {
    /******/ // Check if module is in cache
    /******/ if (installedModules[moduleId])
      /******/ return installedModules[moduleId].exports; // Create a new module (and put it into the cache)

    /******/ /******/ var module = (installedModules[moduleId] = {
      /******/ exports: {},
      /******/ id: moduleId,
      /******/ loaded: false
      /******/
    }); // Execute the module function

    /******/ /******/ modules[moduleId].call(
      module.exports,
      module,
      module.exports,
      __webpack_require__
    ); // Flag the module as loaded

    /******/ /******/ module.loaded = true; // Return the exports of the module

    /******/ /******/ return module.exports;
    /******/
  } // expose the modules object (__webpack_modules__)

  /******/ /******/ __webpack_require__.m = modules; // expose the module cache

  /******/ /******/ __webpack_require__.c = installedModules; // __webpack_public_path__

  /******/ /******/ __webpack_require__.p = '/'; // Load entry module and return exports

  /******/ /******/ return __webpack_require__(0);
  /******/
})(
  /************************************************************************/
  /******/ (function(modules) {
    // Check all modules for deduplicated modules
    for (var i in modules) {
      if (Object.prototype.hasOwnProperty.call(modules, i)) {
        switch (typeof modules[i]) {
          case 'function':
            break;
          case 'object':
            // Module can be created from a template
            modules[i] = (function(_m) {
              var args = _m.slice(1),
                fn = modules[_m[0]];
              return function(a, b, c) {
                fn.apply(this, [a, b, c].concat(args));
              };
            })(modules[i]);
            break;
          default:
            // Module is a copy of another module
            modules[i] = modules[modules[i]];
            break;
        }
      }
    }
    return modules;
  })([
    /* 0 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(1);
      module.exports = __webpack_require__(327);

      /***/
    },
    /* 1 */
    /***/ function(module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function(global) {
        'use strict';

        __webpack_require__(2);

        __webpack_require__(323);

        __webpack_require__(324);

        if (global._babelPolyfill) {
          throw new Error('only one instance of babel-polyfill is allowed');
        }
        global._babelPolyfill = true;

        var DEFINE_PROPERTY = 'defineProperty';
        function define(O, key, value) {
          O[key] ||
            Object[DEFINE_PROPERTY](O, key, {
              writable: true,
              configurable: true,
              value: value
            });
        }

        define(String.prototype, 'padLeft', ''.padStart);
        define(String.prototype, 'padRight', ''.padEnd);

        'pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill'
          .split(',')
          .forEach(function(key) {
            [][key] && define(Array, key, Function.call.bind([][key]));
          });
        /* WEBPACK VAR INJECTION */
      }.call(
        exports,
        (function() {
          return this;
        })()
      ));

      /***/
    },
    /* 2 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(3);
      __webpack_require__(51);
      __webpack_require__(52);
      __webpack_require__(53);
      __webpack_require__(54);
      __webpack_require__(56);
      __webpack_require__(59);
      __webpack_require__(60);
      __webpack_require__(61);
      __webpack_require__(62);
      __webpack_require__(63);
      __webpack_require__(64);
      __webpack_require__(65);
      __webpack_require__(66);
      __webpack_require__(67);
      __webpack_require__(69);
      __webpack_require__(71);
      __webpack_require__(73);
      __webpack_require__(75);
      __webpack_require__(78);
      __webpack_require__(79);
      __webpack_require__(80);
      __webpack_require__(84);
      __webpack_require__(86);
      __webpack_require__(88);
      __webpack_require__(91);
      __webpack_require__(92);
      __webpack_require__(93);
      __webpack_require__(94);
      __webpack_require__(96);
      __webpack_require__(97);
      __webpack_require__(98);
      __webpack_require__(99);
      __webpack_require__(100);
      __webpack_require__(101);
      __webpack_require__(102);
      __webpack_require__(104);
      __webpack_require__(105);
      __webpack_require__(106);
      __webpack_require__(108);
      __webpack_require__(109);
      __webpack_require__(110);
      __webpack_require__(112);
      __webpack_require__(114);
      __webpack_require__(115);
      __webpack_require__(116);
      __webpack_require__(117);
      __webpack_require__(118);
      __webpack_require__(119);
      __webpack_require__(120);
      __webpack_require__(121);
      __webpack_require__(122);
      __webpack_require__(123);
      __webpack_require__(124);
      __webpack_require__(125);
      __webpack_require__(126);
      __webpack_require__(131);
      __webpack_require__(132);
      __webpack_require__(136);
      __webpack_require__(137);
      __webpack_require__(138);
      __webpack_require__(139);
      __webpack_require__(141);
      __webpack_require__(142);
      __webpack_require__(143);
      __webpack_require__(144);
      __webpack_require__(145);
      __webpack_require__(146);
      __webpack_require__(147);
      __webpack_require__(148);
      __webpack_require__(149);
      __webpack_require__(150);
      __webpack_require__(151);
      __webpack_require__(152);
      __webpack_require__(153);
      __webpack_require__(154);
      __webpack_require__(155);
      __webpack_require__(157);
      __webpack_require__(158);
      __webpack_require__(160);
      __webpack_require__(161);
      __webpack_require__(167);
      __webpack_require__(168);
      __webpack_require__(170);
      __webpack_require__(171);
      __webpack_require__(172);
      __webpack_require__(176);
      __webpack_require__(177);
      __webpack_require__(178);
      __webpack_require__(179);
      __webpack_require__(180);
      __webpack_require__(182);
      __webpack_require__(183);
      __webpack_require__(184);
      __webpack_require__(185);
      __webpack_require__(188);
      __webpack_require__(190);
      __webpack_require__(191);
      __webpack_require__(192);
      __webpack_require__(194);
      __webpack_require__(196);
      __webpack_require__(198);
      __webpack_require__(199);
      __webpack_require__(200);
      __webpack_require__(202);
      __webpack_require__(203);
      __webpack_require__(204);
      __webpack_require__(205);
      __webpack_require__(216);
      __webpack_require__(220);
      __webpack_require__(221);
      __webpack_require__(223);
      __webpack_require__(224);
      __webpack_require__(228);
      __webpack_require__(229);
      __webpack_require__(231);
      __webpack_require__(232);
      __webpack_require__(233);
      __webpack_require__(234);
      __webpack_require__(235);
      __webpack_require__(236);
      __webpack_require__(237);
      __webpack_require__(238);
      __webpack_require__(239);
      __webpack_require__(240);
      __webpack_require__(241);
      __webpack_require__(242);
      __webpack_require__(243);
      __webpack_require__(244);
      __webpack_require__(245);
      __webpack_require__(246);
      __webpack_require__(247);
      __webpack_require__(248);
      __webpack_require__(249);
      __webpack_require__(251);
      __webpack_require__(252);
      __webpack_require__(253);
      __webpack_require__(254);
      __webpack_require__(255);
      __webpack_require__(257);
      __webpack_require__(258);
      __webpack_require__(259);
      __webpack_require__(261);
      __webpack_require__(262);
      __webpack_require__(263);
      __webpack_require__(264);
      __webpack_require__(265);
      __webpack_require__(266);
      __webpack_require__(267);
      __webpack_require__(268);
      __webpack_require__(270);
      __webpack_require__(271);
      __webpack_require__(273);
      __webpack_require__(274);
      __webpack_require__(275);
      __webpack_require__(276);
      __webpack_require__(279);
      __webpack_require__(280);
      __webpack_require__(282);
      __webpack_require__(283);
      __webpack_require__(284);
      __webpack_require__(285);
      __webpack_require__(287);
      __webpack_require__(288);
      __webpack_require__(289);
      __webpack_require__(290);
      __webpack_require__(291);
      __webpack_require__(292);
      __webpack_require__(293);
      __webpack_require__(294);
      __webpack_require__(295);
      __webpack_require__(296);
      __webpack_require__(298);
      __webpack_require__(299);
      __webpack_require__(300);
      __webpack_require__(301);
      __webpack_require__(302);
      __webpack_require__(303);
      __webpack_require__(304);
      __webpack_require__(305);
      __webpack_require__(306);
      __webpack_require__(307);
      __webpack_require__(308);
      __webpack_require__(310);
      __webpack_require__(311);
      __webpack_require__(312);
      __webpack_require__(313);
      __webpack_require__(314);
      __webpack_require__(315);
      __webpack_require__(316);
      __webpack_require__(317);
      __webpack_require__(318);
      __webpack_require__(319);
      __webpack_require__(320);
      __webpack_require__(321);
      __webpack_require__(322);
      module.exports = __webpack_require__(9);

      /***/
    },
    /* 3 */
    [
      804,
      4,
      5,
      6,
      8,
      18,
      22,
      7,
      23,
      25,
      19,
      26,
      27,
      28,
      29,
      44,
      12,
      13,
      32,
      16,
      17,
      45,
      48,
      50,
      11,
      30,
      49,
      43,
      42,
      24,
      10
    ],
    /* 4 */
    /***/ function(module, exports) {
      // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
      var global = (module.exports =
        typeof window != 'undefined' && window.Math == Math
          ? window
          : typeof self != 'undefined' && self.Math == Math
            ? self
            : // eslint-disable-next-line no-new-func
              Function('return this')());
      if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

      /***/
    },
    /* 5 */
    /***/ function(module, exports) {
      var hasOwnProperty = {}.hasOwnProperty;
      module.exports = function(it, key) {
        return hasOwnProperty.call(it, key);
      };

      /***/
    },
    /* 6 */
    [805, 7],
    /* 7 */
    /***/ function(module, exports) {
      module.exports = function(exec) {
        try {
          return !!exec();
        } catch (e) {
          return true;
        }
      };

      /***/
    },
    /* 8 */
    /***/ function(module, exports, __webpack_require__) {
      var global = __webpack_require__(4);
      var core = __webpack_require__(9);
      var hide = __webpack_require__(10);
      var redefine = __webpack_require__(18);
      var ctx = __webpack_require__(20);
      var PROTOTYPE = 'prototype';

      var $export = function(type, name, source) {
        var IS_FORCED = type & $export.F;
        var IS_GLOBAL = type & $export.G;
        var IS_STATIC = type & $export.S;
        var IS_PROTO = type & $export.P;
        var IS_BIND = type & $export.B;
        var target = IS_GLOBAL
          ? global
          : IS_STATIC
            ? global[name] || (global[name] = {})
            : (global[name] || {})[PROTOTYPE];
        var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
        var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
        var key, own, out, exp;
        if (IS_GLOBAL) source = name;
        for (key in source) {
          // contains in native
          own = !IS_FORCED && target && target[key] !== undefined;
          // export native or passed
          out = (own ? target : source)[key];
          // bind timers to global for call from export context
          exp =
            IS_BIND && own
              ? ctx(out, global)
              : IS_PROTO && typeof out == 'function'
                ? ctx(Function.call, out)
                : out;
          // extend global
          if (target) redefine(target, key, out, type & $export.U);
          // export
          if (exports[key] != out) hide(exports, key, exp);
          if (IS_PROTO && expProto[key] != out) expProto[key] = out;
        }
      };
      global.core = core;
      // type bitmap
      $export.F = 1; // forced
      $export.G = 2; // global
      $export.S = 4; // static
      $export.P = 8; // proto
      $export.B = 16; // bind
      $export.W = 32; // wrap
      $export.U = 64; // safe
      $export.R = 128; // real proto method for `library`
      module.exports = $export;

      /***/
    },
    /* 9 */
    /***/ function(module, exports) {
      var core = (module.exports = { version: '2.5.7' });
      if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

      /***/
    },
    /* 10 */
    [806, 11, 17, 6],
    /* 11 */
    [807, 12, 14, 16, 6],
    /* 12 */
    [808, 13],
    /* 13 */
    /***/ function(module, exports) {
      module.exports = function(it) {
        return typeof it === 'object' ? it !== null : typeof it === 'function';
      };

      /***/
    },
    /* 14 */
    [809, 6, 7, 15],
    /* 15 */
    [810, 13, 4],
    /* 16 */
    [811, 13],
    /* 17 */
    /***/ function(module, exports) {
      module.exports = function(bitmap, value) {
        return {
          enumerable: !(bitmap & 1),
          configurable: !(bitmap & 2),
          writable: !(bitmap & 4),
          value: value
        };
      };

      /***/
    },
    /* 18 */
    /***/ function(module, exports, __webpack_require__) {
      var global = __webpack_require__(4);
      var hide = __webpack_require__(10);
      var has = __webpack_require__(5);
      var SRC = __webpack_require__(19)('src');
      var TO_STRING = 'toString';
      var $toString = Function[TO_STRING];
      var TPL = ('' + $toString).split(TO_STRING);

      __webpack_require__(9).inspectSource = function(it) {
        return $toString.call(it);
      };

      (module.exports = function(O, key, val, safe) {
        var isFunction = typeof val == 'function';
        if (isFunction) has(val, 'name') || hide(val, 'name', key);
        if (O[key] === val) return;
        if (isFunction)
          has(val, SRC) ||
            hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
        if (O === global) {
          O[key] = val;
        } else if (!safe) {
          delete O[key];
          hide(O, key, val);
        } else if (O[key]) {
          O[key] = val;
        } else {
          hide(O, key, val);
        }
        // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
      })(Function.prototype, TO_STRING, function toString() {
        return (typeof this == 'function' && this[SRC]) || $toString.call(this);
      });

      /***/
    },
    /* 19 */
    /***/ function(module, exports) {
      var id = 0;
      var px = Math.random();
      module.exports = function(key) {
        return 'Symbol('.concat(
          key === undefined ? '' : key,
          ')_',
          (++id + px).toString(36)
        );
      };

      /***/
    },
    /* 20 */
    [812, 21],
    /* 21 */
    /***/ function(module, exports) {
      module.exports = function(it) {
        if (typeof it != 'function')
          throw TypeError(it + ' is not a function!');
        return it;
      };

      /***/
    },
    /* 22 */
    [813, 19, 13, 5, 11, 7],
    /* 23 */
    [814, 9, 4, 24],
    /* 24 */
    /***/ function(module, exports) {
      module.exports = false;

      /***/
    },
    /* 25 */
    [815, 11, 5, 26],
    /* 26 */
    [816, 23, 19, 4],
    /* 27 */
    [817, 26],
    /* 28 */
    [818, 4, 9, 24, 27, 11],
    /* 29 */
    [819, 30, 42, 43],
    /* 30 */
    [820, 31, 41],
    /* 31 */
    [821, 5, 32, 36, 40],
    /* 32 */
    [822, 33, 35],
    /* 33 */
    [823, 34],
    /* 34 */
    /***/ function(module, exports) {
      var toString = {}.toString;

      module.exports = function(it) {
        return toString.call(it).slice(8, -1);
      };

      /***/
    },
    /* 35 */
    /***/ function(module, exports) {
      // 7.2.1 RequireObjectCoercible(argument)
      module.exports = function(it) {
        if (it == undefined) throw TypeError("Can't call method on  " + it);
        return it;
      };

      /***/
    },
    /* 36 */
    [824, 32, 37, 39],
    /* 37 */
    [825, 38],
    /* 38 */
    /***/ function(module, exports) {
      // 7.1.4 ToInteger
      var ceil = Math.ceil;
      var floor = Math.floor;
      module.exports = function(it) {
        return isNaN((it = +it)) ? 0 : (it > 0 ? floor : ceil)(it);
      };

      /***/
    },
    /* 39 */
    [826, 38],
    /* 40 */
    [827, 23, 19],
    /* 41 */
    /***/ function(module, exports) {
      // IE 8- don't enum bug keys
      module.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(
        ','
      );

      /***/
    },
    /* 42 */
    /***/ function(module, exports) {
      exports.f = Object.getOwnPropertySymbols;

      /***/
    },
    /* 43 */
    /***/ function(module, exports) {
      exports.f = {}.propertyIsEnumerable;

      /***/
    },
    /* 44 */
    [828, 34],
    /* 45 */
    [829, 12, 46, 41, 40, 15, 47],
    /* 46 */
    [830, 11, 12, 30, 6],
    /* 47 */
    [831, 4],
    /* 48 */
    [832, 32, 49],
    /* 49 */
    [833, 31, 41],
    /* 50 */
    [834, 43, 17, 32, 16, 5, 14, 6],
    /* 51 */
    [835, 8, 45],
    /* 52 */
    /***/ function(module, exports, __webpack_require__) {
      var $export = __webpack_require__(8);
      // 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
      $export($export.S + $export.F * !__webpack_require__(6), 'Object', {
        defineProperty: __webpack_require__(11).f
      });

      /***/
    },
    /* 53 */
    /***/ function(module, exports, __webpack_require__) {
      var $export = __webpack_require__(8);
      // 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
      $export($export.S + $export.F * !__webpack_require__(6), 'Object', {
        defineProperties: __webpack_require__(46)
      });

      /***/
    },
    /* 54 */
    /***/ function(module, exports, __webpack_require__) {
      // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
      var toIObject = __webpack_require__(32);
      var $getOwnPropertyDescriptor = __webpack_require__(50).f;

      __webpack_require__(55)('getOwnPropertyDescriptor', function() {
        return function getOwnPropertyDescriptor(it, key) {
          return $getOwnPropertyDescriptor(toIObject(it), key);
        };
      });

      /***/
    },
    /* 55 */
    /***/ function(module, exports, __webpack_require__) {
      // most Object methods by ES6 should accept primitives
      var $export = __webpack_require__(8);
      var core = __webpack_require__(9);
      var fails = __webpack_require__(7);
      module.exports = function(KEY, exec) {
        var fn = (core.Object || {})[KEY] || Object[KEY];
        var exp = {};
        exp[KEY] = exec(fn);
        $export(
          $export.S +
            $export.F *
              fails(function() {
                fn(1);
              }),
          'Object',
          exp
        );
      };

      /***/
    },
    /* 56 */
    /***/ function(module, exports, __webpack_require__) {
      // 19.1.2.9 Object.getPrototypeOf(O)
      var toObject = __webpack_require__(57);
      var $getPrototypeOf = __webpack_require__(58);

      __webpack_require__(55)('getPrototypeOf', function() {
        return function getPrototypeOf(it) {
          return $getPrototypeOf(toObject(it));
        };
      });

      /***/
    },
    /* 57 */
    [836, 35],
    /* 58 */
    [837, 5, 57, 40],
    /* 59 */
    /***/ function(module, exports, __webpack_require__) {
      // 19.1.2.14 Object.keys(O)
      var toObject = __webpack_require__(57);
      var $keys = __webpack_require__(30);

      __webpack_require__(55)('keys', function() {
        return function keys(it) {
          return $keys(toObject(it));
        };
      });

      /***/
    },
    /* 60 */
    /***/ function(module, exports, __webpack_require__) {
      // 19.1.2.7 Object.getOwnPropertyNames(O)
      __webpack_require__(55)('getOwnPropertyNames', function() {
        return __webpack_require__(48).f;
      });

      /***/
    },
    /* 61 */
    /***/ function(module, exports, __webpack_require__) {
      // 19.1.2.5 Object.freeze(O)
      var isObject = __webpack_require__(13);
      var meta = __webpack_require__(22).onFreeze;

      __webpack_require__(55)('freeze', function($freeze) {
        return function freeze(it) {
          return $freeze && isObject(it) ? $freeze(meta(it)) : it;
        };
      });

      /***/
    },
    /* 62 */
    /***/ function(module, exports, __webpack_require__) {
      // 19.1.2.17 Object.seal(O)
      var isObject = __webpack_require__(13);
      var meta = __webpack_require__(22).onFreeze;

      __webpack_require__(55)('seal', function($seal) {
        return function seal(it) {
          return $seal && isObject(it) ? $seal(meta(it)) : it;
        };
      });

      /***/
    },
    /* 63 */
    /***/ function(module, exports, __webpack_require__) {
      // 19.1.2.15 Object.preventExtensions(O)
      var isObject = __webpack_require__(13);
      var meta = __webpack_require__(22).onFreeze;

      __webpack_require__(55)('preventExtensions', function(
        $preventExtensions
      ) {
        return function preventExtensions(it) {
          return $preventExtensions && isObject(it)
            ? $preventExtensions(meta(it))
            : it;
        };
      });

      /***/
    },
    /* 64 */
    /***/ function(module, exports, __webpack_require__) {
      // 19.1.2.12 Object.isFrozen(O)
      var isObject = __webpack_require__(13);

      __webpack_require__(55)('isFrozen', function($isFrozen) {
        return function isFrozen(it) {
          return isObject(it) ? ($isFrozen ? $isFrozen(it) : false) : true;
        };
      });

      /***/
    },
    /* 65 */
    /***/ function(module, exports, __webpack_require__) {
      // 19.1.2.13 Object.isSealed(O)
      var isObject = __webpack_require__(13);

      __webpack_require__(55)('isSealed', function($isSealed) {
        return function isSealed(it) {
          return isObject(it) ? ($isSealed ? $isSealed(it) : false) : true;
        };
      });

      /***/
    },
    /* 66 */
    /***/ function(module, exports, __webpack_require__) {
      // 19.1.2.11 Object.isExtensible(O)
      var isObject = __webpack_require__(13);

      __webpack_require__(55)('isExtensible', function($isExtensible) {
        return function isExtensible(it) {
          return isObject(it)
            ? $isExtensible
              ? $isExtensible(it)
              : true
            : false;
        };
      });

      /***/
    },
    /* 67 */
    [838, 8, 68],
    /* 68 */
    [839, 30, 42, 43, 57, 33, 7],
    /* 69 */
    /***/ function(module, exports, __webpack_require__) {
      // 19.1.3.10 Object.is(value1, value2)
      var $export = __webpack_require__(8);
      $export($export.S, 'Object', { is: __webpack_require__(70) });

      /***/
    },
    /* 70 */
    /***/ function(module, exports) {
      // 7.2.9 SameValue(x, y)
      module.exports =
        Object.is ||
        function is(x, y) {
          // eslint-disable-next-line no-self-compare
          return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
        };

      /***/
    },
    /* 71 */
    [840, 8, 72],
    /* 72 */
    [841, 13, 12, 20, 50],
    /* 73 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // 19.1.3.6 Object.prototype.toString()
      var classof = __webpack_require__(74);
      var test = {};
      test[__webpack_require__(26)('toStringTag')] = 'z';
      if (test + '' != '[object z]') {
        __webpack_require__(18)(
          Object.prototype,
          'toString',
          function toString() {
            return '[object ' + classof(this) + ']';
          },
          true
        );
      }

      /***/
    },
    /* 74 */
    /***/ function(module, exports, __webpack_require__) {
      // getting tag from 19.1.3.6 Object.prototype.toString()
      var cof = __webpack_require__(34);
      var TAG = __webpack_require__(26)('toStringTag');
      // ES3 wrong here
      var ARG =
        cof(
          (function() {
            return arguments;
          })()
        ) == 'Arguments';

      // fallback for IE11 Script Access Denied error
      var tryGet = function(it, key) {
        try {
          return it[key];
        } catch (e) {
          /* empty */
        }
      };

      module.exports = function(it) {
        var O, T, B;
        return it === undefined
          ? 'Undefined'
          : it === null
            ? 'Null'
            : // @@toStringTag case
              typeof (T = tryGet((O = Object(it)), TAG)) == 'string'
              ? T
              : // builtinTag case
                ARG
                ? cof(O)
                : // ES3 arguments fallback
                  (B = cof(O)) == 'Object' && typeof O.callee == 'function'
                  ? 'Arguments'
                  : B;
      };

      /***/
    },
    /* 75 */
    /***/ function(module, exports, __webpack_require__) {
      // 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
      var $export = __webpack_require__(8);

      $export($export.P, 'Function', { bind: __webpack_require__(76) });

      /***/
    },
    /* 76 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var aFunction = __webpack_require__(21);
      var isObject = __webpack_require__(13);
      var invoke = __webpack_require__(77);
      var arraySlice = [].slice;
      var factories = {};

      var construct = function(F, len, args) {
        if (!(len in factories)) {
          for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
          // eslint-disable-next-line no-new-func
          factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
        }
        return factories[len](F, args);
      };

      module.exports =
        Function.bind ||
        function bind(that /* , ...args */) {
          var fn = aFunction(this);
          var partArgs = arraySlice.call(arguments, 1);
          var bound = function(/* args... */) {
            var args = partArgs.concat(arraySlice.call(arguments));
            return this instanceof bound
              ? construct(fn, args.length, args)
              : invoke(fn, args, that);
          };
          if (isObject(fn.prototype)) bound.prototype = fn.prototype;
          return bound;
        };

      /***/
    },
    /* 77 */
    /***/ function(module, exports) {
      // fast apply, http://jsperf.lnkit.com/fast-apply/5
      module.exports = function(fn, args, that) {
        var un = that === undefined;
        switch (args.length) {
          case 0:
            return un ? fn() : fn.call(that);
          case 1:
            return un ? fn(args[0]) : fn.call(that, args[0]);
          case 2:
            return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);
          case 3:
            return un
              ? fn(args[0], args[1], args[2])
              : fn.call(that, args[0], args[1], args[2]);
          case 4:
            return un
              ? fn(args[0], args[1], args[2], args[3])
              : fn.call(that, args[0], args[1], args[2], args[3]);
        }
        return fn.apply(that, args);
      };

      /***/
    },
    /* 78 */
    /***/ function(module, exports, __webpack_require__) {
      var dP = __webpack_require__(11).f;
      var FProto = Function.prototype;
      var nameRE = /^\s*function ([^ (]*)/;
      var NAME = 'name';

      // 19.2.4.2 name
      NAME in FProto ||
        (__webpack_require__(6) &&
          dP(FProto, NAME, {
            configurable: true,
            get: function() {
              try {
                return ('' + this).match(nameRE)[1];
              } catch (e) {
                return '';
              }
            }
          }));

      /***/
    },
    /* 79 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var isObject = __webpack_require__(13);
      var getPrototypeOf = __webpack_require__(58);
      var HAS_INSTANCE = __webpack_require__(26)('hasInstance');
      var FunctionProto = Function.prototype;
      // 19.2.3.6 Function.prototype[@@hasInstance](V)
      if (!(HAS_INSTANCE in FunctionProto))
        __webpack_require__(11).f(FunctionProto, HAS_INSTANCE, {
          value: function(O) {
            if (typeof this != 'function' || !isObject(O)) return false;
            if (!isObject(this.prototype)) return O instanceof this;
            // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
            while ((O = getPrototypeOf(O)))
              if (this.prototype === O) return true;
            return false;
          }
        });

      /***/
    },
    /* 80 */
    /***/ function(module, exports, __webpack_require__) {
      var $export = __webpack_require__(8);
      var $parseInt = __webpack_require__(81);
      // 18.2.5 parseInt(string, radix)
      $export($export.G + $export.F * (parseInt != $parseInt), {
        parseInt: $parseInt
      });

      /***/
    },
    /* 81 */
    /***/ function(module, exports, __webpack_require__) {
      var $parseInt = __webpack_require__(4).parseInt;
      var $trim = __webpack_require__(82).trim;
      var ws = __webpack_require__(83);
      var hex = /^[-+]?0[xX]/;

      module.exports =
        $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22
          ? function parseInt(str, radix) {
              var string = $trim(String(str), 3);
              return $parseInt(
                string,
                radix >>> 0 || (hex.test(string) ? 16 : 10)
              );
            }
          : $parseInt;

      /***/
    },
    /* 82 */
    /***/ function(module, exports, __webpack_require__) {
      var $export = __webpack_require__(8);
      var defined = __webpack_require__(35);
      var fails = __webpack_require__(7);
      var spaces = __webpack_require__(83);
      var space = '[' + spaces + ']';
      var non = '\u200b\u0085';
      var ltrim = RegExp('^' + space + space + '*');
      var rtrim = RegExp(space + space + '*$');

      var exporter = function(KEY, exec, ALIAS) {
        var exp = {};
        var FORCE = fails(function() {
          return !!spaces[KEY]() || non[KEY]() != non;
        });
        var fn = (exp[KEY] = FORCE ? exec(trim) : spaces[KEY]);
        if (ALIAS) exp[ALIAS] = fn;
        $export($export.P + $export.F * FORCE, 'String', exp);
      };

      // 1 -> String#trimLeft
      // 2 -> String#trimRight
      // 3 -> String#trim
      var trim = (exporter.trim = function(string, TYPE) {
        string = String(defined(string));
        if (TYPE & 1) string = string.replace(ltrim, '');
        if (TYPE & 2) string = string.replace(rtrim, '');
        return string;
      });

      module.exports = exporter;

      /***/
    },
    /* 83 */
    /***/ function(module, exports) {
      module.exports =
        '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
        '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

      /***/
    },
    /* 84 */
    /***/ function(module, exports, __webpack_require__) {
      var $export = __webpack_require__(8);
      var $parseFloat = __webpack_require__(85);
      // 18.2.4 parseFloat(string)
      $export($export.G + $export.F * (parseFloat != $parseFloat), {
        parseFloat: $parseFloat
      });

      /***/
    },
    /* 85 */
    /***/ function(module, exports, __webpack_require__) {
      var $parseFloat = __webpack_require__(4).parseFloat;
      var $trim = __webpack_require__(82).trim;

      module.exports =
        1 / $parseFloat(__webpack_require__(83) + '-0') !== -Infinity
          ? function parseFloat(str) {
              var string = $trim(String(str), 3);
              var result = $parseFloat(string);
              return result === 0 && string.charAt(0) == '-' ? -0 : result;
            }
          : $parseFloat;

      /***/
    },
    /* 86 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var global = __webpack_require__(4);
      var has = __webpack_require__(5);
      var cof = __webpack_require__(34);
      var inheritIfRequired = __webpack_require__(87);
      var toPrimitive = __webpack_require__(16);
      var fails = __webpack_require__(7);
      var gOPN = __webpack_require__(49).f;
      var gOPD = __webpack_require__(50).f;
      var dP = __webpack_require__(11).f;
      var $trim = __webpack_require__(82).trim;
      var NUMBER = 'Number';
      var $Number = global[NUMBER];
      var Base = $Number;
      var proto = $Number.prototype;
      // Opera ~12 has broken Object#toString
      var BROKEN_COF = cof(__webpack_require__(45)(proto)) == NUMBER;
      var TRIM = 'trim' in String.prototype;

      // 7.1.3 ToNumber(argument)
      var toNumber = function(argument) {
        var it = toPrimitive(argument, false);
        if (typeof it == 'string' && it.length > 2) {
          it = TRIM ? it.trim() : $trim(it, 3);
          var first = it.charCodeAt(0);
          var third, radix, maxCode;
          if (first === 43 || first === 45) {
            third = it.charCodeAt(2);
            if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
          } else if (first === 48) {
            switch (it.charCodeAt(1)) {
              case 66:
              case 98:
                radix = 2;
                maxCode = 49;
                break; // fast equal /^0b[01]+$/i
              case 79:
              case 111:
                radix = 8;
                maxCode = 55;
                break; // fast equal /^0o[0-7]+$/i
              default:
                return +it;
            }
            for (
              var digits = it.slice(2), i = 0, l = digits.length, code;
              i < l;
              i++
            ) {
              code = digits.charCodeAt(i);
              // parseInt parses a string to a first unavailable symbol
              // but ToNumber should return NaN if a string contains unavailable symbols
              if (code < 48 || code > maxCode) return NaN;
            }
            return parseInt(digits, radix);
          }
        }
        return +it;
      };

      if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
        $Number = function Number(value) {
          var it = arguments.length < 1 ? 0 : value;
          var that = this;
          return that instanceof $Number &&
            // check on 1..constructor(foo) case
            (BROKEN_COF
              ? fails(function() {
                  proto.valueOf.call(that);
                })
              : cof(that) != NUMBER)
            ? inheritIfRequired(new Base(toNumber(it)), that, $Number)
            : toNumber(it);
        };
        for (
          var keys = __webpack_require__(6)
              ? gOPN(Base)
              : // ES3:
                (
                  'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
                  // ES6 (in case, if modules with ES6 Number statics required before):
                  'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
                  'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
                ).split(','),
            j = 0,
            key;
          keys.length > j;
          j++
        ) {
          if (has(Base, (key = keys[j])) && !has($Number, key)) {
            dP($Number, key, gOPD(Base, key));
          }
        }
        $Number.prototype = proto;
        proto.constructor = $Number;
        __webpack_require__(18)(global, NUMBER, $Number);
      }

      /***/
    },
    /* 87 */
    /***/ function(module, exports, __webpack_require__) {
      var isObject = __webpack_require__(13);
      var setPrototypeOf = __webpack_require__(72).set;
      module.exports = function(that, target, C) {
        var S = target.constructor;
        var P;
        if (
          S !== C &&
          typeof S == 'function' &&
          (P = S.prototype) !== C.prototype &&
          isObject(P) &&
          setPrototypeOf
        ) {
          setPrototypeOf(that, P);
        }
        return that;
      };

      /***/
    },
    /* 88 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var toInteger = __webpack_require__(38);
      var aNumberValue = __webpack_require__(89);
      var repeat = __webpack_require__(90);
      var $toFixed = (1.0).toFixed;
      var floor = Math.floor;
      var data = [0, 0, 0, 0, 0, 0];
      var ERROR = 'Number.toFixed: incorrect invocation!';
      var ZERO = '0';

      var multiply = function(n, c) {
        var i = -1;
        var c2 = c;
        while (++i < 6) {
          c2 += n * data[i];
          data[i] = c2 % 1e7;
          c2 = floor(c2 / 1e7);
        }
      };
      var divide = function(n) {
        var i = 6;
        var c = 0;
        while (--i >= 0) {
          c += data[i];
          data[i] = floor(c / n);
          c = (c % n) * 1e7;
        }
      };
      var numToString = function() {
        var i = 6;
        var s = '';
        while (--i >= 0) {
          if (s !== '' || i === 0 || data[i] !== 0) {
            var t = String(data[i]);
            s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
          }
        }
        return s;
      };
      var pow = function(x, n, acc) {
        return n === 0
          ? acc
          : n % 2 === 1
            ? pow(x, n - 1, acc * x)
            : pow(x * x, n / 2, acc);
      };
      var log = function(x) {
        var n = 0;
        var x2 = x;
        while (x2 >= 4096) {
          n += 12;
          x2 /= 4096;
        }
        while (x2 >= 2) {
          n += 1;
          x2 /= 2;
        }
        return n;
      };

      $export(
        $export.P +
          $export.F *
            ((!!$toFixed &&
              ((0.00008).toFixed(3) !== '0.000' ||
                (0.9).toFixed(0) !== '1' ||
                (1.255).toFixed(2) !== '1.25' ||
                (1000000000000000128.0).toFixed(0) !==
                  '1000000000000000128')) ||
              !__webpack_require__(7)(function() {
                // V8 ~ Android 4.3-
                $toFixed.call({});
              })),
        'Number',
        {
          toFixed: function toFixed(fractionDigits) {
            var x = aNumberValue(this, ERROR);
            var f = toInteger(fractionDigits);
            var s = '';
            var m = ZERO;
            var e, z, j, k;
            if (f < 0 || f > 20) throw RangeError(ERROR);
            // eslint-disable-next-line no-self-compare
            if (x != x) return 'NaN';
            if (x <= -1e21 || x >= 1e21) return String(x);
            if (x < 0) {
              s = '-';
              x = -x;
            }
            if (x > 1e-21) {
              e = log(x * pow(2, 69, 1)) - 69;
              z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
              z *= 0x10000000000000;
              e = 52 - e;
              if (e > 0) {
                multiply(0, z);
                j = f;
                while (j >= 7) {
                  multiply(1e7, 0);
                  j -= 7;
                }
                multiply(pow(10, j, 1), 0);
                j = e - 1;
                while (j >= 23) {
                  divide(1 << 23);
                  j -= 23;
                }
                divide(1 << j);
                multiply(1, 1);
                divide(2);
                m = numToString();
              } else {
                multiply(0, z);
                multiply(1 << -e, 0);
                m = numToString() + repeat.call(ZERO, f);
              }
            }
            if (f > 0) {
              k = m.length;
              m =
                s +
                (k <= f
                  ? '0.' + repeat.call(ZERO, f - k) + m
                  : m.slice(0, k - f) + '.' + m.slice(k - f));
            } else {
              m = s + m;
            }
            return m;
          }
        }
      );

      /***/
    },
    /* 89 */
    /***/ function(module, exports, __webpack_require__) {
      var cof = __webpack_require__(34);
      module.exports = function(it, msg) {
        if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
        return +it;
      };

      /***/
    },
    /* 90 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var toInteger = __webpack_require__(38);
      var defined = __webpack_require__(35);

      module.exports = function repeat(count) {
        var str = String(defined(this));
        var res = '';
        var n = toInteger(count);
        if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
        for (; n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
        return res;
      };

      /***/
    },
    /* 91 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var $fails = __webpack_require__(7);
      var aNumberValue = __webpack_require__(89);
      var $toPrecision = (1.0).toPrecision;

      $export(
        $export.P +
          $export.F *
            ($fails(function() {
              // IE7-
              return $toPrecision.call(1, undefined) !== '1';
            }) ||
              !$fails(function() {
                // V8 ~ Android 4.3-
                $toPrecision.call({});
              })),
        'Number',
        {
          toPrecision: function toPrecision(precision) {
            var that = aNumberValue(
              this,
              'Number#toPrecision: incorrect invocation!'
            );
            return precision === undefined
              ? $toPrecision.call(that)
              : $toPrecision.call(that, precision);
          }
        }
      );

      /***/
    },
    /* 92 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.1.2.1 Number.EPSILON
      var $export = __webpack_require__(8);

      $export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });

      /***/
    },
    /* 93 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.1.2.2 Number.isFinite(number)
      var $export = __webpack_require__(8);
      var _isFinite = __webpack_require__(4).isFinite;

      $export($export.S, 'Number', {
        isFinite: function isFinite(it) {
          return typeof it == 'number' && _isFinite(it);
        }
      });

      /***/
    },
    /* 94 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.1.2.3 Number.isInteger(number)
      var $export = __webpack_require__(8);

      $export($export.S, 'Number', { isInteger: __webpack_require__(95) });

      /***/
    },
    /* 95 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.1.2.3 Number.isInteger(number)
      var isObject = __webpack_require__(13);
      var floor = Math.floor;
      module.exports = function isInteger(it) {
        return !isObject(it) && isFinite(it) && floor(it) === it;
      };

      /***/
    },
    /* 96 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.1.2.4 Number.isNaN(number)
      var $export = __webpack_require__(8);

      $export($export.S, 'Number', {
        isNaN: function isNaN(number) {
          // eslint-disable-next-line no-self-compare
          return number != number;
        }
      });

      /***/
    },
    /* 97 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.1.2.5 Number.isSafeInteger(number)
      var $export = __webpack_require__(8);
      var isInteger = __webpack_require__(95);
      var abs = Math.abs;

      $export($export.S, 'Number', {
        isSafeInteger: function isSafeInteger(number) {
          return isInteger(number) && abs(number) <= 0x1fffffffffffff;
        }
      });

      /***/
    },
    /* 98 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.1.2.6 Number.MAX_SAFE_INTEGER
      var $export = __webpack_require__(8);

      $export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });

      /***/
    },
    /* 99 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.1.2.10 Number.MIN_SAFE_INTEGER
      var $export = __webpack_require__(8);

      $export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });

      /***/
    },
    /* 100 */
    /***/ function(module, exports, __webpack_require__) {
      var $export = __webpack_require__(8);
      var $parseFloat = __webpack_require__(85);
      // 20.1.2.12 Number.parseFloat(string)
      $export(
        $export.S + $export.F * (Number.parseFloat != $parseFloat),
        'Number',
        { parseFloat: $parseFloat }
      );

      /***/
    },
    /* 101 */
    /***/ function(module, exports, __webpack_require__) {
      var $export = __webpack_require__(8);
      var $parseInt = __webpack_require__(81);
      // 20.1.2.13 Number.parseInt(string, radix)
      $export(
        $export.S + $export.F * (Number.parseInt != $parseInt),
        'Number',
        { parseInt: $parseInt }
      );

      /***/
    },
    /* 102 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.3 Math.acosh(x)
      var $export = __webpack_require__(8);
      var log1p = __webpack_require__(103);
      var sqrt = Math.sqrt;
      var $acosh = Math.acosh;

      $export(
        $export.S +
          $export.F *
            !(
              $acosh &&
              // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
              Math.floor($acosh(Number.MAX_VALUE)) == 710 &&
              // Tor Browser bug: Math.acosh(Infinity) -> NaN
              $acosh(Infinity) == Infinity
            ),
        'Math',
        {
          acosh: function acosh(x) {
            return (x = +x) < 1
              ? NaN
              : x > 94906265.62425156
                ? Math.log(x) + Math.LN2
                : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
          }
        }
      );

      /***/
    },
    /* 103 */
    /***/ function(module, exports) {
      // 20.2.2.20 Math.log1p(x)
      module.exports =
        Math.log1p ||
        function log1p(x) {
          return (x = +x) > -1e-8 && x < 1e-8
            ? x - (x * x) / 2
            : Math.log(1 + x);
        };

      /***/
    },
    /* 104 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.5 Math.asinh(x)
      var $export = __webpack_require__(8);
      var $asinh = Math.asinh;

      function asinh(x) {
        return !isFinite((x = +x)) || x == 0
          ? x
          : x < 0
            ? -asinh(-x)
            : Math.log(x + Math.sqrt(x * x + 1));
      }

      // Tor Browser bug: Math.asinh(0) -> -0
      $export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {
        asinh: asinh
      });

      /***/
    },
    /* 105 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.7 Math.atanh(x)
      var $export = __webpack_require__(8);
      var $atanh = Math.atanh;

      // Tor Browser bug: Math.atanh(-0) -> 0
      $export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
        atanh: function atanh(x) {
          return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
        }
      });

      /***/
    },
    /* 106 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.9 Math.cbrt(x)
      var $export = __webpack_require__(8);
      var sign = __webpack_require__(107);

      $export($export.S, 'Math', {
        cbrt: function cbrt(x) {
          return sign((x = +x)) * Math.pow(Math.abs(x), 1 / 3);
        }
      });

      /***/
    },
    /* 107 */
    /***/ function(module, exports) {
      // 20.2.2.28 Math.sign(x)
      module.exports =
        Math.sign ||
        function sign(x) {
          // eslint-disable-next-line no-self-compare
          return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
        };

      /***/
    },
    /* 108 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.11 Math.clz32(x)
      var $export = __webpack_require__(8);

      $export($export.S, 'Math', {
        clz32: function clz32(x) {
          return (x >>>= 0)
            ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E)
            : 32;
        }
      });

      /***/
    },
    /* 109 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.12 Math.cosh(x)
      var $export = __webpack_require__(8);
      var exp = Math.exp;

      $export($export.S, 'Math', {
        cosh: function cosh(x) {
          return (exp((x = +x)) + exp(-x)) / 2;
        }
      });

      /***/
    },
    /* 110 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.14 Math.expm1(x)
      var $export = __webpack_require__(8);
      var $expm1 = __webpack_require__(111);

      $export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {
        expm1: $expm1
      });

      /***/
    },
    /* 111 */
    /***/ function(module, exports) {
      // 20.2.2.14 Math.expm1(x)
      var $expm1 = Math.expm1;
      module.exports =
        !$expm1 ||
        // Old FF bug
        $expm1(10) > 22025.465794806719 ||
        $expm1(10) < 22025.4657948067165168 ||
        // Tor Browser bug
        $expm1(-2e-17) != -2e-17
          ? function expm1(x) {
              return (x = +x) == 0
                ? x
                : x > -1e-6 && x < 1e-6
                  ? x + (x * x) / 2
                  : Math.exp(x) - 1;
            }
          : $expm1;

      /***/
    },
    /* 112 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.16 Math.fround(x)
      var $export = __webpack_require__(8);

      $export($export.S, 'Math', { fround: __webpack_require__(113) });

      /***/
    },
    /* 113 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.16 Math.fround(x)
      var sign = __webpack_require__(107);
      var pow = Math.pow;
      var EPSILON = pow(2, -52);
      var EPSILON32 = pow(2, -23);
      var MAX32 = pow(2, 127) * (2 - EPSILON32);
      var MIN32 = pow(2, -126);

      var roundTiesToEven = function(n) {
        return n + 1 / EPSILON - 1 / EPSILON;
      };

      module.exports =
        Math.fround ||
        function fround(x) {
          var $abs = Math.abs(x);
          var $sign = sign(x);
          var a, result;
          if ($abs < MIN32)
            return (
              $sign *
              roundTiesToEven($abs / MIN32 / EPSILON32) *
              MIN32 *
              EPSILON32
            );
          a = (1 + EPSILON32 / EPSILON) * $abs;
          result = a - (a - $abs);
          // eslint-disable-next-line no-self-compare
          if (result > MAX32 || result != result) return $sign * Infinity;
          return $sign * result;
        };

      /***/
    },
    /* 114 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
      var $export = __webpack_require__(8);
      var abs = Math.abs;

      $export($export.S, 'Math', {
        hypot: function hypot(value1, value2) {
          // eslint-disable-line no-unused-vars
          var sum = 0;
          var i = 0;
          var aLen = arguments.length;
          var larg = 0;
          var arg, div;
          while (i < aLen) {
            arg = abs(arguments[i++]);
            if (larg < arg) {
              div = larg / arg;
              sum = sum * div * div + 1;
              larg = arg;
            } else if (arg > 0) {
              div = arg / larg;
              sum += div * div;
            } else sum += arg;
          }
          return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
        }
      });

      /***/
    },
    /* 115 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.18 Math.imul(x, y)
      var $export = __webpack_require__(8);
      var $imul = Math.imul;

      // some WebKit versions fails with big numbers, some has wrong arity
      $export(
        $export.S +
          $export.F *
            __webpack_require__(7)(function() {
              return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
            }),
        'Math',
        {
          imul: function imul(x, y) {
            var UINT16 = 0xffff;
            var xn = +x;
            var yn = +y;
            var xl = UINT16 & xn;
            var yl = UINT16 & yn;
            return (
              0 |
              (xl * yl +
                ((((UINT16 & (xn >>> 16)) * yl + xl * (UINT16 & (yn >>> 16))) <<
                  16) >>>
                  0))
            );
          }
        }
      );

      /***/
    },
    /* 116 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.21 Math.log10(x)
      var $export = __webpack_require__(8);

      $export($export.S, 'Math', {
        log10: function log10(x) {
          return Math.log(x) * Math.LOG10E;
        }
      });

      /***/
    },
    /* 117 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.20 Math.log1p(x)
      var $export = __webpack_require__(8);

      $export($export.S, 'Math', { log1p: __webpack_require__(103) });

      /***/
    },
    /* 118 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.22 Math.log2(x)
      var $export = __webpack_require__(8);

      $export($export.S, 'Math', {
        log2: function log2(x) {
          return Math.log(x) / Math.LN2;
        }
      });

      /***/
    },
    /* 119 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.28 Math.sign(x)
      var $export = __webpack_require__(8);

      $export($export.S, 'Math', { sign: __webpack_require__(107) });

      /***/
    },
    /* 120 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.30 Math.sinh(x)
      var $export = __webpack_require__(8);
      var expm1 = __webpack_require__(111);
      var exp = Math.exp;

      // V8 near Chromium 38 has a problem with very small numbers
      $export(
        $export.S +
          $export.F *
            __webpack_require__(7)(function() {
              return !Math.sinh(-2e-17) != -2e-17;
            }),
        'Math',
        {
          sinh: function sinh(x) {
            return Math.abs((x = +x)) < 1
              ? (expm1(x) - expm1(-x)) / 2
              : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
          }
        }
      );

      /***/
    },
    /* 121 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.33 Math.tanh(x)
      var $export = __webpack_require__(8);
      var expm1 = __webpack_require__(111);
      var exp = Math.exp;

      $export($export.S, 'Math', {
        tanh: function tanh(x) {
          var a = expm1((x = +x));
          var b = expm1(-x);
          return a == Infinity
            ? 1
            : b == Infinity
              ? -1
              : (a - b) / (exp(x) + exp(-x));
        }
      });

      /***/
    },
    /* 122 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.2.2.34 Math.trunc(x)
      var $export = __webpack_require__(8);

      $export($export.S, 'Math', {
        trunc: function trunc(it) {
          return (it > 0 ? Math.floor : Math.ceil)(it);
        }
      });

      /***/
    },
    /* 123 */
    /***/ function(module, exports, __webpack_require__) {
      var $export = __webpack_require__(8);
      var toAbsoluteIndex = __webpack_require__(39);
      var fromCharCode = String.fromCharCode;
      var $fromCodePoint = String.fromCodePoint;

      // length should be 1, old FF problem
      $export(
        $export.S +
          $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1),
        'String',
        {
          // 21.1.2.2 String.fromCodePoint(...codePoints)
          fromCodePoint: function fromCodePoint(x) {
            // eslint-disable-line no-unused-vars
            var res = [];
            var aLen = arguments.length;
            var i = 0;
            var code;
            while (aLen > i) {
              code = +arguments[i++];
              if (toAbsoluteIndex(code, 0x10ffff) !== code)
                throw RangeError(code + ' is not a valid code point');
              res.push(
                code < 0x10000
                  ? fromCharCode(code)
                  : fromCharCode(
                      ((code -= 0x10000) >> 10) + 0xd800,
                      (code % 0x400) + 0xdc00
                    )
              );
            }
            return res.join('');
          }
        }
      );

      /***/
    },
    /* 124 */
    /***/ function(module, exports, __webpack_require__) {
      var $export = __webpack_require__(8);
      var toIObject = __webpack_require__(32);
      var toLength = __webpack_require__(37);

      $export($export.S, 'String', {
        // 21.1.2.4 String.raw(callSite, ...substitutions)
        raw: function raw(callSite) {
          var tpl = toIObject(callSite.raw);
          var len = toLength(tpl.length);
          var aLen = arguments.length;
          var res = [];
          var i = 0;
          while (len > i) {
            res.push(String(tpl[i++]));
            if (i < aLen) res.push(String(arguments[i]));
          }
          return res.join('');
        }
      });

      /***/
    },
    /* 125 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // 21.1.3.25 String.prototype.trim()
      __webpack_require__(82)('trim', function($trim) {
        return function trim() {
          return $trim(this, 3);
        };
      });

      /***/
    },
    /* 126 */
    [842, 127, 128],
    /* 127 */
    [843, 38, 35],
    /* 128 */
    [844, 24, 8, 18, 10, 129, 130, 25, 58, 26],
    /* 129 */
    /***/ function(module, exports) {
      module.exports = {};

      /***/
    },
    /* 130 */
    [845, 45, 17, 25, 10, 26],
    /* 131 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var $at = __webpack_require__(127)(false);
      $export($export.P, 'String', {
        // 21.1.3.3 String.prototype.codePointAt(pos)
        codePointAt: function codePointAt(pos) {
          return $at(this, pos);
        }
      });

      /***/
    },
    /* 132 */
    /***/ function(module, exports, __webpack_require__) {
      // 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
      'use strict';
      var $export = __webpack_require__(8);
      var toLength = __webpack_require__(37);
      var context = __webpack_require__(133);
      var ENDS_WITH = 'endsWith';
      var $endsWith = ''[ENDS_WITH];

      $export(
        $export.P + $export.F * __webpack_require__(135)(ENDS_WITH),
        'String',
        {
          endsWith: function endsWith(
            searchString /* , endPosition = @length */
          ) {
            var that = context(this, searchString, ENDS_WITH);
            var endPosition = arguments.length > 1 ? arguments[1] : undefined;
            var len = toLength(that.length);
            var end =
              endPosition === undefined
                ? len
                : Math.min(toLength(endPosition), len);
            var search = String(searchString);
            return $endsWith
              ? $endsWith.call(that, search, end)
              : that.slice(end - search.length, end) === search;
          }
        }
      );

      /***/
    },
    /* 133 */
    /***/ function(module, exports, __webpack_require__) {
      // helper for String#{startsWith, endsWith, includes}
      var isRegExp = __webpack_require__(134);
      var defined = __webpack_require__(35);

      module.exports = function(that, searchString, NAME) {
        if (isRegExp(searchString))
          throw TypeError('String#' + NAME + " doesn't accept regex!");
        return String(defined(that));
      };

      /***/
    },
    /* 134 */
    /***/ function(module, exports, __webpack_require__) {
      // 7.2.8 IsRegExp(argument)
      var isObject = __webpack_require__(13);
      var cof = __webpack_require__(34);
      var MATCH = __webpack_require__(26)('match');
      module.exports = function(it) {
        var isRegExp;
        return (
          isObject(it) &&
          ((isRegExp = it[MATCH]) !== undefined
            ? !!isRegExp
            : cof(it) == 'RegExp')
        );
      };

      /***/
    },
    /* 135 */
    /***/ function(module, exports, __webpack_require__) {
      var MATCH = __webpack_require__(26)('match');
      module.exports = function(KEY) {
        var re = /./;
        try {
          '/./'[KEY](re);
        } catch (e) {
          try {
            re[MATCH] = false;
            return !'/./'[KEY](re);
          } catch (f) {
            /* empty */
          }
        }
        return true;
      };

      /***/
    },
    /* 136 */
    /***/ function(module, exports, __webpack_require__) {
      // 21.1.3.7 String.prototype.includes(searchString, position = 0)
      'use strict';
      var $export = __webpack_require__(8);
      var context = __webpack_require__(133);
      var INCLUDES = 'includes';

      $export(
        $export.P + $export.F * __webpack_require__(135)(INCLUDES),
        'String',
        {
          includes: function includes(searchString /* , position = 0 */) {
            return !!~context(this, searchString, INCLUDES).indexOf(
              searchString,
              arguments.length > 1 ? arguments[1] : undefined
            );
          }
        }
      );

      /***/
    },
    /* 137 */
    /***/ function(module, exports, __webpack_require__) {
      var $export = __webpack_require__(8);

      $export($export.P, 'String', {
        // 21.1.3.13 String.prototype.repeat(count)
        repeat: __webpack_require__(90)
      });

      /***/
    },
    /* 138 */
    /***/ function(module, exports, __webpack_require__) {
      // 21.1.3.18 String.prototype.startsWith(searchString [, position ])
      'use strict';
      var $export = __webpack_require__(8);
      var toLength = __webpack_require__(37);
      var context = __webpack_require__(133);
      var STARTS_WITH = 'startsWith';
      var $startsWith = ''[STARTS_WITH];

      $export(
        $export.P + $export.F * __webpack_require__(135)(STARTS_WITH),
        'String',
        {
          startsWith: function startsWith(searchString /* , position = 0 */) {
            var that = context(this, searchString, STARTS_WITH);
            var index = toLength(
              Math.min(
                arguments.length > 1 ? arguments[1] : undefined,
                that.length
              )
            );
            var search = String(searchString);
            return $startsWith
              ? $startsWith.call(that, search, index)
              : that.slice(index, index + search.length) === search;
          }
        }
      );

      /***/
    },
    /* 139 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // B.2.3.2 String.prototype.anchor(name)
      __webpack_require__(140)('anchor', function(createHTML) {
        return function anchor(name) {
          return createHTML(this, 'a', 'name', name);
        };
      });

      /***/
    },
    /* 140 */
    /***/ function(module, exports, __webpack_require__) {
      var $export = __webpack_require__(8);
      var fails = __webpack_require__(7);
      var defined = __webpack_require__(35);
      var quot = /"/g;
      // B.2.3.2.1 CreateHTML(string, tag, attribute, value)
      var createHTML = function(string, tag, attribute, value) {
        var S = String(defined(string));
        var p1 = '<' + tag;
        if (attribute !== '')
          p1 +=
            ' ' +
            attribute +
            '="' +
            String(value).replace(quot, '&quot;') +
            '"';
        return p1 + '>' + S + '</' + tag + '>';
      };
      module.exports = function(NAME, exec) {
        var O = {};
        O[NAME] = exec(createHTML);
        $export(
          $export.P +
            $export.F *
              fails(function() {
                var test = ''[NAME]('"');
                return (
                  test !== test.toLowerCase() || test.split('"').length > 3
                );
              }),
          'String',
          O
        );
      };

      /***/
    },
    /* 141 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // B.2.3.3 String.prototype.big()
      __webpack_require__(140)('big', function(createHTML) {
        return function big() {
          return createHTML(this, 'big', '', '');
        };
      });

      /***/
    },
    /* 142 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // B.2.3.4 String.prototype.blink()
      __webpack_require__(140)('blink', function(createHTML) {
        return function blink() {
          return createHTML(this, 'blink', '', '');
        };
      });

      /***/
    },
    /* 143 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // B.2.3.5 String.prototype.bold()
      __webpack_require__(140)('bold', function(createHTML) {
        return function bold() {
          return createHTML(this, 'b', '', '');
        };
      });

      /***/
    },
    /* 144 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // B.2.3.6 String.prototype.fixed()
      __webpack_require__(140)('fixed', function(createHTML) {
        return function fixed() {
          return createHTML(this, 'tt', '', '');
        };
      });

      /***/
    },
    /* 145 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // B.2.3.7 String.prototype.fontcolor(color)
      __webpack_require__(140)('fontcolor', function(createHTML) {
        return function fontcolor(color) {
          return createHTML(this, 'font', 'color', color);
        };
      });

      /***/
    },
    /* 146 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // B.2.3.8 String.prototype.fontsize(size)
      __webpack_require__(140)('fontsize', function(createHTML) {
        return function fontsize(size) {
          return createHTML(this, 'font', 'size', size);
        };
      });

      /***/
    },
    /* 147 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // B.2.3.9 String.prototype.italics()
      __webpack_require__(140)('italics', function(createHTML) {
        return function italics() {
          return createHTML(this, 'i', '', '');
        };
      });

      /***/
    },
    /* 148 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // B.2.3.10 String.prototype.link(url)
      __webpack_require__(140)('link', function(createHTML) {
        return function link(url) {
          return createHTML(this, 'a', 'href', url);
        };
      });

      /***/
    },
    /* 149 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // B.2.3.11 String.prototype.small()
      __webpack_require__(140)('small', function(createHTML) {
        return function small() {
          return createHTML(this, 'small', '', '');
        };
      });

      /***/
    },
    /* 150 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // B.2.3.12 String.prototype.strike()
      __webpack_require__(140)('strike', function(createHTML) {
        return function strike() {
          return createHTML(this, 'strike', '', '');
        };
      });

      /***/
    },
    /* 151 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // B.2.3.13 String.prototype.sub()
      __webpack_require__(140)('sub', function(createHTML) {
        return function sub() {
          return createHTML(this, 'sub', '', '');
        };
      });

      /***/
    },
    /* 152 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // B.2.3.14 String.prototype.sup()
      __webpack_require__(140)('sup', function(createHTML) {
        return function sup() {
          return createHTML(this, 'sup', '', '');
        };
      });

      /***/
    },
    /* 153 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.3.3.1 / 15.9.4.4 Date.now()
      var $export = __webpack_require__(8);

      $export($export.S, 'Date', {
        now: function() {
          return new Date().getTime();
        }
      });

      /***/
    },
    /* 154 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var toObject = __webpack_require__(57);
      var toPrimitive = __webpack_require__(16);

      $export(
        $export.P +
          $export.F *
            __webpack_require__(7)(function() {
              return (
                new Date(NaN).toJSON() !== null ||
                Date.prototype.toJSON.call({
                  toISOString: function() {
                    return 1;
                  }
                }) !== 1
              );
            }),
        'Date',
        {
          // eslint-disable-next-line no-unused-vars
          toJSON: function toJSON(key) {
            var O = toObject(this);
            var pv = toPrimitive(O);
            return typeof pv == 'number' && !isFinite(pv)
              ? null
              : O.toISOString();
          }
        }
      );

      /***/
    },
    /* 155 */
    /***/ function(module, exports, __webpack_require__) {
      // 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
      var $export = __webpack_require__(8);
      var toISOString = __webpack_require__(156);

      // PhantomJS / old WebKit has a broken implementations
      $export(
        $export.P + $export.F * (Date.prototype.toISOString !== toISOString),
        'Date',
        {
          toISOString: toISOString
        }
      );

      /***/
    },
    /* 156 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
      var fails = __webpack_require__(7);
      var getTime = Date.prototype.getTime;
      var $toISOString = Date.prototype.toISOString;

      var lz = function(num) {
        return num > 9 ? num : '0' + num;
      };

      // PhantomJS / old WebKit has a broken implementations
      module.exports =
        fails(function() {
          return (
            $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z'
          );
        }) ||
        !fails(function() {
          $toISOString.call(new Date(NaN));
        })
          ? function toISOString() {
              if (!isFinite(getTime.call(this)))
                throw RangeError('Invalid time value');
              var d = this;
              var y = d.getUTCFullYear();
              var m = d.getUTCMilliseconds();
              var s = y < 0 ? '-' : y > 9999 ? '+' : '';
              return (
                s +
                ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
                '-' +
                lz(d.getUTCMonth() + 1) +
                '-' +
                lz(d.getUTCDate()) +
                'T' +
                lz(d.getUTCHours()) +
                ':' +
                lz(d.getUTCMinutes()) +
                ':' +
                lz(d.getUTCSeconds()) +
                '.' +
                (m > 99 ? m : '0' + lz(m)) +
                'Z'
              );
            }
          : $toISOString;

      /***/
    },
    /* 157 */
    /***/ function(module, exports, __webpack_require__) {
      var DateProto = Date.prototype;
      var INVALID_DATE = 'Invalid Date';
      var TO_STRING = 'toString';
      var $toString = DateProto[TO_STRING];
      var getTime = DateProto.getTime;
      if (new Date(NaN) + '' != INVALID_DATE) {
        __webpack_require__(18)(DateProto, TO_STRING, function toString() {
          var value = getTime.call(this);
          // eslint-disable-next-line no-self-compare
          return value === value ? $toString.call(this) : INVALID_DATE;
        });
      }

      /***/
    },
    /* 158 */
    /***/ function(module, exports, __webpack_require__) {
      var TO_PRIMITIVE = __webpack_require__(26)('toPrimitive');
      var proto = Date.prototype;

      if (!(TO_PRIMITIVE in proto))
        __webpack_require__(10)(proto, TO_PRIMITIVE, __webpack_require__(159));

      /***/
    },
    /* 159 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var anObject = __webpack_require__(12);
      var toPrimitive = __webpack_require__(16);
      var NUMBER = 'number';

      module.exports = function(hint) {
        if (hint !== 'string' && hint !== NUMBER && hint !== 'default')
          throw TypeError('Incorrect hint');
        return toPrimitive(anObject(this), hint != NUMBER);
      };

      /***/
    },
    /* 160 */
    /***/ function(module, exports, __webpack_require__) {
      // 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
      var $export = __webpack_require__(8);

      $export($export.S, 'Array', { isArray: __webpack_require__(44) });

      /***/
    },
    /* 161 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var ctx = __webpack_require__(20);
      var $export = __webpack_require__(8);
      var toObject = __webpack_require__(57);
      var call = __webpack_require__(162);
      var isArrayIter = __webpack_require__(163);
      var toLength = __webpack_require__(37);
      var createProperty = __webpack_require__(164);
      var getIterFn = __webpack_require__(165);

      $export(
        $export.S +
          $export.F *
            !__webpack_require__(166)(function(iter) {
              Array.from(iter);
            }),
        'Array',
        {
          // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
          from: function from(
            arrayLike /* , mapfn = undefined, thisArg = undefined */
          ) {
            var O = toObject(arrayLike);
            var C = typeof this == 'function' ? this : Array;
            var aLen = arguments.length;
            var mapfn = aLen > 1 ? arguments[1] : undefined;
            var mapping = mapfn !== undefined;
            var index = 0;
            var iterFn = getIterFn(O);
            var length, result, step, iterator;
            if (mapping)
              mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
            // if object isn't iterable or it's array with default iterator - use simple case
            if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
              for (
                iterator = iterFn.call(O), result = new C();
                !(step = iterator.next()).done;
                index++
              ) {
                createProperty(
                  result,
                  index,
                  mapping
                    ? call(iterator, mapfn, [step.value, index], true)
                    : step.value
                );
              }
            } else {
              length = toLength(O.length);
              for (result = new C(length); length > index; index++) {
                createProperty(
                  result,
                  index,
                  mapping ? mapfn(O[index], index) : O[index]
                );
              }
            }
            result.length = index;
            return result;
          }
        }
      );

      /***/
    },
    /* 162 */
    /***/ function(module, exports, __webpack_require__) {
      // call something on iterator step with safe closing on error
      var anObject = __webpack_require__(12);
      module.exports = function(iterator, fn, value, entries) {
        try {
          return entries ? fn(anObject(value)[0], value[1]) : fn(value);
          // 7.4.6 IteratorClose(iterator, completion)
        } catch (e) {
          var ret = iterator['return'];
          if (ret !== undefined) anObject(ret.call(iterator));
          throw e;
        }
      };

      /***/
    },
    /* 163 */
    /***/ function(module, exports, __webpack_require__) {
      // check on default Array iterator
      var Iterators = __webpack_require__(129);
      var ITERATOR = __webpack_require__(26)('iterator');
      var ArrayProto = Array.prototype;

      module.exports = function(it) {
        return (
          it !== undefined &&
          (Iterators.Array === it || ArrayProto[ITERATOR] === it)
        );
      };

      /***/
    },
    /* 164 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $defineProperty = __webpack_require__(11);
      var createDesc = __webpack_require__(17);

      module.exports = function(object, index, value) {
        if (index in object)
          $defineProperty.f(object, index, createDesc(0, value));
        else object[index] = value;
      };

      /***/
    },
    /* 165 */
    /***/ function(module, exports, __webpack_require__) {
      var classof = __webpack_require__(74);
      var ITERATOR = __webpack_require__(26)('iterator');
      var Iterators = __webpack_require__(129);
      module.exports = __webpack_require__(9).getIteratorMethod = function(it) {
        if (it != undefined)
          return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
      };

      /***/
    },
    /* 166 */
    /***/ function(module, exports, __webpack_require__) {
      var ITERATOR = __webpack_require__(26)('iterator');
      var SAFE_CLOSING = false;

      try {
        var riter = [7][ITERATOR]();
        riter['return'] = function() {
          SAFE_CLOSING = true;
        };
        // eslint-disable-next-line no-throw-literal
        Array.from(riter, function() {
          throw 2;
        });
      } catch (e) {
        /* empty */
      }

      module.exports = function(exec, skipClosing) {
        if (!skipClosing && !SAFE_CLOSING) return false;
        var safe = false;
        try {
          var arr = [7];
          var iter = arr[ITERATOR]();
          iter.next = function() {
            return { done: (safe = true) };
          };
          arr[ITERATOR] = function() {
            return iter;
          };
          exec(arr);
        } catch (e) {
          /* empty */
        }
        return safe;
      };

      /***/
    },
    /* 167 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var createProperty = __webpack_require__(164);

      // WebKit Array.of isn't generic
      $export(
        $export.S +
          $export.F *
            __webpack_require__(7)(function() {
              function F() {
                /* empty */
              }
              return !(Array.of.call(F) instanceof F);
            }),
        'Array',
        {
          // 22.1.2.3 Array.of( ...items)
          of: function of(/* ...args */) {
            var index = 0;
            var aLen = arguments.length;
            var result = new (typeof this == 'function' ? this : Array)(aLen);
            while (aLen > index)
              createProperty(result, index, arguments[index++]);
            result.length = aLen;
            return result;
          }
        }
      );

      /***/
    },
    /* 168 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // 22.1.3.13 Array.prototype.join(separator)
      var $export = __webpack_require__(8);
      var toIObject = __webpack_require__(32);
      var arrayJoin = [].join;

      // fallback for not array-like strings
      $export(
        $export.P +
          $export.F *
            (__webpack_require__(33) != Object ||
              !__webpack_require__(169)(arrayJoin)),
        'Array',
        {
          join: function join(separator) {
            return arrayJoin.call(
              toIObject(this),
              separator === undefined ? ',' : separator
            );
          }
        }
      );

      /***/
    },
    /* 169 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var fails = __webpack_require__(7);

      module.exports = function(method, arg) {
        return (
          !!method &&
          fails(function() {
            // eslint-disable-next-line no-useless-call
            arg
              ? method.call(
                  null,
                  function() {
                    /* empty */
                  },
                  1
                )
              : method.call(null);
          })
        );
      };

      /***/
    },
    /* 170 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var html = __webpack_require__(47);
      var cof = __webpack_require__(34);
      var toAbsoluteIndex = __webpack_require__(39);
      var toLength = __webpack_require__(37);
      var arraySlice = [].slice;

      // fallback for not array-like ES3 strings and DOM objects
      $export(
        $export.P +
          $export.F *
            __webpack_require__(7)(function() {
              if (html) arraySlice.call(html);
            }),
        'Array',
        {
          slice: function slice(begin, end) {
            var len = toLength(this.length);
            var klass = cof(this);
            end = end === undefined ? len : end;
            if (klass == 'Array') return arraySlice.call(this, begin, end);
            var start = toAbsoluteIndex(begin, len);
            var upTo = toAbsoluteIndex(end, len);
            var size = toLength(upTo - start);
            var cloned = new Array(size);
            var i = 0;
            for (; i < size; i++)
              cloned[i] =
                klass == 'String' ? this.charAt(start + i) : this[start + i];
            return cloned;
          }
        }
      );

      /***/
    },
    /* 171 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var aFunction = __webpack_require__(21);
      var toObject = __webpack_require__(57);
      var fails = __webpack_require__(7);
      var $sort = [].sort;
      var test = [1, 2, 3];

      $export(
        $export.P +
          $export.F *
            (fails(function() {
              // IE8-
              test.sort(undefined);
            }) ||
              !fails(function() {
                // V8 bug
                test.sort(null);
                // Old WebKit
              }) ||
              !__webpack_require__(169)($sort)),
        'Array',
        {
          // 22.1.3.25 Array.prototype.sort(comparefn)
          sort: function sort(comparefn) {
            return comparefn === undefined
              ? $sort.call(toObject(this))
              : $sort.call(toObject(this), aFunction(comparefn));
          }
        }
      );

      /***/
    },
    /* 172 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var $forEach = __webpack_require__(173)(0);
      var STRICT = __webpack_require__(169)([].forEach, true);

      $export($export.P + $export.F * !STRICT, 'Array', {
        // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
        forEach: function forEach(callbackfn /* , thisArg */) {
          return $forEach(this, callbackfn, arguments[1]);
        }
      });

      /***/
    },
    /* 173 */
    /***/ function(module, exports, __webpack_require__) {
      // 0 -> Array#forEach
      // 1 -> Array#map
      // 2 -> Array#filter
      // 3 -> Array#some
      // 4 -> Array#every
      // 5 -> Array#find
      // 6 -> Array#findIndex
      var ctx = __webpack_require__(20);
      var IObject = __webpack_require__(33);
      var toObject = __webpack_require__(57);
      var toLength = __webpack_require__(37);
      var asc = __webpack_require__(174);
      module.exports = function(TYPE, $create) {
        var IS_MAP = TYPE == 1;
        var IS_FILTER = TYPE == 2;
        var IS_SOME = TYPE == 3;
        var IS_EVERY = TYPE == 4;
        var IS_FIND_INDEX = TYPE == 6;
        var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
        var create = $create || asc;
        return function($this, callbackfn, that) {
          var O = toObject($this);
          var self = IObject(O);
          var f = ctx(callbackfn, that, 3);
          var length = toLength(self.length);
          var index = 0;
          var result = IS_MAP
            ? create($this, length)
            : IS_FILTER
              ? create($this, 0)
              : undefined;
          var val, res;
          for (; length > index; index++)
            if (NO_HOLES || index in self) {
              val = self[index];
              res = f(val, index, O);
              if (TYPE) {
                if (IS_MAP) result[index] = res;
                // map
                else if (res)
                  switch (TYPE) {
                    case 3:
                      return true; // some
                    case 5:
                      return val; // find
                    case 6:
                      return index; // findIndex
                    case 2:
                      result.push(val); // filter
                  }
                else if (IS_EVERY) return false; // every
              }
            }
          return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
        };
      };

      /***/
    },
    /* 174 */
    /***/ function(module, exports, __webpack_require__) {
      // 9.4.2.3 ArraySpeciesCreate(originalArray, length)
      var speciesConstructor = __webpack_require__(175);

      module.exports = function(original, length) {
        return new (speciesConstructor(original))(length);
      };

      /***/
    },
    /* 175 */
    /***/ function(module, exports, __webpack_require__) {
      var isObject = __webpack_require__(13);
      var isArray = __webpack_require__(44);
      var SPECIES = __webpack_require__(26)('species');

      module.exports = function(original) {
        var C;
        if (isArray(original)) {
          C = original.constructor;
          // cross-realm fallback
          if (typeof C == 'function' && (C === Array || isArray(C.prototype)))
            C = undefined;
          if (isObject(C)) {
            C = C[SPECIES];
            if (C === null) C = undefined;
          }
        }
        return C === undefined ? Array : C;
      };

      /***/
    },
    /* 176 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var $map = __webpack_require__(173)(1);

      $export(
        $export.P + $export.F * !__webpack_require__(169)([].map, true),
        'Array',
        {
          // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
          map: function map(callbackfn /* , thisArg */) {
            return $map(this, callbackfn, arguments[1]);
          }
        }
      );

      /***/
    },
    /* 177 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var $filter = __webpack_require__(173)(2);

      $export(
        $export.P + $export.F * !__webpack_require__(169)([].filter, true),
        'Array',
        {
          // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
          filter: function filter(callbackfn /* , thisArg */) {
            return $filter(this, callbackfn, arguments[1]);
          }
        }
      );

      /***/
    },
    /* 178 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var $some = __webpack_require__(173)(3);

      $export(
        $export.P + $export.F * !__webpack_require__(169)([].some, true),
        'Array',
        {
          // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
          some: function some(callbackfn /* , thisArg */) {
            return $some(this, callbackfn, arguments[1]);
          }
        }
      );

      /***/
    },
    /* 179 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var $every = __webpack_require__(173)(4);

      $export(
        $export.P + $export.F * !__webpack_require__(169)([].every, true),
        'Array',
        {
          // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
          every: function every(callbackfn /* , thisArg */) {
            return $every(this, callbackfn, arguments[1]);
          }
        }
      );

      /***/
    },
    /* 180 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var $reduce = __webpack_require__(181);

      $export(
        $export.P + $export.F * !__webpack_require__(169)([].reduce, true),
        'Array',
        {
          // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
          reduce: function reduce(callbackfn /* , initialValue */) {
            return $reduce(
              this,
              callbackfn,
              arguments.length,
              arguments[1],
              false
            );
          }
        }
      );

      /***/
    },
    /* 181 */
    /***/ function(module, exports, __webpack_require__) {
      var aFunction = __webpack_require__(21);
      var toObject = __webpack_require__(57);
      var IObject = __webpack_require__(33);
      var toLength = __webpack_require__(37);

      module.exports = function(that, callbackfn, aLen, memo, isRight) {
        aFunction(callbackfn);
        var O = toObject(that);
        var self = IObject(O);
        var length = toLength(O.length);
        var index = isRight ? length - 1 : 0;
        var i = isRight ? -1 : 1;
        if (aLen < 2)
          for (;;) {
            if (index in self) {
              memo = self[index];
              index += i;
              break;
            }
            index += i;
            if (isRight ? index < 0 : length <= index) {
              throw TypeError('Reduce of empty array with no initial value');
            }
          }
        for (; isRight ? index >= 0 : length > index; index += i)
          if (index in self) {
            memo = callbackfn(memo, self[index], index, O);
          }
        return memo;
      };

      /***/
    },
    /* 182 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var $reduce = __webpack_require__(181);

      $export(
        $export.P + $export.F * !__webpack_require__(169)([].reduceRight, true),
        'Array',
        {
          // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
          reduceRight: function reduceRight(callbackfn /* , initialValue */) {
            return $reduce(
              this,
              callbackfn,
              arguments.length,
              arguments[1],
              true
            );
          }
        }
      );

      /***/
    },
    /* 183 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var $indexOf = __webpack_require__(36)(false);
      var $native = [].indexOf;
      var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

      $export(
        $export.P +
          $export.F * (NEGATIVE_ZERO || !__webpack_require__(169)($native)),
        'Array',
        {
          // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
          indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
            return NEGATIVE_ZERO
              ? // convert -0 to +0
                $native.apply(this, arguments) || 0
              : $indexOf(this, searchElement, arguments[1]);
          }
        }
      );

      /***/
    },
    /* 184 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var toIObject = __webpack_require__(32);
      var toInteger = __webpack_require__(38);
      var toLength = __webpack_require__(37);
      var $native = [].lastIndexOf;
      var NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

      $export(
        $export.P +
          $export.F * (NEGATIVE_ZERO || !__webpack_require__(169)($native)),
        'Array',
        {
          // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
          lastIndexOf: function lastIndexOf(
            searchElement /* , fromIndex = @[*-1] */
          ) {
            // convert -0 to +0
            if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
            var O = toIObject(this);
            var length = toLength(O.length);
            var index = length - 1;
            if (arguments.length > 1)
              index = Math.min(index, toInteger(arguments[1]));
            if (index < 0) index = length + index;
            for (; index >= 0; index--)
              if (index in O) if (O[index] === searchElement) return index || 0;
            return -1;
          }
        }
      );

      /***/
    },
    /* 185 */
    /***/ function(module, exports, __webpack_require__) {
      // 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
      var $export = __webpack_require__(8);

      $export($export.P, 'Array', { copyWithin: __webpack_require__(186) });

      __webpack_require__(187)('copyWithin');

      /***/
    },
    /* 186 */
    /***/ function(module, exports, __webpack_require__) {
      // 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
      'use strict';
      var toObject = __webpack_require__(57);
      var toAbsoluteIndex = __webpack_require__(39);
      var toLength = __webpack_require__(37);

      module.exports =
        [].copyWithin ||
        function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
          var O = toObject(this);
          var len = toLength(O.length);
          var to = toAbsoluteIndex(target, len);
          var from = toAbsoluteIndex(start, len);
          var end = arguments.length > 2 ? arguments[2] : undefined;
          var count = Math.min(
            (end === undefined ? len : toAbsoluteIndex(end, len)) - from,
            len - to
          );
          var inc = 1;
          if (from < to && to < from + count) {
            inc = -1;
            from += count - 1;
            to += count - 1;
          }
          while (count-- > 0) {
            if (from in O) O[to] = O[from];
            else delete O[to];
            to += inc;
            from += inc;
          }
          return O;
        };

      /***/
    },
    /* 187 */
    /***/ function(module, exports, __webpack_require__) {
      // 22.1.3.31 Array.prototype[@@unscopables]
      var UNSCOPABLES = __webpack_require__(26)('unscopables');
      var ArrayProto = Array.prototype;
      if (ArrayProto[UNSCOPABLES] == undefined)
        __webpack_require__(10)(ArrayProto, UNSCOPABLES, {});
      module.exports = function(key) {
        ArrayProto[UNSCOPABLES][key] = true;
      };

      /***/
    },
    /* 188 */
    /***/ function(module, exports, __webpack_require__) {
      // 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
      var $export = __webpack_require__(8);

      $export($export.P, 'Array', { fill: __webpack_require__(189) });

      __webpack_require__(187)('fill');

      /***/
    },
    /* 189 */
    /***/ function(module, exports, __webpack_require__) {
      // 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
      'use strict';
      var toObject = __webpack_require__(57);
      var toAbsoluteIndex = __webpack_require__(39);
      var toLength = __webpack_require__(37);
      module.exports = function fill(value /* , start = 0, end = @length */) {
        var O = toObject(this);
        var length = toLength(O.length);
        var aLen = arguments.length;
        var index = toAbsoluteIndex(
          aLen > 1 ? arguments[1] : undefined,
          length
        );
        var end = aLen > 2 ? arguments[2] : undefined;
        var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
        while (endPos > index) O[index++] = value;
        return O;
      };

      /***/
    },
    /* 190 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
      var $export = __webpack_require__(8);
      var $find = __webpack_require__(173)(5);
      var KEY = 'find';
      var forced = true;
      // Shouldn't skip holes
      if (KEY in [])
        Array(1)[KEY](function() {
          forced = false;
        });
      $export($export.P + $export.F * forced, 'Array', {
        find: function find(callbackfn /* , that = undefined */) {
          return $find(
            this,
            callbackfn,
            arguments.length > 1 ? arguments[1] : undefined
          );
        }
      });
      __webpack_require__(187)(KEY);

      /***/
    },
    /* 191 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
      var $export = __webpack_require__(8);
      var $find = __webpack_require__(173)(6);
      var KEY = 'findIndex';
      var forced = true;
      // Shouldn't skip holes
      if (KEY in [])
        Array(1)[KEY](function() {
          forced = false;
        });
      $export($export.P + $export.F * forced, 'Array', {
        findIndex: function findIndex(callbackfn /* , that = undefined */) {
          return $find(
            this,
            callbackfn,
            arguments.length > 1 ? arguments[1] : undefined
          );
        }
      });
      __webpack_require__(187)(KEY);

      /***/
    },
    /* 192 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(193)('Array');

      /***/
    },
    /* 193 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var global = __webpack_require__(4);
      var dP = __webpack_require__(11);
      var DESCRIPTORS = __webpack_require__(6);
      var SPECIES = __webpack_require__(26)('species');

      module.exports = function(KEY) {
        var C = global[KEY];
        if (DESCRIPTORS && C && !C[SPECIES])
          dP.f(C, SPECIES, {
            configurable: true,
            get: function() {
              return this;
            }
          });
      };

      /***/
    },
    /* 194 */
    [846, 187, 195, 129, 32, 128],
    /* 195 */
    /***/ function(module, exports) {
      module.exports = function(done, value) {
        return { value: value, done: !!done };
      };

      /***/
    },
    /* 196 */
    /***/ function(module, exports, __webpack_require__) {
      var global = __webpack_require__(4);
      var inheritIfRequired = __webpack_require__(87);
      var dP = __webpack_require__(11).f;
      var gOPN = __webpack_require__(49).f;
      var isRegExp = __webpack_require__(134);
      var $flags = __webpack_require__(197);
      var $RegExp = global.RegExp;
      var Base = $RegExp;
      var proto = $RegExp.prototype;
      var re1 = /a/g;
      var re2 = /a/g;
      // "new" creates a new object, old webkit buggy here
      var CORRECT_NEW = new $RegExp(re1) !== re1;

      if (
        __webpack_require__(6) &&
        (!CORRECT_NEW ||
          __webpack_require__(7)(function() {
            re2[__webpack_require__(26)('match')] = false;
            // RegExp constructor can alter flags and IsRegExp works correct with @@match
            return (
              $RegExp(re1) != re1 ||
              $RegExp(re2) == re2 ||
              $RegExp(re1, 'i') != '/a/i'
            );
          }))
      ) {
        $RegExp = function RegExp(p, f) {
          var tiRE = this instanceof $RegExp;
          var piRE = isRegExp(p);
          var fiU = f === undefined;
          return !tiRE && piRE && p.constructor === $RegExp && fiU
            ? p
            : inheritIfRequired(
                CORRECT_NEW
                  ? new Base(piRE && !fiU ? p.source : p, f)
                  : Base(
                      (piRE = p instanceof $RegExp) ? p.source : p,
                      piRE && fiU ? $flags.call(p) : f
                    ),
                tiRE ? this : proto,
                $RegExp
              );
        };
        var proxy = function(key) {
          key in $RegExp ||
            dP($RegExp, key, {
              configurable: true,
              get: function() {
                return Base[key];
              },
              set: function(it) {
                Base[key] = it;
              }
            });
        };
        for (var keys = gOPN(Base), i = 0; keys.length > i; ) proxy(keys[i++]);
        proto.constructor = $RegExp;
        $RegExp.prototype = proto;
        __webpack_require__(18)(global, 'RegExp', $RegExp);
      }

      __webpack_require__(193)('RegExp');

      /***/
    },
    /* 197 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // 21.2.5.3 get RegExp.prototype.flags
      var anObject = __webpack_require__(12);
      module.exports = function() {
        var that = anObject(this);
        var result = '';
        if (that.global) result += 'g';
        if (that.ignoreCase) result += 'i';
        if (that.multiline) result += 'm';
        if (that.unicode) result += 'u';
        if (that.sticky) result += 'y';
        return result;
      };

      /***/
    },
    /* 198 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      __webpack_require__(199);
      var anObject = __webpack_require__(12);
      var $flags = __webpack_require__(197);
      var DESCRIPTORS = __webpack_require__(6);
      var TO_STRING = 'toString';
      var $toString = /./[TO_STRING];

      var define = function(fn) {
        __webpack_require__(18)(RegExp.prototype, TO_STRING, fn, true);
      };

      // 21.2.5.14 RegExp.prototype.toString()
      if (
        __webpack_require__(7)(function() {
          return $toString.call({ source: 'a', flags: 'b' }) != '/a/b';
        })
      ) {
        define(function toString() {
          var R = anObject(this);
          return '/'.concat(
            R.source,
            '/',
            'flags' in R
              ? R.flags
              : !DESCRIPTORS && R instanceof RegExp
                ? $flags.call(R)
                : undefined
          );
        });
        // FF44- RegExp#toString has a wrong name
      } else if ($toString.name != TO_STRING) {
        define(function toString() {
          return $toString.call(this);
        });
      }

      /***/
    },
    /* 199 */
    /***/ function(module, exports, __webpack_require__) {
      // 21.2.5.3 get RegExp.prototype.flags()
      if (__webpack_require__(6) && /./g.flags != 'g')
        __webpack_require__(11).f(RegExp.prototype, 'flags', {
          configurable: true,
          get: __webpack_require__(197)
        });

      /***/
    },
    /* 200 */
    /***/ function(module, exports, __webpack_require__) {
      // @@match logic
      __webpack_require__(201)('match', 1, function(defined, MATCH, $match) {
        // 21.1.3.11 String.prototype.match(regexp)
        return [
          function match(regexp) {
            'use strict';
            var O = defined(this);
            var fn = regexp == undefined ? undefined : regexp[MATCH];
            return fn !== undefined
              ? fn.call(regexp, O)
              : new RegExp(regexp)[MATCH](String(O));
          },
          $match
        ];
      });

      /***/
    },
    /* 201 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var hide = __webpack_require__(10);
      var redefine = __webpack_require__(18);
      var fails = __webpack_require__(7);
      var defined = __webpack_require__(35);
      var wks = __webpack_require__(26);

      module.exports = function(KEY, length, exec) {
        var SYMBOL = wks(KEY);
        var fns = exec(defined, SYMBOL, ''[KEY]);
        var strfn = fns[0];
        var rxfn = fns[1];
        if (
          fails(function() {
            var O = {};
            O[SYMBOL] = function() {
              return 7;
            };
            return ''[KEY](O) != 7;
          })
        ) {
          redefine(String.prototype, KEY, strfn);
          hide(
            RegExp.prototype,
            SYMBOL,
            length == 2
              ? // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
                // 21.2.5.11 RegExp.prototype[@@split](string, limit)
                function(string, arg) {
                  return rxfn.call(string, this, arg);
                }
              : // 21.2.5.6 RegExp.prototype[@@match](string)
                // 21.2.5.9 RegExp.prototype[@@search](string)
                function(string) {
                  return rxfn.call(string, this);
                }
          );
        }
      };

      /***/
    },
    /* 202 */
    /***/ function(module, exports, __webpack_require__) {
      // @@replace logic
      __webpack_require__(201)('replace', 2, function(
        defined,
        REPLACE,
        $replace
      ) {
        // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
        return [
          function replace(searchValue, replaceValue) {
            'use strict';
            var O = defined(this);
            var fn =
              searchValue == undefined ? undefined : searchValue[REPLACE];
            return fn !== undefined
              ? fn.call(searchValue, O, replaceValue)
              : $replace.call(String(O), searchValue, replaceValue);
          },
          $replace
        ];
      });

      /***/
    },
    /* 203 */
    /***/ function(module, exports, __webpack_require__) {
      // @@search logic
      __webpack_require__(201)('search', 1, function(defined, SEARCH, $search) {
        // 21.1.3.15 String.prototype.search(regexp)
        return [
          function search(regexp) {
            'use strict';
            var O = defined(this);
            var fn = regexp == undefined ? undefined : regexp[SEARCH];
            return fn !== undefined
              ? fn.call(regexp, O)
              : new RegExp(regexp)[SEARCH](String(O));
          },
          $search
        ];
      });

      /***/
    },
    /* 204 */
    /***/ function(module, exports, __webpack_require__) {
      // @@split logic
      __webpack_require__(201)('split', 2, function(defined, SPLIT, $split) {
        'use strict';
        var isRegExp = __webpack_require__(134);
        var _split = $split;
        var $push = [].push;
        var $SPLIT = 'split';
        var LENGTH = 'length';
        var LAST_INDEX = 'lastIndex';
        if (
          'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
          'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
          'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
          '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
          '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
          ''[$SPLIT](/.?/)[LENGTH]
        ) {
          var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
          // based on es5-shim implementation, need to rework it
          $split = function(separator, limit) {
            var string = String(this);
            if (separator === undefined && limit === 0) return [];
            // If `separator` is not a regex, use native split
            if (!isRegExp(separator))
              return _split.call(string, separator, limit);
            var output = [];
            var flags =
              (separator.ignoreCase ? 'i' : '') +
              (separator.multiline ? 'm' : '') +
              (separator.unicode ? 'u' : '') +
              (separator.sticky ? 'y' : '');
            var lastLastIndex = 0;
            var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
            // Make `global` and avoid `lastIndex` issues by working with a copy
            var separatorCopy = new RegExp(separator.source, flags + 'g');
            var separator2, match, lastIndex, lastLength, i;
            // Doesn't need flags gy, but they don't hurt
            if (!NPCG)
              separator2 = new RegExp(
                '^' + separatorCopy.source + '$(?!\\s)',
                flags
              );
            while ((match = separatorCopy.exec(string))) {
              // `separatorCopy.lastIndex` is not reliable cross-browser
              lastIndex = match.index + match[0][LENGTH];
              if (lastIndex > lastLastIndex) {
                output.push(string.slice(lastLastIndex, match.index));
                // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
                // eslint-disable-next-line no-loop-func
                if (!NPCG && match[LENGTH] > 1)
                  match[0].replace(separator2, function() {
                    for (i = 1; i < arguments[LENGTH] - 2; i++)
                      if (arguments[i] === undefined) match[i] = undefined;
                  });
                if (match[LENGTH] > 1 && match.index < string[LENGTH])
                  $push.apply(output, match.slice(1));
                lastLength = match[0][LENGTH];
                lastLastIndex = lastIndex;
                if (output[LENGTH] >= splitLimit) break;
              }
              if (separatorCopy[LAST_INDEX] === match.index)
                separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
            }
            if (lastLastIndex === string[LENGTH]) {
              if (lastLength || !separatorCopy.test('')) output.push('');
            } else output.push(string.slice(lastLastIndex));
            return output[LENGTH] > splitLimit
              ? output.slice(0, splitLimit)
              : output;
          };
          // Chakra, V8
        } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
          $split = function(separator, limit) {
            return separator === undefined && limit === 0
              ? []
              : _split.call(this, separator, limit);
          };
        }
        // 21.1.3.17 String.prototype.split(separator, limit)
        return [
          function split(separator, limit) {
            var O = defined(this);
            var fn = separator == undefined ? undefined : separator[SPLIT];
            return fn !== undefined
              ? fn.call(separator, O, limit)
              : $split.call(String(O), separator, limit);
          },
          $split
        ];
      });

      /***/
    },
    /* 205 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var LIBRARY = __webpack_require__(24);
      var global = __webpack_require__(4);
      var ctx = __webpack_require__(20);
      var classof = __webpack_require__(74);
      var $export = __webpack_require__(8);
      var isObject = __webpack_require__(13);
      var aFunction = __webpack_require__(21);
      var anInstance = __webpack_require__(206);
      var forOf = __webpack_require__(207);
      var speciesConstructor = __webpack_require__(208);
      var task = __webpack_require__(209).set;
      var microtask = __webpack_require__(210)();
      var newPromiseCapabilityModule = __webpack_require__(211);
      var perform = __webpack_require__(212);
      var userAgent = __webpack_require__(213);
      var promiseResolve = __webpack_require__(214);
      var PROMISE = 'Promise';
      var TypeError = global.TypeError;
      var process = global.process;
      var versions = process && process.versions;
      var v8 = (versions && versions.v8) || '';
      var $Promise = global[PROMISE];
      var isNode = classof(process) == 'process';
      var empty = function() {
        /* empty */
      };
      var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
      var newPromiseCapability = (newGenericPromiseCapability =
        newPromiseCapabilityModule.f);

      var USE_NATIVE = !!(function() {
        try {
          // correct subclassing with @@species support
          var promise = $Promise.resolve(1);
          var FakePromise = ((promise.constructor = {})[
            __webpack_require__(26)('species')
          ] = function(exec) {
            exec(empty, empty);
          });
          // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
          return (
            (isNode || typeof PromiseRejectionEvent == 'function') &&
            promise.then(empty) instanceof FakePromise &&
            // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
            // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
            // we can't detect it synchronously, so just check versions
            v8.indexOf('6.6') !== 0 &&
            userAgent.indexOf('Chrome/66') === -1
          );
        } catch (e) {
          /* empty */
        }
      })();

      // helpers
      var isThenable = function(it) {
        var then;
        return isObject(it) && typeof (then = it.then) == 'function'
          ? then
          : false;
      };
      var notify = function(promise, isReject) {
        if (promise._n) return;
        promise._n = true;
        var chain = promise._c;
        microtask(function() {
          var value = promise._v;
          var ok = promise._s == 1;
          var i = 0;
          var run = function(reaction) {
            var handler = ok ? reaction.ok : reaction.fail;
            var resolve = reaction.resolve;
            var reject = reaction.reject;
            var domain = reaction.domain;
            var result, then, exited;
            try {
              if (handler) {
                if (!ok) {
                  if (promise._h == 2) onHandleUnhandled(promise);
                  promise._h = 1;
                }
                if (handler === true) result = value;
                else {
                  if (domain) domain.enter();
                  result = handler(value); // may throw
                  if (domain) {
                    domain.exit();
                    exited = true;
                  }
                }
                if (result === reaction.promise) {
                  reject(TypeError('Promise-chain cycle'));
                } else if ((then = isThenable(result))) {
                  then.call(result, resolve, reject);
                } else resolve(result);
              } else reject(value);
            } catch (e) {
              if (domain && !exited) domain.exit();
              reject(e);
            }
          };
          while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
          promise._c = [];
          promise._n = false;
          if (isReject && !promise._h) onUnhandled(promise);
        });
      };
      var onUnhandled = function(promise) {
        task.call(global, function() {
          var value = promise._v;
          var unhandled = isUnhandled(promise);
          var result, handler, console;
          if (unhandled) {
            result = perform(function() {
              if (isNode) {
                process.emit('unhandledRejection', value, promise);
              } else if ((handler = global.onunhandledrejection)) {
                handler({ promise: promise, reason: value });
              } else if ((console = global.console) && console.error) {
                console.error('Unhandled promise rejection', value);
              }
            });
            // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
            promise._h = isNode || isUnhandled(promise) ? 2 : 1;
          }
          promise._a = undefined;
          if (unhandled && result.e) throw result.v;
        });
      };
      var isUnhandled = function(promise) {
        return promise._h !== 1 && (promise._a || promise._c).length === 0;
      };
      var onHandleUnhandled = function(promise) {
        task.call(global, function() {
          var handler;
          if (isNode) {
            process.emit('rejectionHandled', promise);
          } else if ((handler = global.onrejectionhandled)) {
            handler({ promise: promise, reason: promise._v });
          }
        });
      };
      var $reject = function(value) {
        var promise = this;
        if (promise._d) return;
        promise._d = true;
        promise = promise._w || promise; // unwrap
        promise._v = value;
        promise._s = 2;
        if (!promise._a) promise._a = promise._c.slice();
        notify(promise, true);
      };
      var $resolve = function(value) {
        var promise = this;
        var then;
        if (promise._d) return;
        promise._d = true;
        promise = promise._w || promise; // unwrap
        try {
          if (promise === value)
            throw TypeError("Promise can't be resolved itself");
          if ((then = isThenable(value))) {
            microtask(function() {
              var wrapper = { _w: promise, _d: false }; // wrap
              try {
                then.call(
                  value,
                  ctx($resolve, wrapper, 1),
                  ctx($reject, wrapper, 1)
                );
              } catch (e) {
                $reject.call(wrapper, e);
              }
            });
          } else {
            promise._v = value;
            promise._s = 1;
            notify(promise, false);
          }
        } catch (e) {
          $reject.call({ _w: promise, _d: false }, e); // wrap
        }
      };

      // constructor polyfill
      if (!USE_NATIVE) {
        // 25.4.3.1 Promise(executor)
        $Promise = function Promise(executor) {
          anInstance(this, $Promise, PROMISE, '_h');
          aFunction(executor);
          Internal.call(this);
          try {
            executor(ctx($resolve, this, 1), ctx($reject, this, 1));
          } catch (err) {
            $reject.call(this, err);
          }
        };
        // eslint-disable-next-line no-unused-vars
        Internal = function Promise(executor) {
          this._c = []; // <- awaiting reactions
          this._a = undefined; // <- checked in isUnhandled reactions
          this._s = 0; // <- state
          this._d = false; // <- done
          this._v = undefined; // <- value
          this._h = 0; // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
          this._n = false; // <- notify
        };
        Internal.prototype = __webpack_require__(215)($Promise.prototype, {
          // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
          then: function then(onFulfilled, onRejected) {
            var reaction = newPromiseCapability(
              speciesConstructor(this, $Promise)
            );
            reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
            reaction.fail = typeof onRejected == 'function' && onRejected;
            reaction.domain = isNode ? process.domain : undefined;
            this._c.push(reaction);
            if (this._a) this._a.push(reaction);
            if (this._s) notify(this, false);
            return reaction.promise;
          },
          // 25.4.5.1 Promise.prototype.catch(onRejected)
          catch: function(onRejected) {
            return this.then(undefined, onRejected);
          }
        });
        OwnPromiseCapability = function() {
          var promise = new Internal();
          this.promise = promise;
          this.resolve = ctx($resolve, promise, 1);
          this.reject = ctx($reject, promise, 1);
        };
        newPromiseCapabilityModule.f = newPromiseCapability = function(C) {
          return C === $Promise || C === Wrapper
            ? new OwnPromiseCapability(C)
            : newGenericPromiseCapability(C);
        };
      }

      $export($export.G + $export.W + $export.F * !USE_NATIVE, {
        Promise: $Promise
      });
      __webpack_require__(25)($Promise, PROMISE);
      __webpack_require__(193)(PROMISE);
      Wrapper = __webpack_require__(9)[PROMISE];

      // statics
      $export($export.S + $export.F * !USE_NATIVE, PROMISE, {
        // 25.4.4.5 Promise.reject(r)
        reject: function reject(r) {
          var capability = newPromiseCapability(this);
          var $$reject = capability.reject;
          $$reject(r);
          return capability.promise;
        }
      });
      $export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
        // 25.4.4.6 Promise.resolve(x)
        resolve: function resolve(x) {
          return promiseResolve(
            LIBRARY && this === Wrapper ? $Promise : this,
            x
          );
        }
      });
      $export(
        $export.S +
          $export.F *
            !(
              USE_NATIVE &&
              __webpack_require__(166)(function(iter) {
                $Promise.all(iter)['catch'](empty);
              })
            ),
        PROMISE,
        {
          // 25.4.4.1 Promise.all(iterable)
          all: function all(iterable) {
            var C = this;
            var capability = newPromiseCapability(C);
            var resolve = capability.resolve;
            var reject = capability.reject;
            var result = perform(function() {
              var values = [];
              var index = 0;
              var remaining = 1;
              forOf(iterable, false, function(promise) {
                var $index = index++;
                var alreadyCalled = false;
                values.push(undefined);
                remaining++;
                C.resolve(promise).then(function(value) {
                  if (alreadyCalled) return;
                  alreadyCalled = true;
                  values[$index] = value;
                  --remaining || resolve(values);
                }, reject);
              });
              --remaining || resolve(values);
            });
            if (result.e) reject(result.v);
            return capability.promise;
          },
          // 25.4.4.4 Promise.race(iterable)
          race: function race(iterable) {
            var C = this;
            var capability = newPromiseCapability(C);
            var reject = capability.reject;
            var result = perform(function() {
              forOf(iterable, false, function(promise) {
                C.resolve(promise).then(capability.resolve, reject);
              });
            });
            if (result.e) reject(result.v);
            return capability.promise;
          }
        }
      );

      /***/
    },
    /* 206 */
    /***/ function(module, exports) {
      module.exports = function(it, Constructor, name, forbiddenField) {
        if (
          !(it instanceof Constructor) ||
          (forbiddenField !== undefined && forbiddenField in it)
        ) {
          throw TypeError(name + ': incorrect invocation!');
        }
        return it;
      };

      /***/
    },
    /* 207 */
    /***/ function(module, exports, __webpack_require__) {
      var ctx = __webpack_require__(20);
      var call = __webpack_require__(162);
      var isArrayIter = __webpack_require__(163);
      var anObject = __webpack_require__(12);
      var toLength = __webpack_require__(37);
      var getIterFn = __webpack_require__(165);
      var BREAK = {};
      var RETURN = {};
      var exports = (module.exports = function(
        iterable,
        entries,
        fn,
        that,
        ITERATOR
      ) {
        var iterFn = ITERATOR
          ? function() {
              return iterable;
            }
          : getIterFn(iterable);
        var f = ctx(fn, that, entries ? 2 : 1);
        var index = 0;
        var length, step, iterator, result;
        if (typeof iterFn != 'function')
          throw TypeError(iterable + ' is not iterable!');
        // fast case for arrays with default iterator
        if (isArrayIter(iterFn))
          for (length = toLength(iterable.length); length > index; index++) {
            result = entries
              ? f(anObject((step = iterable[index]))[0], step[1])
              : f(iterable[index]);
            if (result === BREAK || result === RETURN) return result;
          }
        else
          for (
            iterator = iterFn.call(iterable);
            !(step = iterator.next()).done;

          ) {
            result = call(iterator, f, step.value, entries);
            if (result === BREAK || result === RETURN) return result;
          }
      });
      exports.BREAK = BREAK;
      exports.RETURN = RETURN;

      /***/
    },
    /* 208 */
    /***/ function(module, exports, __webpack_require__) {
      // 7.3.20 SpeciesConstructor(O, defaultConstructor)
      var anObject = __webpack_require__(12);
      var aFunction = __webpack_require__(21);
      var SPECIES = __webpack_require__(26)('species');
      module.exports = function(O, D) {
        var C = anObject(O).constructor;
        var S;
        return C === undefined || (S = anObject(C)[SPECIES]) == undefined
          ? D
          : aFunction(S);
      };

      /***/
    },
    /* 209 */
    /***/ function(module, exports, __webpack_require__) {
      var ctx = __webpack_require__(20);
      var invoke = __webpack_require__(77);
      var html = __webpack_require__(47);
      var cel = __webpack_require__(15);
      var global = __webpack_require__(4);
      var process = global.process;
      var setTask = global.setImmediate;
      var clearTask = global.clearImmediate;
      var MessageChannel = global.MessageChannel;
      var Dispatch = global.Dispatch;
      var counter = 0;
      var queue = {};
      var ONREADYSTATECHANGE = 'onreadystatechange';
      var defer, channel, port;
      var run = function() {
        var id = +this;
        // eslint-disable-next-line no-prototype-builtins
        if (queue.hasOwnProperty(id)) {
          var fn = queue[id];
          delete queue[id];
          fn();
        }
      };
      var listener = function(event) {
        run.call(event.data);
      };
      // Node.js 0.9+ & IE10+ has setImmediate, otherwise:
      if (!setTask || !clearTask) {
        setTask = function setImmediate(fn) {
          var args = [];
          var i = 1;
          while (arguments.length > i) args.push(arguments[i++]);
          queue[++counter] = function() {
            // eslint-disable-next-line no-new-func
            invoke(typeof fn == 'function' ? fn : Function(fn), args);
          };
          defer(counter);
          return counter;
        };
        clearTask = function clearImmediate(id) {
          delete queue[id];
        };
        // Node.js 0.8-
        if (__webpack_require__(34)(process) == 'process') {
          defer = function(id) {
            process.nextTick(ctx(run, id, 1));
          };
          // Sphere (JS game engine) Dispatch API
        } else if (Dispatch && Dispatch.now) {
          defer = function(id) {
            Dispatch.now(ctx(run, id, 1));
          };
          // Browsers with MessageChannel, includes WebWorkers
        } else if (MessageChannel) {
          channel = new MessageChannel();
          port = channel.port2;
          channel.port1.onmessage = listener;
          defer = ctx(port.postMessage, port, 1);
          // Browsers with postMessage, skip WebWorkers
          // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
        } else if (
          global.addEventListener &&
          typeof postMessage == 'function' &&
          !global.importScripts
        ) {
          defer = function(id) {
            global.postMessage(id + '', '*');
          };
          global.addEventListener('message', listener, false);
          // IE8-
        } else if (ONREADYSTATECHANGE in cel('script')) {
          defer = function(id) {
            html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function() {
              html.removeChild(this);
              run.call(id);
            };
          };
          // Rest old browsers
        } else {
          defer = function(id) {
            setTimeout(ctx(run, id, 1), 0);
          };
        }
      }
      module.exports = {
        set: setTask,
        clear: clearTask
      };

      /***/
    },
    /* 210 */
    /***/ function(module, exports, __webpack_require__) {
      var global = __webpack_require__(4);
      var macrotask = __webpack_require__(209).set;
      var Observer = global.MutationObserver || global.WebKitMutationObserver;
      var process = global.process;
      var Promise = global.Promise;
      var isNode = __webpack_require__(34)(process) == 'process';

      module.exports = function() {
        var head, last, notify;

        var flush = function() {
          var parent, fn;
          if (isNode && (parent = process.domain)) parent.exit();
          while (head) {
            fn = head.fn;
            head = head.next;
            try {
              fn();
            } catch (e) {
              if (head) notify();
              else last = undefined;
              throw e;
            }
          }
          last = undefined;
          if (parent) parent.enter();
        };

        // Node.js
        if (isNode) {
          notify = function() {
            process.nextTick(flush);
          };
          // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
        } else if (
          Observer &&
          !(global.navigator && global.navigator.standalone)
        ) {
          var toggle = true;
          var node = document.createTextNode('');
          new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
          notify = function() {
            node.data = toggle = !toggle;
          };
          // environments with maybe non-completely correct, but existent Promise
        } else if (Promise && Promise.resolve) {
          // Promise.resolve without an argument throws an error in LG WebOS 2
          var promise = Promise.resolve(undefined);
          notify = function() {
            promise.then(flush);
          };
          // for other environments - macrotask based on:
          // - setImmediate
          // - MessageChannel
          // - window.postMessag
          // - onreadystatechange
          // - setTimeout
        } else {
          notify = function() {
            // strange IE + webpack dev server bug - use .call(global)
            macrotask.call(global, flush);
          };
        }

        return function(fn) {
          var task = { fn: fn, next: undefined };
          if (last) last.next = task;
          if (!head) {
            head = task;
            notify();
          }
          last = task;
        };
      };

      /***/
    },
    /* 211 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // 25.4.1.5 NewPromiseCapability(C)
      var aFunction = __webpack_require__(21);

      function PromiseCapability(C) {
        var resolve, reject;
        this.promise = new C(function($$resolve, $$reject) {
          if (resolve !== undefined || reject !== undefined)
            throw TypeError('Bad Promise constructor');
          resolve = $$resolve;
          reject = $$reject;
        });
        this.resolve = aFunction(resolve);
        this.reject = aFunction(reject);
      }

      module.exports.f = function(C) {
        return new PromiseCapability(C);
      };

      /***/
    },
    /* 212 */
    /***/ function(module, exports) {
      module.exports = function(exec) {
        try {
          return { e: false, v: exec() };
        } catch (e) {
          return { e: true, v: e };
        }
      };

      /***/
    },
    /* 213 */
    /***/ function(module, exports, __webpack_require__) {
      var global = __webpack_require__(4);
      var navigator = global.navigator;

      module.exports = (navigator && navigator.userAgent) || '';

      /***/
    },
    /* 214 */
    /***/ function(module, exports, __webpack_require__) {
      var anObject = __webpack_require__(12);
      var isObject = __webpack_require__(13);
      var newPromiseCapability = __webpack_require__(211);

      module.exports = function(C, x) {
        anObject(C);
        if (isObject(x) && x.constructor === C) return x;
        var promiseCapability = newPromiseCapability.f(C);
        var resolve = promiseCapability.resolve;
        resolve(x);
        return promiseCapability.promise;
      };

      /***/
    },
    /* 215 */
    /***/ function(module, exports, __webpack_require__) {
      var redefine = __webpack_require__(18);
      module.exports = function(target, src, safe) {
        for (var key in src) redefine(target, key, src[key], safe);
        return target;
      };

      /***/
    },
    /* 216 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var strong = __webpack_require__(217);
      var validate = __webpack_require__(218);
      var MAP = 'Map';

      // 23.1 Map Objects
      module.exports = __webpack_require__(219)(
        MAP,
        function(get) {
          return function Map() {
            return get(this, arguments.length > 0 ? arguments[0] : undefined);
          };
        },
        {
          // 23.1.3.6 Map.prototype.get(key)
          get: function get(key) {
            var entry = strong.getEntry(validate(this, MAP), key);
            return entry && entry.v;
          },
          // 23.1.3.9 Map.prototype.set(key, value)
          set: function set(key, value) {
            return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
          }
        },
        strong,
        true
      );

      /***/
    },
    /* 217 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var dP = __webpack_require__(11).f;
      var create = __webpack_require__(45);
      var redefineAll = __webpack_require__(215);
      var ctx = __webpack_require__(20);
      var anInstance = __webpack_require__(206);
      var forOf = __webpack_require__(207);
      var $iterDefine = __webpack_require__(128);
      var step = __webpack_require__(195);
      var setSpecies = __webpack_require__(193);
      var DESCRIPTORS = __webpack_require__(6);
      var fastKey = __webpack_require__(22).fastKey;
      var validate = __webpack_require__(218);
      var SIZE = DESCRIPTORS ? '_s' : 'size';

      var getEntry = function(that, key) {
        // fast case
        var index = fastKey(key);
        var entry;
        if (index !== 'F') return that._i[index];
        // frozen object case
        for (entry = that._f; entry; entry = entry.n) {
          if (entry.k == key) return entry;
        }
      };

      module.exports = {
        getConstructor: function(wrapper, NAME, IS_MAP, ADDER) {
          var C = wrapper(function(that, iterable) {
            anInstance(that, C, NAME, '_i');
            that._t = NAME; // collection type
            that._i = create(null); // index
            that._f = undefined; // first entry
            that._l = undefined; // last entry
            that[SIZE] = 0; // size
            if (iterable != undefined)
              forOf(iterable, IS_MAP, that[ADDER], that);
          });
          redefineAll(C.prototype, {
            // 23.1.3.1 Map.prototype.clear()
            // 23.2.3.2 Set.prototype.clear()
            clear: function clear() {
              for (
                var that = validate(this, NAME),
                  data = that._i,
                  entry = that._f;
                entry;
                entry = entry.n
              ) {
                entry.r = true;
                if (entry.p) entry.p = entry.p.n = undefined;
                delete data[entry.i];
              }
              that._f = that._l = undefined;
              that[SIZE] = 0;
            },
            // 23.1.3.3 Map.prototype.delete(key)
            // 23.2.3.4 Set.prototype.delete(value)
            delete: function(key) {
              var that = validate(this, NAME);
              var entry = getEntry(that, key);
              if (entry) {
                var next = entry.n;
                var prev = entry.p;
                delete that._i[entry.i];
                entry.r = true;
                if (prev) prev.n = next;
                if (next) next.p = prev;
                if (that._f == entry) that._f = next;
                if (that._l == entry) that._l = prev;
                that[SIZE]--;
              }
              return !!entry;
            },
            // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
            // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
            forEach: function forEach(callbackfn /* , that = undefined */) {
              validate(this, NAME);
              var f = ctx(
                callbackfn,
                arguments.length > 1 ? arguments[1] : undefined,
                3
              );
              var entry;
              while ((entry = entry ? entry.n : this._f)) {
                f(entry.v, entry.k, this);
                // revert to the last existing entry
                while (entry && entry.r) entry = entry.p;
              }
            },
            // 23.1.3.7 Map.prototype.has(key)
            // 23.2.3.7 Set.prototype.has(value)
            has: function has(key) {
              return !!getEntry(validate(this, NAME), key);
            }
          });
          if (DESCRIPTORS)
            dP(C.prototype, 'size', {
              get: function() {
                return validate(this, NAME)[SIZE];
              }
            });
          return C;
        },
        def: function(that, key, value) {
          var entry = getEntry(that, key);
          var prev, index;
          // change existing entry
          if (entry) {
            entry.v = value;
            // create new entry
          } else {
            that._l = entry = {
              i: (index = fastKey(key, true)), // <- index
              k: key, // <- key
              v: value, // <- value
              p: (prev = that._l), // <- previous entry
              n: undefined, // <- next entry
              r: false // <- removed
            };
            if (!that._f) that._f = entry;
            if (prev) prev.n = entry;
            that[SIZE]++;
            // add to index
            if (index !== 'F') that._i[index] = entry;
          }
          return that;
        },
        getEntry: getEntry,
        setStrong: function(C, NAME, IS_MAP) {
          // add .keys, .values, .entries, [@@iterator]
          // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
          $iterDefine(
            C,
            NAME,
            function(iterated, kind) {
              this._t = validate(iterated, NAME); // target
              this._k = kind; // kind
              this._l = undefined; // previous
            },
            function() {
              var that = this;
              var kind = that._k;
              var entry = that._l;
              // revert to the last existing entry
              while (entry && entry.r) entry = entry.p;
              // get next entry
              if (
                !that._t ||
                !(that._l = entry = entry ? entry.n : that._t._f)
              ) {
                // or finish the iteration
                that._t = undefined;
                return step(1);
              }
              // return step by kind
              if (kind == 'keys') return step(0, entry.k);
              if (kind == 'values') return step(0, entry.v);
              return step(0, [entry.k, entry.v]);
            },
            IS_MAP ? 'entries' : 'values',
            !IS_MAP,
            true
          );

          // add [@@species], 23.1.2.2, 23.2.2.2
          setSpecies(NAME);
        }
      };

      /***/
    },
    /* 218 */
    /***/ function(module, exports, __webpack_require__) {
      var isObject = __webpack_require__(13);
      module.exports = function(it, TYPE) {
        if (!isObject(it) || it._t !== TYPE)
          throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
        return it;
      };

      /***/
    },
    /* 219 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var global = __webpack_require__(4);
      var $export = __webpack_require__(8);
      var redefine = __webpack_require__(18);
      var redefineAll = __webpack_require__(215);
      var meta = __webpack_require__(22);
      var forOf = __webpack_require__(207);
      var anInstance = __webpack_require__(206);
      var isObject = __webpack_require__(13);
      var fails = __webpack_require__(7);
      var $iterDetect = __webpack_require__(166);
      var setToStringTag = __webpack_require__(25);
      var inheritIfRequired = __webpack_require__(87);

      module.exports = function(
        NAME,
        wrapper,
        methods,
        common,
        IS_MAP,
        IS_WEAK
      ) {
        var Base = global[NAME];
        var C = Base;
        var ADDER = IS_MAP ? 'set' : 'add';
        var proto = C && C.prototype;
        var O = {};
        var fixMethod = function(KEY) {
          var fn = proto[KEY];
          redefine(
            proto,
            KEY,
            KEY == 'delete'
              ? function(a) {
                  return IS_WEAK && !isObject(a)
                    ? false
                    : fn.call(this, a === 0 ? 0 : a);
                }
              : KEY == 'has'
                ? function has(a) {
                    return IS_WEAK && !isObject(a)
                      ? false
                      : fn.call(this, a === 0 ? 0 : a);
                  }
                : KEY == 'get'
                  ? function get(a) {
                      return IS_WEAK && !isObject(a)
                        ? undefined
                        : fn.call(this, a === 0 ? 0 : a);
                    }
                  : KEY == 'add'
                    ? function add(a) {
                        fn.call(this, a === 0 ? 0 : a);
                        return this;
                      }
                    : function set(a, b) {
                        fn.call(this, a === 0 ? 0 : a, b);
                        return this;
                      }
          );
        };
        if (
          typeof C != 'function' ||
          !(
            IS_WEAK ||
            (proto.forEach &&
              !fails(function() {
                new C().entries().next();
              }))
          )
        ) {
          // create collection constructor
          C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
          redefineAll(C.prototype, methods);
          meta.NEED = true;
        } else {
          var instance = new C();
          // early implementations not supports chaining
          var HASNT_CHAINING =
            instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
          // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
          var THROWS_ON_PRIMITIVES = fails(function() {
            instance.has(1);
          });
          // most early implementations doesn't supports iterables, most modern - not close it correctly
          var ACCEPT_ITERABLES = $iterDetect(function(iter) {
            new C(iter);
          }); // eslint-disable-line no-new
          // for early implementations -0 and +0 not the same
          var BUGGY_ZERO =
            !IS_WEAK &&
            fails(function() {
              // V8 ~ Chromium 42- fails only with 5+ elements
              var $instance = new C();
              var index = 5;
              while (index--) $instance[ADDER](index, index);
              return !$instance.has(-0);
            });
          if (!ACCEPT_ITERABLES) {
            C = wrapper(function(target, iterable) {
              anInstance(target, C, NAME);
              var that = inheritIfRequired(new Base(), target, C);
              if (iterable != undefined)
                forOf(iterable, IS_MAP, that[ADDER], that);
              return that;
            });
            C.prototype = proto;
            proto.constructor = C;
          }
          if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
            fixMethod('delete');
            fixMethod('has');
            IS_MAP && fixMethod('get');
          }
          if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
          // weak collections should not contains .clear method
          if (IS_WEAK && proto.clear) delete proto.clear;
        }

        setToStringTag(C, NAME);

        O[NAME] = C;
        $export($export.G + $export.W + $export.F * (C != Base), O);

        if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

        return C;
      };

      /***/
    },
    /* 220 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var strong = __webpack_require__(217);
      var validate = __webpack_require__(218);
      var SET = 'Set';

      // 23.2 Set Objects
      module.exports = __webpack_require__(219)(
        SET,
        function(get) {
          return function Set() {
            return get(this, arguments.length > 0 ? arguments[0] : undefined);
          };
        },
        {
          // 23.2.3.1 Set.prototype.add(value)
          add: function add(value) {
            return strong.def(
              validate(this, SET),
              (value = value === 0 ? 0 : value),
              value
            );
          }
        },
        strong
      );

      /***/
    },
    /* 221 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var each = __webpack_require__(173)(0);
      var redefine = __webpack_require__(18);
      var meta = __webpack_require__(22);
      var assign = __webpack_require__(68);
      var weak = __webpack_require__(222);
      var isObject = __webpack_require__(13);
      var fails = __webpack_require__(7);
      var validate = __webpack_require__(218);
      var WEAK_MAP = 'WeakMap';
      var getWeak = meta.getWeak;
      var isExtensible = Object.isExtensible;
      var uncaughtFrozenStore = weak.ufstore;
      var tmp = {};
      var InternalMap;

      var wrapper = function(get) {
        return function WeakMap() {
          return get(this, arguments.length > 0 ? arguments[0] : undefined);
        };
      };

      var methods = {
        // 23.3.3.3 WeakMap.prototype.get(key)
        get: function get(key) {
          if (isObject(key)) {
            var data = getWeak(key);
            if (data === true)
              return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
            return data ? data[this._i] : undefined;
          }
        },
        // 23.3.3.5 WeakMap.prototype.set(key, value)
        set: function set(key, value) {
          return weak.def(validate(this, WEAK_MAP), key, value);
        }
      };

      // 23.3 WeakMap Objects
      var $WeakMap = (module.exports = __webpack_require__(219)(
        WEAK_MAP,
        wrapper,
        methods,
        weak,
        true,
        true
      ));

      // IE11 WeakMap frozen keys fix
      if (
        fails(function() {
          return (
            new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7
          );
        })
      ) {
        InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
        assign(InternalMap.prototype, methods);
        meta.NEED = true;
        each(['delete', 'has', 'get', 'set'], function(key) {
          var proto = $WeakMap.prototype;
          var method = proto[key];
          redefine(proto, key, function(a, b) {
            // store frozen objects on internal weakmap shim
            if (isObject(a) && !isExtensible(a)) {
              if (!this._f) this._f = new InternalMap();
              var result = this._f[key](a, b);
              return key == 'set' ? this : result;
              // store all the rest on native weakmap
            }
            return method.call(this, a, b);
          });
        });
      }

      /***/
    },
    /* 222 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var redefineAll = __webpack_require__(215);
      var getWeak = __webpack_require__(22).getWeak;
      var anObject = __webpack_require__(12);
      var isObject = __webpack_require__(13);
      var anInstance = __webpack_require__(206);
      var forOf = __webpack_require__(207);
      var createArrayMethod = __webpack_require__(173);
      var $has = __webpack_require__(5);
      var validate = __webpack_require__(218);
      var arrayFind = createArrayMethod(5);
      var arrayFindIndex = createArrayMethod(6);
      var id = 0;

      // fallback for uncaught frozen keys
      var uncaughtFrozenStore = function(that) {
        return that._l || (that._l = new UncaughtFrozenStore());
      };
      var UncaughtFrozenStore = function() {
        this.a = [];
      };
      var findUncaughtFrozen = function(store, key) {
        return arrayFind(store.a, function(it) {
          return it[0] === key;
        });
      };
      UncaughtFrozenStore.prototype = {
        get: function(key) {
          var entry = findUncaughtFrozen(this, key);
          if (entry) return entry[1];
        },
        has: function(key) {
          return !!findUncaughtFrozen(this, key);
        },
        set: function(key, value) {
          var entry = findUncaughtFrozen(this, key);
          if (entry) entry[1] = value;
          else this.a.push([key, value]);
        },
        delete: function(key) {
          var index = arrayFindIndex(this.a, function(it) {
            return it[0] === key;
          });
          if (~index) this.a.splice(index, 1);
          return !!~index;
        }
      };

      module.exports = {
        getConstructor: function(wrapper, NAME, IS_MAP, ADDER) {
          var C = wrapper(function(that, iterable) {
            anInstance(that, C, NAME, '_i');
            that._t = NAME; // collection type
            that._i = id++; // collection id
            that._l = undefined; // leak store for uncaught frozen objects
            if (iterable != undefined)
              forOf(iterable, IS_MAP, that[ADDER], that);
          });
          redefineAll(C.prototype, {
            // 23.3.3.2 WeakMap.prototype.delete(key)
            // 23.4.3.3 WeakSet.prototype.delete(value)
            delete: function(key) {
              if (!isObject(key)) return false;
              var data = getWeak(key);
              if (data === true)
                return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
              return data && $has(data, this._i) && delete data[this._i];
            },
            // 23.3.3.4 WeakMap.prototype.has(key)
            // 23.4.3.4 WeakSet.prototype.has(value)
            has: function has(key) {
              if (!isObject(key)) return false;
              var data = getWeak(key);
              if (data === true)
                return uncaughtFrozenStore(validate(this, NAME)).has(key);
              return data && $has(data, this._i);
            }
          });
          return C;
        },
        def: function(that, key, value) {
          var data = getWeak(anObject(key), true);
          if (data === true) uncaughtFrozenStore(that).set(key, value);
          else data[that._i] = value;
          return that;
        },
        ufstore: uncaughtFrozenStore
      };

      /***/
    },
    /* 223 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var weak = __webpack_require__(222);
      var validate = __webpack_require__(218);
      var WEAK_SET = 'WeakSet';

      // 23.4 WeakSet Objects
      __webpack_require__(219)(
        WEAK_SET,
        function(get) {
          return function WeakSet() {
            return get(this, arguments.length > 0 ? arguments[0] : undefined);
          };
        },
        {
          // 23.4.3.1 WeakSet.prototype.add(value)
          add: function add(value) {
            return weak.def(validate(this, WEAK_SET), value, true);
          }
        },
        weak,
        false,
        true
      );

      /***/
    },
    /* 224 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var $typed = __webpack_require__(225);
      var buffer = __webpack_require__(226);
      var anObject = __webpack_require__(12);
      var toAbsoluteIndex = __webpack_require__(39);
      var toLength = __webpack_require__(37);
      var isObject = __webpack_require__(13);
      var ArrayBuffer = __webpack_require__(4).ArrayBuffer;
      var speciesConstructor = __webpack_require__(208);
      var $ArrayBuffer = buffer.ArrayBuffer;
      var $DataView = buffer.DataView;
      var $isView = $typed.ABV && ArrayBuffer.isView;
      var $slice = $ArrayBuffer.prototype.slice;
      var VIEW = $typed.VIEW;
      var ARRAY_BUFFER = 'ArrayBuffer';

      $export(
        $export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer),
        { ArrayBuffer: $ArrayBuffer }
      );

      $export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
        // 24.1.3.1 ArrayBuffer.isView(arg)
        isView: function isView(it) {
          return ($isView && $isView(it)) || (isObject(it) && VIEW in it);
        }
      });

      $export(
        $export.P +
          $export.U +
          $export.F *
            __webpack_require__(7)(function() {
              return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
            }),
        ARRAY_BUFFER,
        {
          // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
          slice: function slice(start, end) {
            if ($slice !== undefined && end === undefined)
              return $slice.call(anObject(this), start); // FF fix
            var len = anObject(this).byteLength;
            var first = toAbsoluteIndex(start, len);
            var fin = toAbsoluteIndex(end === undefined ? len : end, len);
            var result = new (speciesConstructor(this, $ArrayBuffer))(
              toLength(fin - first)
            );
            var viewS = new $DataView(this);
            var viewT = new $DataView(result);
            var index = 0;
            while (first < fin) {
              viewT.setUint8(index++, viewS.getUint8(first++));
            }
            return result;
          }
        }
      );

      __webpack_require__(193)(ARRAY_BUFFER);

      /***/
    },
    /* 225 */
    /***/ function(module, exports, __webpack_require__) {
      var global = __webpack_require__(4);
      var hide = __webpack_require__(10);
      var uid = __webpack_require__(19);
      var TYPED = uid('typed_array');
      var VIEW = uid('view');
      var ABV = !!(global.ArrayBuffer && global.DataView);
      var CONSTR = ABV;
      var i = 0;
      var l = 9;
      var Typed;

      var TypedArrayConstructors = 'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'.split(
        ','
      );

      while (i < l) {
        if ((Typed = global[TypedArrayConstructors[i++]])) {
          hide(Typed.prototype, TYPED, true);
          hide(Typed.prototype, VIEW, true);
        } else CONSTR = false;
      }

      module.exports = {
        ABV: ABV,
        CONSTR: CONSTR,
        TYPED: TYPED,
        VIEW: VIEW
      };

      /***/
    },
    /* 226 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var global = __webpack_require__(4);
      var DESCRIPTORS = __webpack_require__(6);
      var LIBRARY = __webpack_require__(24);
      var $typed = __webpack_require__(225);
      var hide = __webpack_require__(10);
      var redefineAll = __webpack_require__(215);
      var fails = __webpack_require__(7);
      var anInstance = __webpack_require__(206);
      var toInteger = __webpack_require__(38);
      var toLength = __webpack_require__(37);
      var toIndex = __webpack_require__(227);
      var gOPN = __webpack_require__(49).f;
      var dP = __webpack_require__(11).f;
      var arrayFill = __webpack_require__(189);
      var setToStringTag = __webpack_require__(25);
      var ARRAY_BUFFER = 'ArrayBuffer';
      var DATA_VIEW = 'DataView';
      var PROTOTYPE = 'prototype';
      var WRONG_LENGTH = 'Wrong length!';
      var WRONG_INDEX = 'Wrong index!';
      var $ArrayBuffer = global[ARRAY_BUFFER];
      var $DataView = global[DATA_VIEW];
      var Math = global.Math;
      var RangeError = global.RangeError;
      // eslint-disable-next-line no-shadow-restricted-names
      var Infinity = global.Infinity;
      var BaseBuffer = $ArrayBuffer;
      var abs = Math.abs;
      var pow = Math.pow;
      var floor = Math.floor;
      var log = Math.log;
      var LN2 = Math.LN2;
      var BUFFER = 'buffer';
      var BYTE_LENGTH = 'byteLength';
      var BYTE_OFFSET = 'byteOffset';
      var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
      var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
      var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

      // IEEE754 conversions based on https://github.com/feross/ieee754
      function packIEEE754(value, mLen, nBytes) {
        var buffer = new Array(nBytes);
        var eLen = nBytes * 8 - mLen - 1;
        var eMax = (1 << eLen) - 1;
        var eBias = eMax >> 1;
        var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
        var i = 0;
        var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;
        var e, m, c;
        value = abs(value);
        // eslint-disable-next-line no-self-compare
        if (value != value || value === Infinity) {
          // eslint-disable-next-line no-self-compare
          m = value != value ? 1 : 0;
          e = eMax;
        } else {
          e = floor(log(value) / LN2);
          if (value * (c = pow(2, -e)) < 1) {
            e--;
            c *= 2;
          }
          if (e + eBias >= 1) {
            value += rt / c;
          } else {
            value += rt * pow(2, 1 - eBias);
          }
          if (value * c >= 2) {
            e++;
            c /= 2;
          }
          if (e + eBias >= eMax) {
            m = 0;
            e = eMax;
          } else if (e + eBias >= 1) {
            m = (value * c - 1) * pow(2, mLen);
            e = e + eBias;
          } else {
            m = value * pow(2, eBias - 1) * pow(2, mLen);
            e = 0;
          }
        }
        for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
        e = (e << mLen) | m;
        eLen += mLen;
        for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
        buffer[--i] |= s * 128;
        return buffer;
      }
      function unpackIEEE754(buffer, mLen, nBytes) {
        var eLen = nBytes * 8 - mLen - 1;
        var eMax = (1 << eLen) - 1;
        var eBias = eMax >> 1;
        var nBits = eLen - 7;
        var i = nBytes - 1;
        var s = buffer[i--];
        var e = s & 127;
        var m;
        s >>= 7;
        for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
        m = e & ((1 << -nBits) - 1);
        e >>= -nBits;
        nBits += mLen;
        for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
        if (e === 0) {
          e = 1 - eBias;
        } else if (e === eMax) {
          return m ? NaN : s ? -Infinity : Infinity;
        } else {
          m = m + pow(2, mLen);
          e = e - eBias;
        }
        return (s ? -1 : 1) * m * pow(2, e - mLen);
      }

      function unpackI32(bytes) {
        return (bytes[3] << 24) | (bytes[2] << 16) | (bytes[1] << 8) | bytes[0];
      }
      function packI8(it) {
        return [it & 0xff];
      }
      function packI16(it) {
        return [it & 0xff, (it >> 8) & 0xff];
      }
      function packI32(it) {
        return [
          it & 0xff,
          (it >> 8) & 0xff,
          (it >> 16) & 0xff,
          (it >> 24) & 0xff
        ];
      }
      function packF64(it) {
        return packIEEE754(it, 52, 8);
      }
      function packF32(it) {
        return packIEEE754(it, 23, 4);
      }

      function addGetter(C, key, internal) {
        dP(C[PROTOTYPE], key, {
          get: function() {
            return this[internal];
          }
        });
      }

      function get(view, bytes, index, isLittleEndian) {
        var numIndex = +index;
        var intIndex = toIndex(numIndex);
        if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
        var store = view[$BUFFER]._b;
        var start = intIndex + view[$OFFSET];
        var pack = store.slice(start, start + bytes);
        return isLittleEndian ? pack : pack.reverse();
      }
      function set(view, bytes, index, conversion, value, isLittleEndian) {
        var numIndex = +index;
        var intIndex = toIndex(numIndex);
        if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
        var store = view[$BUFFER]._b;
        var start = intIndex + view[$OFFSET];
        var pack = conversion(+value);
        for (var i = 0; i < bytes; i++)
          store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
      }

      if (!$typed.ABV) {
        $ArrayBuffer = function ArrayBuffer(length) {
          anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
          var byteLength = toIndex(length);
          this._b = arrayFill.call(new Array(byteLength), 0);
          this[$LENGTH] = byteLength;
        };

        $DataView = function DataView(buffer, byteOffset, byteLength) {
          anInstance(this, $DataView, DATA_VIEW);
          anInstance(buffer, $ArrayBuffer, DATA_VIEW);
          var bufferLength = buffer[$LENGTH];
          var offset = toInteger(byteOffset);
          if (offset < 0 || offset > bufferLength)
            throw RangeError('Wrong offset!');
          byteLength =
            byteLength === undefined
              ? bufferLength - offset
              : toLength(byteLength);
          if (offset + byteLength > bufferLength)
            throw RangeError(WRONG_LENGTH);
          this[$BUFFER] = buffer;
          this[$OFFSET] = offset;
          this[$LENGTH] = byteLength;
        };

        if (DESCRIPTORS) {
          addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
          addGetter($DataView, BUFFER, '_b');
          addGetter($DataView, BYTE_LENGTH, '_l');
          addGetter($DataView, BYTE_OFFSET, '_o');
        }

        redefineAll($DataView[PROTOTYPE], {
          getInt8: function getInt8(byteOffset) {
            return (get(this, 1, byteOffset)[0] << 24) >> 24;
          },
          getUint8: function getUint8(byteOffset) {
            return get(this, 1, byteOffset)[0];
          },
          getInt16: function getInt16(byteOffset /* , littleEndian */) {
            var bytes = get(this, 2, byteOffset, arguments[1]);
            return (((bytes[1] << 8) | bytes[0]) << 16) >> 16;
          },
          getUint16: function getUint16(byteOffset /* , littleEndian */) {
            var bytes = get(this, 2, byteOffset, arguments[1]);
            return (bytes[1] << 8) | bytes[0];
          },
          getInt32: function getInt32(byteOffset /* , littleEndian */) {
            return unpackI32(get(this, 4, byteOffset, arguments[1]));
          },
          getUint32: function getUint32(byteOffset /* , littleEndian */) {
            return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
          },
          getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
            return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
          },
          getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
            return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
          },
          setInt8: function setInt8(byteOffset, value) {
            set(this, 1, byteOffset, packI8, value);
          },
          setUint8: function setUint8(byteOffset, value) {
            set(this, 1, byteOffset, packI8, value);
          },
          setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
            set(this, 2, byteOffset, packI16, value, arguments[2]);
          },
          setUint16: function setUint16(
            byteOffset,
            value /* , littleEndian */
          ) {
            set(this, 2, byteOffset, packI16, value, arguments[2]);
          },
          setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
            set(this, 4, byteOffset, packI32, value, arguments[2]);
          },
          setUint32: function setUint32(
            byteOffset,
            value /* , littleEndian */
          ) {
            set(this, 4, byteOffset, packI32, value, arguments[2]);
          },
          setFloat32: function setFloat32(
            byteOffset,
            value /* , littleEndian */
          ) {
            set(this, 4, byteOffset, packF32, value, arguments[2]);
          },
          setFloat64: function setFloat64(
            byteOffset,
            value /* , littleEndian */
          ) {
            set(this, 8, byteOffset, packF64, value, arguments[2]);
          }
        });
      } else {
        if (
          !fails(function() {
            $ArrayBuffer(1);
          }) ||
          !fails(function() {
            new $ArrayBuffer(-1); // eslint-disable-line no-new
          }) ||
          fails(function() {
            new $ArrayBuffer(); // eslint-disable-line no-new
            new $ArrayBuffer(1.5); // eslint-disable-line no-new
            new $ArrayBuffer(NaN); // eslint-disable-line no-new
            return $ArrayBuffer.name != ARRAY_BUFFER;
          })
        ) {
          $ArrayBuffer = function ArrayBuffer(length) {
            anInstance(this, $ArrayBuffer);
            return new BaseBuffer(toIndex(length));
          };
          var ArrayBufferProto = ($ArrayBuffer[PROTOTYPE] =
            BaseBuffer[PROTOTYPE]);
          for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ) {
            if (!((key = keys[j++]) in $ArrayBuffer))
              hide($ArrayBuffer, key, BaseBuffer[key]);
          }
          if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
        }
        // iOS Safari 7.x bug
        var view = new $DataView(new $ArrayBuffer(2));
        var $setInt8 = $DataView[PROTOTYPE].setInt8;
        view.setInt8(0, 2147483648);
        view.setInt8(1, 2147483649);
        if (view.getInt8(0) || !view.getInt8(1))
          redefineAll(
            $DataView[PROTOTYPE],
            {
              setInt8: function setInt8(byteOffset, value) {
                $setInt8.call(this, byteOffset, (value << 24) >> 24);
              },
              setUint8: function setUint8(byteOffset, value) {
                $setInt8.call(this, byteOffset, (value << 24) >> 24);
              }
            },
            true
          );
      }
      setToStringTag($ArrayBuffer, ARRAY_BUFFER);
      setToStringTag($DataView, DATA_VIEW);
      hide($DataView[PROTOTYPE], $typed.VIEW, true);
      exports[ARRAY_BUFFER] = $ArrayBuffer;
      exports[DATA_VIEW] = $DataView;

      /***/
    },
    /* 227 */
    /***/ function(module, exports, __webpack_require__) {
      // https://tc39.github.io/ecma262/#sec-toindex
      var toInteger = __webpack_require__(38);
      var toLength = __webpack_require__(37);
      module.exports = function(it) {
        if (it === undefined) return 0;
        var number = toInteger(it);
        var length = toLength(number);
        if (number !== length) throw RangeError('Wrong length!');
        return length;
      };

      /***/
    },
    /* 228 */
    /***/ function(module, exports, __webpack_require__) {
      var $export = __webpack_require__(8);
      $export(
        $export.G + $export.W + $export.F * !__webpack_require__(225).ABV,
        {
          DataView: __webpack_require__(226).DataView
        }
      );

      /***/
    },
    /* 229 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(230)('Int8', 1, function(init) {
        return function Int8Array(data, byteOffset, length) {
          return init(this, data, byteOffset, length);
        };
      });

      /***/
    },
    /* 230 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      if (__webpack_require__(6)) {
        var LIBRARY = __webpack_require__(24);
        var global = __webpack_require__(4);
        var fails = __webpack_require__(7);
        var $export = __webpack_require__(8);
        var $typed = __webpack_require__(225);
        var $buffer = __webpack_require__(226);
        var ctx = __webpack_require__(20);
        var anInstance = __webpack_require__(206);
        var propertyDesc = __webpack_require__(17);
        var hide = __webpack_require__(10);
        var redefineAll = __webpack_require__(215);
        var toInteger = __webpack_require__(38);
        var toLength = __webpack_require__(37);
        var toIndex = __webpack_require__(227);
        var toAbsoluteIndex = __webpack_require__(39);
        var toPrimitive = __webpack_require__(16);
        var has = __webpack_require__(5);
        var classof = __webpack_require__(74);
        var isObject = __webpack_require__(13);
        var toObject = __webpack_require__(57);
        var isArrayIter = __webpack_require__(163);
        var create = __webpack_require__(45);
        var getPrototypeOf = __webpack_require__(58);
        var gOPN = __webpack_require__(49).f;
        var getIterFn = __webpack_require__(165);
        var uid = __webpack_require__(19);
        var wks = __webpack_require__(26);
        var createArrayMethod = __webpack_require__(173);
        var createArrayIncludes = __webpack_require__(36);
        var speciesConstructor = __webpack_require__(208);
        var ArrayIterators = __webpack_require__(194);
        var Iterators = __webpack_require__(129);
        var $iterDetect = __webpack_require__(166);
        var setSpecies = __webpack_require__(193);
        var arrayFill = __webpack_require__(189);
        var arrayCopyWithin = __webpack_require__(186);
        var $DP = __webpack_require__(11);
        var $GOPD = __webpack_require__(50);
        var dP = $DP.f;
        var gOPD = $GOPD.f;
        var RangeError = global.RangeError;
        var TypeError = global.TypeError;
        var Uint8Array = global.Uint8Array;
        var ARRAY_BUFFER = 'ArrayBuffer';
        var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
        var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
        var PROTOTYPE = 'prototype';
        var ArrayProto = Array[PROTOTYPE];
        var $ArrayBuffer = $buffer.ArrayBuffer;
        var $DataView = $buffer.DataView;
        var arrayForEach = createArrayMethod(0);
        var arrayFilter = createArrayMethod(2);
        var arraySome = createArrayMethod(3);
        var arrayEvery = createArrayMethod(4);
        var arrayFind = createArrayMethod(5);
        var arrayFindIndex = createArrayMethod(6);
        var arrayIncludes = createArrayIncludes(true);
        var arrayIndexOf = createArrayIncludes(false);
        var arrayValues = ArrayIterators.values;
        var arrayKeys = ArrayIterators.keys;
        var arrayEntries = ArrayIterators.entries;
        var arrayLastIndexOf = ArrayProto.lastIndexOf;
        var arrayReduce = ArrayProto.reduce;
        var arrayReduceRight = ArrayProto.reduceRight;
        var arrayJoin = ArrayProto.join;
        var arraySort = ArrayProto.sort;
        var arraySlice = ArrayProto.slice;
        var arrayToString = ArrayProto.toString;
        var arrayToLocaleString = ArrayProto.toLocaleString;
        var ITERATOR = wks('iterator');
        var TAG = wks('toStringTag');
        var TYPED_CONSTRUCTOR = uid('typed_constructor');
        var DEF_CONSTRUCTOR = uid('def_constructor');
        var ALL_CONSTRUCTORS = $typed.CONSTR;
        var TYPED_ARRAY = $typed.TYPED;
        var VIEW = $typed.VIEW;
        var WRONG_LENGTH = 'Wrong length!';

        var $map = createArrayMethod(1, function(O, length) {
          return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
        });

        var LITTLE_ENDIAN = fails(function() {
          // eslint-disable-next-line no-undef
          return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
        });

        var FORCED_SET =
          !!Uint8Array &&
          !!Uint8Array[PROTOTYPE].set &&
          fails(function() {
            new Uint8Array(1).set({});
          });

        var toOffset = function(it, BYTES) {
          var offset = toInteger(it);
          if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
          return offset;
        };

        var validate = function(it) {
          if (isObject(it) && TYPED_ARRAY in it) return it;
          throw TypeError(it + ' is not a typed array!');
        };

        var allocate = function(C, length) {
          if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
            throw TypeError('It is not a typed array constructor!');
          }
          return new C(length);
        };

        var speciesFromList = function(O, list) {
          return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
        };

        var fromList = function(C, list) {
          var index = 0;
          var length = list.length;
          var result = allocate(C, length);
          while (length > index) result[index] = list[index++];
          return result;
        };

        var addGetter = function(it, key, internal) {
          dP(it, key, {
            get: function() {
              return this._d[internal];
            }
          });
        };

        var $from = function from(source /* , mapfn, thisArg */) {
          var O = toObject(source);
          var aLen = arguments.length;
          var mapfn = aLen > 1 ? arguments[1] : undefined;
          var mapping = mapfn !== undefined;
          var iterFn = getIterFn(O);
          var i, length, values, result, step, iterator;
          if (iterFn != undefined && !isArrayIter(iterFn)) {
            for (
              iterator = iterFn.call(O), values = [], i = 0;
              !(step = iterator.next()).done;
              i++
            ) {
              values.push(step.value);
            }
            O = values;
          }
          if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
          for (
            i = 0, length = toLength(O.length), result = allocate(this, length);
            length > i;
            i++
          ) {
            result[i] = mapping ? mapfn(O[i], i) : O[i];
          }
          return result;
        };

        var $of = function of(/* ...items */) {
          var index = 0;
          var length = arguments.length;
          var result = allocate(this, length);
          while (length > index) result[index] = arguments[index++];
          return result;
        };

        // iOS Safari 6.x fails here
        var TO_LOCALE_BUG =
          !!Uint8Array &&
          fails(function() {
            arrayToLocaleString.call(new Uint8Array(1));
          });

        var $toLocaleString = function toLocaleString() {
          return arrayToLocaleString.apply(
            TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this),
            arguments
          );
        };

        var proto = {
          copyWithin: function copyWithin(target, start /* , end */) {
            return arrayCopyWithin.call(
              validate(this),
              target,
              start,
              arguments.length > 2 ? arguments[2] : undefined
            );
          },
          every: function every(callbackfn /* , thisArg */) {
            return arrayEvery(
              validate(this),
              callbackfn,
              arguments.length > 1 ? arguments[1] : undefined
            );
          },
          fill: function fill(value /* , start, end */) {
            // eslint-disable-line no-unused-vars
            return arrayFill.apply(validate(this), arguments);
          },
          filter: function filter(callbackfn /* , thisArg */) {
            return speciesFromList(
              this,
              arrayFilter(
                validate(this),
                callbackfn,
                arguments.length > 1 ? arguments[1] : undefined
              )
            );
          },
          find: function find(predicate /* , thisArg */) {
            return arrayFind(
              validate(this),
              predicate,
              arguments.length > 1 ? arguments[1] : undefined
            );
          },
          findIndex: function findIndex(predicate /* , thisArg */) {
            return arrayFindIndex(
              validate(this),
              predicate,
              arguments.length > 1 ? arguments[1] : undefined
            );
          },
          forEach: function forEach(callbackfn /* , thisArg */) {
            arrayForEach(
              validate(this),
              callbackfn,
              arguments.length > 1 ? arguments[1] : undefined
            );
          },
          indexOf: function indexOf(searchElement /* , fromIndex */) {
            return arrayIndexOf(
              validate(this),
              searchElement,
              arguments.length > 1 ? arguments[1] : undefined
            );
          },
          includes: function includes(searchElement /* , fromIndex */) {
            return arrayIncludes(
              validate(this),
              searchElement,
              arguments.length > 1 ? arguments[1] : undefined
            );
          },
          join: function join(separator) {
            // eslint-disable-line no-unused-vars
            return arrayJoin.apply(validate(this), arguments);
          },
          lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) {
            // eslint-disable-line no-unused-vars
            return arrayLastIndexOf.apply(validate(this), arguments);
          },
          map: function map(mapfn /* , thisArg */) {
            return $map(
              validate(this),
              mapfn,
              arguments.length > 1 ? arguments[1] : undefined
            );
          },
          reduce: function reduce(callbackfn /* , initialValue */) {
            // eslint-disable-line no-unused-vars
            return arrayReduce.apply(validate(this), arguments);
          },
          reduceRight: function reduceRight(callbackfn /* , initialValue */) {
            // eslint-disable-line no-unused-vars
            return arrayReduceRight.apply(validate(this), arguments);
          },
          reverse: function reverse() {
            var that = this;
            var length = validate(that).length;
            var middle = Math.floor(length / 2);
            var index = 0;
            var value;
            while (index < middle) {
              value = that[index];
              that[index++] = that[--length];
              that[length] = value;
            }
            return that;
          },
          some: function some(callbackfn /* , thisArg */) {
            return arraySome(
              validate(this),
              callbackfn,
              arguments.length > 1 ? arguments[1] : undefined
            );
          },
          sort: function sort(comparefn) {
            return arraySort.call(validate(this), comparefn);
          },
          subarray: function subarray(begin, end) {
            var O = validate(this);
            var length = O.length;
            var $begin = toAbsoluteIndex(begin, length);
            return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
              O.buffer,
              O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
              toLength(
                (end === undefined ? length : toAbsoluteIndex(end, length)) -
                  $begin
              )
            );
          }
        };

        var $slice = function slice(start, end) {
          return speciesFromList(
            this,
            arraySlice.call(validate(this), start, end)
          );
        };

        var $set = function set(arrayLike /* , offset */) {
          validate(this);
          var offset = toOffset(arguments[1], 1);
          var length = this.length;
          var src = toObject(arrayLike);
          var len = toLength(src.length);
          var index = 0;
          if (len + offset > length) throw RangeError(WRONG_LENGTH);
          while (index < len) this[offset + index] = src[index++];
        };

        var $iterators = {
          entries: function entries() {
            return arrayEntries.call(validate(this));
          },
          keys: function keys() {
            return arrayKeys.call(validate(this));
          },
          values: function values() {
            return arrayValues.call(validate(this));
          }
        };

        var isTAIndex = function(target, key) {
          return (
            isObject(target) &&
            target[TYPED_ARRAY] &&
            typeof key != 'symbol' &&
            key in target &&
            String(+key) == String(key)
          );
        };
        var $getDesc = function getOwnPropertyDescriptor(target, key) {
          return isTAIndex(target, (key = toPrimitive(key, true)))
            ? propertyDesc(2, target[key])
            : gOPD(target, key);
        };
        var $setDesc = function defineProperty(target, key, desc) {
          if (
            isTAIndex(target, (key = toPrimitive(key, true))) &&
            isObject(desc) &&
            has(desc, 'value') &&
            !has(desc, 'get') &&
            !has(desc, 'set') &&
            // TODO: add validation descriptor w/o calling accessors
            !desc.configurable &&
            (!has(desc, 'writable') || desc.writable) &&
            (!has(desc, 'enumerable') || desc.enumerable)
          ) {
            target[key] = desc.value;
            return target;
          }
          return dP(target, key, desc);
        };

        if (!ALL_CONSTRUCTORS) {
          $GOPD.f = $getDesc;
          $DP.f = $setDesc;
        }

        $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
          getOwnPropertyDescriptor: $getDesc,
          defineProperty: $setDesc
        });

        if (
          fails(function() {
            arrayToString.call({});
          })
        ) {
          arrayToString = arrayToLocaleString = function toString() {
            return arrayJoin.call(this);
          };
        }

        var $TypedArrayPrototype$ = redefineAll({}, proto);
        redefineAll($TypedArrayPrototype$, $iterators);
        hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
        redefineAll($TypedArrayPrototype$, {
          slice: $slice,
          set: $set,
          constructor: function() {
            /* noop */
          },
          toString: arrayToString,
          toLocaleString: $toLocaleString
        });
        addGetter($TypedArrayPrototype$, 'buffer', 'b');
        addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
        addGetter($TypedArrayPrototype$, 'byteLength', 'l');
        addGetter($TypedArrayPrototype$, 'length', 'e');
        dP($TypedArrayPrototype$, TAG, {
          get: function() {
            return this[TYPED_ARRAY];
          }
        });

        // eslint-disable-next-line max-statements
        module.exports = function(KEY, BYTES, wrapper, CLAMPED) {
          CLAMPED = !!CLAMPED;
          var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
          var GETTER = 'get' + KEY;
          var SETTER = 'set' + KEY;
          var TypedArray = global[NAME];
          var Base = TypedArray || {};
          var TAC = TypedArray && getPrototypeOf(TypedArray);
          var FORCED = !TypedArray || !$typed.ABV;
          var O = {};
          var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
          var getter = function(that, index) {
            var data = that._d;
            return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
          };
          var setter = function(that, index, value) {
            var data = that._d;
            if (CLAMPED)
              value =
                (value = Math.round(value)) < 0
                  ? 0
                  : value > 0xff
                    ? 0xff
                    : value & 0xff;
            data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
          };
          var addElement = function(that, index) {
            dP(that, index, {
              get: function() {
                return getter(this, index);
              },
              set: function(value) {
                return setter(this, index, value);
              },
              enumerable: true
            });
          };
          if (FORCED) {
            TypedArray = wrapper(function(that, data, $offset, $length) {
              anInstance(that, TypedArray, NAME, '_d');
              var index = 0;
              var offset = 0;
              var buffer, byteLength, length, klass;
              if (!isObject(data)) {
                length = toIndex(data);
                byteLength = length * BYTES;
                buffer = new $ArrayBuffer(byteLength);
              } else if (
                data instanceof $ArrayBuffer ||
                (klass = classof(data)) == ARRAY_BUFFER ||
                klass == SHARED_BUFFER
              ) {
                buffer = data;
                offset = toOffset($offset, BYTES);
                var $len = data.byteLength;
                if ($length === undefined) {
                  if ($len % BYTES) throw RangeError(WRONG_LENGTH);
                  byteLength = $len - offset;
                  if (byteLength < 0) throw RangeError(WRONG_LENGTH);
                } else {
                  byteLength = toLength($length) * BYTES;
                  if (byteLength + offset > $len)
                    throw RangeError(WRONG_LENGTH);
                }
                length = byteLength / BYTES;
              } else if (TYPED_ARRAY in data) {
                return fromList(TypedArray, data);
              } else {
                return $from.call(TypedArray, data);
              }
              hide(that, '_d', {
                b: buffer,
                o: offset,
                l: byteLength,
                e: length,
                v: new $DataView(buffer)
              });
              while (index < length) addElement(that, index++);
            });
            TypedArrayPrototype = TypedArray[PROTOTYPE] = create(
              $TypedArrayPrototype$
            );
            hide(TypedArrayPrototype, 'constructor', TypedArray);
          } else if (
            !fails(function() {
              TypedArray(1);
            }) ||
            !fails(function() {
              new TypedArray(-1); // eslint-disable-line no-new
            }) ||
            !$iterDetect(function(iter) {
              new TypedArray(); // eslint-disable-line no-new
              new TypedArray(null); // eslint-disable-line no-new
              new TypedArray(1.5); // eslint-disable-line no-new
              new TypedArray(iter); // eslint-disable-line no-new
            }, true)
          ) {
            TypedArray = wrapper(function(that, data, $offset, $length) {
              anInstance(that, TypedArray, NAME);
              var klass;
              // `ws` module bug, temporarily remove validation length for Uint8Array
              // https://github.com/websockets/ws/pull/645
              if (!isObject(data)) return new Base(toIndex(data));
              if (
                data instanceof $ArrayBuffer ||
                (klass = classof(data)) == ARRAY_BUFFER ||
                klass == SHARED_BUFFER
              ) {
                return $length !== undefined
                  ? new Base(data, toOffset($offset, BYTES), $length)
                  : $offset !== undefined
                    ? new Base(data, toOffset($offset, BYTES))
                    : new Base(data);
              }
              if (TYPED_ARRAY in data) return fromList(TypedArray, data);
              return $from.call(TypedArray, data);
            });
            arrayForEach(
              TAC !== Function.prototype
                ? gOPN(Base).concat(gOPN(TAC))
                : gOPN(Base),
              function(key) {
                if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
              }
            );
            TypedArray[PROTOTYPE] = TypedArrayPrototype;
            if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
          }
          var $nativeIterator = TypedArrayPrototype[ITERATOR];
          var CORRECT_ITER_NAME =
            !!$nativeIterator &&
            ($nativeIterator.name == 'values' ||
              $nativeIterator.name == undefined);
          var $iterator = $iterators.values;
          hide(TypedArray, TYPED_CONSTRUCTOR, true);
          hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
          hide(TypedArrayPrototype, VIEW, true);
          hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

          if (
            CLAMPED
              ? new TypedArray(1)[TAG] != NAME
              : !(TAG in TypedArrayPrototype)
          ) {
            dP(TypedArrayPrototype, TAG, {
              get: function() {
                return NAME;
              }
            });
          }

          O[NAME] = TypedArray;

          $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

          $export($export.S, NAME, {
            BYTES_PER_ELEMENT: BYTES
          });

          $export(
            $export.S +
              $export.F *
                fails(function() {
                  Base.of.call(TypedArray, 1);
                }),
            NAME,
            {
              from: $from,
              of: $of
            }
          );

          if (!(BYTES_PER_ELEMENT in TypedArrayPrototype))
            hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

          $export($export.P, NAME, proto);

          setSpecies(NAME);

          $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

          $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

          if (!LIBRARY && TypedArrayPrototype.toString != arrayToString)
            TypedArrayPrototype.toString = arrayToString;

          $export(
            $export.P +
              $export.F *
                fails(function() {
                  new TypedArray(1).slice();
                }),
            NAME,
            { slice: $slice }
          );

          $export(
            $export.P +
              $export.F *
                (fails(function() {
                  return (
                    [1, 2].toLocaleString() !=
                    new TypedArray([1, 2]).toLocaleString()
                  );
                }) ||
                  !fails(function() {
                    TypedArrayPrototype.toLocaleString.call([1, 2]);
                  })),
            NAME,
            { toLocaleString: $toLocaleString }
          );

          Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
          if (!LIBRARY && !CORRECT_ITER_NAME)
            hide(TypedArrayPrototype, ITERATOR, $iterator);
        };
      } else
        module.exports = function() {
          /* empty */
        };

      /***/
    },
    /* 231 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(230)('Uint8', 1, function(init) {
        return function Uint8Array(data, byteOffset, length) {
          return init(this, data, byteOffset, length);
        };
      });

      /***/
    },
    /* 232 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(230)(
        'Uint8',
        1,
        function(init) {
          return function Uint8ClampedArray(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        },
        true
      );

      /***/
    },
    /* 233 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(230)('Int16', 2, function(init) {
        return function Int16Array(data, byteOffset, length) {
          return init(this, data, byteOffset, length);
        };
      });

      /***/
    },
    /* 234 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(230)('Uint16', 2, function(init) {
        return function Uint16Array(data, byteOffset, length) {
          return init(this, data, byteOffset, length);
        };
      });

      /***/
    },
    /* 235 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(230)('Int32', 4, function(init) {
        return function Int32Array(data, byteOffset, length) {
          return init(this, data, byteOffset, length);
        };
      });

      /***/
    },
    /* 236 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(230)('Uint32', 4, function(init) {
        return function Uint32Array(data, byteOffset, length) {
          return init(this, data, byteOffset, length);
        };
      });

      /***/
    },
    /* 237 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(230)('Float32', 4, function(init) {
        return function Float32Array(data, byteOffset, length) {
          return init(this, data, byteOffset, length);
        };
      });

      /***/
    },
    /* 238 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(230)('Float64', 8, function(init) {
        return function Float64Array(data, byteOffset, length) {
          return init(this, data, byteOffset, length);
        };
      });

      /***/
    },
    /* 239 */
    /***/ function(module, exports, __webpack_require__) {
      // 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
      var $export = __webpack_require__(8);
      var aFunction = __webpack_require__(21);
      var anObject = __webpack_require__(12);
      var rApply = (__webpack_require__(4).Reflect || {}).apply;
      var fApply = Function.apply;
      // MS Edge argumentsList argument is optional
      $export(
        $export.S +
          $export.F *
            !__webpack_require__(7)(function() {
              rApply(function() {
                /* empty */
              });
            }),
        'Reflect',
        {
          apply: function apply(target, thisArgument, argumentsList) {
            var T = aFunction(target);
            var L = anObject(argumentsList);
            return rApply
              ? rApply(T, thisArgument, L)
              : fApply.call(T, thisArgument, L);
          }
        }
      );

      /***/
    },
    /* 240 */
    /***/ function(module, exports, __webpack_require__) {
      // 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
      var $export = __webpack_require__(8);
      var create = __webpack_require__(45);
      var aFunction = __webpack_require__(21);
      var anObject = __webpack_require__(12);
      var isObject = __webpack_require__(13);
      var fails = __webpack_require__(7);
      var bind = __webpack_require__(76);
      var rConstruct = (__webpack_require__(4).Reflect || {}).construct;

      // MS Edge supports only 2 arguments and argumentsList argument is optional
      // FF Nightly sets third argument as `new.target`, but does not create `this` from it
      var NEW_TARGET_BUG = fails(function() {
        function F() {
          /* empty */
        }
        return !(
          rConstruct(
            function() {
              /* empty */
            },
            [],
            F
          ) instanceof F
        );
      });
      var ARGS_BUG = !fails(function() {
        rConstruct(function() {
          /* empty */
        });
      });

      $export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
        construct: function construct(Target, args /* , newTarget */) {
          aFunction(Target);
          anObject(args);
          var newTarget =
            arguments.length < 3 ? Target : aFunction(arguments[2]);
          if (ARGS_BUG && !NEW_TARGET_BUG)
            return rConstruct(Target, args, newTarget);
          if (Target == newTarget) {
            // w/o altered newTarget, optimization for 0-4 arguments
            switch (args.length) {
              case 0:
                return new Target();
              case 1:
                return new Target(args[0]);
              case 2:
                return new Target(args[0], args[1]);
              case 3:
                return new Target(args[0], args[1], args[2]);
              case 4:
                return new Target(args[0], args[1], args[2], args[3]);
            }
            // w/o altered newTarget, lot of arguments case
            var $args = [null];
            $args.push.apply($args, args);
            return new (bind.apply(Target, $args))();
          }
          // with altered newTarget, not support built-in constructors
          var proto = newTarget.prototype;
          var instance = create(isObject(proto) ? proto : Object.prototype);
          var result = Function.apply.call(Target, instance, args);
          return isObject(result) ? result : instance;
        }
      });

      /***/
    },
    /* 241 */
    /***/ function(module, exports, __webpack_require__) {
      // 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
      var dP = __webpack_require__(11);
      var $export = __webpack_require__(8);
      var anObject = __webpack_require__(12);
      var toPrimitive = __webpack_require__(16);

      // MS Edge has broken Reflect.defineProperty - throwing instead of returning false
      $export(
        $export.S +
          $export.F *
            __webpack_require__(7)(function() {
              // eslint-disable-next-line no-undef
              Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, {
                value: 2
              });
            }),
        'Reflect',
        {
          defineProperty: function defineProperty(
            target,
            propertyKey,
            attributes
          ) {
            anObject(target);
            propertyKey = toPrimitive(propertyKey, true);
            anObject(attributes);
            try {
              dP.f(target, propertyKey, attributes);
              return true;
            } catch (e) {
              return false;
            }
          }
        }
      );

      /***/
    },
    /* 242 */
    /***/ function(module, exports, __webpack_require__) {
      // 26.1.4 Reflect.deleteProperty(target, propertyKey)
      var $export = __webpack_require__(8);
      var gOPD = __webpack_require__(50).f;
      var anObject = __webpack_require__(12);

      $export($export.S, 'Reflect', {
        deleteProperty: function deleteProperty(target, propertyKey) {
          var desc = gOPD(anObject(target), propertyKey);
          return desc && !desc.configurable
            ? false
            : delete target[propertyKey];
        }
      });

      /***/
    },
    /* 243 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // 26.1.5 Reflect.enumerate(target)
      var $export = __webpack_require__(8);
      var anObject = __webpack_require__(12);
      var Enumerate = function(iterated) {
        this._t = anObject(iterated); // target
        this._i = 0; // next index
        var keys = (this._k = []); // keys
        var key;
        for (key in iterated) keys.push(key);
      };
      __webpack_require__(130)(Enumerate, 'Object', function() {
        var that = this;
        var keys = that._k;
        var key;
        do {
          if (that._i >= keys.length) return { value: undefined, done: true };
        } while (!((key = keys[that._i++]) in that._t));
        return { value: key, done: false };
      });

      $export($export.S, 'Reflect', {
        enumerate: function enumerate(target) {
          return new Enumerate(target);
        }
      });

      /***/
    },
    /* 244 */
    /***/ function(module, exports, __webpack_require__) {
      // 26.1.6 Reflect.get(target, propertyKey [, receiver])
      var gOPD = __webpack_require__(50);
      var getPrototypeOf = __webpack_require__(58);
      var has = __webpack_require__(5);
      var $export = __webpack_require__(8);
      var isObject = __webpack_require__(13);
      var anObject = __webpack_require__(12);

      function get(target, propertyKey /* , receiver */) {
        var receiver = arguments.length < 3 ? target : arguments[2];
        var desc, proto;
        if (anObject(target) === receiver) return target[propertyKey];
        if ((desc = gOPD.f(target, propertyKey)))
          return has(desc, 'value')
            ? desc.value
            : desc.get !== undefined
              ? desc.get.call(receiver)
              : undefined;
        if (isObject((proto = getPrototypeOf(target))))
          return get(proto, propertyKey, receiver);
      }

      $export($export.S, 'Reflect', { get: get });

      /***/
    },
    /* 245 */
    /***/ function(module, exports, __webpack_require__) {
      // 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
      var gOPD = __webpack_require__(50);
      var $export = __webpack_require__(8);
      var anObject = __webpack_require__(12);

      $export($export.S, 'Reflect', {
        getOwnPropertyDescriptor: function getOwnPropertyDescriptor(
          target,
          propertyKey
        ) {
          return gOPD.f(anObject(target), propertyKey);
        }
      });

      /***/
    },
    /* 246 */
    /***/ function(module, exports, __webpack_require__) {
      // 26.1.8 Reflect.getPrototypeOf(target)
      var $export = __webpack_require__(8);
      var getProto = __webpack_require__(58);
      var anObject = __webpack_require__(12);

      $export($export.S, 'Reflect', {
        getPrototypeOf: function getPrototypeOf(target) {
          return getProto(anObject(target));
        }
      });

      /***/
    },
    /* 247 */
    /***/ function(module, exports, __webpack_require__) {
      // 26.1.9 Reflect.has(target, propertyKey)
      var $export = __webpack_require__(8);

      $export($export.S, 'Reflect', {
        has: function has(target, propertyKey) {
          return propertyKey in target;
        }
      });

      /***/
    },
    /* 248 */
    /***/ function(module, exports, __webpack_require__) {
      // 26.1.10 Reflect.isExtensible(target)
      var $export = __webpack_require__(8);
      var anObject = __webpack_require__(12);
      var $isExtensible = Object.isExtensible;

      $export($export.S, 'Reflect', {
        isExtensible: function isExtensible(target) {
          anObject(target);
          return $isExtensible ? $isExtensible(target) : true;
        }
      });

      /***/
    },
    /* 249 */
    /***/ function(module, exports, __webpack_require__) {
      // 26.1.11 Reflect.ownKeys(target)
      var $export = __webpack_require__(8);

      $export($export.S, 'Reflect', { ownKeys: __webpack_require__(250) });

      /***/
    },
    /* 250 */
    /***/ function(module, exports, __webpack_require__) {
      // all object keys, includes non-enumerable and symbols
      var gOPN = __webpack_require__(49);
      var gOPS = __webpack_require__(42);
      var anObject = __webpack_require__(12);
      var Reflect = __webpack_require__(4).Reflect;
      module.exports =
        (Reflect && Reflect.ownKeys) ||
        function ownKeys(it) {
          var keys = gOPN.f(anObject(it));
          var getSymbols = gOPS.f;
          return getSymbols ? keys.concat(getSymbols(it)) : keys;
        };

      /***/
    },
    /* 251 */
    /***/ function(module, exports, __webpack_require__) {
      // 26.1.12 Reflect.preventExtensions(target)
      var $export = __webpack_require__(8);
      var anObject = __webpack_require__(12);
      var $preventExtensions = Object.preventExtensions;

      $export($export.S, 'Reflect', {
        preventExtensions: function preventExtensions(target) {
          anObject(target);
          try {
            if ($preventExtensions) $preventExtensions(target);
            return true;
          } catch (e) {
            return false;
          }
        }
      });

      /***/
    },
    /* 252 */
    /***/ function(module, exports, __webpack_require__) {
      // 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
      var dP = __webpack_require__(11);
      var gOPD = __webpack_require__(50);
      var getPrototypeOf = __webpack_require__(58);
      var has = __webpack_require__(5);
      var $export = __webpack_require__(8);
      var createDesc = __webpack_require__(17);
      var anObject = __webpack_require__(12);
      var isObject = __webpack_require__(13);

      function set(target, propertyKey, V /* , receiver */) {
        var receiver = arguments.length < 4 ? target : arguments[3];
        var ownDesc = gOPD.f(anObject(target), propertyKey);
        var existingDescriptor, proto;
        if (!ownDesc) {
          if (isObject((proto = getPrototypeOf(target)))) {
            return set(proto, propertyKey, V, receiver);
          }
          ownDesc = createDesc(0);
        }
        if (has(ownDesc, 'value')) {
          if (ownDesc.writable === false || !isObject(receiver)) return false;
          if ((existingDescriptor = gOPD.f(receiver, propertyKey))) {
            if (
              existingDescriptor.get ||
              existingDescriptor.set ||
              existingDescriptor.writable === false
            )
              return false;
            existingDescriptor.value = V;
            dP.f(receiver, propertyKey, existingDescriptor);
          } else dP.f(receiver, propertyKey, createDesc(0, V));
          return true;
        }
        return ownDesc.set === undefined
          ? false
          : (ownDesc.set.call(receiver, V), true);
      }

      $export($export.S, 'Reflect', { set: set });

      /***/
    },
    /* 253 */
    /***/ function(module, exports, __webpack_require__) {
      // 26.1.14 Reflect.setPrototypeOf(target, proto)
      var $export = __webpack_require__(8);
      var setProto = __webpack_require__(72);

      if (setProto)
        $export($export.S, 'Reflect', {
          setPrototypeOf: function setPrototypeOf(target, proto) {
            setProto.check(target, proto);
            try {
              setProto.set(target, proto);
              return true;
            } catch (e) {
              return false;
            }
          }
        });

      /***/
    },
    /* 254 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // https://github.com/tc39/Array.prototype.includes
      var $export = __webpack_require__(8);
      var $includes = __webpack_require__(36)(true);

      $export($export.P, 'Array', {
        includes: function includes(el /* , fromIndex = 0 */) {
          return $includes(
            this,
            el,
            arguments.length > 1 ? arguments[1] : undefined
          );
        }
      });

      __webpack_require__(187)('includes');

      /***/
    },
    /* 255 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap
      var $export = __webpack_require__(8);
      var flattenIntoArray = __webpack_require__(256);
      var toObject = __webpack_require__(57);
      var toLength = __webpack_require__(37);
      var aFunction = __webpack_require__(21);
      var arraySpeciesCreate = __webpack_require__(174);

      $export($export.P, 'Array', {
        flatMap: function flatMap(callbackfn /* , thisArg */) {
          var O = toObject(this);
          var sourceLen, A;
          aFunction(callbackfn);
          sourceLen = toLength(O.length);
          A = arraySpeciesCreate(O, 0);
          flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
          return A;
        }
      });

      __webpack_require__(187)('flatMap');

      /***/
    },
    /* 256 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
      var isArray = __webpack_require__(44);
      var isObject = __webpack_require__(13);
      var toLength = __webpack_require__(37);
      var ctx = __webpack_require__(20);
      var IS_CONCAT_SPREADABLE = __webpack_require__(26)('isConcatSpreadable');

      function flattenIntoArray(
        target,
        original,
        source,
        sourceLen,
        start,
        depth,
        mapper,
        thisArg
      ) {
        var targetIndex = start;
        var sourceIndex = 0;
        var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;
        var element, spreadable;

        while (sourceIndex < sourceLen) {
          if (sourceIndex in source) {
            element = mapFn
              ? mapFn(source[sourceIndex], sourceIndex, original)
              : source[sourceIndex];

            spreadable = false;
            if (isObject(element)) {
              spreadable = element[IS_CONCAT_SPREADABLE];
              spreadable =
                spreadable !== undefined ? !!spreadable : isArray(element);
            }

            if (spreadable && depth > 0) {
              targetIndex =
                flattenIntoArray(
                  target,
                  original,
                  element,
                  toLength(element.length),
                  targetIndex,
                  depth - 1
                ) - 1;
            } else {
              if (targetIndex >= 0x1fffffffffffff) throw TypeError();
              target[targetIndex] = element;
            }

            targetIndex++;
          }
          sourceIndex++;
        }
        return targetIndex;
      }

      module.exports = flattenIntoArray;

      /***/
    },
    /* 257 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatten
      var $export = __webpack_require__(8);
      var flattenIntoArray = __webpack_require__(256);
      var toObject = __webpack_require__(57);
      var toLength = __webpack_require__(37);
      var toInteger = __webpack_require__(38);
      var arraySpeciesCreate = __webpack_require__(174);

      $export($export.P, 'Array', {
        flatten: function flatten(/* depthArg = 1 */) {
          var depthArg = arguments[0];
          var O = toObject(this);
          var sourceLen = toLength(O.length);
          var A = arraySpeciesCreate(O, 0);
          flattenIntoArray(
            A,
            O,
            O,
            sourceLen,
            0,
            depthArg === undefined ? 1 : toInteger(depthArg)
          );
          return A;
        }
      });

      __webpack_require__(187)('flatten');

      /***/
    },
    /* 258 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // https://github.com/mathiasbynens/String.prototype.at
      var $export = __webpack_require__(8);
      var $at = __webpack_require__(127)(true);

      $export($export.P, 'String', {
        at: function at(pos) {
          return $at(this, pos);
        }
      });

      /***/
    },
    /* 259 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // https://github.com/tc39/proposal-string-pad-start-end
      var $export = __webpack_require__(8);
      var $pad = __webpack_require__(260);
      var userAgent = __webpack_require__(213);

      // https://github.com/zloirock/core-js/issues/280
      $export(
        $export.P +
          $export.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(userAgent),
        'String',
        {
          padStart: function padStart(maxLength /* , fillString = ' ' */) {
            return $pad(
              this,
              maxLength,
              arguments.length > 1 ? arguments[1] : undefined,
              true
            );
          }
        }
      );

      /***/
    },
    /* 260 */
    /***/ function(module, exports, __webpack_require__) {
      // https://github.com/tc39/proposal-string-pad-start-end
      var toLength = __webpack_require__(37);
      var repeat = __webpack_require__(90);
      var defined = __webpack_require__(35);

      module.exports = function(that, maxLength, fillString, left) {
        var S = String(defined(that));
        var stringLength = S.length;
        var fillStr = fillString === undefined ? ' ' : String(fillString);
        var intMaxLength = toLength(maxLength);
        if (intMaxLength <= stringLength || fillStr == '') return S;
        var fillLen = intMaxLength - stringLength;
        var stringFiller = repeat.call(
          fillStr,
          Math.ceil(fillLen / fillStr.length)
        );
        if (stringFiller.length > fillLen)
          stringFiller = stringFiller.slice(0, fillLen);
        return left ? stringFiller + S : S + stringFiller;
      };

      /***/
    },
    /* 261 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // https://github.com/tc39/proposal-string-pad-start-end
      var $export = __webpack_require__(8);
      var $pad = __webpack_require__(260);
      var userAgent = __webpack_require__(213);

      // https://github.com/zloirock/core-js/issues/280
      $export(
        $export.P +
          $export.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(userAgent),
        'String',
        {
          padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
            return $pad(
              this,
              maxLength,
              arguments.length > 1 ? arguments[1] : undefined,
              false
            );
          }
        }
      );

      /***/
    },
    /* 262 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // https://github.com/sebmarkbage/ecmascript-string-left-right-trim
      __webpack_require__(82)(
        'trimLeft',
        function($trim) {
          return function trimLeft() {
            return $trim(this, 1);
          };
        },
        'trimStart'
      );

      /***/
    },
    /* 263 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // https://github.com/sebmarkbage/ecmascript-string-left-right-trim
      __webpack_require__(82)(
        'trimRight',
        function($trim) {
          return function trimRight() {
            return $trim(this, 2);
          };
        },
        'trimEnd'
      );

      /***/
    },
    /* 264 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // https://tc39.github.io/String.prototype.matchAll/
      var $export = __webpack_require__(8);
      var defined = __webpack_require__(35);
      var toLength = __webpack_require__(37);
      var isRegExp = __webpack_require__(134);
      var getFlags = __webpack_require__(197);
      var RegExpProto = RegExp.prototype;

      var $RegExpStringIterator = function(regexp, string) {
        this._r = regexp;
        this._s = string;
      };

      __webpack_require__(130)(
        $RegExpStringIterator,
        'RegExp String',
        function next() {
          var match = this._r.exec(this._s);
          return { value: match, done: match === null };
        }
      );

      $export($export.P, 'String', {
        matchAll: function matchAll(regexp) {
          defined(this);
          if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');
          var S = String(this);
          var flags =
            'flags' in RegExpProto
              ? String(regexp.flags)
              : getFlags.call(regexp);
          var rx = new RegExp(
            regexp.source,
            ~flags.indexOf('g') ? flags : 'g' + flags
          );
          rx.lastIndex = toLength(regexp.lastIndex);
          return new $RegExpStringIterator(rx, S);
        }
      });

      /***/
    },
    /* 265 */
    [847, 28],
    /* 266 */
    [848, 28],
    /* 267 */
    /***/ function(module, exports, __webpack_require__) {
      // https://github.com/tc39/proposal-object-getownpropertydescriptors
      var $export = __webpack_require__(8);
      var ownKeys = __webpack_require__(250);
      var toIObject = __webpack_require__(32);
      var gOPD = __webpack_require__(50);
      var createProperty = __webpack_require__(164);

      $export($export.S, 'Object', {
        getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
          var O = toIObject(object);
          var getDesc = gOPD.f;
          var keys = ownKeys(O);
          var result = {};
          var i = 0;
          var key, desc;
          while (keys.length > i) {
            desc = getDesc(O, (key = keys[i++]));
            if (desc !== undefined) createProperty(result, key, desc);
          }
          return result;
        }
      });

      /***/
    },
    /* 268 */
    /***/ function(module, exports, __webpack_require__) {
      // https://github.com/tc39/proposal-object-values-entries
      var $export = __webpack_require__(8);
      var $values = __webpack_require__(269)(false);

      $export($export.S, 'Object', {
        values: function values(it) {
          return $values(it);
        }
      });

      /***/
    },
    /* 269 */
    /***/ function(module, exports, __webpack_require__) {
      var getKeys = __webpack_require__(30);
      var toIObject = __webpack_require__(32);
      var isEnum = __webpack_require__(43).f;
      module.exports = function(isEntries) {
        return function(it) {
          var O = toIObject(it);
          var keys = getKeys(O);
          var length = keys.length;
          var i = 0;
          var result = [];
          var key;
          while (length > i)
            if (isEnum.call(O, (key = keys[i++]))) {
              result.push(isEntries ? [key, O[key]] : O[key]);
            }
          return result;
        };
      };

      /***/
    },
    /* 270 */
    /***/ function(module, exports, __webpack_require__) {
      // https://github.com/tc39/proposal-object-values-entries
      var $export = __webpack_require__(8);
      var $entries = __webpack_require__(269)(true);

      $export($export.S, 'Object', {
        entries: function entries(it) {
          return $entries(it);
        }
      });

      /***/
    },
    /* 271 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var toObject = __webpack_require__(57);
      var aFunction = __webpack_require__(21);
      var $defineProperty = __webpack_require__(11);

      // B.2.2.2 Object.prototype.__defineGetter__(P, getter)
      __webpack_require__(6) &&
        $export($export.P + __webpack_require__(272), 'Object', {
          __defineGetter__: function __defineGetter__(P, getter) {
            $defineProperty.f(toObject(this), P, {
              get: aFunction(getter),
              enumerable: true,
              configurable: true
            });
          }
        });

      /***/
    },
    /* 272 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // Forced replacement prototype accessors methods
      module.exports =
        __webpack_require__(24) ||
        !__webpack_require__(7)(function() {
          var K = Math.random();
          // In FF throws only define methods
          // eslint-disable-next-line no-undef, no-useless-call
          __defineSetter__.call(null, K, function() {
            /* empty */
          });
          delete __webpack_require__(4)[K];
        });

      /***/
    },
    /* 273 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var toObject = __webpack_require__(57);
      var aFunction = __webpack_require__(21);
      var $defineProperty = __webpack_require__(11);

      // B.2.2.3 Object.prototype.__defineSetter__(P, setter)
      __webpack_require__(6) &&
        $export($export.P + __webpack_require__(272), 'Object', {
          __defineSetter__: function __defineSetter__(P, setter) {
            $defineProperty.f(toObject(this), P, {
              set: aFunction(setter),
              enumerable: true,
              configurable: true
            });
          }
        });

      /***/
    },
    /* 274 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var toObject = __webpack_require__(57);
      var toPrimitive = __webpack_require__(16);
      var getPrototypeOf = __webpack_require__(58);
      var getOwnPropertyDescriptor = __webpack_require__(50).f;

      // B.2.2.4 Object.prototype.__lookupGetter__(P)
      __webpack_require__(6) &&
        $export($export.P + __webpack_require__(272), 'Object', {
          __lookupGetter__: function __lookupGetter__(P) {
            var O = toObject(this);
            var K = toPrimitive(P, true);
            var D;
            do {
              if ((D = getOwnPropertyDescriptor(O, K))) return D.get;
            } while ((O = getPrototypeOf(O)));
          }
        });

      /***/
    },
    /* 275 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      var $export = __webpack_require__(8);
      var toObject = __webpack_require__(57);
      var toPrimitive = __webpack_require__(16);
      var getPrototypeOf = __webpack_require__(58);
      var getOwnPropertyDescriptor = __webpack_require__(50).f;

      // B.2.2.5 Object.prototype.__lookupSetter__(P)
      __webpack_require__(6) &&
        $export($export.P + __webpack_require__(272), 'Object', {
          __lookupSetter__: function __lookupSetter__(P) {
            var O = toObject(this);
            var K = toPrimitive(P, true);
            var D;
            do {
              if ((D = getOwnPropertyDescriptor(O, K))) return D.set;
            } while ((O = getPrototypeOf(O)));
          }
        });

      /***/
    },
    /* 276 */
    /***/ function(module, exports, __webpack_require__) {
      // https://github.com/DavidBruant/Map-Set.prototype.toJSON
      var $export = __webpack_require__(8);

      $export($export.P + $export.R, 'Map', {
        toJSON: __webpack_require__(277)('Map')
      });

      /***/
    },
    /* 277 */
    /***/ function(module, exports, __webpack_require__) {
      // https://github.com/DavidBruant/Map-Set.prototype.toJSON
      var classof = __webpack_require__(74);
      var from = __webpack_require__(278);
      module.exports = function(NAME) {
        return function toJSON() {
          if (classof(this) != NAME)
            throw TypeError(NAME + "#toJSON isn't generic");
          return from(this);
        };
      };

      /***/
    },
    /* 278 */
    /***/ function(module, exports, __webpack_require__) {
      var forOf = __webpack_require__(207);

      module.exports = function(iter, ITERATOR) {
        var result = [];
        forOf(iter, false, result.push, result, ITERATOR);
        return result;
      };

      /***/
    },
    /* 279 */
    /***/ function(module, exports, __webpack_require__) {
      // https://github.com/DavidBruant/Map-Set.prototype.toJSON
      var $export = __webpack_require__(8);

      $export($export.P + $export.R, 'Set', {
        toJSON: __webpack_require__(277)('Set')
      });

      /***/
    },
    /* 280 */
    /***/ function(module, exports, __webpack_require__) {
      // https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
      __webpack_require__(281)('Map');

      /***/
    },
    /* 281 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // https://tc39.github.io/proposal-setmap-offrom/
      var $export = __webpack_require__(8);

      module.exports = function(COLLECTION) {
        $export($export.S, COLLECTION, {
          of: function of() {
            var length = arguments.length;
            var A = new Array(length);
            while (length--) A[length] = arguments[length];
            return new this(A);
          }
        });
      };

      /***/
    },
    /* 282 */
    /***/ function(module, exports, __webpack_require__) {
      // https://tc39.github.io/proposal-setmap-offrom/#sec-set.of
      __webpack_require__(281)('Set');

      /***/
    },
    /* 283 */
    /***/ function(module, exports, __webpack_require__) {
      // https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.of
      __webpack_require__(281)('WeakMap');

      /***/
    },
    /* 284 */
    /***/ function(module, exports, __webpack_require__) {
      // https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.of
      __webpack_require__(281)('WeakSet');

      /***/
    },
    /* 285 */
    /***/ function(module, exports, __webpack_require__) {
      // https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
      __webpack_require__(286)('Map');

      /***/
    },
    /* 286 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // https://tc39.github.io/proposal-setmap-offrom/
      var $export = __webpack_require__(8);
      var aFunction = __webpack_require__(21);
      var ctx = __webpack_require__(20);
      var forOf = __webpack_require__(207);

      module.exports = function(COLLECTION) {
        $export($export.S, COLLECTION, {
          from: function from(source /* , mapFn, thisArg */) {
            var mapFn = arguments[1];
            var mapping, A, n, cb;
            aFunction(this);
            mapping = mapFn !== undefined;
            if (mapping) aFunction(mapFn);
            if (source == undefined) return new this();
            A = [];
            if (mapping) {
              n = 0;
              cb = ctx(mapFn, arguments[2], 2);
              forOf(source, false, function(nextItem) {
                A.push(cb(nextItem, n++));
              });
            } else {
              forOf(source, false, A.push, A);
            }
            return new this(A);
          }
        });
      };

      /***/
    },
    /* 287 */
    /***/ function(module, exports, __webpack_require__) {
      // https://tc39.github.io/proposal-setmap-offrom/#sec-set.from
      __webpack_require__(286)('Set');

      /***/
    },
    /* 288 */
    /***/ function(module, exports, __webpack_require__) {
      // https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.from
      __webpack_require__(286)('WeakMap');

      /***/
    },
    /* 289 */
    /***/ function(module, exports, __webpack_require__) {
      // https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.from
      __webpack_require__(286)('WeakSet');

      /***/
    },
    /* 290 */
    /***/ function(module, exports, __webpack_require__) {
      // https://github.com/tc39/proposal-global
      var $export = __webpack_require__(8);

      $export($export.G, { global: __webpack_require__(4) });

      /***/
    },
    /* 291 */
    /***/ function(module, exports, __webpack_require__) {
      // https://github.com/tc39/proposal-global
      var $export = __webpack_require__(8);

      $export($export.S, 'System', { global: __webpack_require__(4) });

      /***/
    },
    /* 292 */
    /***/ function(module, exports, __webpack_require__) {
      // https://github.com/ljharb/proposal-is-error
      var $export = __webpack_require__(8);
      var cof = __webpack_require__(34);

      $export($export.S, 'Error', {
        isError: function isError(it) {
          return cof(it) === 'Error';
        }
      });

      /***/
    },
    /* 293 */
    /***/ function(module, exports, __webpack_require__) {
      // https://rwaldron.github.io/proposal-math-extensions/
      var $export = __webpack_require__(8);

      $export($export.S, 'Math', {
        clamp: function clamp(x, lower, upper) {
          return Math.min(upper, Math.max(lower, x));
        }
      });

      /***/
    },
    /* 294 */
    /***/ function(module, exports, __webpack_require__) {
      // https://rwaldron.github.io/proposal-math-extensions/
      var $export = __webpack_require__(8);

      $export($export.S, 'Math', { DEG_PER_RAD: Math.PI / 180 });

      /***/
    },
    /* 295 */
    /***/ function(module, exports, __webpack_require__) {
      // https://rwaldron.github.io/proposal-math-extensions/
      var $export = __webpack_require__(8);
      var RAD_PER_DEG = 180 / Math.PI;

      $export($export.S, 'Math', {
        degrees: function degrees(radians) {
          return radians * RAD_PER_DEG;
        }
      });

      /***/
    },
    /* 296 */
    /***/ function(module, exports, __webpack_require__) {
      // https://rwaldron.github.io/proposal-math-extensions/
      var $export = __webpack_require__(8);
      var scale = __webpack_require__(297);
      var fround = __webpack_require__(113);

      $export($export.S, 'Math', {
        fscale: function fscale(x, inLow, inHigh, outLow, outHigh) {
          return fround(scale(x, inLow, inHigh, outLow, outHigh));
        }
      });

      /***/
    },
    /* 297 */
    /***/ function(module, exports) {
      // https://rwaldron.github.io/proposal-math-extensions/
      module.exports =
        Math.scale ||
        function scale(x, inLow, inHigh, outLow, outHigh) {
          if (
            arguments.length === 0 ||
            // eslint-disable-next-line no-self-compare
            x != x ||
            // eslint-disable-next-line no-self-compare
            inLow != inLow ||
            // eslint-disable-next-line no-self-compare
            inHigh != inHigh ||
            // eslint-disable-next-line no-self-compare
            outLow != outLow ||
            // eslint-disable-next-line no-self-compare
            outHigh != outHigh
          )
            return NaN;
          if (x === Infinity || x === -Infinity) return x;
          return ((x - inLow) * (outHigh - outLow)) / (inHigh - inLow) + outLow;
        };

      /***/
    },
    /* 298 */
    /***/ function(module, exports, __webpack_require__) {
      // https://gist.github.com/BrendanEich/4294d5c212a6d2254703
      var $export = __webpack_require__(8);

      $export($export.S, 'Math', {
        iaddh: function iaddh(x0, x1, y0, y1) {
          var $x0 = x0 >>> 0;
          var $x1 = x1 >>> 0;
          var $y0 = y0 >>> 0;
          return (
            ($x1 +
              (y1 >>> 0) +
              ((($x0 & $y0) | (($x0 | $y0) & ~(($x0 + $y0) >>> 0))) >>> 31)) |
            0
          );
        }
      });

      /***/
    },
    /* 299 */
    /***/ function(module, exports, __webpack_require__) {
      // https://gist.github.com/BrendanEich/4294d5c212a6d2254703
      var $export = __webpack_require__(8);

      $export($export.S, 'Math', {
        isubh: function isubh(x0, x1, y0, y1) {
          var $x0 = x0 >>> 0;
          var $x1 = x1 >>> 0;
          var $y0 = y0 >>> 0;
          return (
            ($x1 -
              (y1 >>> 0) -
              (((~$x0 & $y0) | (~($x0 ^ $y0) & (($x0 - $y0) >>> 0))) >>> 31)) |
            0
          );
        }
      });

      /***/
    },
    /* 300 */
    /***/ function(module, exports, __webpack_require__) {
      // https://gist.github.com/BrendanEich/4294d5c212a6d2254703
      var $export = __webpack_require__(8);

      $export($export.S, 'Math', {
        imulh: function imulh(u, v) {
          var UINT16 = 0xffff;
          var $u = +u;
          var $v = +v;
          var u0 = $u & UINT16;
          var v0 = $v & UINT16;
          var u1 = $u >> 16;
          var v1 = $v >> 16;
          var t = ((u1 * v0) >>> 0) + ((u0 * v0) >>> 16);
          return (
            u1 * v1 + (t >> 16) + ((((u0 * v1) >>> 0) + (t & UINT16)) >> 16)
          );
        }
      });

      /***/
    },
    /* 301 */
    /***/ function(module, exports, __webpack_require__) {
      // https://rwaldron.github.io/proposal-math-extensions/
      var $export = __webpack_require__(8);

      $export($export.S, 'Math', { RAD_PER_DEG: 180 / Math.PI });

      /***/
    },
    /* 302 */
    /***/ function(module, exports, __webpack_require__) {
      // https://rwaldron.github.io/proposal-math-extensions/
      var $export = __webpack_require__(8);
      var DEG_PER_RAD = Math.PI / 180;

      $export($export.S, 'Math', {
        radians: function radians(degrees) {
          return degrees * DEG_PER_RAD;
        }
      });

      /***/
    },
    /* 303 */
    /***/ function(module, exports, __webpack_require__) {
      // https://rwaldron.github.io/proposal-math-extensions/
      var $export = __webpack_require__(8);

      $export($export.S, 'Math', { scale: __webpack_require__(297) });

      /***/
    },
    /* 304 */
    /***/ function(module, exports, __webpack_require__) {
      // https://gist.github.com/BrendanEich/4294d5c212a6d2254703
      var $export = __webpack_require__(8);

      $export($export.S, 'Math', {
        umulh: function umulh(u, v) {
          var UINT16 = 0xffff;
          var $u = +u;
          var $v = +v;
          var u0 = $u & UINT16;
          var v0 = $v & UINT16;
          var u1 = $u >>> 16;
          var v1 = $v >>> 16;
          var t = ((u1 * v0) >>> 0) + ((u0 * v0) >>> 16);
          return (
            u1 * v1 + (t >>> 16) + ((((u0 * v1) >>> 0) + (t & UINT16)) >>> 16)
          );
        }
      });

      /***/
    },
    /* 305 */
    /***/ function(module, exports, __webpack_require__) {
      // http://jfbastien.github.io/papers/Math.signbit.html
      var $export = __webpack_require__(8);

      $export($export.S, 'Math', {
        signbit: function signbit(x) {
          // eslint-disable-next-line no-self-compare
          return (x = +x) != x ? x : x == 0 ? 1 / x == Infinity : x > 0;
        }
      });

      /***/
    },
    /* 306 */
    /***/ function(module, exports, __webpack_require__) {
      // https://github.com/tc39/proposal-promise-finally
      'use strict';
      var $export = __webpack_require__(8);
      var core = __webpack_require__(9);
      var global = __webpack_require__(4);
      var speciesConstructor = __webpack_require__(208);
      var promiseResolve = __webpack_require__(214);

      $export($export.P + $export.R, 'Promise', {
        finally: function(onFinally) {
          var C = speciesConstructor(this, core.Promise || global.Promise);
          var isFunction = typeof onFinally == 'function';
          return this.then(
            isFunction
              ? function(x) {
                  return promiseResolve(C, onFinally()).then(function() {
                    return x;
                  });
                }
              : onFinally,
            isFunction
              ? function(e) {
                  return promiseResolve(C, onFinally()).then(function() {
                    throw e;
                  });
                }
              : onFinally
          );
        }
      });

      /***/
    },
    /* 307 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // https://github.com/tc39/proposal-promise-try
      var $export = __webpack_require__(8);
      var newPromiseCapability = __webpack_require__(211);
      var perform = __webpack_require__(212);

      $export($export.S, 'Promise', {
        try: function(callbackfn) {
          var promiseCapability = newPromiseCapability.f(this);
          var result = perform(callbackfn);
          (result.e ? promiseCapability.reject : promiseCapability.resolve)(
            result.v
          );
          return promiseCapability.promise;
        }
      });

      /***/
    },
    /* 308 */
    /***/ function(module, exports, __webpack_require__) {
      var metadata = __webpack_require__(309);
      var anObject = __webpack_require__(12);
      var toMetaKey = metadata.key;
      var ordinaryDefineOwnMetadata = metadata.set;

      metadata.exp({
        defineMetadata: function defineMetadata(
          metadataKey,
          metadataValue,
          target,
          targetKey
        ) {
          ordinaryDefineOwnMetadata(
            metadataKey,
            metadataValue,
            anObject(target),
            toMetaKey(targetKey)
          );
        }
      });

      /***/
    },
    /* 309 */
    /***/ function(module, exports, __webpack_require__) {
      var Map = __webpack_require__(216);
      var $export = __webpack_require__(8);
      var shared = __webpack_require__(23)('metadata');
      var store =
        shared.store || (shared.store = new (__webpack_require__(221))());

      var getOrCreateMetadataMap = function(target, targetKey, create) {
        var targetMetadata = store.get(target);
        if (!targetMetadata) {
          if (!create) return undefined;
          store.set(target, (targetMetadata = new Map()));
        }
        var keyMetadata = targetMetadata.get(targetKey);
        if (!keyMetadata) {
          if (!create) return undefined;
          targetMetadata.set(targetKey, (keyMetadata = new Map()));
        }
        return keyMetadata;
      };
      var ordinaryHasOwnMetadata = function(MetadataKey, O, P) {
        var metadataMap = getOrCreateMetadataMap(O, P, false);
        return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
      };
      var ordinaryGetOwnMetadata = function(MetadataKey, O, P) {
        var metadataMap = getOrCreateMetadataMap(O, P, false);
        return metadataMap === undefined
          ? undefined
          : metadataMap.get(MetadataKey);
      };
      var ordinaryDefineOwnMetadata = function(
        MetadataKey,
        MetadataValue,
        O,
        P
      ) {
        getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
      };
      var ordinaryOwnMetadataKeys = function(target, targetKey) {
        var metadataMap = getOrCreateMetadataMap(target, targetKey, false);
        var keys = [];
        if (metadataMap)
          metadataMap.forEach(function(_, key) {
            keys.push(key);
          });
        return keys;
      };
      var toMetaKey = function(it) {
        return it === undefined || typeof it == 'symbol' ? it : String(it);
      };
      var exp = function(O) {
        $export($export.S, 'Reflect', O);
      };

      module.exports = {
        store: store,
        map: getOrCreateMetadataMap,
        has: ordinaryHasOwnMetadata,
        get: ordinaryGetOwnMetadata,
        set: ordinaryDefineOwnMetadata,
        keys: ordinaryOwnMetadataKeys,
        key: toMetaKey,
        exp: exp
      };

      /***/
    },
    /* 310 */
    /***/ function(module, exports, __webpack_require__) {
      var metadata = __webpack_require__(309);
      var anObject = __webpack_require__(12);
      var toMetaKey = metadata.key;
      var getOrCreateMetadataMap = metadata.map;
      var store = metadata.store;

      metadata.exp({
        deleteMetadata: function deleteMetadata(
          metadataKey,
          target /* , targetKey */
        ) {
          var targetKey =
            arguments.length < 3 ? undefined : toMetaKey(arguments[2]);
          var metadataMap = getOrCreateMetadataMap(
            anObject(target),
            targetKey,
            false
          );
          if (metadataMap === undefined || !metadataMap['delete'](metadataKey))
            return false;
          if (metadataMap.size) return true;
          var targetMetadata = store.get(target);
          targetMetadata['delete'](targetKey);
          return !!targetMetadata.size || store['delete'](target);
        }
      });

      /***/
    },
    /* 311 */
    /***/ function(module, exports, __webpack_require__) {
      var metadata = __webpack_require__(309);
      var anObject = __webpack_require__(12);
      var getPrototypeOf = __webpack_require__(58);
      var ordinaryHasOwnMetadata = metadata.has;
      var ordinaryGetOwnMetadata = metadata.get;
      var toMetaKey = metadata.key;

      var ordinaryGetMetadata = function(MetadataKey, O, P) {
        var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
        if (hasOwn) return ordinaryGetOwnMetadata(MetadataKey, O, P);
        var parent = getPrototypeOf(O);
        return parent !== null
          ? ordinaryGetMetadata(MetadataKey, parent, P)
          : undefined;
      };

      metadata.exp({
        getMetadata: function getMetadata(
          metadataKey,
          target /* , targetKey */
        ) {
          return ordinaryGetMetadata(
            metadataKey,
            anObject(target),
            arguments.length < 3 ? undefined : toMetaKey(arguments[2])
          );
        }
      });

      /***/
    },
    /* 312 */
    /***/ function(module, exports, __webpack_require__) {
      var Set = __webpack_require__(220);
      var from = __webpack_require__(278);
      var metadata = __webpack_require__(309);
      var anObject = __webpack_require__(12);
      var getPrototypeOf = __webpack_require__(58);
      var ordinaryOwnMetadataKeys = metadata.keys;
      var toMetaKey = metadata.key;

      var ordinaryMetadataKeys = function(O, P) {
        var oKeys = ordinaryOwnMetadataKeys(O, P);
        var parent = getPrototypeOf(O);
        if (parent === null) return oKeys;
        var pKeys = ordinaryMetadataKeys(parent, P);
        return pKeys.length
          ? oKeys.length
            ? from(new Set(oKeys.concat(pKeys)))
            : pKeys
          : oKeys;
      };

      metadata.exp({
        getMetadataKeys: function getMetadataKeys(target /* , targetKey */) {
          return ordinaryMetadataKeys(
            anObject(target),
            arguments.length < 2 ? undefined : toMetaKey(arguments[1])
          );
        }
      });

      /***/
    },
    /* 313 */
    /***/ function(module, exports, __webpack_require__) {
      var metadata = __webpack_require__(309);
      var anObject = __webpack_require__(12);
      var ordinaryGetOwnMetadata = metadata.get;
      var toMetaKey = metadata.key;

      metadata.exp({
        getOwnMetadata: function getOwnMetadata(
          metadataKey,
          target /* , targetKey */
        ) {
          return ordinaryGetOwnMetadata(
            metadataKey,
            anObject(target),
            arguments.length < 3 ? undefined : toMetaKey(arguments[2])
          );
        }
      });

      /***/
    },
    /* 314 */
    /***/ function(module, exports, __webpack_require__) {
      var metadata = __webpack_require__(309);
      var anObject = __webpack_require__(12);
      var ordinaryOwnMetadataKeys = metadata.keys;
      var toMetaKey = metadata.key;

      metadata.exp({
        getOwnMetadataKeys: function getOwnMetadataKeys(
          target /* , targetKey */
        ) {
          return ordinaryOwnMetadataKeys(
            anObject(target),
            arguments.length < 2 ? undefined : toMetaKey(arguments[1])
          );
        }
      });

      /***/
    },
    /* 315 */
    /***/ function(module, exports, __webpack_require__) {
      var metadata = __webpack_require__(309);
      var anObject = __webpack_require__(12);
      var getPrototypeOf = __webpack_require__(58);
      var ordinaryHasOwnMetadata = metadata.has;
      var toMetaKey = metadata.key;

      var ordinaryHasMetadata = function(MetadataKey, O, P) {
        var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
        if (hasOwn) return true;
        var parent = getPrototypeOf(O);
        return parent !== null
          ? ordinaryHasMetadata(MetadataKey, parent, P)
          : false;
      };

      metadata.exp({
        hasMetadata: function hasMetadata(
          metadataKey,
          target /* , targetKey */
        ) {
          return ordinaryHasMetadata(
            metadataKey,
            anObject(target),
            arguments.length < 3 ? undefined : toMetaKey(arguments[2])
          );
        }
      });

      /***/
    },
    /* 316 */
    /***/ function(module, exports, __webpack_require__) {
      var metadata = __webpack_require__(309);
      var anObject = __webpack_require__(12);
      var ordinaryHasOwnMetadata = metadata.has;
      var toMetaKey = metadata.key;

      metadata.exp({
        hasOwnMetadata: function hasOwnMetadata(
          metadataKey,
          target /* , targetKey */
        ) {
          return ordinaryHasOwnMetadata(
            metadataKey,
            anObject(target),
            arguments.length < 3 ? undefined : toMetaKey(arguments[2])
          );
        }
      });

      /***/
    },
    /* 317 */
    /***/ function(module, exports, __webpack_require__) {
      var $metadata = __webpack_require__(309);
      var anObject = __webpack_require__(12);
      var aFunction = __webpack_require__(21);
      var toMetaKey = $metadata.key;
      var ordinaryDefineOwnMetadata = $metadata.set;

      $metadata.exp({
        metadata: function metadata(metadataKey, metadataValue) {
          return function decorator(target, targetKey) {
            ordinaryDefineOwnMetadata(
              metadataKey,
              metadataValue,
              (targetKey !== undefined ? anObject : aFunction)(target),
              toMetaKey(targetKey)
            );
          };
        }
      });

      /***/
    },
    /* 318 */
    /***/ function(module, exports, __webpack_require__) {
      // https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
      var $export = __webpack_require__(8);
      var microtask = __webpack_require__(210)();
      var process = __webpack_require__(4).process;
      var isNode = __webpack_require__(34)(process) == 'process';

      $export($export.G, {
        asap: function asap(fn) {
          var domain = isNode && process.domain;
          microtask(domain ? domain.bind(fn) : fn);
        }
      });

      /***/
    },
    /* 319 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';
      // https://github.com/zenparsing/es-observable
      var $export = __webpack_require__(8);
      var global = __webpack_require__(4);
      var core = __webpack_require__(9);
      var microtask = __webpack_require__(210)();
      var OBSERVABLE = __webpack_require__(26)('observable');
      var aFunction = __webpack_require__(21);
      var anObject = __webpack_require__(12);
      var anInstance = __webpack_require__(206);
      var redefineAll = __webpack_require__(215);
      var hide = __webpack_require__(10);
      var forOf = __webpack_require__(207);
      var RETURN = forOf.RETURN;

      var getMethod = function(fn) {
        return fn == null ? undefined : aFunction(fn);
      };

      var cleanupSubscription = function(subscription) {
        var cleanup = subscription._c;
        if (cleanup) {
          subscription._c = undefined;
          cleanup();
        }
      };

      var subscriptionClosed = function(subscription) {
        return subscription._o === undefined;
      };

      var closeSubscription = function(subscription) {
        if (!subscriptionClosed(subscription)) {
          subscription._o = undefined;
          cleanupSubscription(subscription);
        }
      };

      var Subscription = function(observer, subscriber) {
        anObject(observer);
        this._c = undefined;
        this._o = observer;
        observer = new SubscriptionObserver(this);
        try {
          var cleanup = subscriber(observer);
          var subscription = cleanup;
          if (cleanup != null) {
            if (typeof cleanup.unsubscribe === 'function')
              cleanup = function() {
                subscription.unsubscribe();
              };
            else aFunction(cleanup);
            this._c = cleanup;
          }
        } catch (e) {
          observer.error(e);
          return;
        }
        if (subscriptionClosed(this)) cleanupSubscription(this);
      };

      Subscription.prototype = redefineAll(
        {},
        {
          unsubscribe: function unsubscribe() {
            closeSubscription(this);
          }
        }
      );

      var SubscriptionObserver = function(subscription) {
        this._s = subscription;
      };

      SubscriptionObserver.prototype = redefineAll(
        {},
        {
          next: function next(value) {
            var subscription = this._s;
            if (!subscriptionClosed(subscription)) {
              var observer = subscription._o;
              try {
                var m = getMethod(observer.next);
                if (m) return m.call(observer, value);
              } catch (e) {
                try {
                  closeSubscription(subscription);
                } finally {
                  throw e;
                }
              }
            }
          },
          error: function error(value) {
            var subscription = this._s;
            if (subscriptionClosed(subscription)) throw value;
            var observer = subscription._o;
            subscription._o = undefined;
            try {
              var m = getMethod(observer.error);
              if (!m) throw value;
              value = m.call(observer, value);
            } catch (e) {
              try {
                cleanupSubscription(subscription);
              } finally {
                throw e;
              }
            }
            cleanupSubscription(subscription);
            return value;
          },
          complete: function complete(value) {
            var subscription = this._s;
            if (!subscriptionClosed(subscription)) {
              var observer = subscription._o;
              subscription._o = undefined;
              try {
                var m = getMethod(observer.complete);
                value = m ? m.call(observer, value) : undefined;
              } catch (e) {
                try {
                  cleanupSubscription(subscription);
                } finally {
                  throw e;
                }
              }
              cleanupSubscription(subscription);
              return value;
            }
          }
        }
      );

      var $Observable = function Observable(subscriber) {
        anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(
          subscriber
        );
      };

      redefineAll($Observable.prototype, {
        subscribe: function subscribe(observer) {
          return new Subscription(observer, this._f);
        },
        forEach: function forEach(fn) {
          var that = this;
          return new (core.Promise || global.Promise)(function(
            resolve,
            reject
          ) {
            aFunction(fn);
            var subscription = that.subscribe({
              next: function(value) {
                try {
                  return fn(value);
                } catch (e) {
                  reject(e);
                  subscription.unsubscribe();
                }
              },
              error: reject,
              complete: resolve
            });
          });
        }
      });

      redefineAll($Observable, {
        from: function from(x) {
          var C = typeof this === 'function' ? this : $Observable;
          var method = getMethod(anObject(x)[OBSERVABLE]);
          if (method) {
            var observable = anObject(method.call(x));
            return observable.constructor === C
              ? observable
              : new C(function(observer) {
                  return observable.subscribe(observer);
                });
          }
          return new C(function(observer) {
            var done = false;
            microtask(function() {
              if (!done) {
                try {
                  if (
                    forOf(x, false, function(it) {
                      observer.next(it);
                      if (done) return RETURN;
                    }) === RETURN
                  )
                    return;
                } catch (e) {
                  if (done) throw e;
                  observer.error(e);
                  return;
                }
                observer.complete();
              }
            });
            return function() {
              done = true;
            };
          });
        },
        of: function of() {
          for (var i = 0, l = arguments.length, items = new Array(l); i < l; )
            items[i] = arguments[i++];
          return new (typeof this === 'function' ? this : $Observable)(function(
            observer
          ) {
            var done = false;
            microtask(function() {
              if (!done) {
                for (var j = 0; j < items.length; ++j) {
                  observer.next(items[j]);
                  if (done) return;
                }
                observer.complete();
              }
            });
            return function() {
              done = true;
            };
          });
        }
      });

      hide($Observable.prototype, OBSERVABLE, function() {
        return this;
      });

      $export($export.G, { Observable: $Observable });

      __webpack_require__(193)('Observable');

      /***/
    },
    /* 320 */
    /***/ function(module, exports, __webpack_require__) {
      // ie9- setTimeout & setInterval additional parameters fix
      var global = __webpack_require__(4);
      var $export = __webpack_require__(8);
      var userAgent = __webpack_require__(213);
      var slice = [].slice;
      var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check
      var wrap = function(set) {
        return function(fn, time /* , ...args */) {
          var boundArgs = arguments.length > 2;
          var args = boundArgs ? slice.call(arguments, 2) : false;
          return set(
            boundArgs
              ? function() {
                  // eslint-disable-next-line no-new-func
                  (typeof fn == 'function' ? fn : Function(fn)).apply(
                    this,
                    args
                  );
                }
              : fn,
            time
          );
        };
      };
      $export($export.G + $export.B + $export.F * MSIE, {
        setTimeout: wrap(global.setTimeout),
        setInterval: wrap(global.setInterval)
      });

      /***/
    },
    /* 321 */
    /***/ function(module, exports, __webpack_require__) {
      var $export = __webpack_require__(8);
      var $task = __webpack_require__(209);
      $export($export.G + $export.B, {
        setImmediate: $task.set,
        clearImmediate: $task.clear
      });

      /***/
    },
    /* 322 */
    /***/ function(module, exports, __webpack_require__) {
      var $iterators = __webpack_require__(194);
      var getKeys = __webpack_require__(30);
      var redefine = __webpack_require__(18);
      var global = __webpack_require__(4);
      var hide = __webpack_require__(10);
      var Iterators = __webpack_require__(129);
      var wks = __webpack_require__(26);
      var ITERATOR = wks('iterator');
      var TO_STRING_TAG = wks('toStringTag');
      var ArrayValues = Iterators.Array;

      var DOMIterables = {
        CSSRuleList: true, // TODO: Not spec compliant, should be false.
        CSSStyleDeclaration: false,
        CSSValueList: false,
        ClientRectList: false,
        DOMRectList: false,
        DOMStringList: false,
        DOMTokenList: true,
        DataTransferItemList: false,
        FileList: false,
        HTMLAllCollection: false,
        HTMLCollection: false,
        HTMLFormElement: false,
        HTMLSelectElement: false,
        MediaList: true, // TODO: Not spec compliant, should be false.
        MimeTypeArray: false,
        NamedNodeMap: false,
        NodeList: true,
        PaintRequestList: false,
        Plugin: false,
        PluginArray: false,
        SVGLengthList: false,
        SVGNumberList: false,
        SVGPathSegList: false,
        SVGPointList: false,
        SVGStringList: false,
        SVGTransformList: false,
        SourceBufferList: false,
        StyleSheetList: true, // TODO: Not spec compliant, should be false.
        TextTrackCueList: false,
        TextTrackList: false,
        TouchList: false
      };

      for (
        var collections = getKeys(DOMIterables), i = 0;
        i < collections.length;
        i++
      ) {
        var NAME = collections[i];
        var explicit = DOMIterables[NAME];
        var Collection = global[NAME];
        var proto = Collection && Collection.prototype;
        var key;
        if (proto) {
          if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
          if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
          Iterators[NAME] = ArrayValues;
          if (explicit)
            for (key in $iterators)
              if (!proto[key]) redefine(proto, key, $iterators[key], true);
        }
      }

      /***/
    },
    /* 323 */
    /***/ function(module, exports) {
      /* WEBPACK VAR INJECTION */ (function(global) {
        /**
         * Copyright (c) 2014, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
         * additional grant of patent rights can be found in the PATENTS file in
         * the same directory.
         */

        !(function(global) {
          'use strict';

          var Op = Object.prototype;
          var hasOwn = Op.hasOwnProperty;
          var undefined; // More compressible than void 0.
          var $Symbol = typeof Symbol === 'function' ? Symbol : {};
          var iteratorSymbol = $Symbol.iterator || '@@iterator';
          var asyncIteratorSymbol = $Symbol.asyncIterator || '@@asyncIterator';
          var toStringTagSymbol = $Symbol.toStringTag || '@@toStringTag';

          var inModule = typeof module === 'object';
          var runtime = global.regeneratorRuntime;
          if (runtime) {
            if (inModule) {
              // If regeneratorRuntime is defined globally and we're in a module,
              // make the exports object identical to regeneratorRuntime.
              module.exports = runtime;
            }
            // Don't bother evaluating the rest of this file if the runtime was
            // already defined globally.
            return;
          }

          // Define the runtime globally (as expected by generated code) as either
          // module.exports (if we're in a module) or a new, empty object.
          runtime = global.regeneratorRuntime = inModule ? module.exports : {};

          function wrap(innerFn, outerFn, self, tryLocsList) {
            // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
            var protoGenerator =
              outerFn && outerFn.prototype instanceof Generator
                ? outerFn
                : Generator;
            var generator = Object.create(protoGenerator.prototype);
            var context = new Context(tryLocsList || []);

            // The ._invoke method unifies the implementations of the .next,
            // .throw, and .return methods.
            generator._invoke = makeInvokeMethod(innerFn, self, context);

            return generator;
          }
          runtime.wrap = wrap;

          // Try/catch helper to minimize deoptimizations. Returns a completion
          // record like context.tryEntries[i].completion. This interface could
          // have been (and was previously) designed to take a closure to be
          // invoked without arguments, but in all the cases we care about we
          // already have an existing method we want to call, so there's no need
          // to create a new function object. We can even get away with assuming
          // the method takes exactly one argument, since that happens to be true
          // in every case, so we don't have to touch the arguments object. The
          // only additional allocation required is the completion record, which
          // has a stable shape and so hopefully should be cheap to allocate.
          function tryCatch(fn, obj, arg) {
            try {
              return { type: 'normal', arg: fn.call(obj, arg) };
            } catch (err) {
              return { type: 'throw', arg: err };
            }
          }

          var GenStateSuspendedStart = 'suspendedStart';
          var GenStateSuspendedYield = 'suspendedYield';
          var GenStateExecuting = 'executing';
          var GenStateCompleted = 'completed';

          // Returning this object from the innerFn has the same effect as
          // breaking out of the dispatch switch statement.
          var ContinueSentinel = {};

          // Dummy constructor functions that we use as the .constructor and
          // .constructor.prototype properties for functions that return Generator
          // objects. For full spec compliance, you may wish to configure your
          // minifier not to mangle the names of these two functions.
          function Generator() {}
          function GeneratorFunction() {}
          function GeneratorFunctionPrototype() {}

          // This is a polyfill for %IteratorPrototype% for environments that
          // don't natively support it.
          var IteratorPrototype = {};
          IteratorPrototype[iteratorSymbol] = function() {
            return this;
          };

          var getProto = Object.getPrototypeOf;
          var NativeIteratorPrototype =
            getProto && getProto(getProto(values([])));
          if (
            NativeIteratorPrototype &&
            NativeIteratorPrototype !== Op &&
            hasOwn.call(NativeIteratorPrototype, iteratorSymbol)
          ) {
            // This environment has a native %IteratorPrototype%; use it instead
            // of the polyfill.
            IteratorPrototype = NativeIteratorPrototype;
          }

          var Gp = (GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(
            IteratorPrototype
          ));
          GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
          GeneratorFunctionPrototype.constructor = GeneratorFunction;
          GeneratorFunctionPrototype[
            toStringTagSymbol
          ] = GeneratorFunction.displayName = 'GeneratorFunction';

          // Helper for defining the .next, .throw, and .return methods of the
          // Iterator interface in terms of a single ._invoke method.
          function defineIteratorMethods(prototype) {
            ['next', 'throw', 'return'].forEach(function(method) {
              prototype[method] = function(arg) {
                return this._invoke(method, arg);
              };
            });
          }

          runtime.isGeneratorFunction = function(genFun) {
            var ctor = typeof genFun === 'function' && genFun.constructor;
            return ctor
              ? ctor === GeneratorFunction ||
                  // For the native GeneratorFunction constructor, the best we can
                  // do is to check its .name property.
                  (ctor.displayName || ctor.name) === 'GeneratorFunction'
              : false;
          };

          runtime.mark = function(genFun) {
            if (Object.setPrototypeOf) {
              Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
            } else {
              genFun.__proto__ = GeneratorFunctionPrototype;
              if (!(toStringTagSymbol in genFun)) {
                genFun[toStringTagSymbol] = 'GeneratorFunction';
              }
            }
            genFun.prototype = Object.create(Gp);
            return genFun;
          };

          // Within the body of any async function, `await x` is transformed to
          // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
          // `hasOwn.call(value, "__await")` to determine if the yielded value is
          // meant to be awaited.
          runtime.awrap = function(arg) {
            return { __await: arg };
          };

          function AsyncIterator(generator) {
            function invoke(method, arg, resolve, reject) {
              var record = tryCatch(generator[method], generator, arg);
              if (record.type === 'throw') {
                reject(record.arg);
              } else {
                var result = record.arg;
                var value = result.value;
                if (
                  value &&
                  typeof value === 'object' &&
                  hasOwn.call(value, '__await')
                ) {
                  return Promise.resolve(value.__await).then(
                    function(value) {
                      invoke('next', value, resolve, reject);
                    },
                    function(err) {
                      invoke('throw', err, resolve, reject);
                    }
                  );
                }

                return Promise.resolve(value).then(function(unwrapped) {
                  // When a yielded Promise is resolved, its final value becomes
                  // the .value of the Promise<{value,done}> result for the
                  // current iteration. If the Promise is rejected, however, the
                  // result for this iteration will be rejected with the same
                  // reason. Note that rejections of yielded Promises are not
                  // thrown back into the generator function, as is the case
                  // when an awaited Promise is rejected. This difference in
                  // behavior between yield and await is important, because it
                  // allows the consumer to decide what to do with the yielded
                  // rejection (swallow it and continue, manually .throw it back
                  // into the generator, abandon iteration, whatever). With
                  // await, by contrast, there is no opportunity to examine the
                  // rejection reason outside the generator function, so the
                  // only option is to throw it from the await expression, and
                  // let the generator function handle the exception.
                  result.value = unwrapped;
                  resolve(result);
                }, reject);
              }
            }

            if (typeof global.process === 'object' && global.process.domain) {
              invoke = global.process.domain.bind(invoke);
            }

            var previousPromise;

            function enqueue(method, arg) {
              function callInvokeWithMethodAndArg() {
                return new Promise(function(resolve, reject) {
                  invoke(method, arg, resolve, reject);
                });
              }

              return (previousPromise =
                // If enqueue has been called before, then we want to wait until
                // all previous Promises have been resolved before calling invoke,
                // so that results are always delivered in the correct order. If
                // enqueue has not been called before, then it is important to
                // call invoke immediately, without waiting on a callback to fire,
                // so that the async generator function has the opportunity to do
                // any necessary setup in a predictable way. This predictability
                // is why the Promise constructor synchronously invokes its
                // executor callback, and why async functions synchronously
                // execute code before the first await. Since we implement simple
                // async functions in terms of async generators, it is especially
                // important to get this right, even though it requires care.
                previousPromise
                  ? previousPromise.then(
                      callInvokeWithMethodAndArg,
                      // Avoid propagating failures to Promises returned by later
                      // invocations of the iterator.
                      callInvokeWithMethodAndArg
                    )
                  : callInvokeWithMethodAndArg());
            }

            // Define the unified helper method that is used to implement .next,
            // .throw, and .return (see defineIteratorMethods).
            this._invoke = enqueue;
          }

          defineIteratorMethods(AsyncIterator.prototype);
          AsyncIterator.prototype[asyncIteratorSymbol] = function() {
            return this;
          };
          runtime.AsyncIterator = AsyncIterator;

          // Note that simple async functions are implemented on top of
          // AsyncIterator objects; they just return a Promise for the value of
          // the final result produced by the iterator.
          runtime.async = function(innerFn, outerFn, self, tryLocsList) {
            var iter = new AsyncIterator(
              wrap(innerFn, outerFn, self, tryLocsList)
            );

            return runtime.isGeneratorFunction(outerFn)
              ? iter // If outerFn is a generator, return the full iterator.
              : iter.next().then(function(result) {
                  return result.done ? result.value : iter.next();
                });
          };

          function makeInvokeMethod(innerFn, self, context) {
            var state = GenStateSuspendedStart;

            return function invoke(method, arg) {
              if (state === GenStateExecuting) {
                throw new Error('Generator is already running');
              }

              if (state === GenStateCompleted) {
                if (method === 'throw') {
                  throw arg;
                }

                // Be forgiving, per 25.3.3.3.3 of the spec:
                // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
                return doneResult();
              }

              context.method = method;
              context.arg = arg;

              while (true) {
                var delegate = context.delegate;
                if (delegate) {
                  var delegateResult = maybeInvokeDelegate(delegate, context);
                  if (delegateResult) {
                    if (delegateResult === ContinueSentinel) continue;
                    return delegateResult;
                  }
                }

                if (context.method === 'next') {
                  // Setting context._sent for legacy support of Babel's
                  // function.sent implementation.
                  context.sent = context._sent = context.arg;
                } else if (context.method === 'throw') {
                  if (state === GenStateSuspendedStart) {
                    state = GenStateCompleted;
                    throw context.arg;
                  }

                  context.dispatchException(context.arg);
                } else if (context.method === 'return') {
                  context.abrupt('return', context.arg);
                }

                state = GenStateExecuting;

                var record = tryCatch(innerFn, self, context);
                if (record.type === 'normal') {
                  // If an exception is thrown from innerFn, we leave state ===
                  // GenStateExecuting and loop back for another invocation.
                  state = context.done
                    ? GenStateCompleted
                    : GenStateSuspendedYield;

                  if (record.arg === ContinueSentinel) {
                    continue;
                  }

                  return {
                    value: record.arg,
                    done: context.done
                  };
                } else if (record.type === 'throw') {
                  state = GenStateCompleted;
                  // Dispatch the exception by looping back around to the
                  // context.dispatchException(context.arg) call above.
                  context.method = 'throw';
                  context.arg = record.arg;
                }
              }
            };
          }

          // Call delegate.iterator[context.method](context.arg) and handle the
          // result, either by returning a { value, done } result from the
          // delegate iterator, or by modifying context.method and context.arg,
          // setting context.delegate to null, and returning the ContinueSentinel.
          function maybeInvokeDelegate(delegate, context) {
            var method = delegate.iterator[context.method];
            if (method === undefined) {
              // A .throw or .return when the delegate iterator has no .throw
              // method always terminates the yield* loop.
              context.delegate = null;

              if (context.method === 'throw') {
                if (delegate.iterator.return) {
                  // If the delegate iterator has a return method, give it a
                  // chance to clean up.
                  context.method = 'return';
                  context.arg = undefined;
                  maybeInvokeDelegate(delegate, context);

                  if (context.method === 'throw') {
                    // If maybeInvokeDelegate(context) changed context.method from
                    // "return" to "throw", let that override the TypeError below.
                    return ContinueSentinel;
                  }
                }

                context.method = 'throw';
                context.arg = new TypeError(
                  "The iterator does not provide a 'throw' method"
                );
              }

              return ContinueSentinel;
            }

            var record = tryCatch(method, delegate.iterator, context.arg);

            if (record.type === 'throw') {
              context.method = 'throw';
              context.arg = record.arg;
              context.delegate = null;
              return ContinueSentinel;
            }

            var info = record.arg;

            if (!info) {
              context.method = 'throw';
              context.arg = new TypeError('iterator result is not an object');
              context.delegate = null;
              return ContinueSentinel;
            }

            if (info.done) {
              // Assign the result of the finished delegate to the temporary
              // variable specified by delegate.resultName (see delegateYield).
              context[delegate.resultName] = info.value;

              // Resume execution at the desired location (see delegateYield).
              context.next = delegate.nextLoc;

              // If context.method was "throw" but the delegate handled the
              // exception, let the outer generator proceed normally. If
              // context.method was "next", forget context.arg since it has been
              // "consumed" by the delegate iterator. If context.method was
              // "return", allow the original .return call to continue in the
              // outer generator.
              if (context.method !== 'return') {
                context.method = 'next';
                context.arg = undefined;
              }
            } else {
              // Re-yield the result returned by the delegate method.
              return info;
            }

            // The delegate iterator is finished, so forget it and continue with
            // the outer generator.
            context.delegate = null;
            return ContinueSentinel;
          }

          // Define Generator.prototype.{next,throw,return} in terms of the
          // unified ._invoke helper method.
          defineIteratorMethods(Gp);

          Gp[toStringTagSymbol] = 'Generator';

          // A Generator should always return itself as the iterator object when the
          // @@iterator function is called on it. Some browsers' implementations of the
          // iterator prototype chain incorrectly implement this, causing the Generator
          // object to not be returned from this call. This ensures that doesn't happen.
          // See https://github.com/facebook/regenerator/issues/274 for more details.
          Gp[iteratorSymbol] = function() {
            return this;
          };

          Gp.toString = function() {
            return '[object Generator]';
          };

          function pushTryEntry(locs) {
            var entry = { tryLoc: locs[0] };

            if (1 in locs) {
              entry.catchLoc = locs[1];
            }

            if (2 in locs) {
              entry.finallyLoc = locs[2];
              entry.afterLoc = locs[3];
            }

            this.tryEntries.push(entry);
          }

          function resetTryEntry(entry) {
            var record = entry.completion || {};
            record.type = 'normal';
            delete record.arg;
            entry.completion = record;
          }

          function Context(tryLocsList) {
            // The root entry object (effectively a try statement without a catch
            // or a finally block) gives us a place to store values thrown from
            // locations where there is no enclosing try statement.
            this.tryEntries = [{ tryLoc: 'root' }];
            tryLocsList.forEach(pushTryEntry, this);
            this.reset(true);
          }

          runtime.keys = function(object) {
            var keys = [];
            for (var key in object) {
              keys.push(key);
            }
            keys.reverse();

            // Rather than returning an object with a next method, we keep
            // things simple and return the next function itself.
            return function next() {
              while (keys.length) {
                var key = keys.pop();
                if (key in object) {
                  next.value = key;
                  next.done = false;
                  return next;
                }
              }

              // To avoid creating an additional object, we just hang the .value
              // and .done properties off the next function object itself. This
              // also ensures that the minifier will not anonymize the function.
              next.done = true;
              return next;
            };
          };

          function values(iterable) {
            if (iterable) {
              var iteratorMethod = iterable[iteratorSymbol];
              if (iteratorMethod) {
                return iteratorMethod.call(iterable);
              }

              if (typeof iterable.next === 'function') {
                return iterable;
              }

              if (!isNaN(iterable.length)) {
                var i = -1,
                  next = function next() {
                    while (++i < iterable.length) {
                      if (hasOwn.call(iterable, i)) {
                        next.value = iterable[i];
                        next.done = false;
                        return next;
                      }
                    }

                    next.value = undefined;
                    next.done = true;

                    return next;
                  };

                return (next.next = next);
              }
            }

            // Return an iterator with no values.
            return { next: doneResult };
          }
          runtime.values = values;

          function doneResult() {
            return { value: undefined, done: true };
          }

          Context.prototype = {
            constructor: Context,

            reset: function(skipTempReset) {
              this.prev = 0;
              this.next = 0;
              // Resetting context._sent for legacy support of Babel's
              // function.sent implementation.
              this.sent = this._sent = undefined;
              this.done = false;
              this.delegate = null;

              this.method = 'next';
              this.arg = undefined;

              this.tryEntries.forEach(resetTryEntry);

              if (!skipTempReset) {
                for (var name in this) {
                  // Not sure about the optimal order of these conditions:
                  if (
                    name.charAt(0) === 't' &&
                    hasOwn.call(this, name) &&
                    !isNaN(+name.slice(1))
                  ) {
                    this[name] = undefined;
                  }
                }
              }
            },

            stop: function() {
              this.done = true;

              var rootEntry = this.tryEntries[0];
              var rootRecord = rootEntry.completion;
              if (rootRecord.type === 'throw') {
                throw rootRecord.arg;
              }

              return this.rval;
            },

            dispatchException: function(exception) {
              if (this.done) {
                throw exception;
              }

              var context = this;
              function handle(loc, caught) {
                record.type = 'throw';
                record.arg = exception;
                context.next = loc;

                if (caught) {
                  // If the dispatched exception was caught by a catch block,
                  // then let that catch block handle the exception normally.
                  context.method = 'next';
                  context.arg = undefined;
                }

                return !!caught;
              }

              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                var record = entry.completion;

                if (entry.tryLoc === 'root') {
                  // Exception thrown outside of any try block that could handle
                  // it, so set the completion value of the entire function to
                  // throw the exception.
                  return handle('end');
                }

                if (entry.tryLoc <= this.prev) {
                  var hasCatch = hasOwn.call(entry, 'catchLoc');
                  var hasFinally = hasOwn.call(entry, 'finallyLoc');

                  if (hasCatch && hasFinally) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true);
                    } else if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc);
                    }
                  } else if (hasCatch) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true);
                    }
                  } else if (hasFinally) {
                    if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc);
                    }
                  } else {
                    throw new Error('try statement without catch or finally');
                  }
                }
              }
            },

            abrupt: function(type, arg) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (
                  entry.tryLoc <= this.prev &&
                  hasOwn.call(entry, 'finallyLoc') &&
                  this.prev < entry.finallyLoc
                ) {
                  var finallyEntry = entry;
                  break;
                }
              }

              if (
                finallyEntry &&
                (type === 'break' || type === 'continue') &&
                finallyEntry.tryLoc <= arg &&
                arg <= finallyEntry.finallyLoc
              ) {
                // Ignore the finally entry if control is not jumping to a
                // location outside the try/catch block.
                finallyEntry = null;
              }

              var record = finallyEntry ? finallyEntry.completion : {};
              record.type = type;
              record.arg = arg;

              if (finallyEntry) {
                this.method = 'next';
                this.next = finallyEntry.finallyLoc;
                return ContinueSentinel;
              }

              return this.complete(record);
            },

            complete: function(record, afterLoc) {
              if (record.type === 'throw') {
                throw record.arg;
              }

              if (record.type === 'break' || record.type === 'continue') {
                this.next = record.arg;
              } else if (record.type === 'return') {
                this.rval = this.arg = record.arg;
                this.method = 'return';
                this.next = 'end';
              } else if (record.type === 'normal' && afterLoc) {
                this.next = afterLoc;
              }

              return ContinueSentinel;
            },

            finish: function(finallyLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.finallyLoc === finallyLoc) {
                  this.complete(entry.completion, entry.afterLoc);
                  resetTryEntry(entry);
                  return ContinueSentinel;
                }
              }
            },

            catch: function(tryLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.tryLoc === tryLoc) {
                  var record = entry.completion;
                  if (record.type === 'throw') {
                    var thrown = record.arg;
                    resetTryEntry(entry);
                  }
                  return thrown;
                }
              }

              // The context.catch method must only be called with a location
              // argument that corresponds to a known catch block.
              throw new Error('illegal catch attempt');
            },

            delegateYield: function(iterable, resultName, nextLoc) {
              this.delegate = {
                iterator: values(iterable),
                resultName: resultName,
                nextLoc: nextLoc
              };

              if (this.method === 'next') {
                // Deliberately forget the last sent value so that we don't
                // accidentally pass it on to the delegate.
                this.arg = undefined;
              }

              return ContinueSentinel;
            }
          };
        })(
          // Among the various tricks for obtaining a reference to the global
          // object, this seems to be the most reliable technique that does not
          // use indirect eval (which violates Content Security Policy).
          typeof global === 'object'
            ? global
            : typeof window === 'object'
              ? window
              : typeof self === 'object'
                ? self
                : this
        );

        /* WEBPACK VAR INJECTION */
      }.call(
        exports,
        (function() {
          return this;
        })()
      ));

      /***/
    },
    /* 324 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(325);
      module.exports = __webpack_require__(9).RegExp.escape;

      /***/
    },
    /* 325 */
    /***/ function(module, exports, __webpack_require__) {
      // https://github.com/benjamingr/RexExp.escape
      var $export = __webpack_require__(8);
      var $re = __webpack_require__(326)(/[\\^$*+?.()|[\]{}]/g, '\\$&');

      $export($export.S, 'RegExp', {
        escape: function escape(it) {
          return $re(it);
        }
      });

      /***/
    },
    /* 326 */
    /***/ function(module, exports) {
      module.exports = function(regExp, replace) {
        var replacer =
          replace === Object(replace)
            ? function(part) {
                return replace[part];
              }
            : replace;
        return function(it) {
          return String(it).replace(regExp, replacer);
        };
      };

      /***/
    },
    /* 327 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(334);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _root = __webpack_require__(343);

      var _root2 = _interopRequireDefault(_root);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      _reactDom2.default.render(
        _react2.default.createElement(_root2.default, null),
        document.getElementById('app')
      );

      /***/
    },
    /* 328 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      if (undefined === 'production') {
        module.exports = __webpack_require__(329);
      } else {
        module.exports = __webpack_require__(331);
      }

      /***/
    },
    /* 329 */
    /***/ function(module, exports, __webpack_require__) {
      /** @license React v16.5.2
       * react.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      'use strict';
      var m = __webpack_require__(330),
        n = 'function' === typeof Symbol && Symbol.for,
        p = n ? Symbol.for('react.element') : 60103,
        q = n ? Symbol.for('react.portal') : 60106,
        r = n ? Symbol.for('react.fragment') : 60107,
        t = n ? Symbol.for('react.strict_mode') : 60108,
        u = n ? Symbol.for('react.profiler') : 60114,
        v = n ? Symbol.for('react.provider') : 60109,
        w = n ? Symbol.for('react.context') : 60110,
        x = n ? Symbol.for('react.async_mode') : 60111,
        y = n ? Symbol.for('react.forward_ref') : 60112;
      n && Symbol.for('react.placeholder');
      var z = 'function' === typeof Symbol && Symbol.iterator;
      function A(a, b, d, c, e, g, h, f) {
        if (!a) {
          a = void 0;
          if (void 0 === b)
            a = Error(
              'Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.'
            );
          else {
            var k = [d, c, e, g, h, f],
              l = 0;
            a = Error(
              b.replace(/%s/g, function() {
                return k[l++];
              })
            );
            a.name = 'Invariant Violation';
          }
          a.framesToPop = 1;
          throw a;
        }
      }
      function B(a) {
        for (
          var b = arguments.length - 1,
            d = 'https://reactjs.org/docs/error-decoder.html?invariant=' + a,
            c = 0;
          c < b;
          c++
        )
          d += '&args[]=' + encodeURIComponent(arguments[c + 1]);
        A(
          !1,
          'Minified React error #' +
            a +
            '; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ',
          d
        );
      }
      var C = {
          isMounted: function() {
            return !1;
          },
          enqueueForceUpdate: function() {},
          enqueueReplaceState: function() {},
          enqueueSetState: function() {}
        },
        D = {};
      function E(a, b, d) {
        this.props = a;
        this.context = b;
        this.refs = D;
        this.updater = d || C;
      }
      E.prototype.isReactComponent = {};
      E.prototype.setState = function(a, b) {
        'object' !== typeof a && 'function' !== typeof a && null != a
          ? B('85')
          : void 0;
        this.updater.enqueueSetState(this, a, b, 'setState');
      };
      E.prototype.forceUpdate = function(a) {
        this.updater.enqueueForceUpdate(this, a, 'forceUpdate');
      };
      function F() {}
      F.prototype = E.prototype;
      function G(a, b, d) {
        this.props = a;
        this.context = b;
        this.refs = D;
        this.updater = d || C;
      }
      var H = (G.prototype = new F());
      H.constructor = G;
      m(H, E.prototype);
      H.isPureReactComponent = !0;
      var I = { current: null, currentDispatcher: null },
        J = Object.prototype.hasOwnProperty,
        K = { key: !0, ref: !0, __self: !0, __source: !0 };
      function L(a, b, d) {
        var c = void 0,
          e = {},
          g = null,
          h = null;
        if (null != b)
          for (c in (void 0 !== b.ref && (h = b.ref),
          void 0 !== b.key && (g = '' + b.key),
          b))
            J.call(b, c) && !K.hasOwnProperty(c) && (e[c] = b[c]);
        var f = arguments.length - 2;
        if (1 === f) e.children = d;
        else if (1 < f) {
          for (var k = Array(f), l = 0; l < f; l++) k[l] = arguments[l + 2];
          e.children = k;
        }
        if (a && a.defaultProps)
          for (c in ((f = a.defaultProps), f)) void 0 === e[c] && (e[c] = f[c]);
        return {
          $$typeof: p,
          type: a,
          key: g,
          ref: h,
          props: e,
          _owner: I.current
        };
      }
      function M(a, b) {
        return {
          $$typeof: p,
          type: a.type,
          key: b,
          ref: a.ref,
          props: a.props,
          _owner: a._owner
        };
      }
      function N(a) {
        return 'object' === typeof a && null !== a && a.$$typeof === p;
      }
      function escape(a) {
        var b = { '=': '=0', ':': '=2' };
        return (
          '$' +
          ('' + a).replace(/[=:]/g, function(a) {
            return b[a];
          })
        );
      }
      var O = /\/+/g,
        P = [];
      function Q(a, b, d, c) {
        if (P.length) {
          var e = P.pop();
          e.result = a;
          e.keyPrefix = b;
          e.func = d;
          e.context = c;
          e.count = 0;
          return e;
        }
        return { result: a, keyPrefix: b, func: d, context: c, count: 0 };
      }
      function R(a) {
        a.result = null;
        a.keyPrefix = null;
        a.func = null;
        a.context = null;
        a.count = 0;
        10 > P.length && P.push(a);
      }
      function S(a, b, d, c) {
        var e = typeof a;
        if ('undefined' === e || 'boolean' === e) a = null;
        var g = !1;
        if (null === a) g = !0;
        else
          switch (e) {
            case 'string':
            case 'number':
              g = !0;
              break;
            case 'object':
              switch (a.$$typeof) {
                case p:
                case q:
                  g = !0;
              }
          }
        if (g) return d(c, a, '' === b ? '.' + T(a, 0) : b), 1;
        g = 0;
        b = '' === b ? '.' : b + ':';
        if (Array.isArray(a))
          for (var h = 0; h < a.length; h++) {
            e = a[h];
            var f = b + T(e, h);
            g += S(e, f, d, c);
          }
        else if (
          (null === a || 'object' !== typeof a
            ? (f = null)
            : ((f = (z && a[z]) || a['@@iterator']),
              (f = 'function' === typeof f ? f : null)),
          'function' === typeof f)
        )
          for (a = f.call(a), h = 0; !(e = a.next()).done; )
            (e = e.value), (f = b + T(e, h++)), (g += S(e, f, d, c));
        else
          'object' === e &&
            ((d = '' + a),
            B(
              '31',
              '[object Object]' === d
                ? 'object with keys {' + Object.keys(a).join(', ') + '}'
                : d,
              ''
            ));
        return g;
      }
      function U(a, b, d) {
        return null == a ? 0 : S(a, '', b, d);
      }
      function T(a, b) {
        return 'object' === typeof a && null !== a && null != a.key
          ? escape(a.key)
          : b.toString(36);
      }
      function V(a, b) {
        a.func.call(a.context, b, a.count++);
      }
      function aa(a, b, d) {
        var c = a.result,
          e = a.keyPrefix;
        a = a.func.call(a.context, b, a.count++);
        Array.isArray(a)
          ? W(a, c, d, function(a) {
              return a;
            })
          : null != a &&
            (N(a) &&
              (a = M(
                a,
                e +
                  (!a.key || (b && b.key === a.key)
                    ? ''
                    : ('' + a.key).replace(O, '$&/') + '/') +
                  d
              )),
            c.push(a));
      }
      function W(a, b, d, c, e) {
        var g = '';
        null != d && (g = ('' + d).replace(O, '$&/') + '/');
        b = Q(b, g, c, e);
        U(a, aa, b);
        R(b);
      }
      function ba(a, b) {
        var d = I.currentDispatcher;
        null === d ? B('277') : void 0;
        return d.readContext(a, b);
      }
      var X = {
          Children: {
            map: function(a, b, d) {
              if (null == a) return a;
              var c = [];
              W(a, c, null, b, d);
              return c;
            },
            forEach: function(a, b, d) {
              if (null == a) return a;
              b = Q(null, null, b, d);
              U(a, V, b);
              R(b);
            },
            count: function(a) {
              return U(
                a,
                function() {
                  return null;
                },
                null
              );
            },
            toArray: function(a) {
              var b = [];
              W(a, b, null, function(a) {
                return a;
              });
              return b;
            },
            only: function(a) {
              N(a) ? void 0 : B('143');
              return a;
            }
          },
          createRef: function() {
            return { current: null };
          },
          Component: E,
          PureComponent: G,
          createContext: function(a, b) {
            void 0 === b && (b = null);
            a = {
              $$typeof: w,
              _calculateChangedBits: b,
              _currentValue: a,
              _currentValue2: a,
              Provider: null,
              Consumer: null,
              unstable_read: null
            };
            a.Provider = { $$typeof: v, _context: a };
            a.Consumer = a;
            a.unstable_read = ba.bind(null, a);
            return a;
          },
          forwardRef: function(a) {
            return { $$typeof: y, render: a };
          },
          Fragment: r,
          StrictMode: t,
          unstable_AsyncMode: x,
          unstable_Profiler: u,
          createElement: L,
          cloneElement: function(a, b, d) {
            null === a || void 0 === a ? B('267', a) : void 0;
            var c = void 0,
              e = m({}, a.props),
              g = a.key,
              h = a.ref,
              f = a._owner;
            if (null != b) {
              void 0 !== b.ref && ((h = b.ref), (f = I.current));
              void 0 !== b.key && (g = '' + b.key);
              var k = void 0;
              a.type && a.type.defaultProps && (k = a.type.defaultProps);
              for (c in b)
                J.call(b, c) &&
                  !K.hasOwnProperty(c) &&
                  (e[c] = void 0 === b[c] && void 0 !== k ? k[c] : b[c]);
            }
            c = arguments.length - 2;
            if (1 === c) e.children = d;
            else if (1 < c) {
              k = Array(c);
              for (var l = 0; l < c; l++) k[l] = arguments[l + 2];
              e.children = k;
            }
            return {
              $$typeof: p,
              type: a.type,
              key: g,
              ref: h,
              props: e,
              _owner: f
            };
          },
          createFactory: function(a) {
            var b = L.bind(null, a);
            b.type = a;
            return b;
          },
          isValidElement: N,
          version: '16.5.2',
          __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
            ReactCurrentOwner: I,
            assign: m
          }
        },
        Y = { default: X },
        Z = (Y && X) || Y;
      module.exports = Z.default || Z;

      /***/
    },
    /* 330 */
    /***/ function(module, exports) {
      /*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

      'use strict';
      /* eslint-disable no-unused-vars */
      var getOwnPropertySymbols = Object.getOwnPropertySymbols;
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      var propIsEnumerable = Object.prototype.propertyIsEnumerable;

      function toObject(val) {
        if (val === null || val === undefined) {
          throw new TypeError(
            'Object.assign cannot be called with null or undefined'
          );
        }

        return Object(val);
      }

      function shouldUseNative() {
        try {
          if (!Object.assign) {
            return false;
          }

          // Detect buggy property enumeration order in older V8 versions.

          // https://bugs.chromium.org/p/v8/issues/detail?id=4118
          var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
          test1[5] = 'de';
          if (Object.getOwnPropertyNames(test1)[0] === '5') {
            return false;
          }

          // https://bugs.chromium.org/p/v8/issues/detail?id=3056
          var test2 = {};
          for (var i = 0; i < 10; i++) {
            test2['_' + String.fromCharCode(i)] = i;
          }
          var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
            return test2[n];
          });
          if (order2.join('') !== '0123456789') {
            return false;
          }

          // https://bugs.chromium.org/p/v8/issues/detail?id=3056
          var test3 = {};
          'abcdefghijklmnopqrst'.split('').forEach(function(letter) {
            test3[letter] = letter;
          });
          if (
            Object.keys(Object.assign({}, test3)).join('') !==
            'abcdefghijklmnopqrst'
          ) {
            return false;
          }

          return true;
        } catch (err) {
          // We don't expect any of the above to throw, but better to be safe.
          return false;
        }
      }

      module.exports = shouldUseNative()
        ? Object.assign
        : function(target, source) {
            var from;
            var to = toObject(target);
            var symbols;

            for (var s = 1; s < arguments.length; s++) {
              from = Object(arguments[s]);

              for (var key in from) {
                if (hasOwnProperty.call(from, key)) {
                  to[key] = from[key];
                }
              }

              if (getOwnPropertySymbols) {
                symbols = getOwnPropertySymbols(from);
                for (var i = 0; i < symbols.length; i++) {
                  if (propIsEnumerable.call(from, symbols[i])) {
                    to[symbols[i]] = from[symbols[i]];
                  }
                }
              }
            }

            return to;
          };

      /***/
    },
    /* 331 */
    /***/ function(module, exports, __webpack_require__) {
      /** @license React v16.5.2
       * react.development.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      'use strict';

      if (undefined !== 'production') {
        (function() {
          'use strict';

          var _assign = __webpack_require__(330);
          var checkPropTypes = __webpack_require__(332);

          // TODO: this is special because it gets imported during build.

          var ReactVersion = '16.5.2';

          // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
          // nor polyfill, then a plain number is used for performance.
          var hasSymbol = typeof Symbol === 'function' && Symbol.for;

          var REACT_ELEMENT_TYPE = hasSymbol
            ? Symbol.for('react.element')
            : 0xeac7;
          var REACT_PORTAL_TYPE = hasSymbol
            ? Symbol.for('react.portal')
            : 0xeaca;
          var REACT_FRAGMENT_TYPE = hasSymbol
            ? Symbol.for('react.fragment')
            : 0xeacb;
          var REACT_STRICT_MODE_TYPE = hasSymbol
            ? Symbol.for('react.strict_mode')
            : 0xeacc;
          var REACT_PROFILER_TYPE = hasSymbol
            ? Symbol.for('react.profiler')
            : 0xead2;
          var REACT_PROVIDER_TYPE = hasSymbol
            ? Symbol.for('react.provider')
            : 0xeacd;
          var REACT_CONTEXT_TYPE = hasSymbol
            ? Symbol.for('react.context')
            : 0xeace;
          var REACT_ASYNC_MODE_TYPE = hasSymbol
            ? Symbol.for('react.async_mode')
            : 0xeacf;
          var REACT_FORWARD_REF_TYPE = hasSymbol
            ? Symbol.for('react.forward_ref')
            : 0xead0;
          var REACT_PLACEHOLDER_TYPE = hasSymbol
            ? Symbol.for('react.placeholder')
            : 0xead1;

          var MAYBE_ITERATOR_SYMBOL =
            typeof Symbol === 'function' && Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL = '@@iterator';

          function getIteratorFn(maybeIterable) {
            if (maybeIterable === null || typeof maybeIterable !== 'object') {
              return null;
            }
            var maybeIterator =
              (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||
              maybeIterable[FAUX_ITERATOR_SYMBOL];
            if (typeof maybeIterator === 'function') {
              return maybeIterator;
            }
            return null;
          }

          // Exports ReactDOM.createRoot

          // Experimental error-boundary API that can recover from errors within a single
          // render phase

          // Suspense
          var enableSuspense = false;
          // Helps identify side effects in begin-phase lifecycle hooks and setState reducers:

          // In some cases, StrictMode should also double-render lifecycles.
          // This can be confusing for tests though,
          // And it can be bad for performance in production.
          // This feature flag can be used to control the behavior:

          // To preserve the "Pause on caught exceptions" behavior of the debugger, we
          // replay the begin phase of a failed component inside invokeGuardedCallback.

          // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:

          // Warn about legacy context API

          // Gather advanced timing metrics for Profiler subtrees.

          // Trace which interactions trigger each commit.

          // Only used in www builds.

          // Only used in www builds.

          // React Fire: prevent the value and checked attributes from syncing
          // with their related DOM properties

          /**
           * Use invariant() to assert state which your program assumes to be true.
           *
           * Provide sprintf-style format (only %s is supported) and arguments
           * to provide information about what broke and what you were
           * expecting.
           *
           * The invariant message will be stripped in production, but the invariant
           * will remain to ensure logic does not differ in production.
           */

          var validateFormat = function() {};

          {
            validateFormat = function(format) {
              if (format === undefined) {
                throw new Error('invariant requires an error message argument');
              }
            };
          }

          function invariant(condition, format, a, b, c, d, e, f) {
            validateFormat(format);

            if (!condition) {
              var error = void 0;
              if (format === undefined) {
                error = new Error(
                  'Minified exception occurred; use the non-minified dev environment ' +
                    'for the full error message and additional helpful warnings.'
                );
              } else {
                var args = [a, b, c, d, e, f];
                var argIndex = 0;
                error = new Error(
                  format.replace(/%s/g, function() {
                    return args[argIndex++];
                  })
                );
                error.name = 'Invariant Violation';
              }

              error.framesToPop = 1; // we don't care about invariant's own frame
              throw error;
            }
          }

          // Relying on the `invariant()` implementation lets us
          // preserve the format and params in the www builds.

          /**
           * Forked from fbjs/warning:
           * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
           *
           * Only change is we use console.warn instead of console.error,
           * and do nothing when 'console' is not supported.
           * This really simplifies the code.
           * ---
           * Similar to invariant but only logs a warning if the condition is not met.
           * This can be used to log issues in development environments in critical
           * paths. Removing the logging code for production environments will keep the
           * same logic and follow the same code paths.
           */

          var lowPriorityWarning = function() {};

          {
            var printWarning = function(format) {
              for (
                var _len = arguments.length,
                  args = Array(_len > 1 ? _len - 1 : 0),
                  _key = 1;
                _key < _len;
                _key++
              ) {
                args[_key - 1] = arguments[_key];
              }

              var argIndex = 0;
              var message =
                'Warning: ' +
                format.replace(/%s/g, function() {
                  return args[argIndex++];
                });
              if (typeof console !== 'undefined') {
                console.warn(message);
              }
              try {
                // --- Welcome to debugging React ---
                // This error was thrown as a convenience so that you can use this stack
                // to find the callsite that caused this warning to fire.
                throw new Error(message);
              } catch (x) {}
            };

            lowPriorityWarning = function(condition, format) {
              if (format === undefined) {
                throw new Error(
                  '`lowPriorityWarning(condition, format, ...args)` requires a warning ' +
                    'message argument'
                );
              }
              if (!condition) {
                for (
                  var _len2 = arguments.length,
                    args = Array(_len2 > 2 ? _len2 - 2 : 0),
                    _key2 = 2;
                  _key2 < _len2;
                  _key2++
                ) {
                  args[_key2 - 2] = arguments[_key2];
                }

                printWarning.apply(undefined, [format].concat(args));
              }
            };
          }

          var lowPriorityWarning$1 = lowPriorityWarning;

          /**
           * Similar to invariant but only logs a warning if the condition is not met.
           * This can be used to log issues in development environments in critical
           * paths. Removing the logging code for production environments will keep the
           * same logic and follow the same code paths.
           */

          var warningWithoutStack = function() {};

          {
            warningWithoutStack = function(condition, format) {
              for (
                var _len = arguments.length,
                  args = Array(_len > 2 ? _len - 2 : 0),
                  _key = 2;
                _key < _len;
                _key++
              ) {
                args[_key - 2] = arguments[_key];
              }

              if (format === undefined) {
                throw new Error(
                  '`warningWithoutStack(condition, format, ...args)` requires a warning ' +
                    'message argument'
                );
              }
              if (args.length > 8) {
                // Check before the condition to catch violations early.
                throw new Error(
                  'warningWithoutStack() currently supports at most 8 arguments.'
                );
              }
              if (condition) {
                return;
              }
              if (typeof console !== 'undefined') {
                var _args$map = args.map(function(item) {
                    return '' + item;
                  }),
                  a = _args$map[0],
                  b = _args$map[1],
                  c = _args$map[2],
                  d = _args$map[3],
                  e = _args$map[4],
                  f = _args$map[5],
                  g = _args$map[6],
                  h = _args$map[7];

                var message = 'Warning: ' + format;

                // We intentionally don't use spread (or .apply) because it breaks IE9:
                // https://github.com/facebook/react/issues/13610
                switch (args.length) {
                  case 0:
                    console.error(message);
                    break;
                  case 1:
                    console.error(message, a);
                    break;
                  case 2:
                    console.error(message, a, b);
                    break;
                  case 3:
                    console.error(message, a, b, c);
                    break;
                  case 4:
                    console.error(message, a, b, c, d);
                    break;
                  case 5:
                    console.error(message, a, b, c, d, e);
                    break;
                  case 6:
                    console.error(message, a, b, c, d, e, f);
                    break;
                  case 7:
                    console.error(message, a, b, c, d, e, f, g);
                    break;
                  case 8:
                    console.error(message, a, b, c, d, e, f, g, h);
                    break;
                  default:
                    throw new Error(
                      'warningWithoutStack() currently supports at most 8 arguments.'
                    );
                }
              }
              try {
                // --- Welcome to debugging React ---
                // This error was thrown as a convenience so that you can use this stack
                // to find the callsite that caused this warning to fire.
                var argIndex = 0;
                var _message =
                  'Warning: ' +
                  format.replace(/%s/g, function() {
                    return args[argIndex++];
                  });
                throw new Error(_message);
              } catch (x) {}
            };
          }

          var warningWithoutStack$1 = warningWithoutStack;

          var didWarnStateUpdateForUnmountedComponent = {};

          function warnNoop(publicInstance, callerName) {
            {
              var _constructor = publicInstance.constructor;
              var componentName =
                (_constructor &&
                  (_constructor.displayName || _constructor.name)) ||
                'ReactClass';
              var warningKey = componentName + '.' + callerName;
              if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
                return;
              }
              warningWithoutStack$1(
                false,
                "Can't call %s on a component that is not yet mounted. " +
                  'This is a no-op, but it might indicate a bug in your application. ' +
                  'Instead, assign to `this.state` directly or define a `state = {};` ' +
                  'class property with the desired state in the %s component.',
                callerName,
                componentName
              );
              didWarnStateUpdateForUnmountedComponent[warningKey] = true;
            }
          }

          /**
           * This is the abstract API for an update queue.
           */
          var ReactNoopUpdateQueue = {
            /**
             * Checks whether or not this composite component is mounted.
             * @param {ReactClass} publicInstance The instance we want to test.
             * @return {boolean} True if mounted, false otherwise.
             * @protected
             * @final
             */
            isMounted: function(publicInstance) {
              return false;
            },

            /**
             * Forces an update. This should only be invoked when it is known with
             * certainty that we are **not** in a DOM transaction.
             *
             * You may want to call this when you know that some deeper aspect of the
             * component's state has changed but `setState` was not called.
             *
             * This will not invoke `shouldComponentUpdate`, but it will invoke
             * `componentWillUpdate` and `componentDidUpdate`.
             *
             * @param {ReactClass} publicInstance The instance that should rerender.
             * @param {?function} callback Called after component is updated.
             * @param {?string} callerName name of the calling function in the public API.
             * @internal
             */
            enqueueForceUpdate: function(publicInstance, callback, callerName) {
              warnNoop(publicInstance, 'forceUpdate');
            },

            /**
             * Replaces all of the state. Always use this or `setState` to mutate state.
             * You should treat `this.state` as immutable.
             *
             * There is no guarantee that `this.state` will be immediately updated, so
             * accessing `this.state` after calling this method may return the old value.
             *
             * @param {ReactClass} publicInstance The instance that should rerender.
             * @param {object} completeState Next state.
             * @param {?function} callback Called after component is updated.
             * @param {?string} callerName name of the calling function in the public API.
             * @internal
             */
            enqueueReplaceState: function(
              publicInstance,
              completeState,
              callback,
              callerName
            ) {
              warnNoop(publicInstance, 'replaceState');
            },

            /**
             * Sets a subset of the state. This only exists because _pendingState is
             * internal. This provides a merging strategy that is not available to deep
             * properties which is confusing. TODO: Expose pendingState or don't use it
             * during the merge.
             *
             * @param {ReactClass} publicInstance The instance that should rerender.
             * @param {object} partialState Next partial state to be merged with state.
             * @param {?function} callback Called after component is updated.
             * @param {?string} Name of the calling function in the public API.
             * @internal
             */
            enqueueSetState: function(
              publicInstance,
              partialState,
              callback,
              callerName
            ) {
              warnNoop(publicInstance, 'setState');
            }
          };

          var emptyObject = {};
          {
            Object.freeze(emptyObject);
          }

          /**
           * Base class helpers for the updating state of a component.
           */
          function Component(props, context, updater) {
            this.props = props;
            this.context = context;
            // If a component has string refs, we will assign a different object later.
            this.refs = emptyObject;
            // We initialize the default updater but the real one gets injected by the
            // renderer.
            this.updater = updater || ReactNoopUpdateQueue;
          }

          Component.prototype.isReactComponent = {};

          /**
           * Sets a subset of the state. Always use this to mutate
           * state. You should treat `this.state` as immutable.
           *
           * There is no guarantee that `this.state` will be immediately updated, so
           * accessing `this.state` after calling this method may return the old value.
           *
           * There is no guarantee that calls to `setState` will run synchronously,
           * as they may eventually be batched together.  You can provide an optional
           * callback that will be executed when the call to setState is actually
           * completed.
           *
           * When a function is provided to setState, it will be called at some point in
           * the future (not synchronously). It will be called with the up to date
           * component arguments (state, props, context). These values can be different
           * from this.* because your function may be called after receiveProps but before
           * shouldComponentUpdate, and this new state, props, and context will not yet be
           * assigned to this.
           *
           * @param {object|function} partialState Next partial state or function to
           *        produce next partial state to be merged with current state.
           * @param {?function} callback Called after state is updated.
           * @final
           * @protected
           */
          Component.prototype.setState = function(partialState, callback) {
            !(
              typeof partialState === 'object' ||
              typeof partialState === 'function' ||
              partialState == null
            )
              ? invariant(
                  false,
                  'setState(...): takes an object of state variables to update or a function which returns an object of state variables.'
                )
              : void 0;
            this.updater.enqueueSetState(
              this,
              partialState,
              callback,
              'setState'
            );
          };

          /**
           * Forces an update. This should only be invoked when it is known with
           * certainty that we are **not** in a DOM transaction.
           *
           * You may want to call this when you know that some deeper aspect of the
           * component's state has changed but `setState` was not called.
           *
           * This will not invoke `shouldComponentUpdate`, but it will invoke
           * `componentWillUpdate` and `componentDidUpdate`.
           *
           * @param {?function} callback Called after update is complete.
           * @final
           * @protected
           */
          Component.prototype.forceUpdate = function(callback) {
            this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
          };

          /**
           * Deprecated APIs. These APIs used to exist on classic React classes but since
           * we would like to deprecate them, we're not going to move them over to this
           * modern base class. Instead, we define a getter that warns if it's accessed.
           */
          {
            var deprecatedAPIs = {
              isMounted: [
                'isMounted',
                'Instead, make sure to clean up subscriptions and pending requests in ' +
                  'componentWillUnmount to prevent memory leaks.'
              ],
              replaceState: [
                'replaceState',
                'Refactor your code to use setState instead (see ' +
                  'https://github.com/facebook/react/issues/3236).'
              ]
            };
            var defineDeprecationWarning = function(methodName, info) {
              Object.defineProperty(Component.prototype, methodName, {
                get: function() {
                  lowPriorityWarning$1(
                    false,
                    '%s(...) is deprecated in plain JavaScript React classes. %s',
                    info[0],
                    info[1]
                  );
                  return undefined;
                }
              });
            };
            for (var fnName in deprecatedAPIs) {
              if (deprecatedAPIs.hasOwnProperty(fnName)) {
                defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
              }
            }
          }

          function ComponentDummy() {}
          ComponentDummy.prototype = Component.prototype;

          /**
           * Convenience component with default shallow equality check for sCU.
           */
          function PureComponent(props, context, updater) {
            this.props = props;
            this.context = context;
            // If a component has string refs, we will assign a different object later.
            this.refs = emptyObject;
            this.updater = updater || ReactNoopUpdateQueue;
          }

          var pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());
          pureComponentPrototype.constructor = PureComponent;
          // Avoid an extra prototype jump for these methods.
          _assign(pureComponentPrototype, Component.prototype);
          pureComponentPrototype.isPureReactComponent = true;

          // an immutable object with a single mutable value
          function createRef() {
            var refObject = {
              current: null
            };
            {
              Object.seal(refObject);
            }
            return refObject;
          }

          /**
           * Keeps track of the current owner.
           *
           * The current owner is the component who should own any components that are
           * currently being constructed.
           */
          var ReactCurrentOwner = {
            /**
             * @internal
             * @type {ReactComponent}
             */
            current: null,
            currentDispatcher: null
          };

          var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

          var describeComponentFrame = function(name, source, ownerName) {
            var sourceInfo = '';
            if (source) {
              var path = source.fileName;
              var fileName = path.replace(BEFORE_SLASH_RE, '');
              {
                // In DEV, include code for a common special case:
                // prefer "folder/index.js" instead of just "index.js".
                if (/^index\./.test(fileName)) {
                  var match = path.match(BEFORE_SLASH_RE);
                  if (match) {
                    var pathBeforeSlash = match[1];
                    if (pathBeforeSlash) {
                      var folderName = pathBeforeSlash.replace(
                        BEFORE_SLASH_RE,
                        ''
                      );
                      fileName = folderName + '/' + fileName;
                    }
                  }
                }
              }
              sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
            } else if (ownerName) {
              sourceInfo = ' (created by ' + ownerName + ')';
            }
            return '\n    in ' + (name || 'Unknown') + sourceInfo;
          };

          var Resolved = 1;

          function refineResolvedThenable(thenable) {
            return thenable._reactStatus === Resolved
              ? thenable._reactResult
              : null;
          }

          function getComponentName(type) {
            if (type == null) {
              // Host root, text node or just invalid type.
              return null;
            }
            {
              if (typeof type.tag === 'number') {
                warningWithoutStack$1(
                  false,
                  'Received an unexpected object in getComponentName(). ' +
                    'This is likely a bug in React. Please file an issue.'
                );
              }
            }
            if (typeof type === 'function') {
              return type.displayName || type.name || null;
            }
            if (typeof type === 'string') {
              return type;
            }
            switch (type) {
              case REACT_ASYNC_MODE_TYPE:
                return 'AsyncMode';
              case REACT_FRAGMENT_TYPE:
                return 'Fragment';
              case REACT_PORTAL_TYPE:
                return 'Portal';
              case REACT_PROFILER_TYPE:
                return 'Profiler';
              case REACT_STRICT_MODE_TYPE:
                return 'StrictMode';
              case REACT_PLACEHOLDER_TYPE:
                return 'Placeholder';
            }
            if (typeof type === 'object') {
              switch (type.$$typeof) {
                case REACT_CONTEXT_TYPE:
                  return 'Context.Consumer';
                case REACT_PROVIDER_TYPE:
                  return 'Context.Provider';
                case REACT_FORWARD_REF_TYPE:
                  var renderFn = type.render;
                  var functionName =
                    renderFn.displayName || renderFn.name || '';
                  return (
                    type.displayName ||
                    (functionName !== ''
                      ? 'ForwardRef(' + functionName + ')'
                      : 'ForwardRef')
                  );
              }
              if (typeof type.then === 'function') {
                var thenable = type;
                var resolvedThenable = refineResolvedThenable(thenable);
                if (resolvedThenable) {
                  return getComponentName(resolvedThenable);
                }
              }
            }
            return null;
          }

          var ReactDebugCurrentFrame = {};

          var currentlyValidatingElement = null;

          function setCurrentlyValidatingElement(element) {
            {
              currentlyValidatingElement = element;
            }
          }

          {
            // Stack implementation injected by the current renderer.
            ReactDebugCurrentFrame.getCurrentStack = null;

            ReactDebugCurrentFrame.getStackAddendum = function() {
              var stack = '';

              // Add an extra top frame while an element is being validated
              if (currentlyValidatingElement) {
                var name = getComponentName(currentlyValidatingElement.type);
                var owner = currentlyValidatingElement._owner;
                stack += describeComponentFrame(
                  name,
                  currentlyValidatingElement._source,
                  owner && getComponentName(owner.type)
                );
              }

              // Delegate to the injected renderer-specific implementation
              var impl = ReactDebugCurrentFrame.getCurrentStack;
              if (impl) {
                stack += impl() || '';
              }

              return stack;
            };
          }

          var ReactSharedInternals = {
            ReactCurrentOwner: ReactCurrentOwner,
            // Used by renderers to avoid bundling object-assign twice in UMD bundles:
            assign: _assign
          };

          {
            _assign(ReactSharedInternals, {
              // These should not be included in production.
              ReactDebugCurrentFrame: ReactDebugCurrentFrame,
              // Shim for React DOM 16.0.0 which still destructured (but not used) this.
              // TODO: remove in React 17.0.
              ReactComponentTreeHook: {}
            });
          }

          /**
           * Similar to invariant but only logs a warning if the condition is not met.
           * This can be used to log issues in development environments in critical
           * paths. Removing the logging code for production environments will keep the
           * same logic and follow the same code paths.
           */

          var warning = warningWithoutStack$1;

          {
            warning = function(condition, format) {
              if (condition) {
                return;
              }
              var ReactDebugCurrentFrame =
                ReactSharedInternals.ReactDebugCurrentFrame;
              var stack = ReactDebugCurrentFrame.getStackAddendum();
              // eslint-disable-next-line react-internal/warning-and-invariant-args

              for (
                var _len = arguments.length,
                  args = Array(_len > 2 ? _len - 2 : 0),
                  _key = 2;
                _key < _len;
                _key++
              ) {
                args[_key - 2] = arguments[_key];
              }

              warningWithoutStack$1.apply(
                undefined,
                [false, format + '%s'].concat(args, [stack])
              );
            };
          }

          var warning$1 = warning;

          var hasOwnProperty = Object.prototype.hasOwnProperty;

          var RESERVED_PROPS = {
            key: true,
            ref: true,
            __self: true,
            __source: true
          };

          var specialPropKeyWarningShown = void 0;
          var specialPropRefWarningShown = void 0;

          function hasValidRef(config) {
            {
              if (hasOwnProperty.call(config, 'ref')) {
                var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
                if (getter && getter.isReactWarning) {
                  return false;
                }
              }
            }
            return config.ref !== undefined;
          }

          function hasValidKey(config) {
            {
              if (hasOwnProperty.call(config, 'key')) {
                var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
                if (getter && getter.isReactWarning) {
                  return false;
                }
              }
            }
            return config.key !== undefined;
          }

          function defineKeyPropWarningGetter(props, displayName) {
            var warnAboutAccessingKey = function() {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                warningWithoutStack$1(
                  false,
                  '%s: `key` is not a prop. Trying to access it will result ' +
                    'in `undefined` being returned. If you need to access the same ' +
                    'value within the child component, you should pass it as a different ' +
                    'prop. (https://fb.me/react-special-props)',
                  displayName
                );
              }
            };
            warnAboutAccessingKey.isReactWarning = true;
            Object.defineProperty(props, 'key', {
              get: warnAboutAccessingKey,
              configurable: true
            });
          }

          function defineRefPropWarningGetter(props, displayName) {
            var warnAboutAccessingRef = function() {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                warningWithoutStack$1(
                  false,
                  '%s: `ref` is not a prop. Trying to access it will result ' +
                    'in `undefined` being returned. If you need to access the same ' +
                    'value within the child component, you should pass it as a different ' +
                    'prop. (https://fb.me/react-special-props)',
                  displayName
                );
              }
            };
            warnAboutAccessingRef.isReactWarning = true;
            Object.defineProperty(props, 'ref', {
              get: warnAboutAccessingRef,
              configurable: true
            });
          }

          /**
           * Factory method to create a new React element. This no longer adheres to
           * the class pattern, so do not use new to call it. Also, no instanceof check
           * will work. Instead test $$typeof field against Symbol.for('react.element') to check
           * if something is a React Element.
           *
           * @param {*} type
           * @param {*} key
           * @param {string|object} ref
           * @param {*} self A *temporary* helper to detect places where `this` is
           * different from the `owner` when React.createElement is called, so that we
           * can warn. We want to get rid of owner and replace string `ref`s with arrow
           * functions, and as long as `this` and owner are the same, there will be no
           * change in behavior.
           * @param {*} source An annotation object (added by a transpiler or otherwise)
           * indicating filename, line number, and/or other information.
           * @param {*} owner
           * @param {*} props
           * @internal
           */
          var ReactElement = function(
            type,
            key,
            ref,
            self,
            source,
            owner,
            props
          ) {
            var element = {
              // This tag allows us to uniquely identify this as a React Element
              $$typeof: REACT_ELEMENT_TYPE,

              // Built-in properties that belong on the element
              type: type,
              key: key,
              ref: ref,
              props: props,

              // Record the component responsible for creating this element.
              _owner: owner
            };

            {
              // The validation flag is currently mutative. We put it on
              // an external backing store so that we can freeze the whole object.
              // This can be replaced with a WeakMap once they are implemented in
              // commonly used development environments.
              element._store = {};

              // To make comparing ReactElements easier for testing purposes, we make
              // the validation flag non-enumerable (where possible, which should
              // include every environment we run tests in), so the test framework
              // ignores it.
              Object.defineProperty(element._store, 'validated', {
                configurable: false,
                enumerable: false,
                writable: true,
                value: false
              });
              // self and source are DEV only properties.
              Object.defineProperty(element, '_self', {
                configurable: false,
                enumerable: false,
                writable: false,
                value: self
              });
              // Two elements created in two different places should be considered
              // equal for testing purposes and therefore we hide it from enumeration.
              Object.defineProperty(element, '_source', {
                configurable: false,
                enumerable: false,
                writable: false,
                value: source
              });
              if (Object.freeze) {
                Object.freeze(element.props);
                Object.freeze(element);
              }
            }

            return element;
          };

          /**
           * Create and return a new ReactElement of the given type.
           * See https://reactjs.org/docs/react-api.html#createelement
           */
          function createElement(type, config, children) {
            var propName = void 0;

            // Reserved names are extracted
            var props = {};

            var key = null;
            var ref = null;
            var self = null;
            var source = null;

            if (config != null) {
              if (hasValidRef(config)) {
                ref = config.ref;
              }
              if (hasValidKey(config)) {
                key = '' + config.key;
              }

              self = config.__self === undefined ? null : config.__self;
              source = config.__source === undefined ? null : config.__source;
              // Remaining properties are added to a new props object
              for (propName in config) {
                if (
                  hasOwnProperty.call(config, propName) &&
                  !RESERVED_PROPS.hasOwnProperty(propName)
                ) {
                  props[propName] = config[propName];
                }
              }
            }

            // Children can be more than one argument, and those are transferred onto
            // the newly allocated props object.
            var childrenLength = arguments.length - 2;
            if (childrenLength === 1) {
              props.children = children;
            } else if (childrenLength > 1) {
              var childArray = Array(childrenLength);
              for (var i = 0; i < childrenLength; i++) {
                childArray[i] = arguments[i + 2];
              }
              {
                if (Object.freeze) {
                  Object.freeze(childArray);
                }
              }
              props.children = childArray;
            }

            // Resolve default props
            if (type && type.defaultProps) {
              var defaultProps = type.defaultProps;
              for (propName in defaultProps) {
                if (props[propName] === undefined) {
                  props[propName] = defaultProps[propName];
                }
              }
            }
            {
              if (key || ref) {
                var displayName =
                  typeof type === 'function'
                    ? type.displayName || type.name || 'Unknown'
                    : type;
                if (key) {
                  defineKeyPropWarningGetter(props, displayName);
                }
                if (ref) {
                  defineRefPropWarningGetter(props, displayName);
                }
              }
            }
            return ReactElement(
              type,
              key,
              ref,
              self,
              source,
              ReactCurrentOwner.current,
              props
            );
          }

          /**
           * Return a function that produces ReactElements of a given type.
           * See https://reactjs.org/docs/react-api.html#createfactory
           */

          function cloneAndReplaceKey(oldElement, newKey) {
            var newElement = ReactElement(
              oldElement.type,
              newKey,
              oldElement.ref,
              oldElement._self,
              oldElement._source,
              oldElement._owner,
              oldElement.props
            );

            return newElement;
          }

          /**
           * Clone and return a new ReactElement using element as the starting point.
           * See https://reactjs.org/docs/react-api.html#cloneelement
           */
          function cloneElement(element, config, children) {
            !!(element === null || element === undefined)
              ? invariant(
                  false,
                  'React.cloneElement(...): The argument must be a React element, but you passed %s.',
                  element
                )
              : void 0;

            var propName = void 0;

            // Original props are copied
            var props = _assign({}, element.props);

            // Reserved names are extracted
            var key = element.key;
            var ref = element.ref;
            // Self is preserved since the owner is preserved.
            var self = element._self;
            // Source is preserved since cloneElement is unlikely to be targeted by a
            // transpiler, and the original source is probably a better indicator of the
            // true owner.
            var source = element._source;

            // Owner will be preserved, unless ref is overridden
            var owner = element._owner;

            if (config != null) {
              if (hasValidRef(config)) {
                // Silently steal the ref from the parent.
                ref = config.ref;
                owner = ReactCurrentOwner.current;
              }
              if (hasValidKey(config)) {
                key = '' + config.key;
              }

              // Remaining properties override existing props
              var defaultProps = void 0;
              if (element.type && element.type.defaultProps) {
                defaultProps = element.type.defaultProps;
              }
              for (propName in config) {
                if (
                  hasOwnProperty.call(config, propName) &&
                  !RESERVED_PROPS.hasOwnProperty(propName)
                ) {
                  if (
                    config[propName] === undefined &&
                    defaultProps !== undefined
                  ) {
                    // Resolve default props
                    props[propName] = defaultProps[propName];
                  } else {
                    props[propName] = config[propName];
                  }
                }
              }
            }

            // Children can be more than one argument, and those are transferred onto
            // the newly allocated props object.
            var childrenLength = arguments.length - 2;
            if (childrenLength === 1) {
              props.children = children;
            } else if (childrenLength > 1) {
              var childArray = Array(childrenLength);
              for (var i = 0; i < childrenLength; i++) {
                childArray[i] = arguments[i + 2];
              }
              props.children = childArray;
            }

            return ReactElement(
              element.type,
              key,
              ref,
              self,
              source,
              owner,
              props
            );
          }

          /**
           * Verifies the object is a ReactElement.
           * See https://reactjs.org/docs/react-api.html#isvalidelement
           * @param {?object} object
           * @return {boolean} True if `object` is a ReactElement.
           * @final
           */
          function isValidElement(object) {
            return (
              typeof object === 'object' &&
              object !== null &&
              object.$$typeof === REACT_ELEMENT_TYPE
            );
          }

          var SEPARATOR = '.';
          var SUBSEPARATOR = ':';

          /**
           * Escape and wrap key so it is safe to use as a reactid
           *
           * @param {string} key to be escaped.
           * @return {string} the escaped key.
           */
          function escape(key) {
            var escapeRegex = /[=:]/g;
            var escaperLookup = {
              '=': '=0',
              ':': '=2'
            };
            var escapedString = ('' + key).replace(escapeRegex, function(
              match
            ) {
              return escaperLookup[match];
            });

            return '$' + escapedString;
          }

          /**
           * TODO: Test that a single child and an array with one item have the same key
           * pattern.
           */

          var didWarnAboutMaps = false;

          var userProvidedKeyEscapeRegex = /\/+/g;
          function escapeUserProvidedKey(text) {
            return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
          }

          var POOL_SIZE = 10;
          var traverseContextPool = [];
          function getPooledTraverseContext(
            mapResult,
            keyPrefix,
            mapFunction,
            mapContext
          ) {
            if (traverseContextPool.length) {
              var traverseContext = traverseContextPool.pop();
              traverseContext.result = mapResult;
              traverseContext.keyPrefix = keyPrefix;
              traverseContext.func = mapFunction;
              traverseContext.context = mapContext;
              traverseContext.count = 0;
              return traverseContext;
            } else {
              return {
                result: mapResult,
                keyPrefix: keyPrefix,
                func: mapFunction,
                context: mapContext,
                count: 0
              };
            }
          }

          function releaseTraverseContext(traverseContext) {
            traverseContext.result = null;
            traverseContext.keyPrefix = null;
            traverseContext.func = null;
            traverseContext.context = null;
            traverseContext.count = 0;
            if (traverseContextPool.length < POOL_SIZE) {
              traverseContextPool.push(traverseContext);
            }
          }

          /**
           * @param {?*} children Children tree container.
           * @param {!string} nameSoFar Name of the key path so far.
           * @param {!function} callback Callback to invoke with each child found.
           * @param {?*} traverseContext Used to pass information throughout the traversal
           * process.
           * @return {!number} The number of children in this subtree.
           */
          function traverseAllChildrenImpl(
            children,
            nameSoFar,
            callback,
            traverseContext
          ) {
            var type = typeof children;

            if (type === 'undefined' || type === 'boolean') {
              // All of the above are perceived as null.
              children = null;
            }

            var invokeCallback = false;

            if (children === null) {
              invokeCallback = true;
            } else {
              switch (type) {
                case 'string':
                case 'number':
                  invokeCallback = true;
                  break;
                case 'object':
                  switch (children.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                    case REACT_PORTAL_TYPE:
                      invokeCallback = true;
                  }
              }
            }

            if (invokeCallback) {
              callback(
                traverseContext,
                children,
                // If it's the only child, treat the name as if it was wrapped in an array
                // so that it's consistent if the number of children grows.
                nameSoFar === ''
                  ? SEPARATOR + getComponentKey(children, 0)
                  : nameSoFar
              );
              return 1;
            }

            var child = void 0;
            var nextName = void 0;
            var subtreeCount = 0; // Count of children found in the current subtree.
            var nextNamePrefix =
              nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

            if (Array.isArray(children)) {
              for (var i = 0; i < children.length; i++) {
                child = children[i];
                nextName = nextNamePrefix + getComponentKey(child, i);
                subtreeCount += traverseAllChildrenImpl(
                  child,
                  nextName,
                  callback,
                  traverseContext
                );
              }
            } else {
              var iteratorFn = getIteratorFn(children);
              if (typeof iteratorFn === 'function') {
                {
                  // Warn about using Maps as children
                  if (iteratorFn === children.entries) {
                    !didWarnAboutMaps
                      ? warning$1(
                          false,
                          'Using Maps as children is unsupported and will likely yield ' +
                            'unexpected results. Convert it to a sequence/iterable of keyed ' +
                            'ReactElements instead.'
                        )
                      : void 0;
                    didWarnAboutMaps = true;
                  }
                }

                var iterator = iteratorFn.call(children);
                var step = void 0;
                var ii = 0;
                while (!(step = iterator.next()).done) {
                  child = step.value;
                  nextName = nextNamePrefix + getComponentKey(child, ii++);
                  subtreeCount += traverseAllChildrenImpl(
                    child,
                    nextName,
                    callback,
                    traverseContext
                  );
                }
              } else if (type === 'object') {
                var addendum = '';
                {
                  addendum =
                    ' If you meant to render a collection of children, use an array ' +
                    'instead.' +
                    ReactDebugCurrentFrame.getStackAddendum();
                }
                var childrenString = '' + children;
                invariant(
                  false,
                  'Objects are not valid as a React child (found: %s).%s',
                  childrenString === '[object Object]'
                    ? 'object with keys {' +
                      Object.keys(children).join(', ') +
                      '}'
                    : childrenString,
                  addendum
                );
              }
            }

            return subtreeCount;
          }

          /**
           * Traverses children that are typically specified as `props.children`, but
           * might also be specified through attributes:
           *
           * - `traverseAllChildren(this.props.children, ...)`
           * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
           *
           * The `traverseContext` is an optional argument that is passed through the
           * entire traversal. It can be used to store accumulations or anything else that
           * the callback might find relevant.
           *
           * @param {?*} children Children tree object.
           * @param {!function} callback To invoke upon traversing each child.
           * @param {?*} traverseContext Context for traversal.
           * @return {!number} The number of children in this subtree.
           */
          function traverseAllChildren(children, callback, traverseContext) {
            if (children == null) {
              return 0;
            }

            return traverseAllChildrenImpl(
              children,
              '',
              callback,
              traverseContext
            );
          }

          /**
           * Generate a key string that identifies a component within a set.
           *
           * @param {*} component A component that could contain a manual key.
           * @param {number} index Index that is used if a manual key is not provided.
           * @return {string}
           */
          function getComponentKey(component, index) {
            // Do some typechecking here since we call this blindly. We want to ensure
            // that we don't block potential future ES APIs.
            if (
              typeof component === 'object' &&
              component !== null &&
              component.key != null
            ) {
              // Explicit key
              return escape(component.key);
            }
            // Implicit key determined by the index in the set
            return index.toString(36);
          }

          function forEachSingleChild(bookKeeping, child, name) {
            var func = bookKeeping.func,
              context = bookKeeping.context;

            func.call(context, child, bookKeeping.count++);
          }

          /**
           * Iterates through children that are typically specified as `props.children`.
           *
           * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
           *
           * The provided forEachFunc(child, index) will be called for each
           * leaf child.
           *
           * @param {?*} children Children tree container.
           * @param {function(*, int)} forEachFunc
           * @param {*} forEachContext Context for forEachContext.
           */
          function forEachChildren(children, forEachFunc, forEachContext) {
            if (children == null) {
              return children;
            }
            var traverseContext = getPooledTraverseContext(
              null,
              null,
              forEachFunc,
              forEachContext
            );
            traverseAllChildren(children, forEachSingleChild, traverseContext);
            releaseTraverseContext(traverseContext);
          }

          function mapSingleChildIntoContext(bookKeeping, child, childKey) {
            var result = bookKeeping.result,
              keyPrefix = bookKeeping.keyPrefix,
              func = bookKeeping.func,
              context = bookKeeping.context;

            var mappedChild = func.call(context, child, bookKeeping.count++);
            if (Array.isArray(mappedChild)) {
              mapIntoWithKeyPrefixInternal(
                mappedChild,
                result,
                childKey,
                function(c) {
                  return c;
                }
              );
            } else if (mappedChild != null) {
              if (isValidElement(mappedChild)) {
                mappedChild = cloneAndReplaceKey(
                  mappedChild,
                  // Keep both the (mapped) and old keys if they differ, just as
                  // traverseAllChildren used to do for objects as children
                  keyPrefix +
                    (mappedChild.key &&
                    (!child || child.key !== mappedChild.key)
                      ? escapeUserProvidedKey(mappedChild.key) + '/'
                      : '') +
                    childKey
                );
              }
              result.push(mappedChild);
            }
          }

          function mapIntoWithKeyPrefixInternal(
            children,
            array,
            prefix,
            func,
            context
          ) {
            var escapedPrefix = '';
            if (prefix != null) {
              escapedPrefix = escapeUserProvidedKey(prefix) + '/';
            }
            var traverseContext = getPooledTraverseContext(
              array,
              escapedPrefix,
              func,
              context
            );
            traverseAllChildren(
              children,
              mapSingleChildIntoContext,
              traverseContext
            );
            releaseTraverseContext(traverseContext);
          }

          /**
           * Maps children that are typically specified as `props.children`.
           *
           * See https://reactjs.org/docs/react-api.html#reactchildrenmap
           *
           * The provided mapFunction(child, key, index) will be called for each
           * leaf child.
           *
           * @param {?*} children Children tree container.
           * @param {function(*, int)} func The map function.
           * @param {*} context Context for mapFunction.
           * @return {object} Object containing the ordered map of results.
           */
          function mapChildren(children, func, context) {
            if (children == null) {
              return children;
            }
            var result = [];
            mapIntoWithKeyPrefixInternal(children, result, null, func, context);
            return result;
          }

          /**
           * Count the number of children that are typically specified as
           * `props.children`.
           *
           * See https://reactjs.org/docs/react-api.html#reactchildrencount
           *
           * @param {?*} children Children tree container.
           * @return {number} The number of children.
           */
          function countChildren(children) {
            return traverseAllChildren(
              children,
              function() {
                return null;
              },
              null
            );
          }

          /**
           * Flatten a children object (typically specified as `props.children`) and
           * return an array with appropriately re-keyed children.
           *
           * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
           */
          function toArray(children) {
            var result = [];
            mapIntoWithKeyPrefixInternal(children, result, null, function(
              child
            ) {
              return child;
            });
            return result;
          }

          /**
           * Returns the first child in a collection of children and verifies that there
           * is only one child in the collection.
           *
           * See https://reactjs.org/docs/react-api.html#reactchildrenonly
           *
           * The current implementation of this function assumes that a single child gets
           * passed without a wrapper, but the purpose of this helper function is to
           * abstract away the particular structure of children.
           *
           * @param {?object} children Child collection structure.
           * @return {ReactElement} The first and only `ReactElement` contained in the
           * structure.
           */
          function onlyChild(children) {
            !isValidElement(children)
              ? invariant(
                  false,
                  'React.Children.only expected to receive a single React element child.'
                )
              : void 0;
            return children;
          }

          function readContext(context, observedBits) {
            var dispatcher = ReactCurrentOwner.currentDispatcher;
            !(dispatcher !== null)
              ? invariant(
                  false,
                  'Context.unstable_read(): Context can only be read while React is rendering, e.g. inside the render method or getDerivedStateFromProps.'
                )
              : void 0;
            return dispatcher.readContext(context, observedBits);
          }

          function createContext(defaultValue, calculateChangedBits) {
            if (calculateChangedBits === undefined) {
              calculateChangedBits = null;
            } else {
              {
                !(
                  calculateChangedBits === null ||
                  typeof calculateChangedBits === 'function'
                )
                  ? warningWithoutStack$1(
                      false,
                      'createContext: Expected the optional second argument to be a ' +
                        'function. Instead received: %s',
                      calculateChangedBits
                    )
                  : void 0;
              }
            }

            var context = {
              $$typeof: REACT_CONTEXT_TYPE,
              _calculateChangedBits: calculateChangedBits,
              // As a workaround to support multiple concurrent renderers, we categorize
              // some renderers as primary and others as secondary. We only expect
              // there to be two concurrent renderers at most: React Native (primary) and
              // Fabric (secondary); React DOM (primary) and React ART (secondary).
              // Secondary renderers store their context values on separate fields.
              _currentValue: defaultValue,
              _currentValue2: defaultValue,
              // These are circular
              Provider: null,
              Consumer: null,
              unstable_read: null
            };

            context.Provider = {
              $$typeof: REACT_PROVIDER_TYPE,
              _context: context
            };
            context.Consumer = context;
            context.unstable_read = readContext.bind(null, context);

            {
              context._currentRenderer = null;
              context._currentRenderer2 = null;
            }

            return context;
          }

          function lazy(ctor) {
            var thenable = null;
            return {
              then: function(resolve, reject) {
                if (thenable === null) {
                  // Lazily create thenable by wrapping in an extra thenable.
                  thenable = ctor();
                  ctor = null;
                }
                return thenable.then(resolve, reject);
              },

              // React uses these fields to store the result.
              _reactStatus: -1,
              _reactResult: null
            };
          }

          function forwardRef(render) {
            {
              if (typeof render !== 'function') {
                warningWithoutStack$1(
                  false,
                  'forwardRef requires a render function but was given %s.',
                  render === null ? 'null' : typeof render
                );
              } else {
                !// Do not warn for 0 arguments because it could be due to usage of the 'arguments' object
                (render.length === 0 || render.length === 2)
                  ? warningWithoutStack$1(
                      false,
                      'forwardRef render functions accept exactly two parameters: props and ref. %s',
                      render.length === 1
                        ? 'Did you forget to use the ref parameter?'
                        : 'Any additional parameter will be undefined.'
                    )
                  : void 0;
              }

              if (render != null) {
                !(render.defaultProps == null && render.propTypes == null)
                  ? warningWithoutStack$1(
                      false,
                      'forwardRef render functions do not support propTypes or defaultProps. ' +
                        'Did you accidentally pass a React component?'
                    )
                  : void 0;
              }
            }

            return {
              $$typeof: REACT_FORWARD_REF_TYPE,
              render: render
            };
          }

          function isValidElementType(type) {
            return (
              typeof type === 'string' ||
              typeof type === 'function' ||
              // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
              type === REACT_FRAGMENT_TYPE ||
              type === REACT_ASYNC_MODE_TYPE ||
              type === REACT_PROFILER_TYPE ||
              type === REACT_STRICT_MODE_TYPE ||
              type === REACT_PLACEHOLDER_TYPE ||
              (typeof type === 'object' &&
                type !== null &&
                (typeof type.then === 'function' ||
                  type.$$typeof === REACT_PROVIDER_TYPE ||
                  type.$$typeof === REACT_CONTEXT_TYPE ||
                  type.$$typeof === REACT_FORWARD_REF_TYPE))
            );
          }

          /**
           * ReactElementValidator provides a wrapper around a element factory
           * which validates the props passed to the element. This is intended to be
           * used only in DEV and could be replaced by a static type checker for languages
           * that support it.
           */

          var propTypesMisspellWarningShown = void 0;

          {
            propTypesMisspellWarningShown = false;
          }

          function getDeclarationErrorAddendum() {
            if (ReactCurrentOwner.current) {
              var name = getComponentName(ReactCurrentOwner.current.type);
              if (name) {
                return '\n\nCheck the render method of `' + name + '`.';
              }
            }
            return '';
          }

          function getSourceInfoErrorAddendum(elementProps) {
            if (
              elementProps !== null &&
              elementProps !== undefined &&
              elementProps.__source !== undefined
            ) {
              var source = elementProps.__source;
              var fileName = source.fileName.replace(/^.*[\\\/]/, '');
              var lineNumber = source.lineNumber;
              return (
                '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.'
              );
            }
            return '';
          }

          /**
           * Warn if there's no key explicitly set on dynamic arrays of children or
           * object keys are not valid. This allows us to keep track of children between
           * updates.
           */
          var ownerHasKeyUseWarning = {};

          function getCurrentComponentErrorInfo(parentType) {
            var info = getDeclarationErrorAddendum();

            if (!info) {
              var parentName =
                typeof parentType === 'string'
                  ? parentType
                  : parentType.displayName || parentType.name;
              if (parentName) {
                info =
                  '\n\nCheck the top-level render call using <' +
                  parentName +
                  '>.';
              }
            }
            return info;
          }

          /**
           * Warn if the element doesn't have an explicit key assigned to it.
           * This element is in an array. The array could grow and shrink or be
           * reordered. All children that haven't already been validated are required to
           * have a "key" property assigned to it. Error statuses are cached so a warning
           * will only be shown once.
           *
           * @internal
           * @param {ReactElement} element Element that requires a key.
           * @param {*} parentType element's parent's type.
           */
          function validateExplicitKey(element, parentType) {
            if (
              !element._store ||
              element._store.validated ||
              element.key != null
            ) {
              return;
            }
            element._store.validated = true;

            var currentComponentErrorInfo = getCurrentComponentErrorInfo(
              parentType
            );
            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

            // Usually the current owner is the offender, but if it accepts children as a
            // property, it may be the creator of the child that's responsible for
            // assigning it a key.
            var childOwner = '';
            if (
              element &&
              element._owner &&
              element._owner !== ReactCurrentOwner.current
            ) {
              // Give the component that originally created this child.
              childOwner =
                ' It was passed a child from ' +
                getComponentName(element._owner.type) +
                '.';
            }

            setCurrentlyValidatingElement(element);
            {
              warning$1(
                false,
                'Each child in an array or iterator should have a unique "key" prop.' +
                  '%s%s See https://fb.me/react-warning-keys for more information.',
                currentComponentErrorInfo,
                childOwner
              );
            }
            setCurrentlyValidatingElement(null);
          }

          /**
           * Ensure that every element either is passed in a static location, in an
           * array with an explicit keys property defined, or in an object literal
           * with valid key property.
           *
           * @internal
           * @param {ReactNode} node Statically passed child of any type.
           * @param {*} parentType node's parent's type.
           */
          function validateChildKeys(node, parentType) {
            if (typeof node !== 'object') {
              return;
            }
            if (Array.isArray(node)) {
              for (var i = 0; i < node.length; i++) {
                var child = node[i];
                if (isValidElement(child)) {
                  validateExplicitKey(child, parentType);
                }
              }
            } else if (isValidElement(node)) {
              // This element was passed in a valid location.
              if (node._store) {
                node._store.validated = true;
              }
            } else if (node) {
              var iteratorFn = getIteratorFn(node);
              if (typeof iteratorFn === 'function') {
                // Entry iterators used to provide implicit keys,
                // but now we print a separate warning for them later.
                if (iteratorFn !== node.entries) {
                  var iterator = iteratorFn.call(node);
                  var step = void 0;
                  while (!(step = iterator.next()).done) {
                    if (isValidElement(step.value)) {
                      validateExplicitKey(step.value, parentType);
                    }
                  }
                }
              }
            }
          }

          /**
           * Given an element, validate that its props follow the propTypes definition,
           * provided by the type.
           *
           * @param {ReactElement} element
           */
          function validatePropTypes(element) {
            var type = element.type;
            var name = void 0,
              propTypes = void 0;
            if (typeof type === 'function') {
              // Class or functional component
              name = type.displayName || type.name;
              propTypes = type.propTypes;
            } else if (
              typeof type === 'object' &&
              type !== null &&
              type.$$typeof === REACT_FORWARD_REF_TYPE
            ) {
              // ForwardRef
              var functionName =
                type.render.displayName || type.render.name || '';
              name =
                type.displayName ||
                (functionName !== ''
                  ? 'ForwardRef(' + functionName + ')'
                  : 'ForwardRef');
              propTypes = type.propTypes;
            } else {
              return;
            }
            if (propTypes) {
              setCurrentlyValidatingElement(element);
              checkPropTypes(
                propTypes,
                element.props,
                'prop',
                name,
                ReactDebugCurrentFrame.getStackAddendum
              );
              setCurrentlyValidatingElement(null);
            } else if (
              type.PropTypes !== undefined &&
              !propTypesMisspellWarningShown
            ) {
              propTypesMisspellWarningShown = true;
              warningWithoutStack$1(
                false,
                'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?',
                name || 'Unknown'
              );
            }
            if (typeof type.getDefaultProps === 'function') {
              !type.getDefaultProps.isReactClassApproved
                ? warningWithoutStack$1(
                    false,
                    'getDefaultProps is only used on classic React.createClass ' +
                      'definitions. Use a static property named `defaultProps` instead.'
                  )
                : void 0;
            }
          }

          /**
           * Given a fragment, validate that it can only be provided with fragment props
           * @param {ReactElement} fragment
           */
          function validateFragmentProps(fragment) {
            setCurrentlyValidatingElement(fragment);

            var keys = Object.keys(fragment.props);
            for (var i = 0; i < keys.length; i++) {
              var key = keys[i];
              if (key !== 'children' && key !== 'key') {
                warning$1(
                  false,
                  'Invalid prop `%s` supplied to `React.Fragment`. ' +
                    'React.Fragment can only have `key` and `children` props.',
                  key
                );
                break;
              }
            }

            if (fragment.ref !== null) {
              warning$1(
                false,
                'Invalid attribute `ref` supplied to `React.Fragment`.'
              );
            }

            setCurrentlyValidatingElement(null);
          }

          function createElementWithValidation(type, props, children) {
            var validType = isValidElementType(type);

            // We warn in this case but don't throw. We expect the element creation to
            // succeed and there will likely be errors in render.
            if (!validType) {
              var info = '';
              if (
                type === undefined ||
                (typeof type === 'object' &&
                  type !== null &&
                  Object.keys(type).length === 0)
              ) {
                info +=
                  ' You likely forgot to export your component from the file ' +
                  "it's defined in, or you might have mixed up default and named imports.";
              }

              var sourceInfo = getSourceInfoErrorAddendum(props);
              if (sourceInfo) {
                info += sourceInfo;
              } else {
                info += getDeclarationErrorAddendum();
              }

              var typeString = void 0;
              if (type === null) {
                typeString = 'null';
              } else if (Array.isArray(type)) {
                typeString = 'array';
              } else if (
                type !== undefined &&
                type.$$typeof === REACT_ELEMENT_TYPE
              ) {
                typeString =
                  '<' + (getComponentName(type.type) || 'Unknown') + ' />';
                info =
                  ' Did you accidentally export a JSX literal instead of a component?';
              } else {
                typeString = typeof type;
              }

              warning$1(
                false,
                'React.createElement: type is invalid -- expected a string (for ' +
                  'built-in components) or a class/function (for composite ' +
                  'components) but got: %s.%s',
                typeString,
                info
              );
            }

            var element = createElement.apply(this, arguments);

            // The result can be nullish if a mock or a custom function is used.
            // TODO: Drop this when these are no longer allowed as the type argument.
            if (element == null) {
              return element;
            }

            // Skip key warning if the type isn't valid since our key validation logic
            // doesn't expect a non-string/function type and can throw confusing errors.
            // We don't want exception behavior to differ between dev and prod.
            // (Rendering will throw with a helpful message and as soon as the type is
            // fixed, the key warnings will appear.)
            if (validType) {
              for (var i = 2; i < arguments.length; i++) {
                validateChildKeys(arguments[i], type);
              }
            }

            if (type === REACT_FRAGMENT_TYPE) {
              validateFragmentProps(element);
            } else {
              validatePropTypes(element);
            }

            return element;
          }

          function createFactoryWithValidation(type) {
            var validatedFactory = createElementWithValidation.bind(null, type);
            validatedFactory.type = type;
            // Legacy hook: remove it
            {
              Object.defineProperty(validatedFactory, 'type', {
                enumerable: false,
                get: function() {
                  lowPriorityWarning$1(
                    false,
                    'Factory.type is deprecated. Access the class directly ' +
                      'before passing it to createFactory.'
                  );
                  Object.defineProperty(this, 'type', {
                    value: type
                  });
                  return type;
                }
              });
            }

            return validatedFactory;
          }

          function cloneElementWithValidation(element, props, children) {
            var newElement = cloneElement.apply(this, arguments);
            for (var i = 2; i < arguments.length; i++) {
              validateChildKeys(arguments[i], newElement.type);
            }
            validatePropTypes(newElement);
            return newElement;
          }

          var React = {
            Children: {
              map: mapChildren,
              forEach: forEachChildren,
              count: countChildren,
              toArray: toArray,
              only: onlyChild
            },

            createRef: createRef,
            Component: Component,
            PureComponent: PureComponent,

            createContext: createContext,
            forwardRef: forwardRef,

            Fragment: REACT_FRAGMENT_TYPE,
            StrictMode: REACT_STRICT_MODE_TYPE,
            unstable_AsyncMode: REACT_ASYNC_MODE_TYPE,
            unstable_Profiler: REACT_PROFILER_TYPE,

            createElement: createElementWithValidation,
            cloneElement: cloneElementWithValidation,
            createFactory: createFactoryWithValidation,
            isValidElement: isValidElement,

            version: ReactVersion,

            __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals
          };

          if (enableSuspense) {
            React.Placeholder = REACT_PLACEHOLDER_TYPE;
            React.lazy = lazy;
          }

          var React$2 = Object.freeze({
            default: React
          });

          var React$3 = (React$2 && React) || React$2;

          // TODO: decide on the top-level export form.
          // This is hacky but makes it work with both Rollup and Jest.
          var react = React$3.default || React$3;

          module.exports = react;
        })();
      }

      /***/
    },
    /* 332 */
    /***/ function(module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      'use strict';

      var printWarning = function() {};

      if (undefined !== 'production') {
        var ReactPropTypesSecret = __webpack_require__(333);
        var loggedTypeFailures = {};

        printWarning = function(text) {
          var message = 'Warning: ' + text;
          if (typeof console !== 'undefined') {
            console.error(message);
          }
          try {
            // --- Welcome to debugging React ---
            // This error was thrown as a convenience so that you can use this stack
            // to find the callsite that caused this warning to fire.
            throw new Error(message);
          } catch (x) {}
        };
      }

      /**
       * Assert that the values match with the type specs.
       * Error messages are memorized and will only be shown once.
       *
       * @param {object} typeSpecs Map of name to a ReactPropType
       * @param {object} values Runtime values that need to be type-checked
       * @param {string} location e.g. "prop", "context", "child context"
       * @param {string} componentName Name of the component for error messages.
       * @param {?Function} getStack Returns the component stack.
       * @private
       */
      function checkPropTypes(
        typeSpecs,
        values,
        location,
        componentName,
        getStack
      ) {
        if (undefined !== 'production') {
          for (var typeSpecName in typeSpecs) {
            if (typeSpecs.hasOwnProperty(typeSpecName)) {
              var error;
              // Prop type validation may throw. In case they do, we don't want to
              // fail the render phase where it didn't fail before. So we log it.
              // After these have been cleaned up, we'll let them throw.
              try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== 'function') {
                  var err = Error(
                    (componentName || 'React class') +
                      ': ' +
                      location +
                      ' type `' +
                      typeSpecName +
                      '` is invalid; ' +
                      'it must be a function, usually from the `prop-types` package, but received `' +
                      typeof typeSpecs[typeSpecName] +
                      '`.'
                  );
                  err.name = 'Invariant Violation';
                  throw err;
                }
                error = typeSpecs[typeSpecName](
                  values,
                  typeSpecName,
                  componentName,
                  location,
                  null,
                  ReactPropTypesSecret
                );
              } catch (ex) {
                error = ex;
              }
              if (error && !(error instanceof Error)) {
                printWarning(
                  (componentName || 'React class') +
                    ': type specification of ' +
                    location +
                    ' `' +
                    typeSpecName +
                    '` is invalid; the type checker ' +
                    'function must return `null` or an `Error` but returned a ' +
                    typeof error +
                    '. ' +
                    'You may have forgotten to pass an argument to the type checker ' +
                    'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
                    'shape all require an argument).'
                );
              }
              if (
                error instanceof Error &&
                !(error.message in loggedTypeFailures)
              ) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error.message] = true;

                var stack = getStack ? getStack() : '';

                printWarning(
                  'Failed ' +
                    location +
                    ' type: ' +
                    error.message +
                    (stack != null ? stack : '')
                );
              }
            }
          }
        }
      }

      module.exports = checkPropTypes;

      /***/
    },
    /* 333 */
    /***/ function(module, exports) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      'use strict';

      var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

      module.exports = ReactPropTypesSecret;

      /***/
    },
    /* 334 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      function checkDCE() {
        /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
        if (
          typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
          typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
        ) {
          return;
        }
        if (undefined !== 'production') {
          // This branch is unreachable because this function is only called
          // in production, but the condition is true only in development.
          // Therefore if the branch is still here, dead code elimination wasn't
          // properly applied.
          // Don't change the message. React DevTools relies on it. Also make sure
          // this message doesn't occur elsewhere in this function, or it will cause
          // a false positive.
          throw new Error('^_^');
        }
        try {
          // Verify that the code above has been dead code eliminated (DCE'd).
          __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
        } catch (err) {
          // DevTools shouldn't crash React, no matter what.
          // We should still report in case we break this code.
          console.error(err);
        }
      }

      if (undefined === 'production') {
        // DCE check should happen before ReactDOM bundle executes so that
        // DevTools can report bad minification during injection.
        checkDCE();
        module.exports = __webpack_require__(335);
      } else {
        module.exports = __webpack_require__(339);
      }

      /***/
    },
    /* 335 */
    /***/ function(module, exports, __webpack_require__) {
      /** @license React v16.5.2
       * react-dom.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      /*
	 Modernizr 3.0.0pre (Custom Build) | MIT
	*/
      'use strict';
      var aa = __webpack_require__(328),
        n = __webpack_require__(330),
        ba = __webpack_require__(336);
      function ca(a, b, c, d, e, f, g, h) {
        if (!a) {
          a = void 0;
          if (void 0 === b)
            a = Error(
              'Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.'
            );
          else {
            var k = [c, d, e, f, g, h],
              l = 0;
            a = Error(
              b.replace(/%s/g, function() {
                return k[l++];
              })
            );
            a.name = 'Invariant Violation';
          }
          a.framesToPop = 1;
          throw a;
        }
      }
      function t(a) {
        for (
          var b = arguments.length - 1,
            c = 'https://reactjs.org/docs/error-decoder.html?invariant=' + a,
            d = 0;
          d < b;
          d++
        )
          c += '&args[]=' + encodeURIComponent(arguments[d + 1]);
        ca(
          !1,
          'Minified React error #' +
            a +
            '; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ',
          c
        );
      }
      aa ? void 0 : t('227');
      function da(a, b, c, d, e, f, g, h, k) {
        var l = Array.prototype.slice.call(arguments, 3);
        try {
          b.apply(c, l);
        } catch (m) {
          this.onError(m);
        }
      }
      var ea = !1,
        fa = null,
        ha = !1,
        ia = null,
        ja = {
          onError: function(a) {
            ea = !0;
            fa = a;
          }
        };
      function ka(a, b, c, d, e, f, g, h, k) {
        ea = !1;
        fa = null;
        da.apply(ja, arguments);
      }
      function la(a, b, c, d, e, f, g, h, k) {
        ka.apply(this, arguments);
        if (ea) {
          if (ea) {
            var l = fa;
            ea = !1;
            fa = null;
          } else t('198'), (l = void 0);
          ha || ((ha = !0), (ia = l));
        }
      }
      var ma = null,
        na = {};
      function oa() {
        if (ma)
          for (var a in na) {
            var b = na[a],
              c = ma.indexOf(a);
            -1 < c ? void 0 : t('96', a);
            if (!pa[c]) {
              b.extractEvents ? void 0 : t('97', a);
              pa[c] = b;
              c = b.eventTypes;
              for (var d in c) {
                var e = void 0;
                var f = c[d],
                  g = b,
                  h = d;
                qa.hasOwnProperty(h) ? t('99', h) : void 0;
                qa[h] = f;
                var k = f.phasedRegistrationNames;
                if (k) {
                  for (e in k) k.hasOwnProperty(e) && ra(k[e], g, h);
                  e = !0;
                } else
                  f.registrationName
                    ? (ra(f.registrationName, g, h), (e = !0))
                    : (e = !1);
                e ? void 0 : t('98', d, a);
              }
            }
          }
      }
      function ra(a, b, c) {
        sa[a] ? t('100', a) : void 0;
        sa[a] = b;
        ta[a] = b.eventTypes[c].dependencies;
      }
      var pa = [],
        qa = {},
        sa = {},
        ta = {},
        ua = null,
        va = null,
        wa = null;
      function xa(a, b, c, d) {
        b = a.type || 'unknown-event';
        a.currentTarget = wa(d);
        la(b, c, void 0, a);
        a.currentTarget = null;
      }
      function ya(a, b) {
        null == b ? t('30') : void 0;
        if (null == a) return b;
        if (Array.isArray(a)) {
          if (Array.isArray(b)) return a.push.apply(a, b), a;
          a.push(b);
          return a;
        }
        return Array.isArray(b) ? [a].concat(b) : [a, b];
      }
      function za(a, b, c) {
        Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);
      }
      var Aa = null;
      function Ba(a, b) {
        if (a) {
          var c = a._dispatchListeners,
            d = a._dispatchInstances;
          if (Array.isArray(c))
            for (var e = 0; e < c.length && !a.isPropagationStopped(); e++)
              xa(a, b, c[e], d[e]);
          else c && xa(a, b, c, d);
          a._dispatchListeners = null;
          a._dispatchInstances = null;
          a.isPersistent() || a.constructor.release(a);
        }
      }
      function Ca(a) {
        return Ba(a, !0);
      }
      function Da(a) {
        return Ba(a, !1);
      }
      var Ea = {
        injectEventPluginOrder: function(a) {
          ma ? t('101') : void 0;
          ma = Array.prototype.slice.call(a);
          oa();
        },
        injectEventPluginsByName: function(a) {
          var b = !1,
            c;
          for (c in a)
            if (a.hasOwnProperty(c)) {
              var d = a[c];
              (na.hasOwnProperty(c) && na[c] === d) ||
                (na[c] ? t('102', c) : void 0, (na[c] = d), (b = !0));
            }
          b && oa();
        }
      };
      function Fa(a, b) {
        var c = a.stateNode;
        if (!c) return null;
        var d = ua(c);
        if (!d) return null;
        c = d[b];
        a: switch (b) {
          case 'onClick':
          case 'onClickCapture':
          case 'onDoubleClick':
          case 'onDoubleClickCapture':
          case 'onMouseDown':
          case 'onMouseDownCapture':
          case 'onMouseMove':
          case 'onMouseMoveCapture':
          case 'onMouseUp':
          case 'onMouseUpCapture':
            (d = !d.disabled) ||
              ((a = a.type),
              (d = !(
                'button' === a ||
                'input' === a ||
                'select' === a ||
                'textarea' === a
              )));
            a = !d;
            break a;
          default:
            a = !1;
        }
        if (a) return null;
        c && 'function' !== typeof c ? t('231', b, typeof c) : void 0;
        return c;
      }
      function Ga(a, b) {
        null !== a && (Aa = ya(Aa, a));
        a = Aa;
        Aa = null;
        if (a && (b ? za(a, Ca) : za(a, Da), Aa ? t('95') : void 0, ha))
          throw ((b = ia), (ha = !1), (ia = null), b);
      }
      var Ha = Math.random()
          .toString(36)
          .slice(2),
        Ia = '__reactInternalInstance$' + Ha,
        Ja = '__reactEventHandlers$' + Ha;
      function Ka(a) {
        if (a[Ia]) return a[Ia];
        for (; !a[Ia]; )
          if (a.parentNode) a = a.parentNode;
          else return null;
        a = a[Ia];
        return 7 === a.tag || 8 === a.tag ? a : null;
      }
      function La(a) {
        a = a[Ia];
        return !a || (7 !== a.tag && 8 !== a.tag) ? null : a;
      }
      function Ma(a) {
        if (7 === a.tag || 8 === a.tag) return a.stateNode;
        t('33');
      }
      function Na(a) {
        return a[Ja] || null;
      }
      function Oa(a) {
        do a = a.return;
        while (a && 7 !== a.tag);
        return a ? a : null;
      }
      function Pa(a, b, c) {
        if ((b = Fa(a, c.dispatchConfig.phasedRegistrationNames[b])))
          (c._dispatchListeners = ya(c._dispatchListeners, b)),
            (c._dispatchInstances = ya(c._dispatchInstances, a));
      }
      function Qa(a) {
        if (a && a.dispatchConfig.phasedRegistrationNames) {
          for (var b = a._targetInst, c = []; b; ) c.push(b), (b = Oa(b));
          for (b = c.length; 0 < b--; ) Pa(c[b], 'captured', a);
          for (b = 0; b < c.length; b++) Pa(c[b], 'bubbled', a);
        }
      }
      function Ra(a, b, c) {
        a &&
          c &&
          c.dispatchConfig.registrationName &&
          (b = Fa(a, c.dispatchConfig.registrationName)) &&
          ((c._dispatchListeners = ya(c._dispatchListeners, b)),
          (c._dispatchInstances = ya(c._dispatchInstances, a)));
      }
      function Ta(a) {
        a && a.dispatchConfig.registrationName && Ra(a._targetInst, null, a);
      }
      function Ua(a) {
        za(a, Qa);
      }
      var Va = !(
        'undefined' === typeof window ||
        !window.document ||
        !window.document.createElement
      );
      function Wa(a, b) {
        var c = {};
        c[a.toLowerCase()] = b.toLowerCase();
        c['Webkit' + a] = 'webkit' + b;
        c['Moz' + a] = 'moz' + b;
        return c;
      }
      var Ya = {
          animationend: Wa('Animation', 'AnimationEnd'),
          animationiteration: Wa('Animation', 'AnimationIteration'),
          animationstart: Wa('Animation', 'AnimationStart'),
          transitionend: Wa('Transition', 'TransitionEnd')
        },
        Za = {},
        $a = {};
      Va &&
        (($a = document.createElement('div').style),
        'AnimationEvent' in window ||
          (delete Ya.animationend.animation,
          delete Ya.animationiteration.animation,
          delete Ya.animationstart.animation),
        'TransitionEvent' in window || delete Ya.transitionend.transition);
      function ab(a) {
        if (Za[a]) return Za[a];
        if (!Ya[a]) return a;
        var b = Ya[a],
          c;
        for (c in b) if (b.hasOwnProperty(c) && c in $a) return (Za[a] = b[c]);
        return a;
      }
      var bb = ab('animationend'),
        cb = ab('animationiteration'),
        db = ab('animationstart'),
        eb = ab('transitionend'),
        fb = 'abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting'.split(
          ' '
        ),
        gb = null,
        hb = null,
        ib = null;
      function jb() {
        if (ib) return ib;
        var a,
          b = hb,
          c = b.length,
          d,
          e = 'value' in gb ? gb.value : gb.textContent,
          f = e.length;
        for (a = 0; a < c && b[a] === e[a]; a++);
        var g = c - a;
        for (d = 1; d <= g && b[c - d] === e[f - d]; d++);
        return (ib = e.slice(a, 1 < d ? 1 - d : void 0));
      }
      function kb() {
        return !0;
      }
      function lb() {
        return !1;
      }
      function z(a, b, c, d) {
        this.dispatchConfig = a;
        this._targetInst = b;
        this.nativeEvent = c;
        a = this.constructor.Interface;
        for (var e in a)
          a.hasOwnProperty(e) &&
            ((b = a[e])
              ? (this[e] = b(c))
              : 'target' === e
                ? (this.target = d)
                : (this[e] = c[e]));
        this.isDefaultPrevented = (null != c.defaultPrevented
        ? c.defaultPrevented
        : !1 === c.returnValue)
          ? kb
          : lb;
        this.isPropagationStopped = lb;
        return this;
      }
      n(z.prototype, {
        preventDefault: function() {
          this.defaultPrevented = !0;
          var a = this.nativeEvent;
          a &&
            (a.preventDefault
              ? a.preventDefault()
              : 'unknown' !== typeof a.returnValue && (a.returnValue = !1),
            (this.isDefaultPrevented = kb));
        },
        stopPropagation: function() {
          var a = this.nativeEvent;
          a &&
            (a.stopPropagation
              ? a.stopPropagation()
              : 'unknown' !== typeof a.cancelBubble && (a.cancelBubble = !0),
            (this.isPropagationStopped = kb));
        },
        persist: function() {
          this.isPersistent = kb;
        },
        isPersistent: lb,
        destructor: function() {
          var a = this.constructor.Interface,
            b;
          for (b in a) this[b] = null;
          this.nativeEvent = this._targetInst = this.dispatchConfig = null;
          this.isPropagationStopped = this.isDefaultPrevented = lb;
          this._dispatchInstances = this._dispatchListeners = null;
        }
      });
      z.Interface = {
        type: null,
        target: null,
        currentTarget: function() {
          return null;
        },
        eventPhase: null,
        bubbles: null,
        cancelable: null,
        timeStamp: function(a) {
          return a.timeStamp || Date.now();
        },
        defaultPrevented: null,
        isTrusted: null
      };
      z.extend = function(a) {
        function b() {}
        function c() {
          return d.apply(this, arguments);
        }
        var d = this;
        b.prototype = d.prototype;
        var e = new b();
        n(e, c.prototype);
        c.prototype = e;
        c.prototype.constructor = c;
        c.Interface = n({}, d.Interface, a);
        c.extend = d.extend;
        mb(c);
        return c;
      };
      mb(z);
      function nb(a, b, c, d) {
        if (this.eventPool.length) {
          var e = this.eventPool.pop();
          this.call(e, a, b, c, d);
          return e;
        }
        return new this(a, b, c, d);
      }
      function ob(a) {
        a instanceof this ? void 0 : t('279');
        a.destructor();
        10 > this.eventPool.length && this.eventPool.push(a);
      }
      function mb(a) {
        a.eventPool = [];
        a.getPooled = nb;
        a.release = ob;
      }
      var pb = z.extend({ data: null }),
        qb = z.extend({ data: null }),
        rb = [9, 13, 27, 32],
        sb = Va && 'CompositionEvent' in window,
        tb = null;
      Va && 'documentMode' in document && (tb = document.documentMode);
      var ub = Va && 'TextEvent' in window && !tb,
        vb = Va && (!sb || (tb && 8 < tb && 11 >= tb)),
        wb = String.fromCharCode(32),
        xb = {
          beforeInput: {
            phasedRegistrationNames: {
              bubbled: 'onBeforeInput',
              captured: 'onBeforeInputCapture'
            },
            dependencies: ['compositionend', 'keypress', 'textInput', 'paste']
          },
          compositionEnd: {
            phasedRegistrationNames: {
              bubbled: 'onCompositionEnd',
              captured: 'onCompositionEndCapture'
            },
            dependencies: 'blur compositionend keydown keypress keyup mousedown'.split(
              ' '
            )
          },
          compositionStart: {
            phasedRegistrationNames: {
              bubbled: 'onCompositionStart',
              captured: 'onCompositionStartCapture'
            },
            dependencies: 'blur compositionstart keydown keypress keyup mousedown'.split(
              ' '
            )
          },
          compositionUpdate: {
            phasedRegistrationNames: {
              bubbled: 'onCompositionUpdate',
              captured: 'onCompositionUpdateCapture'
            },
            dependencies: 'blur compositionupdate keydown keypress keyup mousedown'.split(
              ' '
            )
          }
        },
        yb = !1;
      function zb(a, b) {
        switch (a) {
          case 'keyup':
            return -1 !== rb.indexOf(b.keyCode);
          case 'keydown':
            return 229 !== b.keyCode;
          case 'keypress':
          case 'mousedown':
          case 'blur':
            return !0;
          default:
            return !1;
        }
      }
      function Ab(a) {
        a = a.detail;
        return 'object' === typeof a && 'data' in a ? a.data : null;
      }
      var Bb = !1;
      function Cb(a, b) {
        switch (a) {
          case 'compositionend':
            return Ab(b);
          case 'keypress':
            if (32 !== b.which) return null;
            yb = !0;
            return wb;
          case 'textInput':
            return (a = b.data), a === wb && yb ? null : a;
          default:
            return null;
        }
      }
      function Db(a, b) {
        if (Bb)
          return 'compositionend' === a || (!sb && zb(a, b))
            ? ((a = jb()), (ib = hb = gb = null), (Bb = !1), a)
            : null;
        switch (a) {
          case 'paste':
            return null;
          case 'keypress':
            if (
              !(b.ctrlKey || b.altKey || b.metaKey) ||
              (b.ctrlKey && b.altKey)
            ) {
              if (b.char && 1 < b.char.length) return b.char;
              if (b.which) return String.fromCharCode(b.which);
            }
            return null;
          case 'compositionend':
            return vb && 'ko' !== b.locale ? null : b.data;
          default:
            return null;
        }
      }
      var Eb = {
          eventTypes: xb,
          extractEvents: function(a, b, c, d) {
            var e = void 0;
            var f = void 0;
            if (sb)
              b: {
                switch (a) {
                  case 'compositionstart':
                    e = xb.compositionStart;
                    break b;
                  case 'compositionend':
                    e = xb.compositionEnd;
                    break b;
                  case 'compositionupdate':
                    e = xb.compositionUpdate;
                    break b;
                }
                e = void 0;
              }
            else
              Bb
                ? zb(a, c) && (e = xb.compositionEnd)
                : 'keydown' === a &&
                  229 === c.keyCode &&
                  (e = xb.compositionStart);
            e
              ? (vb &&
                  'ko' !== c.locale &&
                  (Bb || e !== xb.compositionStart
                    ? e === xb.compositionEnd && Bb && (f = jb())
                    : ((gb = d),
                      (hb = 'value' in gb ? gb.value : gb.textContent),
                      (Bb = !0))),
                (e = pb.getPooled(e, b, c, d)),
                f ? (e.data = f) : ((f = Ab(c)), null !== f && (e.data = f)),
                Ua(e),
                (f = e))
              : (f = null);
            (a = ub ? Cb(a, c) : Db(a, c))
              ? ((b = qb.getPooled(xb.beforeInput, b, c, d)),
                (b.data = a),
                Ua(b))
              : (b = null);
            return null === f ? b : null === b ? f : [f, b];
          }
        },
        Fb = null,
        Gb = null,
        Hb = null;
      function Ib(a) {
        if ((a = va(a))) {
          'function' !== typeof Fb ? t('280') : void 0;
          var b = ua(a.stateNode);
          Fb(a.stateNode, a.type, b);
        }
      }
      function Jb(a) {
        Gb ? (Hb ? Hb.push(a) : (Hb = [a])) : (Gb = a);
      }
      function Kb() {
        if (Gb) {
          var a = Gb,
            b = Hb;
          Hb = Gb = null;
          Ib(a);
          if (b) for (a = 0; a < b.length; a++) Ib(b[a]);
        }
      }
      function Lb(a, b) {
        return a(b);
      }
      function Mb(a, b, c) {
        return a(b, c);
      }
      function Nb() {}
      var Ob = !1;
      function Pb(a, b) {
        if (Ob) return a(b);
        Ob = !0;
        try {
          return Lb(a, b);
        } finally {
          if (((Ob = !1), null !== Gb || null !== Hb)) Nb(), Kb();
        }
      }
      var Qb = {
        color: !0,
        date: !0,
        datetime: !0,
        'datetime-local': !0,
        email: !0,
        month: !0,
        number: !0,
        password: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0
      };
      function Rb(a) {
        var b = a && a.nodeName && a.nodeName.toLowerCase();
        return 'input' === b ? !!Qb[a.type] : 'textarea' === b ? !0 : !1;
      }
      function Sb(a) {
        a = a.target || a.srcElement || window;
        a.correspondingUseElement && (a = a.correspondingUseElement);
        return 3 === a.nodeType ? a.parentNode : a;
      }
      function Tb(a) {
        if (!Va) return !1;
        a = 'on' + a;
        var b = a in document;
        b ||
          ((b = document.createElement('div')),
          b.setAttribute(a, 'return;'),
          (b = 'function' === typeof b[a]));
        return b;
      }
      function Ub(a) {
        var b = a.type;
        return (
          (a = a.nodeName) &&
          'input' === a.toLowerCase() &&
          ('checkbox' === b || 'radio' === b)
        );
      }
      function Vb(a) {
        var b = Ub(a) ? 'checked' : 'value',
          c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
          d = '' + a[b];
        if (
          !a.hasOwnProperty(b) &&
          'undefined' !== typeof c &&
          'function' === typeof c.get &&
          'function' === typeof c.set
        ) {
          var e = c.get,
            f = c.set;
          Object.defineProperty(a, b, {
            configurable: !0,
            get: function() {
              return e.call(this);
            },
            set: function(a) {
              d = '' + a;
              f.call(this, a);
            }
          });
          Object.defineProperty(a, b, { enumerable: c.enumerable });
          return {
            getValue: function() {
              return d;
            },
            setValue: function(a) {
              d = '' + a;
            },
            stopTracking: function() {
              a._valueTracker = null;
              delete a[b];
            }
          };
        }
      }
      function Wb(a) {
        a._valueTracker || (a._valueTracker = Vb(a));
      }
      function Xb(a) {
        if (!a) return !1;
        var b = a._valueTracker;
        if (!b) return !0;
        var c = b.getValue();
        var d = '';
        a && (d = Ub(a) ? (a.checked ? 'true' : 'false') : a.value);
        a = d;
        return a !== c ? (b.setValue(a), !0) : !1;
      }
      var Yb = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
        Zb = /^(.*)[\\\/]/,
        C = 'function' === typeof Symbol && Symbol.for,
        $b = C ? Symbol.for('react.element') : 60103,
        ac = C ? Symbol.for('react.portal') : 60106,
        bc = C ? Symbol.for('react.fragment') : 60107,
        cc = C ? Symbol.for('react.strict_mode') : 60108,
        dc = C ? Symbol.for('react.profiler') : 60114,
        ec = C ? Symbol.for('react.provider') : 60109,
        fc = C ? Symbol.for('react.context') : 60110,
        gc = C ? Symbol.for('react.async_mode') : 60111,
        hc = C ? Symbol.for('react.forward_ref') : 60112,
        ic = C ? Symbol.for('react.placeholder') : 60113,
        jc = 'function' === typeof Symbol && Symbol.iterator;
      function kc(a) {
        if (null === a || 'object' !== typeof a) return null;
        a = (jc && a[jc]) || a['@@iterator'];
        return 'function' === typeof a ? a : null;
      }
      function lc(a) {
        if (null == a) return null;
        if ('function' === typeof a) return a.displayName || a.name || null;
        if ('string' === typeof a) return a;
        switch (a) {
          case gc:
            return 'AsyncMode';
          case bc:
            return 'Fragment';
          case ac:
            return 'Portal';
          case dc:
            return 'Profiler';
          case cc:
            return 'StrictMode';
          case ic:
            return 'Placeholder';
        }
        if ('object' === typeof a) {
          switch (a.$$typeof) {
            case fc:
              return 'Context.Consumer';
            case ec:
              return 'Context.Provider';
            case hc:
              var b = a.render;
              b = b.displayName || b.name || '';
              return (
                a.displayName ||
                ('' !== b ? 'ForwardRef(' + b + ')' : 'ForwardRef')
              );
          }
          if (
            'function' === typeof a.then &&
            (a = 1 === a._reactStatus ? a._reactResult : null)
          )
            return lc(a);
        }
        return null;
      }
      function mc(a) {
        var b = '';
        do {
          a: switch (a.tag) {
            case 4:
            case 0:
            case 1:
            case 2:
            case 3:
            case 7:
            case 10:
              var c = a._debugOwner,
                d = a._debugSource,
                e = lc(a.type);
              var f = null;
              c && (f = lc(c.type));
              c = e;
              e = '';
              d
                ? (e =
                    ' (at ' +
                    d.fileName.replace(Zb, '') +
                    ':' +
                    d.lineNumber +
                    ')')
                : f && (e = ' (created by ' + f + ')');
              f = '\n    in ' + (c || 'Unknown') + e;
              break a;
            default:
              f = '';
          }
          b += f;
          a = a.return;
        } while (a);
        return b;
      }
      var nc = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
        pc = Object.prototype.hasOwnProperty,
        qc = {},
        rc = {};
      function sc(a) {
        if (pc.call(rc, a)) return !0;
        if (pc.call(qc, a)) return !1;
        if (nc.test(a)) return (rc[a] = !0);
        qc[a] = !0;
        return !1;
      }
      function tc(a, b, c, d) {
        if (null !== c && 0 === c.type) return !1;
        switch (typeof b) {
          case 'function':
          case 'symbol':
            return !0;
          case 'boolean':
            if (d) return !1;
            if (null !== c) return !c.acceptsBooleans;
            a = a.toLowerCase().slice(0, 5);
            return 'data-' !== a && 'aria-' !== a;
          default:
            return !1;
        }
      }
      function uc(a, b, c, d) {
        if (null === b || 'undefined' === typeof b || tc(a, b, c, d)) return !0;
        if (d) return !1;
        if (null !== c)
          switch (c.type) {
            case 3:
              return !b;
            case 4:
              return !1 === b;
            case 5:
              return isNaN(b);
            case 6:
              return isNaN(b) || 1 > b;
          }
        return !1;
      }
      function D(a, b, c, d, e) {
        this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
        this.attributeName = d;
        this.attributeNamespace = e;
        this.mustUseProperty = c;
        this.propertyName = a;
        this.type = b;
      }
      var E = {};
      'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'
        .split(' ')
        .forEach(function(a) {
          E[a] = new D(a, 0, !1, a, null);
        });
      [
        ['acceptCharset', 'accept-charset'],
        ['className', 'class'],
        ['htmlFor', 'for'],
        ['httpEquiv', 'http-equiv']
      ].forEach(function(a) {
        var b = a[0];
        E[b] = new D(b, 1, !1, a[1], null);
      });
      ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function(
        a
      ) {
        E[a] = new D(a, 2, !1, a.toLowerCase(), null);
      });
      [
        'autoReverse',
        'externalResourcesRequired',
        'focusable',
        'preserveAlpha'
      ].forEach(function(a) {
        E[a] = new D(a, 2, !1, a, null);
      });
      'allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'
        .split(' ')
        .forEach(function(a) {
          E[a] = new D(a, 3, !1, a.toLowerCase(), null);
        });
      ['checked', 'multiple', 'muted', 'selected'].forEach(function(a) {
        E[a] = new D(a, 3, !0, a, null);
      });
      ['capture', 'download'].forEach(function(a) {
        E[a] = new D(a, 4, !1, a, null);
      });
      ['cols', 'rows', 'size', 'span'].forEach(function(a) {
        E[a] = new D(a, 6, !1, a, null);
      });
      ['rowSpan', 'start'].forEach(function(a) {
        E[a] = new D(a, 5, !1, a.toLowerCase(), null);
      });
      var vc = /[\-:]([a-z])/g;
      function wc(a) {
        return a[1].toUpperCase();
      }
      'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'
        .split(' ')
        .forEach(function(a) {
          var b = a.replace(vc, wc);
          E[b] = new D(b, 1, !1, a, null);
        });
      'xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type'
        .split(' ')
        .forEach(function(a) {
          var b = a.replace(vc, wc);
          E[b] = new D(b, 1, !1, a, 'http://www.w3.org/1999/xlink');
        });
      ['xml:base', 'xml:lang', 'xml:space'].forEach(function(a) {
        var b = a.replace(vc, wc);
        E[b] = new D(b, 1, !1, a, 'http://www.w3.org/XML/1998/namespace');
      });
      E.tabIndex = new D('tabIndex', 1, !1, 'tabindex', null);
      function xc(a, b, c, d) {
        var e = E.hasOwnProperty(b) ? E[b] : null;
        var f =
          null !== e
            ? 0 === e.type
            : d
              ? !1
              : !(2 < b.length) ||
                ('o' !== b[0] && 'O' !== b[0]) ||
                ('n' !== b[1] && 'N' !== b[1])
                ? !1
                : !0;
        f ||
          (uc(b, c, e, d) && (c = null),
          d || null === e
            ? sc(b) &&
              (null === c ? a.removeAttribute(b) : a.setAttribute(b, '' + c))
            : e.mustUseProperty
              ? (a[e.propertyName] = null === c ? (3 === e.type ? !1 : '') : c)
              : ((b = e.attributeName),
                (d = e.attributeNamespace),
                null === c
                  ? a.removeAttribute(b)
                  : ((e = e.type),
                    (c = 3 === e || (4 === e && !0 === c) ? '' : '' + c),
                    d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));
      }
      function yc(a) {
        switch (typeof a) {
          case 'boolean':
          case 'number':
          case 'object':
          case 'string':
          case 'undefined':
            return a;
          default:
            return '';
        }
      }
      function zc(a, b) {
        var c = b.checked;
        return n({}, b, {
          defaultChecked: void 0,
          defaultValue: void 0,
          value: void 0,
          checked: null != c ? c : a._wrapperState.initialChecked
        });
      }
      function Bc(a, b) {
        var c = null == b.defaultValue ? '' : b.defaultValue,
          d = null != b.checked ? b.checked : b.defaultChecked;
        c = yc(null != b.value ? b.value : c);
        a._wrapperState = {
          initialChecked: d,
          initialValue: c,
          controlled:
            'checkbox' === b.type || 'radio' === b.type
              ? null != b.checked
              : null != b.value
        };
      }
      function Cc(a, b) {
        b = b.checked;
        null != b && xc(a, 'checked', b, !1);
      }
      function Dc(a, b) {
        Cc(a, b);
        var c = yc(b.value),
          d = b.type;
        if (null != c)
          if ('number' === d) {
            if ((0 === c && '' === a.value) || a.value != c) a.value = '' + c;
          } else a.value !== '' + c && (a.value = '' + c);
        else if ('submit' === d || 'reset' === d) {
          a.removeAttribute('value');
          return;
        }
        b.hasOwnProperty('value')
          ? Ec(a, b.type, c)
          : b.hasOwnProperty('defaultValue') &&
            Ec(a, b.type, yc(b.defaultValue));
        null == b.checked &&
          null != b.defaultChecked &&
          (a.defaultChecked = !!b.defaultChecked);
      }
      function Fc(a, b, c) {
        if (b.hasOwnProperty('value') || b.hasOwnProperty('defaultValue')) {
          var d = b.type;
          if (
            !(
              ('submit' !== d && 'reset' !== d) ||
              (void 0 !== b.value && null !== b.value)
            )
          )
            return;
          b = '' + a._wrapperState.initialValue;
          c || b === a.value || (a.value = b);
          a.defaultValue = b;
        }
        c = a.name;
        '' !== c && (a.name = '');
        a.defaultChecked = !a.defaultChecked;
        a.defaultChecked = !!a._wrapperState.initialChecked;
        '' !== c && (a.name = c);
      }
      function Ec(a, b, c) {
        if ('number' !== b || a.ownerDocument.activeElement !== a)
          null == c
            ? (a.defaultValue = '' + a._wrapperState.initialValue)
            : a.defaultValue !== '' + c && (a.defaultValue = '' + c);
      }
      var Gc = {
        change: {
          phasedRegistrationNames: {
            bubbled: 'onChange',
            captured: 'onChangeCapture'
          },
          dependencies: 'blur change click focus input keydown keyup selectionchange'.split(
            ' '
          )
        }
      };
      function Hc(a, b, c) {
        a = z.getPooled(Gc.change, a, b, c);
        a.type = 'change';
        Jb(c);
        Ua(a);
        return a;
      }
      var Ic = null,
        Jc = null;
      function Kc(a) {
        Ga(a, !1);
      }
      function Lc(a) {
        var b = Ma(a);
        if (Xb(b)) return a;
      }
      function Mc(a, b) {
        if ('change' === a) return b;
      }
      var Nc = !1;
      Va &&
        (Nc =
          Tb('input') && (!document.documentMode || 9 < document.documentMode));
      function Oc() {
        Ic && (Ic.detachEvent('onpropertychange', Pc), (Jc = Ic = null));
      }
      function Pc(a) {
        'value' === a.propertyName &&
          Lc(Jc) &&
          ((a = Hc(Jc, a, Sb(a))), Pb(Kc, a));
      }
      function Qc(a, b, c) {
        'focus' === a
          ? (Oc(), (Ic = b), (Jc = c), Ic.attachEvent('onpropertychange', Pc))
          : 'blur' === a && Oc();
      }
      function Rc(a) {
        if ('selectionchange' === a || 'keyup' === a || 'keydown' === a)
          return Lc(Jc);
      }
      function Sc(a, b) {
        if ('click' === a) return Lc(b);
      }
      function Tc(a, b) {
        if ('input' === a || 'change' === a) return Lc(b);
      }
      var Uc = {
          eventTypes: Gc,
          _isInputEventSupported: Nc,
          extractEvents: function(a, b, c, d) {
            var e = b ? Ma(b) : window,
              f = void 0,
              g = void 0,
              h = e.nodeName && e.nodeName.toLowerCase();
            'select' === h || ('input' === h && 'file' === e.type)
              ? (f = Mc)
              : Rb(e)
                ? Nc
                  ? (f = Tc)
                  : ((f = Rc), (g = Qc))
                : (h = e.nodeName) &&
                  'input' === h.toLowerCase() &&
                  ('checkbox' === e.type || 'radio' === e.type) &&
                  (f = Sc);
            if (f && (f = f(a, b))) return Hc(f, c, d);
            g && g(a, e, b);
            'blur' === a &&
              (a = e._wrapperState) &&
              a.controlled &&
              'number' === e.type &&
              Ec(e, 'number', e.value);
          }
        },
        Vc = z.extend({ view: null, detail: null }),
        Wc = {
          Alt: 'altKey',
          Control: 'ctrlKey',
          Meta: 'metaKey',
          Shift: 'shiftKey'
        };
      function Xc(a) {
        var b = this.nativeEvent;
        return b.getModifierState
          ? b.getModifierState(a)
          : (a = Wc[a])
            ? !!b[a]
            : !1;
      }
      function Yc() {
        return Xc;
      }
      var Zc = 0,
        $c = 0,
        ad = !1,
        bd = !1,
        cd = Vc.extend({
          screenX: null,
          screenY: null,
          clientX: null,
          clientY: null,
          pageX: null,
          pageY: null,
          ctrlKey: null,
          shiftKey: null,
          altKey: null,
          metaKey: null,
          getModifierState: Yc,
          button: null,
          buttons: null,
          relatedTarget: function(a) {
            return (
              a.relatedTarget ||
              (a.fromElement === a.srcElement ? a.toElement : a.fromElement)
            );
          },
          movementX: function(a) {
            if ('movementX' in a) return a.movementX;
            var b = Zc;
            Zc = a.screenX;
            return ad
              ? 'mousemove' === a.type
                ? a.screenX - b
                : 0
              : ((ad = !0), 0);
          },
          movementY: function(a) {
            if ('movementY' in a) return a.movementY;
            var b = $c;
            $c = a.screenY;
            return bd
              ? 'mousemove' === a.type
                ? a.screenY - b
                : 0
              : ((bd = !0), 0);
          }
        }),
        dd = cd.extend({
          pointerId: null,
          width: null,
          height: null,
          pressure: null,
          tangentialPressure: null,
          tiltX: null,
          tiltY: null,
          twist: null,
          pointerType: null,
          isPrimary: null
        }),
        ed = {
          mouseEnter: {
            registrationName: 'onMouseEnter',
            dependencies: ['mouseout', 'mouseover']
          },
          mouseLeave: {
            registrationName: 'onMouseLeave',
            dependencies: ['mouseout', 'mouseover']
          },
          pointerEnter: {
            registrationName: 'onPointerEnter',
            dependencies: ['pointerout', 'pointerover']
          },
          pointerLeave: {
            registrationName: 'onPointerLeave',
            dependencies: ['pointerout', 'pointerover']
          }
        },
        fd = {
          eventTypes: ed,
          extractEvents: function(a, b, c, d) {
            var e = 'mouseover' === a || 'pointerover' === a,
              f = 'mouseout' === a || 'pointerout' === a;
            if ((e && (c.relatedTarget || c.fromElement)) || (!f && !e))
              return null;
            e =
              d.window === d
                ? d
                : (e = d.ownerDocument)
                  ? e.defaultView || e.parentWindow
                  : window;
            f
              ? ((f = b),
                (b = (b = c.relatedTarget || c.toElement) ? Ka(b) : null))
              : (f = null);
            if (f === b) return null;
            var g = void 0,
              h = void 0,
              k = void 0,
              l = void 0;
            if ('mouseout' === a || 'mouseover' === a)
              (g = cd), (h = ed.mouseLeave), (k = ed.mouseEnter), (l = 'mouse');
            else if ('pointerout' === a || 'pointerover' === a)
              (g = dd),
                (h = ed.pointerLeave),
                (k = ed.pointerEnter),
                (l = 'pointer');
            var m = null == f ? e : Ma(f);
            e = null == b ? e : Ma(b);
            a = g.getPooled(h, f, c, d);
            a.type = l + 'leave';
            a.target = m;
            a.relatedTarget = e;
            c = g.getPooled(k, b, c, d);
            c.type = l + 'enter';
            c.target = e;
            c.relatedTarget = m;
            d = b;
            if (f && d)
              a: {
                b = f;
                e = d;
                l = 0;
                for (g = b; g; g = Oa(g)) l++;
                g = 0;
                for (k = e; k; k = Oa(k)) g++;
                for (; 0 < l - g; ) (b = Oa(b)), l--;
                for (; 0 < g - l; ) (e = Oa(e)), g--;
                for (; l--; ) {
                  if (b === e || b === e.alternate) break a;
                  b = Oa(b);
                  e = Oa(e);
                }
                b = null;
              }
            else b = null;
            e = b;
            for (b = []; f && f !== e; ) {
              l = f.alternate;
              if (null !== l && l === e) break;
              b.push(f);
              f = Oa(f);
            }
            for (f = []; d && d !== e; ) {
              l = d.alternate;
              if (null !== l && l === e) break;
              f.push(d);
              d = Oa(d);
            }
            for (d = 0; d < b.length; d++) Ra(b[d], 'bubbled', a);
            for (d = f.length; 0 < d--; ) Ra(f[d], 'captured', c);
            return [a, c];
          }
        },
        gd = Object.prototype.hasOwnProperty;
      function hd(a, b) {
        return a === b
          ? 0 !== a || 0 !== b || 1 / a === 1 / b
          : a !== a && b !== b;
      }
      function id(a, b) {
        if (hd(a, b)) return !0;
        if (
          'object' !== typeof a ||
          null === a ||
          'object' !== typeof b ||
          null === b
        )
          return !1;
        var c = Object.keys(a),
          d = Object.keys(b);
        if (c.length !== d.length) return !1;
        for (d = 0; d < c.length; d++)
          if (!gd.call(b, c[d]) || !hd(a[c[d]], b[c[d]])) return !1;
        return !0;
      }
      function jd(a) {
        var b = a;
        if (a.alternate) for (; b.return; ) b = b.return;
        else {
          if (0 !== (b.effectTag & 2)) return 1;
          for (; b.return; )
            if (((b = b.return), 0 !== (b.effectTag & 2))) return 1;
        }
        return 5 === b.tag ? 2 : 3;
      }
      function kd(a) {
        2 !== jd(a) ? t('188') : void 0;
      }
      function ld(a) {
        var b = a.alternate;
        if (!b)
          return (b = jd(a)), 3 === b ? t('188') : void 0, 1 === b ? null : a;
        for (var c = a, d = b; ; ) {
          var e = c.return,
            f = e ? e.alternate : null;
          if (!e || !f) break;
          if (e.child === f.child) {
            for (var g = e.child; g; ) {
              if (g === c) return kd(e), a;
              if (g === d) return kd(e), b;
              g = g.sibling;
            }
            t('188');
          }
          if (c.return !== d.return) (c = e), (d = f);
          else {
            g = !1;
            for (var h = e.child; h; ) {
              if (h === c) {
                g = !0;
                c = e;
                d = f;
                break;
              }
              if (h === d) {
                g = !0;
                d = e;
                c = f;
                break;
              }
              h = h.sibling;
            }
            if (!g) {
              for (h = f.child; h; ) {
                if (h === c) {
                  g = !0;
                  c = f;
                  d = e;
                  break;
                }
                if (h === d) {
                  g = !0;
                  d = f;
                  c = e;
                  break;
                }
                h = h.sibling;
              }
              g ? void 0 : t('189');
            }
          }
          c.alternate !== d ? t('190') : void 0;
        }
        5 !== c.tag ? t('188') : void 0;
        return c.stateNode.current === c ? a : b;
      }
      function md(a) {
        a = ld(a);
        if (!a) return null;
        for (var b = a; ; ) {
          if (7 === b.tag || 8 === b.tag) return b;
          if (b.child) (b.child.return = b), (b = b.child);
          else {
            if (b === a) break;
            for (; !b.sibling; ) {
              if (!b.return || b.return === a) return null;
              b = b.return;
            }
            b.sibling.return = b.return;
            b = b.sibling;
          }
        }
        return null;
      }
      var nd = z.extend({
          animationName: null,
          elapsedTime: null,
          pseudoElement: null
        }),
        od = z.extend({
          clipboardData: function(a) {
            return 'clipboardData' in a
              ? a.clipboardData
              : window.clipboardData;
          }
        }),
        pd = Vc.extend({ relatedTarget: null });
      function qd(a) {
        var b = a.keyCode;
        'charCode' in a
          ? ((a = a.charCode), 0 === a && 13 === b && (a = 13))
          : (a = b);
        10 === a && (a = 13);
        return 32 <= a || 13 === a ? a : 0;
      }
      var rd = {
          Esc: 'Escape',
          Spacebar: ' ',
          Left: 'ArrowLeft',
          Up: 'ArrowUp',
          Right: 'ArrowRight',
          Down: 'ArrowDown',
          Del: 'Delete',
          Win: 'OS',
          Menu: 'ContextMenu',
          Apps: 'ContextMenu',
          Scroll: 'ScrollLock',
          MozPrintableKey: 'Unidentified'
        },
        sd = {
          8: 'Backspace',
          9: 'Tab',
          12: 'Clear',
          13: 'Enter',
          16: 'Shift',
          17: 'Control',
          18: 'Alt',
          19: 'Pause',
          20: 'CapsLock',
          27: 'Escape',
          32: ' ',
          33: 'PageUp',
          34: 'PageDown',
          35: 'End',
          36: 'Home',
          37: 'ArrowLeft',
          38: 'ArrowUp',
          39: 'ArrowRight',
          40: 'ArrowDown',
          45: 'Insert',
          46: 'Delete',
          112: 'F1',
          113: 'F2',
          114: 'F3',
          115: 'F4',
          116: 'F5',
          117: 'F6',
          118: 'F7',
          119: 'F8',
          120: 'F9',
          121: 'F10',
          122: 'F11',
          123: 'F12',
          144: 'NumLock',
          145: 'ScrollLock',
          224: 'Meta'
        },
        td = Vc.extend({
          key: function(a) {
            if (a.key) {
              var b = rd[a.key] || a.key;
              if ('Unidentified' !== b) return b;
            }
            return 'keypress' === a.type
              ? ((a = qd(a)), 13 === a ? 'Enter' : String.fromCharCode(a))
              : 'keydown' === a.type || 'keyup' === a.type
                ? sd[a.keyCode] || 'Unidentified'
                : '';
          },
          location: null,
          ctrlKey: null,
          shiftKey: null,
          altKey: null,
          metaKey: null,
          repeat: null,
          locale: null,
          getModifierState: Yc,
          charCode: function(a) {
            return 'keypress' === a.type ? qd(a) : 0;
          },
          keyCode: function(a) {
            return 'keydown' === a.type || 'keyup' === a.type ? a.keyCode : 0;
          },
          which: function(a) {
            return 'keypress' === a.type
              ? qd(a)
              : 'keydown' === a.type || 'keyup' === a.type
                ? a.keyCode
                : 0;
          }
        }),
        ud = cd.extend({ dataTransfer: null }),
        vd = Vc.extend({
          touches: null,
          targetTouches: null,
          changedTouches: null,
          altKey: null,
          metaKey: null,
          ctrlKey: null,
          shiftKey: null,
          getModifierState: Yc
        }),
        wd = z.extend({
          propertyName: null,
          elapsedTime: null,
          pseudoElement: null
        }),
        xd = cd.extend({
          deltaX: function(a) {
            return 'deltaX' in a
              ? a.deltaX
              : 'wheelDeltaX' in a
                ? -a.wheelDeltaX
                : 0;
          },
          deltaY: function(a) {
            return 'deltaY' in a
              ? a.deltaY
              : 'wheelDeltaY' in a
                ? -a.wheelDeltaY
                : 'wheelDelta' in a
                  ? -a.wheelDelta
                  : 0;
          },
          deltaZ: null,
          deltaMode: null
        }),
        yd = [
          ['abort', 'abort'],
          [bb, 'animationEnd'],
          [cb, 'animationIteration'],
          [db, 'animationStart'],
          ['canplay', 'canPlay'],
          ['canplaythrough', 'canPlayThrough'],
          ['drag', 'drag'],
          ['dragenter', 'dragEnter'],
          ['dragexit', 'dragExit'],
          ['dragleave', 'dragLeave'],
          ['dragover', 'dragOver'],
          ['durationchange', 'durationChange'],
          ['emptied', 'emptied'],
          ['encrypted', 'encrypted'],
          ['ended', 'ended'],
          ['error', 'error'],
          ['gotpointercapture', 'gotPointerCapture'],
          ['load', 'load'],
          ['loadeddata', 'loadedData'],
          ['loadedmetadata', 'loadedMetadata'],
          ['loadstart', 'loadStart'],
          ['lostpointercapture', 'lostPointerCapture'],
          ['mousemove', 'mouseMove'],
          ['mouseout', 'mouseOut'],
          ['mouseover', 'mouseOver'],
          ['playing', 'playing'],
          ['pointermove', 'pointerMove'],
          ['pointerout', 'pointerOut'],
          ['pointerover', 'pointerOver'],
          ['progress', 'progress'],
          ['scroll', 'scroll'],
          ['seeking', 'seeking'],
          ['stalled', 'stalled'],
          ['suspend', 'suspend'],
          ['timeupdate', 'timeUpdate'],
          ['toggle', 'toggle'],
          ['touchmove', 'touchMove'],
          [eb, 'transitionEnd'],
          ['waiting', 'waiting'],
          ['wheel', 'wheel']
        ],
        zd = {},
        Ad = {};
      function Bd(a, b) {
        var c = a[0];
        a = a[1];
        var d = 'on' + (a[0].toUpperCase() + a.slice(1));
        b = {
          phasedRegistrationNames: { bubbled: d, captured: d + 'Capture' },
          dependencies: [c],
          isInteractive: b
        };
        zd[a] = b;
        Ad[c] = b;
      }
      [
        ['blur', 'blur'],
        ['cancel', 'cancel'],
        ['click', 'click'],
        ['close', 'close'],
        ['contextmenu', 'contextMenu'],
        ['copy', 'copy'],
        ['cut', 'cut'],
        ['auxclick', 'auxClick'],
        ['dblclick', 'doubleClick'],
        ['dragend', 'dragEnd'],
        ['dragstart', 'dragStart'],
        ['drop', 'drop'],
        ['focus', 'focus'],
        ['input', 'input'],
        ['invalid', 'invalid'],
        ['keydown', 'keyDown'],
        ['keypress', 'keyPress'],
        ['keyup', 'keyUp'],
        ['mousedown', 'mouseDown'],
        ['mouseup', 'mouseUp'],
        ['paste', 'paste'],
        ['pause', 'pause'],
        ['play', 'play'],
        ['pointercancel', 'pointerCancel'],
        ['pointerdown', 'pointerDown'],
        ['pointerup', 'pointerUp'],
        ['ratechange', 'rateChange'],
        ['reset', 'reset'],
        ['seeked', 'seeked'],
        ['submit', 'submit'],
        ['touchcancel', 'touchCancel'],
        ['touchend', 'touchEnd'],
        ['touchstart', 'touchStart'],
        ['volumechange', 'volumeChange']
      ].forEach(function(a) {
        Bd(a, !0);
      });
      yd.forEach(function(a) {
        Bd(a, !1);
      });
      var Cd = {
          eventTypes: zd,
          isInteractiveTopLevelEventType: function(a) {
            a = Ad[a];
            return void 0 !== a && !0 === a.isInteractive;
          },
          extractEvents: function(a, b, c, d) {
            var e = Ad[a];
            if (!e) return null;
            switch (a) {
              case 'keypress':
                if (0 === qd(c)) return null;
              case 'keydown':
              case 'keyup':
                a = td;
                break;
              case 'blur':
              case 'focus':
                a = pd;
                break;
              case 'click':
                if (2 === c.button) return null;
              case 'auxclick':
              case 'dblclick':
              case 'mousedown':
              case 'mousemove':
              case 'mouseup':
              case 'mouseout':
              case 'mouseover':
              case 'contextmenu':
                a = cd;
                break;
              case 'drag':
              case 'dragend':
              case 'dragenter':
              case 'dragexit':
              case 'dragleave':
              case 'dragover':
              case 'dragstart':
              case 'drop':
                a = ud;
                break;
              case 'touchcancel':
              case 'touchend':
              case 'touchmove':
              case 'touchstart':
                a = vd;
                break;
              case bb:
              case cb:
              case db:
                a = nd;
                break;
              case eb:
                a = wd;
                break;
              case 'scroll':
                a = Vc;
                break;
              case 'wheel':
                a = xd;
                break;
              case 'copy':
              case 'cut':
              case 'paste':
                a = od;
                break;
              case 'gotpointercapture':
              case 'lostpointercapture':
              case 'pointercancel':
              case 'pointerdown':
              case 'pointermove':
              case 'pointerout':
              case 'pointerover':
              case 'pointerup':
                a = dd;
                break;
              default:
                a = z;
            }
            b = a.getPooled(e, b, c, d);
            Ua(b);
            return b;
          }
        },
        Dd = Cd.isInteractiveTopLevelEventType,
        Ed = [];
      function Fd(a) {
        var b = a.targetInst,
          c = b;
        do {
          if (!c) {
            a.ancestors.push(c);
            break;
          }
          var d;
          for (d = c; d.return; ) d = d.return;
          d = 5 !== d.tag ? null : d.stateNode.containerInfo;
          if (!d) break;
          a.ancestors.push(c);
          c = Ka(d);
        } while (c);
        for (c = 0; c < a.ancestors.length; c++) {
          b = a.ancestors[c];
          var e = Sb(a.nativeEvent);
          d = a.topLevelType;
          for (var f = a.nativeEvent, g = null, h = 0; h < pa.length; h++) {
            var k = pa[h];
            k && (k = k.extractEvents(d, b, f, e)) && (g = ya(g, k));
          }
          Ga(g, !1);
        }
      }
      var Gd = !0;
      function F(a, b) {
        if (!b) return null;
        var c = (Dd(a) ? Hd : Id).bind(null, a);
        b.addEventListener(a, c, !1);
      }
      function Jd(a, b) {
        if (!b) return null;
        var c = (Dd(a) ? Hd : Id).bind(null, a);
        b.addEventListener(a, c, !0);
      }
      function Hd(a, b) {
        Mb(Id, a, b);
      }
      function Id(a, b) {
        if (Gd) {
          var c = Sb(b);
          c = Ka(c);
          null === c || 'number' !== typeof c.tag || 2 === jd(c) || (c = null);
          if (Ed.length) {
            var d = Ed.pop();
            d.topLevelType = a;
            d.nativeEvent = b;
            d.targetInst = c;
            a = d;
          } else
            a = {
              topLevelType: a,
              nativeEvent: b,
              targetInst: c,
              ancestors: []
            };
          try {
            Pb(Fd, a);
          } finally {
            (a.topLevelType = null),
              (a.nativeEvent = null),
              (a.targetInst = null),
              (a.ancestors.length = 0),
              10 > Ed.length && Ed.push(a);
          }
        }
      }
      var Kd = {},
        Ld = 0,
        Md = '_reactListenersID' + ('' + Math.random()).slice(2);
      function Nd(a) {
        Object.prototype.hasOwnProperty.call(a, Md) ||
          ((a[Md] = Ld++), (Kd[a[Md]] = {}));
        return Kd[a[Md]];
      }
      function Od(a) {
        a = a || ('undefined' !== typeof document ? document : void 0);
        if ('undefined' === typeof a) return null;
        try {
          return a.activeElement || a.body;
        } catch (b) {
          return a.body;
        }
      }
      function Qd(a) {
        for (; a && a.firstChild; ) a = a.firstChild;
        return a;
      }
      function Rd(a, b) {
        var c = Qd(a);
        a = 0;
        for (var d; c; ) {
          if (3 === c.nodeType) {
            d = a + c.textContent.length;
            if (a <= b && d >= b) return { node: c, offset: b - a };
            a = d;
          }
          a: {
            for (; c; ) {
              if (c.nextSibling) {
                c = c.nextSibling;
                break a;
              }
              c = c.parentNode;
            }
            c = void 0;
          }
          c = Qd(c);
        }
      }
      function Sd(a, b) {
        return a && b
          ? a === b
            ? !0
            : a && 3 === a.nodeType
              ? !1
              : b && 3 === b.nodeType
                ? Sd(a, b.parentNode)
                : 'contains' in a
                  ? a.contains(b)
                  : a.compareDocumentPosition
                    ? !!(a.compareDocumentPosition(b) & 16)
                    : !1
          : !1;
      }
      function Td() {
        for (var a = window, b = Od(); b instanceof a.HTMLIFrameElement; ) {
          try {
            a = b.contentDocument.defaultView;
          } catch (c) {
            break;
          }
          b = Od(a.document);
        }
        return b;
      }
      function Ud(a) {
        var b = a && a.nodeName && a.nodeName.toLowerCase();
        return (
          b &&
          (('input' === b &&
            ('text' === a.type ||
              'search' === a.type ||
              'tel' === a.type ||
              'url' === a.type ||
              'password' === a.type)) ||
            'textarea' === b ||
            'true' === a.contentEditable)
        );
      }
      var Vd = Va && 'documentMode' in document && 11 >= document.documentMode,
        Wd = {
          select: {
            phasedRegistrationNames: {
              bubbled: 'onSelect',
              captured: 'onSelectCapture'
            },
            dependencies: 'blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange'.split(
              ' '
            )
          }
        },
        Xd = null,
        Yd = null,
        Zd = null,
        $d = !1;
      function ae(a, b) {
        var c =
          b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;
        if ($d || null == Xd || Xd !== Od(c)) return null;
        c = Xd;
        'selectionStart' in c && Ud(c)
          ? (c = { start: c.selectionStart, end: c.selectionEnd })
          : ((c = (
              (c.ownerDocument && c.ownerDocument.defaultView) ||
              window
            ).getSelection()),
            (c = {
              anchorNode: c.anchorNode,
              anchorOffset: c.anchorOffset,
              focusNode: c.focusNode,
              focusOffset: c.focusOffset
            }));
        return Zd && id(Zd, c)
          ? null
          : ((Zd = c),
            (a = z.getPooled(Wd.select, Yd, a, b)),
            (a.type = 'select'),
            (a.target = Xd),
            Ua(a),
            a);
      }
      var be = {
        eventTypes: Wd,
        extractEvents: function(a, b, c, d) {
          var e =
              d.window === d
                ? d.document
                : 9 === d.nodeType
                  ? d
                  : d.ownerDocument,
            f;
          if (!(f = !e)) {
            a: {
              e = Nd(e);
              f = ta.onSelect;
              for (var g = 0; g < f.length; g++) {
                var h = f[g];
                if (!e.hasOwnProperty(h) || !e[h]) {
                  e = !1;
                  break a;
                }
              }
              e = !0;
            }
            f = !e;
          }
          if (f) return null;
          e = b ? Ma(b) : window;
          switch (a) {
            case 'focus':
              if (Rb(e) || 'true' === e.contentEditable)
                (Xd = e), (Yd = b), (Zd = null);
              break;
            case 'blur':
              Zd = Yd = Xd = null;
              break;
            case 'mousedown':
              $d = !0;
              break;
            case 'contextmenu':
            case 'mouseup':
            case 'dragend':
              return ($d = !1), ae(c, d);
            case 'selectionchange':
              if (Vd) break;
            case 'keydown':
            case 'keyup':
              return ae(c, d);
          }
          return null;
        }
      };
      Ea.injectEventPluginOrder(
        'ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin'.split(
          ' '
        )
      );
      ua = Na;
      va = La;
      wa = Ma;
      Ea.injectEventPluginsByName({
        SimpleEventPlugin: Cd,
        EnterLeaveEventPlugin: fd,
        ChangeEventPlugin: Uc,
        SelectEventPlugin: be,
        BeforeInputEventPlugin: Eb
      });
      function ce(a) {
        var b = '';
        aa.Children.forEach(a, function(a) {
          null != a && (b += a);
        });
        return b;
      }
      function de(a, b) {
        a = n({ children: void 0 }, b);
        if ((b = ce(b.children))) a.children = b;
        return a;
      }
      function ee(a, b, c, d) {
        a = a.options;
        if (b) {
          b = {};
          for (var e = 0; e < c.length; e++) b['$' + c[e]] = !0;
          for (c = 0; c < a.length; c++)
            (e = b.hasOwnProperty('$' + a[c].value)),
              a[c].selected !== e && (a[c].selected = e),
              e && d && (a[c].defaultSelected = !0);
        } else {
          c = '' + yc(c);
          b = null;
          for (e = 0; e < a.length; e++) {
            if (a[e].value === c) {
              a[e].selected = !0;
              d && (a[e].defaultSelected = !0);
              return;
            }
            null !== b || a[e].disabled || (b = a[e]);
          }
          null !== b && (b.selected = !0);
        }
      }
      function fe(a, b) {
        null != b.dangerouslySetInnerHTML ? t('91') : void 0;
        return n({}, b, {
          value: void 0,
          defaultValue: void 0,
          children: '' + a._wrapperState.initialValue
        });
      }
      function ge(a, b) {
        var c = b.value;
        null == c &&
          ((c = b.defaultValue),
          (b = b.children),
          null != b &&
            (null != c ? t('92') : void 0,
            Array.isArray(b) && (1 >= b.length ? void 0 : t('93'), (b = b[0])),
            (c = b)),
          null == c && (c = ''));
        a._wrapperState = { initialValue: yc(c) };
      }
      function he(a, b) {
        var c = yc(b.value),
          d = yc(b.defaultValue);
        null != c &&
          ((c = '' + c),
          c !== a.value && (a.value = c),
          null == b.defaultValue &&
            a.defaultValue !== c &&
            (a.defaultValue = c));
        null != d && (a.defaultValue = '' + d);
      }
      function ie(a) {
        var b = a.textContent;
        b === a._wrapperState.initialValue && (a.value = b);
      }
      var je = {
        html: 'http://www.w3.org/1999/xhtml',
        mathml: 'http://www.w3.org/1998/Math/MathML',
        svg: 'http://www.w3.org/2000/svg'
      };
      function ke(a) {
        switch (a) {
          case 'svg':
            return 'http://www.w3.org/2000/svg';
          case 'math':
            return 'http://www.w3.org/1998/Math/MathML';
          default:
            return 'http://www.w3.org/1999/xhtml';
        }
      }
      function le(a, b) {
        return null == a || 'http://www.w3.org/1999/xhtml' === a
          ? ke(b)
          : 'http://www.w3.org/2000/svg' === a && 'foreignObject' === b
            ? 'http://www.w3.org/1999/xhtml'
            : a;
      }
      var me = void 0,
        ne = (function(a) {
          return 'undefined' !== typeof MSApp && MSApp.execUnsafeLocalFunction
            ? function(b, c, d, e) {
                MSApp.execUnsafeLocalFunction(function() {
                  return a(b, c, d, e);
                });
              }
            : a;
        })(function(a, b) {
          if (a.namespaceURI !== je.svg || 'innerHTML' in a) a.innerHTML = b;
          else {
            me = me || document.createElement('div');
            me.innerHTML = '<svg>' + b + '</svg>';
            for (b = me.firstChild; a.firstChild; ) a.removeChild(a.firstChild);
            for (; b.firstChild; ) a.appendChild(b.firstChild);
          }
        });
      function oe(a, b) {
        if (b) {
          var c = a.firstChild;
          if (c && c === a.lastChild && 3 === c.nodeType) {
            c.nodeValue = b;
            return;
          }
        }
        a.textContent = b;
      }
      var pe = {
          animationIterationCount: !0,
          borderImageOutset: !0,
          borderImageSlice: !0,
          borderImageWidth: !0,
          boxFlex: !0,
          boxFlexGroup: !0,
          boxOrdinalGroup: !0,
          columnCount: !0,
          columns: !0,
          flex: !0,
          flexGrow: !0,
          flexPositive: !0,
          flexShrink: !0,
          flexNegative: !0,
          flexOrder: !0,
          gridArea: !0,
          gridRow: !0,
          gridRowEnd: !0,
          gridRowSpan: !0,
          gridRowStart: !0,
          gridColumn: !0,
          gridColumnEnd: !0,
          gridColumnSpan: !0,
          gridColumnStart: !0,
          fontWeight: !0,
          lineClamp: !0,
          lineHeight: !0,
          opacity: !0,
          order: !0,
          orphans: !0,
          tabSize: !0,
          widows: !0,
          zIndex: !0,
          zoom: !0,
          fillOpacity: !0,
          floodOpacity: !0,
          stopOpacity: !0,
          strokeDasharray: !0,
          strokeDashoffset: !0,
          strokeMiterlimit: !0,
          strokeOpacity: !0,
          strokeWidth: !0
        },
        qe = ['Webkit', 'ms', 'Moz', 'O'];
      Object.keys(pe).forEach(function(a) {
        qe.forEach(function(b) {
          b = b + a.charAt(0).toUpperCase() + a.substring(1);
          pe[b] = pe[a];
        });
      });
      function re(a, b) {
        a = a.style;
        for (var c in b)
          if (b.hasOwnProperty(c)) {
            var d = 0 === c.indexOf('--');
            var e = c;
            var f = b[c];
            e =
              null == f || 'boolean' === typeof f || '' === f
                ? ''
                : d ||
                  'number' !== typeof f ||
                  0 === f ||
                  (pe.hasOwnProperty(e) && pe[e])
                  ? ('' + f).trim()
                  : f + 'px';
            'float' === c && (c = 'cssFloat');
            d ? a.setProperty(c, e) : (a[c] = e);
          }
      }
      var se = n(
        { menuitem: !0 },
        {
          area: !0,
          base: !0,
          br: !0,
          col: !0,
          embed: !0,
          hr: !0,
          img: !0,
          input: !0,
          keygen: !0,
          link: !0,
          meta: !0,
          param: !0,
          source: !0,
          track: !0,
          wbr: !0
        }
      );
      function te(a, b) {
        b &&
          (se[a] &&
            (null != b.children || null != b.dangerouslySetInnerHTML
              ? t('137', a, '')
              : void 0),
          null != b.dangerouslySetInnerHTML &&
            (null != b.children ? t('60') : void 0,
            'object' === typeof b.dangerouslySetInnerHTML &&
            '__html' in b.dangerouslySetInnerHTML
              ? void 0
              : t('61')),
          null != b.style && 'object' !== typeof b.style
            ? t('62', '')
            : void 0);
      }
      function ue(a, b) {
        if (-1 === a.indexOf('-')) return 'string' === typeof b.is;
        switch (a) {
          case 'annotation-xml':
          case 'color-profile':
          case 'font-face':
          case 'font-face-src':
          case 'font-face-uri':
          case 'font-face-format':
          case 'font-face-name':
          case 'missing-glyph':
            return !1;
          default:
            return !0;
        }
      }
      function ve(a, b) {
        a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;
        var c = Nd(a);
        b = ta[b];
        for (var d = 0; d < b.length; d++) {
          var e = b[d];
          if (!c.hasOwnProperty(e) || !c[e]) {
            switch (e) {
              case 'scroll':
                Jd('scroll', a);
                break;
              case 'focus':
              case 'blur':
                Jd('focus', a);
                Jd('blur', a);
                c.blur = !0;
                c.focus = !0;
                break;
              case 'cancel':
              case 'close':
                Tb(e) && Jd(e, a);
                break;
              case 'invalid':
              case 'submit':
              case 'reset':
                break;
              default:
                -1 === fb.indexOf(e) && F(e, a);
            }
            c[e] = !0;
          }
        }
      }
      function we() {}
      var xe = null,
        ye = null;
      function ze(a, b) {
        switch (a) {
          case 'button':
          case 'input':
          case 'select':
          case 'textarea':
            return !!b.autoFocus;
        }
        return !1;
      }
      function Ae(a, b) {
        return (
          'textarea' === a ||
          'option' === a ||
          'noscript' === a ||
          'string' === typeof b.children ||
          'number' === typeof b.children ||
          ('object' === typeof b.dangerouslySetInnerHTML &&
            null !== b.dangerouslySetInnerHTML &&
            null != b.dangerouslySetInnerHTML.__html)
        );
      }
      function Be(a) {
        for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType; )
          a = a.nextSibling;
        return a;
      }
      function Ce(a) {
        for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType; )
          a = a.nextSibling;
        return a;
      }
      new Set();
      var De = [],
        Ee = -1;
      function G(a) {
        0 > Ee || ((a.current = De[Ee]), (De[Ee] = null), Ee--);
      }
      function H(a, b) {
        Ee++;
        De[Ee] = a.current;
        a.current = b;
      }
      var Fe = {},
        I = { current: Fe },
        J = { current: !1 },
        Ge = Fe;
      function He(a, b) {
        var c = a.type.contextTypes;
        if (!c) return Fe;
        var d = a.stateNode;
        if (d && d.__reactInternalMemoizedUnmaskedChildContext === b)
          return d.__reactInternalMemoizedMaskedChildContext;
        var e = {},
          f;
        for (f in c) e[f] = b[f];
        d &&
          ((a = a.stateNode),
          (a.__reactInternalMemoizedUnmaskedChildContext = b),
          (a.__reactInternalMemoizedMaskedChildContext = e));
        return e;
      }
      function K(a) {
        a = a.childContextTypes;
        return null !== a && void 0 !== a;
      }
      function Ie(a) {
        G(J, a);
        G(I, a);
      }
      function Je(a) {
        G(J, a);
        G(I, a);
      }
      function Ke(a, b, c) {
        I.current !== Fe ? t('168') : void 0;
        H(I, b, a);
        H(J, c, a);
      }
      function Le(a, b, c) {
        var d = a.stateNode;
        a = b.childContextTypes;
        if ('function' !== typeof d.getChildContext) return c;
        d = d.getChildContext();
        for (var e in d) e in a ? void 0 : t('108', lc(b) || 'Unknown', e);
        return n({}, c, d);
      }
      function Me(a) {
        var b = a.stateNode;
        b = (b && b.__reactInternalMemoizedMergedChildContext) || Fe;
        Ge = I.current;
        H(I, b, a);
        H(J, J.current, a);
        return !0;
      }
      function Ne(a, b, c) {
        var d = a.stateNode;
        d ? void 0 : t('169');
        c
          ? ((b = Le(a, b, Ge)),
            (d.__reactInternalMemoizedMergedChildContext = b),
            G(J, a),
            G(I, a),
            H(I, b, a))
          : G(J, a);
        H(J, c, a);
      }
      var Oe = null,
        Pe = null;
      function Qe(a) {
        return function(b) {
          try {
            return a(b);
          } catch (c) {}
        };
      }
      function Re(a) {
        if ('undefined' === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
        var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (b.isDisabled || !b.supportsFiber) return !0;
        try {
          var c = b.inject(a);
          Oe = Qe(function(a) {
            return b.onCommitFiberRoot(c, a);
          });
          Pe = Qe(function(a) {
            return b.onCommitFiberUnmount(c, a);
          });
        } catch (d) {}
        return !0;
      }
      function Se(a, b, c, d) {
        this.tag = a;
        this.key = c;
        this.sibling = this.child = this.return = this.stateNode = this.type = null;
        this.index = 0;
        this.ref = null;
        this.pendingProps = b;
        this.firstContextDependency = this.memoizedState = this.updateQueue = this.memoizedProps = null;
        this.mode = d;
        this.effectTag = 0;
        this.lastEffect = this.firstEffect = this.nextEffect = null;
        this.childExpirationTime = this.expirationTime = 0;
        this.alternate = null;
      }
      function Te(a) {
        a = a.prototype;
        return !(!a || !a.isReactComponent);
      }
      function Ue(a, b, c) {
        var d = a.alternate;
        null === d
          ? ((d = new Se(a.tag, b, a.key, a.mode)),
            (d.type = a.type),
            (d.stateNode = a.stateNode),
            (d.alternate = a),
            (a.alternate = d))
          : ((d.pendingProps = b),
            (d.effectTag = 0),
            (d.nextEffect = null),
            (d.firstEffect = null),
            (d.lastEffect = null));
        d.childExpirationTime = a.childExpirationTime;
        d.expirationTime = b !== a.pendingProps ? c : a.expirationTime;
        d.child = a.child;
        d.memoizedProps = a.memoizedProps;
        d.memoizedState = a.memoizedState;
        d.updateQueue = a.updateQueue;
        d.firstContextDependency = a.firstContextDependency;
        d.sibling = a.sibling;
        d.index = a.index;
        d.ref = a.ref;
        return d;
      }
      function Ve(a, b, c) {
        var d = a.type,
          e = a.key;
        a = a.props;
        var f = void 0;
        if ('function' === typeof d) f = Te(d) ? 2 : 4;
        else if ('string' === typeof d) f = 7;
        else
          a: switch (d) {
            case bc:
              return We(a.children, b, c, e);
            case gc:
              f = 10;
              b |= 3;
              break;
            case cc:
              f = 10;
              b |= 2;
              break;
            case dc:
              return (
                (d = new Se(15, a, e, b | 4)),
                (d.type = dc),
                (d.expirationTime = c),
                d
              );
            case ic:
              f = 16;
              break;
            default:
              if ('object' === typeof d && null !== d)
                switch (d.$$typeof) {
                  case ec:
                    f = 12;
                    break a;
                  case fc:
                    f = 11;
                    break a;
                  case hc:
                    f = 13;
                    break a;
                  default:
                    if ('function' === typeof d.then) {
                      f = 4;
                      break a;
                    }
                }
              t('130', null == d ? d : typeof d, '');
          }
        b = new Se(f, a, e, b);
        b.type = d;
        b.expirationTime = c;
        return b;
      }
      function We(a, b, c, d) {
        a = new Se(9, a, d, b);
        a.expirationTime = c;
        return a;
      }
      function Xe(a, b, c) {
        a = new Se(8, a, null, b);
        a.expirationTime = c;
        return a;
      }
      function Ye(a, b, c) {
        b = new Se(6, null !== a.children ? a.children : [], a.key, b);
        b.expirationTime = c;
        b.stateNode = {
          containerInfo: a.containerInfo,
          pendingChildren: null,
          implementation: a.implementation
        };
        return b;
      }
      function Ze(a, b) {
        a.didError = !1;
        var c = a.earliestPendingTime;
        0 === c
          ? (a.earliestPendingTime = a.latestPendingTime = b)
          : c > b
            ? (a.earliestPendingTime = b)
            : a.latestPendingTime < b && (a.latestPendingTime = b);
        $e(b, a);
      }
      function $e(a, b) {
        var c = b.earliestSuspendedTime,
          d = b.latestSuspendedTime,
          e = b.earliestPendingTime,
          f = b.latestPingedTime;
        e = 0 !== e ? e : f;
        0 === e && (0 === a || d > a) && (e = d);
        a = e;
        0 !== a && 0 !== c && c < a && (a = c);
        b.nextExpirationTimeToWorkOn = e;
        b.expirationTime = a;
      }
      var af = !1;
      function bf(a) {
        return {
          baseState: a,
          firstUpdate: null,
          lastUpdate: null,
          firstCapturedUpdate: null,
          lastCapturedUpdate: null,
          firstEffect: null,
          lastEffect: null,
          firstCapturedEffect: null,
          lastCapturedEffect: null
        };
      }
      function cf(a) {
        return {
          baseState: a.baseState,
          firstUpdate: a.firstUpdate,
          lastUpdate: a.lastUpdate,
          firstCapturedUpdate: null,
          lastCapturedUpdate: null,
          firstEffect: null,
          lastEffect: null,
          firstCapturedEffect: null,
          lastCapturedEffect: null
        };
      }
      function df(a) {
        return {
          expirationTime: a,
          tag: 0,
          payload: null,
          callback: null,
          next: null,
          nextEffect: null
        };
      }
      function ef(a, b) {
        null === a.lastUpdate
          ? (a.firstUpdate = a.lastUpdate = b)
          : ((a.lastUpdate.next = b), (a.lastUpdate = b));
      }
      function ff(a, b) {
        var c = a.alternate;
        if (null === c) {
          var d = a.updateQueue;
          var e = null;
          null === d && (d = a.updateQueue = bf(a.memoizedState));
        } else
          (d = a.updateQueue),
            (e = c.updateQueue),
            null === d
              ? null === e
                ? ((d = a.updateQueue = bf(a.memoizedState)),
                  (e = c.updateQueue = bf(c.memoizedState)))
                : (d = a.updateQueue = cf(e))
              : null === e && (e = c.updateQueue = cf(d));
        null === e || d === e
          ? ef(d, b)
          : null === d.lastUpdate || null === e.lastUpdate
            ? (ef(d, b), ef(e, b))
            : (ef(d, b), (e.lastUpdate = b));
      }
      function gf(a, b) {
        var c = a.updateQueue;
        c = null === c ? (a.updateQueue = bf(a.memoizedState)) : hf(a, c);
        null === c.lastCapturedUpdate
          ? (c.firstCapturedUpdate = c.lastCapturedUpdate = b)
          : ((c.lastCapturedUpdate.next = b), (c.lastCapturedUpdate = b));
      }
      function hf(a, b) {
        var c = a.alternate;
        null !== c && b === c.updateQueue && (b = a.updateQueue = cf(b));
        return b;
      }
      function jf(a, b, c, d, e, f) {
        switch (c.tag) {
          case 1:
            return (
              (a = c.payload), 'function' === typeof a ? a.call(f, d, e) : a
            );
          case 3:
            a.effectTag = (a.effectTag & -1025) | 64;
          case 0:
            a = c.payload;
            e = 'function' === typeof a ? a.call(f, d, e) : a;
            if (null === e || void 0 === e) break;
            return n({}, d, e);
          case 2:
            af = !0;
        }
        return d;
      }
      function kf(a, b, c, d, e) {
        af = !1;
        b = hf(a, b);
        for (
          var f = b.baseState, g = null, h = 0, k = b.firstUpdate, l = f;
          null !== k;

        ) {
          var m = k.expirationTime;
          if (m > e) {
            if ((null === g && ((g = k), (f = l)), 0 === h || h > m)) h = m;
          } else
            (l = jf(a, b, k, l, c, d)),
              null !== k.callback &&
                ((a.effectTag |= 32),
                (k.nextEffect = null),
                null === b.lastEffect
                  ? (b.firstEffect = b.lastEffect = k)
                  : ((b.lastEffect.nextEffect = k), (b.lastEffect = k)));
          k = k.next;
        }
        m = null;
        for (k = b.firstCapturedUpdate; null !== k; ) {
          var r = k.expirationTime;
          if (r > e) {
            if (
              (null === m && ((m = k), null === g && (f = l)), 0 === h || h > r)
            )
              h = r;
          } else
            (l = jf(a, b, k, l, c, d)),
              null !== k.callback &&
                ((a.effectTag |= 32),
                (k.nextEffect = null),
                null === b.lastCapturedEffect
                  ? (b.firstCapturedEffect = b.lastCapturedEffect = k)
                  : ((b.lastCapturedEffect.nextEffect = k),
                    (b.lastCapturedEffect = k)));
          k = k.next;
        }
        null === g && (b.lastUpdate = null);
        null === m ? (b.lastCapturedUpdate = null) : (a.effectTag |= 32);
        null === g && null === m && (f = l);
        b.baseState = f;
        b.firstUpdate = g;
        b.firstCapturedUpdate = m;
        a.expirationTime = h;
        a.memoizedState = l;
      }
      function lf(a, b, c) {
        null !== b.firstCapturedUpdate &&
          (null !== b.lastUpdate &&
            ((b.lastUpdate.next = b.firstCapturedUpdate),
            (b.lastUpdate = b.lastCapturedUpdate)),
          (b.firstCapturedUpdate = b.lastCapturedUpdate = null));
        mf(b.firstEffect, c);
        b.firstEffect = b.lastEffect = null;
        mf(b.firstCapturedEffect, c);
        b.firstCapturedEffect = b.lastCapturedEffect = null;
      }
      function mf(a, b) {
        for (; null !== a; ) {
          var c = a.callback;
          if (null !== c) {
            a.callback = null;
            var d = b;
            'function' !== typeof c ? t('191', c) : void 0;
            c.call(d);
          }
          a = a.nextEffect;
        }
      }
      function nf(a, b) {
        return { value: a, source: b, stack: mc(b) };
      }
      var of = { current: null },
        pf = null,
        qf = null,
        rf = null;
      function sf(a, b) {
        var c = a.type._context;
        H(of, c._currentValue, a);
        c._currentValue = b;
      }
      function tf(a) {
        var b = of.current;
        G(of, a);
        a.type._context._currentValue = b;
      }
      function uf(a) {
        pf = a;
        rf = qf = null;
        a.firstContextDependency = null;
      }
      function vf(a, b) {
        if (rf !== a && !1 !== b && 0 !== b) {
          if ('number' !== typeof b || 1073741823 === b)
            (rf = a), (b = 1073741823);
          b = { context: a, observedBits: b, next: null };
          null === qf
            ? (null === pf ? t('277') : void 0,
              (pf.firstContextDependency = qf = b))
            : (qf = qf.next = b);
        }
        return a._currentValue;
      }
      var wf = {},
        L = { current: wf },
        xf = { current: wf },
        yf = { current: wf };
      function zf(a) {
        a === wf ? t('174') : void 0;
        return a;
      }
      function Af(a, b) {
        H(yf, b, a);
        H(xf, a, a);
        H(L, wf, a);
        var c = b.nodeType;
        switch (c) {
          case 9:
          case 11:
            b = (b = b.documentElement) ? b.namespaceURI : le(null, '');
            break;
          default:
            (c = 8 === c ? b.parentNode : b),
              (b = c.namespaceURI || null),
              (c = c.tagName),
              (b = le(b, c));
        }
        G(L, a);
        H(L, b, a);
      }
      function Bf(a) {
        G(L, a);
        G(xf, a);
        G(yf, a);
      }
      function Cf(a) {
        zf(yf.current);
        var b = zf(L.current);
        var c = le(b, a.type);
        b !== c && (H(xf, a, a), H(L, c, a));
      }
      function Df(a) {
        xf.current === a && (G(L, a), G(xf, a));
      }
      var Ef = new aa.Component().refs;
      function Ff(a, b, c, d) {
        b = a.memoizedState;
        c = c(d, b);
        c = null === c || void 0 === c ? b : n({}, b, c);
        a.memoizedState = c;
        d = a.updateQueue;
        null !== d && 0 === a.expirationTime && (d.baseState = c);
      }
      var Jf = {
        isMounted: function(a) {
          return (a = a._reactInternalFiber) ? 2 === jd(a) : !1;
        },
        enqueueSetState: function(a, b, c) {
          a = a._reactInternalFiber;
          var d = Gf();
          d = Hf(d, a);
          var e = df(d);
          e.payload = b;
          void 0 !== c && null !== c && (e.callback = c);
          ff(a, e);
          If(a, d);
        },
        enqueueReplaceState: function(a, b, c) {
          a = a._reactInternalFiber;
          var d = Gf();
          d = Hf(d, a);
          var e = df(d);
          e.tag = 1;
          e.payload = b;
          void 0 !== c && null !== c && (e.callback = c);
          ff(a, e);
          If(a, d);
        },
        enqueueForceUpdate: function(a, b) {
          a = a._reactInternalFiber;
          var c = Gf();
          c = Hf(c, a);
          var d = df(c);
          d.tag = 2;
          void 0 !== b && null !== b && (d.callback = b);
          ff(a, d);
          If(a, c);
        }
      };
      function Kf(a, b, c, d, e, f, g) {
        a = a.stateNode;
        return 'function' === typeof a.shouldComponentUpdate
          ? a.shouldComponentUpdate(d, f, g)
          : b.prototype && b.prototype.isPureReactComponent
            ? !id(c, d) || !id(e, f)
            : !0;
      }
      function Lf(a, b, c, d) {
        a = b.state;
        'function' === typeof b.componentWillReceiveProps &&
          b.componentWillReceiveProps(c, d);
        'function' === typeof b.UNSAFE_componentWillReceiveProps &&
          b.UNSAFE_componentWillReceiveProps(c, d);
        b.state !== a && Jf.enqueueReplaceState(b, b.state, null);
      }
      function Mf(a, b, c, d) {
        var e = a.stateNode,
          f = K(b) ? Ge : I.current;
        e.props = c;
        e.state = a.memoizedState;
        e.refs = Ef;
        e.context = He(a, f);
        f = a.updateQueue;
        null !== f && (kf(a, f, c, e, d), (e.state = a.memoizedState));
        f = b.getDerivedStateFromProps;
        'function' === typeof f &&
          (Ff(a, b, f, c), (e.state = a.memoizedState));
        'function' === typeof b.getDerivedStateFromProps ||
          'function' === typeof e.getSnapshotBeforeUpdate ||
          ('function' !== typeof e.UNSAFE_componentWillMount &&
            'function' !== typeof e.componentWillMount) ||
          ((b = e.state),
          'function' === typeof e.componentWillMount && e.componentWillMount(),
          'function' === typeof e.UNSAFE_componentWillMount &&
            e.UNSAFE_componentWillMount(),
          b !== e.state && Jf.enqueueReplaceState(e, e.state, null),
          (f = a.updateQueue),
          null !== f && (kf(a, f, c, e, d), (e.state = a.memoizedState)));
        'function' === typeof e.componentDidMount && (a.effectTag |= 4);
      }
      var Nf = Array.isArray;
      function Of(a, b, c) {
        a = c.ref;
        if (null !== a && 'function' !== typeof a && 'object' !== typeof a) {
          if (c._owner) {
            c = c._owner;
            var d = void 0;
            c &&
              (2 !== c.tag && 3 !== c.tag ? t('110') : void 0,
              (d = c.stateNode));
            d ? void 0 : t('147', a);
            var e = '' + a;
            if (
              null !== b &&
              null !== b.ref &&
              'function' === typeof b.ref &&
              b.ref._stringRef === e
            )
              return b.ref;
            b = function(a) {
              var b = d.refs;
              b === Ef && (b = d.refs = {});
              null === a ? delete b[e] : (b[e] = a);
            };
            b._stringRef = e;
            return b;
          }
          'string' !== typeof a ? t('284') : void 0;
          c._owner ? void 0 : t('254', a);
        }
        return a;
      }
      function Pf(a, b) {
        'textarea' !== a.type &&
          t(
            '31',
            '[object Object]' === Object.prototype.toString.call(b)
              ? 'object with keys {' + Object.keys(b).join(', ') + '}'
              : b,
            ''
          );
      }
      function Qf(a) {
        function b(b, c) {
          if (a) {
            var d = b.lastEffect;
            null !== d
              ? ((d.nextEffect = c), (b.lastEffect = c))
              : (b.firstEffect = b.lastEffect = c);
            c.nextEffect = null;
            c.effectTag = 8;
          }
        }
        function c(c, d) {
          if (!a) return null;
          for (; null !== d; ) b(c, d), (d = d.sibling);
          return null;
        }
        function d(a, b) {
          for (a = new Map(); null !== b; )
            null !== b.key ? a.set(b.key, b) : a.set(b.index, b),
              (b = b.sibling);
          return a;
        }
        function e(a, b, c) {
          a = Ue(a, b, c);
          a.index = 0;
          a.sibling = null;
          return a;
        }
        function f(b, c, d) {
          b.index = d;
          if (!a) return c;
          d = b.alternate;
          if (null !== d)
            return (d = d.index), d < c ? ((b.effectTag = 2), c) : d;
          b.effectTag = 2;
          return c;
        }
        function g(b) {
          a && null === b.alternate && (b.effectTag = 2);
          return b;
        }
        function h(a, b, c, d) {
          if (null === b || 8 !== b.tag)
            return (b = Xe(c, a.mode, d)), (b.return = a), b;
          b = e(b, c, d);
          b.return = a;
          return b;
        }
        function k(a, b, c, d) {
          if (null !== b && b.type === c.type)
            return (
              (d = e(b, c.props, d)), (d.ref = Of(a, b, c)), (d.return = a), d
            );
          d = Ve(c, a.mode, d);
          d.ref = Of(a, b, c);
          d.return = a;
          return d;
        }
        function l(a, b, c, d) {
          if (
            null === b ||
            6 !== b.tag ||
            b.stateNode.containerInfo !== c.containerInfo ||
            b.stateNode.implementation !== c.implementation
          )
            return (b = Ye(c, a.mode, d)), (b.return = a), b;
          b = e(b, c.children || [], d);
          b.return = a;
          return b;
        }
        function m(a, b, c, d, f) {
          if (null === b || 9 !== b.tag)
            return (b = We(c, a.mode, d, f)), (b.return = a), b;
          b = e(b, c, d);
          b.return = a;
          return b;
        }
        function r(a, b, c) {
          if ('string' === typeof b || 'number' === typeof b)
            return (b = Xe('' + b, a.mode, c)), (b.return = a), b;
          if ('object' === typeof b && null !== b) {
            switch (b.$$typeof) {
              case $b:
                return (
                  (c = Ve(b, a.mode, c)),
                  (c.ref = Of(a, null, b)),
                  (c.return = a),
                  c
                );
              case ac:
                return (b = Ye(b, a.mode, c)), (b.return = a), b;
            }
            if (Nf(b) || kc(b))
              return (b = We(b, a.mode, c, null)), (b.return = a), b;
            Pf(a, b);
          }
          return null;
        }
        function A(a, b, c, d) {
          var e = null !== b ? b.key : null;
          if ('string' === typeof c || 'number' === typeof c)
            return null !== e ? null : h(a, b, '' + c, d);
          if ('object' === typeof c && null !== c) {
            switch (c.$$typeof) {
              case $b:
                return c.key === e
                  ? c.type === bc
                    ? m(a, b, c.props.children, d, e)
                    : k(a, b, c, d)
                  : null;
              case ac:
                return c.key === e ? l(a, b, c, d) : null;
            }
            if (Nf(c) || kc(c)) return null !== e ? null : m(a, b, c, d, null);
            Pf(a, c);
          }
          return null;
        }
        function S(a, b, c, d, e) {
          if ('string' === typeof d || 'number' === typeof d)
            return (a = a.get(c) || null), h(b, a, '' + d, e);
          if ('object' === typeof d && null !== d) {
            switch (d.$$typeof) {
              case $b:
                return (
                  (a = a.get(null === d.key ? c : d.key) || null),
                  d.type === bc
                    ? m(b, a, d.props.children, e, d.key)
                    : k(b, a, d, e)
                );
              case ac:
                return (
                  (a = a.get(null === d.key ? c : d.key) || null), l(b, a, d, e)
                );
            }
            if (Nf(d) || kc(d))
              return (a = a.get(c) || null), m(b, a, d, e, null);
            Pf(b, d);
          }
          return null;
        }
        function B(e, g, h, k) {
          for (
            var l = null, m = null, p = g, u = (g = 0), q = null;
            null !== p && u < h.length;
            u++
          ) {
            p.index > u ? ((q = p), (p = null)) : (q = p.sibling);
            var v = A(e, p, h[u], k);
            if (null === v) {
              null === p && (p = q);
              break;
            }
            a && p && null === v.alternate && b(e, p);
            g = f(v, g, u);
            null === m ? (l = v) : (m.sibling = v);
            m = v;
            p = q;
          }
          if (u === h.length) return c(e, p), l;
          if (null === p) {
            for (; u < h.length; u++)
              if ((p = r(e, h[u], k)))
                (g = f(p, g, u)),
                  null === m ? (l = p) : (m.sibling = p),
                  (m = p);
            return l;
          }
          for (p = d(e, p); u < h.length; u++)
            if ((q = S(p, e, u, h[u], k)))
              a && null !== q.alternate && p.delete(null === q.key ? u : q.key),
                (g = f(q, g, u)),
                null === m ? (l = q) : (m.sibling = q),
                (m = q);
          a &&
            p.forEach(function(a) {
              return b(e, a);
            });
          return l;
        }
        function P(e, g, h, k) {
          var l = kc(h);
          'function' !== typeof l ? t('150') : void 0;
          h = l.call(h);
          null == h ? t('151') : void 0;
          for (
            var m = (l = null), p = g, u = (g = 0), q = null, v = h.next();
            null !== p && !v.done;
            u++, v = h.next()
          ) {
            p.index > u ? ((q = p), (p = null)) : (q = p.sibling);
            var x = A(e, p, v.value, k);
            if (null === x) {
              p || (p = q);
              break;
            }
            a && p && null === x.alternate && b(e, p);
            g = f(x, g, u);
            null === m ? (l = x) : (m.sibling = x);
            m = x;
            p = q;
          }
          if (v.done) return c(e, p), l;
          if (null === p) {
            for (; !v.done; u++, v = h.next())
              (v = r(e, v.value, k)),
                null !== v &&
                  ((g = f(v, g, u)),
                  null === m ? (l = v) : (m.sibling = v),
                  (m = v));
            return l;
          }
          for (p = d(e, p); !v.done; u++, v = h.next())
            (v = S(p, e, u, v.value, k)),
              null !== v &&
                (a &&
                  null !== v.alternate &&
                  p.delete(null === v.key ? u : v.key),
                (g = f(v, g, u)),
                null === m ? (l = v) : (m.sibling = v),
                (m = v));
          a &&
            p.forEach(function(a) {
              return b(e, a);
            });
          return l;
        }
        return function(a, d, f, h) {
          var k =
            'object' === typeof f &&
            null !== f &&
            f.type === bc &&
            null === f.key;
          k && (f = f.props.children);
          var l = 'object' === typeof f && null !== f;
          if (l)
            switch (f.$$typeof) {
              case $b:
                a: {
                  l = f.key;
                  for (k = d; null !== k; ) {
                    if (k.key === l)
                      if (9 === k.tag ? f.type === bc : k.type === f.type) {
                        c(a, k.sibling);
                        d = e(k, f.type === bc ? f.props.children : f.props, h);
                        d.ref = Of(a, k, f);
                        d.return = a;
                        a = d;
                        break a;
                      } else {
                        c(a, k);
                        break;
                      }
                    else b(a, k);
                    k = k.sibling;
                  }
                  f.type === bc
                    ? ((d = We(f.props.children, a.mode, h, f.key)),
                      (d.return = a),
                      (a = d))
                    : ((h = Ve(f, a.mode, h)),
                      (h.ref = Of(a, d, f)),
                      (h.return = a),
                      (a = h));
                }
                return g(a);
              case ac:
                a: {
                  for (k = f.key; null !== d; ) {
                    if (d.key === k)
                      if (
                        6 === d.tag &&
                        d.stateNode.containerInfo === f.containerInfo &&
                        d.stateNode.implementation === f.implementation
                      ) {
                        c(a, d.sibling);
                        d = e(d, f.children || [], h);
                        d.return = a;
                        a = d;
                        break a;
                      } else {
                        c(a, d);
                        break;
                      }
                    else b(a, d);
                    d = d.sibling;
                  }
                  d = Ye(f, a.mode, h);
                  d.return = a;
                  a = d;
                }
                return g(a);
            }
          if ('string' === typeof f || 'number' === typeof f)
            return (
              (f = '' + f),
              null !== d && 8 === d.tag
                ? (c(a, d.sibling), (d = e(d, f, h)), (d.return = a), (a = d))
                : (c(a, d), (d = Xe(f, a.mode, h)), (d.return = a), (a = d)),
              g(a)
            );
          if (Nf(f)) return B(a, d, f, h);
          if (kc(f)) return P(a, d, f, h);
          l && Pf(a, f);
          if ('undefined' === typeof f && !k)
            switch (a.tag) {
              case 2:
              case 3:
              case 0:
                (h = a.type), t('152', h.displayName || h.name || 'Component');
            }
          return c(a, d);
        };
      }
      var Rf = Qf(!0),
        Sf = Qf(!1),
        Tf = null,
        Uf = null,
        Vf = !1;
      function Wf(a, b) {
        var c = new Se(7, null, null, 0);
        c.type = 'DELETED';
        c.stateNode = b;
        c.return = a;
        c.effectTag = 8;
        null !== a.lastEffect
          ? ((a.lastEffect.nextEffect = c), (a.lastEffect = c))
          : (a.firstEffect = a.lastEffect = c);
      }
      function Xf(a, b) {
        switch (a.tag) {
          case 7:
            var c = a.type;
            b =
              1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase()
                ? null
                : b;
            return null !== b ? ((a.stateNode = b), !0) : !1;
          case 8:
            return (
              (b = '' === a.pendingProps || 3 !== b.nodeType ? null : b),
              null !== b ? ((a.stateNode = b), !0) : !1
            );
          default:
            return !1;
        }
      }
      function Yf(a) {
        if (Vf) {
          var b = Uf;
          if (b) {
            var c = b;
            if (!Xf(a, b)) {
              b = Be(c);
              if (!b || !Xf(a, b)) {
                a.effectTag |= 2;
                Vf = !1;
                Tf = a;
                return;
              }
              Wf(Tf, c);
            }
            Tf = a;
            Uf = Ce(b);
          } else (a.effectTag |= 2), (Vf = !1), (Tf = a);
        }
      }
      function Zf(a) {
        for (a = a.return; null !== a && 7 !== a.tag && 5 !== a.tag; )
          a = a.return;
        Tf = a;
      }
      function $f(a) {
        if (a !== Tf) return !1;
        if (!Vf) return Zf(a), (Vf = !0), !1;
        var b = a.type;
        if (
          7 !== a.tag ||
          ('head' !== b && 'body' !== b && !Ae(b, a.memoizedProps))
        )
          for (b = Uf; b; ) Wf(a, b), (b = Be(b));
        Zf(a);
        Uf = Tf ? Be(a.stateNode) : null;
        return !0;
      }
      function ag() {
        Uf = Tf = null;
        Vf = !1;
      }
      function bg(a) {
        switch (a._reactStatus) {
          case 1:
            return a._reactResult;
          case 2:
            throw a._reactResult;
          case 0:
            throw a;
          default:
            throw ((a._reactStatus = 0),
            a.then(
              function(b) {
                if (0 === a._reactStatus) {
                  a._reactStatus = 1;
                  if ('object' === typeof b && null !== b) {
                    var c = b.default;
                    b = void 0 !== c && null !== c ? c : b;
                  }
                  a._reactResult = b;
                }
              },
              function(b) {
                0 === a._reactStatus &&
                  ((a._reactStatus = 2), (a._reactResult = b));
              }
            ),
            a);
        }
      }
      var cg = Yb.ReactCurrentOwner;
      function M(a, b, c, d) {
        b.child = null === a ? Sf(b, null, c, d) : Rf(b, a.child, c, d);
      }
      function dg(a, b, c, d, e) {
        c = c.render;
        var f = b.ref;
        if (
          !J.current &&
          b.memoizedProps === d &&
          f === (null !== a ? a.ref : null)
        )
          return eg(a, b, e);
        c = c(d, f);
        M(a, b, c, e);
        b.memoizedProps = d;
        return b.child;
      }
      function fg(a, b) {
        var c = b.ref;
        if ((null === a && null !== c) || (null !== a && a.ref !== c))
          b.effectTag |= 128;
      }
      function gg(a, b, c, d, e) {
        var f = K(c) ? Ge : I.current;
        f = He(b, f);
        uf(b, e);
        c = c(d, f);
        b.effectTag |= 1;
        M(a, b, c, e);
        b.memoizedProps = d;
        return b.child;
      }
      function hg(a, b, c, d, e) {
        if (K(c)) {
          var f = !0;
          Me(b);
        } else f = !1;
        uf(b, e);
        if (null === a)
          if (null === b.stateNode) {
            var g = K(c) ? Ge : I.current,
              h = c.contextTypes,
              k = null !== h && void 0 !== h;
            h = k ? He(b, g) : Fe;
            var l = new c(d, h);
            b.memoizedState =
              null !== l.state && void 0 !== l.state ? l.state : null;
            l.updater = Jf;
            b.stateNode = l;
            l._reactInternalFiber = b;
            k &&
              ((k = b.stateNode),
              (k.__reactInternalMemoizedUnmaskedChildContext = g),
              (k.__reactInternalMemoizedMaskedChildContext = h));
            Mf(b, c, d, e);
            d = !0;
          } else {
            g = b.stateNode;
            h = b.memoizedProps;
            g.props = h;
            var m = g.context;
            k = K(c) ? Ge : I.current;
            k = He(b, k);
            var r = c.getDerivedStateFromProps;
            (l =
              'function' === typeof r ||
              'function' === typeof g.getSnapshotBeforeUpdate) ||
              ('function' !== typeof g.UNSAFE_componentWillReceiveProps &&
                'function' !== typeof g.componentWillReceiveProps) ||
              ((h !== d || m !== k) && Lf(b, g, d, k));
            af = !1;
            var A = b.memoizedState;
            m = g.state = A;
            var S = b.updateQueue;
            null !== S && (kf(b, S, d, g, e), (m = b.memoizedState));
            h !== d || A !== m || J.current || af
              ? ('function' === typeof r &&
                  (Ff(b, c, r, d), (m = b.memoizedState)),
                (h = af || Kf(b, c, h, d, A, m, k))
                  ? (l ||
                      ('function' !== typeof g.UNSAFE_componentWillMount &&
                        'function' !== typeof g.componentWillMount) ||
                      ('function' === typeof g.componentWillMount &&
                        g.componentWillMount(),
                      'function' === typeof g.UNSAFE_componentWillMount &&
                        g.UNSAFE_componentWillMount()),
                    'function' === typeof g.componentDidMount &&
                      (b.effectTag |= 4))
                  : ('function' === typeof g.componentDidMount &&
                      (b.effectTag |= 4),
                    (b.memoizedProps = d),
                    (b.memoizedState = m)),
                (g.props = d),
                (g.state = m),
                (g.context = k),
                (d = h))
              : ('function' === typeof g.componentDidMount &&
                  (b.effectTag |= 4),
                (d = !1));
          }
        else
          (g = b.stateNode),
            (h = b.memoizedProps),
            (g.props = h),
            (m = g.context),
            (k = K(c) ? Ge : I.current),
            (k = He(b, k)),
            (r = c.getDerivedStateFromProps),
            (l =
              'function' === typeof r ||
              'function' === typeof g.getSnapshotBeforeUpdate) ||
              ('function' !== typeof g.UNSAFE_componentWillReceiveProps &&
                'function' !== typeof g.componentWillReceiveProps) ||
              ((h !== d || m !== k) && Lf(b, g, d, k)),
            (af = !1),
            (m = b.memoizedState),
            (A = g.state = m),
            (S = b.updateQueue),
            null !== S && (kf(b, S, d, g, e), (A = b.memoizedState)),
            h !== d || m !== A || J.current || af
              ? ('function' === typeof r &&
                  (Ff(b, c, r, d), (A = b.memoizedState)),
                (r = af || Kf(b, c, h, d, m, A, k))
                  ? (l ||
                      ('function' !== typeof g.UNSAFE_componentWillUpdate &&
                        'function' !== typeof g.componentWillUpdate) ||
                      ('function' === typeof g.componentWillUpdate &&
                        g.componentWillUpdate(d, A, k),
                      'function' === typeof g.UNSAFE_componentWillUpdate &&
                        g.UNSAFE_componentWillUpdate(d, A, k)),
                    'function' === typeof g.componentDidUpdate &&
                      (b.effectTag |= 4),
                    'function' === typeof g.getSnapshotBeforeUpdate &&
                      (b.effectTag |= 256))
                  : ('function' !== typeof g.componentDidUpdate ||
                      (h === a.memoizedProps && m === a.memoizedState) ||
                      (b.effectTag |= 4),
                    'function' !== typeof g.getSnapshotBeforeUpdate ||
                      (h === a.memoizedProps && m === a.memoizedState) ||
                      (b.effectTag |= 256),
                    (b.memoizedProps = d),
                    (b.memoizedState = A)),
                (g.props = d),
                (g.state = A),
                (g.context = k),
                (d = r))
              : ('function' !== typeof g.componentDidUpdate ||
                  (h === a.memoizedProps && m === a.memoizedState) ||
                  (b.effectTag |= 4),
                'function' !== typeof g.getSnapshotBeforeUpdate ||
                  (h === a.memoizedProps && m === a.memoizedState) ||
                  (b.effectTag |= 256),
                (d = !1));
        return ig(a, b, c, d, f, e);
      }
      function ig(a, b, c, d, e, f) {
        fg(a, b);
        var g = 0 !== (b.effectTag & 64);
        if (!d && !g) return e && Ne(b, c, !1), eg(a, b, f);
        d = b.stateNode;
        cg.current = b;
        var h = g ? null : d.render();
        b.effectTag |= 1;
        null !== a && g && (M(a, b, null, f), (b.child = null));
        M(a, b, h, f);
        b.memoizedState = d.state;
        b.memoizedProps = d.props;
        e && Ne(b, c, !0);
        return b.child;
      }
      function jg(a) {
        var b = a.stateNode;
        b.pendingContext
          ? Ke(a, b.pendingContext, b.pendingContext !== b.context)
          : b.context && Ke(a, b.context, !1);
        Af(a, b.containerInfo);
      }
      function ng(a, b) {
        if (a && a.defaultProps) {
          b = n({}, b);
          a = a.defaultProps;
          for (var c in a) void 0 === b[c] && (b[c] = a[c]);
        }
        return b;
      }
      function og(a, b, c, d) {
        null !== a ? t('155') : void 0;
        var e = b.pendingProps;
        if (
          'object' === typeof c &&
          null !== c &&
          'function' === typeof c.then
        ) {
          c = bg(c);
          var f = c;
          f =
            'function' === typeof f
              ? Te(f)
                ? 3
                : 1
              : void 0 !== f && null !== f && f.$$typeof
                ? 14
                : 4;
          f = b.tag = f;
          var g = ng(c, e);
          switch (f) {
            case 1:
              return gg(a, b, c, g, d);
            case 3:
              return hg(a, b, c, g, d);
            case 14:
              return dg(a, b, c, g, d);
            default:
              t('283', c);
          }
        }
        f = He(b, I.current);
        uf(b, d);
        f = c(e, f);
        b.effectTag |= 1;
        if (
          'object' === typeof f &&
          null !== f &&
          'function' === typeof f.render &&
          void 0 === f.$$typeof
        ) {
          b.tag = 2;
          K(c) ? ((g = !0), Me(b)) : (g = !1);
          b.memoizedState =
            null !== f.state && void 0 !== f.state ? f.state : null;
          var h = c.getDerivedStateFromProps;
          'function' === typeof h && Ff(b, c, h, e);
          f.updater = Jf;
          b.stateNode = f;
          f._reactInternalFiber = b;
          Mf(b, c, e, d);
          return ig(a, b, c, !0, g, d);
        }
        b.tag = 0;
        M(a, b, f, d);
        b.memoizedProps = e;
        return b.child;
      }
      function eg(a, b, c) {
        null !== a && (b.firstContextDependency = a.firstContextDependency);
        var d = b.childExpirationTime;
        if (0 === d || d > c) return null;
        null !== a && b.child !== a.child ? t('153') : void 0;
        if (null !== b.child) {
          a = b.child;
          c = Ue(a, a.pendingProps, a.expirationTime);
          b.child = c;
          for (c.return = b; null !== a.sibling; )
            (a = a.sibling),
              (c = c.sibling = Ue(a, a.pendingProps, a.expirationTime)),
              (c.return = b);
          c.sibling = null;
        }
        return b.child;
      }
      function pg(a, b, c) {
        var d = b.expirationTime;
        if (!J.current && (0 === d || d > c)) {
          switch (b.tag) {
            case 5:
              jg(b);
              ag();
              break;
            case 7:
              Cf(b);
              break;
            case 2:
              K(b.type) && Me(b);
              break;
            case 3:
              K(b.type._reactResult) && Me(b);
              break;
            case 6:
              Af(b, b.stateNode.containerInfo);
              break;
            case 12:
              sf(b, b.memoizedProps.value);
          }
          return eg(a, b, c);
        }
        b.expirationTime = 0;
        switch (b.tag) {
          case 4:
            return og(a, b, b.type, c);
          case 0:
            return gg(a, b, b.type, b.pendingProps, c);
          case 1:
            var e = b.type._reactResult;
            d = b.pendingProps;
            a = gg(a, b, e, ng(e, d), c);
            b.memoizedProps = d;
            return a;
          case 2:
            return hg(a, b, b.type, b.pendingProps, c);
          case 3:
            return (
              (e = b.type._reactResult),
              (d = b.pendingProps),
              (a = hg(a, b, e, ng(e, d), c)),
              (b.memoizedProps = d),
              a
            );
          case 5:
            jg(b);
            d = b.updateQueue;
            null === d ? t('282') : void 0;
            e = b.memoizedState;
            e = null !== e ? e.element : null;
            kf(b, d, b.pendingProps, null, c);
            d = b.memoizedState.element;
            if (d === e) ag(), (b = eg(a, b, c));
            else {
              e = b.stateNode;
              if ((e = (null === a || null === a.child) && e.hydrate))
                (Uf = Ce(b.stateNode.containerInfo)), (Tf = b), (e = Vf = !0);
              e
                ? ((b.effectTag |= 2), (b.child = Sf(b, null, d, c)))
                : (M(a, b, d, c), ag());
              b = b.child;
            }
            return b;
          case 7:
            Cf(b);
            null === a && Yf(b);
            d = b.type;
            e = b.pendingProps;
            var f = null !== a ? a.memoizedProps : null,
              g = e.children;
            Ae(d, e)
              ? (g = null)
              : null !== f && Ae(d, f) && (b.effectTag |= 16);
            fg(a, b);
            1073741823 !== c && b.mode & 1 && e.hidden
              ? ((b.expirationTime = 1073741823),
                (b.memoizedProps = e),
                (b = null))
              : (M(a, b, g, c), (b.memoizedProps = e), (b = b.child));
            return b;
          case 8:
            return (
              null === a && Yf(b), (b.memoizedProps = b.pendingProps), null
            );
          case 16:
            return null;
          case 6:
            return (
              Af(b, b.stateNode.containerInfo),
              (d = b.pendingProps),
              null === a ? (b.child = Rf(b, null, d, c)) : M(a, b, d, c),
              (b.memoizedProps = d),
              b.child
            );
          case 13:
            return dg(a, b, b.type, b.pendingProps, c);
          case 14:
            return (
              (e = b.type._reactResult),
              (d = b.pendingProps),
              (a = dg(a, b, e, ng(e, d), c)),
              (b.memoizedProps = d),
              a
            );
          case 9:
            return (
              (d = b.pendingProps),
              M(a, b, d, c),
              (b.memoizedProps = d),
              b.child
            );
          case 10:
            return (
              (d = b.pendingProps.children),
              M(a, b, d, c),
              (b.memoizedProps = d),
              b.child
            );
          case 15:
            return (
              (d = b.pendingProps),
              M(a, b, d.children, c),
              (b.memoizedProps = d),
              b.child
            );
          case 12:
            a: {
              d = b.type._context;
              e = b.pendingProps;
              g = b.memoizedProps;
              f = e.value;
              b.memoizedProps = e;
              sf(b, f);
              if (null !== g) {
                var h = g.value;
                f =
                  (h === f && (0 !== h || 1 / h === 1 / f)) ||
                  (h !== h && f !== f)
                    ? 0
                    : ('function' === typeof d._calculateChangedBits
                        ? d._calculateChangedBits(h, f)
                        : 1073741823) | 0;
                if (0 === f) {
                  if (g.children === e.children && !J.current) {
                    b = eg(a, b, c);
                    break a;
                  }
                } else
                  for (
                    g = b.child, null !== g && (g.return = b);
                    null !== g;

                  ) {
                    h = g.firstContextDependency;
                    if (null !== h) {
                      do {
                        if (h.context === d && 0 !== (h.observedBits & f)) {
                          if (2 === g.tag || 3 === g.tag) {
                            var k = df(c);
                            k.tag = 2;
                            ff(g, k);
                          }
                          if (0 === g.expirationTime || g.expirationTime > c)
                            g.expirationTime = c;
                          k = g.alternate;
                          null !== k &&
                            (0 === k.expirationTime || k.expirationTime > c) &&
                            (k.expirationTime = c);
                          for (var l = g.return; null !== l; ) {
                            k = l.alternate;
                            if (
                              0 === l.childExpirationTime ||
                              l.childExpirationTime > c
                            )
                              (l.childExpirationTime = c),
                                null !== k &&
                                  (0 === k.childExpirationTime ||
                                    k.childExpirationTime > c) &&
                                  (k.childExpirationTime = c);
                            else if (
                              null !== k &&
                              (0 === k.childExpirationTime ||
                                k.childExpirationTime > c)
                            )
                              k.childExpirationTime = c;
                            else break;
                            l = l.return;
                          }
                        }
                        k = g.child;
                        h = h.next;
                      } while (null !== h);
                    } else
                      k =
                        12 === g.tag
                          ? g.type === b.type
                            ? null
                            : g.child
                          : g.child;
                    if (null !== k) k.return = g;
                    else
                      for (k = g; null !== k; ) {
                        if (k === b) {
                          k = null;
                          break;
                        }
                        g = k.sibling;
                        if (null !== g) {
                          g.return = k.return;
                          k = g;
                          break;
                        }
                        k = k.return;
                      }
                    g = k;
                  }
              }
              M(a, b, e.children, c);
              b = b.child;
            }
            return b;
          case 11:
            return (
              (f = b.type),
              (d = b.pendingProps),
              (e = d.children),
              uf(b, c),
              (f = vf(f, d.unstable_observedBits)),
              (e = e(f)),
              (b.effectTag |= 1),
              M(a, b, e, c),
              (b.memoizedProps = d),
              b.child
            );
          default:
            t('156');
        }
      }
      function qg(a) {
        a.effectTag |= 4;
      }
      var rg = void 0,
        sg = void 0,
        tg = void 0;
      rg = function() {};
      sg = function(a, b, c, d, e) {
        var f = a.memoizedProps;
        if (f !== d) {
          var g = b.stateNode;
          zf(L.current);
          a = null;
          switch (c) {
            case 'input':
              f = zc(g, f);
              d = zc(g, d);
              a = [];
              break;
            case 'option':
              f = de(g, f);
              d = de(g, d);
              a = [];
              break;
            case 'select':
              f = n({}, f, { value: void 0 });
              d = n({}, d, { value: void 0 });
              a = [];
              break;
            case 'textarea':
              f = fe(g, f);
              d = fe(g, d);
              a = [];
              break;
            default:
              'function' !== typeof f.onClick &&
                'function' === typeof d.onClick &&
                (g.onclick = we);
          }
          te(c, d);
          g = c = void 0;
          var h = null;
          for (c in f)
            if (!d.hasOwnProperty(c) && f.hasOwnProperty(c) && null != f[c])
              if ('style' === c) {
                var k = f[c];
                for (g in k)
                  k.hasOwnProperty(g) && (h || (h = {}), (h[g] = ''));
              } else
                'dangerouslySetInnerHTML' !== c &&
                  'children' !== c &&
                  'suppressContentEditableWarning' !== c &&
                  'suppressHydrationWarning' !== c &&
                  'autoFocus' !== c &&
                  (sa.hasOwnProperty(c)
                    ? a || (a = [])
                    : (a = a || []).push(c, null));
          for (c in d) {
            var l = d[c];
            k = null != f ? f[c] : void 0;
            if (d.hasOwnProperty(c) && l !== k && (null != l || null != k))
              if ('style' === c)
                if (k) {
                  for (g in k)
                    !k.hasOwnProperty(g) ||
                      (l && l.hasOwnProperty(g)) ||
                      (h || (h = {}), (h[g] = ''));
                  for (g in l)
                    l.hasOwnProperty(g) &&
                      k[g] !== l[g] &&
                      (h || (h = {}), (h[g] = l[g]));
                } else h || (a || (a = []), a.push(c, h)), (h = l);
              else
                'dangerouslySetInnerHTML' === c
                  ? ((l = l ? l.__html : void 0),
                    (k = k ? k.__html : void 0),
                    null != l && k !== l && (a = a || []).push(c, '' + l))
                  : 'children' === c
                    ? k === l ||
                      ('string' !== typeof l && 'number' !== typeof l) ||
                      (a = a || []).push(c, '' + l)
                    : 'suppressContentEditableWarning' !== c &&
                      'suppressHydrationWarning' !== c &&
                      (sa.hasOwnProperty(c)
                        ? (null != l && ve(e, c), a || k === l || (a = []))
                        : (a = a || []).push(c, l));
          }
          h && (a = a || []).push('style', h);
          e = a;
          (b.updateQueue = e) && qg(b);
        }
      };
      tg = function(a, b, c, d) {
        c !== d && qg(b);
      };
      function ug(a, b) {
        var c = b.source,
          d = b.stack;
        null === d && null !== c && (d = mc(c));
        null !== c && lc(c.type);
        b = b.value;
        null !== a && 2 === a.tag && lc(a.type);
        try {
          console.error(b);
        } catch (e) {
          setTimeout(function() {
            throw e;
          });
        }
      }
      function vg(a) {
        var b = a.ref;
        if (null !== b)
          if ('function' === typeof b)
            try {
              b(null);
            } catch (c) {
              wg(a, c);
            }
          else b.current = null;
      }
      function xg(a) {
        'function' === typeof Pe && Pe(a);
        switch (a.tag) {
          case 2:
          case 3:
            vg(a);
            var b = a.stateNode;
            if ('function' === typeof b.componentWillUnmount)
              try {
                (b.props = a.memoizedProps),
                  (b.state = a.memoizedState),
                  b.componentWillUnmount();
              } catch (c) {
                wg(a, c);
              }
            break;
          case 7:
            vg(a);
            break;
          case 6:
            yg(a);
        }
      }
      function zg(a) {
        return 7 === a.tag || 5 === a.tag || 6 === a.tag;
      }
      function Ag(a) {
        a: {
          for (var b = a.return; null !== b; ) {
            if (zg(b)) {
              var c = b;
              break a;
            }
            b = b.return;
          }
          t('160');
          c = void 0;
        }
        var d = (b = void 0);
        switch (c.tag) {
          case 7:
            b = c.stateNode;
            d = !1;
            break;
          case 5:
            b = c.stateNode.containerInfo;
            d = !0;
            break;
          case 6:
            b = c.stateNode.containerInfo;
            d = !0;
            break;
          default:
            t('161');
        }
        c.effectTag & 16 && (oe(b, ''), (c.effectTag &= -17));
        a: b: for (c = a; ; ) {
          for (; null === c.sibling; ) {
            if (null === c.return || zg(c.return)) {
              c = null;
              break a;
            }
            c = c.return;
          }
          c.sibling.return = c.return;
          for (c = c.sibling; 7 !== c.tag && 8 !== c.tag; ) {
            if (c.effectTag & 2) continue b;
            if (null === c.child || 6 === c.tag) continue b;
            else (c.child.return = c), (c = c.child);
          }
          if (!(c.effectTag & 2)) {
            c = c.stateNode;
            break a;
          }
        }
        for (var e = a; ; ) {
          if (7 === e.tag || 8 === e.tag)
            if (c)
              if (d) {
                var f = b,
                  g = e.stateNode,
                  h = c;
                8 === f.nodeType
                  ? f.parentNode.insertBefore(g, h)
                  : f.insertBefore(g, h);
              } else b.insertBefore(e.stateNode, c);
            else
              d
                ? ((f = b),
                  (g = e.stateNode),
                  8 === f.nodeType
                    ? ((h = f.parentNode), h.insertBefore(g, f))
                    : ((h = f), h.appendChild(g)),
                  null === h.onclick && (h.onclick = we))
                : b.appendChild(e.stateNode);
          else if (6 !== e.tag && null !== e.child) {
            e.child.return = e;
            e = e.child;
            continue;
          }
          if (e === a) break;
          for (; null === e.sibling; ) {
            if (null === e.return || e.return === a) return;
            e = e.return;
          }
          e.sibling.return = e.return;
          e = e.sibling;
        }
      }
      function yg(a) {
        for (var b = a, c = !1, d = void 0, e = void 0; ; ) {
          if (!c) {
            c = b.return;
            a: for (;;) {
              null === c ? t('160') : void 0;
              switch (c.tag) {
                case 7:
                  d = c.stateNode;
                  e = !1;
                  break a;
                case 5:
                  d = c.stateNode.containerInfo;
                  e = !0;
                  break a;
                case 6:
                  d = c.stateNode.containerInfo;
                  e = !0;
                  break a;
              }
              c = c.return;
            }
            c = !0;
          }
          if (7 === b.tag || 8 === b.tag) {
            a: for (var f = b, g = f; ; )
              if ((xg(g), null !== g.child && 6 !== g.tag))
                (g.child.return = g), (g = g.child);
              else {
                if (g === f) break;
                for (; null === g.sibling; ) {
                  if (null === g.return || g.return === f) break a;
                  g = g.return;
                }
                g.sibling.return = g.return;
                g = g.sibling;
              }
            e
              ? ((f = d),
                (g = b.stateNode),
                8 === f.nodeType
                  ? f.parentNode.removeChild(g)
                  : f.removeChild(g))
              : d.removeChild(b.stateNode);
          } else if (
            (6 === b.tag ? ((d = b.stateNode.containerInfo), (e = !0)) : xg(b),
            null !== b.child)
          ) {
            b.child.return = b;
            b = b.child;
            continue;
          }
          if (b === a) break;
          for (; null === b.sibling; ) {
            if (null === b.return || b.return === a) return;
            b = b.return;
            6 === b.tag && (c = !1);
          }
          b.sibling.return = b.return;
          b = b.sibling;
        }
      }
      function Bg(a, b) {
        switch (b.tag) {
          case 2:
          case 3:
            break;
          case 7:
            var c = b.stateNode;
            if (null != c) {
              var d = b.memoizedProps,
                e = null !== a ? a.memoizedProps : d;
              a = b.type;
              var f = b.updateQueue;
              b.updateQueue = null;
              if (null !== f) {
                c[Ja] = d;
                'input' === a &&
                  'radio' === d.type &&
                  null != d.name &&
                  Cc(c, d);
                ue(a, e);
                b = ue(a, d);
                for (e = 0; e < f.length; e += 2) {
                  var g = f[e],
                    h = f[e + 1];
                  'style' === g
                    ? re(c, h)
                    : 'dangerouslySetInnerHTML' === g
                      ? ne(c, h)
                      : 'children' === g
                        ? oe(c, h)
                        : xc(c, g, h, b);
                }
                switch (a) {
                  case 'input':
                    Dc(c, d);
                    break;
                  case 'textarea':
                    he(c, d);
                    break;
                  case 'select':
                    (a = c._wrapperState.wasMultiple),
                      (c._wrapperState.wasMultiple = !!d.multiple),
                      (f = d.value),
                      null != f
                        ? ee(c, !!d.multiple, f, !1)
                        : a !== !!d.multiple &&
                          (null != d.defaultValue
                            ? ee(c, !!d.multiple, d.defaultValue, !0)
                            : ee(c, !!d.multiple, d.multiple ? [] : '', !1));
                }
              }
            }
            break;
          case 8:
            null === b.stateNode ? t('162') : void 0;
            b.stateNode.nodeValue = b.memoizedProps;
            break;
          case 5:
            break;
          case 15:
            break;
          case 16:
            break;
          default:
            t('163');
        }
      }
      function Cg(a, b, c) {
        c = df(c);
        c.tag = 3;
        c.payload = { element: null };
        var d = b.value;
        c.callback = function() {
          Dg(d);
          ug(a, b);
        };
        return c;
      }
      function Eg(a, b, c) {
        c = df(c);
        c.tag = 3;
        var d = a.stateNode;
        null !== d &&
          'function' === typeof d.componentDidCatch &&
          (c.callback = function() {
            null === Fg ? (Fg = new Set([this])) : Fg.add(this);
            var c = b.value,
              d = b.stack;
            ug(a, b);
            this.componentDidCatch(c, { componentStack: null !== d ? d : '' });
          });
        return c;
      }
      function Gg(a) {
        switch (a.tag) {
          case 2:
            K(a.type) && Ie(a);
            var b = a.effectTag;
            return b & 1024 ? ((a.effectTag = (b & -1025) | 64), a) : null;
          case 3:
            return (
              K(a.type._reactResult) && Ie(a),
              (b = a.effectTag),
              b & 1024 ? ((a.effectTag = (b & -1025) | 64), a) : null
            );
          case 5:
            return (
              Bf(a),
              Je(a),
              (b = a.effectTag),
              0 !== (b & 64) ? t('285') : void 0,
              (a.effectTag = (b & -1025) | 64),
              a
            );
          case 7:
            return Df(a), null;
          case 16:
            return (
              (b = a.effectTag),
              b & 1024 ? ((a.effectTag = (b & -1025) | 64), a) : null
            );
          case 6:
            return Bf(a), null;
          case 12:
            return tf(a), null;
          default:
            return null;
        }
      }
      var Hg = { readContext: vf },
        Ig = Yb.ReactCurrentOwner,
        Jg = 0,
        Kg = 0,
        Lg = !1,
        N = null,
        Mg = null,
        O = 0,
        Ng = !1,
        Q = null,
        Og = !1,
        Fg = null;
      function Pg() {
        if (null !== N)
          for (var a = N.return; null !== a; ) {
            var b = a;
            switch (b.tag) {
              case 2:
                var c = b.type.childContextTypes;
                null !== c && void 0 !== c && Ie(b);
                break;
              case 3:
                c = b.type._reactResult.childContextTypes;
                null !== c && void 0 !== c && Ie(b);
                break;
              case 5:
                Bf(b);
                Je(b);
                break;
              case 7:
                Df(b);
                break;
              case 6:
                Bf(b);
                break;
              case 12:
                tf(b);
            }
            a = a.return;
          }
        Mg = null;
        O = 0;
        Ng = !1;
        N = null;
      }
      function Qg(a) {
        for (;;) {
          var b = a.alternate,
            c = a.return,
            d = a.sibling;
          if (0 === (a.effectTag & 512)) {
            var e = b;
            b = a;
            var f = b.pendingProps;
            switch (b.tag) {
              case 0:
              case 1:
                break;
              case 2:
                K(b.type) && Ie(b);
                break;
              case 3:
                K(b.type._reactResult) && Ie(b);
                break;
              case 5:
                Bf(b);
                Je(b);
                f = b.stateNode;
                f.pendingContext &&
                  ((f.context = f.pendingContext), (f.pendingContext = null));
                if (null === e || null === e.child) $f(b), (b.effectTag &= -3);
                rg(b);
                break;
              case 7:
                Df(b);
                var g = zf(yf.current),
                  h = b.type;
                if (null !== e && null != b.stateNode)
                  sg(e, b, h, f, g), e.ref !== b.ref && (b.effectTag |= 128);
                else if (f) {
                  var k = zf(L.current);
                  if ($f(b)) {
                    f = b;
                    e = f.stateNode;
                    var l = f.type,
                      m = f.memoizedProps,
                      r = g;
                    e[Ia] = f;
                    e[Ja] = m;
                    h = void 0;
                    g = l;
                    switch (g) {
                      case 'iframe':
                      case 'object':
                        F('load', e);
                        break;
                      case 'video':
                      case 'audio':
                        for (l = 0; l < fb.length; l++) F(fb[l], e);
                        break;
                      case 'source':
                        F('error', e);
                        break;
                      case 'img':
                      case 'image':
                      case 'link':
                        F('error', e);
                        F('load', e);
                        break;
                      case 'form':
                        F('reset', e);
                        F('submit', e);
                        break;
                      case 'details':
                        F('toggle', e);
                        break;
                      case 'input':
                        Bc(e, m);
                        F('invalid', e);
                        ve(r, 'onChange');
                        break;
                      case 'select':
                        e._wrapperState = { wasMultiple: !!m.multiple };
                        F('invalid', e);
                        ve(r, 'onChange');
                        break;
                      case 'textarea':
                        ge(e, m), F('invalid', e), ve(r, 'onChange');
                    }
                    te(g, m);
                    l = null;
                    for (h in m)
                      m.hasOwnProperty(h) &&
                        ((k = m[h]),
                        'children' === h
                          ? 'string' === typeof k
                            ? e.textContent !== k && (l = ['children', k])
                            : 'number' === typeof k &&
                              e.textContent !== '' + k &&
                              (l = ['children', '' + k])
                          : sa.hasOwnProperty(h) && null != k && ve(r, h));
                    switch (g) {
                      case 'input':
                        Wb(e);
                        Fc(e, m, !0);
                        break;
                      case 'textarea':
                        Wb(e);
                        ie(e, m);
                        break;
                      case 'select':
                      case 'option':
                        break;
                      default:
                        'function' === typeof m.onClick && (e.onclick = we);
                    }
                    h = l;
                    f.updateQueue = h;
                    f = null !== h ? !0 : !1;
                    f && qg(b);
                  } else {
                    m = b;
                    e = h;
                    r = f;
                    l = 9 === g.nodeType ? g : g.ownerDocument;
                    k === je.html && (k = ke(e));
                    k === je.html
                      ? 'script' === e
                        ? ((e = l.createElement('div')),
                          (e.innerHTML = '<script>\x3c/script>'),
                          (l = e.removeChild(e.firstChild)))
                        : 'string' === typeof r.is
                          ? (l = l.createElement(e, { is: r.is }))
                          : ((l = l.createElement(e)),
                            'select' === e && r.multiple && (l.multiple = !0))
                      : (l = l.createElementNS(k, e));
                    e = l;
                    e[Ia] = m;
                    e[Ja] = f;
                    a: for (m = e, r = b, l = r.child; null !== l; ) {
                      if (7 === l.tag || 8 === l.tag)
                        m.appendChild(l.stateNode);
                      else if (6 !== l.tag && null !== l.child) {
                        l.child.return = l;
                        l = l.child;
                        continue;
                      }
                      if (l === r) break;
                      for (; null === l.sibling; ) {
                        if (null === l.return || l.return === r) break a;
                        l = l.return;
                      }
                      l.sibling.return = l.return;
                      l = l.sibling;
                    }
                    r = e;
                    l = h;
                    m = f;
                    var A = g,
                      S = ue(l, m);
                    switch (l) {
                      case 'iframe':
                      case 'object':
                        F('load', r);
                        g = m;
                        break;
                      case 'video':
                      case 'audio':
                        for (g = 0; g < fb.length; g++) F(fb[g], r);
                        g = m;
                        break;
                      case 'source':
                        F('error', r);
                        g = m;
                        break;
                      case 'img':
                      case 'image':
                      case 'link':
                        F('error', r);
                        F('load', r);
                        g = m;
                        break;
                      case 'form':
                        F('reset', r);
                        F('submit', r);
                        g = m;
                        break;
                      case 'details':
                        F('toggle', r);
                        g = m;
                        break;
                      case 'input':
                        Bc(r, m);
                        g = zc(r, m);
                        F('invalid', r);
                        ve(A, 'onChange');
                        break;
                      case 'option':
                        g = de(r, m);
                        break;
                      case 'select':
                        r._wrapperState = { wasMultiple: !!m.multiple };
                        g = n({}, m, { value: void 0 });
                        F('invalid', r);
                        ve(A, 'onChange');
                        break;
                      case 'textarea':
                        ge(r, m);
                        g = fe(r, m);
                        F('invalid', r);
                        ve(A, 'onChange');
                        break;
                      default:
                        g = m;
                    }
                    te(l, g);
                    k = void 0;
                    var B = l,
                      P = r,
                      v = g;
                    for (k in v)
                      if (v.hasOwnProperty(k)) {
                        var p = v[k];
                        'style' === k
                          ? re(P, p)
                          : 'dangerouslySetInnerHTML' === k
                            ? ((p = p ? p.__html : void 0),
                              null != p && ne(P, p))
                            : 'children' === k
                              ? 'string' === typeof p
                                ? ('textarea' !== B || '' !== p) && oe(P, p)
                                : 'number' === typeof p && oe(P, '' + p)
                              : 'suppressContentEditableWarning' !== k &&
                                'suppressHydrationWarning' !== k &&
                                'autoFocus' !== k &&
                                (sa.hasOwnProperty(k)
                                  ? null != p && ve(A, k)
                                  : null != p && xc(P, k, p, S));
                      }
                    switch (l) {
                      case 'input':
                        Wb(r);
                        Fc(r, m, !1);
                        break;
                      case 'textarea':
                        Wb(r);
                        ie(r, m);
                        break;
                      case 'option':
                        null != m.value &&
                          r.setAttribute('value', '' + yc(m.value));
                        break;
                      case 'select':
                        g = r;
                        g.multiple = !!m.multiple;
                        r = m.value;
                        null != r
                          ? ee(g, !!m.multiple, r, !1)
                          : null != m.defaultValue &&
                            ee(g, !!m.multiple, m.defaultValue, !0);
                        break;
                      default:
                        'function' === typeof g.onClick && (r.onclick = we);
                    }
                    (f = ze(h, f)) && qg(b);
                    b.stateNode = e;
                  }
                  null !== b.ref && (b.effectTag |= 128);
                } else null === b.stateNode ? t('166') : void 0;
                break;
              case 8:
                e && null != b.stateNode
                  ? tg(e, b, e.memoizedProps, f)
                  : ('string' !== typeof f &&
                      (null === b.stateNode ? t('166') : void 0),
                    (e = zf(yf.current)),
                    zf(L.current),
                    $f(b)
                      ? ((f = b),
                        (h = f.stateNode),
                        (e = f.memoizedProps),
                        (h[Ia] = f),
                        (f = h.nodeValue !== e) && qg(b))
                      : ((h = b),
                        (f = (9 === e.nodeType
                          ? e
                          : e.ownerDocument
                        ).createTextNode(f)),
                        (f[Ia] = h),
                        (b.stateNode = f)));
                break;
              case 13:
              case 14:
                break;
              case 16:
                break;
              case 9:
                break;
              case 10:
                break;
              case 15:
                break;
              case 6:
                Bf(b);
                rg(b);
                break;
              case 12:
                tf(b);
                break;
              case 11:
                break;
              case 4:
                t('167');
              default:
                t('156');
            }
            b = N = null;
            f = a;
            if (1073741823 === O || 1073741823 !== f.childExpirationTime) {
              h = 0;
              for (e = f.child; null !== e; ) {
                g = e.expirationTime;
                m = e.childExpirationTime;
                if (0 === h || (0 !== g && g < h)) h = g;
                if (0 === h || (0 !== m && m < h)) h = m;
                e = e.sibling;
              }
              f.childExpirationTime = h;
            }
            if (null !== b) return b;
            null !== c &&
              0 === (c.effectTag & 512) &&
              (null === c.firstEffect && (c.firstEffect = a.firstEffect),
              null !== a.lastEffect &&
                (null !== c.lastEffect &&
                  (c.lastEffect.nextEffect = a.firstEffect),
                (c.lastEffect = a.lastEffect)),
              1 < a.effectTag &&
                (null !== c.lastEffect
                  ? (c.lastEffect.nextEffect = a)
                  : (c.firstEffect = a),
                (c.lastEffect = a)));
          } else {
            a = Gg(a, O);
            if (null !== a) return (a.effectTag &= 511), a;
            null !== c &&
              ((c.firstEffect = c.lastEffect = null), (c.effectTag |= 512));
          }
          if (null !== d) return d;
          if (null !== c) a = c;
          else break;
        }
        return null;
      }
      function Rg(a) {
        var b = pg(a.alternate, a, O);
        null === b && (b = Qg(a));
        Ig.current = null;
        return b;
      }
      function Sg(a, b, c) {
        Lg ? t('243') : void 0;
        Lg = !0;
        Ig.currentDispatcher = Hg;
        var d = a.nextExpirationTimeToWorkOn;
        if (d !== O || a !== Mg || null === N)
          Pg(),
            (Mg = a),
            (O = d),
            (N = Ue(Mg.current, null, O)),
            (a.pendingCommitExpirationTime = 0);
        var e = !1;
        do {
          try {
            if (b) for (; null !== N && !Tg(); ) N = Rg(N);
            else for (; null !== N; ) N = Rg(N);
          } catch (r) {
            if (null === N) (e = !0), Dg(r);
            else {
              null === N ? t('271') : void 0;
              var f = N,
                g = f.return;
              if (null === g) (e = !0), Dg(r);
              else {
                a: {
                  var h = g,
                    k = f,
                    l = r;
                  g = O;
                  k.effectTag |= 512;
                  k.firstEffect = k.lastEffect = null;
                  Ng = !0;
                  l = nf(l, k);
                  do {
                    switch (h.tag) {
                      case 5:
                        h.effectTag |= 1024;
                        h.expirationTime = g;
                        g = Cg(h, l, g);
                        gf(h, g);
                        break a;
                      case 2:
                      case 3:
                        k = l;
                        var m = h.stateNode;
                        if (
                          0 === (h.effectTag & 64) &&
                          null !== m &&
                          'function' === typeof m.componentDidCatch &&
                          (null === Fg || !Fg.has(m))
                        ) {
                          h.effectTag |= 1024;
                          h.expirationTime = g;
                          g = Eg(h, k, g);
                          gf(h, g);
                          break a;
                        }
                    }
                    h = h.return;
                  } while (null !== h);
                }
                N = Qg(f);
                continue;
              }
            }
          }
          break;
        } while (1);
        Lg = !1;
        rf = qf = pf = Ig.currentDispatcher = null;
        if (e) (Mg = null), (a.finishedWork = null);
        else if (null !== N) a.finishedWork = null;
        else {
          b = a.current.alternate;
          null === b ? t('281') : void 0;
          Mg = null;
          if (Ng) {
            e = a.latestPendingTime;
            f = a.latestSuspendedTime;
            g = a.latestPingedTime;
            if (
              (0 !== e && e > d) ||
              (0 !== f && f > d) ||
              (0 !== g && g > d)
            ) {
              a.didError = !1;
              c = a.latestPingedTime;
              0 !== c && c <= d && (a.latestPingedTime = 0);
              c = a.earliestPendingTime;
              b = a.latestPendingTime;
              c === d
                ? (a.earliestPendingTime =
                    b === d ? (a.latestPendingTime = 0) : b)
                : b === d && (a.latestPendingTime = c);
              c = a.earliestSuspendedTime;
              b = a.latestSuspendedTime;
              0 === c
                ? (a.earliestSuspendedTime = a.latestSuspendedTime = d)
                : c > d
                  ? (a.earliestSuspendedTime = d)
                  : b < d && (a.latestSuspendedTime = d);
              $e(d, a);
              a.expirationTime = a.expirationTime;
              return;
            }
            if (!a.didError && !c) {
              a.didError = !0;
              a.nextExpirationTimeToWorkOn = d;
              d = a.expirationTime = 1;
              a.expirationTime = d;
              return;
            }
          }
          a.pendingCommitExpirationTime = d;
          a.finishedWork = b;
        }
      }
      function wg(a, b) {
        var c;
        a: {
          Lg && !Og ? t('263') : void 0;
          for (c = a.return; null !== c; ) {
            switch (c.tag) {
              case 2:
              case 3:
                var d = c.stateNode;
                if (
                  'function' === typeof c.type.getDerivedStateFromCatch ||
                  ('function' === typeof d.componentDidCatch &&
                    (null === Fg || !Fg.has(d)))
                ) {
                  a = nf(b, a);
                  a = Eg(c, a, 1);
                  ff(c, a);
                  If(c, 1);
                  c = void 0;
                  break a;
                }
                break;
              case 5:
                a = nf(b, a);
                a = Cg(c, a, 1);
                ff(c, a);
                If(c, 1);
                c = void 0;
                break a;
            }
            c = c.return;
          }
          5 === a.tag &&
            ((c = nf(b, a)), (c = Cg(a, c, 1)), ff(a, c), If(a, 1));
          c = void 0;
        }
        return c;
      }
      function Hf(a, b) {
        0 !== Kg
          ? (a = Kg)
          : Lg
            ? (a = Og ? 1 : O)
            : b.mode & 1
              ? ((a = Ug
                  ? 2 + 10 * ((((a - 2 + 15) / 10) | 0) + 1)
                  : 2 + 25 * ((((a - 2 + 500) / 25) | 0) + 1)),
                null !== Mg && a === O && (a += 1))
              : (a = 1);
        Ug && (0 === Vg || a > Vg) && (Vg = a);
        return a;
      }
      function If(a, b) {
        a: {
          if (0 === a.expirationTime || a.expirationTime > b)
            a.expirationTime = b;
          var c = a.alternate;
          null !== c &&
            (0 === c.expirationTime || c.expirationTime > b) &&
            (c.expirationTime = b);
          var d = a.return;
          if (null === d && 5 === a.tag) a = a.stateNode;
          else {
            for (; null !== d; ) {
              c = d.alternate;
              if (0 === d.childExpirationTime || d.childExpirationTime > b)
                d.childExpirationTime = b;
              null !== c &&
                (0 === c.childExpirationTime || c.childExpirationTime > b) &&
                (c.childExpirationTime = b);
              if (null === d.return && 5 === d.tag) {
                a = d.stateNode;
                break a;
              }
              d = d.return;
            }
            a = null;
          }
        }
        if (null !== a) {
          !Lg && 0 !== O && b < O && Pg();
          Ze(a, b);
          if (!Lg || Og || Mg !== a) {
            b = a;
            a = a.expirationTime;
            if (null === b.nextScheduledRoot)
              (b.expirationTime = a),
                null === T
                  ? ((U = T = b), (b.nextScheduledRoot = b))
                  : ((T = T.nextScheduledRoot = b), (T.nextScheduledRoot = U));
            else if (((c = b.expirationTime), 0 === c || a < c))
              b.expirationTime = a;
            V ||
              (W
                ? Wg && ((Y = b), (Z = 1), Xg(b, 1, !0))
                : 1 === a
                  ? Yg(1, null)
                  : Zg(b, a));
          }
          $g > ah && (($g = 0), t('185'));
        }
      }
      function bh(a, b, c, d, e) {
        var f = Kg;
        Kg = 1;
        try {
          return a(b, c, d, e);
        } finally {
          Kg = f;
        }
      }
      var U = null,
        T = null,
        ch = 0,
        dh = void 0,
        V = !1,
        Y = null,
        Z = 0,
        Vg = 0,
        eh = !1,
        fh = !1,
        gh = null,
        hh = null,
        W = !1,
        Wg = !1,
        Ug = !1,
        ih = null,
        jh = ba.unstable_now(),
        kh = ((jh / 10) | 0) + 2,
        lh = kh,
        ah = 50,
        $g = 0,
        mh = null,
        nh = 1;
      function oh() {
        kh = (((ba.unstable_now() - jh) / 10) | 0) + 2;
      }
      function Zg(a, b) {
        if (0 !== ch) {
          if (b > ch) return;
          null !== dh && ba.unstable_cancelScheduledWork(dh);
        }
        ch = b;
        a = ba.unstable_now() - jh;
        dh = ba.unstable_scheduleWork(ph, { timeout: 10 * (b - 2) - a });
      }
      function Gf() {
        if (V) return lh;
        qh();
        if (0 === Z || 1073741823 === Z) oh(), (lh = kh);
        return lh;
      }
      function qh() {
        var a = 0,
          b = null;
        if (null !== T)
          for (var c = T, d = U; null !== d; ) {
            var e = d.expirationTime;
            if (0 === e) {
              null === c || null === T ? t('244') : void 0;
              if (d === d.nextScheduledRoot) {
                U = T = d.nextScheduledRoot = null;
                break;
              } else if (d === U)
                (U = e = d.nextScheduledRoot),
                  (T.nextScheduledRoot = e),
                  (d.nextScheduledRoot = null);
              else if (d === T) {
                T = c;
                T.nextScheduledRoot = U;
                d.nextScheduledRoot = null;
                break;
              } else
                (c.nextScheduledRoot = d.nextScheduledRoot),
                  (d.nextScheduledRoot = null);
              d = c.nextScheduledRoot;
            } else {
              if (0 === a || e < a) (a = e), (b = d);
              if (d === T) break;
              if (1 === a) break;
              c = d;
              d = d.nextScheduledRoot;
            }
          }
        Y = b;
        Z = a;
      }
      function ph(a) {
        if (a.didTimeout && null !== U) {
          oh();
          var b = U;
          do {
            var c = b.expirationTime;
            0 !== c && kh >= c && (b.nextExpirationTimeToWorkOn = kh);
            b = b.nextScheduledRoot;
          } while (b !== U);
        }
        Yg(0, a);
      }
      function Yg(a, b) {
        hh = b;
        qh();
        if (null !== hh)
          for (
            oh(), lh = kh;
            null !== Y && 0 !== Z && (0 === a || a >= Z) && (!eh || kh >= Z);

          )
            Xg(Y, Z, kh >= Z), qh(), oh(), (lh = kh);
        else
          for (; null !== Y && 0 !== Z && (0 === a || a >= Z); )
            Xg(Y, Z, !0), qh();
        null !== hh && ((ch = 0), (dh = null));
        0 !== Z && Zg(Y, Z);
        hh = null;
        eh = !1;
        $g = 0;
        mh = null;
        if (null !== ih)
          for (a = ih, ih = null, b = 0; b < a.length; b++) {
            var c = a[b];
            try {
              c._onComplete();
            } catch (d) {
              fh || ((fh = !0), (gh = d));
            }
          }
        if (fh) throw ((a = gh), (gh = null), (fh = !1), a);
      }
      function Xg(a, b, c) {
        V ? t('245') : void 0;
        V = !0;
        if (null === hh || c) {
          var d = a.finishedWork;
          null !== d
            ? rh(a, d, b)
            : ((a.finishedWork = null),
              Sg(a, !1, c),
              (d = a.finishedWork),
              null !== d && rh(a, d, b));
        } else
          (d = a.finishedWork),
            null !== d
              ? rh(a, d, b)
              : ((a.finishedWork = null),
                Sg(a, !0, c),
                (d = a.finishedWork),
                null !== d && (Tg() ? (a.finishedWork = d) : rh(a, d, b)));
        V = !1;
      }
      function rh(a, b, c) {
        var d = a.firstBatch;
        if (
          null !== d &&
          d._expirationTime <= c &&
          (null === ih ? (ih = [d]) : ih.push(d), d._defer)
        ) {
          a.finishedWork = b;
          a.expirationTime = 0;
          return;
        }
        a.finishedWork = null;
        a === mh ? $g++ : ((mh = a), ($g = 0));
        Og = Lg = !0;
        a.current === b ? t('177') : void 0;
        c = a.pendingCommitExpirationTime;
        0 === c ? t('261') : void 0;
        a.pendingCommitExpirationTime = 0;
        d = b.expirationTime;
        var e = b.childExpirationTime;
        d = 0 === d || (0 !== e && e < d) ? e : d;
        a.didError = !1;
        0 === d
          ? ((a.earliestPendingTime = 0),
            (a.latestPendingTime = 0),
            (a.earliestSuspendedTime = 0),
            (a.latestSuspendedTime = 0),
            (a.latestPingedTime = 0))
          : ((e = a.latestPendingTime),
            0 !== e &&
              (e < d
                ? (a.earliestPendingTime = a.latestPendingTime = 0)
                : a.earliestPendingTime < d &&
                  (a.earliestPendingTime = a.latestPendingTime)),
            (e = a.earliestSuspendedTime),
            0 === e
              ? Ze(a, d)
              : d > a.latestSuspendedTime
                ? ((a.earliestSuspendedTime = 0),
                  (a.latestSuspendedTime = 0),
                  (a.latestPingedTime = 0),
                  Ze(a, d))
                : d < e && Ze(a, d));
        $e(0, a);
        Ig.current = null;
        1 < b.effectTag
          ? null !== b.lastEffect
            ? ((b.lastEffect.nextEffect = b), (d = b.firstEffect))
            : (d = b)
          : (d = b.firstEffect);
        xe = Gd;
        e = Td();
        if (Ud(e)) {
          if ('selectionStart' in e)
            var f = { start: e.selectionStart, end: e.selectionEnd };
          else
            a: {
              f = ((f = e.ownerDocument) && f.defaultView) || window;
              var g = f.getSelection && f.getSelection();
              if (g && 0 !== g.rangeCount) {
                f = g.anchorNode;
                var h = g.anchorOffset,
                  k = g.focusNode;
                g = g.focusOffset;
                try {
                  f.nodeType, k.nodeType;
                } catch (Xa) {
                  f = null;
                  break a;
                }
                var l = 0,
                  m = -1,
                  r = -1,
                  A = 0,
                  S = 0,
                  B = e,
                  P = null;
                b: for (;;) {
                  for (var v; ; ) {
                    B !== f || (0 !== h && 3 !== B.nodeType) || (m = l + h);
                    B !== k || (0 !== g && 3 !== B.nodeType) || (r = l + g);
                    3 === B.nodeType && (l += B.nodeValue.length);
                    if (null === (v = B.firstChild)) break;
                    P = B;
                    B = v;
                  }
                  for (;;) {
                    if (B === e) break b;
                    P === f && ++A === h && (m = l);
                    P === k && ++S === g && (r = l);
                    if (null !== (v = B.nextSibling)) break;
                    B = P;
                    P = B.parentNode;
                  }
                  B = v;
                }
                f = -1 === m || -1 === r ? null : { start: m, end: r };
              } else f = null;
            }
          f = f || { start: 0, end: 0 };
        } else f = null;
        ye = { focusedElem: e, selectionRange: f };
        Gd = !1;
        for (Q = d; null !== Q; ) {
          e = !1;
          f = void 0;
          try {
            for (; null !== Q; ) {
              if (Q.effectTag & 256) {
                var p = Q.alternate;
                a: switch (((h = Q), h.tag)) {
                  case 2:
                  case 3:
                    if (h.effectTag & 256 && null !== p) {
                      var u = p.memoizedProps,
                        x = p.memoizedState,
                        R = h.stateNode;
                      R.props = h.memoizedProps;
                      R.state = h.memoizedState;
                      var yh = R.getSnapshotBeforeUpdate(u, x);
                      R.__reactInternalSnapshotBeforeUpdate = yh;
                    }
                    break a;
                  case 5:
                  case 7:
                  case 8:
                  case 6:
                    break a;
                  default:
                    t('163');
                }
              }
              Q = Q.nextEffect;
            }
          } catch (Xa) {
            (e = !0), (f = Xa);
          }
          e &&
            (null === Q ? t('178') : void 0,
            wg(Q, f),
            null !== Q && (Q = Q.nextEffect));
        }
        for (Q = d; null !== Q; ) {
          p = !1;
          u = void 0;
          try {
            for (; null !== Q; ) {
              var w = Q.effectTag;
              w & 16 && oe(Q.stateNode, '');
              if (w & 128) {
                var y = Q.alternate;
                if (null !== y) {
                  var q = y.ref;
                  null !== q &&
                    ('function' === typeof q ? q(null) : (q.current = null));
                }
              }
              switch (w & 14) {
                case 2:
                  Ag(Q);
                  Q.effectTag &= -3;
                  break;
                case 6:
                  Ag(Q);
                  Q.effectTag &= -3;
                  Bg(Q.alternate, Q);
                  break;
                case 4:
                  Bg(Q.alternate, Q);
                  break;
                case 8:
                  (x = Q),
                    yg(x),
                    (x.return = null),
                    (x.child = null),
                    x.alternate &&
                      ((x.alternate.child = null), (x.alternate.return = null));
              }
              Q = Q.nextEffect;
            }
          } catch (Xa) {
            (p = !0), (u = Xa);
          }
          p &&
            (null === Q ? t('178') : void 0,
            wg(Q, u),
            null !== Q && (Q = Q.nextEffect));
        }
        q = ye;
        y = Td();
        w = q.focusedElem;
        u = q.selectionRange;
        if (
          y !== w &&
          w &&
          w.ownerDocument &&
          Sd(w.ownerDocument.documentElement, w)
        ) {
          null !== u &&
            Ud(w) &&
            ((y = u.start),
            (q = u.end),
            void 0 === q && (q = y),
            'selectionStart' in w
              ? ((w.selectionStart = y),
                (w.selectionEnd = Math.min(q, w.value.length)))
              : ((p = w.ownerDocument || document),
                (y = ((p && p.defaultView) || window).getSelection()),
                (x = w.textContent.length),
                (q = Math.min(u.start, x)),
                (u = void 0 === u.end ? q : Math.min(u.end, x)),
                !y.extend && q > u && ((x = u), (u = q), (q = x)),
                (x = Rd(w, q)),
                (R = Rd(w, u)),
                x &&
                  R &&
                  (1 !== y.rangeCount ||
                    y.anchorNode !== x.node ||
                    y.anchorOffset !== x.offset ||
                    y.focusNode !== R.node ||
                    y.focusOffset !== R.offset) &&
                  ((p = p.createRange()),
                  p.setStart(x.node, x.offset),
                  y.removeAllRanges(),
                  q > u
                    ? (y.addRange(p), y.extend(R.node, R.offset))
                    : (p.setEnd(R.node, R.offset), y.addRange(p)))));
          y = [];
          for (q = w; (q = q.parentNode); )
            1 === q.nodeType &&
              y.push({ element: q, left: q.scrollLeft, top: q.scrollTop });
          'function' === typeof w.focus && w.focus();
          for (w = 0; w < y.length; w++)
            (q = y[w]),
              (q.element.scrollLeft = q.left),
              (q.element.scrollTop = q.top);
        }
        ye = null;
        Gd = !!xe;
        xe = null;
        a.current = b;
        for (Q = d; null !== Q; ) {
          d = !1;
          w = void 0;
          try {
            for (y = c; null !== Q; ) {
              var Sa = Q.effectTag;
              if (Sa & 36) {
                var oc = Q.alternate;
                q = Q;
                p = y;
                switch (q.tag) {
                  case 2:
                  case 3:
                    var X = q.stateNode;
                    if (q.effectTag & 4)
                      if (null === oc)
                        (X.props = q.memoizedProps),
                          (X.state = q.memoizedState),
                          X.componentDidMount();
                      else {
                        var Ih = oc.memoizedProps,
                          Jh = oc.memoizedState;
                        X.props = q.memoizedProps;
                        X.state = q.memoizedState;
                        X.componentDidUpdate(
                          Ih,
                          Jh,
                          X.__reactInternalSnapshotBeforeUpdate
                        );
                      }
                    var kg = q.updateQueue;
                    null !== kg &&
                      ((X.props = q.memoizedProps),
                      (X.state = q.memoizedState),
                      lf(q, kg, X, p));
                    break;
                  case 5:
                    var lg = q.updateQueue;
                    if (null !== lg) {
                      u = null;
                      if (null !== q.child)
                        switch (q.child.tag) {
                          case 7:
                            u = q.child.stateNode;
                            break;
                          case 2:
                          case 3:
                            u = q.child.stateNode;
                        }
                      lf(q, lg, u, p);
                    }
                    break;
                  case 7:
                    var Kh = q.stateNode;
                    null === oc &&
                      q.effectTag & 4 &&
                      ze(q.type, q.memoizedProps) &&
                      Kh.focus();
                    break;
                  case 8:
                    break;
                  case 6:
                    break;
                  case 15:
                    break;
                  case 16:
                    break;
                  default:
                    t('163');
                }
              }
              if (Sa & 128) {
                var Ac = Q.ref;
                if (null !== Ac) {
                  var mg = Q.stateNode;
                  switch (Q.tag) {
                    case 7:
                      var Pd = mg;
                      break;
                    default:
                      Pd = mg;
                  }
                  'function' === typeof Ac ? Ac(Pd) : (Ac.current = Pd);
                }
              }
              var Lh = Q.nextEffect;
              Q.nextEffect = null;
              Q = Lh;
            }
          } catch (Xa) {
            (d = !0), (w = Xa);
          }
          d &&
            (null === Q ? t('178') : void 0,
            wg(Q, w),
            null !== Q && (Q = Q.nextEffect));
        }
        Lg = Og = !1;
        'function' === typeof Oe && Oe(b.stateNode);
        Sa = b.expirationTime;
        b = b.childExpirationTime;
        b = 0 === Sa || (0 !== b && b < Sa) ? b : Sa;
        0 === b && (Fg = null);
        a.expirationTime = b;
        a.finishedWork = null;
      }
      function Tg() {
        return eh
          ? !0
          : null === hh || hh.timeRemaining() > nh
            ? !1
            : (eh = !0);
      }
      function Dg(a) {
        null === Y ? t('246') : void 0;
        Y.expirationTime = 0;
        fh || ((fh = !0), (gh = a));
      }
      function sh(a, b) {
        var c = W;
        W = !0;
        try {
          return a(b);
        } finally {
          (W = c) || V || Yg(1, null);
        }
      }
      function th(a, b) {
        if (W && !Wg) {
          Wg = !0;
          try {
            return a(b);
          } finally {
            Wg = !1;
          }
        }
        return a(b);
      }
      function uh(a, b, c) {
        if (Ug) return a(b, c);
        W || V || 0 === Vg || (Yg(Vg, null), (Vg = 0));
        var d = Ug,
          e = W;
        W = Ug = !0;
        try {
          return a(b, c);
        } finally {
          (Ug = d), (W = e) || V || Yg(1, null);
        }
      }
      function vh(a) {
        if (!a) return Fe;
        a = a._reactInternalFiber;
        a: {
          2 !== jd(a) || (2 !== a.tag && 3 !== a.tag) ? t('170') : void 0;
          var b = a;
          do {
            switch (b.tag) {
              case 5:
                b = b.stateNode.context;
                break a;
              case 2:
                if (K(b.type)) {
                  b = b.stateNode.__reactInternalMemoizedMergedChildContext;
                  break a;
                }
                break;
              case 3:
                if (K(b.type._reactResult)) {
                  b = b.stateNode.__reactInternalMemoizedMergedChildContext;
                  break a;
                }
            }
            b = b.return;
          } while (null !== b);
          t('171');
          b = void 0;
        }
        if (2 === a.tag) {
          var c = a.type;
          if (K(c)) return Le(a, c, b);
        } else if (3 === a.tag && ((c = a.type._reactResult), K(c)))
          return Le(a, c, b);
        return b;
      }
      function wh(a, b, c, d, e) {
        var f = b.current;
        c = vh(c);
        null === b.context ? (b.context = c) : (b.pendingContext = c);
        b = e;
        e = df(d);
        e.payload = { element: a };
        b = void 0 === b ? null : b;
        null !== b && (e.callback = b);
        ff(f, e);
        If(f, d);
        return d;
      }
      function xh(a, b, c, d) {
        var e = b.current,
          f = Gf();
        e = Hf(f, e);
        return wh(a, b, c, e, d);
      }
      function zh(a) {
        a = a.current;
        if (!a.child) return null;
        switch (a.child.tag) {
          case 7:
            return a.child.stateNode;
          default:
            return a.child.stateNode;
        }
      }
      function Ah(a, b, c) {
        var d =
          3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
        return {
          $$typeof: ac,
          key: null == d ? null : '' + d,
          children: a,
          containerInfo: b,
          implementation: c
        };
      }
      Fb = function(a, b, c) {
        switch (b) {
          case 'input':
            Dc(a, c);
            b = c.name;
            if ('radio' === c.type && null != b) {
              for (c = a; c.parentNode; ) c = c.parentNode;
              c = c.querySelectorAll(
                'input[name=' + JSON.stringify('' + b) + '][type="radio"]'
              );
              for (b = 0; b < c.length; b++) {
                var d = c[b];
                if (d !== a && d.form === a.form) {
                  var e = Na(d);
                  e ? void 0 : t('90');
                  Xb(d);
                  Dc(d, e);
                }
              }
            }
            break;
          case 'textarea':
            he(a, c);
            break;
          case 'select':
            (b = c.value), null != b && ee(a, !!c.multiple, b, !1);
        }
      };
      function Bh(a) {
        var b = 2 + 25 * ((((Gf() - 2 + 500) / 25) | 0) + 1);
        b <= Jg && (b = Jg + 1);
        this._expirationTime = Jg = b;
        this._root = a;
        this._callbacks = this._next = null;
        this._hasChildren = this._didComplete = !1;
        this._children = null;
        this._defer = !0;
      }
      Bh.prototype.render = function(a) {
        this._defer ? void 0 : t('250');
        this._hasChildren = !0;
        this._children = a;
        var b = this._root._internalRoot,
          c = this._expirationTime,
          d = new Ch();
        wh(a, b, null, c, d._onCommit);
        return d;
      };
      Bh.prototype.then = function(a) {
        if (this._didComplete) a();
        else {
          var b = this._callbacks;
          null === b && (b = this._callbacks = []);
          b.push(a);
        }
      };
      Bh.prototype.commit = function() {
        var a = this._root._internalRoot,
          b = a.firstBatch;
        this._defer && null !== b ? void 0 : t('251');
        if (this._hasChildren) {
          var c = this._expirationTime;
          if (b !== this) {
            this._hasChildren &&
              ((c = this._expirationTime = b._expirationTime),
              this.render(this._children));
            for (var d = null, e = b; e !== this; ) (d = e), (e = e._next);
            null === d ? t('251') : void 0;
            d._next = e._next;
            this._next = b;
            a.firstBatch = this;
          }
          this._defer = !1;
          b = c;
          V ? t('253') : void 0;
          Y = a;
          Z = b;
          Xg(a, b, !0);
          Yg(1, null);
          b = this._next;
          this._next = null;
          b = a.firstBatch = b;
          null !== b && b._hasChildren && b.render(b._children);
        } else (this._next = null), (this._defer = !1);
      };
      Bh.prototype._onComplete = function() {
        if (!this._didComplete) {
          this._didComplete = !0;
          var a = this._callbacks;
          if (null !== a) for (var b = 0; b < a.length; b++) (0, a[b])();
        }
      };
      function Ch() {
        this._callbacks = null;
        this._didCommit = !1;
        this._onCommit = this._onCommit.bind(this);
      }
      Ch.prototype.then = function(a) {
        if (this._didCommit) a();
        else {
          var b = this._callbacks;
          null === b && (b = this._callbacks = []);
          b.push(a);
        }
      };
      Ch.prototype._onCommit = function() {
        if (!this._didCommit) {
          this._didCommit = !0;
          var a = this._callbacks;
          if (null !== a)
            for (var b = 0; b < a.length; b++) {
              var c = a[b];
              'function' !== typeof c ? t('191', c) : void 0;
              c();
            }
        }
      };
      function Dh(a, b, c) {
        b = new Se(5, null, null, b ? 3 : 0);
        a = {
          current: b,
          containerInfo: a,
          pendingChildren: null,
          earliestPendingTime: 0,
          latestPendingTime: 0,
          earliestSuspendedTime: 0,
          latestSuspendedTime: 0,
          latestPingedTime: 0,
          didError: !1,
          pendingCommitExpirationTime: 0,
          finishedWork: null,
          timeoutHandle: -1,
          context: null,
          pendingContext: null,
          hydrate: c,
          nextExpirationTimeToWorkOn: 0,
          expirationTime: 0,
          firstBatch: null,
          nextScheduledRoot: null
        };
        this._internalRoot = b.stateNode = a;
      }
      Dh.prototype.render = function(a, b) {
        var c = this._internalRoot,
          d = new Ch();
        b = void 0 === b ? null : b;
        null !== b && d.then(b);
        xh(a, c, null, d._onCommit);
        return d;
      };
      Dh.prototype.unmount = function(a) {
        var b = this._internalRoot,
          c = new Ch();
        a = void 0 === a ? null : a;
        null !== a && c.then(a);
        xh(null, b, null, c._onCommit);
        return c;
      };
      Dh.prototype.legacy_renderSubtreeIntoContainer = function(a, b, c) {
        var d = this._internalRoot,
          e = new Ch();
        c = void 0 === c ? null : c;
        null !== c && e.then(c);
        xh(b, d, a, e._onCommit);
        return e;
      };
      Dh.prototype.createBatch = function() {
        var a = new Bh(this),
          b = a._expirationTime,
          c = this._internalRoot,
          d = c.firstBatch;
        if (null === d) (c.firstBatch = a), (a._next = null);
        else {
          for (c = null; null !== d && d._expirationTime <= b; )
            (c = d), (d = d._next);
          a._next = d;
          null !== c && (c._next = a);
        }
        return a;
      };
      function Eh(a) {
        return !(
          !a ||
          (1 !== a.nodeType &&
            9 !== a.nodeType &&
            11 !== a.nodeType &&
            (8 !== a.nodeType ||
              ' react-mount-point-unstable ' !== a.nodeValue))
        );
      }
      Lb = sh;
      Mb = uh;
      Nb = function() {
        V || 0 === Vg || (Yg(Vg, null), (Vg = 0));
      };
      function Fh(a, b) {
        b ||
          ((b = a
            ? 9 === a.nodeType
              ? a.documentElement
              : a.firstChild
            : null),
          (b = !(!b || 1 !== b.nodeType || !b.hasAttribute('data-reactroot'))));
        if (!b) for (var c; (c = a.lastChild); ) a.removeChild(c);
        return new Dh(a, !1, b);
      }
      function Gh(a, b, c, d, e) {
        Eh(c) ? void 0 : t('200');
        var f = c._reactRootContainer;
        if (f) {
          if ('function' === typeof e) {
            var g = e;
            e = function() {
              var a = zh(f._internalRoot);
              g.call(a);
            };
          }
          null != a
            ? f.legacy_renderSubtreeIntoContainer(a, b, e)
            : f.render(b, e);
        } else {
          f = c._reactRootContainer = Fh(c, d);
          if ('function' === typeof e) {
            var h = e;
            e = function() {
              var a = zh(f._internalRoot);
              h.call(a);
            };
          }
          th(function() {
            null != a
              ? f.legacy_renderSubtreeIntoContainer(a, b, e)
              : f.render(b, e);
          });
        }
        return zh(f._internalRoot);
      }
      function Hh(a, b) {
        var c =
          2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
        Eh(b) ? void 0 : t('200');
        return Ah(a, b, null, c);
      }
      var Mh = {
        createPortal: Hh,
        findDOMNode: function(a) {
          if (null == a) return null;
          if (1 === a.nodeType) return a;
          var b = a._reactInternalFiber;
          void 0 === b &&
            ('function' === typeof a.render
              ? t('188')
              : t('268', Object.keys(a)));
          a = md(b);
          a = null === a ? null : a.stateNode;
          return a;
        },
        hydrate: function(a, b, c) {
          return Gh(null, a, b, !0, c);
        },
        render: function(a, b, c) {
          return Gh(null, a, b, !1, c);
        },
        unstable_renderSubtreeIntoContainer: function(a, b, c, d) {
          null == a || void 0 === a._reactInternalFiber ? t('38') : void 0;
          return Gh(a, b, c, !1, d);
        },
        unmountComponentAtNode: function(a) {
          Eh(a) ? void 0 : t('40');
          return a._reactRootContainer
            ? (th(function() {
                Gh(null, null, a, !1, function() {
                  a._reactRootContainer = null;
                });
              }),
              !0)
            : !1;
        },
        unstable_createPortal: function() {
          return Hh.apply(void 0, arguments);
        },
        unstable_batchedUpdates: sh,
        unstable_interactiveUpdates: uh,
        flushSync: function(a, b) {
          V ? t('187') : void 0;
          var c = W;
          W = !0;
          try {
            return bh(a, b);
          } finally {
            (W = c), Yg(1, null);
          }
        },
        unstable_flushControlled: function(a) {
          var b = W;
          W = !0;
          try {
            bh(a);
          } finally {
            (W = b) || V || Yg(1, null);
          }
        },
        __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
          Events: [
            La,
            Ma,
            Na,
            Ea.injectEventPluginsByName,
            qa,
            Ua,
            function(a) {
              za(a, Ta);
            },
            Jb,
            Kb,
            Id,
            Ga
          ]
        },
        unstable_createRoot: function(a, b) {
          Eh(a) ? void 0 : t('278');
          return new Dh(a, !0, null != b && !0 === b.hydrate);
        }
      };
      (function(a) {
        var b = a.findFiberByHostInstance;
        return Re(
          n({}, a, {
            findHostInstanceByFiber: function(a) {
              a = md(a);
              return null === a ? null : a.stateNode;
            },
            findFiberByHostInstance: function(a) {
              return b ? b(a) : null;
            }
          })
        );
      })({
        findFiberByHostInstance: Ka,
        bundleType: 0,
        version: '16.5.2',
        rendererPackageName: 'react-dom'
      });
      var Nh = { default: Mh },
        Oh = (Nh && Mh) || Nh;
      module.exports = Oh.default || Oh;

      /***/
    },
    /* 336 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      if (undefined === 'production') {
        module.exports = __webpack_require__(337);
      } else {
        module.exports = __webpack_require__(338);
      }

      /***/
    },
    /* 337 */
    /***/ function(module, exports) {
      /** @license React v16.5.2
       * schedule.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      'use strict';
      Object.defineProperty(exports, '__esModule', { value: !0 });
      var c = null,
        e = !1,
        f = !1,
        g =
          'object' === typeof performance &&
          'function' === typeof performance.now,
        l = {
          timeRemaining: g
            ? function() {
                var a = h() - performance.now();
                return 0 < a ? a : 0;
              }
            : function() {
                var a = h() - Date.now();
                return 0 < a ? a : 0;
              },
          didTimeout: !1
        };
      function m() {
        if (!e) {
          var a = c.timesOutAt;
          f ? n() : (f = !0);
          p(q, a);
        }
      }
      function r() {
        var a = c,
          b = c.next;
        if (c === b) c = null;
        else {
          var d = c.previous;
          c = d.next = b;
          b.previous = d;
        }
        a.next = a.previous = null;
        a = a.callback;
        a(l);
      }
      function q(a) {
        e = !0;
        l.didTimeout = a;
        try {
          if (a)
            for (; null !== c; ) {
              var b = exports.unstable_now();
              if (c.timesOutAt <= b) {
                do r();
                while (null !== c && c.timesOutAt <= b);
              } else break;
            }
          else if (null !== c) {
            do r();
            while (null !== c && 0 < h() - exports.unstable_now());
          }
        } finally {
          (e = !1), null !== c ? m(c) : (f = !1);
        }
      }
      var t = Date,
        u = 'function' === typeof setTimeout ? setTimeout : void 0,
        v = 'function' === typeof clearTimeout ? clearTimeout : void 0,
        w =
          'function' === typeof requestAnimationFrame
            ? requestAnimationFrame
            : void 0,
        x =
          'function' === typeof cancelAnimationFrame
            ? cancelAnimationFrame
            : void 0,
        y,
        z;
      function A(a) {
        y = w(function(b) {
          v(z);
          a(b);
        });
        z = u(function() {
          x(y);
          a(exports.unstable_now());
        }, 100);
      }
      if (g) {
        var B = performance;
        exports.unstable_now = function() {
          return B.now();
        };
      } else
        exports.unstable_now = function() {
          return t.now();
        };
      var p, n, h;
      if ('undefined' === typeof window) {
        var C = -1;
        p = function(a) {
          C = setTimeout(a, 0, !0);
        };
        n = function() {
          clearTimeout(C);
        };
        h = function() {
          return 0;
        };
      } else if (window._schedMock) {
        var D = window._schedMock;
        p = D[0];
        n = D[1];
        h = D[2];
      } else {
        'undefined' !== typeof console &&
          ('function' !== typeof w &&
            console.error(
              "This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"
            ),
          'function' !== typeof x &&
            console.error(
              "This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"
            ));
        var E = null,
          F = !1,
          G = -1,
          H = !1,
          I = !1,
          J = 0,
          K = 33,
          L = 33;
        h = function() {
          return J;
        };
        var M =
          '__reactIdleCallback$' +
          Math.random()
            .toString(36)
            .slice(2);
        window.addEventListener(
          'message',
          function(a) {
            if (a.source === window && a.data === M) {
              F = !1;
              var b = exports.unstable_now();
              a = !1;
              if (0 >= J - b)
                if (-1 !== G && G <= b) a = !0;
                else {
                  H || ((H = !0), A(N));
                  return;
                }
              G = -1;
              b = E;
              E = null;
              if (null !== b) {
                I = !0;
                try {
                  b(a);
                } finally {
                  I = !1;
                }
              }
            }
          },
          !1
        );
        var N = function(a) {
          H = !1;
          var b = a - J + L;
          b < L && K < L ? (8 > b && (b = 8), (L = b < K ? K : b)) : (K = b);
          J = a + L;
          F || ((F = !0), window.postMessage(M, '*'));
        };
        p = function(a, b) {
          E = a;
          G = b;
          I ? window.postMessage(M, '*') : H || ((H = !0), A(N));
        };
        n = function() {
          E = null;
          F = !1;
          G = -1;
        };
      }
      exports.unstable_scheduleWork = function(a, b) {
        var d = exports.unstable_now();
        b =
          void 0 !== b &&
          null !== b &&
          null !== b.timeout &&
          void 0 !== b.timeout
            ? d + b.timeout
            : d + 5e3;
        a = { callback: a, timesOutAt: b, next: null, previous: null };
        if (null === c) (c = a.next = a.previous = a), m(c);
        else {
          d = null;
          var k = c;
          do {
            if (k.timesOutAt > b) {
              d = k;
              break;
            }
            k = k.next;
          } while (k !== c);
          null === d ? (d = c) : d === c && ((c = a), m(c));
          b = d.previous;
          b.next = d.previous = a;
          a.next = d;
          a.previous = b;
        }
        return a;
      };
      exports.unstable_cancelScheduledWork = function(a) {
        var b = a.next;
        if (null !== b) {
          if (b === a) c = null;
          else {
            a === c && (c = b);
            var d = a.previous;
            d.next = b;
            b.previous = d;
          }
          a.next = a.previous = null;
        }
      };

      /***/
    },
    /* 338 */
    /***/ function(module, exports, __webpack_require__) {
      /** @license React v16.5.2
       * schedule.development.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      'use strict';

      if (undefined !== 'production') {
        (function() {
          'use strict';

          Object.defineProperty(exports, '__esModule', { value: true });

          /* eslint-disable no-var */

          // TODO: Currently there's only a single priority level, Deferred. Will add
          // additional priorities.
          var DEFERRED_TIMEOUT = 5000;

          // Callbacks are stored as a circular, doubly linked list.
          var firstCallbackNode = null;

          var isPerformingWork = false;

          var isHostCallbackScheduled = false;

          var hasNativePerformanceNow =
            typeof performance === 'object' &&
            typeof performance.now === 'function';

          var timeRemaining;
          if (hasNativePerformanceNow) {
            timeRemaining = function() {
              // We assume that if we have a performance timer that the rAF callback
              // gets a performance timer value. Not sure if this is always true.
              var remaining = getFrameDeadline() - performance.now();
              return remaining > 0 ? remaining : 0;
            };
          } else {
            timeRemaining = function() {
              // Fallback to Date.now()
              var remaining = getFrameDeadline() - Date.now();
              return remaining > 0 ? remaining : 0;
            };
          }

          var deadlineObject = {
            timeRemaining: timeRemaining,
            didTimeout: false
          };

          function ensureHostCallbackIsScheduled() {
            if (isPerformingWork) {
              // Don't schedule work yet; wait until the next time we yield.
              return;
            }
            // Schedule the host callback using the earliest timeout in the list.
            var timesOutAt = firstCallbackNode.timesOutAt;
            if (!isHostCallbackScheduled) {
              isHostCallbackScheduled = true;
            } else {
              // Cancel the existing host callback.
              cancelCallback();
            }
            requestCallback(flushWork, timesOutAt);
          }

          function flushFirstCallback(node) {
            var flushedNode = firstCallbackNode;

            // Remove the node from the list before calling the callback. That way the
            // list is in a consistent state even if the callback throws.
            var next = firstCallbackNode.next;
            if (firstCallbackNode === next) {
              // This is the last callback in the list.
              firstCallbackNode = null;
              next = null;
            } else {
              var previous = firstCallbackNode.previous;
              firstCallbackNode = previous.next = next;
              next.previous = previous;
            }

            flushedNode.next = flushedNode.previous = null;

            // Now it's safe to call the callback.
            var callback = flushedNode.callback;
            callback(deadlineObject);
          }

          function flushWork(didTimeout) {
            isPerformingWork = true;
            deadlineObject.didTimeout = didTimeout;
            try {
              if (didTimeout) {
                // Flush all the timed out callbacks without yielding.
                while (firstCallbackNode !== null) {
                  // Read the current time. Flush all the callbacks that expire at or
                  // earlier than that time. Then read the current time again and repeat.
                  // This optimizes for as few performance.now calls as possible.
                  var currentTime = exports.unstable_now();
                  if (firstCallbackNode.timesOutAt <= currentTime) {
                    do {
                      flushFirstCallback();
                    } while (
                      firstCallbackNode !== null &&
                      firstCallbackNode.timesOutAt <= currentTime
                    );
                    continue;
                  }
                  break;
                }
              } else {
                // Keep flushing callbacks until we run out of time in the frame.
                if (firstCallbackNode !== null) {
                  do {
                    flushFirstCallback();
                  } while (
                    firstCallbackNode !== null &&
                    getFrameDeadline() - exports.unstable_now() > 0
                  );
                }
              }
            } finally {
              isPerformingWork = false;
              if (firstCallbackNode !== null) {
                // There's still work remaining. Request another callback.
                ensureHostCallbackIsScheduled(firstCallbackNode);
              } else {
                isHostCallbackScheduled = false;
              }
            }
          }

          function unstable_scheduleWork(callback, options) {
            var currentTime = exports.unstable_now();

            var timesOutAt;
            if (
              options !== undefined &&
              options !== null &&
              options.timeout !== null &&
              options.timeout !== undefined
            ) {
              // Check for an explicit timeout
              timesOutAt = currentTime + options.timeout;
            } else {
              // Compute an absolute timeout using the default constant.
              timesOutAt = currentTime + DEFERRED_TIMEOUT;
            }

            var newNode = {
              callback: callback,
              timesOutAt: timesOutAt,
              next: null,
              previous: null
            };

            // Insert the new callback into the list, sorted by its timeout.
            if (firstCallbackNode === null) {
              // This is the first callback in the list.
              firstCallbackNode = newNode.next = newNode.previous = newNode;
              ensureHostCallbackIsScheduled(firstCallbackNode);
            } else {
              var next = null;
              var node = firstCallbackNode;
              do {
                if (node.timesOutAt > timesOutAt) {
                  // The new callback times out before this one.
                  next = node;
                  break;
                }
                node = node.next;
              } while (node !== firstCallbackNode);

              if (next === null) {
                // No callback with a later timeout was found, which means the new
                // callback has the latest timeout in the list.
                next = firstCallbackNode;
              } else if (next === firstCallbackNode) {
                // The new callback has the earliest timeout in the entire list.
                firstCallbackNode = newNode;
                ensureHostCallbackIsScheduled(firstCallbackNode);
              }

              var previous = next.previous;
              previous.next = next.previous = newNode;
              newNode.next = next;
              newNode.previous = previous;
            }

            return newNode;
          }

          function unstable_cancelScheduledWork(callbackNode) {
            var next = callbackNode.next;
            if (next === null) {
              // Already cancelled.
              return;
            }

            if (next === callbackNode) {
              // This is the only scheduled callback. Clear the list.
              firstCallbackNode = null;
            } else {
              // Remove the callback from its position in the list.
              if (callbackNode === firstCallbackNode) {
                firstCallbackNode = next;
              }
              var previous = callbackNode.previous;
              previous.next = next;
              next.previous = previous;
            }

            callbackNode.next = callbackNode.previous = null;
          }

          // The remaining code is essentially a polyfill for requestIdleCallback. It
          // works by scheduling a requestAnimationFrame, storing the time for the start
          // of the frame, then scheduling a postMessage which gets scheduled after paint.
          // Within the postMessage handler do as much work as possible until time + frame
          // rate. By separating the idle call into a separate event tick we ensure that
          // layout, paint and other browser work is counted against the available time.
          // The frame rate is dynamically adjusted.

          // We capture a local reference to any global, in case it gets polyfilled after
          // this module is initially evaluated. We want to be using a
          // consistent implementation.
          var localDate = Date;

          // This initialization code may run even on server environments if a component
          // just imports ReactDOM (e.g. for findDOMNode). Some environments might not
          // have setTimeout or clearTimeout. However, we always expect them to be defined
          // on the client. https://github.com/facebook/react/pull/13088
          var localSetTimeout =
            typeof setTimeout === 'function' ? setTimeout : undefined;
          var localClearTimeout =
            typeof clearTimeout === 'function' ? clearTimeout : undefined;

          // We don't expect either of these to necessarily be defined, but we will error
          // later if they are missing on the client.
          var localRequestAnimationFrame =
            typeof requestAnimationFrame === 'function'
              ? requestAnimationFrame
              : undefined;
          var localCancelAnimationFrame =
            typeof cancelAnimationFrame === 'function'
              ? cancelAnimationFrame
              : undefined;

          // requestAnimationFrame does not run when the tab is in the background. If
          // we're backgrounded we prefer for that work to happen so that the page
          // continues to load in the background. So we also schedule a 'setTimeout' as
          // a fallback.
          // TODO: Need a better heuristic for backgrounded work.
          var ANIMATION_FRAME_TIMEOUT = 100;
          var rAFID;
          var rAFTimeoutID;
          var requestAnimationFrameWithTimeout = function(callback) {
            // schedule rAF and also a setTimeout
            rAFID = localRequestAnimationFrame(function(timestamp) {
              // cancel the setTimeout
              localClearTimeout(rAFTimeoutID);
              callback(timestamp);
            });
            rAFTimeoutID = localSetTimeout(function() {
              // cancel the requestAnimationFrame
              localCancelAnimationFrame(rAFID);
              callback(exports.unstable_now());
            }, ANIMATION_FRAME_TIMEOUT);
          };

          if (hasNativePerformanceNow) {
            var Performance = performance;
            exports.unstable_now = function() {
              return Performance.now();
            };
          } else {
            exports.unstable_now = function() {
              return localDate.now();
            };
          }

          var requestCallback;
          var cancelCallback;
          var getFrameDeadline;

          if (typeof window === 'undefined') {
            // If this accidentally gets imported in a non-browser environment, fallback
            // to a naive implementation.
            var timeoutID = -1;
            requestCallback = function(callback, absoluteTimeout) {
              timeoutID = setTimeout(callback, 0, true);
            };
            cancelCallback = function() {
              clearTimeout(timeoutID);
            };
            getFrameDeadline = function() {
              return 0;
            };
          } else if (window._schedMock) {
            // Dynamic injection, only for testing purposes.
            var impl = window._schedMock;
            requestCallback = impl[0];
            cancelCallback = impl[1];
            getFrameDeadline = impl[2];
          } else {
            if (typeof console !== 'undefined') {
              if (typeof localRequestAnimationFrame !== 'function') {
                console.error(
                  "This browser doesn't support requestAnimationFrame. " +
                    'Make sure that you load a ' +
                    'polyfill in older browsers. https://fb.me/react-polyfills'
                );
              }
              if (typeof localCancelAnimationFrame !== 'function') {
                console.error(
                  "This browser doesn't support cancelAnimationFrame. " +
                    'Make sure that you load a ' +
                    'polyfill in older browsers. https://fb.me/react-polyfills'
                );
              }
            }

            var scheduledCallback = null;
            var isIdleScheduled = false;
            var timeoutTime = -1;

            var isAnimationFrameScheduled = false;

            var isPerformingIdleWork = false;

            var frameDeadline = 0;
            // We start out assuming that we run at 30fps but then the heuristic tracking
            // will adjust this value to a faster fps if we get more frequent animation
            // frames.
            var previousFrameTime = 33;
            var activeFrameTime = 33;

            getFrameDeadline = function() {
              return frameDeadline;
            };

            // We use the postMessage trick to defer idle work until after the repaint.
            var messageKey =
              '__reactIdleCallback$' +
              Math.random()
                .toString(36)
                .slice(2);
            var idleTick = function(event) {
              if (event.source !== window || event.data !== messageKey) {
                return;
              }

              isIdleScheduled = false;

              var currentTime = exports.unstable_now();

              var didTimeout = false;
              if (frameDeadline - currentTime <= 0) {
                // There's no time left in this idle period. Check if the callback has
                // a timeout and whether it's been exceeded.
                if (timeoutTime !== -1 && timeoutTime <= currentTime) {
                  // Exceeded the timeout. Invoke the callback even though there's no
                  // time left.
                  didTimeout = true;
                } else {
                  // No timeout.
                  if (!isAnimationFrameScheduled) {
                    // Schedule another animation callback so we retry later.
                    isAnimationFrameScheduled = true;
                    requestAnimationFrameWithTimeout(animationTick);
                  }
                  // Exit without invoking the callback.
                  return;
                }
              }

              timeoutTime = -1;
              var callback = scheduledCallback;
              scheduledCallback = null;
              if (callback !== null) {
                isPerformingIdleWork = true;
                try {
                  callback(didTimeout);
                } finally {
                  isPerformingIdleWork = false;
                }
              }
            };
            // Assumes that we have addEventListener in this environment. Might need
            // something better for old IE.
            window.addEventListener('message', idleTick, false);

            var animationTick = function(rafTime) {
              isAnimationFrameScheduled = false;
              var nextFrameTime = rafTime - frameDeadline + activeFrameTime;
              if (
                nextFrameTime < activeFrameTime &&
                previousFrameTime < activeFrameTime
              ) {
                if (nextFrameTime < 8) {
                  // Defensive coding. We don't support higher frame rates than 120hz.
                  // If we get lower than that, it is probably a bug.
                  nextFrameTime = 8;
                }
                // If one frame goes long, then the next one can be short to catch up.
                // If two frames are short in a row, then that's an indication that we
                // actually have a higher frame rate than what we're currently optimizing.
                // We adjust our heuristic dynamically accordingly. For example, if we're
                // running on 120hz display or 90hz VR display.
                // Take the max of the two in case one of them was an anomaly due to
                // missed frame deadlines.
                activeFrameTime =
                  nextFrameTime < previousFrameTime
                    ? previousFrameTime
                    : nextFrameTime;
              } else {
                previousFrameTime = nextFrameTime;
              }
              frameDeadline = rafTime + activeFrameTime;
              if (!isIdleScheduled) {
                isIdleScheduled = true;
                window.postMessage(messageKey, '*');
              }
            };

            requestCallback = function(callback, absoluteTimeout) {
              scheduledCallback = callback;
              timeoutTime = absoluteTimeout;
              if (isPerformingIdleWork) {
                // If we're already performing idle work, an error must have been thrown.
                // Don't wait for the next frame. Continue working ASAP, in a new event.
                window.postMessage(messageKey, '*');
              } else if (!isAnimationFrameScheduled) {
                // If rAF didn't already schedule one, we need to schedule a frame.
                // TODO: If this rAF doesn't materialize because the browser throttles, we
                // might want to still have setTimeout trigger rIC as a backup to ensure
                // that we keep performing work.
                isAnimationFrameScheduled = true;
                requestAnimationFrameWithTimeout(animationTick);
              }
            };

            cancelCallback = function() {
              scheduledCallback = null;
              isIdleScheduled = false;
              timeoutTime = -1;
            };
          }

          exports.unstable_scheduleWork = unstable_scheduleWork;
          exports.unstable_cancelScheduledWork = unstable_cancelScheduledWork;
        })();
      }

      /***/
    },
    /* 339 */
    /***/ function(module, exports, __webpack_require__) {
      /** @license React v16.5.2
       * react-dom.development.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      'use strict';

      if (undefined !== 'production') {
        (function() {
          'use strict';

          var React = __webpack_require__(328);
          var _assign = __webpack_require__(330);
          var checkPropTypes = __webpack_require__(332);
          var schedule = __webpack_require__(336);
          var tracing = __webpack_require__(340);

          /**
           * Use invariant() to assert state which your program assumes to be true.
           *
           * Provide sprintf-style format (only %s is supported) and arguments
           * to provide information about what broke and what you were
           * expecting.
           *
           * The invariant message will be stripped in production, but the invariant
           * will remain to ensure logic does not differ in production.
           */

          var validateFormat = function() {};

          {
            validateFormat = function(format) {
              if (format === undefined) {
                throw new Error('invariant requires an error message argument');
              }
            };
          }

          function invariant(condition, format, a, b, c, d, e, f) {
            validateFormat(format);

            if (!condition) {
              var error = void 0;
              if (format === undefined) {
                error = new Error(
                  'Minified exception occurred; use the non-minified dev environment ' +
                    'for the full error message and additional helpful warnings.'
                );
              } else {
                var args = [a, b, c, d, e, f];
                var argIndex = 0;
                error = new Error(
                  format.replace(/%s/g, function() {
                    return args[argIndex++];
                  })
                );
                error.name = 'Invariant Violation';
              }

              error.framesToPop = 1; // we don't care about invariant's own frame
              throw error;
            }
          }

          // Relying on the `invariant()` implementation lets us
          // preserve the format and params in the www builds.

          !React
            ? invariant(
                false,
                'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.'
              )
            : void 0;

          var invokeGuardedCallbackImpl = function(
            name,
            func,
            context,
            a,
            b,
            c,
            d,
            e,
            f
          ) {
            var funcArgs = Array.prototype.slice.call(arguments, 3);
            try {
              func.apply(context, funcArgs);
            } catch (error) {
              this.onError(error);
            }
          };

          {
            // In DEV mode, we swap out invokeGuardedCallback for a special version
            // that plays more nicely with the browser's DevTools. The idea is to preserve
            // "Pause on exceptions" behavior. Because React wraps all user-provided
            // functions in invokeGuardedCallback, and the production version of
            // invokeGuardedCallback uses a try-catch, all user exceptions are treated
            // like caught exceptions, and the DevTools won't pause unless the developer
            // takes the extra step of enabling pause on caught exceptions. This is
            // untintuitive, though, because even though React has caught the error, from
            // the developer's perspective, the error is uncaught.
            //
            // To preserve the expected "Pause on exceptions" behavior, we don't use a
            // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
            // DOM node, and call the user-provided callback from inside an event handler
            // for that fake event. If the callback throws, the error is "captured" using
            // a global event handler. But because the error happens in a different
            // event loop context, it does not interrupt the normal program flow.
            // Effectively, this gives us try-catch behavior without actually using
            // try-catch. Neat!

            // Check that the browser supports the APIs we need to implement our special
            // DEV version of invokeGuardedCallback
            if (
              typeof window !== 'undefined' &&
              typeof window.dispatchEvent === 'function' &&
              typeof document !== 'undefined' &&
              typeof document.createEvent === 'function'
            ) {
              var fakeNode = document.createElement('react');

              var invokeGuardedCallbackDev = function(
                name,
                func,
                context,
                a,
                b,
                c,
                d,
                e,
                f
              ) {
                // If document doesn't exist we know for sure we will crash in this method
                // when we call document.createEvent(). However this can cause confusing
                // errors: https://github.com/facebookincubator/create-react-app/issues/3482
                // So we preemptively throw with a better message instead.
                !(typeof document !== 'undefined')
                  ? invariant(
                      false,
                      'The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.'
                    )
                  : void 0;
                var evt = document.createEvent('Event');

                // Keeps track of whether the user-provided callback threw an error. We
                // set this to true at the beginning, then set it to false right after
                // calling the function. If the function errors, `didError` will never be
                // set to false. This strategy works even if the browser is flaky and
                // fails to call our global error handler, because it doesn't rely on
                // the error event at all.
                var didError = true;

                // Keeps track of the value of window.event so that we can reset it
                // during the callback to let user code access window.event in the
                // browsers that support it.
                var windowEvent = window.event;

                // Create an event handler for our fake event. We will synchronously
                // dispatch our fake event using `dispatchEvent`. Inside the handler, we
                // call the user-provided callback.
                var funcArgs = Array.prototype.slice.call(arguments, 3);
                function callCallback() {
                  // We immediately remove the callback from event listeners so that
                  // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
                  // nested call would trigger the fake event handlers of any call higher
                  // in the stack.
                  fakeNode.removeEventListener(evtType, callCallback, false);

                  // We check for window.hasOwnProperty('event') to prevent the
                  // window.event assignment in both IE <= 10 as they throw an error
                  // "Member not found" in strict mode, and in Firefox which does not
                  // support window.event.
                  if (
                    typeof window.event !== 'undefined' &&
                    window.hasOwnProperty('event')
                  ) {
                    window.event = windowEvent;
                  }

                  func.apply(context, funcArgs);
                  didError = false;
                }

                // Create a global error event handler. We use this to capture the value
                // that was thrown. It's possible that this error handler will fire more
                // than once; for example, if non-React code also calls `dispatchEvent`
                // and a handler for that event throws. We should be resilient to most of
                // those cases. Even if our error event handler fires more than once, the
                // last error event is always used. If the callback actually does error,
                // we know that the last error event is the correct one, because it's not
                // possible for anything else to have happened in between our callback
                // erroring and the code that follows the `dispatchEvent` call below. If
                // the callback doesn't error, but the error event was fired, we know to
                // ignore it because `didError` will be false, as described above.
                var error = void 0;
                // Use this to track whether the error event is ever called.
                var didSetError = false;
                var isCrossOriginError = false;

                function handleWindowError(event) {
                  error = event.error;
                  didSetError = true;
                  if (
                    error === null &&
                    event.colno === 0 &&
                    event.lineno === 0
                  ) {
                    isCrossOriginError = true;
                  }
                  if (event.defaultPrevented) {
                    // Some other error handler has prevented default.
                    // Browsers silence the error report if this happens.
                    // We'll remember this to later decide whether to log it or not.
                    if (error != null && typeof error === 'object') {
                      try {
                        error._suppressLogging = true;
                      } catch (inner) {
                        // Ignore.
                      }
                    }
                  }
                }

                // Create a fake event type.
                var evtType =
                  'react-' + (name ? name : 'invokeguardedcallback');

                // Attach our event handlers
                window.addEventListener('error', handleWindowError);
                fakeNode.addEventListener(evtType, callCallback, false);

                // Synchronously dispatch our fake event. If the user-provided function
                // errors, it will trigger our global error handler.
                evt.initEvent(evtType, false, false);
                fakeNode.dispatchEvent(evt);

                if (didError) {
                  if (!didSetError) {
                    // The callback errored, but the error event never fired.
                    error = new Error(
                      'An error was thrown inside one of your components, but React ' +
                        "doesn't know what it was. This is likely due to browser " +
                        'flakiness. React does its best to preserve the "Pause on ' +
                        'exceptions" behavior of the DevTools, which requires some ' +
                        "DEV-mode only tricks. It's possible that these don't work in " +
                        'your browser. Try triggering the error in production mode, ' +
                        'or switching to a modern browser. If you suspect that this is ' +
                        'actually an issue with React, please file an issue.'
                    );
                  } else if (isCrossOriginError) {
                    error = new Error(
                      "A cross-origin error was thrown. React doesn't have access to " +
                        'the actual error object in development. ' +
                        'See https://fb.me/react-crossorigin-error for more information.'
                    );
                  }
                  this.onError(error);
                }

                // Remove our event listeners
                window.removeEventListener('error', handleWindowError);
              };

              invokeGuardedCallbackImpl = invokeGuardedCallbackDev;
            }
          }

          var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;

          // Used by Fiber to simulate a try-catch.
          var hasError = false;
          var caughtError = null;

          // Used by event system to capture/rethrow the first error.
          var hasRethrowError = false;
          var rethrowError = null;

          var reporter = {
            onError: function(error) {
              hasError = true;
              caughtError = error;
            }
          };

          /**
           * Call a function while guarding against errors that happens within it.
           * Returns an error if it throws, otherwise null.
           *
           * In production, this is implemented using a try-catch. The reason we don't
           * use a try-catch directly is so that we can swap out a different
           * implementation in DEV mode.
           *
           * @param {String} name of the guard to use for logging or debugging
           * @param {Function} func The function to invoke
           * @param {*} context The context to use when calling the function
           * @param {...*} args Arguments for function
           */
          function invokeGuardedCallback(
            name,
            func,
            context,
            a,
            b,
            c,
            d,
            e,
            f
          ) {
            hasError = false;
            caughtError = null;
            invokeGuardedCallbackImpl$1.apply(reporter, arguments);
          }

          /**
           * Same as invokeGuardedCallback, but instead of returning an error, it stores
           * it in a global so it can be rethrown by `rethrowCaughtError` later.
           * TODO: See if caughtError and rethrowError can be unified.
           *
           * @param {String} name of the guard to use for logging or debugging
           * @param {Function} func The function to invoke
           * @param {*} context The context to use when calling the function
           * @param {...*} args Arguments for function
           */
          function invokeGuardedCallbackAndCatchFirstError(
            name,
            func,
            context,
            a,
            b,
            c,
            d,
            e,
            f
          ) {
            invokeGuardedCallback.apply(this, arguments);
            if (hasError) {
              var error = clearCaughtError();
              if (!hasRethrowError) {
                hasRethrowError = true;
                rethrowError = error;
              }
            }
          }

          /**
           * During execution of guarded functions we will capture the first error which
           * we will rethrow to be handled by the top level error handler.
           */
          function rethrowCaughtError() {
            if (hasRethrowError) {
              var error = rethrowError;
              hasRethrowError = false;
              rethrowError = null;
              throw error;
            }
          }

          function hasCaughtError() {
            return hasError;
          }

          function clearCaughtError() {
            if (hasError) {
              var error = caughtError;
              hasError = false;
              caughtError = null;
              return error;
            } else {
              invariant(
                false,
                'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.'
              );
            }
          }

          /**
           * Injectable ordering of event plugins.
           */
          var eventPluginOrder = null;

          /**
           * Injectable mapping from names to event plugin modules.
           */
          var namesToPlugins = {};

          /**
           * Recomputes the plugin list using the injected plugins and plugin ordering.
           *
           * @private
           */
          function recomputePluginOrdering() {
            if (!eventPluginOrder) {
              // Wait until an `eventPluginOrder` is injected.
              return;
            }
            for (var pluginName in namesToPlugins) {
              var pluginModule = namesToPlugins[pluginName];
              var pluginIndex = eventPluginOrder.indexOf(pluginName);
              !(pluginIndex > -1)
                ? invariant(
                    false,
                    'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.',
                    pluginName
                  )
                : void 0;
              if (plugins[pluginIndex]) {
                continue;
              }
              !pluginModule.extractEvents
                ? invariant(
                    false,
                    'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.',
                    pluginName
                  )
                : void 0;
              plugins[pluginIndex] = pluginModule;
              var publishedEvents = pluginModule.eventTypes;
              for (var eventName in publishedEvents) {
                !publishEventForPlugin(
                  publishedEvents[eventName],
                  pluginModule,
                  eventName
                )
                  ? invariant(
                      false,
                      'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
                      eventName,
                      pluginName
                    )
                  : void 0;
              }
            }
          }

          /**
           * Publishes an event so that it can be dispatched by the supplied plugin.
           *
           * @param {object} dispatchConfig Dispatch configuration for the event.
           * @param {object} PluginModule Plugin publishing the event.
           * @return {boolean} True if the event was successfully published.
           * @private
           */
          function publishEventForPlugin(
            dispatchConfig,
            pluginModule,
            eventName
          ) {
            !!eventNameDispatchConfigs.hasOwnProperty(eventName)
              ? invariant(
                  false,
                  'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.',
                  eventName
                )
              : void 0;
            eventNameDispatchConfigs[eventName] = dispatchConfig;

            var phasedRegistrationNames =
              dispatchConfig.phasedRegistrationNames;
            if (phasedRegistrationNames) {
              for (var phaseName in phasedRegistrationNames) {
                if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
                  var phasedRegistrationName =
                    phasedRegistrationNames[phaseName];
                  publishRegistrationName(
                    phasedRegistrationName,
                    pluginModule,
                    eventName
                  );
                }
              }
              return true;
            } else if (dispatchConfig.registrationName) {
              publishRegistrationName(
                dispatchConfig.registrationName,
                pluginModule,
                eventName
              );
              return true;
            }
            return false;
          }

          /**
           * Publishes a registration name that is used to identify dispatched events.
           *
           * @param {string} registrationName Registration name to add.
           * @param {object} PluginModule Plugin publishing the event.
           * @private
           */
          function publishRegistrationName(
            registrationName,
            pluginModule,
            eventName
          ) {
            !!registrationNameModules[registrationName]
              ? invariant(
                  false,
                  'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.',
                  registrationName
                )
              : void 0;
            registrationNameModules[registrationName] = pluginModule;
            registrationNameDependencies[registrationName] =
              pluginModule.eventTypes[eventName].dependencies;

            {
              var lowerCasedName = registrationName.toLowerCase();
              possibleRegistrationNames[lowerCasedName] = registrationName;

              if (registrationName === 'onDoubleClick') {
                possibleRegistrationNames.ondblclick = registrationName;
              }
            }
          }

          /**
           * Registers plugins so that they can extract and dispatch events.
           *
           * @see {EventPluginHub}
           */

          /**
           * Ordered list of injected plugins.
           */
          var plugins = [];

          /**
           * Mapping from event name to dispatch config
           */
          var eventNameDispatchConfigs = {};

          /**
           * Mapping from registration name to plugin module
           */
          var registrationNameModules = {};

          /**
           * Mapping from registration name to event name
           */
          var registrationNameDependencies = {};

          /**
           * Mapping from lowercase registration names to the properly cased version,
           * used to warn in the case of missing event handlers. Available
           * only in true.
           * @type {Object}
           */
          var possibleRegistrationNames = {};
          // Trust the developer to only use possibleRegistrationNames in true

          /**
           * Injects an ordering of plugins (by plugin name). This allows the ordering
           * to be decoupled from injection of the actual plugins so that ordering is
           * always deterministic regardless of packaging, on-the-fly injection, etc.
           *
           * @param {array} InjectedEventPluginOrder
           * @internal
           * @see {EventPluginHub.injection.injectEventPluginOrder}
           */
          function injectEventPluginOrder(injectedEventPluginOrder) {
            !!eventPluginOrder
              ? invariant(
                  false,
                  'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.'
                )
              : void 0;
            // Clone the ordering so it cannot be dynamically mutated.
            eventPluginOrder = Array.prototype.slice.call(
              injectedEventPluginOrder
            );
            recomputePluginOrdering();
          }

          /**
           * Injects plugins to be used by `EventPluginHub`. The plugin names must be
           * in the ordering injected by `injectEventPluginOrder`.
           *
           * Plugins can be injected as part of page initialization or on-the-fly.
           *
           * @param {object} injectedNamesToPlugins Map from names to plugin modules.
           * @internal
           * @see {EventPluginHub.injection.injectEventPluginsByName}
           */
          function injectEventPluginsByName(injectedNamesToPlugins) {
            var isOrderingDirty = false;
            for (var pluginName in injectedNamesToPlugins) {
              if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
                continue;
              }
              var pluginModule = injectedNamesToPlugins[pluginName];
              if (
                !namesToPlugins.hasOwnProperty(pluginName) ||
                namesToPlugins[pluginName] !== pluginModule
              ) {
                !!namesToPlugins[pluginName]
                  ? invariant(
                      false,
                      'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.',
                      pluginName
                    )
                  : void 0;
                namesToPlugins[pluginName] = pluginModule;
                isOrderingDirty = true;
              }
            }
            if (isOrderingDirty) {
              recomputePluginOrdering();
            }
          }

          /**
           * Similar to invariant but only logs a warning if the condition is not met.
           * This can be used to log issues in development environments in critical
           * paths. Removing the logging code for production environments will keep the
           * same logic and follow the same code paths.
           */

          var warningWithoutStack = function() {};

          {
            warningWithoutStack = function(condition, format) {
              for (
                var _len = arguments.length,
                  args = Array(_len > 2 ? _len - 2 : 0),
                  _key = 2;
                _key < _len;
                _key++
              ) {
                args[_key - 2] = arguments[_key];
              }

              if (format === undefined) {
                throw new Error(
                  '`warningWithoutStack(condition, format, ...args)` requires a warning ' +
                    'message argument'
                );
              }
              if (args.length > 8) {
                // Check before the condition to catch violations early.
                throw new Error(
                  'warningWithoutStack() currently supports at most 8 arguments.'
                );
              }
              if (condition) {
                return;
              }
              if (typeof console !== 'undefined') {
                var _args$map = args.map(function(item) {
                    return '' + item;
                  }),
                  a = _args$map[0],
                  b = _args$map[1],
                  c = _args$map[2],
                  d = _args$map[3],
                  e = _args$map[4],
                  f = _args$map[5],
                  g = _args$map[6],
                  h = _args$map[7];

                var message = 'Warning: ' + format;

                // We intentionally don't use spread (or .apply) because it breaks IE9:
                // https://github.com/facebook/react/issues/13610
                switch (args.length) {
                  case 0:
                    console.error(message);
                    break;
                  case 1:
                    console.error(message, a);
                    break;
                  case 2:
                    console.error(message, a, b);
                    break;
                  case 3:
                    console.error(message, a, b, c);
                    break;
                  case 4:
                    console.error(message, a, b, c, d);
                    break;
                  case 5:
                    console.error(message, a, b, c, d, e);
                    break;
                  case 6:
                    console.error(message, a, b, c, d, e, f);
                    break;
                  case 7:
                    console.error(message, a, b, c, d, e, f, g);
                    break;
                  case 8:
                    console.error(message, a, b, c, d, e, f, g, h);
                    break;
                  default:
                    throw new Error(
                      'warningWithoutStack() currently supports at most 8 arguments.'
                    );
                }
              }
              try {
                // --- Welcome to debugging React ---
                // This error was thrown as a convenience so that you can use this stack
                // to find the callsite that caused this warning to fire.
                var argIndex = 0;
                var _message =
                  'Warning: ' +
                  format.replace(/%s/g, function() {
                    return args[argIndex++];
                  });
                throw new Error(_message);
              } catch (x) {}
            };
          }

          var warningWithoutStack$1 = warningWithoutStack;

          var getFiberCurrentPropsFromNode = null;
          var getInstanceFromNode = null;
          var getNodeFromInstance = null;

          function setComponentTree(
            getFiberCurrentPropsFromNodeImpl,
            getInstanceFromNodeImpl,
            getNodeFromInstanceImpl
          ) {
            getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;
            getInstanceFromNode = getInstanceFromNodeImpl;
            getNodeFromInstance = getNodeFromInstanceImpl;
            {
              !(getNodeFromInstance && getInstanceFromNode)
                ? warningWithoutStack$1(
                    false,
                    'EventPluginUtils.setComponentTree(...): Injected ' +
                      'module is missing getNodeFromInstance or getInstanceFromNode.'
                  )
                : void 0;
            }
          }

          var validateEventDispatches = void 0;
          {
            validateEventDispatches = function(event) {
              var dispatchListeners = event._dispatchListeners;
              var dispatchInstances = event._dispatchInstances;

              var listenersIsArr = Array.isArray(dispatchListeners);
              var listenersLen = listenersIsArr
                ? dispatchListeners.length
                : dispatchListeners
                  ? 1
                  : 0;

              var instancesIsArr = Array.isArray(dispatchInstances);
              var instancesLen = instancesIsArr
                ? dispatchInstances.length
                : dispatchInstances
                  ? 1
                  : 0;

              !(
                instancesIsArr === listenersIsArr &&
                instancesLen === listenersLen
              )
                ? warningWithoutStack$1(
                    false,
                    'EventPluginUtils: Invalid `event`.'
                  )
                : void 0;
            };
          }

          /**
           * Dispatch the event to the listener.
           * @param {SyntheticEvent} event SyntheticEvent to handle
           * @param {boolean} simulated If the event is simulated (changes exn behavior)
           * @param {function} listener Application-level callback
           * @param {*} inst Internal component instance
           */
          function executeDispatch(event, simulated, listener, inst) {
            var type = event.type || 'unknown-event';
            event.currentTarget = getNodeFromInstance(inst);
            invokeGuardedCallbackAndCatchFirstError(
              type,
              listener,
              undefined,
              event
            );
            event.currentTarget = null;
          }

          /**
           * Standard/simple iteration through an event's collected dispatches.
           */
          function executeDispatchesInOrder(event, simulated) {
            var dispatchListeners = event._dispatchListeners;
            var dispatchInstances = event._dispatchInstances;
            {
              validateEventDispatches(event);
            }
            if (Array.isArray(dispatchListeners)) {
              for (var i = 0; i < dispatchListeners.length; i++) {
                if (event.isPropagationStopped()) {
                  break;
                }
                // Listeners and Instances are two parallel arrays that are always in sync.
                executeDispatch(
                  event,
                  simulated,
                  dispatchListeners[i],
                  dispatchInstances[i]
                );
              }
            } else if (dispatchListeners) {
              executeDispatch(
                event,
                simulated,
                dispatchListeners,
                dispatchInstances
              );
            }
            event._dispatchListeners = null;
            event._dispatchInstances = null;
          }

          /**
           * @see executeDispatchesInOrderStopAtTrueImpl
           */

          /**
           * Execution of a "direct" dispatch - there must be at most one dispatch
           * accumulated on the event or it is considered an error. It doesn't really make
           * sense for an event with multiple dispatches (bubbled) to keep track of the
           * return values at each dispatch execution, but it does tend to make sense when
           * dealing with "direct" dispatches.
           *
           * @return {*} The return value of executing the single dispatch.
           */

          /**
           * @param {SyntheticEvent} event
           * @return {boolean} True iff number of dispatches accumulated is greater than 0.
           */

          /**
           * Accumulates items that must not be null or undefined into the first one. This
           * is used to conserve memory by avoiding array allocations, and thus sacrifices
           * API cleanness. Since `current` can be null before being passed in and not
           * null after this function, make sure to assign it back to `current`:
           *
           * `a = accumulateInto(a, b);`
           *
           * This API should be sparingly used. Try `accumulate` for something cleaner.
           *
           * @return {*|array<*>} An accumulation of items.
           */

          function accumulateInto(current, next) {
            !(next != null)
              ? invariant(
                  false,
                  'accumulateInto(...): Accumulated items must not be null or undefined.'
                )
              : void 0;

            if (current == null) {
              return next;
            }

            // Both are not empty. Warning: Never call x.concat(y) when you are not
            // certain that x is an Array (x could be a string with concat method).
            if (Array.isArray(current)) {
              if (Array.isArray(next)) {
                current.push.apply(current, next);
                return current;
              }
              current.push(next);
              return current;
            }

            if (Array.isArray(next)) {
              // A bit too dangerous to mutate `next`.
              return [current].concat(next);
            }

            return [current, next];
          }

          /**
           * @param {array} arr an "accumulation" of items which is either an Array or
           * a single item. Useful when paired with the `accumulate` module. This is a
           * simple utility that allows us to reason about a collection of items, but
           * handling the case when there is exactly one item (and we do not need to
           * allocate an array).
           * @param {function} cb Callback invoked with each element or a collection.
           * @param {?} [scope] Scope used as `this` in a callback.
           */
          function forEachAccumulated(arr, cb, scope) {
            if (Array.isArray(arr)) {
              arr.forEach(cb, scope);
            } else if (arr) {
              cb.call(scope, arr);
            }
          }

          /**
           * Internal queue of events that have accumulated their dispatches and are
           * waiting to have their dispatches executed.
           */
          var eventQueue = null;

          /**
           * Dispatches an event and releases it back into the pool, unless persistent.
           *
           * @param {?object} event Synthetic event to be dispatched.
           * @param {boolean} simulated If the event is simulated (changes exn behavior)
           * @private
           */
          var executeDispatchesAndRelease = function(event, simulated) {
            if (event) {
              executeDispatchesInOrder(event, simulated);

              if (!event.isPersistent()) {
                event.constructor.release(event);
              }
            }
          };
          var executeDispatchesAndReleaseSimulated = function(e) {
            return executeDispatchesAndRelease(e, true);
          };
          var executeDispatchesAndReleaseTopLevel = function(e) {
            return executeDispatchesAndRelease(e, false);
          };

          function isInteractive(tag) {
            return (
              tag === 'button' ||
              tag === 'input' ||
              tag === 'select' ||
              tag === 'textarea'
            );
          }

          function shouldPreventMouseEvent(name, type, props) {
            switch (name) {
              case 'onClick':
              case 'onClickCapture':
              case 'onDoubleClick':
              case 'onDoubleClickCapture':
              case 'onMouseDown':
              case 'onMouseDownCapture':
              case 'onMouseMove':
              case 'onMouseMoveCapture':
              case 'onMouseUp':
              case 'onMouseUpCapture':
                return !!(props.disabled && isInteractive(type));
              default:
                return false;
            }
          }

          /**
           * This is a unified interface for event plugins to be installed and configured.
           *
           * Event plugins can implement the following properties:
           *
           *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
           *     Required. When a top-level event is fired, this method is expected to
           *     extract synthetic events that will in turn be queued and dispatched.
           *
           *   `eventTypes` {object}
           *     Optional, plugins that fire events must publish a mapping of registration
           *     names that are used to register listeners. Values of this mapping must
           *     be objects that contain `registrationName` or `phasedRegistrationNames`.
           *
           *   `executeDispatch` {function(object, function, string)}
           *     Optional, allows plugins to override how an event gets dispatched. By
           *     default, the listener is simply invoked.
           *
           * Each plugin that is injected into `EventsPluginHub` is immediately operable.
           *
           * @public
           */

          /**
           * Methods for injecting dependencies.
           */
          var injection = {
            /**
             * @param {array} InjectedEventPluginOrder
             * @public
             */
            injectEventPluginOrder: injectEventPluginOrder,

            /**
             * @param {object} injectedNamesToPlugins Map from names to plugin modules.
             */
            injectEventPluginsByName: injectEventPluginsByName
          };

          /**
           * @param {object} inst The instance, which is the source of events.
           * @param {string} registrationName Name of listener (e.g. `onClick`).
           * @return {?function} The stored callback.
           */
          function getListener(inst, registrationName) {
            var listener = void 0;

            // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
            // live here; needs to be moved to a better place soon
            var stateNode = inst.stateNode;
            if (!stateNode) {
              // Work in progress (ex: onload events in incremental mode).
              return null;
            }
            var props = getFiberCurrentPropsFromNode(stateNode);
            if (!props) {
              // Work in progress.
              return null;
            }
            listener = props[registrationName];
            if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
              return null;
            }
            !(!listener || typeof listener === 'function')
              ? invariant(
                  false,
                  'Expected `%s` listener to be a function, instead got a value of `%s` type.',
                  registrationName,
                  typeof listener
                )
              : void 0;
            return listener;
          }

          /**
           * Allows registered plugins an opportunity to extract events from top-level
           * native browser events.
           *
           * @return {*} An accumulation of synthetic events.
           * @internal
           */
          function extractEvents(
            topLevelType,
            targetInst,
            nativeEvent,
            nativeEventTarget
          ) {
            var events = null;
            for (var i = 0; i < plugins.length; i++) {
              // Not every plugin in the ordering may be loaded at runtime.
              var possiblePlugin = plugins[i];
              if (possiblePlugin) {
                var extractedEvents = possiblePlugin.extractEvents(
                  topLevelType,
                  targetInst,
                  nativeEvent,
                  nativeEventTarget
                );
                if (extractedEvents) {
                  events = accumulateInto(events, extractedEvents);
                }
              }
            }
            return events;
          }

          function runEventsInBatch(events, simulated) {
            if (events !== null) {
              eventQueue = accumulateInto(eventQueue, events);
            }

            // Set `eventQueue` to null before processing it so that we can tell if more
            // events get enqueued while processing.
            var processingEventQueue = eventQueue;
            eventQueue = null;

            if (!processingEventQueue) {
              return;
            }

            if (simulated) {
              forEachAccumulated(
                processingEventQueue,
                executeDispatchesAndReleaseSimulated
              );
            } else {
              forEachAccumulated(
                processingEventQueue,
                executeDispatchesAndReleaseTopLevel
              );
            }
            !!eventQueue
              ? invariant(
                  false,
                  'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.'
                )
              : void 0;
            // This would be a good time to rethrow if any of the event handlers threw.
            rethrowCaughtError();
          }

          function runExtractedEventsInBatch(
            topLevelType,
            targetInst,
            nativeEvent,
            nativeEventTarget
          ) {
            var events = extractEvents(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            );
            runEventsInBatch(events, false);
          }

          var FunctionalComponent = 0;
          var FunctionalComponentLazy = 1;
          var ClassComponent = 2;
          var ClassComponentLazy = 3;
          var IndeterminateComponent = 4; // Before we know whether it is functional or class
          var HostRoot = 5; // Root of a host tree. Could be nested inside another node.
          var HostPortal = 6; // A subtree. Could be an entry point to a different renderer.
          var HostComponent = 7;
          var HostText = 8;
          var Fragment = 9;
          var Mode = 10;
          var ContextConsumer = 11;
          var ContextProvider = 12;
          var ForwardRef = 13;
          var ForwardRefLazy = 14;
          var Profiler = 15;
          var PlaceholderComponent = 16;

          var randomKey = Math.random()
            .toString(36)
            .slice(2);
          var internalInstanceKey = '__reactInternalInstance$' + randomKey;
          var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;

          function precacheFiberNode(hostInst, node) {
            node[internalInstanceKey] = hostInst;
          }

          /**
           * Given a DOM node, return the closest ReactDOMComponent or
           * ReactDOMTextComponent instance ancestor.
           */
          function getClosestInstanceFromNode(node) {
            if (node[internalInstanceKey]) {
              return node[internalInstanceKey];
            }

            while (!node[internalInstanceKey]) {
              if (node.parentNode) {
                node = node.parentNode;
              } else {
                // Top of the tree. This node must not be part of a React tree (or is
                // unmounted, potentially).
                return null;
              }
            }

            var inst = node[internalInstanceKey];
            if (inst.tag === HostComponent || inst.tag === HostText) {
              // In Fiber, this will always be the deepest root.
              return inst;
            }

            return null;
          }

          /**
           * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
           * instance, or null if the node was not rendered by this React.
           */
          function getInstanceFromNode$1(node) {
            var inst = node[internalInstanceKey];
            if (inst) {
              if (inst.tag === HostComponent || inst.tag === HostText) {
                return inst;
              } else {
                return null;
              }
            }
            return null;
          }

          /**
           * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
           * DOM node.
           */
          function getNodeFromInstance$1(inst) {
            if (inst.tag === HostComponent || inst.tag === HostText) {
              // In Fiber this, is just the state node right now. We assume it will be
              // a host component or host text.
              return inst.stateNode;
            }

            // Without this first invariant, passing a non-DOM-component triggers the next
            // invariant for a missing parent, which is super confusing.
            invariant(false, 'getNodeFromInstance: Invalid argument.');
          }

          function getFiberCurrentPropsFromNode$1(node) {
            return node[internalEventHandlersKey] || null;
          }

          function updateFiberProps(node, props) {
            node[internalEventHandlersKey] = props;
          }

          function getParent(inst) {
            do {
              inst = inst.return;
              // TODO: If this is a HostRoot we might want to bail out.
              // That is depending on if we want nested subtrees (layers) to bubble
              // events to their parent. We could also go through parentNode on the
              // host node but that wouldn't work for React Native and doesn't let us
              // do the portal feature.
            } while (inst && inst.tag !== HostComponent);
            if (inst) {
              return inst;
            }
            return null;
          }

          /**
           * Return the lowest common ancestor of A and B, or null if they are in
           * different trees.
           */
          function getLowestCommonAncestor(instA, instB) {
            var depthA = 0;
            for (var tempA = instA; tempA; tempA = getParent(tempA)) {
              depthA++;
            }
            var depthB = 0;
            for (var tempB = instB; tempB; tempB = getParent(tempB)) {
              depthB++;
            }

            // If A is deeper, crawl up.
            while (depthA - depthB > 0) {
              instA = getParent(instA);
              depthA--;
            }

            // If B is deeper, crawl up.
            while (depthB - depthA > 0) {
              instB = getParent(instB);
              depthB--;
            }

            // Walk in lockstep until we find a match.
            var depth = depthA;
            while (depth--) {
              if (instA === instB || instA === instB.alternate) {
                return instA;
              }
              instA = getParent(instA);
              instB = getParent(instB);
            }
            return null;
          }

          /**
           * Return if A is an ancestor of B.
           */

          /**
           * Return the parent instance of the passed-in instance.
           */

          /**
           * Simulates the traversal of a two-phase, capture/bubble event dispatch.
           */
          function traverseTwoPhase(inst, fn, arg) {
            var path = [];
            while (inst) {
              path.push(inst);
              inst = getParent(inst);
            }
            var i = void 0;
            for (i = path.length; i-- > 0; ) {
              fn(path[i], 'captured', arg);
            }
            for (i = 0; i < path.length; i++) {
              fn(path[i], 'bubbled', arg);
            }
          }

          /**
           * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
           * should would receive a `mouseEnter` or `mouseLeave` event.
           *
           * Does not invoke the callback on the nearest common ancestor because nothing
           * "entered" or "left" that element.
           */
          function traverseEnterLeave(from, to, fn, argFrom, argTo) {
            var common = from && to ? getLowestCommonAncestor(from, to) : null;
            var pathFrom = [];
            while (true) {
              if (!from) {
                break;
              }
              if (from === common) {
                break;
              }
              var alternate = from.alternate;
              if (alternate !== null && alternate === common) {
                break;
              }
              pathFrom.push(from);
              from = getParent(from);
            }
            var pathTo = [];
            while (true) {
              if (!to) {
                break;
              }
              if (to === common) {
                break;
              }
              var _alternate = to.alternate;
              if (_alternate !== null && _alternate === common) {
                break;
              }
              pathTo.push(to);
              to = getParent(to);
            }
            for (var i = 0; i < pathFrom.length; i++) {
              fn(pathFrom[i], 'bubbled', argFrom);
            }
            for (var _i = pathTo.length; _i-- > 0; ) {
              fn(pathTo[_i], 'captured', argTo);
            }
          }

          /**
           * Some event types have a notion of different registration names for different
           * "phases" of propagation. This finds listeners by a given phase.
           */
          function listenerAtPhase(inst, event, propagationPhase) {
            var registrationName =
              event.dispatchConfig.phasedRegistrationNames[propagationPhase];
            return getListener(inst, registrationName);
          }

          /**
           * A small set of propagation patterns, each of which will accept a small amount
           * of information, and generate a set of "dispatch ready event objects" - which
           * are sets of events that have already been annotated with a set of dispatched
           * listener functions/ids. The API is designed this way to discourage these
           * propagation strategies from actually executing the dispatches, since we
           * always want to collect the entire set of dispatches before executing even a
           * single one.
           */

          /**
           * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
           * here, allows us to not have to bind or create functions for each event.
           * Mutating the event's members allows us to not have to create a wrapping
           * "dispatch" object that pairs the event with the listener.
           */
          function accumulateDirectionalDispatches(inst, phase, event) {
            {
              !inst
                ? warningWithoutStack$1(
                    false,
                    'Dispatching inst must not be null'
                  )
                : void 0;
            }
            var listener = listenerAtPhase(inst, event, phase);
            if (listener) {
              event._dispatchListeners = accumulateInto(
                event._dispatchListeners,
                listener
              );
              event._dispatchInstances = accumulateInto(
                event._dispatchInstances,
                inst
              );
            }
          }

          /**
           * Collect dispatches (must be entirely collected before dispatching - see unit
           * tests). Lazily allocate the array to conserve memory.  We must loop through
           * each event and perform the traversal for each one. We cannot perform a
           * single traversal for the entire collection of events because each event may
           * have a different target.
           */
          function accumulateTwoPhaseDispatchesSingle(event) {
            if (event && event.dispatchConfig.phasedRegistrationNames) {
              traverseTwoPhase(
                event._targetInst,
                accumulateDirectionalDispatches,
                event
              );
            }
          }

          /**
           * Accumulates without regard to direction, does not look for phased
           * registration names. Same as `accumulateDirectDispatchesSingle` but without
           * requiring that the `dispatchMarker` be the same as the dispatched ID.
           */
          function accumulateDispatches(inst, ignoredDirection, event) {
            if (inst && event && event.dispatchConfig.registrationName) {
              var registrationName = event.dispatchConfig.registrationName;
              var listener = getListener(inst, registrationName);
              if (listener) {
                event._dispatchListeners = accumulateInto(
                  event._dispatchListeners,
                  listener
                );
                event._dispatchInstances = accumulateInto(
                  event._dispatchInstances,
                  inst
                );
              }
            }
          }

          /**
           * Accumulates dispatches on an `SyntheticEvent`, but only for the
           * `dispatchMarker`.
           * @param {SyntheticEvent} event
           */
          function accumulateDirectDispatchesSingle(event) {
            if (event && event.dispatchConfig.registrationName) {
              accumulateDispatches(event._targetInst, null, event);
            }
          }

          function accumulateTwoPhaseDispatches(events) {
            forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
          }

          function accumulateEnterLeaveDispatches(leave, enter, from, to) {
            traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
          }

          function accumulateDirectDispatches(events) {
            forEachAccumulated(events, accumulateDirectDispatchesSingle);
          }

          var canUseDOM = !!(
            typeof window !== 'undefined' &&
            window.document &&
            window.document.createElement
          );

          // Do not uses the below two methods directly!
          // Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.
          // (It is the only module that is allowed to access these methods.)

          function unsafeCastStringToDOMTopLevelType(topLevelType) {
            return topLevelType;
          }

          function unsafeCastDOMTopLevelTypeToString(topLevelType) {
            return topLevelType;
          }

          /**
           * Generate a mapping of standard vendor prefixes using the defined style property and event name.
           *
           * @param {string} styleProp
           * @param {string} eventName
           * @returns {object}
           */
          function makePrefixMap(styleProp, eventName) {
            var prefixes = {};

            prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
            prefixes['Webkit' + styleProp] = 'webkit' + eventName;
            prefixes['Moz' + styleProp] = 'moz' + eventName;

            return prefixes;
          }

          /**
           * A list of event names to a configurable list of vendor prefixes.
           */
          var vendorPrefixes = {
            animationend: makePrefixMap('Animation', 'AnimationEnd'),
            animationiteration: makePrefixMap(
              'Animation',
              'AnimationIteration'
            ),
            animationstart: makePrefixMap('Animation', 'AnimationStart'),
            transitionend: makePrefixMap('Transition', 'TransitionEnd')
          };

          /**
           * Event names that have already been detected and prefixed (if applicable).
           */
          var prefixedEventNames = {};

          /**
           * Element to check for prefixes on.
           */
          var style = {};

          /**
           * Bootstrap if a DOM exists.
           */
          if (canUseDOM) {
            style = document.createElement('div').style;

            // On some platforms, in particular some releases of Android 4.x,
            // the un-prefixed "animation" and "transition" properties are defined on the
            // style object but the events that fire will still be prefixed, so we need
            // to check if the un-prefixed events are usable, and if not remove them from the map.
            if (!('AnimationEvent' in window)) {
              delete vendorPrefixes.animationend.animation;
              delete vendorPrefixes.animationiteration.animation;
              delete vendorPrefixes.animationstart.animation;
            }

            // Same as above
            if (!('TransitionEvent' in window)) {
              delete vendorPrefixes.transitionend.transition;
            }
          }

          /**
           * Attempts to determine the correct vendor prefixed event name.
           *
           * @param {string} eventName
           * @returns {string}
           */
          function getVendorPrefixedEventName(eventName) {
            if (prefixedEventNames[eventName]) {
              return prefixedEventNames[eventName];
            } else if (!vendorPrefixes[eventName]) {
              return eventName;
            }

            var prefixMap = vendorPrefixes[eventName];

            for (var styleProp in prefixMap) {
              if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
                return (prefixedEventNames[eventName] = prefixMap[styleProp]);
              }
            }

            return eventName;
          }

          /**
           * To identify top level events in ReactDOM, we use constants defined by this
           * module. This is the only module that uses the unsafe* methods to express
           * that the constants actually correspond to the browser event names. This lets
           * us save some bundle size by avoiding a top level type -> event name map.
           * The rest of ReactDOM code should import top level types from this file.
           */
          var TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');
          var TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(
            getVendorPrefixedEventName('animationend')
          );
          var TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(
            getVendorPrefixedEventName('animationiteration')
          );
          var TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(
            getVendorPrefixedEventName('animationstart')
          );
          var TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');
          var TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');
          var TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType(
            'canplaythrough'
          );
          var TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');
          var TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');
          var TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');
          var TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');
          var TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType(
            'compositionend'
          );
          var TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType(
            'compositionstart'
          );
          var TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType(
            'compositionupdate'
          );
          var TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType(
            'contextmenu'
          );
          var TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');
          var TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');
          var TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');
          var TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');
          var TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');
          var TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');
          var TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');
          var TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');
          var TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');
          var TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');
          var TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');
          var TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');
          var TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType(
            'durationchange'
          );
          var TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');
          var TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');
          var TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');
          var TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');
          var TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');
          var TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType(
            'gotpointercapture'
          );
          var TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');
          var TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');
          var TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');
          var TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');
          var TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');
          var TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');
          var TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');
          var TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');
          var TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType(
            'loadedmetadata'
          );
          var TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType(
            'lostpointercapture'
          );
          var TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');
          var TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');
          var TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');
          var TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');
          var TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');
          var TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');
          var TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');
          var TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');
          var TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');
          var TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType(
            'pointercancel'
          );
          var TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType(
            'pointerdown'
          );

          var TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType(
            'pointermove'
          );
          var TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');
          var TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType(
            'pointerover'
          );
          var TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');
          var TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');
          var TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');
          var TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');
          var TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');
          var TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');
          var TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');
          var TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType(
            'selectionchange'
          );
          var TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');
          var TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');
          var TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');
          var TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');
          var TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');
          var TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');
          var TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType(
            'touchcancel'
          );
          var TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');
          var TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');
          var TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');
          var TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(
            getVendorPrefixedEventName('transitionend')
          );
          var TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType(
            'volumechange'
          );
          var TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');
          var TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel');

          // List of events that need to be individually attached to media elements.
          // Note that events in this list will *not* be listened to at the top level
          // unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.
          var mediaEventTypes = [
            TOP_ABORT,
            TOP_CAN_PLAY,
            TOP_CAN_PLAY_THROUGH,
            TOP_DURATION_CHANGE,
            TOP_EMPTIED,
            TOP_ENCRYPTED,
            TOP_ENDED,
            TOP_ERROR,
            TOP_LOADED_DATA,
            TOP_LOADED_METADATA,
            TOP_LOAD_START,
            TOP_PAUSE,
            TOP_PLAY,
            TOP_PLAYING,
            TOP_PROGRESS,
            TOP_RATE_CHANGE,
            TOP_SEEKED,
            TOP_SEEKING,
            TOP_STALLED,
            TOP_SUSPEND,
            TOP_TIME_UPDATE,
            TOP_VOLUME_CHANGE,
            TOP_WAITING
          ];

          function getRawEventName(topLevelType) {
            return unsafeCastDOMTopLevelTypeToString(topLevelType);
          }

          /**
           * These variables store information about text content of a target node,
           * allowing comparison of content before and after a given event.
           *
           * Identify the node where selection currently begins, then observe
           * both its text content and its current position in the DOM. Since the
           * browser may natively replace the target node during composition, we can
           * use its position to find its replacement.
           *
           *
           */

          var root = null;
          var startText = null;
          var fallbackText = null;

          function initialize(nativeEventTarget) {
            root = nativeEventTarget;
            startText = getText();
            return true;
          }

          function reset() {
            root = null;
            startText = null;
            fallbackText = null;
          }

          function getData() {
            if (fallbackText) {
              return fallbackText;
            }

            var start = void 0;
            var startValue = startText;
            var startLength = startValue.length;
            var end = void 0;
            var endValue = getText();
            var endLength = endValue.length;

            for (start = 0; start < startLength; start++) {
              if (startValue[start] !== endValue[start]) {
                break;
              }
            }

            var minEnd = startLength - start;
            for (end = 1; end <= minEnd; end++) {
              if (startValue[startLength - end] !== endValue[endLength - end]) {
                break;
              }
            }

            var sliceTail = end > 1 ? 1 - end : undefined;
            fallbackText = endValue.slice(start, sliceTail);
            return fallbackText;
          }

          function getText() {
            if ('value' in root) {
              return root.value;
            }
            return root.textContent;
          }

          /* eslint valid-typeof: 0 */

          var EVENT_POOL_SIZE = 10;

          /**
           * @interface Event
           * @see http://www.w3.org/TR/DOM-Level-3-Events/
           */
          var EventInterface = {
            type: null,
            target: null,
            // currentTarget is set when dispatching; no use in copying it here
            currentTarget: function() {
              return null;
            },
            eventPhase: null,
            bubbles: null,
            cancelable: null,
            timeStamp: function(event) {
              return event.timeStamp || Date.now();
            },
            defaultPrevented: null,
            isTrusted: null
          };

          function functionThatReturnsTrue() {
            return true;
          }

          function functionThatReturnsFalse() {
            return false;
          }

          /**
           * Synthetic events are dispatched by event plugins, typically in response to a
           * top-level event delegation handler.
           *
           * These systems should generally use pooling to reduce the frequency of garbage
           * collection. The system should check `isPersistent` to determine whether the
           * event should be released into the pool after being dispatched. Users that
           * need a persisted event should invoke `persist`.
           *
           * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
           * normalizing browser quirks. Subclasses do not necessarily have to implement a
           * DOM interface; custom application-specific events can also subclass this.
           *
           * @param {object} dispatchConfig Configuration used to dispatch this event.
           * @param {*} targetInst Marker identifying the event target.
           * @param {object} nativeEvent Native browser event.
           * @param {DOMEventTarget} nativeEventTarget Target node.
           */
          function SyntheticEvent(
            dispatchConfig,
            targetInst,
            nativeEvent,
            nativeEventTarget
          ) {
            {
              // these have a getter/setter for warnings
              delete this.nativeEvent;
              delete this.preventDefault;
              delete this.stopPropagation;
              delete this.isDefaultPrevented;
              delete this.isPropagationStopped;
            }

            this.dispatchConfig = dispatchConfig;
            this._targetInst = targetInst;
            this.nativeEvent = nativeEvent;

            var Interface = this.constructor.Interface;
            for (var propName in Interface) {
              if (!Interface.hasOwnProperty(propName)) {
                continue;
              }
              {
                delete this[propName]; // this has a getter/setter for warnings
              }
              var normalize = Interface[propName];
              if (normalize) {
                this[propName] = normalize(nativeEvent);
              } else {
                if (propName === 'target') {
                  this.target = nativeEventTarget;
                } else {
                  this[propName] = nativeEvent[propName];
                }
              }
            }

            var defaultPrevented =
              nativeEvent.defaultPrevented != null
                ? nativeEvent.defaultPrevented
                : nativeEvent.returnValue === false;
            if (defaultPrevented) {
              this.isDefaultPrevented = functionThatReturnsTrue;
            } else {
              this.isDefaultPrevented = functionThatReturnsFalse;
            }
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
          }

          _assign(SyntheticEvent.prototype, {
            preventDefault: function() {
              this.defaultPrevented = true;
              var event = this.nativeEvent;
              if (!event) {
                return;
              }

              if (event.preventDefault) {
                event.preventDefault();
              } else if (typeof event.returnValue !== 'unknown') {
                event.returnValue = false;
              }
              this.isDefaultPrevented = functionThatReturnsTrue;
            },

            stopPropagation: function() {
              var event = this.nativeEvent;
              if (!event) {
                return;
              }

              if (event.stopPropagation) {
                event.stopPropagation();
              } else if (typeof event.cancelBubble !== 'unknown') {
                // The ChangeEventPlugin registers a "propertychange" event for
                // IE. This event does not support bubbling or cancelling, and
                // any references to cancelBubble throw "Member not found".  A
                // typeof check of "unknown" circumvents this issue (and is also
                // IE specific).
                event.cancelBubble = true;
              }

              this.isPropagationStopped = functionThatReturnsTrue;
            },

            /**
             * We release all dispatched `SyntheticEvent`s after each event loop, adding
             * them back into the pool. This allows a way to hold onto a reference that
             * won't be added back into the pool.
             */
            persist: function() {
              this.isPersistent = functionThatReturnsTrue;
            },

            /**
             * Checks if this event should be released back into the pool.
             *
             * @return {boolean} True if this should not be released, false otherwise.
             */
            isPersistent: functionThatReturnsFalse,

            /**
             * `PooledClass` looks for `destructor` on each instance it releases.
             */
            destructor: function() {
              var Interface = this.constructor.Interface;
              for (var propName in Interface) {
                {
                  Object.defineProperty(
                    this,
                    propName,
                    getPooledWarningPropertyDefinition(
                      propName,
                      Interface[propName]
                    )
                  );
                }
              }
              this.dispatchConfig = null;
              this._targetInst = null;
              this.nativeEvent = null;
              this.isDefaultPrevented = functionThatReturnsFalse;
              this.isPropagationStopped = functionThatReturnsFalse;
              this._dispatchListeners = null;
              this._dispatchInstances = null;
              {
                Object.defineProperty(
                  this,
                  'nativeEvent',
                  getPooledWarningPropertyDefinition('nativeEvent', null)
                );
                Object.defineProperty(
                  this,
                  'isDefaultPrevented',
                  getPooledWarningPropertyDefinition(
                    'isDefaultPrevented',
                    functionThatReturnsFalse
                  )
                );
                Object.defineProperty(
                  this,
                  'isPropagationStopped',
                  getPooledWarningPropertyDefinition(
                    'isPropagationStopped',
                    functionThatReturnsFalse
                  )
                );
                Object.defineProperty(
                  this,
                  'preventDefault',
                  getPooledWarningPropertyDefinition(
                    'preventDefault',
                    function() {}
                  )
                );
                Object.defineProperty(
                  this,
                  'stopPropagation',
                  getPooledWarningPropertyDefinition(
                    'stopPropagation',
                    function() {}
                  )
                );
              }
            }
          });

          SyntheticEvent.Interface = EventInterface;

          /**
           * Helper to reduce boilerplate when creating subclasses.
           */
          SyntheticEvent.extend = function(Interface) {
            var Super = this;

            var E = function() {};
            E.prototype = Super.prototype;
            var prototype = new E();

            function Class() {
              return Super.apply(this, arguments);
            }
            _assign(prototype, Class.prototype);
            Class.prototype = prototype;
            Class.prototype.constructor = Class;

            Class.Interface = _assign({}, Super.Interface, Interface);
            Class.extend = Super.extend;
            addEventPoolingTo(Class);

            return Class;
          };

          addEventPoolingTo(SyntheticEvent);

          /**
           * Helper to nullify syntheticEvent instance properties when destructing
           *
           * @param {String} propName
           * @param {?object} getVal
           * @return {object} defineProperty object
           */
          function getPooledWarningPropertyDefinition(propName, getVal) {
            var isFunction = typeof getVal === 'function';
            return {
              configurable: true,
              set: set,
              get: get
            };

            function set(val) {
              var action = isFunction
                ? 'setting the method'
                : 'setting the property';
              warn(action, 'This is effectively a no-op');
              return val;
            }

            function get() {
              var action = isFunction
                ? 'accessing the method'
                : 'accessing the property';
              var result = isFunction
                ? 'This is a no-op function'
                : 'This is set to null';
              warn(action, result);
              return getVal;
            }

            function warn(action, result) {
              var warningCondition = false;
              !warningCondition
                ? warningWithoutStack$1(
                    false,
                    "This synthetic event is reused for performance reasons. If you're seeing this, " +
                      "you're %s `%s` on a released/nullified synthetic event. %s. " +
                      'If you must keep the original synthetic event around, use event.persist(). ' +
                      'See https://fb.me/react-event-pooling for more information.',
                    action,
                    propName,
                    result
                  )
                : void 0;
            }
          }

          function getPooledEvent(
            dispatchConfig,
            targetInst,
            nativeEvent,
            nativeInst
          ) {
            var EventConstructor = this;
            if (EventConstructor.eventPool.length) {
              var instance = EventConstructor.eventPool.pop();
              EventConstructor.call(
                instance,
                dispatchConfig,
                targetInst,
                nativeEvent,
                nativeInst
              );
              return instance;
            }
            return new EventConstructor(
              dispatchConfig,
              targetInst,
              nativeEvent,
              nativeInst
            );
          }

          function releasePooledEvent(event) {
            var EventConstructor = this;
            !(event instanceof EventConstructor)
              ? invariant(
                  false,
                  'Trying to release an event instance into a pool of a different type.'
                )
              : void 0;
            event.destructor();
            if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
              EventConstructor.eventPool.push(event);
            }
          }

          function addEventPoolingTo(EventConstructor) {
            EventConstructor.eventPool = [];
            EventConstructor.getPooled = getPooledEvent;
            EventConstructor.release = releasePooledEvent;
          }

          /**
           * @interface Event
           * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
           */
          var SyntheticCompositionEvent = SyntheticEvent.extend({
            data: null
          });

          /**
           * @interface Event
           * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
           *      /#events-inputevents
           */
          var SyntheticInputEvent = SyntheticEvent.extend({
            data: null
          });

          var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
          var START_KEYCODE = 229;

          var canUseCompositionEvent =
            canUseDOM && 'CompositionEvent' in window;

          var documentMode = null;
          if (canUseDOM && 'documentMode' in document) {
            documentMode = document.documentMode;
          }

          // Webkit offers a very useful `textInput` event that can be used to
          // directly represent `beforeInput`. The IE `textinput` event is not as
          // useful, so we don't use it.
          var canUseTextInputEvent =
            canUseDOM && 'TextEvent' in window && !documentMode;

          // In IE9+, we have access to composition events, but the data supplied
          // by the native compositionend event may be incorrect. Japanese ideographic
          // spaces, for instance (\u3000) are not recorded correctly.
          var useFallbackCompositionData =
            canUseDOM &&
            (!canUseCompositionEvent ||
              (documentMode && documentMode > 8 && documentMode <= 11));

          var SPACEBAR_CODE = 32;
          var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

          // Events and their corresponding property names.
          var eventTypes = {
            beforeInput: {
              phasedRegistrationNames: {
                bubbled: 'onBeforeInput',
                captured: 'onBeforeInputCapture'
              },
              dependencies: [
                TOP_COMPOSITION_END,
                TOP_KEY_PRESS,
                TOP_TEXT_INPUT,
                TOP_PASTE
              ]
            },
            compositionEnd: {
              phasedRegistrationNames: {
                bubbled: 'onCompositionEnd',
                captured: 'onCompositionEndCapture'
              },
              dependencies: [
                TOP_BLUR,
                TOP_COMPOSITION_END,
                TOP_KEY_DOWN,
                TOP_KEY_PRESS,
                TOP_KEY_UP,
                TOP_MOUSE_DOWN
              ]
            },
            compositionStart: {
              phasedRegistrationNames: {
                bubbled: 'onCompositionStart',
                captured: 'onCompositionStartCapture'
              },
              dependencies: [
                TOP_BLUR,
                TOP_COMPOSITION_START,
                TOP_KEY_DOWN,
                TOP_KEY_PRESS,
                TOP_KEY_UP,
                TOP_MOUSE_DOWN
              ]
            },
            compositionUpdate: {
              phasedRegistrationNames: {
                bubbled: 'onCompositionUpdate',
                captured: 'onCompositionUpdateCapture'
              },
              dependencies: [
                TOP_BLUR,
                TOP_COMPOSITION_UPDATE,
                TOP_KEY_DOWN,
                TOP_KEY_PRESS,
                TOP_KEY_UP,
                TOP_MOUSE_DOWN
              ]
            }
          };

          // Track whether we've ever handled a keypress on the space key.
          var hasSpaceKeypress = false;

          /**
           * Return whether a native keypress event is assumed to be a command.
           * This is required because Firefox fires `keypress` events for key commands
           * (cut, copy, select-all, etc.) even though no character is inserted.
           */
          function isKeypressCommand(nativeEvent) {
            return (
              (nativeEvent.ctrlKey ||
                nativeEvent.altKey ||
                nativeEvent.metaKey) &&
              // ctrlKey && altKey is equivalent to AltGr, and is not a command.
              !(nativeEvent.ctrlKey && nativeEvent.altKey)
            );
          }

          /**
           * Translate native top level events into event types.
           *
           * @param {string} topLevelType
           * @return {object}
           */
          function getCompositionEventType(topLevelType) {
            switch (topLevelType) {
              case TOP_COMPOSITION_START:
                return eventTypes.compositionStart;
              case TOP_COMPOSITION_END:
                return eventTypes.compositionEnd;
              case TOP_COMPOSITION_UPDATE:
                return eventTypes.compositionUpdate;
            }
          }

          /**
           * Does our fallback best-guess model think this event signifies that
           * composition has begun?
           *
           * @param {string} topLevelType
           * @param {object} nativeEvent
           * @return {boolean}
           */
          function isFallbackCompositionStart(topLevelType, nativeEvent) {
            return (
              topLevelType === TOP_KEY_DOWN &&
              nativeEvent.keyCode === START_KEYCODE
            );
          }

          /**
           * Does our fallback mode think that this event is the end of composition?
           *
           * @param {string} topLevelType
           * @param {object} nativeEvent
           * @return {boolean}
           */
          function isFallbackCompositionEnd(topLevelType, nativeEvent) {
            switch (topLevelType) {
              case TOP_KEY_UP:
                // Command keys insert or clear IME input.
                return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
              case TOP_KEY_DOWN:
                // Expect IME keyCode on each keydown. If we get any other
                // code we must have exited earlier.
                return nativeEvent.keyCode !== START_KEYCODE;
              case TOP_KEY_PRESS:
              case TOP_MOUSE_DOWN:
              case TOP_BLUR:
                // Events are not possible without cancelling IME.
                return true;
              default:
                return false;
            }
          }

          /**
           * Google Input Tools provides composition data via a CustomEvent,
           * with the `data` property populated in the `detail` object. If this
           * is available on the event object, use it. If not, this is a plain
           * composition event and we have nothing special to extract.
           *
           * @param {object} nativeEvent
           * @return {?string}
           */
          function getDataFromCustomEvent(nativeEvent) {
            var detail = nativeEvent.detail;
            if (typeof detail === 'object' && 'data' in detail) {
              return detail.data;
            }
            return null;
          }

          /**
           * Check if a composition event was triggered by Korean IME.
           * Our fallback mode does not work well with IE's Korean IME,
           * so just use native composition events when Korean IME is used.
           * Although CompositionEvent.locale property is deprecated,
           * it is available in IE, where our fallback mode is enabled.
           *
           * @param {object} nativeEvent
           * @return {boolean}
           */
          function isUsingKoreanIME(nativeEvent) {
            return nativeEvent.locale === 'ko';
          }

          // Track the current IME composition status, if any.
          var isComposing = false;

          /**
           * @return {?object} A SyntheticCompositionEvent.
           */
          function extractCompositionEvent(
            topLevelType,
            targetInst,
            nativeEvent,
            nativeEventTarget
          ) {
            var eventType = void 0;
            var fallbackData = void 0;

            if (canUseCompositionEvent) {
              eventType = getCompositionEventType(topLevelType);
            } else if (!isComposing) {
              if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
                eventType = eventTypes.compositionStart;
              }
            } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
              eventType = eventTypes.compositionEnd;
            }

            if (!eventType) {
              return null;
            }

            if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
              // The current composition is stored statically and must not be
              // overwritten while composition continues.
              if (!isComposing && eventType === eventTypes.compositionStart) {
                isComposing = initialize(nativeEventTarget);
              } else if (eventType === eventTypes.compositionEnd) {
                if (isComposing) {
                  fallbackData = getData();
                }
              }
            }

            var event = SyntheticCompositionEvent.getPooled(
              eventType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            );

            if (fallbackData) {
              // Inject data generated from fallback path into the synthetic event.
              // This matches the property of native CompositionEventInterface.
              event.data = fallbackData;
            } else {
              var customData = getDataFromCustomEvent(nativeEvent);
              if (customData !== null) {
                event.data = customData;
              }
            }

            accumulateTwoPhaseDispatches(event);
            return event;
          }

          /**
           * @param {TopLevelType} topLevelType Number from `TopLevelType`.
           * @param {object} nativeEvent Native browser event.
           * @return {?string} The string corresponding to this `beforeInput` event.
           */
          function getNativeBeforeInputChars(topLevelType, nativeEvent) {
            switch (topLevelType) {
              case TOP_COMPOSITION_END:
                return getDataFromCustomEvent(nativeEvent);
              case TOP_KEY_PRESS:
                /**
                 * If native `textInput` events are available, our goal is to make
                 * use of them. However, there is a special case: the spacebar key.
                 * In Webkit, preventing default on a spacebar `textInput` event
                 * cancels character insertion, but it *also* causes the browser
                 * to fall back to its default spacebar behavior of scrolling the
                 * page.
                 *
                 * Tracking at:
                 * https://code.google.com/p/chromium/issues/detail?id=355103
                 *
                 * To avoid this issue, use the keypress event as if no `textInput`
                 * event is available.
                 */
                var which = nativeEvent.which;
                if (which !== SPACEBAR_CODE) {
                  return null;
                }

                hasSpaceKeypress = true;
                return SPACEBAR_CHAR;

              case TOP_TEXT_INPUT:
                // Record the characters to be added to the DOM.
                var chars = nativeEvent.data;

                // If it's a spacebar character, assume that we have already handled
                // it at the keypress level and bail immediately. Android Chrome
                // doesn't give us keycodes, so we need to ignore it.
                if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
                  return null;
                }

                return chars;

              default:
                // For other native event types, do nothing.
                return null;
            }
          }

          /**
           * For browsers that do not provide the `textInput` event, extract the
           * appropriate string to use for SyntheticInputEvent.
           *
           * @param {number} topLevelType Number from `TopLevelEventTypes`.
           * @param {object} nativeEvent Native browser event.
           * @return {?string} The fallback string for this `beforeInput` event.
           */
          function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
            // If we are currently composing (IME) and using a fallback to do so,
            // try to extract the composed characters from the fallback object.
            // If composition event is available, we extract a string only at
            // compositionevent, otherwise extract it at fallback events.
            if (isComposing) {
              if (
                topLevelType === TOP_COMPOSITION_END ||
                (!canUseCompositionEvent &&
                  isFallbackCompositionEnd(topLevelType, nativeEvent))
              ) {
                var chars = getData();
                reset();
                isComposing = false;
                return chars;
              }
              return null;
            }

            switch (topLevelType) {
              case TOP_PASTE:
                // If a paste event occurs after a keypress, throw out the input
                // chars. Paste events should not lead to BeforeInput events.
                return null;
              case TOP_KEY_PRESS:
                /**
                 * As of v27, Firefox may fire keypress events even when no character
                 * will be inserted. A few possibilities:
                 *
                 * - `which` is `0`. Arrow keys, Esc key, etc.
                 *
                 * - `which` is the pressed key code, but no char is available.
                 *   Ex: 'AltGr + d` in Polish. There is no modified character for
                 *   this key combination and no character is inserted into the
                 *   document, but FF fires the keypress for char code `100` anyway.
                 *   No `input` event will occur.
                 *
                 * - `which` is the pressed key code, but a command combination is
                 *   being used. Ex: `Cmd+C`. No character is inserted, and no
                 *   `input` event will occur.
                 */
                if (!isKeypressCommand(nativeEvent)) {
                  // IE fires the `keypress` event when a user types an emoji via
                  // Touch keyboard of Windows.  In such a case, the `char` property
                  // holds an emoji character like `\uD83D\uDE0A`.  Because its length
                  // is 2, the property `which` does not represent an emoji correctly.
                  // In such a case, we directly return the `char` property instead of
                  // using `which`.
                  if (nativeEvent.char && nativeEvent.char.length > 1) {
                    return nativeEvent.char;
                  } else if (nativeEvent.which) {
                    return String.fromCharCode(nativeEvent.which);
                  }
                }
                return null;
              case TOP_COMPOSITION_END:
                return useFallbackCompositionData &&
                  !isUsingKoreanIME(nativeEvent)
                  ? null
                  : nativeEvent.data;
              default:
                return null;
            }
          }

          /**
           * Extract a SyntheticInputEvent for `beforeInput`, based on either native
           * `textInput` or fallback behavior.
           *
           * @return {?object} A SyntheticInputEvent.
           */
          function extractBeforeInputEvent(
            topLevelType,
            targetInst,
            nativeEvent,
            nativeEventTarget
          ) {
            var chars = void 0;

            if (canUseTextInputEvent) {
              chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
            } else {
              chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
            }

            // If no characters are being inserted, no BeforeInput event should
            // be fired.
            if (!chars) {
              return null;
            }

            var event = SyntheticInputEvent.getPooled(
              eventTypes.beforeInput,
              targetInst,
              nativeEvent,
              nativeEventTarget
            );

            event.data = chars;
            accumulateTwoPhaseDispatches(event);
            return event;
          }

          /**
           * Create an `onBeforeInput` event to match
           * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
           *
           * This event plugin is based on the native `textInput` event
           * available in Chrome, Safari, Opera, and IE. This event fires after
           * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
           *
           * `beforeInput` is spec'd but not implemented in any browsers, and
           * the `input` event does not provide any useful information about what has
           * actually been added, contrary to the spec. Thus, `textInput` is the best
           * available event to identify the characters that have actually been inserted
           * into the target node.
           *
           * This plugin is also responsible for emitting `composition` events, thus
           * allowing us to share composition fallback code for both `beforeInput` and
           * `composition` event types.
           */
          var BeforeInputEventPlugin = {
            eventTypes: eventTypes,

            extractEvents: function(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            ) {
              var composition = extractCompositionEvent(
                topLevelType,
                targetInst,
                nativeEvent,
                nativeEventTarget
              );

              var beforeInput = extractBeforeInputEvent(
                topLevelType,
                targetInst,
                nativeEvent,
                nativeEventTarget
              );

              if (composition === null) {
                return beforeInput;
              }

              if (beforeInput === null) {
                return composition;
              }

              return [composition, beforeInput];
            }
          };

          // Use to restore controlled state after a change event has fired.

          var restoreImpl = null;
          var restoreTarget = null;
          var restoreQueue = null;

          function restoreStateOfTarget(target) {
            // We perform this translation at the end of the event loop so that we
            // always receive the correct fiber here
            var internalInstance = getInstanceFromNode(target);
            if (!internalInstance) {
              // Unmounted
              return;
            }
            !(typeof restoreImpl === 'function')
              ? invariant(
                  false,
                  'setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.'
                )
              : void 0;
            var props = getFiberCurrentPropsFromNode(
              internalInstance.stateNode
            );
            restoreImpl(
              internalInstance.stateNode,
              internalInstance.type,
              props
            );
          }

          function setRestoreImplementation(impl) {
            restoreImpl = impl;
          }

          function enqueueStateRestore(target) {
            if (restoreTarget) {
              if (restoreQueue) {
                restoreQueue.push(target);
              } else {
                restoreQueue = [target];
              }
            } else {
              restoreTarget = target;
            }
          }

          function needsStateRestore() {
            return restoreTarget !== null || restoreQueue !== null;
          }

          function restoreStateIfNeeded() {
            if (!restoreTarget) {
              return;
            }
            var target = restoreTarget;
            var queuedTargets = restoreQueue;
            restoreTarget = null;
            restoreQueue = null;

            restoreStateOfTarget(target);
            if (queuedTargets) {
              for (var i = 0; i < queuedTargets.length; i++) {
                restoreStateOfTarget(queuedTargets[i]);
              }
            }
          }

          // Used as a way to call batchedUpdates when we don't have a reference to
          // the renderer. Such as when we're dispatching events or if third party
          // libraries need to call batchedUpdates. Eventually, this API will go away when
          // everything is batched by default. We'll then have a similar API to opt-out of
          // scheduled work and instead do synchronous work.

          // Defaults
          var _batchedUpdatesImpl = function(fn, bookkeeping) {
            return fn(bookkeeping);
          };
          var _interactiveUpdatesImpl = function(fn, a, b) {
            return fn(a, b);
          };
          var _flushInteractiveUpdatesImpl = function() {};

          var isBatching = false;
          function batchedUpdates(fn, bookkeeping) {
            if (isBatching) {
              // If we are currently inside another batch, we need to wait until it
              // fully completes before restoring state.
              return fn(bookkeeping);
            }
            isBatching = true;
            try {
              return _batchedUpdatesImpl(fn, bookkeeping);
            } finally {
              // Here we wait until all updates have propagated, which is important
              // when using controlled components within layers:
              // https://github.com/facebook/react/issues/1698
              // Then we restore state of any controlled component.
              isBatching = false;
              var controlledComponentsHavePendingUpdates = needsStateRestore();
              if (controlledComponentsHavePendingUpdates) {
                // If a controlled event was fired, we may need to restore the state of
                // the DOM node back to the controlled value. This is necessary when React
                // bails out of the update without touching the DOM.
                _flushInteractiveUpdatesImpl();
                restoreStateIfNeeded();
              }
            }
          }

          function interactiveUpdates(fn, a, b) {
            return _interactiveUpdatesImpl(fn, a, b);
          }

          function setBatchingImplementation(
            batchedUpdatesImpl,
            interactiveUpdatesImpl,
            flushInteractiveUpdatesImpl
          ) {
            _batchedUpdatesImpl = batchedUpdatesImpl;
            _interactiveUpdatesImpl = interactiveUpdatesImpl;
            _flushInteractiveUpdatesImpl = flushInteractiveUpdatesImpl;
          }

          /**
           * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
           */
          var supportedInputTypes = {
            color: true,
            date: true,
            datetime: true,
            'datetime-local': true,
            email: true,
            month: true,
            number: true,
            password: true,
            range: true,
            search: true,
            tel: true,
            text: true,
            time: true,
            url: true,
            week: true
          };

          function isTextInputElement(elem) {
            var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

            if (nodeName === 'input') {
              return !!supportedInputTypes[elem.type];
            }

            if (nodeName === 'textarea') {
              return true;
            }

            return false;
          }

          /**
           * HTML nodeType values that represent the type of the node
           */

          var ELEMENT_NODE = 1;
          var TEXT_NODE = 3;
          var COMMENT_NODE = 8;
          var DOCUMENT_NODE = 9;
          var DOCUMENT_FRAGMENT_NODE = 11;

          /**
           * Gets the target node from a native browser event by accounting for
           * inconsistencies in browser DOM APIs.
           *
           * @param {object} nativeEvent Native browser event.
           * @return {DOMEventTarget} Target node.
           */
          function getEventTarget(nativeEvent) {
            // Fallback to nativeEvent.srcElement for IE9
            // https://github.com/facebook/react/issues/12506
            var target = nativeEvent.target || nativeEvent.srcElement || window;

            // Normalize SVG <use> element events #4963
            if (target.correspondingUseElement) {
              target = target.correspondingUseElement;
            }

            // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
            // @see http://www.quirksmode.org/js/events_properties.html
            return target.nodeType === TEXT_NODE ? target.parentNode : target;
          }

          /**
           * Checks if an event is supported in the current execution environment.
           *
           * NOTE: This will not work correctly for non-generic events such as `change`,
           * `reset`, `load`, `error`, and `select`.
           *
           * Borrows from Modernizr.
           *
           * @param {string} eventNameSuffix Event name, e.g. "click".
           * @return {boolean} True if the event is supported.
           * @internal
           * @license Modernizr 3.0.0pre (Custom Build) | MIT
           */
          function isEventSupported(eventNameSuffix) {
            if (!canUseDOM) {
              return false;
            }

            var eventName = 'on' + eventNameSuffix;
            var isSupported = eventName in document;

            if (!isSupported) {
              var element = document.createElement('div');
              element.setAttribute(eventName, 'return;');
              isSupported = typeof element[eventName] === 'function';
            }

            return isSupported;
          }

          function isCheckable(elem) {
            var type = elem.type;
            var nodeName = elem.nodeName;
            return (
              nodeName &&
              nodeName.toLowerCase() === 'input' &&
              (type === 'checkbox' || type === 'radio')
            );
          }

          function getTracker(node) {
            return node._valueTracker;
          }

          function detachTracker(node) {
            node._valueTracker = null;
          }

          function getValueFromNode(node) {
            var value = '';
            if (!node) {
              return value;
            }

            if (isCheckable(node)) {
              value = node.checked ? 'true' : 'false';
            } else {
              value = node.value;
            }

            return value;
          }

          function trackValueOnNode(node) {
            var valueField = isCheckable(node) ? 'checked' : 'value';
            var descriptor = Object.getOwnPropertyDescriptor(
              node.constructor.prototype,
              valueField
            );

            var currentValue = '' + node[valueField];

            // if someone has already defined a value or Safari, then bail
            // and don't track value will cause over reporting of changes,
            // but it's better then a hard failure
            // (needed for certain tests that spyOn input values and Safari)
            if (
              node.hasOwnProperty(valueField) ||
              typeof descriptor === 'undefined' ||
              typeof descriptor.get !== 'function' ||
              typeof descriptor.set !== 'function'
            ) {
              return;
            }
            var get = descriptor.get,
              set = descriptor.set;

            Object.defineProperty(node, valueField, {
              configurable: true,
              get: function() {
                return get.call(this);
              },
              set: function(value) {
                currentValue = '' + value;
                set.call(this, value);
              }
            });
            // We could've passed this the first time
            // but it triggers a bug in IE11 and Edge 14/15.
            // Calling defineProperty() again should be equivalent.
            // https://github.com/facebook/react/issues/11768
            Object.defineProperty(node, valueField, {
              enumerable: descriptor.enumerable
            });

            var tracker = {
              getValue: function() {
                return currentValue;
              },
              setValue: function(value) {
                currentValue = '' + value;
              },
              stopTracking: function() {
                detachTracker(node);
                delete node[valueField];
              }
            };
            return tracker;
          }

          function track(node) {
            if (getTracker(node)) {
              return;
            }

            // TODO: Once it's just Fiber we can move this to node._wrapperState
            node._valueTracker = trackValueOnNode(node);
          }

          function updateValueIfChanged(node) {
            if (!node) {
              return false;
            }

            var tracker = getTracker(node);
            // if there is no tracker at this point it's unlikely
            // that trying again will succeed
            if (!tracker) {
              return true;
            }

            var lastValue = tracker.getValue();
            var nextValue = getValueFromNode(node);
            if (nextValue !== lastValue) {
              tracker.setValue(nextValue);
              return true;
            }
            return false;
          }

          var ReactSharedInternals =
            React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

          var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

          var describeComponentFrame = function(name, source, ownerName) {
            var sourceInfo = '';
            if (source) {
              var path = source.fileName;
              var fileName = path.replace(BEFORE_SLASH_RE, '');
              {
                // In DEV, include code for a common special case:
                // prefer "folder/index.js" instead of just "index.js".
                if (/^index\./.test(fileName)) {
                  var match = path.match(BEFORE_SLASH_RE);
                  if (match) {
                    var pathBeforeSlash = match[1];
                    if (pathBeforeSlash) {
                      var folderName = pathBeforeSlash.replace(
                        BEFORE_SLASH_RE,
                        ''
                      );
                      fileName = folderName + '/' + fileName;
                    }
                  }
                }
              }
              sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
            } else if (ownerName) {
              sourceInfo = ' (created by ' + ownerName + ')';
            }
            return '\n    in ' + (name || 'Unknown') + sourceInfo;
          };

          // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
          // nor polyfill, then a plain number is used for performance.
          var hasSymbol = typeof Symbol === 'function' && Symbol.for;

          var REACT_ELEMENT_TYPE = hasSymbol
            ? Symbol.for('react.element')
            : 0xeac7;
          var REACT_PORTAL_TYPE = hasSymbol
            ? Symbol.for('react.portal')
            : 0xeaca;
          var REACT_FRAGMENT_TYPE = hasSymbol
            ? Symbol.for('react.fragment')
            : 0xeacb;
          var REACT_STRICT_MODE_TYPE = hasSymbol
            ? Symbol.for('react.strict_mode')
            : 0xeacc;
          var REACT_PROFILER_TYPE = hasSymbol
            ? Symbol.for('react.profiler')
            : 0xead2;
          var REACT_PROVIDER_TYPE = hasSymbol
            ? Symbol.for('react.provider')
            : 0xeacd;
          var REACT_CONTEXT_TYPE = hasSymbol
            ? Symbol.for('react.context')
            : 0xeace;
          var REACT_ASYNC_MODE_TYPE = hasSymbol
            ? Symbol.for('react.async_mode')
            : 0xeacf;
          var REACT_FORWARD_REF_TYPE = hasSymbol
            ? Symbol.for('react.forward_ref')
            : 0xead0;
          var REACT_PLACEHOLDER_TYPE = hasSymbol
            ? Symbol.for('react.placeholder')
            : 0xead1;

          var MAYBE_ITERATOR_SYMBOL =
            typeof Symbol === 'function' && Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL = '@@iterator';

          function getIteratorFn(maybeIterable) {
            if (maybeIterable === null || typeof maybeIterable !== 'object') {
              return null;
            }
            var maybeIterator =
              (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||
              maybeIterable[FAUX_ITERATOR_SYMBOL];
            if (typeof maybeIterator === 'function') {
              return maybeIterator;
            }
            return null;
          }

          var Pending = 0;
          var Resolved = 1;
          var Rejected = 2;

          function getResultFromResolvedThenable(thenable) {
            return thenable._reactResult;
          }

          function refineResolvedThenable(thenable) {
            return thenable._reactStatus === Resolved
              ? thenable._reactResult
              : null;
          }

          function getComponentName(type) {
            if (type == null) {
              // Host root, text node or just invalid type.
              return null;
            }
            {
              if (typeof type.tag === 'number') {
                warningWithoutStack$1(
                  false,
                  'Received an unexpected object in getComponentName(). ' +
                    'This is likely a bug in React. Please file an issue.'
                );
              }
            }
            if (typeof type === 'function') {
              return type.displayName || type.name || null;
            }
            if (typeof type === 'string') {
              return type;
            }
            switch (type) {
              case REACT_ASYNC_MODE_TYPE:
                return 'AsyncMode';
              case REACT_FRAGMENT_TYPE:
                return 'Fragment';
              case REACT_PORTAL_TYPE:
                return 'Portal';
              case REACT_PROFILER_TYPE:
                return 'Profiler';
              case REACT_STRICT_MODE_TYPE:
                return 'StrictMode';
              case REACT_PLACEHOLDER_TYPE:
                return 'Placeholder';
            }
            if (typeof type === 'object') {
              switch (type.$$typeof) {
                case REACT_CONTEXT_TYPE:
                  return 'Context.Consumer';
                case REACT_PROVIDER_TYPE:
                  return 'Context.Provider';
                case REACT_FORWARD_REF_TYPE:
                  var renderFn = type.render;
                  var functionName =
                    renderFn.displayName || renderFn.name || '';
                  return (
                    type.displayName ||
                    (functionName !== ''
                      ? 'ForwardRef(' + functionName + ')'
                      : 'ForwardRef')
                  );
              }
              if (typeof type.then === 'function') {
                var thenable = type;
                var resolvedThenable = refineResolvedThenable(thenable);
                if (resolvedThenable) {
                  return getComponentName(resolvedThenable);
                }
              }
            }
            return null;
          }

          var ReactDebugCurrentFrame =
            ReactSharedInternals.ReactDebugCurrentFrame;

          function describeFiber(fiber) {
            switch (fiber.tag) {
              case IndeterminateComponent:
              case FunctionalComponent:
              case FunctionalComponentLazy:
              case ClassComponent:
              case ClassComponentLazy:
              case HostComponent:
              case Mode:
                var owner = fiber._debugOwner;
                var source = fiber._debugSource;
                var name = getComponentName(fiber.type);
                var ownerName = null;
                if (owner) {
                  ownerName = getComponentName(owner.type);
                }
                return describeComponentFrame(name, source, ownerName);
              default:
                return '';
            }
          }

          function getStackByFiberInDevAndProd(workInProgress) {
            var info = '';
            var node = workInProgress;
            do {
              info += describeFiber(node);
              node = node.return;
            } while (node);
            return info;
          }

          var current = null;
          var phase = null;

          function getCurrentFiberOwnerNameInDevOrNull() {
            {
              if (current === null) {
                return null;
              }
              var owner = current._debugOwner;
              if (owner !== null && typeof owner !== 'undefined') {
                return getComponentName(owner.type);
              }
            }
            return null;
          }

          function getCurrentFiberStackInDev() {
            {
              if (current === null) {
                return '';
              }
              // Safe because if current fiber exists, we are reconciling,
              // and it is guaranteed to be the work-in-progress version.
              return getStackByFiberInDevAndProd(current);
            }
            return '';
          }

          function resetCurrentFiber() {
            {
              ReactDebugCurrentFrame.getCurrentStack = null;
              current = null;
              phase = null;
            }
          }

          function setCurrentFiber(fiber) {
            {
              ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
              current = fiber;
              phase = null;
            }
          }

          function setCurrentPhase(lifeCyclePhase) {
            {
              phase = lifeCyclePhase;
            }
          }

          /**
           * Similar to invariant but only logs a warning if the condition is not met.
           * This can be used to log issues in development environments in critical
           * paths. Removing the logging code for production environments will keep the
           * same logic and follow the same code paths.
           */

          var warning = warningWithoutStack$1;

          {
            warning = function(condition, format) {
              if (condition) {
                return;
              }
              var ReactDebugCurrentFrame =
                ReactSharedInternals.ReactDebugCurrentFrame;
              var stack = ReactDebugCurrentFrame.getStackAddendum();
              // eslint-disable-next-line react-internal/warning-and-invariant-args

              for (
                var _len = arguments.length,
                  args = Array(_len > 2 ? _len - 2 : 0),
                  _key = 2;
                _key < _len;
                _key++
              ) {
                args[_key - 2] = arguments[_key];
              }

              warningWithoutStack$1.apply(
                undefined,
                [false, format + '%s'].concat(args, [stack])
              );
            };
          }

          var warning$1 = warning;

          // A reserved attribute.
          // It is handled by React separately and shouldn't be written to the DOM.
          var RESERVED = 0;

          // A simple string attribute.
          // Attributes that aren't in the whitelist are presumed to have this type.
          var STRING = 1;

          // A string attribute that accepts booleans in React. In HTML, these are called
          // "enumerated" attributes with "true" and "false" as possible values.
          // When true, it should be set to a "true" string.
          // When false, it should be set to a "false" string.
          var BOOLEANISH_STRING = 2;

          // A real boolean attribute.
          // When true, it should be present (set either to an empty string or its name).
          // When false, it should be omitted.
          var BOOLEAN = 3;

          // An attribute that can be used as a flag as well as with a value.
          // When true, it should be present (set either to an empty string or its name).
          // When false, it should be omitted.
          // For any other value, should be present with that value.
          var OVERLOADED_BOOLEAN = 4;

          // An attribute that must be numeric or parse as a numeric.
          // When falsy, it should be removed.
          var NUMERIC = 5;

          // An attribute that must be positive numeric or parse as a positive numeric.
          // When falsy, it should be removed.
          var POSITIVE_NUMERIC = 6;

          /* eslint-disable max-len */
          var ATTRIBUTE_NAME_START_CHAR =
            ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
          /* eslint-enable max-len */
          var ATTRIBUTE_NAME_CHAR =
            ATTRIBUTE_NAME_START_CHAR +
            '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';

          var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
          var VALID_ATTRIBUTE_NAME_REGEX = new RegExp(
            '^[' +
              ATTRIBUTE_NAME_START_CHAR +
              '][' +
              ATTRIBUTE_NAME_CHAR +
              ']*$'
          );

          var hasOwnProperty = Object.prototype.hasOwnProperty;
          var illegalAttributeNameCache = {};
          var validatedAttributeNameCache = {};

          function isAttributeNameSafe(attributeName) {
            if (
              hasOwnProperty.call(validatedAttributeNameCache, attributeName)
            ) {
              return true;
            }
            if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
              return false;
            }
            if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
              validatedAttributeNameCache[attributeName] = true;
              return true;
            }
            illegalAttributeNameCache[attributeName] = true;
            {
              warning$1(false, 'Invalid attribute name: `%s`', attributeName);
            }
            return false;
          }

          function shouldIgnoreAttribute(
            name,
            propertyInfo,
            isCustomComponentTag
          ) {
            if (propertyInfo !== null) {
              return propertyInfo.type === RESERVED;
            }
            if (isCustomComponentTag) {
              return false;
            }
            if (
              name.length > 2 &&
              (name[0] === 'o' || name[0] === 'O') &&
              (name[1] === 'n' || name[1] === 'N')
            ) {
              return true;
            }
            return false;
          }

          function shouldRemoveAttributeWithWarning(
            name,
            value,
            propertyInfo,
            isCustomComponentTag
          ) {
            if (propertyInfo !== null && propertyInfo.type === RESERVED) {
              return false;
            }
            switch (typeof value) {
              case 'function':
              // $FlowIssue symbol is perfectly valid here
              case 'symbol':
                // eslint-disable-line
                return true;
              case 'boolean': {
                if (isCustomComponentTag) {
                  return false;
                }
                if (propertyInfo !== null) {
                  return !propertyInfo.acceptsBooleans;
                } else {
                  var prefix = name.toLowerCase().slice(0, 5);
                  return prefix !== 'data-' && prefix !== 'aria-';
                }
              }
              default:
                return false;
            }
          }

          function shouldRemoveAttribute(
            name,
            value,
            propertyInfo,
            isCustomComponentTag
          ) {
            if (value === null || typeof value === 'undefined') {
              return true;
            }
            if (
              shouldRemoveAttributeWithWarning(
                name,
                value,
                propertyInfo,
                isCustomComponentTag
              )
            ) {
              return true;
            }
            if (isCustomComponentTag) {
              return false;
            }
            if (propertyInfo !== null) {
              switch (propertyInfo.type) {
                case BOOLEAN:
                  return !value;
                case OVERLOADED_BOOLEAN:
                  return value === false;
                case NUMERIC:
                  return isNaN(value);
                case POSITIVE_NUMERIC:
                  return isNaN(value) || value < 1;
              }
            }
            return false;
          }

          function getPropertyInfo(name) {
            return properties.hasOwnProperty(name) ? properties[name] : null;
          }

          function PropertyInfoRecord(
            name,
            type,
            mustUseProperty,
            attributeName,
            attributeNamespace
          ) {
            this.acceptsBooleans =
              type === BOOLEANISH_STRING ||
              type === BOOLEAN ||
              type === OVERLOADED_BOOLEAN;
            this.attributeName = attributeName;
            this.attributeNamespace = attributeNamespace;
            this.mustUseProperty = mustUseProperty;
            this.propertyName = name;
            this.type = type;
          }

          // When adding attributes to this list, be sure to also add them to
          // the `possibleStandardNames` module to ensure casing and incorrect
          // name warnings.
          var properties = {};

          // These props are reserved by React. They shouldn't be written to the DOM.
          [
            'children',
            'dangerouslySetInnerHTML',
            // TODO: This prevents the assignment of defaultValue to regular
            // elements (not just inputs). Now that ReactDOMInput assigns to the
            // defaultValue property -- do we need this?
            'defaultValue',
            'defaultChecked',
            'innerHTML',
            'suppressContentEditableWarning',
            'suppressHydrationWarning',
            'style'
          ].forEach(
            function(name) {
              properties[name] = new PropertyInfoRecord(
                name,
                RESERVED,
                false, // mustUseProperty
                name, // attributeName
                null
              );
            } // attributeNamespace
          );

          // A few React string attributes have a different name.
          // This is a mapping from React prop names to the attribute names.
          [
            ['acceptCharset', 'accept-charset'],
            ['className', 'class'],
            ['htmlFor', 'for'],
            ['httpEquiv', 'http-equiv']
          ].forEach(
            function(_ref) {
              var name = _ref[0],
                attributeName = _ref[1];

              properties[name] = new PropertyInfoRecord(
                name,
                STRING,
                false, // mustUseProperty
                attributeName, // attributeName
                null
              );
            } // attributeNamespace
          );

          // These are "enumerated" HTML attributes that accept "true" and "false".
          // In React, we let users pass `true` and `false` even though technically
          // these aren't boolean attributes (they are coerced to strings).
          ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(
            function(name) {
              properties[name] = new PropertyInfoRecord(
                name,
                BOOLEANISH_STRING,
                false, // mustUseProperty
                name.toLowerCase(), // attributeName
                null
              );
            } // attributeNamespace
          );

          // These are "enumerated" SVG attributes that accept "true" and "false".
          // In React, we let users pass `true` and `false` even though technically
          // these aren't boolean attributes (they are coerced to strings).
          // Since these are SVG attributes, their attribute names are case-sensitive.
          [
            'autoReverse',
            'externalResourcesRequired',
            'focusable',
            'preserveAlpha'
          ].forEach(
            function(name) {
              properties[name] = new PropertyInfoRecord(
                name,
                BOOLEANISH_STRING,
                false, // mustUseProperty
                name, // attributeName
                null
              );
            } // attributeNamespace
          );

          // These are HTML boolean attributes.
          [
            'allowFullScreen',
            'async',
            // Note: there is a special case that prevents it from being written to the DOM
            // on the client side because the browsers are inconsistent. Instead we call focus().
            'autoFocus',
            'autoPlay',
            'controls',
            'default',
            'defer',
            'disabled',
            'formNoValidate',
            'hidden',
            'loop',
            'noModule',
            'noValidate',
            'open',
            'playsInline',
            'readOnly',
            'required',
            'reversed',
            'scoped',
            'seamless',
            // Microdata
            'itemScope'
          ].forEach(
            function(name) {
              properties[name] = new PropertyInfoRecord(
                name,
                BOOLEAN,
                false, // mustUseProperty
                name.toLowerCase(), // attributeName
                null
              );
            } // attributeNamespace
          );

          // These are the few React props that we set as DOM properties
          // rather than attributes. These are all booleans.
          [
            'checked',
            // Note: `option.selected` is not updated if `select.multiple` is
            // disabled with `removeAttribute`. We have special logic for handling this.
            'multiple',
            'muted',
            'selected'
          ].forEach(
            function(name) {
              properties[name] = new PropertyInfoRecord(
                name,
                BOOLEAN,
                true, // mustUseProperty
                name, // attributeName
                null
              );
            } // attributeNamespace
          );

          // These are HTML attributes that are "overloaded booleans": they behave like
          // booleans, but can also accept a string value.
          ['capture', 'download'].forEach(
            function(name) {
              properties[name] = new PropertyInfoRecord(
                name,
                OVERLOADED_BOOLEAN,
                false, // mustUseProperty
                name, // attributeName
                null
              );
            } // attributeNamespace
          );

          // These are HTML attributes that must be positive numbers.
          ['cols', 'rows', 'size', 'span'].forEach(
            function(name) {
              properties[name] = new PropertyInfoRecord(
                name,
                POSITIVE_NUMERIC,
                false, // mustUseProperty
                name, // attributeName
                null
              );
            } // attributeNamespace
          );

          // These are HTML attributes that must be numbers.
          ['rowSpan', 'start'].forEach(
            function(name) {
              properties[name] = new PropertyInfoRecord(
                name,
                NUMERIC,
                false, // mustUseProperty
                name.toLowerCase(), // attributeName
                null
              );
            } // attributeNamespace
          );

          var CAMELIZE = /[\-\:]([a-z])/g;
          var capitalize = function(token) {
            return token[1].toUpperCase();
          };

          // This is a list of all SVG attributes that need special casing, namespacing,
          // or boolean value assignment. Regular attributes that just accept strings
          // and have the same names are omitted, just like in the HTML whitelist.
          // Some of these attributes can be hard to find. This list was created by
          // scrapping the MDN documentation.
          [
            'accent-height',
            'alignment-baseline',
            'arabic-form',
            'baseline-shift',
            'cap-height',
            'clip-path',
            'clip-rule',
            'color-interpolation',
            'color-interpolation-filters',
            'color-profile',
            'color-rendering',
            'dominant-baseline',
            'enable-background',
            'fill-opacity',
            'fill-rule',
            'flood-color',
            'flood-opacity',
            'font-family',
            'font-size',
            'font-size-adjust',
            'font-stretch',
            'font-style',
            'font-variant',
            'font-weight',
            'glyph-name',
            'glyph-orientation-horizontal',
            'glyph-orientation-vertical',
            'horiz-adv-x',
            'horiz-origin-x',
            'image-rendering',
            'letter-spacing',
            'lighting-color',
            'marker-end',
            'marker-mid',
            'marker-start',
            'overline-position',
            'overline-thickness',
            'paint-order',
            'panose-1',
            'pointer-events',
            'rendering-intent',
            'shape-rendering',
            'stop-color',
            'stop-opacity',
            'strikethrough-position',
            'strikethrough-thickness',
            'stroke-dasharray',
            'stroke-dashoffset',
            'stroke-linecap',
            'stroke-linejoin',
            'stroke-miterlimit',
            'stroke-opacity',
            'stroke-width',
            'text-anchor',
            'text-decoration',
            'text-rendering',
            'underline-position',
            'underline-thickness',
            'unicode-bidi',
            'unicode-range',
            'units-per-em',
            'v-alphabetic',
            'v-hanging',
            'v-ideographic',
            'v-mathematical',
            'vector-effect',
            'vert-adv-y',
            'vert-origin-x',
            'vert-origin-y',
            'word-spacing',
            'writing-mode',
            'xmlns:xlink',
            'x-height'
          ].forEach(
            function(attributeName) {
              var name = attributeName.replace(CAMELIZE, capitalize);
              properties[name] = new PropertyInfoRecord(
                name,
                STRING,
                false, // mustUseProperty
                attributeName,
                null
              );
            } // attributeNamespace
          );

          // String SVG attributes with the xlink namespace.
          [
            'xlink:actuate',
            'xlink:arcrole',
            'xlink:href',
            'xlink:role',
            'xlink:show',
            'xlink:title',
            'xlink:type'
          ].forEach(function(attributeName) {
            var name = attributeName.replace(CAMELIZE, capitalize);
            properties[name] = new PropertyInfoRecord(
              name,
              STRING,
              false, // mustUseProperty
              attributeName,
              'http://www.w3.org/1999/xlink'
            );
          });

          // String SVG attributes with the xml namespace.
          ['xml:base', 'xml:lang', 'xml:space'].forEach(function(
            attributeName
          ) {
            var name = attributeName.replace(CAMELIZE, capitalize);
            properties[name] = new PropertyInfoRecord(
              name,
              STRING,
              false, // mustUseProperty
              attributeName,
              'http://www.w3.org/XML/1998/namespace'
            );
          });

          // Special case: this attribute exists both in HTML and SVG.
          // Its "tabindex" attribute name is case-sensitive in SVG so we can't just use
          // its React `tabIndex` name, like we do for attributes that exist only in HTML.
          properties.tabIndex = new PropertyInfoRecord(
            'tabIndex',
            STRING,
            false, // mustUseProperty
            'tabindex', // attributeName
            null
          );

          /**
           * Get the value for a property on a node. Only used in DEV for SSR validation.
           * The "expected" argument is used as a hint of what the expected value is.
           * Some properties have multiple equivalent values.
           */
          function getValueForProperty(node, name, expected, propertyInfo) {
            {
              if (propertyInfo.mustUseProperty) {
                var propertyName = propertyInfo.propertyName;

                return node[propertyName];
              } else {
                var attributeName = propertyInfo.attributeName;

                var stringValue = null;

                if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                  if (node.hasAttribute(attributeName)) {
                    var value = node.getAttribute(attributeName);
                    if (value === '') {
                      return true;
                    }
                    if (
                      shouldRemoveAttribute(name, expected, propertyInfo, false)
                    ) {
                      return value;
                    }
                    if (value === '' + expected) {
                      return expected;
                    }
                    return value;
                  }
                } else if (node.hasAttribute(attributeName)) {
                  if (
                    shouldRemoveAttribute(name, expected, propertyInfo, false)
                  ) {
                    // We had an attribute but shouldn't have had one, so read it
                    // for the error message.
                    return node.getAttribute(attributeName);
                  }
                  if (propertyInfo.type === BOOLEAN) {
                    // If this was a boolean, it doesn't matter what the value is
                    // the fact that we have it is the same as the expected.
                    return expected;
                  }
                  // Even if this property uses a namespace we use getAttribute
                  // because we assume its namespaced name is the same as our config.
                  // To use getAttributeNS we need the local name which we don't have
                  // in our config atm.
                  stringValue = node.getAttribute(attributeName);
                }

                if (
                  shouldRemoveAttribute(name, expected, propertyInfo, false)
                ) {
                  return stringValue === null ? expected : stringValue;
                } else if (stringValue === '' + expected) {
                  return expected;
                } else {
                  return stringValue;
                }
              }
            }
          }

          /**
           * Get the value for a attribute on a node. Only used in DEV for SSR validation.
           * The third argument is used as a hint of what the expected value is. Some
           * attributes have multiple equivalent values.
           */
          function getValueForAttribute(node, name, expected) {
            {
              if (!isAttributeNameSafe(name)) {
                return;
              }
              if (!node.hasAttribute(name)) {
                return expected === undefined ? undefined : null;
              }
              var value = node.getAttribute(name);
              if (value === '' + expected) {
                return expected;
              }
              return value;
            }
          }

          /**
           * Sets the value for a property on a node.
           *
           * @param {DOMElement} node
           * @param {string} name
           * @param {*} value
           */
          function setValueForProperty(
            node,
            name,
            value,
            isCustomComponentTag
          ) {
            var propertyInfo = getPropertyInfo(name);
            if (
              shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)
            ) {
              return;
            }
            if (
              shouldRemoveAttribute(
                name,
                value,
                propertyInfo,
                isCustomComponentTag
              )
            ) {
              value = null;
            }
            // If the prop isn't in the special list, treat it as a simple attribute.
            if (isCustomComponentTag || propertyInfo === null) {
              if (isAttributeNameSafe(name)) {
                var _attributeName = name;
                if (value === null) {
                  node.removeAttribute(_attributeName);
                } else {
                  node.setAttribute(_attributeName, '' + value);
                }
              }
              return;
            }
            var mustUseProperty = propertyInfo.mustUseProperty;

            if (mustUseProperty) {
              var propertyName = propertyInfo.propertyName;

              if (value === null) {
                var type = propertyInfo.type;

                node[propertyName] = type === BOOLEAN ? false : '';
              } else {
                // Contrary to `setAttribute`, object properties are properly
                // `toString`ed by IE8/9.
                node[propertyName] = value;
              }
              return;
            }
            // The rest are treated as attributes with special cases.
            var attributeName = propertyInfo.attributeName,
              attributeNamespace = propertyInfo.attributeNamespace;

            if (value === null) {
              node.removeAttribute(attributeName);
            } else {
              var _type = propertyInfo.type;

              var attributeValue = void 0;
              if (
                _type === BOOLEAN ||
                (_type === OVERLOADED_BOOLEAN && value === true)
              ) {
                attributeValue = '';
              } else {
                // `setAttribute` with objects becomes only `[object]` in IE8/9,
                // ('' + value) makes it output the correct toString()-value.
                attributeValue = '' + value;
              }
              if (attributeNamespace) {
                node.setAttributeNS(
                  attributeNamespace,
                  attributeName,
                  attributeValue
                );
              } else {
                node.setAttribute(attributeName, attributeValue);
              }
            }
          }

          // Flow does not allow string concatenation of most non-string types. To work
          // around this limitation, we use an opaque type that can only be obtained by
          // passing the value through getToStringValue first.
          function toString(value) {
            return '' + value;
          }

          function getToStringValue(value) {
            switch (typeof value) {
              case 'boolean':
              case 'number':
              case 'object':
              case 'string':
              case 'undefined':
                return value;
              default:
                // function, symbol are assigned as empty strings
                return '';
            }
          }

          var ReactDebugCurrentFrame$1 = null;

          var ReactControlledValuePropTypes = {
            checkPropTypes: null
          };

          {
            ReactDebugCurrentFrame$1 =
              ReactSharedInternals.ReactDebugCurrentFrame;

            var hasReadOnlyValue = {
              button: true,
              checkbox: true,
              image: true,
              hidden: true,
              radio: true,
              reset: true,
              submit: true
            };

            var propTypes = {
              value: function(props, propName, componentName) {
                if (
                  hasReadOnlyValue[props.type] ||
                  props.onChange ||
                  props.readOnly ||
                  props.disabled ||
                  props[propName] == null
                ) {
                  return null;
                }
                return new Error(
                  'You provided a `value` prop to a form field without an ' +
                    '`onChange` handler. This will render a read-only field. If ' +
                    'the field should be mutable use `defaultValue`. Otherwise, ' +
                    'set either `onChange` or `readOnly`.'
                );
              },
              checked: function(props, propName, componentName) {
                if (
                  props.onChange ||
                  props.readOnly ||
                  props.disabled ||
                  props[propName] == null
                ) {
                  return null;
                }
                return new Error(
                  'You provided a `checked` prop to a form field without an ' +
                    '`onChange` handler. This will render a read-only field. If ' +
                    'the field should be mutable use `defaultChecked`. Otherwise, ' +
                    'set either `onChange` or `readOnly`.'
                );
              }
            };

            /**
             * Provide a linked `value` attribute for controlled forms. You should not use
             * this outside of the ReactDOM controlled form components.
             */
            ReactControlledValuePropTypes.checkPropTypes = function(
              tagName,
              props
            ) {
              checkPropTypes(
                propTypes,
                props,
                'prop',
                tagName,
                ReactDebugCurrentFrame$1.getStackAddendum
              );
            };
          }

          // Exports ReactDOM.createRoot
          var enableUserTimingAPI = true;

          // Experimental error-boundary API that can recover from errors within a single
          // render phase
          var enableGetDerivedStateFromCatch = false;
          // Suspense
          var enableSuspense = false;
          // Helps identify side effects in begin-phase lifecycle hooks and setState reducers:
          var debugRenderPhaseSideEffects = false;

          // In some cases, StrictMode should also double-render lifecycles.
          // This can be confusing for tests though,
          // And it can be bad for performance in production.
          // This feature flag can be used to control the behavior:
          var debugRenderPhaseSideEffectsForStrictMode = true;

          // To preserve the "Pause on caught exceptions" behavior of the debugger, we
          // replay the begin phase of a failed component inside invokeGuardedCallback.
          var replayFailedUnitOfWorkWithInvokeGuardedCallback = true;

          // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:
          var warnAboutDeprecatedLifecycles = false;

          // Warn about legacy context API
          var warnAboutLegacyContextAPI = false;

          // Gather advanced timing metrics for Profiler subtrees.
          var enableProfilerTimer = true;

          // Trace which interactions trigger each commit.
          var enableSchedulerTracing = true;

          // Only used in www builds.

          // Only used in www builds.

          // React Fire: prevent the value and checked attributes from syncing
          // with their related DOM properties
          var disableInputAttributeSyncing = false;

          // TODO: direct imports like some-package/src/* are bad. Fix me.
          var didWarnValueDefaultValue = false;
          var didWarnCheckedDefaultChecked = false;
          var didWarnControlledToUncontrolled = false;
          var didWarnUncontrolledToControlled = false;

          function isControlled(props) {
            var usesChecked =
              props.type === 'checkbox' || props.type === 'radio';
            return usesChecked ? props.checked != null : props.value != null;
          }

          /**
           * Implements an <input> host component that allows setting these optional
           * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
           *
           * If `checked` or `value` are not supplied (or null/undefined), user actions
           * that affect the checked state or value will trigger updates to the element.
           *
           * If they are supplied (and not null/undefined), the rendered element will not
           * trigger updates to the element. Instead, the props must change in order for
           * the rendered element to be updated.
           *
           * The rendered element will be initialized as unchecked (or `defaultChecked`)
           * with an empty value (or `defaultValue`).
           *
           * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
           */

          function getHostProps(element, props) {
            var node = element;
            var checked = props.checked;

            var hostProps = _assign({}, props, {
              defaultChecked: undefined,
              defaultValue: undefined,
              value: undefined,
              checked:
                checked != null ? checked : node._wrapperState.initialChecked
            });

            return hostProps;
          }

          function initWrapperState(element, props) {
            {
              ReactControlledValuePropTypes.checkPropTypes('input', props);

              if (
                props.checked !== undefined &&
                props.defaultChecked !== undefined &&
                !didWarnCheckedDefaultChecked
              ) {
                warning$1(
                  false,
                  '%s contains an input of type %s with both checked and defaultChecked props. ' +
                    'Input elements must be either controlled or uncontrolled ' +
                    '(specify either the checked prop, or the defaultChecked prop, but not ' +
                    'both). Decide between using a controlled or uncontrolled input ' +
                    'element and remove one of these props. More info: ' +
                    'https://fb.me/react-controlled-components',
                  getCurrentFiberOwnerNameInDevOrNull() || 'A component',
                  props.type
                );
                didWarnCheckedDefaultChecked = true;
              }
              if (
                props.value !== undefined &&
                props.defaultValue !== undefined &&
                !didWarnValueDefaultValue
              ) {
                warning$1(
                  false,
                  '%s contains an input of type %s with both value and defaultValue props. ' +
                    'Input elements must be either controlled or uncontrolled ' +
                    '(specify either the value prop, or the defaultValue prop, but not ' +
                    'both). Decide between using a controlled or uncontrolled input ' +
                    'element and remove one of these props. More info: ' +
                    'https://fb.me/react-controlled-components',
                  getCurrentFiberOwnerNameInDevOrNull() || 'A component',
                  props.type
                );
                didWarnValueDefaultValue = true;
              }
            }

            var node = element;
            var defaultValue =
              props.defaultValue == null ? '' : props.defaultValue;

            node._wrapperState = {
              initialChecked:
                props.checked != null ? props.checked : props.defaultChecked,
              initialValue: getToStringValue(
                props.value != null ? props.value : defaultValue
              ),
              controlled: isControlled(props)
            };
          }

          function updateChecked(element, props) {
            var node = element;
            var checked = props.checked;
            if (checked != null) {
              setValueForProperty(node, 'checked', checked, false);
            }
          }

          function updateWrapper(element, props) {
            var node = element;
            {
              var _controlled = isControlled(props);

              if (
                !node._wrapperState.controlled &&
                _controlled &&
                !didWarnUncontrolledToControlled
              ) {
                warning$1(
                  false,
                  'A component is changing an uncontrolled input of type %s to be controlled. ' +
                    'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
                    'Decide between using a controlled or uncontrolled input ' +
                    'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
                  props.type
                );
                didWarnUncontrolledToControlled = true;
              }
              if (
                node._wrapperState.controlled &&
                !_controlled &&
                !didWarnControlledToUncontrolled
              ) {
                warning$1(
                  false,
                  'A component is changing a controlled input of type %s to be uncontrolled. ' +
                    'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
                    'Decide between using a controlled or uncontrolled input ' +
                    'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
                  props.type
                );
                didWarnControlledToUncontrolled = true;
              }
            }

            updateChecked(element, props);

            var value = getToStringValue(props.value);
            var type = props.type;

            if (value != null) {
              if (type === 'number') {
                if (
                  (value === 0 && node.value === '') ||
                  // We explicitly want to coerce to number here if possible.
                  // eslint-disable-next-line
                  node.value != value
                ) {
                  node.value = toString(value);
                }
              } else if (node.value !== toString(value)) {
                node.value = toString(value);
              }
            } else if (type === 'submit' || type === 'reset') {
              // Submit/reset inputs need the attribute removed completely to avoid
              // blank-text buttons.
              node.removeAttribute('value');
              return;
            }

            if (disableInputAttributeSyncing) {
              // When not syncing the value attribute, React only assigns a new value
              // whenever the defaultValue React prop has changed. When not present,
              // React does nothing
              if (props.hasOwnProperty('defaultValue')) {
                setDefaultValue(
                  node,
                  props.type,
                  getToStringValue(props.defaultValue)
                );
              }
            } else {
              // When syncing the value attribute, the value comes from a cascade of
              // properties:
              //  1. The value React property
              //  2. The defaultValue React property
              //  3. Otherwise there should be no change
              if (props.hasOwnProperty('value')) {
                setDefaultValue(node, props.type, value);
              } else if (props.hasOwnProperty('defaultValue')) {
                setDefaultValue(
                  node,
                  props.type,
                  getToStringValue(props.defaultValue)
                );
              }
            }

            if (disableInputAttributeSyncing) {
              // When not syncing the checked attribute, the attribute is directly
              // controllable from the defaultValue React property. It needs to be
              // updated as new props come in.
              if (props.defaultChecked == null) {
                node.removeAttribute('checked');
              } else {
                node.defaultChecked = !!props.defaultChecked;
              }
            } else {
              // When syncing the checked attribute, it only changes when it needs
              // to be removed, such as transitioning from a checkbox into a text input
              if (props.checked == null && props.defaultChecked != null) {
                node.defaultChecked = !!props.defaultChecked;
              }
            }
          }

          function postMountWrapper(element, props, isHydrating) {
            var node = element;

            // Do not assign value if it is already set. This prevents user text input
            // from being lost during SSR hydration.
            if (
              props.hasOwnProperty('value') ||
              props.hasOwnProperty('defaultValue')
            ) {
              var type = props.type;
              var isButton = type === 'submit' || type === 'reset';

              // Avoid setting value attribute on submit/reset inputs as it overrides the
              // default value provided by the browser. See: #12872
              if (
                isButton &&
                (props.value === undefined || props.value === null)
              ) {
                return;
              }

              var _initialValue = toString(node._wrapperState.initialValue);

              // Do not assign value if it is already set. This prevents user text input
              // from being lost during SSR hydration.
              if (!isHydrating) {
                if (disableInputAttributeSyncing) {
                  var value = getToStringValue(props.value);

                  // When not syncing the value attribute, the value property points
                  // directly to the React prop. Only assign it if it exists.
                  if (value != null) {
                    // Always assign on buttons so that it is possible to assign an
                    // empty string to clear button text.
                    //
                    // Otherwise, do not re-assign the value property if is empty. This
                    // potentially avoids a DOM write and prevents Firefox (~60.0.1) from
                    // prematurely marking required inputs as invalid. Equality is compared
                    // to the current value in case the browser provided value is not an
                    // empty string.
                    if (isButton || value !== node.value) {
                      node.value = toString(value);
                    }
                  }
                } else {
                  // When syncing the value attribute, the value property should use
                  // the the wrapperState._initialValue property. This uses:
                  //
                  //   1. The value React property when present
                  //   2. The defaultValue React property when present
                  //   3. An empty string
                  if (_initialValue !== node.value) {
                    node.value = _initialValue;
                  }
                }
              }

              if (disableInputAttributeSyncing) {
                // When not syncing the value attribute, assign the value attribute
                // directly from the defaultValue React property (when present)
                var defaultValue = getToStringValue(props.defaultValue);
                if (defaultValue != null) {
                  node.defaultValue = toString(defaultValue);
                }
              } else {
                // Otherwise, the value attribute is synchronized to the property,
                // so we assign defaultValue to the same thing as the value property
                // assignment step above.
                node.defaultValue = _initialValue;
              }
            }

            // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
            // this is needed to work around a chrome bug where setting defaultChecked
            // will sometimes influence the value of checked (even after detachment).
            // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
            // We need to temporarily unset name to avoid disrupting radio button groups.
            var name = node.name;
            if (name !== '') {
              node.name = '';
            }

            if (disableInputAttributeSyncing) {
              // When not syncing the checked attribute, the checked property
              // never gets assigned. It must be manually set. We don't want
              // to do this when hydrating so that existing user input isn't
              // modified
              if (!isHydrating) {
                updateChecked(element, props);
              }

              // Only assign the checked attribute if it is defined. This saves
              // a DOM write when controlling the checked attribute isn't needed
              // (text inputs, submit/reset)
              if (props.hasOwnProperty('defaultChecked')) {
                node.defaultChecked = !node.defaultChecked;
                node.defaultChecked = !!props.defaultChecked;
              }
            } else {
              // When syncing the checked attribute, both the the checked property and
              // attribute are assigned at the same time using defaultChecked. This uses:
              //
              //   1. The checked React property when present
              //   2. The defaultChecked React property when present
              //   3. Otherwise, false
              node.defaultChecked = !node.defaultChecked;
              node.defaultChecked = !!node._wrapperState.initialChecked;
            }

            if (name !== '') {
              node.name = name;
            }
          }

          function restoreControlledState(element, props) {
            var node = element;
            updateWrapper(node, props);
            updateNamedCousins(node, props);
          }

          function updateNamedCousins(rootNode, props) {
            var name = props.name;
            if (props.type === 'radio' && name != null) {
              var queryRoot = rootNode;

              while (queryRoot.parentNode) {
                queryRoot = queryRoot.parentNode;
              }

              // If `rootNode.form` was non-null, then we could try `form.elements`,
              // but that sometimes behaves strangely in IE8. We could also try using
              // `form.getElementsByName`, but that will only return direct children
              // and won't include inputs that use the HTML5 `form=` attribute. Since
              // the input might not even be in a form. It might not even be in the
              // document. Let's just use the local `querySelectorAll` to ensure we don't
              // miss anything.
              var group = queryRoot.querySelectorAll(
                'input[name=' + JSON.stringify('' + name) + '][type="radio"]'
              );

              for (var i = 0; i < group.length; i++) {
                var otherNode = group[i];
                if (
                  otherNode === rootNode ||
                  otherNode.form !== rootNode.form
                ) {
                  continue;
                }
                // This will throw if radio buttons rendered by different copies of React
                // and the same name are rendered into the same form (same as #1939).
                // That's probably okay; we don't support it just as we don't support
                // mixing React radio buttons with non-React ones.
                var otherProps = getFiberCurrentPropsFromNode$1(otherNode);
                !otherProps
                  ? invariant(
                      false,
                      'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.'
                    )
                  : void 0;

                // We need update the tracked value on the named cousin since the value
                // was changed but the input saw no event or value set
                updateValueIfChanged(otherNode);

                // If this is a controlled radio button group, forcing the input that
                // was previously checked to update will cause it to be come re-checked
                // as appropriate.
                updateWrapper(otherNode, otherProps);
              }
            }
          }

          // In Chrome, assigning defaultValue to certain input types triggers input validation.
          // For number inputs, the display value loses trailing decimal points. For email inputs,
          // Chrome raises "The specified value <x> is not a valid email address".
          //
          // Here we check to see if the defaultValue has actually changed, avoiding these problems
          // when the user is inputting text
          //
          // https://github.com/facebook/react/issues/7253
          function setDefaultValue(node, type, value) {
            if (
              // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
              type !== 'number' ||
              node.ownerDocument.activeElement !== node
            ) {
              if (value == null) {
                node.defaultValue = toString(node._wrapperState.initialValue);
              } else if (node.defaultValue !== toString(value)) {
                node.defaultValue = toString(value);
              }
            }
          }

          var eventTypes$1 = {
            change: {
              phasedRegistrationNames: {
                bubbled: 'onChange',
                captured: 'onChangeCapture'
              },
              dependencies: [
                TOP_BLUR,
                TOP_CHANGE,
                TOP_CLICK,
                TOP_FOCUS,
                TOP_INPUT,
                TOP_KEY_DOWN,
                TOP_KEY_UP,
                TOP_SELECTION_CHANGE
              ]
            }
          };

          function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
            var event = SyntheticEvent.getPooled(
              eventTypes$1.change,
              inst,
              nativeEvent,
              target
            );
            event.type = 'change';
            // Flag this event loop as needing state restore.
            enqueueStateRestore(target);
            accumulateTwoPhaseDispatches(event);
            return event;
          }
          /**
           * For IE shims
           */
          var activeElement = null;
          var activeElementInst = null;

          /**
           * SECTION: handle `change` event
           */
          function shouldUseChangeEvent(elem) {
            var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
            return (
              nodeName === 'select' ||
              (nodeName === 'input' && elem.type === 'file')
            );
          }

          function manualDispatchChangeEvent(nativeEvent) {
            var event = createAndAccumulateChangeEvent(
              activeElementInst,
              nativeEvent,
              getEventTarget(nativeEvent)
            );

            // If change and propertychange bubbled, we'd just bind to it like all the
            // other events and have it go through ReactBrowserEventEmitter. Since it
            // doesn't, we manually listen for the events and so we have to enqueue and
            // process the abstract event manually.
            //
            // Batching is necessary here in order to ensure that all event handlers run
            // before the next rerender (including event handlers attached to ancestor
            // elements instead of directly on the input). Without this, controlled
            // components don't work properly in conjunction with event bubbling because
            // the component is rerendered and the value reverted before all the event
            // handlers can run. See https://github.com/facebook/react/issues/708.
            batchedUpdates(runEventInBatch, event);
          }

          function runEventInBatch(event) {
            runEventsInBatch(event, false);
          }

          function getInstIfValueChanged(targetInst) {
            var targetNode = getNodeFromInstance$1(targetInst);
            if (updateValueIfChanged(targetNode)) {
              return targetInst;
            }
          }

          function getTargetInstForChangeEvent(topLevelType, targetInst) {
            if (topLevelType === TOP_CHANGE) {
              return targetInst;
            }
          }

          /**
           * SECTION: handle `input` event
           */
          var isInputEventSupported = false;
          if (canUseDOM) {
            // IE9 claims to support the input event but fails to trigger it when
            // deleting text, so we ignore its input events.
            isInputEventSupported =
              isEventSupported('input') &&
              (!document.documentMode || document.documentMode > 9);
          }

          /**
           * (For IE <=9) Starts tracking propertychange events on the passed-in element
           * and override the value property so that we can distinguish user events from
           * value changes in JS.
           */
          function startWatchingForValueChange(target, targetInst) {
            activeElement = target;
            activeElementInst = targetInst;
            activeElement.attachEvent('onpropertychange', handlePropertyChange);
          }

          /**
           * (For IE <=9) Removes the event listeners from the currently-tracked element,
           * if any exists.
           */
          function stopWatchingForValueChange() {
            if (!activeElement) {
              return;
            }
            activeElement.detachEvent('onpropertychange', handlePropertyChange);
            activeElement = null;
            activeElementInst = null;
          }

          /**
           * (For IE <=9) Handles a propertychange event, sending a `change` event if
           * the value of the active element has changed.
           */
          function handlePropertyChange(nativeEvent) {
            if (nativeEvent.propertyName !== 'value') {
              return;
            }
            if (getInstIfValueChanged(activeElementInst)) {
              manualDispatchChangeEvent(nativeEvent);
            }
          }

          function handleEventsForInputEventPolyfill(
            topLevelType,
            target,
            targetInst
          ) {
            if (topLevelType === TOP_FOCUS) {
              // In IE9, propertychange fires for most input events but is buggy and
              // doesn't fire when text is deleted, but conveniently, selectionchange
              // appears to fire in all of the remaining cases so we catch those and
              // forward the event if the value has changed
              // In either case, we don't want to call the event handler if the value
              // is changed from JS so we redefine a setter for `.value` that updates
              // our activeElementValue variable, allowing us to ignore those changes
              //
              // stopWatching() should be a noop here but we call it just in case we
              // missed a blur event somehow.
              stopWatchingForValueChange();
              startWatchingForValueChange(target, targetInst);
            } else if (topLevelType === TOP_BLUR) {
              stopWatchingForValueChange();
            }
          }

          // For IE8 and IE9.
          function getTargetInstForInputEventPolyfill(
            topLevelType,
            targetInst
          ) {
            if (
              topLevelType === TOP_SELECTION_CHANGE ||
              topLevelType === TOP_KEY_UP ||
              topLevelType === TOP_KEY_DOWN
            ) {
              // On the selectionchange event, the target is just document which isn't
              // helpful for us so just check activeElement instead.
              //
              // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
              // propertychange on the first input event after setting `value` from a
              // script and fires only keydown, keypress, keyup. Catching keyup usually
              // gets it and catching keydown lets us fire an event for the first
              // keystroke if user does a key repeat (it'll be a little delayed: right
              // before the second keystroke). Other input methods (e.g., paste) seem to
              // fire selectionchange normally.
              return getInstIfValueChanged(activeElementInst);
            }
          }

          /**
           * SECTION: handle `click` event
           */
          function shouldUseClickEvent(elem) {
            // Use the `click` event to detect changes to checkbox and radio inputs.
            // This approach works across all browsers, whereas `change` does not fire
            // until `blur` in IE8.
            var nodeName = elem.nodeName;
            return (
              nodeName &&
              nodeName.toLowerCase() === 'input' &&
              (elem.type === 'checkbox' || elem.type === 'radio')
            );
          }

          function getTargetInstForClickEvent(topLevelType, targetInst) {
            if (topLevelType === TOP_CLICK) {
              return getInstIfValueChanged(targetInst);
            }
          }

          function getTargetInstForInputOrChangeEvent(
            topLevelType,
            targetInst
          ) {
            if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {
              return getInstIfValueChanged(targetInst);
            }
          }

          function handleControlledInputBlur(node) {
            var state = node._wrapperState;

            if (!state || !state.controlled || node.type !== 'number') {
              return;
            }

            if (!disableInputAttributeSyncing) {
              // If controlled, assign the value attribute to the current value on blur
              setDefaultValue(node, 'number', node.value);
            }
          }

          /**
           * This plugin creates an `onChange` event that normalizes change events
           * across form elements. This event fires at a time when it's possible to
           * change the element's value without seeing a flicker.
           *
           * Supported elements are:
           * - input (see `isTextInputElement`)
           * - textarea
           * - select
           */
          var ChangeEventPlugin = {
            eventTypes: eventTypes$1,

            _isInputEventSupported: isInputEventSupported,

            extractEvents: function(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            ) {
              var targetNode = targetInst
                ? getNodeFromInstance$1(targetInst)
                : window;

              var getTargetInstFunc = void 0,
                handleEventFunc = void 0;
              if (shouldUseChangeEvent(targetNode)) {
                getTargetInstFunc = getTargetInstForChangeEvent;
              } else if (isTextInputElement(targetNode)) {
                if (isInputEventSupported) {
                  getTargetInstFunc = getTargetInstForInputOrChangeEvent;
                } else {
                  getTargetInstFunc = getTargetInstForInputEventPolyfill;
                  handleEventFunc = handleEventsForInputEventPolyfill;
                }
              } else if (shouldUseClickEvent(targetNode)) {
                getTargetInstFunc = getTargetInstForClickEvent;
              }

              if (getTargetInstFunc) {
                var inst = getTargetInstFunc(topLevelType, targetInst);
                if (inst) {
                  var event = createAndAccumulateChangeEvent(
                    inst,
                    nativeEvent,
                    nativeEventTarget
                  );
                  return event;
                }
              }

              if (handleEventFunc) {
                handleEventFunc(topLevelType, targetNode, targetInst);
              }

              // When blurring, set the value attribute for number inputs
              if (topLevelType === TOP_BLUR) {
                handleControlledInputBlur(targetNode);
              }
            }
          };

          /**
           * Module that is injectable into `EventPluginHub`, that specifies a
           * deterministic ordering of `EventPlugin`s. A convenient way to reason about
           * plugins, without having to package every one of them. This is better than
           * having plugins be ordered in the same order that they are injected because
           * that ordering would be influenced by the packaging order.
           * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
           * preventing default on events is convenient in `SimpleEventPlugin` handlers.
           */
          var DOMEventPluginOrder = [
            'ResponderEventPlugin',
            'SimpleEventPlugin',
            'EnterLeaveEventPlugin',
            'ChangeEventPlugin',
            'SelectEventPlugin',
            'BeforeInputEventPlugin'
          ];

          var SyntheticUIEvent = SyntheticEvent.extend({
            view: null,
            detail: null
          });

          /**
           * Translation from modifier key to the associated property in the event.
           * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
           */

          var modifierKeyToProp = {
            Alt: 'altKey',
            Control: 'ctrlKey',
            Meta: 'metaKey',
            Shift: 'shiftKey'
          };

          // IE8 does not implement getModifierState so we simply map it to the only
          // modifier keys exposed by the event itself, does not support Lock-keys.
          // Currently, all major browsers except Chrome seems to support Lock-keys.
          function modifierStateGetter(keyArg) {
            var syntheticEvent = this;
            var nativeEvent = syntheticEvent.nativeEvent;
            if (nativeEvent.getModifierState) {
              return nativeEvent.getModifierState(keyArg);
            }
            var keyProp = modifierKeyToProp[keyArg];
            return keyProp ? !!nativeEvent[keyProp] : false;
          }

          function getEventModifierState(nativeEvent) {
            return modifierStateGetter;
          }

          var previousScreenX = 0;
          var previousScreenY = 0;
          // Use flags to signal movementX/Y has already been set
          var isMovementXSet = false;
          var isMovementYSet = false;

          /**
           * @interface MouseEvent
           * @see http://www.w3.org/TR/DOM-Level-3-Events/
           */
          var SyntheticMouseEvent = SyntheticUIEvent.extend({
            screenX: null,
            screenY: null,
            clientX: null,
            clientY: null,
            pageX: null,
            pageY: null,
            ctrlKey: null,
            shiftKey: null,
            altKey: null,
            metaKey: null,
            getModifierState: getEventModifierState,
            button: null,
            buttons: null,
            relatedTarget: function(event) {
              return (
                event.relatedTarget ||
                (event.fromElement === event.srcElement
                  ? event.toElement
                  : event.fromElement)
              );
            },
            movementX: function(event) {
              if ('movementX' in event) {
                return event.movementX;
              }

              var screenX = previousScreenX;
              previousScreenX = event.screenX;

              if (!isMovementXSet) {
                isMovementXSet = true;
                return 0;
              }

              return event.type === 'mousemove' ? event.screenX - screenX : 0;
            },
            movementY: function(event) {
              if ('movementY' in event) {
                return event.movementY;
              }

              var screenY = previousScreenY;
              previousScreenY = event.screenY;

              if (!isMovementYSet) {
                isMovementYSet = true;
                return 0;
              }

              return event.type === 'mousemove' ? event.screenY - screenY : 0;
            }
          });

          /**
           * @interface PointerEvent
           * @see http://www.w3.org/TR/pointerevents/
           */
          var SyntheticPointerEvent = SyntheticMouseEvent.extend({
            pointerId: null,
            width: null,
            height: null,
            pressure: null,
            tangentialPressure: null,
            tiltX: null,
            tiltY: null,
            twist: null,
            pointerType: null,
            isPrimary: null
          });

          var eventTypes$2 = {
            mouseEnter: {
              registrationName: 'onMouseEnter',
              dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
            },
            mouseLeave: {
              registrationName: 'onMouseLeave',
              dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
            },
            pointerEnter: {
              registrationName: 'onPointerEnter',
              dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
            },
            pointerLeave: {
              registrationName: 'onPointerLeave',
              dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
            }
          };

          var EnterLeaveEventPlugin = {
            eventTypes: eventTypes$2,

            /**
             * For almost every interaction we care about, there will be both a top-level
             * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
             * we do not extract duplicate events. However, moving the mouse into the
             * browser from outside will not fire a `mouseout` event. In this case, we use
             * the `mouseover` top-level event.
             */
            extractEvents: function(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            ) {
              var isOverEvent =
                topLevelType === TOP_MOUSE_OVER ||
                topLevelType === TOP_POINTER_OVER;
              var isOutEvent =
                topLevelType === TOP_MOUSE_OUT ||
                topLevelType === TOP_POINTER_OUT;

              if (
                isOverEvent &&
                (nativeEvent.relatedTarget || nativeEvent.fromElement)
              ) {
                return null;
              }

              if (!isOutEvent && !isOverEvent) {
                // Must not be a mouse or pointer in or out - ignoring.
                return null;
              }

              var win = void 0;
              if (nativeEventTarget.window === nativeEventTarget) {
                // `nativeEventTarget` is probably a window object.
                win = nativeEventTarget;
              } else {
                // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
                var doc = nativeEventTarget.ownerDocument;
                if (doc) {
                  win = doc.defaultView || doc.parentWindow;
                } else {
                  win = window;
                }
              }

              var from = void 0;
              var to = void 0;
              if (isOutEvent) {
                from = targetInst;
                var related =
                  nativeEvent.relatedTarget || nativeEvent.toElement;
                to = related ? getClosestInstanceFromNode(related) : null;
              } else {
                // Moving to a node from outside the window.
                from = null;
                to = targetInst;
              }

              if (from === to) {
                // Nothing pertains to our managed components.
                return null;
              }

              var eventInterface = void 0,
                leaveEventType = void 0,
                enterEventType = void 0,
                eventTypePrefix = void 0;

              if (
                topLevelType === TOP_MOUSE_OUT ||
                topLevelType === TOP_MOUSE_OVER
              ) {
                eventInterface = SyntheticMouseEvent;
                leaveEventType = eventTypes$2.mouseLeave;
                enterEventType = eventTypes$2.mouseEnter;
                eventTypePrefix = 'mouse';
              } else if (
                topLevelType === TOP_POINTER_OUT ||
                topLevelType === TOP_POINTER_OVER
              ) {
                eventInterface = SyntheticPointerEvent;
                leaveEventType = eventTypes$2.pointerLeave;
                enterEventType = eventTypes$2.pointerEnter;
                eventTypePrefix = 'pointer';
              }

              var fromNode = from == null ? win : getNodeFromInstance$1(from);
              var toNode = to == null ? win : getNodeFromInstance$1(to);

              var leave = eventInterface.getPooled(
                leaveEventType,
                from,
                nativeEvent,
                nativeEventTarget
              );
              leave.type = eventTypePrefix + 'leave';
              leave.target = fromNode;
              leave.relatedTarget = toNode;

              var enter = eventInterface.getPooled(
                enterEventType,
                to,
                nativeEvent,
                nativeEventTarget
              );
              enter.type = eventTypePrefix + 'enter';
              enter.target = toNode;
              enter.relatedTarget = fromNode;

              accumulateEnterLeaveDispatches(leave, enter, from, to);

              return [leave, enter];
            }
          };

          /*eslint-disable no-self-compare */

          var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

          /**
           * inlined Object.is polyfill to avoid requiring consumers ship their own
           * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
           */
          function is(x, y) {
            // SameValue algorithm
            if (x === y) {
              // Steps 1-5, 7-10
              // Steps 6.b-6.e: +0 != -0
              // Added the nonzero y check to make Flow happy, but it is redundant
              return x !== 0 || y !== 0 || 1 / x === 1 / y;
            } else {
              // Step 6.a: NaN == NaN
              return x !== x && y !== y;
            }
          }

          /**
           * Performs equality by iterating through keys on an object and returning false
           * when any key has values which are not strictly equal between the arguments.
           * Returns true when the values of all keys are strictly equal.
           */
          function shallowEqual(objA, objB) {
            if (is(objA, objB)) {
              return true;
            }

            if (
              typeof objA !== 'object' ||
              objA === null ||
              typeof objB !== 'object' ||
              objB === null
            ) {
              return false;
            }

            var keysA = Object.keys(objA);
            var keysB = Object.keys(objB);

            if (keysA.length !== keysB.length) {
              return false;
            }

            // Test for A's keys different from B.
            for (var i = 0; i < keysA.length; i++) {
              if (
                !hasOwnProperty$1.call(objB, keysA[i]) ||
                !is(objA[keysA[i]], objB[keysA[i]])
              ) {
                return false;
              }
            }

            return true;
          }

          /**
           * `ReactInstanceMap` maintains a mapping from a public facing stateful
           * instance (key) and the internal representation (value). This allows public
           * methods to accept the user facing instance as an argument and map them back
           * to internal methods.
           *
           * Note that this module is currently shared and assumed to be stateless.
           * If this becomes an actual Map, that will break.
           */

          /**
           * This API should be called `delete` but we'd have to make sure to always
           * transform these to strings for IE support. When this transform is fully
           * supported we can rename it.
           */

          function get(key) {
            return key._reactInternalFiber;
          }

          function has(key) {
            return key._reactInternalFiber !== undefined;
          }

          function set(key, value) {
            key._reactInternalFiber = value;
          }

          // Don't change these two values. They're used by React Dev Tools.
          var NoEffect = /*              */ 0;
          var PerformedWork = /*         */ 1;

          // You can change the rest (and add more).
          var Placement = /*             */ 2;
          var Update = /*                */ 4;
          var PlacementAndUpdate = /*    */ 6;
          var Deletion = /*              */ 8;
          var ContentReset = /*          */ 16;
          var Callback = /*              */ 32;
          var DidCapture = /*            */ 64;
          var Ref = /*                   */ 128;
          var Snapshot = /*              */ 256;

          // Update & Callback & Ref & Snapshot
          var LifecycleEffectMask = /*   */ 420;

          // Union of all host effects
          var HostEffectMask = /*        */ 511;

          var Incomplete = /*            */ 512;
          var ShouldCapture = /*         */ 1024;

          var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;

          var MOUNTING = 1;
          var MOUNTED = 2;
          var UNMOUNTED = 3;

          function isFiberMountedImpl(fiber) {
            var node = fiber;
            if (!fiber.alternate) {
              // If there is no alternate, this might be a new tree that isn't inserted
              // yet. If it is, then it will have a pending insertion effect on it.
              if ((node.effectTag & Placement) !== NoEffect) {
                return MOUNTING;
              }
              while (node.return) {
                node = node.return;
                if ((node.effectTag & Placement) !== NoEffect) {
                  return MOUNTING;
                }
              }
            } else {
              while (node.return) {
                node = node.return;
              }
            }
            if (node.tag === HostRoot) {
              // TODO: Check if this was a nested HostRoot when used with
              // renderContainerIntoSubtree.
              return MOUNTED;
            }
            // If we didn't hit the root, that means that we're in an disconnected tree
            // that has been unmounted.
            return UNMOUNTED;
          }

          function isFiberMounted(fiber) {
            return isFiberMountedImpl(fiber) === MOUNTED;
          }

          function isMounted(component) {
            {
              var owner = ReactCurrentOwner$1.current;
              if (
                owner !== null &&
                (owner.tag === ClassComponent ||
                  owner.tag === ClassComponentLazy)
              ) {
                var ownerFiber = owner;
                var instance = ownerFiber.stateNode;
                !instance._warnedAboutRefsInRender
                  ? warningWithoutStack$1(
                      false,
                      '%s is accessing isMounted inside its render() function. ' +
                        'render() should be a pure function of props and state. It should ' +
                        'never access something that requires stale data from the previous ' +
                        'render, such as refs. Move this logic to componentDidMount and ' +
                        'componentDidUpdate instead.',
                      getComponentName(ownerFiber.type) || 'A component'
                    )
                  : void 0;
                instance._warnedAboutRefsInRender = true;
              }
            }

            var fiber = get(component);
            if (!fiber) {
              return false;
            }
            return isFiberMountedImpl(fiber) === MOUNTED;
          }

          function assertIsMounted(fiber) {
            !(isFiberMountedImpl(fiber) === MOUNTED)
              ? invariant(
                  false,
                  'Unable to find node on an unmounted component.'
                )
              : void 0;
          }

          function findCurrentFiberUsingSlowPath(fiber) {
            var alternate = fiber.alternate;
            if (!alternate) {
              // If there is no alternate, then we only need to check if it is mounted.
              var state = isFiberMountedImpl(fiber);
              !(state !== UNMOUNTED)
                ? invariant(
                    false,
                    'Unable to find node on an unmounted component.'
                  )
                : void 0;
              if (state === MOUNTING) {
                return null;
              }
              return fiber;
            }
            // If we have two possible branches, we'll walk backwards up to the root
            // to see what path the root points to. On the way we may hit one of the
            // special cases and we'll deal with them.
            var a = fiber;
            var b = alternate;
            while (true) {
              var parentA = a.return;
              var parentB = parentA ? parentA.alternate : null;
              if (!parentA || !parentB) {
                // We're at the root.
                break;
              }

              // If both copies of the parent fiber point to the same child, we can
              // assume that the child is current. This happens when we bailout on low
              // priority: the bailed out fiber's child reuses the current child.
              if (parentA.child === parentB.child) {
                var child = parentA.child;
                while (child) {
                  if (child === a) {
                    // We've determined that A is the current branch.
                    assertIsMounted(parentA);
                    return fiber;
                  }
                  if (child === b) {
                    // We've determined that B is the current branch.
                    assertIsMounted(parentA);
                    return alternate;
                  }
                  child = child.sibling;
                }
                // We should never have an alternate for any mounting node. So the only
                // way this could possibly happen is if this was unmounted, if at all.
                invariant(
                  false,
                  'Unable to find node on an unmounted component.'
                );
              }

              if (a.return !== b.return) {
                // The return pointer of A and the return pointer of B point to different
                // fibers. We assume that return pointers never criss-cross, so A must
                // belong to the child set of A.return, and B must belong to the child
                // set of B.return.
                a = parentA;
                b = parentB;
              } else {
                // The return pointers point to the same fiber. We'll have to use the
                // default, slow path: scan the child sets of each parent alternate to see
                // which child belongs to which set.
                //
                // Search parent A's child set
                var didFindChild = false;
                var _child = parentA.child;
                while (_child) {
                  if (_child === a) {
                    didFindChild = true;
                    a = parentA;
                    b = parentB;
                    break;
                  }
                  if (_child === b) {
                    didFindChild = true;
                    b = parentA;
                    a = parentB;
                    break;
                  }
                  _child = _child.sibling;
                }
                if (!didFindChild) {
                  // Search parent B's child set
                  _child = parentB.child;
                  while (_child) {
                    if (_child === a) {
                      didFindChild = true;
                      a = parentB;
                      b = parentA;
                      break;
                    }
                    if (_child === b) {
                      didFindChild = true;
                      b = parentB;
                      a = parentA;
                      break;
                    }
                    _child = _child.sibling;
                  }
                  !didFindChild
                    ? invariant(
                        false,
                        'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.'
                      )
                    : void 0;
                }
              }

              !(a.alternate === b)
                ? invariant(
                    false,
                    "Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."
                  )
                : void 0;
            }
            // If the root is not a host container, we're in a disconnected tree. I.e.
            // unmounted.
            !(a.tag === HostRoot)
              ? invariant(
                  false,
                  'Unable to find node on an unmounted component.'
                )
              : void 0;
            if (a.stateNode.current === a) {
              // We've determined that A is the current branch.
              return fiber;
            }
            // Otherwise B has to be current branch.
            return alternate;
          }

          function findCurrentHostFiber(parent) {
            var currentParent = findCurrentFiberUsingSlowPath(parent);
            if (!currentParent) {
              return null;
            }

            // Next we'll drill down this component to find the first HostComponent/Text.
            var node = currentParent;
            while (true) {
              if (node.tag === HostComponent || node.tag === HostText) {
                return node;
              } else if (node.child) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === currentParent) {
                return null;
              }
              while (!node.sibling) {
                if (!node.return || node.return === currentParent) {
                  return null;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
            // Flow needs the return null here, but ESLint complains about it.
            // eslint-disable-next-line no-unreachable
            return null;
          }

          function findCurrentHostFiberWithNoPortals(parent) {
            var currentParent = findCurrentFiberUsingSlowPath(parent);
            if (!currentParent) {
              return null;
            }

            // Next we'll drill down this component to find the first HostComponent/Text.
            var node = currentParent;
            while (true) {
              if (node.tag === HostComponent || node.tag === HostText) {
                return node;
              } else if (node.child && node.tag !== HostPortal) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === currentParent) {
                return null;
              }
              while (!node.sibling) {
                if (!node.return || node.return === currentParent) {
                  return null;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
            // Flow needs the return null here, but ESLint complains about it.
            // eslint-disable-next-line no-unreachable
            return null;
          }

          function addEventBubbleListener(element, eventType, listener) {
            element.addEventListener(eventType, listener, false);
          }

          function addEventCaptureListener(element, eventType, listener) {
            element.addEventListener(eventType, listener, true);
          }

          /**
           * @interface Event
           * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
           * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
           */
          var SyntheticAnimationEvent = SyntheticEvent.extend({
            animationName: null,
            elapsedTime: null,
            pseudoElement: null
          });

          /**
           * @interface Event
           * @see http://www.w3.org/TR/clipboard-apis/
           */
          var SyntheticClipboardEvent = SyntheticEvent.extend({
            clipboardData: function(event) {
              return 'clipboardData' in event
                ? event.clipboardData
                : window.clipboardData;
            }
          });

          /**
           * @interface FocusEvent
           * @see http://www.w3.org/TR/DOM-Level-3-Events/
           */
          var SyntheticFocusEvent = SyntheticUIEvent.extend({
            relatedTarget: null
          });

          /**
           * `charCode` represents the actual "character code" and is safe to use with
           * `String.fromCharCode`. As such, only keys that correspond to printable
           * characters produce a valid `charCode`, the only exception to this is Enter.
           * The Tab-key is considered non-printable and does not have a `charCode`,
           * presumably because it does not produce a tab-character in browsers.
           *
           * @param {object} nativeEvent Native browser event.
           * @return {number} Normalized `charCode` property.
           */
          function getEventCharCode(nativeEvent) {
            var charCode = void 0;
            var keyCode = nativeEvent.keyCode;

            if ('charCode' in nativeEvent) {
              charCode = nativeEvent.charCode;

              // FF does not set `charCode` for the Enter-key, check against `keyCode`.
              if (charCode === 0 && keyCode === 13) {
                charCode = 13;
              }
            } else {
              // IE8 does not implement `charCode`, but `keyCode` has the correct value.
              charCode = keyCode;
            }

            // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
            // report Enter as charCode 10 when ctrl is pressed.
            if (charCode === 10) {
              charCode = 13;
            }

            // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
            // Must not discard the (non-)printable Enter-key.
            if (charCode >= 32 || charCode === 13) {
              return charCode;
            }

            return 0;
          }

          /**
           * Normalization of deprecated HTML5 `key` values
           * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
           */
          var normalizeKey = {
            Esc: 'Escape',
            Spacebar: ' ',
            Left: 'ArrowLeft',
            Up: 'ArrowUp',
            Right: 'ArrowRight',
            Down: 'ArrowDown',
            Del: 'Delete',
            Win: 'OS',
            Menu: 'ContextMenu',
            Apps: 'ContextMenu',
            Scroll: 'ScrollLock',
            MozPrintableKey: 'Unidentified'
          };

          /**
           * Translation from legacy `keyCode` to HTML5 `key`
           * Only special keys supported, all others depend on keyboard layout or browser
           * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
           */
          var translateToKey = {
            '8': 'Backspace',
            '9': 'Tab',
            '12': 'Clear',
            '13': 'Enter',
            '16': 'Shift',
            '17': 'Control',
            '18': 'Alt',
            '19': 'Pause',
            '20': 'CapsLock',
            '27': 'Escape',
            '32': ' ',
            '33': 'PageUp',
            '34': 'PageDown',
            '35': 'End',
            '36': 'Home',
            '37': 'ArrowLeft',
            '38': 'ArrowUp',
            '39': 'ArrowRight',
            '40': 'ArrowDown',
            '45': 'Insert',
            '46': 'Delete',
            '112': 'F1',
            '113': 'F2',
            '114': 'F3',
            '115': 'F4',
            '116': 'F5',
            '117': 'F6',
            '118': 'F7',
            '119': 'F8',
            '120': 'F9',
            '121': 'F10',
            '122': 'F11',
            '123': 'F12',
            '144': 'NumLock',
            '145': 'ScrollLock',
            '224': 'Meta'
          };

          /**
           * @param {object} nativeEvent Native browser event.
           * @return {string} Normalized `key` property.
           */
          function getEventKey(nativeEvent) {
            if (nativeEvent.key) {
              // Normalize inconsistent values reported by browsers due to
              // implementations of a working draft specification.

              // FireFox implements `key` but returns `MozPrintableKey` for all
              // printable characters (normalized to `Unidentified`), ignore it.
              var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
              if (key !== 'Unidentified') {
                return key;
              }
            }

            // Browser does not implement `key`, polyfill as much of it as we can.
            if (nativeEvent.type === 'keypress') {
              var charCode = getEventCharCode(nativeEvent);

              // The enter-key is technically both printable and non-printable and can
              // thus be captured by `keypress`, no other non-printable key should.
              return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
            }
            if (
              nativeEvent.type === 'keydown' ||
              nativeEvent.type === 'keyup'
            ) {
              // While user keyboard layout determines the actual meaning of each
              // `keyCode` value, almost all function keys have a universal value.
              return translateToKey[nativeEvent.keyCode] || 'Unidentified';
            }
            return '';
          }

          /**
           * @interface KeyboardEvent
           * @see http://www.w3.org/TR/DOM-Level-3-Events/
           */
          var SyntheticKeyboardEvent = SyntheticUIEvent.extend({
            key: getEventKey,
            location: null,
            ctrlKey: null,
            shiftKey: null,
            altKey: null,
            metaKey: null,
            repeat: null,
            locale: null,
            getModifierState: getEventModifierState,
            // Legacy Interface
            charCode: function(event) {
              // `charCode` is the result of a KeyPress event and represents the value of
              // the actual printable character.

              // KeyPress is deprecated, but its replacement is not yet final and not
              // implemented in any major browser. Only KeyPress has charCode.
              if (event.type === 'keypress') {
                return getEventCharCode(event);
              }
              return 0;
            },
            keyCode: function(event) {
              // `keyCode` is the result of a KeyDown/Up event and represents the value of
              // physical keyboard key.

              // The actual meaning of the value depends on the users' keyboard layout
              // which cannot be detected. Assuming that it is a US keyboard layout
              // provides a surprisingly accurate mapping for US and European users.
              // Due to this, it is left to the user to implement at this time.
              if (event.type === 'keydown' || event.type === 'keyup') {
                return event.keyCode;
              }
              return 0;
            },
            which: function(event) {
              // `which` is an alias for either `keyCode` or `charCode` depending on the
              // type of the event.
              if (event.type === 'keypress') {
                return getEventCharCode(event);
              }
              if (event.type === 'keydown' || event.type === 'keyup') {
                return event.keyCode;
              }
              return 0;
            }
          });

          /**
           * @interface DragEvent
           * @see http://www.w3.org/TR/DOM-Level-3-Events/
           */
          var SyntheticDragEvent = SyntheticMouseEvent.extend({
            dataTransfer: null
          });

          /**
           * @interface TouchEvent
           * @see http://www.w3.org/TR/touch-events/
           */
          var SyntheticTouchEvent = SyntheticUIEvent.extend({
            touches: null,
            targetTouches: null,
            changedTouches: null,
            altKey: null,
            metaKey: null,
            ctrlKey: null,
            shiftKey: null,
            getModifierState: getEventModifierState
          });

          /**
           * @interface Event
           * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
           * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
           */
          var SyntheticTransitionEvent = SyntheticEvent.extend({
            propertyName: null,
            elapsedTime: null,
            pseudoElement: null
          });

          /**
           * @interface WheelEvent
           * @see http://www.w3.org/TR/DOM-Level-3-Events/
           */
          var SyntheticWheelEvent = SyntheticMouseEvent.extend({
            deltaX: function(event) {
              return 'deltaX' in event
                ? event.deltaX // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
                : 'wheelDeltaX' in event
                  ? -event.wheelDeltaX
                  : 0;
            },
            deltaY: function(event) {
              return 'deltaY' in event
                ? event.deltaY // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
                : 'wheelDeltaY' in event
                  ? -event.wheelDeltaY // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
                  : 'wheelDelta' in event
                    ? -event.wheelDelta
                    : 0;
            },

            deltaZ: null,

            // Browsers without "deltaMode" is reporting in raw wheel delta where one
            // notch on the scroll is always +/- 120, roughly equivalent to pixels.
            // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
            // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
            deltaMode: null
          });

          /**
           * Turns
           * ['abort', ...]
           * into
           * eventTypes = {
           *   'abort': {
           *     phasedRegistrationNames: {
           *       bubbled: 'onAbort',
           *       captured: 'onAbortCapture',
           *     },
           *     dependencies: [TOP_ABORT],
           *   },
           *   ...
           * };
           * topLevelEventsToDispatchConfig = new Map([
           *   [TOP_ABORT, { sameConfig }],
           * ]);
           */

          var interactiveEventTypeNames = [
            [TOP_BLUR, 'blur'],
            [TOP_CANCEL, 'cancel'],
            [TOP_CLICK, 'click'],
            [TOP_CLOSE, 'close'],
            [TOP_CONTEXT_MENU, 'contextMenu'],
            [TOP_COPY, 'copy'],
            [TOP_CUT, 'cut'],
            [TOP_AUX_CLICK, 'auxClick'],
            [TOP_DOUBLE_CLICK, 'doubleClick'],
            [TOP_DRAG_END, 'dragEnd'],
            [TOP_DRAG_START, 'dragStart'],
            [TOP_DROP, 'drop'],
            [TOP_FOCUS, 'focus'],
            [TOP_INPUT, 'input'],
            [TOP_INVALID, 'invalid'],
            [TOP_KEY_DOWN, 'keyDown'],
            [TOP_KEY_PRESS, 'keyPress'],
            [TOP_KEY_UP, 'keyUp'],
            [TOP_MOUSE_DOWN, 'mouseDown'],
            [TOP_MOUSE_UP, 'mouseUp'],
            [TOP_PASTE, 'paste'],
            [TOP_PAUSE, 'pause'],
            [TOP_PLAY, 'play'],
            [TOP_POINTER_CANCEL, 'pointerCancel'],
            [TOP_POINTER_DOWN, 'pointerDown'],
            [TOP_POINTER_UP, 'pointerUp'],
            [TOP_RATE_CHANGE, 'rateChange'],
            [TOP_RESET, 'reset'],
            [TOP_SEEKED, 'seeked'],
            [TOP_SUBMIT, 'submit'],
            [TOP_TOUCH_CANCEL, 'touchCancel'],
            [TOP_TOUCH_END, 'touchEnd'],
            [TOP_TOUCH_START, 'touchStart'],
            [TOP_VOLUME_CHANGE, 'volumeChange']
          ];
          var nonInteractiveEventTypeNames = [
            [TOP_ABORT, 'abort'],
            [TOP_ANIMATION_END, 'animationEnd'],
            [TOP_ANIMATION_ITERATION, 'animationIteration'],
            [TOP_ANIMATION_START, 'animationStart'],
            [TOP_CAN_PLAY, 'canPlay'],
            [TOP_CAN_PLAY_THROUGH, 'canPlayThrough'],
            [TOP_DRAG, 'drag'],
            [TOP_DRAG_ENTER, 'dragEnter'],
            [TOP_DRAG_EXIT, 'dragExit'],
            [TOP_DRAG_LEAVE, 'dragLeave'],
            [TOP_DRAG_OVER, 'dragOver'],
            [TOP_DURATION_CHANGE, 'durationChange'],
            [TOP_EMPTIED, 'emptied'],
            [TOP_ENCRYPTED, 'encrypted'],
            [TOP_ENDED, 'ended'],
            [TOP_ERROR, 'error'],
            [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture'],
            [TOP_LOAD, 'load'],
            [TOP_LOADED_DATA, 'loadedData'],
            [TOP_LOADED_METADATA, 'loadedMetadata'],
            [TOP_LOAD_START, 'loadStart'],
            [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture'],
            [TOP_MOUSE_MOVE, 'mouseMove'],
            [TOP_MOUSE_OUT, 'mouseOut'],
            [TOP_MOUSE_OVER, 'mouseOver'],
            [TOP_PLAYING, 'playing'],
            [TOP_POINTER_MOVE, 'pointerMove'],
            [TOP_POINTER_OUT, 'pointerOut'],
            [TOP_POINTER_OVER, 'pointerOver'],
            [TOP_PROGRESS, 'progress'],
            [TOP_SCROLL, 'scroll'],
            [TOP_SEEKING, 'seeking'],
            [TOP_STALLED, 'stalled'],
            [TOP_SUSPEND, 'suspend'],
            [TOP_TIME_UPDATE, 'timeUpdate'],
            [TOP_TOGGLE, 'toggle'],
            [TOP_TOUCH_MOVE, 'touchMove'],
            [TOP_TRANSITION_END, 'transitionEnd'],
            [TOP_WAITING, 'waiting'],
            [TOP_WHEEL, 'wheel']
          ];

          var eventTypes$4 = {};
          var topLevelEventsToDispatchConfig = {};

          function addEventTypeNameToConfig(_ref, isInteractive) {
            var topEvent = _ref[0],
              event = _ref[1];

            var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
            var onEvent = 'on' + capitalizedEvent;

            var type = {
              phasedRegistrationNames: {
                bubbled: onEvent,
                captured: onEvent + 'Capture'
              },
              dependencies: [topEvent],
              isInteractive: isInteractive
            };
            eventTypes$4[event] = type;
            topLevelEventsToDispatchConfig[topEvent] = type;
          }

          interactiveEventTypeNames.forEach(function(eventTuple) {
            addEventTypeNameToConfig(eventTuple, true);
          });
          nonInteractiveEventTypeNames.forEach(function(eventTuple) {
            addEventTypeNameToConfig(eventTuple, false);
          });

          // Only used in DEV for exhaustiveness validation.
          var knownHTMLTopLevelTypes = [
            TOP_ABORT,
            TOP_CANCEL,
            TOP_CAN_PLAY,
            TOP_CAN_PLAY_THROUGH,
            TOP_CLOSE,
            TOP_DURATION_CHANGE,
            TOP_EMPTIED,
            TOP_ENCRYPTED,
            TOP_ENDED,
            TOP_ERROR,
            TOP_INPUT,
            TOP_INVALID,
            TOP_LOAD,
            TOP_LOADED_DATA,
            TOP_LOADED_METADATA,
            TOP_LOAD_START,
            TOP_PAUSE,
            TOP_PLAY,
            TOP_PLAYING,
            TOP_PROGRESS,
            TOP_RATE_CHANGE,
            TOP_RESET,
            TOP_SEEKED,
            TOP_SEEKING,
            TOP_STALLED,
            TOP_SUBMIT,
            TOP_SUSPEND,
            TOP_TIME_UPDATE,
            TOP_TOGGLE,
            TOP_VOLUME_CHANGE,
            TOP_WAITING
          ];

          var SimpleEventPlugin = {
            eventTypes: eventTypes$4,

            isInteractiveTopLevelEventType: function(topLevelType) {
              var config = topLevelEventsToDispatchConfig[topLevelType];
              return config !== undefined && config.isInteractive === true;
            },

            extractEvents: function(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            ) {
              var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
              if (!dispatchConfig) {
                return null;
              }
              var EventConstructor = void 0;
              switch (topLevelType) {
                case TOP_KEY_PRESS:
                  // Firefox creates a keypress event for function keys too. This removes
                  // the unwanted keypress events. Enter is however both printable and
                  // non-printable. One would expect Tab to be as well (but it isn't).
                  if (getEventCharCode(nativeEvent) === 0) {
                    return null;
                  }
                /* falls through */
                case TOP_KEY_DOWN:
                case TOP_KEY_UP:
                  EventConstructor = SyntheticKeyboardEvent;
                  break;
                case TOP_BLUR:
                case TOP_FOCUS:
                  EventConstructor = SyntheticFocusEvent;
                  break;
                case TOP_CLICK:
                  // Firefox creates a click event on right mouse clicks. This removes the
                  // unwanted click events.
                  if (nativeEvent.button === 2) {
                    return null;
                  }
                /* falls through */
                case TOP_AUX_CLICK:
                case TOP_DOUBLE_CLICK:
                case TOP_MOUSE_DOWN:
                case TOP_MOUSE_MOVE:
                case TOP_MOUSE_UP:
                // TODO: Disabled elements should not respond to mouse events
                /* falls through */
                case TOP_MOUSE_OUT:
                case TOP_MOUSE_OVER:
                case TOP_CONTEXT_MENU:
                  EventConstructor = SyntheticMouseEvent;
                  break;
                case TOP_DRAG:
                case TOP_DRAG_END:
                case TOP_DRAG_ENTER:
                case TOP_DRAG_EXIT:
                case TOP_DRAG_LEAVE:
                case TOP_DRAG_OVER:
                case TOP_DRAG_START:
                case TOP_DROP:
                  EventConstructor = SyntheticDragEvent;
                  break;
                case TOP_TOUCH_CANCEL:
                case TOP_TOUCH_END:
                case TOP_TOUCH_MOVE:
                case TOP_TOUCH_START:
                  EventConstructor = SyntheticTouchEvent;
                  break;
                case TOP_ANIMATION_END:
                case TOP_ANIMATION_ITERATION:
                case TOP_ANIMATION_START:
                  EventConstructor = SyntheticAnimationEvent;
                  break;
                case TOP_TRANSITION_END:
                  EventConstructor = SyntheticTransitionEvent;
                  break;
                case TOP_SCROLL:
                  EventConstructor = SyntheticUIEvent;
                  break;
                case TOP_WHEEL:
                  EventConstructor = SyntheticWheelEvent;
                  break;
                case TOP_COPY:
                case TOP_CUT:
                case TOP_PASTE:
                  EventConstructor = SyntheticClipboardEvent;
                  break;
                case TOP_GOT_POINTER_CAPTURE:
                case TOP_LOST_POINTER_CAPTURE:
                case TOP_POINTER_CANCEL:
                case TOP_POINTER_DOWN:
                case TOP_POINTER_MOVE:
                case TOP_POINTER_OUT:
                case TOP_POINTER_OVER:
                case TOP_POINTER_UP:
                  EventConstructor = SyntheticPointerEvent;
                  break;
                default:
                  {
                    if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
                      warningWithoutStack$1(
                        false,
                        'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' +
                          'is likely caused by a bug in React. Please file an issue.',
                        topLevelType
                      );
                    }
                  }
                  // HTML Events
                  // @see http://www.w3.org/TR/html5/index.html#events-0
                  EventConstructor = SyntheticEvent;
                  break;
              }
              var event = EventConstructor.getPooled(
                dispatchConfig,
                targetInst,
                nativeEvent,
                nativeEventTarget
              );
              accumulateTwoPhaseDispatches(event);
              return event;
            }
          };

          var isInteractiveTopLevelEventType =
            SimpleEventPlugin.isInteractiveTopLevelEventType;

          var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
          var callbackBookkeepingPool = [];

          /**
           * Find the deepest React component completely containing the root of the
           * passed-in instance (for use when entire React trees are nested within each
           * other). If React trees are not nested, returns null.
           */
          function findRootContainerNode(inst) {
            // TODO: It may be a good idea to cache this to prevent unnecessary DOM
            // traversal, but caching is difficult to do correctly without using a
            // mutation observer to listen for all DOM changes.
            while (inst.return) {
              inst = inst.return;
            }
            if (inst.tag !== HostRoot) {
              // This can happen if we're in a detached tree.
              return null;
            }
            return inst.stateNode.containerInfo;
          }

          // Used to store ancestor hierarchy in top level callback
          function getTopLevelCallbackBookKeeping(
            topLevelType,
            nativeEvent,
            targetInst
          ) {
            if (callbackBookkeepingPool.length) {
              var instance = callbackBookkeepingPool.pop();
              instance.topLevelType = topLevelType;
              instance.nativeEvent = nativeEvent;
              instance.targetInst = targetInst;
              return instance;
            }
            return {
              topLevelType: topLevelType,
              nativeEvent: nativeEvent,
              targetInst: targetInst,
              ancestors: []
            };
          }

          function releaseTopLevelCallbackBookKeeping(instance) {
            instance.topLevelType = null;
            instance.nativeEvent = null;
            instance.targetInst = null;
            instance.ancestors.length = 0;
            if (
              callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE
            ) {
              callbackBookkeepingPool.push(instance);
            }
          }

          function handleTopLevel(bookKeeping) {
            var targetInst = bookKeeping.targetInst;

            // Loop through the hierarchy, in case there's any nested components.
            // It's important that we build the array of ancestors before calling any
            // event handlers, because event handlers can modify the DOM, leading to
            // inconsistencies with ReactMount's node cache. See #1105.
            var ancestor = targetInst;
            do {
              if (!ancestor) {
                bookKeeping.ancestors.push(ancestor);
                break;
              }
              var root = findRootContainerNode(ancestor);
              if (!root) {
                break;
              }
              bookKeeping.ancestors.push(ancestor);
              ancestor = getClosestInstanceFromNode(root);
            } while (ancestor);

            for (var i = 0; i < bookKeeping.ancestors.length; i++) {
              targetInst = bookKeeping.ancestors[i];
              runExtractedEventsInBatch(
                bookKeeping.topLevelType,
                targetInst,
                bookKeeping.nativeEvent,
                getEventTarget(bookKeeping.nativeEvent)
              );
            }
          }

          // TODO: can we stop exporting these?
          var _enabled = true;

          function setEnabled(enabled) {
            _enabled = !!enabled;
          }

          function isEnabled() {
            return _enabled;
          }

          /**
           * Traps top-level events by using event bubbling.
           *
           * @param {number} topLevelType Number from `TopLevelEventTypes`.
           * @param {object} element Element on which to attach listener.
           * @return {?object} An object with a remove function which will forcefully
           *                  remove the listener.
           * @internal
           */
          function trapBubbledEvent(topLevelType, element) {
            if (!element) {
              return null;
            }
            var dispatch = isInteractiveTopLevelEventType(topLevelType)
              ? dispatchInteractiveEvent
              : dispatchEvent;

            addEventBubbleListener(
              element,
              getRawEventName(topLevelType),
              // Check if interactive and wrap in interactiveUpdates
              dispatch.bind(null, topLevelType)
            );
          }

          /**
           * Traps a top-level event by using event capturing.
           *
           * @param {number} topLevelType Number from `TopLevelEventTypes`.
           * @param {object} element Element on which to attach listener.
           * @return {?object} An object with a remove function which will forcefully
           *                  remove the listener.
           * @internal
           */
          function trapCapturedEvent(topLevelType, element) {
            if (!element) {
              return null;
            }
            var dispatch = isInteractiveTopLevelEventType(topLevelType)
              ? dispatchInteractiveEvent
              : dispatchEvent;

            addEventCaptureListener(
              element,
              getRawEventName(topLevelType),
              // Check if interactive and wrap in interactiveUpdates
              dispatch.bind(null, topLevelType)
            );
          }

          function dispatchInteractiveEvent(topLevelType, nativeEvent) {
            interactiveUpdates(dispatchEvent, topLevelType, nativeEvent);
          }

          function dispatchEvent(topLevelType, nativeEvent) {
            if (!_enabled) {
              return;
            }

            var nativeEventTarget = getEventTarget(nativeEvent);
            var targetInst = getClosestInstanceFromNode(nativeEventTarget);
            if (
              targetInst !== null &&
              typeof targetInst.tag === 'number' &&
              !isFiberMounted(targetInst)
            ) {
              // If we get an event (ex: img onload) before committing that
              // component's mount, ignore it for now (that is, treat it as if it was an
              // event on a non-React tree). We might also consider queueing events and
              // dispatching them after the mount.
              targetInst = null;
            }

            var bookKeeping = getTopLevelCallbackBookKeeping(
              topLevelType,
              nativeEvent,
              targetInst
            );

            try {
              // Event queue being processed in the same cycle allows
              // `preventDefault`.
              batchedUpdates(handleTopLevel, bookKeeping);
            } finally {
              releaseTopLevelCallbackBookKeeping(bookKeeping);
            }
          }

          /**
           * Summary of `ReactBrowserEventEmitter` event handling:
           *
           *  - Top-level delegation is used to trap most native browser events. This
           *    may only occur in the main thread and is the responsibility of
           *    ReactDOMEventListener, which is injected and can therefore support
           *    pluggable event sources. This is the only work that occurs in the main
           *    thread.
           *
           *  - We normalize and de-duplicate events to account for browser quirks. This
           *    may be done in the worker thread.
           *
           *  - Forward these native events (with the associated top-level type used to
           *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
           *    to extract any synthetic events.
           *
           *  - The `EventPluginHub` will then process each event by annotating them with
           *    "dispatches", a sequence of listeners and IDs that care about that event.
           *
           *  - The `EventPluginHub` then dispatches the events.
           *
           * Overview of React and the event system:
           *
           * +------------+    .
           * |    DOM     |    .
           * +------------+    .
           *       |           .
           *       v           .
           * +------------+    .
           * | ReactEvent |    .
           * |  Listener  |    .
           * +------------+    .                         +-----------+
           *       |           .               +--------+|SimpleEvent|
           *       |           .               |         |Plugin     |
           * +-----|------+    .               v         +-----------+
           * |     |      |    .    +--------------+                    +------------+
           * |     +-----------.--->|EventPluginHub|                    |    Event   |
           * |            |    .    |              |     +-----------+  | Propagators|
           * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
           * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
           * |            |    .    |              |     +-----------+  |  utilities |
           * |     +-----------.--->|              |                    +------------+
           * |     |      |    .    +--------------+
           * +-----|------+    .                ^        +-----------+
           *       |           .                |        |Enter/Leave|
           *       +           .                +-------+|Plugin     |
           * +-------------+   .                         +-----------+
           * | application |   .
           * |-------------|   .
           * |             |   .
           * |             |   .
           * +-------------+   .
           *                   .
           *    React Core     .  General Purpose Event Plugin System
           */

          var alreadyListeningTo = {};
          var reactTopListenersCounter = 0;

          /**
           * To ensure no conflicts with other potential React instances on the page
           */
          var topListenersIDKey =
            '_reactListenersID' + ('' + Math.random()).slice(2);

          function getListeningForDocument(mountAt) {
            // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
            // directly.
            if (
              !Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)
            ) {
              mountAt[topListenersIDKey] = reactTopListenersCounter++;
              alreadyListeningTo[mountAt[topListenersIDKey]] = {};
            }
            return alreadyListeningTo[mountAt[topListenersIDKey]];
          }

          /**
           * We listen for bubbled touch events on the document object.
           *
           * Firefox v8.01 (and possibly others) exhibited strange behavior when
           * mounting `onmousemove` events at some node that was not the document
           * element. The symptoms were that if your mouse is not moving over something
           * contained within that mount point (for example on the background) the
           * top-level listeners for `onmousemove` won't be called. However, if you
           * register the `mousemove` on the document object, then it will of course
           * catch all `mousemove`s. This along with iOS quirks, justifies restricting
           * top-level listeners to the document object only, at least for these
           * movement types of events and possibly all events.
           *
           * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
           *
           * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
           * they bubble to document.
           *
           * @param {string} registrationName Name of listener (e.g. `onClick`).
           * @param {object} mountAt Container where to mount the listener
           */
          function listenTo(registrationName, mountAt) {
            var isListening = getListeningForDocument(mountAt);
            var dependencies = registrationNameDependencies[registrationName];

            for (var i = 0; i < dependencies.length; i++) {
              var dependency = dependencies[i];
              if (
                !(
                  isListening.hasOwnProperty(dependency) &&
                  isListening[dependency]
                )
              ) {
                switch (dependency) {
                  case TOP_SCROLL:
                    trapCapturedEvent(TOP_SCROLL, mountAt);
                    break;
                  case TOP_FOCUS:
                  case TOP_BLUR:
                    trapCapturedEvent(TOP_FOCUS, mountAt);
                    trapCapturedEvent(TOP_BLUR, mountAt);
                    // We set the flag for a single dependency later in this function,
                    // but this ensures we mark both as attached rather than just one.
                    isListening[TOP_BLUR] = true;
                    isListening[TOP_FOCUS] = true;
                    break;
                  case TOP_CANCEL:
                  case TOP_CLOSE:
                    if (isEventSupported(getRawEventName(dependency))) {
                      trapCapturedEvent(dependency, mountAt);
                    }
                    break;
                  case TOP_INVALID:
                  case TOP_SUBMIT:
                  case TOP_RESET:
                    // We listen to them on the target DOM elements.
                    // Some of them bubble so we don't want them to fire twice.
                    break;
                  default:
                    // By default, listen on the top level to all non-media events.
                    // Media events don't bubble so adding the listener wouldn't do anything.
                    var isMediaEvent =
                      mediaEventTypes.indexOf(dependency) !== -1;
                    if (!isMediaEvent) {
                      trapBubbledEvent(dependency, mountAt);
                    }
                    break;
                }
                isListening[dependency] = true;
              }
            }
          }

          function isListeningToAllDependencies(registrationName, mountAt) {
            var isListening = getListeningForDocument(mountAt);
            var dependencies = registrationNameDependencies[registrationName];
            for (var i = 0; i < dependencies.length; i++) {
              var dependency = dependencies[i];
              if (
                !(
                  isListening.hasOwnProperty(dependency) &&
                  isListening[dependency]
                )
              ) {
                return false;
              }
            }
            return true;
          }

          function getActiveElement(doc) {
            doc =
              doc || (typeof document !== 'undefined' ? document : undefined);
            if (typeof doc === 'undefined') {
              return null;
            }
            try {
              return doc.activeElement || doc.body;
            } catch (e) {
              return doc.body;
            }
          }

          /**
           * Given any node return the first leaf node without children.
           *
           * @param {DOMElement|DOMTextNode} node
           * @return {DOMElement|DOMTextNode}
           */
          function getLeafNode(node) {
            while (node && node.firstChild) {
              node = node.firstChild;
            }
            return node;
          }

          /**
           * Get the next sibling within a container. This will walk up the
           * DOM if a node's siblings have been exhausted.
           *
           * @param {DOMElement|DOMTextNode} node
           * @return {?DOMElement|DOMTextNode}
           */
          function getSiblingNode(node) {
            while (node) {
              if (node.nextSibling) {
                return node.nextSibling;
              }
              node = node.parentNode;
            }
          }

          /**
           * Get object describing the nodes which contain characters at offset.
           *
           * @param {DOMElement|DOMTextNode} root
           * @param {number} offset
           * @return {?object}
           */
          function getNodeForCharacterOffset(root, offset) {
            var node = getLeafNode(root);
            var nodeStart = 0;
            var nodeEnd = 0;

            while (node) {
              if (node.nodeType === TEXT_NODE) {
                nodeEnd = nodeStart + node.textContent.length;

                if (nodeStart <= offset && nodeEnd >= offset) {
                  return {
                    node: node,
                    offset: offset - nodeStart
                  };
                }

                nodeStart = nodeEnd;
              }

              node = getLeafNode(getSiblingNode(node));
            }
          }

          /**
           * @param {DOMElement} outerNode
           * @return {?object}
           */
          function getOffsets(outerNode) {
            var ownerDocument = outerNode.ownerDocument;

            var win = (ownerDocument && ownerDocument.defaultView) || window;
            var selection = win.getSelection && win.getSelection();

            if (!selection || selection.rangeCount === 0) {
              return null;
            }

            var anchorNode = selection.anchorNode,
              anchorOffset = selection.anchorOffset,
              focusNode = selection.focusNode,
              focusOffset = selection.focusOffset;

            // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
            // up/down buttons on an <input type="number">. Anonymous divs do not seem to
            // expose properties, triggering a "Permission denied error" if any of its
            // properties are accessed. The only seemingly possible way to avoid erroring
            // is to access a property that typically works for non-anonymous divs and
            // catch any error that may otherwise arise. See
            // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

            try {
              /* eslint-disable no-unused-expressions */
              anchorNode.nodeType;
              focusNode.nodeType;
              /* eslint-enable no-unused-expressions */
            } catch (e) {
              return null;
            }

            return getModernOffsetsFromPoints(
              outerNode,
              anchorNode,
              anchorOffset,
              focusNode,
              focusOffset
            );
          }

          /**
           * Returns {start, end} where `start` is the character/codepoint index of
           * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
           * `end` is the index of (focusNode, focusOffset).
           *
           * Returns null if you pass in garbage input but we should probably just crash.
           *
           * Exported only for testing.
           */
          function getModernOffsetsFromPoints(
            outerNode,
            anchorNode,
            anchorOffset,
            focusNode,
            focusOffset
          ) {
            var length = 0;
            var start = -1;
            var end = -1;
            var indexWithinAnchor = 0;
            var indexWithinFocus = 0;
            var node = outerNode;
            var parentNode = null;

            outer: while (true) {
              var next = null;

              while (true) {
                if (
                  node === anchorNode &&
                  (anchorOffset === 0 || node.nodeType === TEXT_NODE)
                ) {
                  start = length + anchorOffset;
                }
                if (
                  node === focusNode &&
                  (focusOffset === 0 || node.nodeType === TEXT_NODE)
                ) {
                  end = length + focusOffset;
                }

                if (node.nodeType === TEXT_NODE) {
                  length += node.nodeValue.length;
                }

                if ((next = node.firstChild) === null) {
                  break;
                }
                // Moving from `node` to its first child `next`.
                parentNode = node;
                node = next;
              }

              while (true) {
                if (node === outerNode) {
                  // If `outerNode` has children, this is always the second time visiting
                  // it. If it has no children, this is still the first loop, and the only
                  // valid selection is anchorNode and focusNode both equal to this node
                  // and both offsets 0, in which case we will have handled above.
                  break outer;
                }
                if (
                  parentNode === anchorNode &&
                  ++indexWithinAnchor === anchorOffset
                ) {
                  start = length;
                }
                if (
                  parentNode === focusNode &&
                  ++indexWithinFocus === focusOffset
                ) {
                  end = length;
                }
                if ((next = node.nextSibling) !== null) {
                  break;
                }
                node = parentNode;
                parentNode = node.parentNode;
              }

              // Moving from `node` to its next sibling `next`.
              node = next;
            }

            if (start === -1 || end === -1) {
              // This should never happen. (Would happen if the anchor/focus nodes aren't
              // actually inside the passed-in node.)
              return null;
            }

            return {
              start: start,
              end: end
            };
          }

          /**
           * In modern non-IE browsers, we can support both forward and backward
           * selections.
           *
           * Note: IE10+ supports the Selection object, but it does not support
           * the `extend` method, which means that even in modern IE, it's not possible
           * to programmatically create a backward selection. Thus, for all IE
           * versions, we use the old IE API to create our selections.
           *
           * @param {DOMElement|DOMTextNode} node
           * @param {object} offsets
           */
          function setOffsets(node, offsets) {
            var doc = node.ownerDocument || document;
            var win = (doc && doc.defaultView) || window;
            var selection = win.getSelection();
            var length = node.textContent.length;
            var start = Math.min(offsets.start, length);
            var end =
              offsets.end === undefined ? start : Math.min(offsets.end, length);

            // IE 11 uses modern selection, but doesn't support the extend method.
            // Flip backward selections, so we can set with a single range.
            if (!selection.extend && start > end) {
              var temp = end;
              end = start;
              start = temp;
            }

            var startMarker = getNodeForCharacterOffset(node, start);
            var endMarker = getNodeForCharacterOffset(node, end);

            if (startMarker && endMarker) {
              if (
                selection.rangeCount === 1 &&
                selection.anchorNode === startMarker.node &&
                selection.anchorOffset === startMarker.offset &&
                selection.focusNode === endMarker.node &&
                selection.focusOffset === endMarker.offset
              ) {
                return;
              }
              var range = doc.createRange();
              range.setStart(startMarker.node, startMarker.offset);
              selection.removeAllRanges();

              if (start > end) {
                selection.addRange(range);
                selection.extend(endMarker.node, endMarker.offset);
              } else {
                range.setEnd(endMarker.node, endMarker.offset);
                selection.addRange(range);
              }
            }
          }

          function isTextNode(node) {
            return node && node.nodeType === TEXT_NODE;
          }

          function containsNode(outerNode, innerNode) {
            if (!outerNode || !innerNode) {
              return false;
            } else if (outerNode === innerNode) {
              return true;
            } else if (isTextNode(outerNode)) {
              return false;
            } else if (isTextNode(innerNode)) {
              return containsNode(outerNode, innerNode.parentNode);
            } else if ('contains' in outerNode) {
              return outerNode.contains(innerNode);
            } else if (outerNode.compareDocumentPosition) {
              return !!(outerNode.compareDocumentPosition(innerNode) & 16);
            } else {
              return false;
            }
          }

          function isInDocument(node) {
            return (
              node &&
              node.ownerDocument &&
              containsNode(node.ownerDocument.documentElement, node)
            );
          }

          function getActiveElementDeep() {
            var win = window;
            var element = getActiveElement();
            while (element instanceof win.HTMLIFrameElement) {
              // Accessing the contentDocument of a HTMLIframeElement can cause the browser
              // to throw, e.g. if it has a cross-origin src attribute
              try {
                win = element.contentDocument.defaultView;
              } catch (e) {
                return element;
              }
              element = getActiveElement(win.document);
            }
            return element;
          }

          /**
           * @ReactInputSelection: React input selection module. Based on Selection.js,
           * but modified to be suitable for react and has a couple of bug fixes (doesn't
           * assume buttons have range selections allowed).
           * Input selection module for React.
           */

          /**
           * @hasSelectionCapabilities: we get the element types that support selection
           * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
           * and `selectionEnd` rows.
           */
          function hasSelectionCapabilities(elem) {
            var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
            return (
              nodeName &&
              ((nodeName === 'input' &&
                (elem.type === 'text' ||
                  elem.type === 'search' ||
                  elem.type === 'tel' ||
                  elem.type === 'url' ||
                  elem.type === 'password')) ||
                nodeName === 'textarea' ||
                elem.contentEditable === 'true')
            );
          }

          function getSelectionInformation() {
            var focusedElem = getActiveElementDeep();
            return {
              focusedElem: focusedElem,
              selectionRange: hasSelectionCapabilities(focusedElem)
                ? getSelection$1(focusedElem)
                : null
            };
          }

          /**
           * @restoreSelection: If any selection information was potentially lost,
           * restore it. This is useful when performing operations that could remove dom
           * nodes and place them back in, resulting in focus being lost.
           */
          function restoreSelection(priorSelectionInformation) {
            var curFocusedElem = getActiveElementDeep();
            var priorFocusedElem = priorSelectionInformation.focusedElem;
            var priorSelectionRange = priorSelectionInformation.selectionRange;
            if (
              curFocusedElem !== priorFocusedElem &&
              isInDocument(priorFocusedElem)
            ) {
              if (
                priorSelectionRange !== null &&
                hasSelectionCapabilities(priorFocusedElem)
              ) {
                setSelection(priorFocusedElem, priorSelectionRange);
              }

              // Focusing a node can change the scroll position, which is undesirable
              var ancestors = [];
              var ancestor = priorFocusedElem;
              while ((ancestor = ancestor.parentNode)) {
                if (ancestor.nodeType === ELEMENT_NODE) {
                  ancestors.push({
                    element: ancestor,
                    left: ancestor.scrollLeft,
                    top: ancestor.scrollTop
                  });
                }
              }

              if (typeof priorFocusedElem.focus === 'function') {
                priorFocusedElem.focus();
              }

              for (var i = 0; i < ancestors.length; i++) {
                var info = ancestors[i];
                info.element.scrollLeft = info.left;
                info.element.scrollTop = info.top;
              }
            }
          }

          /**
           * @getSelection: Gets the selection bounds of a focused textarea, input or
           * contentEditable node.
           * -@input: Look up selection bounds of this input
           * -@return {start: selectionStart, end: selectionEnd}
           */
          function getSelection$1(input) {
            var selection = void 0;

            if ('selectionStart' in input) {
              // Modern browser with input or textarea.
              selection = {
                start: input.selectionStart,
                end: input.selectionEnd
              };
            } else {
              // Content editable or old IE textarea.
              selection = getOffsets(input);
            }

            return selection || { start: 0, end: 0 };
          }

          /**
           * @setSelection: Sets the selection bounds of a textarea or input and focuses
           * the input.
           * -@input     Set selection bounds of this input or textarea
           * -@offsets   Object of same form that is returned from get*
           */
          function setSelection(input, offsets) {
            var start = offsets.start,
              end = offsets.end;

            if (end === undefined) {
              end = start;
            }

            if ('selectionStart' in input) {
              input.selectionStart = start;
              input.selectionEnd = Math.min(end, input.value.length);
            } else {
              setOffsets(input, offsets);
            }
          }

          var skipSelectionChangeEvent =
            canUseDOM &&
            'documentMode' in document &&
            document.documentMode <= 11;

          var eventTypes$3 = {
            select: {
              phasedRegistrationNames: {
                bubbled: 'onSelect',
                captured: 'onSelectCapture'
              },
              dependencies: [
                TOP_BLUR,
                TOP_CONTEXT_MENU,
                TOP_DRAG_END,
                TOP_FOCUS,
                TOP_KEY_DOWN,
                TOP_KEY_UP,
                TOP_MOUSE_DOWN,
                TOP_MOUSE_UP,
                TOP_SELECTION_CHANGE
              ]
            }
          };

          var activeElement$1 = null;
          var activeElementInst$1 = null;
          var lastSelection = null;
          var mouseDown = false;

          /**
           * Get an object which is a unique representation of the current selection.
           *
           * The return value will not be consistent across nodes or browsers, but
           * two identical selections on the same node will return identical objects.
           *
           * @param {DOMElement} node
           * @return {object}
           */
          function getSelection(node) {
            if ('selectionStart' in node && hasSelectionCapabilities(node)) {
              return {
                start: node.selectionStart,
                end: node.selectionEnd
              };
            } else {
              var win =
                (node.ownerDocument && node.ownerDocument.defaultView) ||
                window;
              var selection = win.getSelection();
              return {
                anchorNode: selection.anchorNode,
                anchorOffset: selection.anchorOffset,
                focusNode: selection.focusNode,
                focusOffset: selection.focusOffset
              };
            }
          }

          /**
           * Get document associated with the event target.
           *
           * @param {object} nativeEventTarget
           * @return {Document}
           */
          function getEventTargetDocument(eventTarget) {
            return eventTarget.window === eventTarget
              ? eventTarget.document
              : eventTarget.nodeType === DOCUMENT_NODE
                ? eventTarget
                : eventTarget.ownerDocument;
          }

          /**
           * Poll selection to see whether it's changed.
           *
           * @param {object} nativeEvent
           * @param {object} nativeEventTarget
           * @return {?SyntheticEvent}
           */
          function constructSelectEvent(nativeEvent, nativeEventTarget) {
            // Ensure we have the right element, and that the user is not dragging a
            // selection (this matches native `select` event behavior). In HTML5, select
            // fires only on input and textarea thus if there's no focused element we
            // won't dispatch.
            var doc = getEventTargetDocument(nativeEventTarget);

            if (
              mouseDown ||
              activeElement$1 == null ||
              activeElement$1 !== getActiveElement(doc)
            ) {
              return null;
            }

            // Only fire when selection has actually changed.
            var currentSelection = getSelection(activeElement$1);
            if (
              !lastSelection ||
              !shallowEqual(lastSelection, currentSelection)
            ) {
              lastSelection = currentSelection;

              var syntheticEvent = SyntheticEvent.getPooled(
                eventTypes$3.select,
                activeElementInst$1,
                nativeEvent,
                nativeEventTarget
              );

              syntheticEvent.type = 'select';
              syntheticEvent.target = activeElement$1;

              accumulateTwoPhaseDispatches(syntheticEvent);

              return syntheticEvent;
            }

            return null;
          }

          /**
           * This plugin creates an `onSelect` event that normalizes select events
           * across form elements.
           *
           * Supported elements are:
           * - input (see `isTextInputElement`)
           * - textarea
           * - contentEditable
           *
           * This differs from native browser implementations in the following ways:
           * - Fires on contentEditable fields as well as inputs.
           * - Fires for collapsed selection.
           * - Fires after user input.
           */
          var SelectEventPlugin = {
            eventTypes: eventTypes$3,

            extractEvents: function(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget
            ) {
              var doc = getEventTargetDocument(nativeEventTarget);
              // Track whether all listeners exists for this plugin. If none exist, we do
              // not extract events. See #3639.
              if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
                return null;
              }

              var targetNode = targetInst
                ? getNodeFromInstance$1(targetInst)
                : window;

              switch (topLevelType) {
                // Track the input node that has focus.
                case TOP_FOCUS:
                  if (
                    isTextInputElement(targetNode) ||
                    targetNode.contentEditable === 'true'
                  ) {
                    activeElement$1 = targetNode;
                    activeElementInst$1 = targetInst;
                    lastSelection = null;
                  }
                  break;
                case TOP_BLUR:
                  activeElement$1 = null;
                  activeElementInst$1 = null;
                  lastSelection = null;
                  break;
                // Don't fire the event while the user is dragging. This matches the
                // semantics of the native select event.
                case TOP_MOUSE_DOWN:
                  mouseDown = true;
                  break;
                case TOP_CONTEXT_MENU:
                case TOP_MOUSE_UP:
                case TOP_DRAG_END:
                  mouseDown = false;
                  return constructSelectEvent(nativeEvent, nativeEventTarget);
                // Chrome and IE fire non-standard event when selection is changed (and
                // sometimes when it hasn't). IE's event fires out of order with respect
                // to key and input events on deletion, so we discard it.
                //
                // Firefox doesn't support selectionchange, so check selection status
                // after each key entry. The selection changes after keydown and before
                // keyup, but we check on keydown as well in the case of holding down a
                // key, when multiple keydown events are fired but only one keyup is.
                // This is also our approach for IE handling, for the reason above.
                case TOP_SELECTION_CHANGE:
                  if (skipSelectionChangeEvent) {
                    break;
                  }
                // falls through
                case TOP_KEY_DOWN:
                case TOP_KEY_UP:
                  return constructSelectEvent(nativeEvent, nativeEventTarget);
              }

              return null;
            }
          };

          /**
           * Inject modules for resolving DOM hierarchy and plugin ordering.
           */
          injection.injectEventPluginOrder(DOMEventPluginOrder);
          setComponentTree(
            getFiberCurrentPropsFromNode$1,
            getInstanceFromNode$1,
            getNodeFromInstance$1
          );

          /**
           * Some important event plugins included by default (without having to require
           * them).
           */
          injection.injectEventPluginsByName({
            SimpleEventPlugin: SimpleEventPlugin,
            EnterLeaveEventPlugin: EnterLeaveEventPlugin,
            ChangeEventPlugin: ChangeEventPlugin,
            SelectEventPlugin: SelectEventPlugin,
            BeforeInputEventPlugin: BeforeInputEventPlugin
          });

          var didWarnSelectedSetOnOption = false;
          var didWarnInvalidChild = false;

          function flattenChildren(children) {
            var content = '';

            // Flatten children. We'll warn if they are invalid
            // during validateProps() which runs for hydration too.
            // Note that this would throw on non-element objects.
            // Elements are stringified (which is normally irrelevant
            // but matters for <fbt>).
            React.Children.forEach(children, function(child) {
              if (child == null) {
                return;
              }
              content += child;
              // Note: we don't warn about invalid children here.
              // Instead, this is done separately below so that
              // it happens during the hydration codepath too.
            });

            return content;
          }

          /**
           * Implements an <option> host component that warns when `selected` is set.
           */

          function validateProps(element, props) {
            {
              // This mirrors the codepath above, but runs for hydration too.
              // Warn about invalid children here so that client and hydration are consistent.
              // TODO: this seems like it could cause a DEV-only throw for hydration
              // if children contains a non-element object. We should try to avoid that.
              if (
                typeof props.children === 'object' &&
                props.children !== null
              ) {
                React.Children.forEach(props.children, function(child) {
                  if (child == null) {
                    return;
                  }
                  if (typeof child === 'string' || typeof child === 'number') {
                    return;
                  }
                  if (typeof child.type !== 'string') {
                    return;
                  }
                  if (!didWarnInvalidChild) {
                    didWarnInvalidChild = true;
                    warning$1(
                      false,
                      'Only strings and numbers are supported as <option> children.'
                    );
                  }
                });
              }

              // TODO: Remove support for `selected` in <option>.
              if (props.selected != null && !didWarnSelectedSetOnOption) {
                warning$1(
                  false,
                  'Use the `defaultValue` or `value` props on <select> instead of ' +
                    'setting `selected` on <option>.'
                );
                didWarnSelectedSetOnOption = true;
              }
            }
          }

          function postMountWrapper$1(element, props) {
            // value="" should make a value attribute (#6219)
            if (props.value != null) {
              element.setAttribute(
                'value',
                toString(getToStringValue(props.value))
              );
            }
          }

          function getHostProps$1(element, props) {
            var hostProps = _assign({ children: undefined }, props);
            var content = flattenChildren(props.children);

            if (content) {
              hostProps.children = content;
            }

            return hostProps;
          }

          // TODO: direct imports like some-package/src/* are bad. Fix me.
          var didWarnValueDefaultValue$1 = void 0;

          {
            didWarnValueDefaultValue$1 = false;
          }

          function getDeclarationErrorAddendum() {
            var ownerName = getCurrentFiberOwnerNameInDevOrNull();
            if (ownerName) {
              return '\n\nCheck the render method of `' + ownerName + '`.';
            }
            return '';
          }

          var valuePropNames = ['value', 'defaultValue'];

          /**
           * Validation function for `value` and `defaultValue`.
           */
          function checkSelectPropTypes(props) {
            ReactControlledValuePropTypes.checkPropTypes('select', props);

            for (var i = 0; i < valuePropNames.length; i++) {
              var propName = valuePropNames[i];
              if (props[propName] == null) {
                continue;
              }
              var isArray = Array.isArray(props[propName]);
              if (props.multiple && !isArray) {
                warning$1(
                  false,
                  'The `%s` prop supplied to <select> must be an array if ' +
                    '`multiple` is true.%s',
                  propName,
                  getDeclarationErrorAddendum()
                );
              } else if (!props.multiple && isArray) {
                warning$1(
                  false,
                  'The `%s` prop supplied to <select> must be a scalar ' +
                    'value if `multiple` is false.%s',
                  propName,
                  getDeclarationErrorAddendum()
                );
              }
            }
          }

          function updateOptions(
            node,
            multiple,
            propValue,
            setDefaultSelected
          ) {
            var options = node.options;

            if (multiple) {
              var selectedValues = propValue;
              var selectedValue = {};
              for (var i = 0; i < selectedValues.length; i++) {
                // Prefix to avoid chaos with special keys.
                selectedValue['$' + selectedValues[i]] = true;
              }
              for (var _i = 0; _i < options.length; _i++) {
                var selected = selectedValue.hasOwnProperty(
                  '$' + options[_i].value
                );
                if (options[_i].selected !== selected) {
                  options[_i].selected = selected;
                }
                if (selected && setDefaultSelected) {
                  options[_i].defaultSelected = true;
                }
              }
            } else {
              // Do not set `select.value` as exact behavior isn't consistent across all
              // browsers for all cases.
              var _selectedValue = toString(getToStringValue(propValue));
              var defaultSelected = null;
              for (var _i2 = 0; _i2 < options.length; _i2++) {
                if (options[_i2].value === _selectedValue) {
                  options[_i2].selected = true;
                  if (setDefaultSelected) {
                    options[_i2].defaultSelected = true;
                  }
                  return;
                }
                if (defaultSelected === null && !options[_i2].disabled) {
                  defaultSelected = options[_i2];
                }
              }
              if (defaultSelected !== null) {
                defaultSelected.selected = true;
              }
            }
          }

          /**
           * Implements a <select> host component that allows optionally setting the
           * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
           * stringable. If `multiple` is true, the prop must be an array of stringables.
           *
           * If `value` is not supplied (or null/undefined), user actions that change the
           * selected option will trigger updates to the rendered options.
           *
           * If it is supplied (and not null/undefined), the rendered options will not
           * update in response to user actions. Instead, the `value` prop must change in
           * order for the rendered options to update.
           *
           * If `defaultValue` is provided, any options with the supplied values will be
           * selected.
           */

          function getHostProps$2(element, props) {
            return _assign({}, props, {
              value: undefined
            });
          }

          function initWrapperState$1(element, props) {
            var node = element;
            {
              checkSelectPropTypes(props);
            }

            node._wrapperState = {
              wasMultiple: !!props.multiple
            };

            {
              if (
                props.value !== undefined &&
                props.defaultValue !== undefined &&
                !didWarnValueDefaultValue$1
              ) {
                warning$1(
                  false,
                  'Select elements must be either controlled or uncontrolled ' +
                    '(specify either the value prop, or the defaultValue prop, but not ' +
                    'both). Decide between using a controlled or uncontrolled select ' +
                    'element and remove one of these props. More info: ' +
                    'https://fb.me/react-controlled-components'
                );
                didWarnValueDefaultValue$1 = true;
              }
            }
          }

          function postMountWrapper$2(element, props) {
            var node = element;
            node.multiple = !!props.multiple;
            var value = props.value;
            if (value != null) {
              updateOptions(node, !!props.multiple, value, false);
            } else if (props.defaultValue != null) {
              updateOptions(node, !!props.multiple, props.defaultValue, true);
            }
          }

          function postUpdateWrapper(element, props) {
            var node = element;
            var wasMultiple = node._wrapperState.wasMultiple;
            node._wrapperState.wasMultiple = !!props.multiple;

            var value = props.value;
            if (value != null) {
              updateOptions(node, !!props.multiple, value, false);
            } else if (wasMultiple !== !!props.multiple) {
              // For simplicity, reapply `defaultValue` if `multiple` is toggled.
              if (props.defaultValue != null) {
                updateOptions(node, !!props.multiple, props.defaultValue, true);
              } else {
                // Revert the select back to its default unselected state.
                updateOptions(
                  node,
                  !!props.multiple,
                  props.multiple ? [] : '',
                  false
                );
              }
            }
          }

          function restoreControlledState$2(element, props) {
            var node = element;
            var value = props.value;

            if (value != null) {
              updateOptions(node, !!props.multiple, value, false);
            }
          }

          var didWarnValDefaultVal = false;

          /**
           * Implements a <textarea> host component that allows setting `value`, and
           * `defaultValue`. This differs from the traditional DOM API because value is
           * usually set as PCDATA children.
           *
           * If `value` is not supplied (or null/undefined), user actions that affect the
           * value will trigger updates to the element.
           *
           * If `value` is supplied (and not null/undefined), the rendered element will
           * not trigger updates to the element. Instead, the `value` prop must change in
           * order for the rendered element to be updated.
           *
           * The rendered element will be initialized with an empty value, the prop
           * `defaultValue` if specified, or the children content (deprecated).
           */

          function getHostProps$3(element, props) {
            var node = element;
            !(props.dangerouslySetInnerHTML == null)
              ? invariant(
                  false,
                  '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
                )
              : void 0;

            // Always set children to the same thing. In IE9, the selection range will
            // get reset if `textContent` is mutated.  We could add a check in setTextContent
            // to only set the value if/when the value differs from the node value (which would
            // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
            // solution. The value can be a boolean or object so that's why it's forced
            // to be a string.
            var hostProps = _assign({}, props, {
              value: undefined,
              defaultValue: undefined,
              children: toString(node._wrapperState.initialValue)
            });

            return hostProps;
          }

          function initWrapperState$2(element, props) {
            var node = element;
            {
              ReactControlledValuePropTypes.checkPropTypes('textarea', props);
              if (
                props.value !== undefined &&
                props.defaultValue !== undefined &&
                !didWarnValDefaultVal
              ) {
                warning$1(
                  false,
                  '%s contains a textarea with both value and defaultValue props. ' +
                    'Textarea elements must be either controlled or uncontrolled ' +
                    '(specify either the value prop, or the defaultValue prop, but not ' +
                    'both). Decide between using a controlled or uncontrolled textarea ' +
                    'and remove one of these props. More info: ' +
                    'https://fb.me/react-controlled-components',
                  getCurrentFiberOwnerNameInDevOrNull() || 'A component'
                );
                didWarnValDefaultVal = true;
              }
            }

            var initialValue = props.value;

            // Only bother fetching default value if we're going to use it
            if (initialValue == null) {
              var defaultValue = props.defaultValue;
              // TODO (yungsters): Remove support for children content in <textarea>.
              var children = props.children;
              if (children != null) {
                {
                  warning$1(
                    false,
                    'Use the `defaultValue` or `value` props instead of setting ' +
                      'children on <textarea>.'
                  );
                }
                !(defaultValue == null)
                  ? invariant(
                      false,
                      'If you supply `defaultValue` on a <textarea>, do not pass children.'
                    )
                  : void 0;
                if (Array.isArray(children)) {
                  !(children.length <= 1)
                    ? invariant(
                        false,
                        '<textarea> can only have at most one child.'
                      )
                    : void 0;
                  children = children[0];
                }

                defaultValue = children;
              }
              if (defaultValue == null) {
                defaultValue = '';
              }
              initialValue = defaultValue;
            }

            node._wrapperState = {
              initialValue: getToStringValue(initialValue)
            };
          }

          function updateWrapper$1(element, props) {
            var node = element;
            var value = getToStringValue(props.value);
            var defaultValue = getToStringValue(props.defaultValue);
            if (value != null) {
              // Cast `value` to a string to ensure the value is set correctly. While
              // browsers typically do this as necessary, jsdom doesn't.
              var newValue = toString(value);
              // To avoid side effects (such as losing text selection), only set value if changed
              if (newValue !== node.value) {
                node.value = newValue;
              }
              if (
                props.defaultValue == null &&
                node.defaultValue !== newValue
              ) {
                node.defaultValue = newValue;
              }
            }
            if (defaultValue != null) {
              node.defaultValue = toString(defaultValue);
            }
          }

          function postMountWrapper$3(element, props) {
            var node = element;
            // This is in postMount because we need access to the DOM node, which is not
            // available until after the component has mounted.
            var textContent = node.textContent;

            // Only set node.value if textContent is equal to the expected
            // initial value. In IE10/IE11 there is a bug where the placeholder attribute
            // will populate textContent as well.
            // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
            if (textContent === node._wrapperState.initialValue) {
              node.value = textContent;
            }
          }

          function restoreControlledState$3(element, props) {
            // DOM component is still mounted; update
            updateWrapper$1(element, props);
          }

          var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
          var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
          var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';

          var Namespaces = {
            html: HTML_NAMESPACE$1,
            mathml: MATH_NAMESPACE,
            svg: SVG_NAMESPACE
          };

          // Assumes there is no parent namespace.
          function getIntrinsicNamespace(type) {
            switch (type) {
              case 'svg':
                return SVG_NAMESPACE;
              case 'math':
                return MATH_NAMESPACE;
              default:
                return HTML_NAMESPACE$1;
            }
          }

          function getChildNamespace(parentNamespace, type) {
            if (
              parentNamespace == null ||
              parentNamespace === HTML_NAMESPACE$1
            ) {
              // No (or default) parent namespace: potential entry point.
              return getIntrinsicNamespace(type);
            }
            if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
              // We're leaving SVG.
              return HTML_NAMESPACE$1;
            }
            // By default, pass namespace below.
            return parentNamespace;
          }

          /* globals MSApp */

          /**
           * Create a function which has 'unsafe' privileges (required by windows8 apps)
           */
          var createMicrosoftUnsafeLocalFunction = function(func) {
            if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
              return function(arg0, arg1, arg2, arg3) {
                MSApp.execUnsafeLocalFunction(function() {
                  return func(arg0, arg1, arg2, arg3);
                });
              };
            } else {
              return func;
            }
          };

          // SVG temp container for IE lacking innerHTML
          var reusableSVGContainer = void 0;

          /**
           * Set the innerHTML property of a node
           *
           * @param {DOMElement} node
           * @param {string} html
           * @internal
           */
          var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(
            node,
            html
          ) {
            // IE does not have innerHTML for SVG nodes, so instead we inject the
            // new markup in a temp node and then move the child nodes across into
            // the target node

            if (
              node.namespaceURI === Namespaces.svg &&
              !('innerHTML' in node)
            ) {
              reusableSVGContainer =
                reusableSVGContainer || document.createElement('div');
              reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
              var svgNode = reusableSVGContainer.firstChild;
              while (node.firstChild) {
                node.removeChild(node.firstChild);
              }
              while (svgNode.firstChild) {
                node.appendChild(svgNode.firstChild);
              }
            } else {
              node.innerHTML = html;
            }
          });

          /**
           * Set the textContent property of a node. For text updates, it's faster
           * to set the `nodeValue` of the Text node directly instead of using
           * `.textContent` which will remove the existing node and create a new one.
           *
           * @param {DOMElement} node
           * @param {string} text
           * @internal
           */
          var setTextContent = function(node, text) {
            if (text) {
              var firstChild = node.firstChild;

              if (
                firstChild &&
                firstChild === node.lastChild &&
                firstChild.nodeType === TEXT_NODE
              ) {
                firstChild.nodeValue = text;
                return;
              }
            }
            node.textContent = text;
          };

          /**
           * CSS properties which accept numbers but are not in units of "px".
           */
          var isUnitlessNumber = {
            animationIterationCount: true,
            borderImageOutset: true,
            borderImageSlice: true,
            borderImageWidth: true,
            boxFlex: true,
            boxFlexGroup: true,
            boxOrdinalGroup: true,
            columnCount: true,
            columns: true,
            flex: true,
            flexGrow: true,
            flexPositive: true,
            flexShrink: true,
            flexNegative: true,
            flexOrder: true,
            gridArea: true,
            gridRow: true,
            gridRowEnd: true,
            gridRowSpan: true,
            gridRowStart: true,
            gridColumn: true,
            gridColumnEnd: true,
            gridColumnSpan: true,
            gridColumnStart: true,
            fontWeight: true,
            lineClamp: true,
            lineHeight: true,
            opacity: true,
            order: true,
            orphans: true,
            tabSize: true,
            widows: true,
            zIndex: true,
            zoom: true,

            // SVG-related properties
            fillOpacity: true,
            floodOpacity: true,
            stopOpacity: true,
            strokeDasharray: true,
            strokeDashoffset: true,
            strokeMiterlimit: true,
            strokeOpacity: true,
            strokeWidth: true
          };

          /**
           * @param {string} prefix vendor-specific prefix, eg: Webkit
           * @param {string} key style name, eg: transitionDuration
           * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
           * WebkitTransitionDuration
           */
          function prefixKey(prefix, key) {
            return prefix + key.charAt(0).toUpperCase() + key.substring(1);
          }

          /**
           * Support style names that may come passed in prefixed by adding permutations
           * of vendor prefixes.
           */
          var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

          // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
          // infinite loop, because it iterates over the newly added props too.
          Object.keys(isUnitlessNumber).forEach(function(prop) {
            prefixes.forEach(function(prefix) {
              isUnitlessNumber[prefixKey(prefix, prop)] =
                isUnitlessNumber[prop];
            });
          });

          /**
           * Convert a value into the proper css writable value. The style name `name`
           * should be logical (no hyphens), as specified
           * in `CSSProperty.isUnitlessNumber`.
           *
           * @param {string} name CSS property name such as `topMargin`.
           * @param {*} value CSS property value such as `10px`.
           * @return {string} Normalized style value with dimensions applied.
           */
          function dangerousStyleValue(name, value, isCustomProperty) {
            // Note that we've removed escapeTextForBrowser() calls here since the
            // whole string will be escaped when the attribute is injected into
            // the markup. If you provide unsafe user data here they can inject
            // arbitrary CSS which may be problematic (I couldn't repro this):
            // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
            // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
            // This is not an XSS hole but instead a potential CSS injection issue
            // which has lead to a greater discussion about how we're going to
            // trust URLs moving forward. See #2115901

            var isEmpty =
              value == null || typeof value === 'boolean' || value === '';
            if (isEmpty) {
              return '';
            }

            if (
              !isCustomProperty &&
              typeof value === 'number' &&
              value !== 0 &&
              !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])
            ) {
              return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
            }

            return ('' + value).trim();
          }

          var uppercasePattern = /([A-Z])/g;
          var msPattern = /^ms-/;

          /**
           * Hyphenates a camelcased CSS property name, for example:
           *
           *   > hyphenateStyleName('backgroundColor')
           *   < "background-color"
           *   > hyphenateStyleName('MozTransition')
           *   < "-moz-transition"
           *   > hyphenateStyleName('msTransition')
           *   < "-ms-transition"
           *
           * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
           * is converted to `-ms-`.
           */
          function hyphenateStyleName(name) {
            return name
              .replace(uppercasePattern, '-$1')
              .toLowerCase()
              .replace(msPattern, '-ms-');
          }

          var warnValidStyle = function() {};

          {
            // 'msTransform' is correct, but the other prefixes should be capitalized
            var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
            var msPattern$1 = /^-ms-/;
            var hyphenPattern = /-(.)/g;

            // style values shouldn't contain a semicolon
            var badStyleValueWithSemicolonPattern = /;\s*$/;

            var warnedStyleNames = {};
            var warnedStyleValues = {};
            var warnedForNaNValue = false;
            var warnedForInfinityValue = false;

            var camelize = function(string) {
              return string.replace(hyphenPattern, function(_, character) {
                return character.toUpperCase();
              });
            };

            var warnHyphenatedStyleName = function(name) {
              if (
                warnedStyleNames.hasOwnProperty(name) &&
                warnedStyleNames[name]
              ) {
                return;
              }

              warnedStyleNames[name] = true;
              warning$1(
                false,
                'Unsupported style property %s. Did you mean %s?',
                name,
                // As Andi Smith suggests
                // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
                // is converted to lowercase `ms`.
                camelize(name.replace(msPattern$1, 'ms-'))
              );
            };

            var warnBadVendoredStyleName = function(name) {
              if (
                warnedStyleNames.hasOwnProperty(name) &&
                warnedStyleNames[name]
              ) {
                return;
              }

              warnedStyleNames[name] = true;
              warning$1(
                false,
                'Unsupported vendor-prefixed style property %s. Did you mean %s?',
                name,
                name.charAt(0).toUpperCase() + name.slice(1)
              );
            };

            var warnStyleValueWithSemicolon = function(name, value) {
              if (
                warnedStyleValues.hasOwnProperty(value) &&
                warnedStyleValues[value]
              ) {
                return;
              }

              warnedStyleValues[value] = true;
              warning$1(
                false,
                "Style property values shouldn't contain a semicolon. " +
                  'Try "%s: %s" instead.',
                name,
                value.replace(badStyleValueWithSemicolonPattern, '')
              );
            };

            var warnStyleValueIsNaN = function(name, value) {
              if (warnedForNaNValue) {
                return;
              }

              warnedForNaNValue = true;
              warning$1(
                false,
                '`NaN` is an invalid value for the `%s` css style property.',
                name
              );
            };

            var warnStyleValueIsInfinity = function(name, value) {
              if (warnedForInfinityValue) {
                return;
              }

              warnedForInfinityValue = true;
              warning$1(
                false,
                '`Infinity` is an invalid value for the `%s` css style property.',
                name
              );
            };

            warnValidStyle = function(name, value) {
              if (name.indexOf('-') > -1) {
                warnHyphenatedStyleName(name);
              } else if (badVendoredStyleNamePattern.test(name)) {
                warnBadVendoredStyleName(name);
              } else if (badStyleValueWithSemicolonPattern.test(value)) {
                warnStyleValueWithSemicolon(name, value);
              }

              if (typeof value === 'number') {
                if (isNaN(value)) {
                  warnStyleValueIsNaN(name, value);
                } else if (!isFinite(value)) {
                  warnStyleValueIsInfinity(name, value);
                }
              }
            };
          }

          var warnValidStyle$1 = warnValidStyle;

          /**
           * Operations for dealing with CSS properties.
           */

          /**
           * This creates a string that is expected to be equivalent to the style
           * attribute generated by server-side rendering. It by-passes warnings and
           * security checks so it's not safe to use this value for anything other than
           * comparison. It is only used in DEV for SSR validation.
           */
          function createDangerousStringForStyles(styles) {
            {
              var serialized = '';
              var delimiter = '';
              for (var styleName in styles) {
                if (!styles.hasOwnProperty(styleName)) {
                  continue;
                }
                var styleValue = styles[styleName];
                if (styleValue != null) {
                  var isCustomProperty = styleName.indexOf('--') === 0;
                  serialized += delimiter + hyphenateStyleName(styleName) + ':';
                  serialized += dangerousStyleValue(
                    styleName,
                    styleValue,
                    isCustomProperty
                  );

                  delimiter = ';';
                }
              }
              return serialized || null;
            }
          }

          /**
           * Sets the value for multiple styles on a node.  If a value is specified as
           * '' (empty string), the corresponding style property will be unset.
           *
           * @param {DOMElement} node
           * @param {object} styles
           */
          function setValueForStyles(node, styles) {
            var style = node.style;
            for (var styleName in styles) {
              if (!styles.hasOwnProperty(styleName)) {
                continue;
              }
              var isCustomProperty = styleName.indexOf('--') === 0;
              {
                if (!isCustomProperty) {
                  warnValidStyle$1(styleName, styles[styleName]);
                }
              }
              var styleValue = dangerousStyleValue(
                styleName,
                styles[styleName],
                isCustomProperty
              );
              if (styleName === 'float') {
                styleName = 'cssFloat';
              }
              if (isCustomProperty) {
                style.setProperty(styleName, styleValue);
              } else {
                style[styleName] = styleValue;
              }
            }
          }

          // For HTML, certain tags should omit their close tag. We keep a whitelist for
          // those special-case tags.

          var omittedCloseTags = {
            area: true,
            base: true,
            br: true,
            col: true,
            embed: true,
            hr: true,
            img: true,
            input: true,
            keygen: true,
            link: true,
            meta: true,
            param: true,
            source: true,
            track: true,
            wbr: true
            // NOTE: menuitem's close tag should be omitted, but that causes problems.
          };

          // For HTML, certain tags cannot have children. This has the same purpose as
          // `omittedCloseTags` except that `menuitem` should still have its closing tag.

          var voidElementTags = _assign(
            {
              menuitem: true
            },
            omittedCloseTags
          );

          // TODO: We can remove this if we add invariantWithStack()
          // or add stack by default to invariants where possible.
          var HTML$1 = '__html';

          var ReactDebugCurrentFrame$2 = null;
          {
            ReactDebugCurrentFrame$2 =
              ReactSharedInternals.ReactDebugCurrentFrame;
          }

          function assertValidProps(tag, props) {
            if (!props) {
              return;
            }
            // Note the use of `==` which checks for null or undefined.
            if (voidElementTags[tag]) {
              !(props.children == null && props.dangerouslySetInnerHTML == null)
                ? invariant(
                    false,
                    '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s',
                    tag,
                    ReactDebugCurrentFrame$2.getStackAddendum()
                  )
                : void 0;
            }
            if (props.dangerouslySetInnerHTML != null) {
              !(props.children == null)
                ? invariant(
                    false,
                    'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
                  )
                : void 0;
              !(
                typeof props.dangerouslySetInnerHTML === 'object' &&
                HTML$1 in props.dangerouslySetInnerHTML
              )
                ? invariant(
                    false,
                    '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.'
                  )
                : void 0;
            }
            {
              !(
                props.suppressContentEditableWarning ||
                !props.contentEditable ||
                props.children == null
              )
                ? warning$1(
                    false,
                    'A component is `contentEditable` and contains `children` managed by ' +
                      'React. It is now your responsibility to guarantee that none of ' +
                      'those nodes are unexpectedly modified or duplicated. This is ' +
                      'probably not intentional.'
                  )
                : void 0;
            }
            !(props.style == null || typeof props.style === 'object')
              ? invariant(
                  false,
                  "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.%s",
                  ReactDebugCurrentFrame$2.getStackAddendum()
                )
              : void 0;
          }

          function isCustomComponent(tagName, props) {
            if (tagName.indexOf('-') === -1) {
              return typeof props.is === 'string';
            }
            switch (tagName) {
              // These are reserved SVG and MathML elements.
              // We don't mind this whitelist too much because we expect it to never grow.
              // The alternative is to track the namespace in a few places which is convoluted.
              // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
              case 'annotation-xml':
              case 'color-profile':
              case 'font-face':
              case 'font-face-src':
              case 'font-face-uri':
              case 'font-face-format':
              case 'font-face-name':
              case 'missing-glyph':
                return false;
              default:
                return true;
            }
          }

          // When adding attributes to the HTML or SVG whitelist, be sure to
          // also add them to this module to ensure casing and incorrect name
          // warnings.
          var possibleStandardNames = {
            // HTML
            accept: 'accept',
            acceptcharset: 'acceptCharset',
            'accept-charset': 'acceptCharset',
            accesskey: 'accessKey',
            action: 'action',
            allowfullscreen: 'allowFullScreen',
            alt: 'alt',
            as: 'as',
            async: 'async',
            autocapitalize: 'autoCapitalize',
            autocomplete: 'autoComplete',
            autocorrect: 'autoCorrect',
            autofocus: 'autoFocus',
            autoplay: 'autoPlay',
            autosave: 'autoSave',
            capture: 'capture',
            cellpadding: 'cellPadding',
            cellspacing: 'cellSpacing',
            challenge: 'challenge',
            charset: 'charSet',
            checked: 'checked',
            children: 'children',
            cite: 'cite',
            class: 'className',
            classid: 'classID',
            classname: 'className',
            cols: 'cols',
            colspan: 'colSpan',
            content: 'content',
            contenteditable: 'contentEditable',
            contextmenu: 'contextMenu',
            controls: 'controls',
            controlslist: 'controlsList',
            coords: 'coords',
            crossorigin: 'crossOrigin',
            dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
            data: 'data',
            datetime: 'dateTime',
            default: 'default',
            defaultchecked: 'defaultChecked',
            defaultvalue: 'defaultValue',
            defer: 'defer',
            dir: 'dir',
            disabled: 'disabled',
            download: 'download',
            draggable: 'draggable',
            enctype: 'encType',
            for: 'htmlFor',
            form: 'form',
            formmethod: 'formMethod',
            formaction: 'formAction',
            formenctype: 'formEncType',
            formnovalidate: 'formNoValidate',
            formtarget: 'formTarget',
            frameborder: 'frameBorder',
            headers: 'headers',
            height: 'height',
            hidden: 'hidden',
            high: 'high',
            href: 'href',
            hreflang: 'hrefLang',
            htmlfor: 'htmlFor',
            httpequiv: 'httpEquiv',
            'http-equiv': 'httpEquiv',
            icon: 'icon',
            id: 'id',
            innerhtml: 'innerHTML',
            inputmode: 'inputMode',
            integrity: 'integrity',
            is: 'is',
            itemid: 'itemID',
            itemprop: 'itemProp',
            itemref: 'itemRef',
            itemscope: 'itemScope',
            itemtype: 'itemType',
            keyparams: 'keyParams',
            keytype: 'keyType',
            kind: 'kind',
            label: 'label',
            lang: 'lang',
            list: 'list',
            loop: 'loop',
            low: 'low',
            manifest: 'manifest',
            marginwidth: 'marginWidth',
            marginheight: 'marginHeight',
            max: 'max',
            maxlength: 'maxLength',
            media: 'media',
            mediagroup: 'mediaGroup',
            method: 'method',
            min: 'min',
            minlength: 'minLength',
            multiple: 'multiple',
            muted: 'muted',
            name: 'name',
            nomodule: 'noModule',
            nonce: 'nonce',
            novalidate: 'noValidate',
            open: 'open',
            optimum: 'optimum',
            pattern: 'pattern',
            placeholder: 'placeholder',
            playsinline: 'playsInline',
            poster: 'poster',
            preload: 'preload',
            profile: 'profile',
            radiogroup: 'radioGroup',
            readonly: 'readOnly',
            referrerpolicy: 'referrerPolicy',
            rel: 'rel',
            required: 'required',
            reversed: 'reversed',
            role: 'role',
            rows: 'rows',
            rowspan: 'rowSpan',
            sandbox: 'sandbox',
            scope: 'scope',
            scoped: 'scoped',
            scrolling: 'scrolling',
            seamless: 'seamless',
            selected: 'selected',
            shape: 'shape',
            size: 'size',
            sizes: 'sizes',
            span: 'span',
            spellcheck: 'spellCheck',
            src: 'src',
            srcdoc: 'srcDoc',
            srclang: 'srcLang',
            srcset: 'srcSet',
            start: 'start',
            step: 'step',
            style: 'style',
            summary: 'summary',
            tabindex: 'tabIndex',
            target: 'target',
            title: 'title',
            type: 'type',
            usemap: 'useMap',
            value: 'value',
            width: 'width',
            wmode: 'wmode',
            wrap: 'wrap',

            // SVG
            about: 'about',
            accentheight: 'accentHeight',
            'accent-height': 'accentHeight',
            accumulate: 'accumulate',
            additive: 'additive',
            alignmentbaseline: 'alignmentBaseline',
            'alignment-baseline': 'alignmentBaseline',
            allowreorder: 'allowReorder',
            alphabetic: 'alphabetic',
            amplitude: 'amplitude',
            arabicform: 'arabicForm',
            'arabic-form': 'arabicForm',
            ascent: 'ascent',
            attributename: 'attributeName',
            attributetype: 'attributeType',
            autoreverse: 'autoReverse',
            azimuth: 'azimuth',
            basefrequency: 'baseFrequency',
            baselineshift: 'baselineShift',
            'baseline-shift': 'baselineShift',
            baseprofile: 'baseProfile',
            bbox: 'bbox',
            begin: 'begin',
            bias: 'bias',
            by: 'by',
            calcmode: 'calcMode',
            capheight: 'capHeight',
            'cap-height': 'capHeight',
            clip: 'clip',
            clippath: 'clipPath',
            'clip-path': 'clipPath',
            clippathunits: 'clipPathUnits',
            cliprule: 'clipRule',
            'clip-rule': 'clipRule',
            color: 'color',
            colorinterpolation: 'colorInterpolation',
            'color-interpolation': 'colorInterpolation',
            colorinterpolationfilters: 'colorInterpolationFilters',
            'color-interpolation-filters': 'colorInterpolationFilters',
            colorprofile: 'colorProfile',
            'color-profile': 'colorProfile',
            colorrendering: 'colorRendering',
            'color-rendering': 'colorRendering',
            contentscripttype: 'contentScriptType',
            contentstyletype: 'contentStyleType',
            cursor: 'cursor',
            cx: 'cx',
            cy: 'cy',
            d: 'd',
            datatype: 'datatype',
            decelerate: 'decelerate',
            descent: 'descent',
            diffuseconstant: 'diffuseConstant',
            direction: 'direction',
            display: 'display',
            divisor: 'divisor',
            dominantbaseline: 'dominantBaseline',
            'dominant-baseline': 'dominantBaseline',
            dur: 'dur',
            dx: 'dx',
            dy: 'dy',
            edgemode: 'edgeMode',
            elevation: 'elevation',
            enablebackground: 'enableBackground',
            'enable-background': 'enableBackground',
            end: 'end',
            exponent: 'exponent',
            externalresourcesrequired: 'externalResourcesRequired',
            fill: 'fill',
            fillopacity: 'fillOpacity',
            'fill-opacity': 'fillOpacity',
            fillrule: 'fillRule',
            'fill-rule': 'fillRule',
            filter: 'filter',
            filterres: 'filterRes',
            filterunits: 'filterUnits',
            floodopacity: 'floodOpacity',
            'flood-opacity': 'floodOpacity',
            floodcolor: 'floodColor',
            'flood-color': 'floodColor',
            focusable: 'focusable',
            fontfamily: 'fontFamily',
            'font-family': 'fontFamily',
            fontsize: 'fontSize',
            'font-size': 'fontSize',
            fontsizeadjust: 'fontSizeAdjust',
            'font-size-adjust': 'fontSizeAdjust',
            fontstretch: 'fontStretch',
            'font-stretch': 'fontStretch',
            fontstyle: 'fontStyle',
            'font-style': 'fontStyle',
            fontvariant: 'fontVariant',
            'font-variant': 'fontVariant',
            fontweight: 'fontWeight',
            'font-weight': 'fontWeight',
            format: 'format',
            from: 'from',
            fx: 'fx',
            fy: 'fy',
            g1: 'g1',
            g2: 'g2',
            glyphname: 'glyphName',
            'glyph-name': 'glyphName',
            glyphorientationhorizontal: 'glyphOrientationHorizontal',
            'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
            glyphorientationvertical: 'glyphOrientationVertical',
            'glyph-orientation-vertical': 'glyphOrientationVertical',
            glyphref: 'glyphRef',
            gradienttransform: 'gradientTransform',
            gradientunits: 'gradientUnits',
            hanging: 'hanging',
            horizadvx: 'horizAdvX',
            'horiz-adv-x': 'horizAdvX',
            horizoriginx: 'horizOriginX',
            'horiz-origin-x': 'horizOriginX',
            ideographic: 'ideographic',
            imagerendering: 'imageRendering',
            'image-rendering': 'imageRendering',
            in2: 'in2',
            in: 'in',
            inlist: 'inlist',
            intercept: 'intercept',
            k1: 'k1',
            k2: 'k2',
            k3: 'k3',
            k4: 'k4',
            k: 'k',
            kernelmatrix: 'kernelMatrix',
            kernelunitlength: 'kernelUnitLength',
            kerning: 'kerning',
            keypoints: 'keyPoints',
            keysplines: 'keySplines',
            keytimes: 'keyTimes',
            lengthadjust: 'lengthAdjust',
            letterspacing: 'letterSpacing',
            'letter-spacing': 'letterSpacing',
            lightingcolor: 'lightingColor',
            'lighting-color': 'lightingColor',
            limitingconeangle: 'limitingConeAngle',
            local: 'local',
            markerend: 'markerEnd',
            'marker-end': 'markerEnd',
            markerheight: 'markerHeight',
            markermid: 'markerMid',
            'marker-mid': 'markerMid',
            markerstart: 'markerStart',
            'marker-start': 'markerStart',
            markerunits: 'markerUnits',
            markerwidth: 'markerWidth',
            mask: 'mask',
            maskcontentunits: 'maskContentUnits',
            maskunits: 'maskUnits',
            mathematical: 'mathematical',
            mode: 'mode',
            numoctaves: 'numOctaves',
            offset: 'offset',
            opacity: 'opacity',
            operator: 'operator',
            order: 'order',
            orient: 'orient',
            orientation: 'orientation',
            origin: 'origin',
            overflow: 'overflow',
            overlineposition: 'overlinePosition',
            'overline-position': 'overlinePosition',
            overlinethickness: 'overlineThickness',
            'overline-thickness': 'overlineThickness',
            paintorder: 'paintOrder',
            'paint-order': 'paintOrder',
            panose1: 'panose1',
            'panose-1': 'panose1',
            pathlength: 'pathLength',
            patterncontentunits: 'patternContentUnits',
            patterntransform: 'patternTransform',
            patternunits: 'patternUnits',
            pointerevents: 'pointerEvents',
            'pointer-events': 'pointerEvents',
            points: 'points',
            pointsatx: 'pointsAtX',
            pointsaty: 'pointsAtY',
            pointsatz: 'pointsAtZ',
            prefix: 'prefix',
            preservealpha: 'preserveAlpha',
            preserveaspectratio: 'preserveAspectRatio',
            primitiveunits: 'primitiveUnits',
            property: 'property',
            r: 'r',
            radius: 'radius',
            refx: 'refX',
            refy: 'refY',
            renderingintent: 'renderingIntent',
            'rendering-intent': 'renderingIntent',
            repeatcount: 'repeatCount',
            repeatdur: 'repeatDur',
            requiredextensions: 'requiredExtensions',
            requiredfeatures: 'requiredFeatures',
            resource: 'resource',
            restart: 'restart',
            result: 'result',
            results: 'results',
            rotate: 'rotate',
            rx: 'rx',
            ry: 'ry',
            scale: 'scale',
            security: 'security',
            seed: 'seed',
            shaperendering: 'shapeRendering',
            'shape-rendering': 'shapeRendering',
            slope: 'slope',
            spacing: 'spacing',
            specularconstant: 'specularConstant',
            specularexponent: 'specularExponent',
            speed: 'speed',
            spreadmethod: 'spreadMethod',
            startoffset: 'startOffset',
            stddeviation: 'stdDeviation',
            stemh: 'stemh',
            stemv: 'stemv',
            stitchtiles: 'stitchTiles',
            stopcolor: 'stopColor',
            'stop-color': 'stopColor',
            stopopacity: 'stopOpacity',
            'stop-opacity': 'stopOpacity',
            strikethroughposition: 'strikethroughPosition',
            'strikethrough-position': 'strikethroughPosition',
            strikethroughthickness: 'strikethroughThickness',
            'strikethrough-thickness': 'strikethroughThickness',
            string: 'string',
            stroke: 'stroke',
            strokedasharray: 'strokeDasharray',
            'stroke-dasharray': 'strokeDasharray',
            strokedashoffset: 'strokeDashoffset',
            'stroke-dashoffset': 'strokeDashoffset',
            strokelinecap: 'strokeLinecap',
            'stroke-linecap': 'strokeLinecap',
            strokelinejoin: 'strokeLinejoin',
            'stroke-linejoin': 'strokeLinejoin',
            strokemiterlimit: 'strokeMiterlimit',
            'stroke-miterlimit': 'strokeMiterlimit',
            strokewidth: 'strokeWidth',
            'stroke-width': 'strokeWidth',
            strokeopacity: 'strokeOpacity',
            'stroke-opacity': 'strokeOpacity',
            suppresscontenteditablewarning: 'suppressContentEditableWarning',
            suppresshydrationwarning: 'suppressHydrationWarning',
            surfacescale: 'surfaceScale',
            systemlanguage: 'systemLanguage',
            tablevalues: 'tableValues',
            targetx: 'targetX',
            targety: 'targetY',
            textanchor: 'textAnchor',
            'text-anchor': 'textAnchor',
            textdecoration: 'textDecoration',
            'text-decoration': 'textDecoration',
            textlength: 'textLength',
            textrendering: 'textRendering',
            'text-rendering': 'textRendering',
            to: 'to',
            transform: 'transform',
            typeof: 'typeof',
            u1: 'u1',
            u2: 'u2',
            underlineposition: 'underlinePosition',
            'underline-position': 'underlinePosition',
            underlinethickness: 'underlineThickness',
            'underline-thickness': 'underlineThickness',
            unicode: 'unicode',
            unicodebidi: 'unicodeBidi',
            'unicode-bidi': 'unicodeBidi',
            unicoderange: 'unicodeRange',
            'unicode-range': 'unicodeRange',
            unitsperem: 'unitsPerEm',
            'units-per-em': 'unitsPerEm',
            unselectable: 'unselectable',
            valphabetic: 'vAlphabetic',
            'v-alphabetic': 'vAlphabetic',
            values: 'values',
            vectoreffect: 'vectorEffect',
            'vector-effect': 'vectorEffect',
            version: 'version',
            vertadvy: 'vertAdvY',
            'vert-adv-y': 'vertAdvY',
            vertoriginx: 'vertOriginX',
            'vert-origin-x': 'vertOriginX',
            vertoriginy: 'vertOriginY',
            'vert-origin-y': 'vertOriginY',
            vhanging: 'vHanging',
            'v-hanging': 'vHanging',
            videographic: 'vIdeographic',
            'v-ideographic': 'vIdeographic',
            viewbox: 'viewBox',
            viewtarget: 'viewTarget',
            visibility: 'visibility',
            vmathematical: 'vMathematical',
            'v-mathematical': 'vMathematical',
            vocab: 'vocab',
            widths: 'widths',
            wordspacing: 'wordSpacing',
            'word-spacing': 'wordSpacing',
            writingmode: 'writingMode',
            'writing-mode': 'writingMode',
            x1: 'x1',
            x2: 'x2',
            x: 'x',
            xchannelselector: 'xChannelSelector',
            xheight: 'xHeight',
            'x-height': 'xHeight',
            xlinkactuate: 'xlinkActuate',
            'xlink:actuate': 'xlinkActuate',
            xlinkarcrole: 'xlinkArcrole',
            'xlink:arcrole': 'xlinkArcrole',
            xlinkhref: 'xlinkHref',
            'xlink:href': 'xlinkHref',
            xlinkrole: 'xlinkRole',
            'xlink:role': 'xlinkRole',
            xlinkshow: 'xlinkShow',
            'xlink:show': 'xlinkShow',
            xlinktitle: 'xlinkTitle',
            'xlink:title': 'xlinkTitle',
            xlinktype: 'xlinkType',
            'xlink:type': 'xlinkType',
            xmlbase: 'xmlBase',
            'xml:base': 'xmlBase',
            xmllang: 'xmlLang',
            'xml:lang': 'xmlLang',
            xmlns: 'xmlns',
            'xml:space': 'xmlSpace',
            xmlnsxlink: 'xmlnsXlink',
            'xmlns:xlink': 'xmlnsXlink',
            xmlspace: 'xmlSpace',
            y1: 'y1',
            y2: 'y2',
            y: 'y',
            ychannelselector: 'yChannelSelector',
            z: 'z',
            zoomandpan: 'zoomAndPan'
          };

          var ariaProperties = {
            'aria-current': 0, // state
            'aria-details': 0,
            'aria-disabled': 0, // state
            'aria-hidden': 0, // state
            'aria-invalid': 0, // state
            'aria-keyshortcuts': 0,
            'aria-label': 0,
            'aria-roledescription': 0,
            // Widget Attributes
            'aria-autocomplete': 0,
            'aria-checked': 0,
            'aria-expanded': 0,
            'aria-haspopup': 0,
            'aria-level': 0,
            'aria-modal': 0,
            'aria-multiline': 0,
            'aria-multiselectable': 0,
            'aria-orientation': 0,
            'aria-placeholder': 0,
            'aria-pressed': 0,
            'aria-readonly': 0,
            'aria-required': 0,
            'aria-selected': 0,
            'aria-sort': 0,
            'aria-valuemax': 0,
            'aria-valuemin': 0,
            'aria-valuenow': 0,
            'aria-valuetext': 0,
            // Live Region Attributes
            'aria-atomic': 0,
            'aria-busy': 0,
            'aria-live': 0,
            'aria-relevant': 0,
            // Drag-and-Drop Attributes
            'aria-dropeffect': 0,
            'aria-grabbed': 0,
            // Relationship Attributes
            'aria-activedescendant': 0,
            'aria-colcount': 0,
            'aria-colindex': 0,
            'aria-colspan': 0,
            'aria-controls': 0,
            'aria-describedby': 0,
            'aria-errormessage': 0,
            'aria-flowto': 0,
            'aria-labelledby': 0,
            'aria-owns': 0,
            'aria-posinset': 0,
            'aria-rowcount': 0,
            'aria-rowindex': 0,
            'aria-rowspan': 0,
            'aria-setsize': 0
          };

          var warnedProperties = {};
          var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
          var rARIACamel = new RegExp(
            '^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$'
          );

          var hasOwnProperty$2 = Object.prototype.hasOwnProperty;

          function validateProperty(tagName, name) {
            if (
              hasOwnProperty$2.call(warnedProperties, name) &&
              warnedProperties[name]
            ) {
              return true;
            }

            if (rARIACamel.test(name)) {
              var ariaName = 'aria-' + name.slice(4).toLowerCase();
              var correctName = ariaProperties.hasOwnProperty(ariaName)
                ? ariaName
                : null;

              // If this is an aria-* attribute, but is not listed in the known DOM
              // DOM properties, then it is an invalid aria-* attribute.
              if (correctName == null) {
                warning$1(
                  false,
                  'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.',
                  name
                );
                warnedProperties[name] = true;
                return true;
              }
              // aria-* attributes should be lowercase; suggest the lowercase version.
              if (name !== correctName) {
                warning$1(
                  false,
                  'Invalid ARIA attribute `%s`. Did you mean `%s`?',
                  name,
                  correctName
                );
                warnedProperties[name] = true;
                return true;
              }
            }

            if (rARIA.test(name)) {
              var lowerCasedName = name.toLowerCase();
              var standardName = ariaProperties.hasOwnProperty(lowerCasedName)
                ? lowerCasedName
                : null;

              // If this is an aria-* attribute, but is not listed in the known DOM
              // DOM properties, then it is an invalid aria-* attribute.
              if (standardName == null) {
                warnedProperties[name] = true;
                return false;
              }
              // aria-* attributes should be lowercase; suggest the lowercase version.
              if (name !== standardName) {
                warning$1(
                  false,
                  'Unknown ARIA attribute `%s`. Did you mean `%s`?',
                  name,
                  standardName
                );
                warnedProperties[name] = true;
                return true;
              }
            }

            return true;
          }

          function warnInvalidARIAProps(type, props) {
            var invalidProps = [];

            for (var key in props) {
              var isValid = validateProperty(type, key);
              if (!isValid) {
                invalidProps.push(key);
              }
            }

            var unknownPropString = invalidProps
              .map(function(prop) {
                return '`' + prop + '`';
              })
              .join(', ');

            if (invalidProps.length === 1) {
              warning$1(
                false,
                'Invalid aria prop %s on <%s> tag. ' +
                  'For details, see https://fb.me/invalid-aria-prop',
                unknownPropString,
                type
              );
            } else if (invalidProps.length > 1) {
              warning$1(
                false,
                'Invalid aria props %s on <%s> tag. ' +
                  'For details, see https://fb.me/invalid-aria-prop',
                unknownPropString,
                type
              );
            }
          }

          function validateProperties(type, props) {
            if (isCustomComponent(type, props)) {
              return;
            }
            warnInvalidARIAProps(type, props);
          }

          var didWarnValueNull = false;

          function validateProperties$1(type, props) {
            if (type !== 'input' && type !== 'textarea' && type !== 'select') {
              return;
            }

            if (props != null && props.value === null && !didWarnValueNull) {
              didWarnValueNull = true;
              if (type === 'select' && props.multiple) {
                warning$1(
                  false,
                  '`value` prop on `%s` should not be null. ' +
                    'Consider using an empty array when `multiple` is set to `true` ' +
                    'to clear the component or `undefined` for uncontrolled components.',
                  type
                );
              } else {
                warning$1(
                  false,
                  '`value` prop on `%s` should not be null. ' +
                    'Consider using an empty string to clear the component or `undefined` ' +
                    'for uncontrolled components.',
                  type
                );
              }
            }
          }

          var validateProperty$1 = function() {};

          {
            var warnedProperties$1 = {};
            var _hasOwnProperty = Object.prototype.hasOwnProperty;
            var EVENT_NAME_REGEX = /^on./;
            var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
            var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
            var rARIACamel$1 = new RegExp(
              '^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$'
            );

            validateProperty$1 = function(
              tagName,
              name,
              value,
              canUseEventSystem
            ) {
              if (
                _hasOwnProperty.call(warnedProperties$1, name) &&
                warnedProperties$1[name]
              ) {
                return true;
              }

              var lowerCasedName = name.toLowerCase();
              if (
                lowerCasedName === 'onfocusin' ||
                lowerCasedName === 'onfocusout'
              ) {
                warning$1(
                  false,
                  'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' +
                    'All React events are normalized to bubble, so onFocusIn and onFocusOut ' +
                    'are not needed/supported by React.'
                );
                warnedProperties$1[name] = true;
                return true;
              }

              // We can't rely on the event system being injected on the server.
              if (canUseEventSystem) {
                if (registrationNameModules.hasOwnProperty(name)) {
                  return true;
                }
                var registrationName = possibleRegistrationNames.hasOwnProperty(
                  lowerCasedName
                )
                  ? possibleRegistrationNames[lowerCasedName]
                  : null;
                if (registrationName != null) {
                  warning$1(
                    false,
                    'Invalid event handler property `%s`. Did you mean `%s`?',
                    name,
                    registrationName
                  );
                  warnedProperties$1[name] = true;
                  return true;
                }
                if (EVENT_NAME_REGEX.test(name)) {
                  warning$1(
                    false,
                    'Unknown event handler property `%s`. It will be ignored.',
                    name
                  );
                  warnedProperties$1[name] = true;
                  return true;
                }
              } else if (EVENT_NAME_REGEX.test(name)) {
                // If no event plugins have been injected, we are in a server environment.
                // So we can't tell if the event name is correct for sure, but we can filter
                // out known bad ones like `onclick`. We can't suggest a specific replacement though.
                if (INVALID_EVENT_NAME_REGEX.test(name)) {
                  warning$1(
                    false,
                    'Invalid event handler property `%s`. ' +
                      'React events use the camelCase naming convention, for example `onClick`.',
                    name
                  );
                }
                warnedProperties$1[name] = true;
                return true;
              }

              // Let the ARIA attribute hook validate ARIA attributes
              if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
                return true;
              }

              if (lowerCasedName === 'innerhtml') {
                warning$1(
                  false,
                  'Directly setting property `innerHTML` is not permitted. ' +
                    'For more information, lookup documentation on `dangerouslySetInnerHTML`.'
                );
                warnedProperties$1[name] = true;
                return true;
              }

              if (lowerCasedName === 'aria') {
                warning$1(
                  false,
                  'The `aria` attribute is reserved for future use in React. ' +
                    'Pass individual `aria-` attributes instead.'
                );
                warnedProperties$1[name] = true;
                return true;
              }

              if (
                lowerCasedName === 'is' &&
                value !== null &&
                value !== undefined &&
                typeof value !== 'string'
              ) {
                warning$1(
                  false,
                  'Received a `%s` for a string attribute `is`. If this is expected, cast ' +
                    'the value to a string.',
                  typeof value
                );
                warnedProperties$1[name] = true;
                return true;
              }

              if (typeof value === 'number' && isNaN(value)) {
                warning$1(
                  false,
                  'Received NaN for the `%s` attribute. If this is expected, cast ' +
                    'the value to a string.',
                  name
                );
                warnedProperties$1[name] = true;
                return true;
              }

              var propertyInfo = getPropertyInfo(name);
              var isReserved =
                propertyInfo !== null && propertyInfo.type === RESERVED;

              // Known attributes should match the casing specified in the property config.
              if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
                var standardName = possibleStandardNames[lowerCasedName];
                if (standardName !== name) {
                  warning$1(
                    false,
                    'Invalid DOM property `%s`. Did you mean `%s`?',
                    name,
                    standardName
                  );
                  warnedProperties$1[name] = true;
                  return true;
                }
              } else if (!isReserved && name !== lowerCasedName) {
                // Unknown attributes should have lowercase casing since that's how they
                // will be cased anyway with server rendering.
                warning$1(
                  false,
                  'React does not recognize the `%s` prop on a DOM element. If you ' +
                    'intentionally want it to appear in the DOM as a custom ' +
                    'attribute, spell it as lowercase `%s` instead. ' +
                    'If you accidentally passed it from a parent component, remove ' +
                    'it from the DOM element.',
                  name,
                  lowerCasedName
                );
                warnedProperties$1[name] = true;
                return true;
              }

              if (
                typeof value === 'boolean' &&
                shouldRemoveAttributeWithWarning(
                  name,
                  value,
                  propertyInfo,
                  false
                )
              ) {
                if (value) {
                  warning$1(
                    false,
                    'Received `%s` for a non-boolean attribute `%s`.\n\n' +
                      'If you want to write it to the DOM, pass a string instead: ' +
                      '%s="%s" or %s={value.toString()}.',
                    value,
                    name,
                    name,
                    value,
                    name
                  );
                } else {
                  warning$1(
                    false,
                    'Received `%s` for a non-boolean attribute `%s`.\n\n' +
                      'If you want to write it to the DOM, pass a string instead: ' +
                      '%s="%s" or %s={value.toString()}.\n\n' +
                      'If you used to conditionally omit it with %s={condition && value}, ' +
                      'pass %s={condition ? value : undefined} instead.',
                    value,
                    name,
                    name,
                    value,
                    name,
                    name,
                    name
                  );
                }
                warnedProperties$1[name] = true;
                return true;
              }

              // Now that we've validated casing, do not validate
              // data types for reserved props
              if (isReserved) {
                return true;
              }

              // Warn when a known attribute is a bad type
              if (
                shouldRemoveAttributeWithWarning(
                  name,
                  value,
                  propertyInfo,
                  false
                )
              ) {
                warnedProperties$1[name] = true;
                return false;
              }

              // Warn when passing the strings 'false' or 'true' into a boolean prop
              if (
                (value === 'false' || value === 'true') &&
                propertyInfo !== null &&
                propertyInfo.type === BOOLEAN
              ) {
                warning$1(
                  false,
                  'Received the string `%s` for the boolean attribute `%s`. ' +
                    '%s ' +
                    'Did you mean %s={%s}?',
                  value,
                  name,
                  value === 'false'
                    ? 'The browser will interpret it as a truthy value.'
                    : 'Although this works, it will not work as expected if you pass the string "false".',
                  name,
                  value
                );
                warnedProperties$1[name] = true;
                return true;
              }

              return true;
            };
          }

          var warnUnknownProperties = function(type, props, canUseEventSystem) {
            var unknownProps = [];
            for (var key in props) {
              var isValid = validateProperty$1(
                type,
                key,
                props[key],
                canUseEventSystem
              );
              if (!isValid) {
                unknownProps.push(key);
              }
            }

            var unknownPropString = unknownProps
              .map(function(prop) {
                return '`' + prop + '`';
              })
              .join(', ');
            if (unknownProps.length === 1) {
              warning$1(
                false,
                'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' +
                  'or pass a string or number value to keep it in the DOM. ' +
                  'For details, see https://fb.me/react-attribute-behavior',
                unknownPropString,
                type
              );
            } else if (unknownProps.length > 1) {
              warning$1(
                false,
                'Invalid values for props %s on <%s> tag. Either remove them from the element, ' +
                  'or pass a string or number value to keep them in the DOM. ' +
                  'For details, see https://fb.me/react-attribute-behavior',
                unknownPropString,
                type
              );
            }
          };

          function validateProperties$2(type, props, canUseEventSystem) {
            if (isCustomComponent(type, props)) {
              return;
            }
            warnUnknownProperties(type, props, canUseEventSystem);
          }

          // TODO: direct imports like some-package/src/* are bad. Fix me.
          var didWarnInvalidHydration = false;
          var didWarnShadyDOM = false;

          var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
          var SUPPRESS_CONTENT_EDITABLE_WARNING =
            'suppressContentEditableWarning';
          var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
          var AUTOFOCUS = 'autoFocus';
          var CHILDREN = 'children';
          var STYLE = 'style';
          var HTML = '__html';

          var HTML_NAMESPACE = Namespaces.html;

          var warnedUnknownTags = void 0;
          var suppressHydrationWarning = void 0;

          var validatePropertiesInDevelopment = void 0;
          var warnForTextDifference = void 0;
          var warnForPropDifference = void 0;
          var warnForExtraAttributes = void 0;
          var warnForInvalidEventListener = void 0;
          var canDiffStyleForHydrationWarning = void 0;

          var normalizeMarkupForTextOrAttribute = void 0;
          var normalizeHTML = void 0;

          {
            warnedUnknownTags = {
              // Chrome is the only major browser not shipping <time>. But as of July
              // 2017 it intends to ship it due to widespread usage. We intentionally
              // *don't* warn for <time> even if it's unrecognized by Chrome because
              // it soon will be, and many apps have been using it anyway.
              time: true,
              // There are working polyfills for <dialog>. Let people use it.
              dialog: true,
              // Electron ships a custom <webview> tag to display external web content in
              // an isolated frame and process.
              // This tag is not present in non Electron environments such as JSDom which
              // is often used for testing purposes.
              // @see https://electronjs.org/docs/api/webview-tag
              webview: true
            };

            validatePropertiesInDevelopment = function(type, props) {
              validateProperties(type, props);
              validateProperties$1(type, props);
              validateProperties$2(type, props, /* canUseEventSystem */ true);
            };

            // IE 11 parses & normalizes the style attribute as opposed to other
            // browsers. It adds spaces and sorts the properties in some
            // non-alphabetical order. Handling that would require sorting CSS
            // properties in the client & server versions or applying
            // `expectedStyle` to a temporary DOM node to read its `style` attribute
            // normalized. Since it only affects IE, we're skipping style warnings
            // in that browser completely in favor of doing all that work.
            // See https://github.com/facebook/react/issues/11807
            canDiffStyleForHydrationWarning =
              canUseDOM && !document.documentMode;

            // HTML parsing normalizes CR and CRLF to LF.
            // It also can turn \u0000 into \uFFFD inside attributes.
            // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
            // If we have a mismatch, it might be caused by that.
            // We will still patch up in this case but not fire the warning.
            var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
            var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

            normalizeMarkupForTextOrAttribute = function(markup) {
              var markupString =
                typeof markup === 'string' ? markup : '' + markup;
              return markupString
                .replace(NORMALIZE_NEWLINES_REGEX, '\n')
                .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
            };

            warnForTextDifference = function(serverText, clientText) {
              if (didWarnInvalidHydration) {
                return;
              }
              var normalizedClientText = normalizeMarkupForTextOrAttribute(
                clientText
              );
              var normalizedServerText = normalizeMarkupForTextOrAttribute(
                serverText
              );
              if (normalizedServerText === normalizedClientText) {
                return;
              }
              didWarnInvalidHydration = true;
              warningWithoutStack$1(
                false,
                'Text content did not match. Server: "%s" Client: "%s"',
                normalizedServerText,
                normalizedClientText
              );
            };

            warnForPropDifference = function(
              propName,
              serverValue,
              clientValue
            ) {
              if (didWarnInvalidHydration) {
                return;
              }
              var normalizedClientValue = normalizeMarkupForTextOrAttribute(
                clientValue
              );
              var normalizedServerValue = normalizeMarkupForTextOrAttribute(
                serverValue
              );
              if (normalizedServerValue === normalizedClientValue) {
                return;
              }
              didWarnInvalidHydration = true;
              warningWithoutStack$1(
                false,
                'Prop `%s` did not match. Server: %s Client: %s',
                propName,
                JSON.stringify(normalizedServerValue),
                JSON.stringify(normalizedClientValue)
              );
            };

            warnForExtraAttributes = function(attributeNames) {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              var names = [];
              attributeNames.forEach(function(name) {
                names.push(name);
              });
              warningWithoutStack$1(
                false,
                'Extra attributes from the server: %s',
                names
              );
            };

            warnForInvalidEventListener = function(registrationName, listener) {
              if (listener === false) {
                warning$1(
                  false,
                  'Expected `%s` listener to be a function, instead got `false`.\n\n' +
                    'If you used to conditionally omit it with %s={condition && value}, ' +
                    'pass %s={condition ? value : undefined} instead.',
                  registrationName,
                  registrationName,
                  registrationName
                );
              } else {
                warning$1(
                  false,
                  'Expected `%s` listener to be a function, instead got a value of `%s` type.',
                  registrationName,
                  typeof listener
                );
              }
            };

            // Parse the HTML and read it back to normalize the HTML string so that it
            // can be used for comparison.
            normalizeHTML = function(parent, html) {
              // We could have created a separate document here to avoid
              // re-initializing custom elements if they exist. But this breaks
              // how <noscript> is being handled. So we use the same document.
              // See the discussion in https://github.com/facebook/react/pull/11157.
              var testElement =
                parent.namespaceURI === HTML_NAMESPACE
                  ? parent.ownerDocument.createElement(parent.tagName)
                  : parent.ownerDocument.createElementNS(
                      parent.namespaceURI,
                      parent.tagName
                    );
              testElement.innerHTML = html;
              return testElement.innerHTML;
            };
          }

          function ensureListeningTo(rootContainerElement, registrationName) {
            var isDocumentOrFragment =
              rootContainerElement.nodeType === DOCUMENT_NODE ||
              rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
            var doc = isDocumentOrFragment
              ? rootContainerElement
              : rootContainerElement.ownerDocument;
            listenTo(registrationName, doc);
          }

          function getOwnerDocumentFromRootContainer(rootContainerElement) {
            return rootContainerElement.nodeType === DOCUMENT_NODE
              ? rootContainerElement
              : rootContainerElement.ownerDocument;
          }

          function noop() {}

          function trapClickOnNonInteractiveElement(node) {
            // Mobile Safari does not fire properly bubble click events on
            // non-interactive elements, which means delegated click listeners do not
            // fire. The workaround for this bug involves attaching an empty click
            // listener on the target node.
            // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
            // Just set it using the onclick property so that we don't have to manage any
            // bookkeeping for it. Not sure if we need to clear it when the listener is
            // removed.
            // TODO: Only do this for the relevant Safaris maybe?
            node.onclick = noop;
          }

          function setInitialDOMProperties(
            tag,
            domElement,
            rootContainerElement,
            nextProps,
            isCustomComponentTag
          ) {
            for (var propKey in nextProps) {
              if (!nextProps.hasOwnProperty(propKey)) {
                continue;
              }
              var nextProp = nextProps[propKey];
              if (propKey === STYLE) {
                {
                  if (nextProp) {
                    // Freeze the next style object so that we can assume it won't be
                    // mutated. We have already warned for this in the past.
                    Object.freeze(nextProp);
                  }
                }
                // Relies on `updateStylesByID` not mutating `styleUpdates`.
                setValueForStyles(domElement, nextProp);
              } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML] : undefined;
                if (nextHtml != null) {
                  setInnerHTML(domElement, nextHtml);
                }
              } else if (propKey === CHILDREN) {
                if (typeof nextProp === 'string') {
                  // Avoid setting initial textContent when the text is empty. In IE11 setting
                  // textContent on a <textarea> will cause the placeholder to not
                  // show within the <textarea> until it has been focused and blurred again.
                  // https://github.com/facebook/react/issues/6731#issuecomment-254874553
                  var canSetTextContent = tag !== 'textarea' || nextProp !== '';
                  if (canSetTextContent) {
                    setTextContent(domElement, nextProp);
                  }
                } else if (typeof nextProp === 'number') {
                  setTextContent(domElement, '' + nextProp);
                }
              } else if (
                propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||
                propKey === SUPPRESS_HYDRATION_WARNING$1
              ) {
                // Noop
              } else if (propKey === AUTOFOCUS) {
                // We polyfill it separately on the client during commit.
                // We could have excluded it in the property list instead of
                // adding a special case here, but then it wouldn't be emitted
                // on server rendering (but we *do* want to emit it in SSR).
              } else if (registrationNameModules.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                  if (true && typeof nextProp !== 'function') {
                    warnForInvalidEventListener(propKey, nextProp);
                  }
                  ensureListeningTo(rootContainerElement, propKey);
                }
              } else if (nextProp != null) {
                setValueForProperty(
                  domElement,
                  propKey,
                  nextProp,
                  isCustomComponentTag
                );
              }
            }
          }

          function updateDOMProperties(
            domElement,
            updatePayload,
            wasCustomComponentTag,
            isCustomComponentTag
          ) {
            // TODO: Handle wasCustomComponentTag
            for (var i = 0; i < updatePayload.length; i += 2) {
              var propKey = updatePayload[i];
              var propValue = updatePayload[i + 1];
              if (propKey === STYLE) {
                setValueForStyles(domElement, propValue);
              } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                setInnerHTML(domElement, propValue);
              } else if (propKey === CHILDREN) {
                setTextContent(domElement, propValue);
              } else {
                setValueForProperty(
                  domElement,
                  propKey,
                  propValue,
                  isCustomComponentTag
                );
              }
            }
          }

          function createElement(
            type,
            props,
            rootContainerElement,
            parentNamespace
          ) {
            var isCustomComponentTag = void 0;

            // We create tags in the namespace of their parent container, except HTML
            // tags get no namespace.
            var ownerDocument = getOwnerDocumentFromRootContainer(
              rootContainerElement
            );
            var domElement = void 0;
            var namespaceURI = parentNamespace;
            if (namespaceURI === HTML_NAMESPACE) {
              namespaceURI = getIntrinsicNamespace(type);
            }
            if (namespaceURI === HTML_NAMESPACE) {
              {
                isCustomComponentTag = isCustomComponent(type, props);
                // Should this check be gated by parent namespace? Not sure we want to
                // allow <SVG> or <mATH>.
                !(isCustomComponentTag || type === type.toLowerCase())
                  ? warning$1(
                      false,
                      '<%s /> is using incorrect casing. ' +
                        'Use PascalCase for React components, ' +
                        'or lowercase for HTML elements.',
                      type
                    )
                  : void 0;
              }

              if (type === 'script') {
                // Create the script via .innerHTML so its "parser-inserted" flag is
                // set to true and it does not execute
                var div = ownerDocument.createElement('div');
                div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
                // This is guaranteed to yield a script element.
                var firstChild = div.firstChild;
                domElement = div.removeChild(firstChild);
              } else if (typeof props.is === 'string') {
                // $FlowIssue `createElement` should be updated for Web Components
                domElement = ownerDocument.createElement(type, {
                  is: props.is
                });
              } else {
                // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
                // See discussion in https://github.com/facebook/react/pull/6896
                // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
                domElement = ownerDocument.createElement(type);
                // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple`
                // attribute on `select`s needs to be added before `option`s are inserted. This prevents
                // a bug where the `select` does not scroll to the correct option because singular
                // `select` elements automatically pick the first item.
                // See https://github.com/facebook/react/issues/13222
                if (type === 'select' && props.multiple) {
                  var node = domElement;
                  node.multiple = true;
                }
              }
            } else {
              domElement = ownerDocument.createElementNS(namespaceURI, type);
            }

            {
              if (namespaceURI === HTML_NAMESPACE) {
                if (
                  !isCustomComponentTag &&
                  Object.prototype.toString.call(domElement) ===
                    '[object HTMLUnknownElement]' &&
                  !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)
                ) {
                  warnedUnknownTags[type] = true;
                  warning$1(
                    false,
                    'The tag <%s> is unrecognized in this browser. ' +
                      'If you meant to render a React component, start its name with ' +
                      'an uppercase letter.',
                    type
                  );
                }
              }
            }

            return domElement;
          }

          function createTextNode(text, rootContainerElement) {
            return getOwnerDocumentFromRootContainer(
              rootContainerElement
            ).createTextNode(text);
          }

          function setInitialProperties(
            domElement,
            tag,
            rawProps,
            rootContainerElement
          ) {
            var isCustomComponentTag = isCustomComponent(tag, rawProps);
            {
              validatePropertiesInDevelopment(tag, rawProps);
              if (
                isCustomComponentTag &&
                !didWarnShadyDOM &&
                domElement.shadyRoot
              ) {
                warning$1(
                  false,
                  '%s is using shady DOM. Using shady DOM with React can ' +
                    'cause things to break subtly.',
                  getCurrentFiberOwnerNameInDevOrNull() || 'A component'
                );
                didWarnShadyDOM = true;
              }
            }

            // TODO: Make sure that we check isMounted before firing any of these events.
            var props = void 0;
            switch (tag) {
              case 'iframe':
              case 'object':
                trapBubbledEvent(TOP_LOAD, domElement);
                props = rawProps;
                break;
              case 'video':
              case 'audio':
                // Create listener for each media event
                for (var i = 0; i < mediaEventTypes.length; i++) {
                  trapBubbledEvent(mediaEventTypes[i], domElement);
                }
                props = rawProps;
                break;
              case 'source':
                trapBubbledEvent(TOP_ERROR, domElement);
                props = rawProps;
                break;
              case 'img':
              case 'image':
              case 'link':
                trapBubbledEvent(TOP_ERROR, domElement);
                trapBubbledEvent(TOP_LOAD, domElement);
                props = rawProps;
                break;
              case 'form':
                trapBubbledEvent(TOP_RESET, domElement);
                trapBubbledEvent(TOP_SUBMIT, domElement);
                props = rawProps;
                break;
              case 'details':
                trapBubbledEvent(TOP_TOGGLE, domElement);
                props = rawProps;
                break;
              case 'input':
                initWrapperState(domElement, rawProps);
                props = getHostProps(domElement, rawProps);
                trapBubbledEvent(TOP_INVALID, domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, 'onChange');
                break;
              case 'option':
                validateProps(domElement, rawProps);
                props = getHostProps$1(domElement, rawProps);
                break;
              case 'select':
                initWrapperState$1(domElement, rawProps);
                props = getHostProps$2(domElement, rawProps);
                trapBubbledEvent(TOP_INVALID, domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, 'onChange');
                break;
              case 'textarea':
                initWrapperState$2(domElement, rawProps);
                props = getHostProps$3(domElement, rawProps);
                trapBubbledEvent(TOP_INVALID, domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, 'onChange');
                break;
              default:
                props = rawProps;
            }

            assertValidProps(tag, props);

            setInitialDOMProperties(
              tag,
              domElement,
              rootContainerElement,
              props,
              isCustomComponentTag
            );

            switch (tag) {
              case 'input':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, false);
                break;
              case 'textarea':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement, rawProps);
                break;
              case 'option':
                postMountWrapper$1(domElement, rawProps);
                break;
              case 'select':
                postMountWrapper$2(domElement, rawProps);
                break;
              default:
                if (typeof props.onClick === 'function') {
                  // TODO: This cast may not be sound for SVG, MathML or custom elements.
                  trapClickOnNonInteractiveElement(domElement);
                }
                break;
            }
          }

          // Calculate the diff between the two objects.
          function diffProperties(
            domElement,
            tag,
            lastRawProps,
            nextRawProps,
            rootContainerElement
          ) {
            {
              validatePropertiesInDevelopment(tag, nextRawProps);
            }

            var updatePayload = null;

            var lastProps = void 0;
            var nextProps = void 0;
            switch (tag) {
              case 'input':
                lastProps = getHostProps(domElement, lastRawProps);
                nextProps = getHostProps(domElement, nextRawProps);
                updatePayload = [];
                break;
              case 'option':
                lastProps = getHostProps$1(domElement, lastRawProps);
                nextProps = getHostProps$1(domElement, nextRawProps);
                updatePayload = [];
                break;
              case 'select':
                lastProps = getHostProps$2(domElement, lastRawProps);
                nextProps = getHostProps$2(domElement, nextRawProps);
                updatePayload = [];
                break;
              case 'textarea':
                lastProps = getHostProps$3(domElement, lastRawProps);
                nextProps = getHostProps$3(domElement, nextRawProps);
                updatePayload = [];
                break;
              default:
                lastProps = lastRawProps;
                nextProps = nextRawProps;
                if (
                  typeof lastProps.onClick !== 'function' &&
                  typeof nextProps.onClick === 'function'
                ) {
                  // TODO: This cast may not be sound for SVG, MathML or custom elements.
                  trapClickOnNonInteractiveElement(domElement);
                }
                break;
            }

            assertValidProps(tag, nextProps);

            var propKey = void 0;
            var styleName = void 0;
            var styleUpdates = null;
            for (propKey in lastProps) {
              if (
                nextProps.hasOwnProperty(propKey) ||
                !lastProps.hasOwnProperty(propKey) ||
                lastProps[propKey] == null
              ) {
                continue;
              }
              if (propKey === STYLE) {
                var lastStyle = lastProps[propKey];
                for (styleName in lastStyle) {
                  if (lastStyle.hasOwnProperty(styleName)) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = '';
                  }
                }
              } else if (
                propKey === DANGEROUSLY_SET_INNER_HTML ||
                propKey === CHILDREN
              ) {
                // Noop. This is handled by the clear text mechanism.
              } else if (
                propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||
                propKey === SUPPRESS_HYDRATION_WARNING$1
              ) {
                // Noop
              } else if (propKey === AUTOFOCUS) {
                // Noop. It doesn't work on updates anyway.
              } else if (registrationNameModules.hasOwnProperty(propKey)) {
                // This is a special case. If any listener updates we need to ensure
                // that the "current" fiber pointer gets updated so we need a commit
                // to update this element.
                if (!updatePayload) {
                  updatePayload = [];
                }
              } else {
                // For all other deleted properties we add it to the queue. We use
                // the whitelist in the commit phase instead.
                (updatePayload = updatePayload || []).push(propKey, null);
              }
            }
            for (propKey in nextProps) {
              var nextProp = nextProps[propKey];
              var lastProp = lastProps != null ? lastProps[propKey] : undefined;
              if (
                !nextProps.hasOwnProperty(propKey) ||
                nextProp === lastProp ||
                (nextProp == null && lastProp == null)
              ) {
                continue;
              }
              if (propKey === STYLE) {
                {
                  if (nextProp) {
                    // Freeze the next style object so that we can assume it won't be
                    // mutated. We have already warned for this in the past.
                    Object.freeze(nextProp);
                  }
                }
                if (lastProp) {
                  // Unset styles on `lastProp` but not on `nextProp`.
                  for (styleName in lastProp) {
                    if (
                      lastProp.hasOwnProperty(styleName) &&
                      (!nextProp || !nextProp.hasOwnProperty(styleName))
                    ) {
                      if (!styleUpdates) {
                        styleUpdates = {};
                      }
                      styleUpdates[styleName] = '';
                    }
                  }
                  // Update styles that changed since `lastProp`.
                  for (styleName in nextProp) {
                    if (
                      nextProp.hasOwnProperty(styleName) &&
                      lastProp[styleName] !== nextProp[styleName]
                    ) {
                      if (!styleUpdates) {
                        styleUpdates = {};
                      }
                      styleUpdates[styleName] = nextProp[styleName];
                    }
                  }
                } else {
                  // Relies on `updateStylesByID` not mutating `styleUpdates`.
                  if (!styleUpdates) {
                    if (!updatePayload) {
                      updatePayload = [];
                    }
                    updatePayload.push(propKey, styleUpdates);
                  }
                  styleUpdates = nextProp;
                }
              } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML] : undefined;
                var lastHtml = lastProp ? lastProp[HTML] : undefined;
                if (nextHtml != null) {
                  if (lastHtml !== nextHtml) {
                    (updatePayload = updatePayload || []).push(
                      propKey,
                      '' + nextHtml
                    );
                  }
                } else {
                  // TODO: It might be too late to clear this if we have children
                  // inserted already.
                }
              } else if (propKey === CHILDREN) {
                if (
                  lastProp !== nextProp &&
                  (typeof nextProp === 'string' || typeof nextProp === 'number')
                ) {
                  (updatePayload = updatePayload || []).push(
                    propKey,
                    '' + nextProp
                  );
                }
              } else if (
                propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||
                propKey === SUPPRESS_HYDRATION_WARNING$1
              ) {
                // Noop
              } else if (registrationNameModules.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                  // We eagerly listen to this even though we haven't committed yet.
                  if (true && typeof nextProp !== 'function') {
                    warnForInvalidEventListener(propKey, nextProp);
                  }
                  ensureListeningTo(rootContainerElement, propKey);
                }
                if (!updatePayload && lastProp !== nextProp) {
                  // This is a special case. If any listener updates we need to ensure
                  // that the "current" props pointer gets updated so we need a commit
                  // to update this element.
                  updatePayload = [];
                }
              } else {
                // For any other property we always add it to the queue and then we
                // filter it out using the whitelist during the commit.
                (updatePayload = updatePayload || []).push(propKey, nextProp);
              }
            }
            if (styleUpdates) {
              (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
            }
            return updatePayload;
          }

          // Apply the diff.
          function updateProperties(
            domElement,
            updatePayload,
            tag,
            lastRawProps,
            nextRawProps
          ) {
            // Update checked *before* name.
            // In the middle of an update, it is possible to have multiple checked.
            // When a checked radio tries to change name, browser makes another radio's checked false.
            if (
              tag === 'input' &&
              nextRawProps.type === 'radio' &&
              nextRawProps.name != null
            ) {
              updateChecked(domElement, nextRawProps);
            }

            var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
            var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
            // Apply the diff.
            updateDOMProperties(
              domElement,
              updatePayload,
              wasCustomComponentTag,
              isCustomComponentTag
            );

            // TODO: Ensure that an update gets scheduled if any of the special props
            // changed.
            switch (tag) {
              case 'input':
                // Update the wrapper around inputs *after* updating props. This has to
                // happen after `updateDOMProperties`. Otherwise HTML5 input validations
                // raise warnings and prevent the new value from being assigned.
                updateWrapper(domElement, nextRawProps);
                break;
              case 'textarea':
                updateWrapper$1(domElement, nextRawProps);
                break;
              case 'select':
                // <select> value update needs to occur after <option> children
                // reconciliation
                postUpdateWrapper(domElement, nextRawProps);
                break;
            }
          }

          function getPossibleStandardName(propName) {
            {
              var lowerCasedName = propName.toLowerCase();
              if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
                return null;
              }
              return possibleStandardNames[lowerCasedName] || null;
            }
            return null;
          }

          function diffHydratedProperties(
            domElement,
            tag,
            rawProps,
            parentNamespace,
            rootContainerElement
          ) {
            var isCustomComponentTag = void 0;
            var extraAttributeNames = void 0;

            {
              suppressHydrationWarning =
                rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
              isCustomComponentTag = isCustomComponent(tag, rawProps);
              validatePropertiesInDevelopment(tag, rawProps);
              if (
                isCustomComponentTag &&
                !didWarnShadyDOM &&
                domElement.shadyRoot
              ) {
                warning$1(
                  false,
                  '%s is using shady DOM. Using shady DOM with React can ' +
                    'cause things to break subtly.',
                  getCurrentFiberOwnerNameInDevOrNull() || 'A component'
                );
                didWarnShadyDOM = true;
              }
            }

            // TODO: Make sure that we check isMounted before firing any of these events.
            switch (tag) {
              case 'iframe':
              case 'object':
                trapBubbledEvent(TOP_LOAD, domElement);
                break;
              case 'video':
              case 'audio':
                // Create listener for each media event
                for (var i = 0; i < mediaEventTypes.length; i++) {
                  trapBubbledEvent(mediaEventTypes[i], domElement);
                }
                break;
              case 'source':
                trapBubbledEvent(TOP_ERROR, domElement);
                break;
              case 'img':
              case 'image':
              case 'link':
                trapBubbledEvent(TOP_ERROR, domElement);
                trapBubbledEvent(TOP_LOAD, domElement);
                break;
              case 'form':
                trapBubbledEvent(TOP_RESET, domElement);
                trapBubbledEvent(TOP_SUBMIT, domElement);
                break;
              case 'details':
                trapBubbledEvent(TOP_TOGGLE, domElement);
                break;
              case 'input':
                initWrapperState(domElement, rawProps);
                trapBubbledEvent(TOP_INVALID, domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, 'onChange');
                break;
              case 'option':
                validateProps(domElement, rawProps);
                break;
              case 'select':
                initWrapperState$1(domElement, rawProps);
                trapBubbledEvent(TOP_INVALID, domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, 'onChange');
                break;
              case 'textarea':
                initWrapperState$2(domElement, rawProps);
                trapBubbledEvent(TOP_INVALID, domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, 'onChange');
                break;
            }

            assertValidProps(tag, rawProps);

            {
              extraAttributeNames = new Set();
              var attributes = domElement.attributes;
              for (var _i = 0; _i < attributes.length; _i++) {
                var name = attributes[_i].name.toLowerCase();
                switch (name) {
                  // Built-in SSR attribute is whitelisted
                  case 'data-reactroot':
                    break;
                  // Controlled attributes are not validated
                  // TODO: Only ignore them on controlled tags.
                  case 'value':
                    break;
                  case 'checked':
                    break;
                  case 'selected':
                    break;
                  default:
                    // Intentionally use the original name.
                    // See discussion in https://github.com/facebook/react/pull/10676.
                    extraAttributeNames.add(attributes[_i].name);
                }
              }
            }

            var updatePayload = null;
            for (var propKey in rawProps) {
              if (!rawProps.hasOwnProperty(propKey)) {
                continue;
              }
              var nextProp = rawProps[propKey];
              if (propKey === CHILDREN) {
                // For text content children we compare against textContent. This
                // might match additional HTML that is hidden when we read it using
                // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
                // satisfies our requirement. Our requirement is not to produce perfect
                // HTML and attributes. Ideally we should preserve structure but it's
                // ok not to if the visible content is still enough to indicate what
                // even listeners these nodes might be wired up to.
                // TODO: Warn if there is more than a single textNode as a child.
                // TODO: Should we use domElement.firstChild.nodeValue to compare?
                if (typeof nextProp === 'string') {
                  if (domElement.textContent !== nextProp) {
                    if (true && !suppressHydrationWarning) {
                      warnForTextDifference(domElement.textContent, nextProp);
                    }
                    updatePayload = [CHILDREN, nextProp];
                  }
                } else if (typeof nextProp === 'number') {
                  if (domElement.textContent !== '' + nextProp) {
                    if (true && !suppressHydrationWarning) {
                      warnForTextDifference(domElement.textContent, nextProp);
                    }
                    updatePayload = [CHILDREN, '' + nextProp];
                  }
                }
              } else if (registrationNameModules.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                  if (true && typeof nextProp !== 'function') {
                    warnForInvalidEventListener(propKey, nextProp);
                  }
                  ensureListeningTo(rootContainerElement, propKey);
                }
              } else if (
                true &&
                // Convince Flow we've calculated it (it's DEV-only in this method.)
                typeof isCustomComponentTag === 'boolean'
              ) {
                // Validate that the properties correspond to their expected values.
                var serverValue = void 0;
                var propertyInfo = getPropertyInfo(propKey);
                if (suppressHydrationWarning) {
                  // Don't bother comparing. We're ignoring all these warnings.
                } else if (
                  propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||
                  propKey === SUPPRESS_HYDRATION_WARNING$1 ||
                  // Controlled attributes are not validated
                  // TODO: Only ignore them on controlled tags.
                  propKey === 'value' ||
                  propKey === 'checked' ||
                  propKey === 'selected'
                ) {
                  // Noop
                } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                  var serverHTML = domElement.innerHTML;
                  var nextHtml = nextProp ? nextProp[HTML] : undefined;
                  var expectedHTML = normalizeHTML(
                    domElement,
                    nextHtml != null ? nextHtml : ''
                  );
                  if (expectedHTML !== serverHTML) {
                    warnForPropDifference(propKey, serverHTML, expectedHTML);
                  }
                } else if (propKey === STYLE) {
                  // $FlowFixMe - Should be inferred as not undefined.
                  extraAttributeNames.delete(propKey);

                  if (canDiffStyleForHydrationWarning) {
                    var expectedStyle = createDangerousStringForStyles(
                      nextProp
                    );
                    serverValue = domElement.getAttribute('style');
                    if (expectedStyle !== serverValue) {
                      warnForPropDifference(
                        propKey,
                        serverValue,
                        expectedStyle
                      );
                    }
                  }
                } else if (isCustomComponentTag) {
                  // $FlowFixMe - Should be inferred as not undefined.
                  extraAttributeNames.delete(propKey.toLowerCase());
                  serverValue = getValueForAttribute(
                    domElement,
                    propKey,
                    nextProp
                  );

                  if (nextProp !== serverValue) {
                    warnForPropDifference(propKey, serverValue, nextProp);
                  }
                } else if (
                  !shouldIgnoreAttribute(
                    propKey,
                    propertyInfo,
                    isCustomComponentTag
                  ) &&
                  !shouldRemoveAttribute(
                    propKey,
                    nextProp,
                    propertyInfo,
                    isCustomComponentTag
                  )
                ) {
                  var isMismatchDueToBadCasing = false;
                  if (propertyInfo !== null) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propertyInfo.attributeName);
                    serverValue = getValueForProperty(
                      domElement,
                      propKey,
                      nextProp,
                      propertyInfo
                    );
                  } else {
                    var ownNamespace = parentNamespace;
                    if (ownNamespace === HTML_NAMESPACE) {
                      ownNamespace = getIntrinsicNamespace(tag);
                    }
                    if (ownNamespace === HTML_NAMESPACE) {
                      // $FlowFixMe - Should be inferred as not undefined.
                      extraAttributeNames.delete(propKey.toLowerCase());
                    } else {
                      var standardName = getPossibleStandardName(propKey);
                      if (standardName !== null && standardName !== propKey) {
                        // If an SVG prop is supplied with bad casing, it will
                        // be successfully parsed from HTML, but will produce a mismatch
                        // (and would be incorrectly rendered on the client).
                        // However, we already warn about bad casing elsewhere.
                        // So we'll skip the misleading extra mismatch warning in this case.
                        isMismatchDueToBadCasing = true;
                        // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(standardName);
                      }
                      // $FlowFixMe - Should be inferred as not undefined.
                      extraAttributeNames.delete(propKey);
                    }
                    serverValue = getValueForAttribute(
                      domElement,
                      propKey,
                      nextProp
                    );
                  }

                  if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
                    warnForPropDifference(propKey, serverValue, nextProp);
                  }
                }
              }
            }

            {
              // $FlowFixMe - Should be inferred as not undefined.
              if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
                // $FlowFixMe - Should be inferred as not undefined.
                warnForExtraAttributes(extraAttributeNames);
              }
            }

            switch (tag) {
              case 'input':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, true);
                break;
              case 'textarea':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement, rawProps);
                break;
              case 'select':
              case 'option':
                // For input and textarea we current always set the value property at
                // post mount to force it to diverge from attributes. However, for
                // option and select we don't quite do the same thing and select
                // is not resilient to the DOM state changing so we don't do that here.
                // TODO: Consider not doing this for input and textarea.
                break;
              default:
                if (typeof rawProps.onClick === 'function') {
                  // TODO: This cast may not be sound for SVG, MathML or custom elements.
                  trapClickOnNonInteractiveElement(domElement);
                }
                break;
            }

            return updatePayload;
          }

          function diffHydratedText(textNode, text) {
            var isDifferent = textNode.nodeValue !== text;
            return isDifferent;
          }

          function warnForUnmatchedText(textNode, text) {
            {
              warnForTextDifference(textNode.nodeValue, text);
            }
          }

          function warnForDeletedHydratableElement(parentNode, child) {
            {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              warningWithoutStack$1(
                false,
                'Did not expect server HTML to contain a <%s> in <%s>.',
                child.nodeName.toLowerCase(),
                parentNode.nodeName.toLowerCase()
              );
            }
          }

          function warnForDeletedHydratableText(parentNode, child) {
            {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              warningWithoutStack$1(
                false,
                'Did not expect server HTML to contain the text node "%s" in <%s>.',
                child.nodeValue,
                parentNode.nodeName.toLowerCase()
              );
            }
          }

          function warnForInsertedHydratedElement(parentNode, tag, props) {
            {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              warningWithoutStack$1(
                false,
                'Expected server HTML to contain a matching <%s> in <%s>.',
                tag,
                parentNode.nodeName.toLowerCase()
              );
            }
          }

          function warnForInsertedHydratedText(parentNode, text) {
            {
              if (text === '') {
                // We expect to insert empty text nodes since they're not represented in
                // the HTML.
                // TODO: Remove this special case if we can just avoid inserting empty
                // text nodes.
                return;
              }
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              warningWithoutStack$1(
                false,
                'Expected server HTML to contain a matching text node for "%s" in <%s>.',
                text,
                parentNode.nodeName.toLowerCase()
              );
            }
          }

          function restoreControlledState$1(domElement, tag, props) {
            switch (tag) {
              case 'input':
                restoreControlledState(domElement, props);
                return;
              case 'textarea':
                restoreControlledState$3(domElement, props);
                return;
              case 'select':
                restoreControlledState$2(domElement, props);
                return;
            }
          }

          // TODO: direct imports like some-package/src/* are bad. Fix me.
          var validateDOMNesting = function() {};
          var updatedAncestorInfo = function() {};

          {
            // This validation code was written based on the HTML5 parsing spec:
            // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
            //
            // Note: this does not catch all invalid nesting, nor does it try to (as it's
            // not clear what practical benefit doing so provides); instead, we warn only
            // for cases where the parser will give a parse tree differing from what React
            // intended. For example, <b><div></div></b> is invalid but we don't warn
            // because it still parses correctly; we do warn for other cases like nested
            // <p> tags where the beginning of the second element implicitly closes the
            // first, causing a confusing mess.

            // https://html.spec.whatwg.org/multipage/syntax.html#special
            var specialTags = [
              'address',
              'applet',
              'area',
              'article',
              'aside',
              'base',
              'basefont',
              'bgsound',
              'blockquote',
              'body',
              'br',
              'button',
              'caption',
              'center',
              'col',
              'colgroup',
              'dd',
              'details',
              'dir',
              'div',
              'dl',
              'dt',
              'embed',
              'fieldset',
              'figcaption',
              'figure',
              'footer',
              'form',
              'frame',
              'frameset',
              'h1',
              'h2',
              'h3',
              'h4',
              'h5',
              'h6',
              'head',
              'header',
              'hgroup',
              'hr',
              'html',
              'iframe',
              'img',
              'input',
              'isindex',
              'li',
              'link',
              'listing',
              'main',
              'marquee',
              'menu',
              'menuitem',
              'meta',
              'nav',
              'noembed',
              'noframes',
              'noscript',
              'object',
              'ol',
              'p',
              'param',
              'plaintext',
              'pre',
              'script',
              'section',
              'select',
              'source',
              'style',
              'summary',
              'table',
              'tbody',
              'td',
              'template',
              'textarea',
              'tfoot',
              'th',
              'thead',
              'title',
              'tr',
              'track',
              'ul',
              'wbr',
              'xmp'
            ];

            // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
            var inScopeTags = [
              'applet',
              'caption',
              'html',
              'table',
              'td',
              'th',
              'marquee',
              'object',
              'template',

              // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
              // TODO: Distinguish by namespace here -- for <title>, including it here
              // errs on the side of fewer warnings
              'foreignObject',
              'desc',
              'title'
            ];

            // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
            var buttonScopeTags = inScopeTags.concat(['button']);

            // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
            var impliedEndTags = [
              'dd',
              'dt',
              'li',
              'option',
              'optgroup',
              'p',
              'rp',
              'rt'
            ];

            var emptyAncestorInfo = {
              current: null,

              formTag: null,
              aTagInScope: null,
              buttonTagInScope: null,
              nobrTagInScope: null,
              pTagInButtonScope: null,

              listItemTagAutoclosing: null,
              dlItemTagAutoclosing: null
            };

            updatedAncestorInfo = function(oldInfo, tag) {
              var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
              var info = { tag: tag };

              if (inScopeTags.indexOf(tag) !== -1) {
                ancestorInfo.aTagInScope = null;
                ancestorInfo.buttonTagInScope = null;
                ancestorInfo.nobrTagInScope = null;
              }
              if (buttonScopeTags.indexOf(tag) !== -1) {
                ancestorInfo.pTagInButtonScope = null;
              }

              // See rules for 'li', 'dd', 'dt' start tags in
              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
              if (
                specialTags.indexOf(tag) !== -1 &&
                tag !== 'address' &&
                tag !== 'div' &&
                tag !== 'p'
              ) {
                ancestorInfo.listItemTagAutoclosing = null;
                ancestorInfo.dlItemTagAutoclosing = null;
              }

              ancestorInfo.current = info;

              if (tag === 'form') {
                ancestorInfo.formTag = info;
              }
              if (tag === 'a') {
                ancestorInfo.aTagInScope = info;
              }
              if (tag === 'button') {
                ancestorInfo.buttonTagInScope = info;
              }
              if (tag === 'nobr') {
                ancestorInfo.nobrTagInScope = info;
              }
              if (tag === 'p') {
                ancestorInfo.pTagInButtonScope = info;
              }
              if (tag === 'li') {
                ancestorInfo.listItemTagAutoclosing = info;
              }
              if (tag === 'dd' || tag === 'dt') {
                ancestorInfo.dlItemTagAutoclosing = info;
              }

              return ancestorInfo;
            };

            /**
             * Returns whether
             */
            var isTagValidWithParent = function(tag, parentTag) {
              // First, let's check if we're in an unusual parsing mode...
              switch (parentTag) {
                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
                case 'select':
                  return (
                    tag === 'option' || tag === 'optgroup' || tag === '#text'
                  );
                case 'optgroup':
                  return tag === 'option' || tag === '#text';
                // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
                // but
                case 'option':
                  return tag === '#text';
                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
                // No special behavior since these rules fall back to "in body" mode for
                // all except special table nodes which cause bad parsing behavior anyway.

                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
                case 'tr':
                  return (
                    tag === 'th' ||
                    tag === 'td' ||
                    tag === 'style' ||
                    tag === 'script' ||
                    tag === 'template'
                  );
                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
                case 'tbody':
                case 'thead':
                case 'tfoot':
                  return (
                    tag === 'tr' ||
                    tag === 'style' ||
                    tag === 'script' ||
                    tag === 'template'
                  );
                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
                case 'colgroup':
                  return tag === 'col' || tag === 'template';
                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
                case 'table':
                  return (
                    tag === 'caption' ||
                    tag === 'colgroup' ||
                    tag === 'tbody' ||
                    tag === 'tfoot' ||
                    tag === 'thead' ||
                    tag === 'style' ||
                    tag === 'script' ||
                    tag === 'template'
                  );
                // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
                case 'head':
                  return (
                    tag === 'base' ||
                    tag === 'basefont' ||
                    tag === 'bgsound' ||
                    tag === 'link' ||
                    tag === 'meta' ||
                    tag === 'title' ||
                    tag === 'noscript' ||
                    tag === 'noframes' ||
                    tag === 'style' ||
                    tag === 'script' ||
                    tag === 'template'
                  );
                // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
                case 'html':
                  return tag === 'head' || tag === 'body';
                case '#document':
                  return tag === 'html';
              }

              // Probably in the "in body" parsing mode, so we outlaw only tag combos
              // where the parsing rules cause implicit opens or closes to be added.
              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
              switch (tag) {
                case 'h1':
                case 'h2':
                case 'h3':
                case 'h4':
                case 'h5':
                case 'h6':
                  return (
                    parentTag !== 'h1' &&
                    parentTag !== 'h2' &&
                    parentTag !== 'h3' &&
                    parentTag !== 'h4' &&
                    parentTag !== 'h5' &&
                    parentTag !== 'h6'
                  );

                case 'rp':
                case 'rt':
                  return impliedEndTags.indexOf(parentTag) === -1;

                case 'body':
                case 'caption':
                case 'col':
                case 'colgroup':
                case 'frame':
                case 'head':
                case 'html':
                case 'tbody':
                case 'td':
                case 'tfoot':
                case 'th':
                case 'thead':
                case 'tr':
                  // These tags are only valid with a few parents that have special child
                  // parsing rules -- if we're down here, then none of those matched and
                  // so we allow it only if we don't know what the parent is, as all other
                  // cases are invalid.
                  return parentTag == null;
              }

              return true;
            };

            /**
             * Returns whether
             */
            var findInvalidAncestorForTag = function(tag, ancestorInfo) {
              switch (tag) {
                case 'address':
                case 'article':
                case 'aside':
                case 'blockquote':
                case 'center':
                case 'details':
                case 'dialog':
                case 'dir':
                case 'div':
                case 'dl':
                case 'fieldset':
                case 'figcaption':
                case 'figure':
                case 'footer':
                case 'header':
                case 'hgroup':
                case 'main':
                case 'menu':
                case 'nav':
                case 'ol':
                case 'p':
                case 'section':
                case 'summary':
                case 'ul':
                case 'pre':
                case 'listing':
                case 'table':
                case 'hr':
                case 'xmp':
                case 'h1':
                case 'h2':
                case 'h3':
                case 'h4':
                case 'h5':
                case 'h6':
                  return ancestorInfo.pTagInButtonScope;

                case 'form':
                  return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

                case 'li':
                  return ancestorInfo.listItemTagAutoclosing;

                case 'dd':
                case 'dt':
                  return ancestorInfo.dlItemTagAutoclosing;

                case 'button':
                  return ancestorInfo.buttonTagInScope;

                case 'a':
                  // Spec says something about storing a list of markers, but it sounds
                  // equivalent to this check.
                  return ancestorInfo.aTagInScope;

                case 'nobr':
                  return ancestorInfo.nobrTagInScope;
              }

              return null;
            };

            var didWarn = {};

            validateDOMNesting = function(childTag, childText, ancestorInfo) {
              ancestorInfo = ancestorInfo || emptyAncestorInfo;
              var parentInfo = ancestorInfo.current;
              var parentTag = parentInfo && parentInfo.tag;

              if (childText != null) {
                !(childTag == null)
                  ? warningWithoutStack$1(
                      false,
                      'validateDOMNesting: when childText is passed, childTag should be null'
                    )
                  : void 0;
                childTag = '#text';
              }

              var invalidParent = isTagValidWithParent(childTag, parentTag)
                ? null
                : parentInfo;
              var invalidAncestor = invalidParent
                ? null
                : findInvalidAncestorForTag(childTag, ancestorInfo);
              var invalidParentOrAncestor = invalidParent || invalidAncestor;
              if (!invalidParentOrAncestor) {
                return;
              }

              var ancestorTag = invalidParentOrAncestor.tag;
              var addendum = getCurrentFiberStackInDev();

              var warnKey =
                !!invalidParent +
                '|' +
                childTag +
                '|' +
                ancestorTag +
                '|' +
                addendum;
              if (didWarn[warnKey]) {
                return;
              }
              didWarn[warnKey] = true;

              var tagDisplayName = childTag;
              var whitespaceInfo = '';
              if (childTag === '#text') {
                if (/\S/.test(childText)) {
                  tagDisplayName = 'Text nodes';
                } else {
                  tagDisplayName = 'Whitespace text nodes';
                  whitespaceInfo =
                    " Make sure you don't have any extra whitespace between tags on " +
                    'each line of your source code.';
                }
              } else {
                tagDisplayName = '<' + childTag + '>';
              }

              if (invalidParent) {
                var info = '';
                if (ancestorTag === 'table' && childTag === 'tr') {
                  info +=
                    ' Add a <tbody> to your code to match the DOM tree generated by ' +
                    'the browser.';
                }
                warningWithoutStack$1(
                  false,
                  'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s',
                  tagDisplayName,
                  ancestorTag,
                  whitespaceInfo,
                  info,
                  addendum
                );
              } else {
                warningWithoutStack$1(
                  false,
                  'validateDOMNesting(...): %s cannot appear as a descendant of ' +
                    '<%s>.%s',
                  tagDisplayName,
                  ancestorTag,
                  addendum
                );
              }
            };
          }

          // Renderers that don't support persistence
          // can re-export everything from this module.

          function shim() {
            invariant(
              false,
              'The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.'
            );
          }

          // Persistence (when unsupported)
          var supportsPersistence = false;
          var cloneInstance = shim;
          var createContainerChildSet = shim;
          var appendChildToContainerChildSet = shim;
          var finalizeContainerChildren = shim;
          var replaceContainerChildren = shim;

          var SUPPRESS_HYDRATION_WARNING = void 0;
          {
            SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
          }

          var eventsEnabled = null;
          var selectionInformation = null;

          function shouldAutoFocusHostComponent(type, props) {
            switch (type) {
              case 'button':
              case 'input':
              case 'select':
              case 'textarea':
                return !!props.autoFocus;
            }
            return false;
          }

          function getRootHostContext(rootContainerInstance) {
            var type = void 0;
            var namespace = void 0;
            var nodeType = rootContainerInstance.nodeType;
            switch (nodeType) {
              case DOCUMENT_NODE:
              case DOCUMENT_FRAGMENT_NODE: {
                type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
                var root = rootContainerInstance.documentElement;
                namespace = root
                  ? root.namespaceURI
                  : getChildNamespace(null, '');
                break;
              }
              default: {
                var container =
                  nodeType === COMMENT_NODE
                    ? rootContainerInstance.parentNode
                    : rootContainerInstance;
                var ownNamespace = container.namespaceURI || null;
                type = container.tagName;
                namespace = getChildNamespace(ownNamespace, type);
                break;
              }
            }
            {
              var validatedTag = type.toLowerCase();
              var _ancestorInfo = updatedAncestorInfo(null, validatedTag);
              return { namespace: namespace, ancestorInfo: _ancestorInfo };
            }
            return namespace;
          }

          function getChildHostContext(
            parentHostContext,
            type,
            rootContainerInstance
          ) {
            {
              var parentHostContextDev = parentHostContext;
              var _namespace = getChildNamespace(
                parentHostContextDev.namespace,
                type
              );
              var _ancestorInfo2 = updatedAncestorInfo(
                parentHostContextDev.ancestorInfo,
                type
              );
              return { namespace: _namespace, ancestorInfo: _ancestorInfo2 };
            }
            var parentNamespace = parentHostContext;
            return getChildNamespace(parentNamespace, type);
          }

          function getPublicInstance(instance) {
            return instance;
          }

          function prepareForCommit(containerInfo) {
            eventsEnabled = isEnabled();
            selectionInformation = getSelectionInformation();
            setEnabled(false);
          }

          function resetAfterCommit(containerInfo) {
            restoreSelection(selectionInformation);
            selectionInformation = null;
            setEnabled(eventsEnabled);
            eventsEnabled = null;
          }

          function createInstance(
            type,
            props,
            rootContainerInstance,
            hostContext,
            internalInstanceHandle
          ) {
            var parentNamespace = void 0;
            {
              // TODO: take namespace into account when validating.
              var hostContextDev = hostContext;
              validateDOMNesting(type, null, hostContextDev.ancestorInfo);
              if (
                typeof props.children === 'string' ||
                typeof props.children === 'number'
              ) {
                var string = '' + props.children;
                var ownAncestorInfo = updatedAncestorInfo(
                  hostContextDev.ancestorInfo,
                  type
                );
                validateDOMNesting(null, string, ownAncestorInfo);
              }
              parentNamespace = hostContextDev.namespace;
            }
            var domElement = createElement(
              type,
              props,
              rootContainerInstance,
              parentNamespace
            );
            precacheFiberNode(internalInstanceHandle, domElement);
            updateFiberProps(domElement, props);
            return domElement;
          }

          function appendInitialChild(parentInstance, child) {
            parentInstance.appendChild(child);
          }

          function finalizeInitialChildren(
            domElement,
            type,
            props,
            rootContainerInstance,
            hostContext
          ) {
            setInitialProperties(
              domElement,
              type,
              props,
              rootContainerInstance
            );
            return shouldAutoFocusHostComponent(type, props);
          }

          function prepareUpdate(
            domElement,
            type,
            oldProps,
            newProps,
            rootContainerInstance,
            hostContext
          ) {
            {
              var hostContextDev = hostContext;
              if (
                typeof newProps.children !== typeof oldProps.children &&
                (typeof newProps.children === 'string' ||
                  typeof newProps.children === 'number')
              ) {
                var string = '' + newProps.children;
                var ownAncestorInfo = updatedAncestorInfo(
                  hostContextDev.ancestorInfo,
                  type
                );
                validateDOMNesting(null, string, ownAncestorInfo);
              }
            }
            return diffProperties(
              domElement,
              type,
              oldProps,
              newProps,
              rootContainerInstance
            );
          }

          function shouldSetTextContent(type, props) {
            return (
              type === 'textarea' ||
              type === 'option' ||
              type === 'noscript' ||
              typeof props.children === 'string' ||
              typeof props.children === 'number' ||
              (typeof props.dangerouslySetInnerHTML === 'object' &&
                props.dangerouslySetInnerHTML !== null &&
                props.dangerouslySetInnerHTML.__html != null)
            );
          }

          function shouldDeprioritizeSubtree(type, props) {
            return !!props.hidden;
          }

          function createTextInstance(
            text,
            rootContainerInstance,
            hostContext,
            internalInstanceHandle
          ) {
            {
              var hostContextDev = hostContext;
              validateDOMNesting(null, text, hostContextDev.ancestorInfo);
            }
            var textNode = createTextNode(text, rootContainerInstance);
            precacheFiberNode(internalInstanceHandle, textNode);
            return textNode;
          }

          var isPrimaryRenderer = true;
          var scheduleTimeout = setTimeout;
          var cancelTimeout = clearTimeout;
          var noTimeout = -1;

          // -------------------
          //     Mutation
          // -------------------

          var supportsMutation = true;

          function commitMount(
            domElement,
            type,
            newProps,
            internalInstanceHandle
          ) {
            // Despite the naming that might imply otherwise, this method only
            // fires if there is an `Update` effect scheduled during mounting.
            // This happens if `finalizeInitialChildren` returns `true` (which it
            // does to implement the `autoFocus` attribute on the client). But
            // there are also other cases when this might happen (such as patching
            // up text content during hydration mismatch). So we'll check this again.
            if (shouldAutoFocusHostComponent(type, newProps)) {
              domElement.focus();
            }
          }

          function commitUpdate(
            domElement,
            updatePayload,
            type,
            oldProps,
            newProps,
            internalInstanceHandle
          ) {
            // Update the props handle so that we know which props are the ones with
            // with current event handlers.
            updateFiberProps(domElement, newProps);
            // Apply the diff to the DOM node.
            updateProperties(
              domElement,
              updatePayload,
              type,
              oldProps,
              newProps
            );
          }

          function resetTextContent(domElement) {
            setTextContent(domElement, '');
          }

          function commitTextUpdate(textInstance, oldText, newText) {
            textInstance.nodeValue = newText;
          }

          function appendChild(parentInstance, child) {
            parentInstance.appendChild(child);
          }

          function appendChildToContainer(container, child) {
            var parentNode = void 0;
            if (container.nodeType === COMMENT_NODE) {
              parentNode = container.parentNode;
              parentNode.insertBefore(child, container);
            } else {
              parentNode = container;
              parentNode.appendChild(child);
            }
            // This container might be used for a portal.
            // If something inside a portal is clicked, that click should bubble
            // through the React tree. However, on Mobile Safari the click would
            // never bubble through the *DOM* tree unless an ancestor with onclick
            // event exists. So we wouldn't see it and dispatch it.
            // This is why we ensure that containers have inline onclick defined.
            // https://github.com/facebook/react/issues/11918
            if (parentNode.onclick === null) {
              // TODO: This cast may not be sound for SVG, MathML or custom elements.
              trapClickOnNonInteractiveElement(parentNode);
            }
          }

          function insertBefore(parentInstance, child, beforeChild) {
            parentInstance.insertBefore(child, beforeChild);
          }

          function insertInContainerBefore(container, child, beforeChild) {
            if (container.nodeType === COMMENT_NODE) {
              container.parentNode.insertBefore(child, beforeChild);
            } else {
              container.insertBefore(child, beforeChild);
            }
          }

          function removeChild(parentInstance, child) {
            parentInstance.removeChild(child);
          }

          function removeChildFromContainer(container, child) {
            if (container.nodeType === COMMENT_NODE) {
              container.parentNode.removeChild(child);
            } else {
              container.removeChild(child);
            }
          }

          // -------------------
          //     Hydration
          // -------------------

          var supportsHydration = true;

          function canHydrateInstance(instance, type, props) {
            if (
              instance.nodeType !== ELEMENT_NODE ||
              type.toLowerCase() !== instance.nodeName.toLowerCase()
            ) {
              return null;
            }
            // This has now been refined to an element node.
            return instance;
          }

          function canHydrateTextInstance(instance, text) {
            if (text === '' || instance.nodeType !== TEXT_NODE) {
              // Empty strings are not parsed by HTML so there won't be a correct match here.
              return null;
            }
            // This has now been refined to a text node.
            return instance;
          }

          function getNextHydratableSibling(instance) {
            var node = instance.nextSibling;
            // Skip non-hydratable nodes.
            while (
              node &&
              node.nodeType !== ELEMENT_NODE &&
              node.nodeType !== TEXT_NODE
            ) {
              node = node.nextSibling;
            }
            return node;
          }

          function getFirstHydratableChild(parentInstance) {
            var next = parentInstance.firstChild;
            // Skip non-hydratable nodes.
            while (
              next &&
              next.nodeType !== ELEMENT_NODE &&
              next.nodeType !== TEXT_NODE
            ) {
              next = next.nextSibling;
            }
            return next;
          }

          function hydrateInstance(
            instance,
            type,
            props,
            rootContainerInstance,
            hostContext,
            internalInstanceHandle
          ) {
            precacheFiberNode(internalInstanceHandle, instance);
            // TODO: Possibly defer this until the commit phase where all the events
            // get attached.
            updateFiberProps(instance, props);
            var parentNamespace = void 0;
            {
              var hostContextDev = hostContext;
              parentNamespace = hostContextDev.namespace;
            }
            return diffHydratedProperties(
              instance,
              type,
              props,
              parentNamespace,
              rootContainerInstance
            );
          }

          function hydrateTextInstance(
            textInstance,
            text,
            internalInstanceHandle
          ) {
            precacheFiberNode(internalInstanceHandle, textInstance);
            return diffHydratedText(textInstance, text);
          }

          function didNotMatchHydratedContainerTextInstance(
            parentContainer,
            textInstance,
            text
          ) {
            {
              warnForUnmatchedText(textInstance, text);
            }
          }

          function didNotMatchHydratedTextInstance(
            parentType,
            parentProps,
            parentInstance,
            textInstance,
            text
          ) {
            if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
              warnForUnmatchedText(textInstance, text);
            }
          }

          function didNotHydrateContainerInstance(parentContainer, instance) {
            {
              if (instance.nodeType === ELEMENT_NODE) {
                warnForDeletedHydratableElement(parentContainer, instance);
              } else {
                warnForDeletedHydratableText(parentContainer, instance);
              }
            }
          }

          function didNotHydrateInstance(
            parentType,
            parentProps,
            parentInstance,
            instance
          ) {
            if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
              if (instance.nodeType === ELEMENT_NODE) {
                warnForDeletedHydratableElement(parentInstance, instance);
              } else {
                warnForDeletedHydratableText(parentInstance, instance);
              }
            }
          }

          function didNotFindHydratableContainerInstance(
            parentContainer,
            type,
            props
          ) {
            {
              warnForInsertedHydratedElement(parentContainer, type, props);
            }
          }

          function didNotFindHydratableContainerTextInstance(
            parentContainer,
            text
          ) {
            {
              warnForInsertedHydratedText(parentContainer, text);
            }
          }

          function didNotFindHydratableInstance(
            parentType,
            parentProps,
            parentInstance,
            type,
            props
          ) {
            if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
              warnForInsertedHydratedElement(parentInstance, type, props);
            }
          }

          function didNotFindHydratableTextInstance(
            parentType,
            parentProps,
            parentInstance,
            text
          ) {
            if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
              warnForInsertedHydratedText(parentInstance, text);
            }
          }

          // Prefix measurements so that it's possible to filter them.
          // Longer prefixes are hard to read in DevTools.
          var reactEmoji = '\u269B';
          var warningEmoji = '\u26D4';
          var supportsUserTiming =
            typeof performance !== 'undefined' &&
            typeof performance.mark === 'function' &&
            typeof performance.clearMarks === 'function' &&
            typeof performance.measure === 'function' &&
            typeof performance.clearMeasures === 'function';

          // Keep track of current fiber so that we know the path to unwind on pause.
          // TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?
          var currentFiber = null;
          // If we're in the middle of user code, which fiber and method is it?
          // Reusing `currentFiber` would be confusing for this because user code fiber
          // can change during commit phase too, but we don't need to unwind it (since
          // lifecycles in the commit phase don't resemble a tree).
          var currentPhase = null;
          var currentPhaseFiber = null;
          // Did lifecycle hook schedule an update? This is often a performance problem,
          // so we will keep track of it, and include it in the report.
          // Track commits caused by cascading updates.
          var isCommitting = false;
          var hasScheduledUpdateInCurrentCommit = false;
          var hasScheduledUpdateInCurrentPhase = false;
          var commitCountInCurrentWorkLoop = 0;
          var effectCountInCurrentCommit = 0;
          var isWaitingForCallback = false;
          // During commits, we only show a measurement once per method name
          // to avoid stretch the commit phase with measurement overhead.
          var labelsInCurrentCommit = new Set();

          var formatMarkName = function(markName) {
            return reactEmoji + ' ' + markName;
          };

          var formatLabel = function(label, warning) {
            var prefix = warning ? warningEmoji + ' ' : reactEmoji + ' ';
            var suffix = warning ? ' Warning: ' + warning : '';
            return '' + prefix + label + suffix;
          };

          var beginMark = function(markName) {
            performance.mark(formatMarkName(markName));
          };

          var clearMark = function(markName) {
            performance.clearMarks(formatMarkName(markName));
          };

          var endMark = function(label, markName, warning) {
            var formattedMarkName = formatMarkName(markName);
            var formattedLabel = formatLabel(label, warning);
            try {
              performance.measure(formattedLabel, formattedMarkName);
            } catch (err) {}
            // If previous mark was missing for some reason, this will throw.
            // This could only happen if React crashed in an unexpected place earlier.
            // Don't pile on with more errors.

            // Clear marks immediately to avoid growing buffer.
            performance.clearMarks(formattedMarkName);
            performance.clearMeasures(formattedLabel);
          };

          var getFiberMarkName = function(label, debugID) {
            return label + ' (#' + debugID + ')';
          };

          var getFiberLabel = function(componentName, isMounted, phase) {
            if (phase === null) {
              // These are composite component total time measurements.
              return (
                componentName + ' [' + (isMounted ? 'update' : 'mount') + ']'
              );
            } else {
              // Composite component methods.
              return componentName + '.' + phase;
            }
          };

          var beginFiberMark = function(fiber, phase) {
            var componentName = getComponentName(fiber.type) || 'Unknown';
            var debugID = fiber._debugID;
            var isMounted = fiber.alternate !== null;
            var label = getFiberLabel(componentName, isMounted, phase);

            if (isCommitting && labelsInCurrentCommit.has(label)) {
              // During the commit phase, we don't show duplicate labels because
              // there is a fixed overhead for every measurement, and we don't
              // want to stretch the commit phase beyond necessary.
              return false;
            }
            labelsInCurrentCommit.add(label);

            var markName = getFiberMarkName(label, debugID);
            beginMark(markName);
            return true;
          };

          var clearFiberMark = function(fiber, phase) {
            var componentName = getComponentName(fiber.type) || 'Unknown';
            var debugID = fiber._debugID;
            var isMounted = fiber.alternate !== null;
            var label = getFiberLabel(componentName, isMounted, phase);
            var markName = getFiberMarkName(label, debugID);
            clearMark(markName);
          };

          var endFiberMark = function(fiber, phase, warning) {
            var componentName = getComponentName(fiber.type) || 'Unknown';
            var debugID = fiber._debugID;
            var isMounted = fiber.alternate !== null;
            var label = getFiberLabel(componentName, isMounted, phase);
            var markName = getFiberMarkName(label, debugID);
            endMark(label, markName, warning);
          };

          var shouldIgnoreFiber = function(fiber) {
            // Host components should be skipped in the timeline.
            // We could check typeof fiber.type, but does this work with RN?
            switch (fiber.tag) {
              case HostRoot:
              case HostComponent:
              case HostText:
              case HostPortal:
              case Fragment:
              case ContextProvider:
              case ContextConsumer:
              case Mode:
                return true;
              default:
                return false;
            }
          };

          var clearPendingPhaseMeasurement = function() {
            if (currentPhase !== null && currentPhaseFiber !== null) {
              clearFiberMark(currentPhaseFiber, currentPhase);
            }
            currentPhaseFiber = null;
            currentPhase = null;
            hasScheduledUpdateInCurrentPhase = false;
          };

          var pauseTimers = function() {
            // Stops all currently active measurements so that they can be resumed
            // if we continue in a later deferred loop from the same unit of work.
            var fiber = currentFiber;
            while (fiber) {
              if (fiber._debugIsCurrentlyTiming) {
                endFiberMark(fiber, null, null);
              }
              fiber = fiber.return;
            }
          };

          var resumeTimersRecursively = function(fiber) {
            if (fiber.return !== null) {
              resumeTimersRecursively(fiber.return);
            }
            if (fiber._debugIsCurrentlyTiming) {
              beginFiberMark(fiber, null);
            }
          };

          var resumeTimers = function() {
            // Resumes all measurements that were active during the last deferred loop.
            if (currentFiber !== null) {
              resumeTimersRecursively(currentFiber);
            }
          };

          function recordEffect() {
            if (enableUserTimingAPI) {
              effectCountInCurrentCommit++;
            }
          }

          function recordScheduleUpdate() {
            if (enableUserTimingAPI) {
              if (isCommitting) {
                hasScheduledUpdateInCurrentCommit = true;
              }
              if (
                currentPhase !== null &&
                currentPhase !== 'componentWillMount' &&
                currentPhase !== 'componentWillReceiveProps'
              ) {
                hasScheduledUpdateInCurrentPhase = true;
              }
            }
          }

          function startRequestCallbackTimer() {
            if (enableUserTimingAPI) {
              if (supportsUserTiming && !isWaitingForCallback) {
                isWaitingForCallback = true;
                beginMark('(Waiting for async callback...)');
              }
            }
          }

          function stopRequestCallbackTimer(didExpire, expirationTime) {
            if (enableUserTimingAPI) {
              if (supportsUserTiming) {
                isWaitingForCallback = false;
                var warning = didExpire
                  ? 'React was blocked by main thread'
                  : null;
                endMark(
                  '(Waiting for async callback... will force flush in ' +
                    expirationTime +
                    ' ms)',
                  '(Waiting for async callback...)',
                  warning
                );
              }
            }
          }

          function startWorkTimer(fiber) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                return;
              }
              // If we pause, this is the fiber to unwind from.
              currentFiber = fiber;
              if (!beginFiberMark(fiber, null)) {
                return;
              }
              fiber._debugIsCurrentlyTiming = true;
            }
          }

          function cancelWorkTimer(fiber) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                return;
              }
              // Remember we shouldn't complete measurement for this fiber.
              // Otherwise flamechart will be deep even for small updates.
              fiber._debugIsCurrentlyTiming = false;
              clearFiberMark(fiber, null);
            }
          }

          function stopWorkTimer(fiber) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                return;
              }
              // If we pause, its parent is the fiber to unwind from.
              currentFiber = fiber.return;
              if (!fiber._debugIsCurrentlyTiming) {
                return;
              }
              fiber._debugIsCurrentlyTiming = false;
              endFiberMark(fiber, null, null);
            }
          }

          function stopFailedWorkTimer(fiber) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                return;
              }
              // If we pause, its parent is the fiber to unwind from.
              currentFiber = fiber.return;
              if (!fiber._debugIsCurrentlyTiming) {
                return;
              }
              fiber._debugIsCurrentlyTiming = false;
              var warning = 'An error was thrown inside this error boundary';
              endFiberMark(fiber, null, warning);
            }
          }

          function startPhaseTimer(fiber, phase) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              clearPendingPhaseMeasurement();
              if (!beginFiberMark(fiber, phase)) {
                return;
              }
              currentPhaseFiber = fiber;
              currentPhase = phase;
            }
          }

          function stopPhaseTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              if (currentPhase !== null && currentPhaseFiber !== null) {
                var warning = hasScheduledUpdateInCurrentPhase
                  ? 'Scheduled a cascading update'
                  : null;
                endFiberMark(currentPhaseFiber, currentPhase, warning);
              }
              currentPhase = null;
              currentPhaseFiber = null;
            }
          }

          function startWorkLoopTimer(nextUnitOfWork) {
            if (enableUserTimingAPI) {
              currentFiber = nextUnitOfWork;
              if (!supportsUserTiming) {
                return;
              }
              commitCountInCurrentWorkLoop = 0;
              // This is top level call.
              // Any other measurements are performed within.
              beginMark('(React Tree Reconciliation)');
              // Resume any measurements that were in progress during the last loop.
              resumeTimers();
            }
          }

          function stopWorkLoopTimer(interruptedBy, didCompleteRoot) {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              var warning = null;
              if (interruptedBy !== null) {
                if (interruptedBy.tag === HostRoot) {
                  warning =
                    'A top-level update interrupted the previous render';
                } else {
                  var componentName =
                    getComponentName(interruptedBy.type) || 'Unknown';
                  warning =
                    'An update to ' +
                    componentName +
                    ' interrupted the previous render';
                }
              } else if (commitCountInCurrentWorkLoop > 1) {
                warning = 'There were cascading updates';
              }
              commitCountInCurrentWorkLoop = 0;
              var label = didCompleteRoot
                ? '(React Tree Reconciliation: Completed Root)'
                : '(React Tree Reconciliation: Yielded)';
              // Pause any measurements until the next loop.
              pauseTimers();
              endMark(label, '(React Tree Reconciliation)', warning);
            }
          }

          function startCommitTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              isCommitting = true;
              hasScheduledUpdateInCurrentCommit = false;
              labelsInCurrentCommit.clear();
              beginMark('(Committing Changes)');
            }
          }

          function stopCommitTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }

              var warning = null;
              if (hasScheduledUpdateInCurrentCommit) {
                warning = 'Lifecycle hook scheduled a cascading update';
              } else if (commitCountInCurrentWorkLoop > 0) {
                warning = 'Caused by a cascading update in earlier commit';
              }
              hasScheduledUpdateInCurrentCommit = false;
              commitCountInCurrentWorkLoop++;
              isCommitting = false;
              labelsInCurrentCommit.clear();

              endMark('(Committing Changes)', '(Committing Changes)', warning);
            }
          }

          function startCommitSnapshotEffectsTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              effectCountInCurrentCommit = 0;
              beginMark('(Committing Snapshot Effects)');
            }
          }

          function stopCommitSnapshotEffectsTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              var count = effectCountInCurrentCommit;
              effectCountInCurrentCommit = 0;
              endMark(
                '(Committing Snapshot Effects: ' + count + ' Total)',
                '(Committing Snapshot Effects)',
                null
              );
            }
          }

          function startCommitHostEffectsTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              effectCountInCurrentCommit = 0;
              beginMark('(Committing Host Effects)');
            }
          }

          function stopCommitHostEffectsTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              var count = effectCountInCurrentCommit;
              effectCountInCurrentCommit = 0;
              endMark(
                '(Committing Host Effects: ' + count + ' Total)',
                '(Committing Host Effects)',
                null
              );
            }
          }

          function startCommitLifeCyclesTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              effectCountInCurrentCommit = 0;
              beginMark('(Calling Lifecycle Methods)');
            }
          }

          function stopCommitLifeCyclesTimer() {
            if (enableUserTimingAPI) {
              if (!supportsUserTiming) {
                return;
              }
              var count = effectCountInCurrentCommit;
              effectCountInCurrentCommit = 0;
              endMark(
                '(Calling Lifecycle Methods: ' + count + ' Total)',
                '(Calling Lifecycle Methods)',
                null
              );
            }
          }

          var valueStack = [];

          var fiberStack = void 0;

          {
            fiberStack = [];
          }

          var index = -1;

          function createCursor(defaultValue) {
            return {
              current: defaultValue
            };
          }

          function pop(cursor, fiber) {
            if (index < 0) {
              {
                warningWithoutStack$1(false, 'Unexpected pop.');
              }
              return;
            }

            {
              if (fiber !== fiberStack[index]) {
                warningWithoutStack$1(false, 'Unexpected Fiber popped.');
              }
            }

            cursor.current = valueStack[index];

            valueStack[index] = null;

            {
              fiberStack[index] = null;
            }

            index--;
          }

          function push(cursor, value, fiber) {
            index++;

            valueStack[index] = cursor.current;

            {
              fiberStack[index] = fiber;
            }

            cursor.current = value;
          }

          function checkThatStackIsEmpty() {
            {
              if (index !== -1) {
                warningWithoutStack$1(
                  false,
                  'Expected an empty stack. Something was not reset properly.'
                );
              }
            }
          }

          function resetStackAfterFatalErrorInDev() {
            {
              index = -1;
              valueStack.length = 0;
              fiberStack.length = 0;
            }
          }

          var warnedAboutMissingGetChildContext = void 0;

          {
            warnedAboutMissingGetChildContext = {};
          }

          var emptyContextObject = {};
          {
            Object.freeze(emptyContextObject);
          }

          // A cursor to the current merged context object on the stack.
          var contextStackCursor = createCursor(emptyContextObject);
          // A cursor to a boolean indicating whether the context has changed.
          var didPerformWorkStackCursor = createCursor(false);
          // Keep track of the previous context object that was on the stack.
          // We use this to get access to the parent context after we have already
          // pushed the next context provider, and now need to merge their contexts.
          var previousContext = emptyContextObject;

          function getUnmaskedContext(
            workInProgress,
            Component,
            didPushOwnContextIfProvider
          ) {
            if (didPushOwnContextIfProvider && isContextProvider(Component)) {
              // If the fiber is a context provider itself, when we read its context
              // we may have already pushed its own child context on the stack. A context
              // provider should not "see" its own child context. Therefore we read the
              // previous (parent) context instead for a context provider.
              return previousContext;
            }
            return contextStackCursor.current;
          }

          function cacheContext(
            workInProgress,
            unmaskedContext,
            maskedContext
          ) {
            var instance = workInProgress.stateNode;
            instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
            instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
          }

          function getMaskedContext(workInProgress, unmaskedContext) {
            var type = workInProgress.type;
            var contextTypes = type.contextTypes;
            if (!contextTypes) {
              return emptyContextObject;
            }

            // Avoid recreating masked context unless unmasked context has changed.
            // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
            // This may trigger infinite loops if componentWillReceiveProps calls setState.
            var instance = workInProgress.stateNode;
            if (
              instance &&
              instance.__reactInternalMemoizedUnmaskedChildContext ===
                unmaskedContext
            ) {
              return instance.__reactInternalMemoizedMaskedChildContext;
            }

            var context = {};
            for (var key in contextTypes) {
              context[key] = unmaskedContext[key];
            }

            {
              var name = getComponentName(type) || 'Unknown';
              checkPropTypes(
                contextTypes,
                context,
                'context',
                name,
                getCurrentFiberStackInDev
              );
            }

            // Cache unmasked context so we can avoid recreating masked context unless necessary.
            // Context is created before the class component is instantiated so check for instance.
            if (instance) {
              cacheContext(workInProgress, unmaskedContext, context);
            }

            return context;
          }

          function hasContextChanged() {
            return didPerformWorkStackCursor.current;
          }

          function isContextProvider(type) {
            var childContextTypes = type.childContextTypes;
            return (
              childContextTypes !== null && childContextTypes !== undefined
            );
          }

          function popContext(fiber) {
            pop(didPerformWorkStackCursor, fiber);
            pop(contextStackCursor, fiber);
          }

          function popTopLevelContextObject(fiber) {
            pop(didPerformWorkStackCursor, fiber);
            pop(contextStackCursor, fiber);
          }

          function pushTopLevelContextObject(fiber, context, didChange) {
            !(contextStackCursor.current === emptyContextObject)
              ? invariant(
                  false,
                  'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.'
                )
              : void 0;

            push(contextStackCursor, context, fiber);
            push(didPerformWorkStackCursor, didChange, fiber);
          }

          function processChildContext(fiber, type, parentContext) {
            var instance = fiber.stateNode;
            var childContextTypes = type.childContextTypes;

            // TODO (bvaughn) Replace this behavior with an invariant() in the future.
            // It has only been added in Fiber to match the (unintentional) behavior in Stack.
            if (typeof instance.getChildContext !== 'function') {
              {
                var componentName = getComponentName(type) || 'Unknown';

                if (!warnedAboutMissingGetChildContext[componentName]) {
                  warnedAboutMissingGetChildContext[componentName] = true;
                  warningWithoutStack$1(
                    false,
                    '%s.childContextTypes is specified but there is no getChildContext() method ' +
                      'on the instance. You can either define getChildContext() on %s or remove ' +
                      'childContextTypes from it.',
                    componentName,
                    componentName
                  );
                }
              }
              return parentContext;
            }

            var childContext = void 0;
            {
              setCurrentPhase('getChildContext');
            }
            startPhaseTimer(fiber, 'getChildContext');
            childContext = instance.getChildContext();
            stopPhaseTimer();
            {
              setCurrentPhase(null);
            }
            for (var contextKey in childContext) {
              !(contextKey in childContextTypes)
                ? invariant(
                    false,
                    '%s.getChildContext(): key "%s" is not defined in childContextTypes.',
                    getComponentName(type) || 'Unknown',
                    contextKey
                  )
                : void 0;
            }
            {
              var name = getComponentName(type) || 'Unknown';
              checkPropTypes(
                childContextTypes,
                childContext,
                'child context',
                name,
                // In practice, there is one case in which we won't get a stack. It's when
                // somebody calls unstable_renderSubtreeIntoContainer() and we process
                // context from the parent component instance. The stack will be missing
                // because it's outside of the reconciliation, and so the pointer has not
                // been set. This is rare and doesn't matter. We'll also remove that API.
                getCurrentFiberStackInDev
              );
            }

            return _assign({}, parentContext, childContext);
          }

          function pushContextProvider(workInProgress) {
            var instance = workInProgress.stateNode;
            // We push the context as early as possible to ensure stack integrity.
            // If the instance does not exist yet, we will push null at first,
            // and replace it on the stack later when invalidating the context.
            var memoizedMergedChildContext =
              (instance &&
                instance.__reactInternalMemoizedMergedChildContext) ||
              emptyContextObject;

            // Remember the parent context so we can merge with it later.
            // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
            previousContext = contextStackCursor.current;
            push(
              contextStackCursor,
              memoizedMergedChildContext,
              workInProgress
            );
            push(
              didPerformWorkStackCursor,
              didPerformWorkStackCursor.current,
              workInProgress
            );

            return true;
          }

          function invalidateContextProvider(workInProgress, type, didChange) {
            var instance = workInProgress.stateNode;
            !instance
              ? invariant(
                  false,
                  'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.'
                )
              : void 0;

            if (didChange) {
              // Merge parent and own context.
              // Skip this if we're not updating due to sCU.
              // This avoids unnecessarily recomputing memoized values.
              var mergedContext = processChildContext(
                workInProgress,
                type,
                previousContext
              );
              instance.__reactInternalMemoizedMergedChildContext = mergedContext;

              // Replace the old (or empty) context with the new one.
              // It is important to unwind the context in the reverse order.
              pop(didPerformWorkStackCursor, workInProgress);
              pop(contextStackCursor, workInProgress);
              // Now push the new context and mark that it has changed.
              push(contextStackCursor, mergedContext, workInProgress);
              push(didPerformWorkStackCursor, didChange, workInProgress);
            } else {
              pop(didPerformWorkStackCursor, workInProgress);
              push(didPerformWorkStackCursor, didChange, workInProgress);
            }
          }

          function findCurrentUnmaskedContext(fiber) {
            // Currently this is only used with renderSubtreeIntoContainer; not sure if it
            // makes sense elsewhere
            !(
              isFiberMounted(fiber) &&
              (fiber.tag === ClassComponent || fiber.tag === ClassComponentLazy)
            )
              ? invariant(
                  false,
                  'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.'
                )
              : void 0;

            var node = fiber;
            do {
              switch (node.tag) {
                case HostRoot:
                  return node.stateNode.context;
                case ClassComponent: {
                  var Component = node.type;
                  if (isContextProvider(Component)) {
                    return node.stateNode
                      .__reactInternalMemoizedMergedChildContext;
                  }
                  break;
                }
                case ClassComponentLazy: {
                  var _Component = getResultFromResolvedThenable(node.type);
                  if (isContextProvider(_Component)) {
                    return node.stateNode
                      .__reactInternalMemoizedMergedChildContext;
                  }
                  break;
                }
              }
              node = node.return;
            } while (node !== null);
            invariant(
              false,
              'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.'
            );
          }

          var onCommitFiberRoot = null;
          var onCommitFiberUnmount = null;
          var hasLoggedError = false;

          function catchErrors(fn) {
            return function(arg) {
              try {
                return fn(arg);
              } catch (err) {
                if (true && !hasLoggedError) {
                  hasLoggedError = true;
                  warningWithoutStack$1(
                    false,
                    'React DevTools encountered an error: %s',
                    err
                  );
                }
              }
            };
          }

          var isDevToolsPresent =
            typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';

          function injectInternals(internals) {
            if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
              // No DevTools
              return false;
            }
            var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (hook.isDisabled) {
              // This isn't a real property on the hook, but it can be set to opt out
              // of DevTools integration and associated warnings and logs.
              // https://github.com/facebook/react/issues/3877
              return true;
            }
            if (!hook.supportsFiber) {
              {
                warningWithoutStack$1(
                  false,
                  'The installed version of React DevTools is too old and will not work ' +
                    'with the current version of React. Please update React DevTools. ' +
                    'https://fb.me/react-devtools'
                );
              }
              // DevTools exists, even though it doesn't support Fiber.
              return true;
            }
            try {
              var rendererID = hook.inject(internals);
              // We have successfully injected, so now it is safe to set up hooks.
              onCommitFiberRoot = catchErrors(function(root) {
                return hook.onCommitFiberRoot(rendererID, root);
              });
              onCommitFiberUnmount = catchErrors(function(fiber) {
                return hook.onCommitFiberUnmount(rendererID, fiber);
              });
            } catch (err) {
              // Catch all errors because it is unsafe to throw during initialization.
              {
                warningWithoutStack$1(
                  false,
                  'React DevTools encountered an error: %s.',
                  err
                );
              }
            }
            // DevTools exists
            return true;
          }

          function onCommitRoot(root) {
            if (typeof onCommitFiberRoot === 'function') {
              onCommitFiberRoot(root);
            }
          }

          function onCommitUnmount(fiber) {
            if (typeof onCommitFiberUnmount === 'function') {
              onCommitFiberUnmount(fiber);
            }
          }

          // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
          // Math.pow(2, 30) - 1
          // 0b111111111111111111111111111111
          var maxSigned31BitInt = 1073741823;

          var NoWork = 0;
          var Sync = 1;
          var Never = maxSigned31BitInt;

          var UNIT_SIZE = 10;
          var MAGIC_NUMBER_OFFSET = 2;

          // 1 unit of expiration time represents 10ms.
          function msToExpirationTime(ms) {
            // Always add an offset so that we don't clash with the magic number for NoWork.
            return ((ms / UNIT_SIZE) | 0) + MAGIC_NUMBER_OFFSET;
          }

          function expirationTimeToMs(expirationTime) {
            return (expirationTime - MAGIC_NUMBER_OFFSET) * UNIT_SIZE;
          }

          function ceiling(num, precision) {
            return (((num / precision) | 0) + 1) * precision;
          }

          function computeExpirationBucket(
            currentTime,
            expirationInMs,
            bucketSizeMs
          ) {
            return (
              MAGIC_NUMBER_OFFSET +
              ceiling(
                currentTime - MAGIC_NUMBER_OFFSET + expirationInMs / UNIT_SIZE,
                bucketSizeMs / UNIT_SIZE
              )
            );
          }

          var LOW_PRIORITY_EXPIRATION = 5000;
          var LOW_PRIORITY_BATCH_SIZE = 250;

          function computeAsyncExpiration(currentTime) {
            return computeExpirationBucket(
              currentTime,
              LOW_PRIORITY_EXPIRATION,
              LOW_PRIORITY_BATCH_SIZE
            );
          }

          // We intentionally set a higher expiration time for interactive updates in
          // dev than in production.
          //
          // If the main thread is being blocked so long that you hit the expiration,
          // it's a problem that could be solved with better scheduling.
          //
          // People will be more likely to notice this and fix it with the long
          // expiration time in development.
          //
          // In production we opt for better UX at the risk of masking scheduling
          // problems, by expiring fast.
          var HIGH_PRIORITY_EXPIRATION = 500;
          var HIGH_PRIORITY_BATCH_SIZE = 100;

          function computeInteractiveExpiration(currentTime) {
            return computeExpirationBucket(
              currentTime,
              HIGH_PRIORITY_EXPIRATION,
              HIGH_PRIORITY_BATCH_SIZE
            );
          }

          var NoContext = 0;
          var AsyncMode = 1;
          var StrictMode = 2;
          var ProfileMode = 4;

          var hasBadMapPolyfill = void 0;

          {
            hasBadMapPolyfill = false;
            try {
              var nonExtensibleObject = Object.preventExtensions({});
              var testMap = new Map([[nonExtensibleObject, null]]);
              var testSet = new Set([nonExtensibleObject]);
              // This is necessary for Rollup to not consider these unused.
              // https://github.com/rollup/rollup/issues/1771
              // TODO: we can remove these if Rollup fixes the bug.
              testMap.set(0, 0);
              testSet.add(0);
            } catch (e) {
              // TODO: Consider warning about bad polyfills
              hasBadMapPolyfill = true;
            }
          }

          // A Fiber is work on a Component that needs to be done or was done. There can
          // be more than one per component.

          var debugCounter = void 0;

          {
            debugCounter = 1;
          }

          function FiberNode(tag, pendingProps, key, mode) {
            // Instance
            this.tag = tag;
            this.key = key;
            this.type = null;
            this.stateNode = null;

            // Fiber
            this.return = null;
            this.child = null;
            this.sibling = null;
            this.index = 0;

            this.ref = null;

            this.pendingProps = pendingProps;
            this.memoizedProps = null;
            this.updateQueue = null;
            this.memoizedState = null;
            this.firstContextDependency = null;

            this.mode = mode;

            // Effects
            this.effectTag = NoEffect;
            this.nextEffect = null;

            this.firstEffect = null;
            this.lastEffect = null;

            this.expirationTime = NoWork;
            this.childExpirationTime = NoWork;

            this.alternate = null;

            if (enableProfilerTimer) {
              this.actualDuration = 0;
              this.actualStartTime = -1;
              this.selfBaseDuration = 0;
              this.treeBaseDuration = 0;
            }

            {
              this._debugID = debugCounter++;
              this._debugSource = null;
              this._debugOwner = null;
              this._debugIsCurrentlyTiming = false;
              if (
                !hasBadMapPolyfill &&
                typeof Object.preventExtensions === 'function'
              ) {
                Object.preventExtensions(this);
              }
            }
          }

          // This is a constructor function, rather than a POJO constructor, still
          // please ensure we do the following:
          // 1) Nobody should add any instance methods on this. Instance methods can be
          //    more difficult to predict when they get optimized and they are almost
          //    never inlined properly in static compilers.
          // 2) Nobody should rely on `instanceof Fiber` for type testing. We should
          //    always know when it is a fiber.
          // 3) We might want to experiment with using numeric keys since they are easier
          //    to optimize in a non-JIT environment.
          // 4) We can easily go from a constructor to a createFiber object literal if that
          //    is faster.
          // 5) It should be easy to port this to a C struct and keep a C implementation
          //    compatible.
          var createFiber = function(tag, pendingProps, key, mode) {
            // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
            return new FiberNode(tag, pendingProps, key, mode);
          };

          function shouldConstruct(Component) {
            var prototype = Component.prototype;
            return !!(prototype && prototype.isReactComponent);
          }

          function resolveLazyComponentTag(fiber, Component) {
            if (typeof Component === 'function') {
              return shouldConstruct(Component)
                ? ClassComponentLazy
                : FunctionalComponentLazy;
            } else if (
              Component !== undefined &&
              Component !== null &&
              Component.$$typeof
            ) {
              return ForwardRefLazy;
            }
            return IndeterminateComponent;
          }

          // This is used to create an alternate fiber to do work on.
          function createWorkInProgress(current, pendingProps, expirationTime) {
            var workInProgress = current.alternate;
            if (workInProgress === null) {
              // We use a double buffering pooling technique because we know that we'll
              // only ever need at most two versions of a tree. We pool the "other" unused
              // node that we're free to reuse. This is lazily created to avoid allocating
              // extra objects for things that are never updated. It also allow us to
              // reclaim the extra memory if needed.
              workInProgress = createFiber(
                current.tag,
                pendingProps,
                current.key,
                current.mode
              );
              workInProgress.type = current.type;
              workInProgress.stateNode = current.stateNode;

              {
                // DEV-only fields
                workInProgress._debugID = current._debugID;
                workInProgress._debugSource = current._debugSource;
                workInProgress._debugOwner = current._debugOwner;
              }

              workInProgress.alternate = current;
              current.alternate = workInProgress;
            } else {
              workInProgress.pendingProps = pendingProps;

              // We already have an alternate.
              // Reset the effect tag.
              workInProgress.effectTag = NoEffect;

              // The effect list is no longer valid.
              workInProgress.nextEffect = null;
              workInProgress.firstEffect = null;
              workInProgress.lastEffect = null;

              if (enableProfilerTimer) {
                // We intentionally reset, rather than copy, actualDuration & actualStartTime.
                // This prevents time from endlessly accumulating in new commits.
                // This has the downside of resetting values for different priority renders,
                // But works for yielding (the common case) and should support resuming.
                workInProgress.actualDuration = 0;
                workInProgress.actualStartTime = -1;
              }
            }

            // Don't touching the subtree's expiration time, which has not changed.
            workInProgress.childExpirationTime = current.childExpirationTime;
            if (pendingProps !== current.pendingProps) {
              // This fiber has new props.
              workInProgress.expirationTime = expirationTime;
            } else {
              // This fiber's props have not changed.
              workInProgress.expirationTime = current.expirationTime;
            }

            workInProgress.child = current.child;
            workInProgress.memoizedProps = current.memoizedProps;
            workInProgress.memoizedState = current.memoizedState;
            workInProgress.updateQueue = current.updateQueue;
            workInProgress.firstContextDependency =
              current.firstContextDependency;

            // These will be overridden during the parent's reconciliation
            workInProgress.sibling = current.sibling;
            workInProgress.index = current.index;
            workInProgress.ref = current.ref;

            if (enableProfilerTimer) {
              workInProgress.selfBaseDuration = current.selfBaseDuration;
              workInProgress.treeBaseDuration = current.treeBaseDuration;
            }

            return workInProgress;
          }

          function createHostRootFiber(isAsync) {
            var mode = isAsync ? AsyncMode | StrictMode : NoContext;

            if (enableProfilerTimer && isDevToolsPresent) {
              // Always collect profile timings when DevTools are present.
              // This enables DevTools to start capturing timing at any point–
              // Without some nodes in the tree having empty base times.
              mode |= ProfileMode;
            }

            return createFiber(HostRoot, null, null, mode);
          }

          function createFiberFromElement(element, mode, expirationTime) {
            var owner = null;
            {
              owner = element._owner;
            }

            var fiber = void 0;
            var type = element.type;
            var key = element.key;
            var pendingProps = element.props;

            var fiberTag = void 0;
            if (typeof type === 'function') {
              fiberTag = shouldConstruct(type)
                ? ClassComponent
                : IndeterminateComponent;
            } else if (typeof type === 'string') {
              fiberTag = HostComponent;
            } else {
              getTag: switch (type) {
                case REACT_FRAGMENT_TYPE:
                  return createFiberFromFragment(
                    pendingProps.children,
                    mode,
                    expirationTime,
                    key
                  );
                case REACT_ASYNC_MODE_TYPE:
                  fiberTag = Mode;
                  mode |= AsyncMode | StrictMode;
                  break;
                case REACT_STRICT_MODE_TYPE:
                  fiberTag = Mode;
                  mode |= StrictMode;
                  break;
                case REACT_PROFILER_TYPE:
                  return createFiberFromProfiler(
                    pendingProps,
                    mode,
                    expirationTime,
                    key
                  );
                case REACT_PLACEHOLDER_TYPE:
                  fiberTag = PlaceholderComponent;
                  break;
                default: {
                  if (typeof type === 'object' && type !== null) {
                    switch (type.$$typeof) {
                      case REACT_PROVIDER_TYPE:
                        fiberTag = ContextProvider;
                        break getTag;
                      case REACT_CONTEXT_TYPE:
                        // This is a consumer
                        fiberTag = ContextConsumer;
                        break getTag;
                      case REACT_FORWARD_REF_TYPE:
                        fiberTag = ForwardRef;
                        break getTag;
                      default: {
                        if (typeof type.then === 'function') {
                          fiberTag = IndeterminateComponent;
                          break getTag;
                        }
                      }
                    }
                  }
                  var info = '';
                  {
                    if (
                      type === undefined ||
                      (typeof type === 'object' &&
                        type !== null &&
                        Object.keys(type).length === 0)
                    ) {
                      info +=
                        ' You likely forgot to export your component from the file ' +
                        "it's defined in, or you might have mixed up default and " +
                        'named imports.';
                    }
                    var ownerName = owner ? getComponentName(owner.type) : null;
                    if (ownerName) {
                      info +=
                        '\n\nCheck the render method of `' + ownerName + '`.';
                    }
                  }
                  invariant(
                    false,
                    'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s',
                    type == null ? type : typeof type,
                    info
                  );
                }
              }
            }

            fiber = createFiber(fiberTag, pendingProps, key, mode);
            fiber.type = type;
            fiber.expirationTime = expirationTime;

            {
              fiber._debugSource = element._source;
              fiber._debugOwner = element._owner;
            }

            return fiber;
          }

          function createFiberFromFragment(
            elements,
            mode,
            expirationTime,
            key
          ) {
            var fiber = createFiber(Fragment, elements, key, mode);
            fiber.expirationTime = expirationTime;
            return fiber;
          }

          function createFiberFromProfiler(
            pendingProps,
            mode,
            expirationTime,
            key
          ) {
            {
              if (
                typeof pendingProps.id !== 'string' ||
                typeof pendingProps.onRender !== 'function'
              ) {
                warningWithoutStack$1(
                  false,
                  'Profiler must specify an "id" string and "onRender" function as props'
                );
              }
            }

            var fiber = createFiber(
              Profiler,
              pendingProps,
              key,
              mode | ProfileMode
            );
            fiber.type = REACT_PROFILER_TYPE;
            fiber.expirationTime = expirationTime;

            return fiber;
          }

          function createFiberFromText(content, mode, expirationTime) {
            var fiber = createFiber(HostText, content, null, mode);
            fiber.expirationTime = expirationTime;
            return fiber;
          }

          function createFiberFromHostInstanceForDeletion() {
            var fiber = createFiber(HostComponent, null, null, NoContext);
            fiber.type = 'DELETED';
            return fiber;
          }

          function createFiberFromPortal(portal, mode, expirationTime) {
            var pendingProps = portal.children !== null ? portal.children : [];
            var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
            fiber.expirationTime = expirationTime;
            fiber.stateNode = {
              containerInfo: portal.containerInfo,
              pendingChildren: null, // Used by persistent updates
              implementation: portal.implementation
            };
            return fiber;
          }

          // Used for stashing WIP properties to replay failed work in DEV.
          function assignFiberPropertiesInDEV(target, source) {
            if (target === null) {
              // This Fiber's initial properties will always be overwritten.
              // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
              target = createFiber(
                IndeterminateComponent,
                null,
                null,
                NoContext
              );
            }

            // This is intentionally written as a list of all properties.
            // We tried to use Object.assign() instead but this is called in
            // the hottest path, and Object.assign() was too slow:
            // https://github.com/facebook/react/issues/12502
            // This code is DEV-only so size is not a concern.

            target.tag = source.tag;
            target.key = source.key;
            target.type = source.type;
            target.stateNode = source.stateNode;
            target.return = source.return;
            target.child = source.child;
            target.sibling = source.sibling;
            target.index = source.index;
            target.ref = source.ref;
            target.pendingProps = source.pendingProps;
            target.memoizedProps = source.memoizedProps;
            target.updateQueue = source.updateQueue;
            target.memoizedState = source.memoizedState;
            target.firstContextDependency = source.firstContextDependency;
            target.mode = source.mode;
            target.effectTag = source.effectTag;
            target.nextEffect = source.nextEffect;
            target.firstEffect = source.firstEffect;
            target.lastEffect = source.lastEffect;
            target.expirationTime = source.expirationTime;
            target.childExpirationTime = source.childExpirationTime;
            target.alternate = source.alternate;
            if (enableProfilerTimer) {
              target.actualDuration = source.actualDuration;
              target.actualStartTime = source.actualStartTime;
              target.selfBaseDuration = source.selfBaseDuration;
              target.treeBaseDuration = source.treeBaseDuration;
            }
            target._debugID = source._debugID;
            target._debugSource = source._debugSource;
            target._debugOwner = source._debugOwner;
            target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;
            return target;
          }

          /* eslint-disable no-use-before-define */
          // TODO: This should be lifted into the renderer.

          // The following attributes are only used by interaction tracing builds.
          // They enable interactions to be associated with their async work,
          // And expose interaction metadata to the React DevTools Profiler plugin.
          // Note that these attributes are only defined when the enableSchedulerTracing flag is enabled.

          // Exported FiberRoot type includes all properties,
          // To avoid requiring potentially error-prone :any casts throughout the project.
          // Profiling properties are only safe to access in profiling builds (when enableSchedulerTracing is true).
          // The types are defined separately within this file to ensure they stay in sync.
          // (We don't have to use an inline :any cast when enableSchedulerTracing is disabled.)

          /* eslint-enable no-use-before-define */

          function createFiberRoot(containerInfo, isAsync, hydrate) {
            // Cyclic construction. This cheats the type system right now because
            // stateNode is any.
            var uninitializedFiber = createHostRootFiber(isAsync);

            var root = void 0;
            if (enableSchedulerTracing) {
              root = {
                current: uninitializedFiber,
                containerInfo: containerInfo,
                pendingChildren: null,

                earliestPendingTime: NoWork,
                latestPendingTime: NoWork,
                earliestSuspendedTime: NoWork,
                latestSuspendedTime: NoWork,
                latestPingedTime: NoWork,

                didError: false,

                pendingCommitExpirationTime: NoWork,
                finishedWork: null,
                timeoutHandle: noTimeout,
                context: null,
                pendingContext: null,
                hydrate: hydrate,
                nextExpirationTimeToWorkOn: NoWork,
                expirationTime: NoWork,
                firstBatch: null,
                nextScheduledRoot: null,

                interactionThreadID: tracing.unstable_getThreadID(),
                memoizedInteractions: new Set(),
                pendingInteractionMap: new Map()
              };
            } else {
              root = {
                current: uninitializedFiber,
                containerInfo: containerInfo,
                pendingChildren: null,

                earliestPendingTime: NoWork,
                latestPendingTime: NoWork,
                earliestSuspendedTime: NoWork,
                latestSuspendedTime: NoWork,
                latestPingedTime: NoWork,

                didError: false,

                pendingCommitExpirationTime: NoWork,
                finishedWork: null,
                timeoutHandle: noTimeout,
                context: null,
                pendingContext: null,
                hydrate: hydrate,
                nextExpirationTimeToWorkOn: NoWork,
                expirationTime: NoWork,
                firstBatch: null,
                nextScheduledRoot: null
              };
            }

            uninitializedFiber.stateNode = root;

            // The reason for the way the Flow types are structured in this file,
            // Is to avoid needing :any casts everywhere interaction tracing fields are used.
            // Unfortunately that requires an :any cast for non-interaction tracing capable builds.
            // $FlowFixMe Remove this :any cast and replace it with something better.
            return root;
          }

          /**
           * Forked from fbjs/warning:
           * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
           *
           * Only change is we use console.warn instead of console.error,
           * and do nothing when 'console' is not supported.
           * This really simplifies the code.
           * ---
           * Similar to invariant but only logs a warning if the condition is not met.
           * This can be used to log issues in development environments in critical
           * paths. Removing the logging code for production environments will keep the
           * same logic and follow the same code paths.
           */

          var lowPriorityWarning = function() {};

          {
            var printWarning = function(format) {
              for (
                var _len = arguments.length,
                  args = Array(_len > 1 ? _len - 1 : 0),
                  _key = 1;
                _key < _len;
                _key++
              ) {
                args[_key - 1] = arguments[_key];
              }

              var argIndex = 0;
              var message =
                'Warning: ' +
                format.replace(/%s/g, function() {
                  return args[argIndex++];
                });
              if (typeof console !== 'undefined') {
                console.warn(message);
              }
              try {
                // --- Welcome to debugging React ---
                // This error was thrown as a convenience so that you can use this stack
                // to find the callsite that caused this warning to fire.
                throw new Error(message);
              } catch (x) {}
            };

            lowPriorityWarning = function(condition, format) {
              if (format === undefined) {
                throw new Error(
                  '`lowPriorityWarning(condition, format, ...args)` requires a warning ' +
                    'message argument'
                );
              }
              if (!condition) {
                for (
                  var _len2 = arguments.length,
                    args = Array(_len2 > 2 ? _len2 - 2 : 0),
                    _key2 = 2;
                  _key2 < _len2;
                  _key2++
                ) {
                  args[_key2 - 2] = arguments[_key2];
                }

                printWarning.apply(undefined, [format].concat(args));
              }
            };
          }

          var lowPriorityWarning$1 = lowPriorityWarning;

          var ReactStrictModeWarnings = {
            discardPendingWarnings: function() {},
            flushPendingDeprecationWarnings: function() {},
            flushPendingUnsafeLifecycleWarnings: function() {},
            recordDeprecationWarnings: function(fiber, instance) {},
            recordUnsafeLifecycleWarnings: function(fiber, instance) {},
            recordLegacyContextWarning: function(fiber, instance) {},
            flushLegacyContextWarning: function() {}
          };

          {
            var LIFECYCLE_SUGGESTIONS = {
              UNSAFE_componentWillMount: 'componentDidMount',
              UNSAFE_componentWillReceiveProps:
                'static getDerivedStateFromProps',
              UNSAFE_componentWillUpdate: 'componentDidUpdate'
            };

            var pendingComponentWillMountWarnings = [];
            var pendingComponentWillReceivePropsWarnings = [];
            var pendingComponentWillUpdateWarnings = [];
            var pendingUnsafeLifecycleWarnings = new Map();
            var pendingLegacyContextWarning = new Map();

            // Tracks components we have already warned about.
            var didWarnAboutDeprecatedLifecycles = new Set();
            var didWarnAboutUnsafeLifecycles = new Set();
            var didWarnAboutLegacyContext = new Set();

            var setToSortedString = function(set) {
              var array = [];
              set.forEach(function(value) {
                array.push(value);
              });
              return array.sort().join(', ');
            };

            ReactStrictModeWarnings.discardPendingWarnings = function() {
              pendingComponentWillMountWarnings = [];
              pendingComponentWillReceivePropsWarnings = [];
              pendingComponentWillUpdateWarnings = [];
              pendingUnsafeLifecycleWarnings = new Map();
              pendingLegacyContextWarning = new Map();
            };

            ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
              pendingUnsafeLifecycleWarnings.forEach(function(
                lifecycleWarningsMap,
                strictRoot
              ) {
                var lifecyclesWarningMesages = [];

                Object.keys(lifecycleWarningsMap).forEach(function(lifecycle) {
                  var lifecycleWarnings = lifecycleWarningsMap[lifecycle];
                  if (lifecycleWarnings.length > 0) {
                    var componentNames = new Set();
                    lifecycleWarnings.forEach(function(fiber) {
                      componentNames.add(
                        getComponentName(fiber.type) || 'Component'
                      );
                      didWarnAboutUnsafeLifecycles.add(fiber.type);
                    });

                    var formatted = lifecycle.replace('UNSAFE_', '');
                    var suggestion = LIFECYCLE_SUGGESTIONS[lifecycle];
                    var sortedComponentNames = setToSortedString(
                      componentNames
                    );

                    lifecyclesWarningMesages.push(
                      formatted +
                        ': Please update the following components to use ' +
                        (suggestion + ' instead: ' + sortedComponentNames)
                    );
                  }
                });

                if (lifecyclesWarningMesages.length > 0) {
                  var strictRootComponentStack = getStackByFiberInDevAndProd(
                    strictRoot
                  );

                  warningWithoutStack$1(
                    false,
                    'Unsafe lifecycle methods were found within a strict-mode tree:%s' +
                      '\n\n%s' +
                      '\n\nLearn more about this warning here:' +
                      '\nhttps://fb.me/react-strict-mode-warnings',
                    strictRootComponentStack,
                    lifecyclesWarningMesages.join('\n\n')
                  );
                }
              });

              pendingUnsafeLifecycleWarnings = new Map();
            };

            var findStrictRoot = function(fiber) {
              var maybeStrictRoot = null;

              var node = fiber;
              while (node !== null) {
                if (node.mode & StrictMode) {
                  maybeStrictRoot = node;
                }
                node = node.return;
              }

              return maybeStrictRoot;
            };

            ReactStrictModeWarnings.flushPendingDeprecationWarnings = function() {
              if (pendingComponentWillMountWarnings.length > 0) {
                var uniqueNames = new Set();
                pendingComponentWillMountWarnings.forEach(function(fiber) {
                  uniqueNames.add(getComponentName(fiber.type) || 'Component');
                  didWarnAboutDeprecatedLifecycles.add(fiber.type);
                });

                var sortedNames = setToSortedString(uniqueNames);

                lowPriorityWarning$1(
                  false,
                  'componentWillMount is deprecated and will be removed in the next major version. ' +
                    'Use componentDidMount instead. As a temporary workaround, ' +
                    'you can rename to UNSAFE_componentWillMount.' +
                    '\n\nPlease update the following components: %s' +
                    '\n\nLearn more about this warning here:' +
                    '\nhttps://fb.me/react-async-component-lifecycle-hooks',
                  sortedNames
                );

                pendingComponentWillMountWarnings = [];
              }

              if (pendingComponentWillReceivePropsWarnings.length > 0) {
                var _uniqueNames = new Set();
                pendingComponentWillReceivePropsWarnings.forEach(function(
                  fiber
                ) {
                  _uniqueNames.add(getComponentName(fiber.type) || 'Component');
                  didWarnAboutDeprecatedLifecycles.add(fiber.type);
                });

                var _sortedNames = setToSortedString(_uniqueNames);

                lowPriorityWarning$1(
                  false,
                  'componentWillReceiveProps is deprecated and will be removed in the next major version. ' +
                    'Use static getDerivedStateFromProps instead.' +
                    '\n\nPlease update the following components: %s' +
                    '\n\nLearn more about this warning here:' +
                    '\nhttps://fb.me/react-async-component-lifecycle-hooks',
                  _sortedNames
                );

                pendingComponentWillReceivePropsWarnings = [];
              }

              if (pendingComponentWillUpdateWarnings.length > 0) {
                var _uniqueNames2 = new Set();
                pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                  _uniqueNames2.add(
                    getComponentName(fiber.type) || 'Component'
                  );
                  didWarnAboutDeprecatedLifecycles.add(fiber.type);
                });

                var _sortedNames2 = setToSortedString(_uniqueNames2);

                lowPriorityWarning$1(
                  false,
                  'componentWillUpdate is deprecated and will be removed in the next major version. ' +
                    'Use componentDidUpdate instead. As a temporary workaround, ' +
                    'you can rename to UNSAFE_componentWillUpdate.' +
                    '\n\nPlease update the following components: %s' +
                    '\n\nLearn more about this warning here:' +
                    '\nhttps://fb.me/react-async-component-lifecycle-hooks',
                  _sortedNames2
                );

                pendingComponentWillUpdateWarnings = [];
              }
            };

            ReactStrictModeWarnings.recordDeprecationWarnings = function(
              fiber,
              instance
            ) {
              // Dedup strategy: Warn once per component.
              if (didWarnAboutDeprecatedLifecycles.has(fiber.type)) {
                return;
              }

              // Don't warn about react-lifecycles-compat polyfilled components.
              if (
                typeof instance.componentWillMount === 'function' &&
                instance.componentWillMount.__suppressDeprecationWarning !==
                  true
              ) {
                pendingComponentWillMountWarnings.push(fiber);
              }
              if (
                typeof instance.componentWillReceiveProps === 'function' &&
                instance.componentWillReceiveProps
                  .__suppressDeprecationWarning !== true
              ) {
                pendingComponentWillReceivePropsWarnings.push(fiber);
              }
              if (
                typeof instance.componentWillUpdate === 'function' &&
                instance.componentWillUpdate.__suppressDeprecationWarning !==
                  true
              ) {
                pendingComponentWillUpdateWarnings.push(fiber);
              }
            };

            ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(
              fiber,
              instance
            ) {
              var strictRoot = findStrictRoot(fiber);
              if (strictRoot === null) {
                warningWithoutStack$1(
                  false,
                  'Expected to find a StrictMode component in a strict mode tree. ' +
                    'This error is likely caused by a bug in React. Please file an issue.'
                );
                return;
              }

              // Dedup strategy: Warn once per component.
              // This is difficult to track any other way since component names
              // are often vague and are likely to collide between 3rd party libraries.
              // An expand property is probably okay to use here since it's DEV-only,
              // and will only be set in the event of serious warnings.
              if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
                return;
              }

              var warningsForRoot = void 0;
              if (!pendingUnsafeLifecycleWarnings.has(strictRoot)) {
                warningsForRoot = {
                  UNSAFE_componentWillMount: [],
                  UNSAFE_componentWillReceiveProps: [],
                  UNSAFE_componentWillUpdate: []
                };

                pendingUnsafeLifecycleWarnings.set(strictRoot, warningsForRoot);
              } else {
                warningsForRoot = pendingUnsafeLifecycleWarnings.get(
                  strictRoot
                );
              }

              var unsafeLifecycles = [];
              if (
                (typeof instance.componentWillMount === 'function' &&
                  instance.componentWillMount.__suppressDeprecationWarning !==
                    true) ||
                typeof instance.UNSAFE_componentWillMount === 'function'
              ) {
                unsafeLifecycles.push('UNSAFE_componentWillMount');
              }
              if (
                (typeof instance.componentWillReceiveProps === 'function' &&
                  instance.componentWillReceiveProps
                    .__suppressDeprecationWarning !== true) ||
                typeof instance.UNSAFE_componentWillReceiveProps === 'function'
              ) {
                unsafeLifecycles.push('UNSAFE_componentWillReceiveProps');
              }
              if (
                (typeof instance.componentWillUpdate === 'function' &&
                  instance.componentWillUpdate.__suppressDeprecationWarning !==
                    true) ||
                typeof instance.UNSAFE_componentWillUpdate === 'function'
              ) {
                unsafeLifecycles.push('UNSAFE_componentWillUpdate');
              }

              if (unsafeLifecycles.length > 0) {
                unsafeLifecycles.forEach(function(lifecycle) {
                  warningsForRoot[lifecycle].push(fiber);
                });
              }
            };

            ReactStrictModeWarnings.recordLegacyContextWarning = function(
              fiber,
              instance
            ) {
              var strictRoot = findStrictRoot(fiber);
              if (strictRoot === null) {
                warningWithoutStack$1(
                  false,
                  'Expected to find a StrictMode component in a strict mode tree. ' +
                    'This error is likely caused by a bug in React. Please file an issue.'
                );
                return;
              }

              // Dedup strategy: Warn once per component.
              if (didWarnAboutLegacyContext.has(fiber.type)) {
                return;
              }

              var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

              if (
                fiber.type.contextTypes != null ||
                fiber.type.childContextTypes != null ||
                (instance !== null &&
                  typeof instance.getChildContext === 'function')
              ) {
                if (warningsForRoot === undefined) {
                  warningsForRoot = [];
                  pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
                }
                warningsForRoot.push(fiber);
              }
            };

            ReactStrictModeWarnings.flushLegacyContextWarning = function() {
              pendingLegacyContextWarning.forEach(function(
                fiberArray,
                strictRoot
              ) {
                var uniqueNames = new Set();
                fiberArray.forEach(function(fiber) {
                  uniqueNames.add(getComponentName(fiber.type) || 'Component');
                  didWarnAboutLegacyContext.add(fiber.type);
                });

                var sortedNames = setToSortedString(uniqueNames);
                var strictRootComponentStack = getStackByFiberInDevAndProd(
                  strictRoot
                );

                warningWithoutStack$1(
                  false,
                  'Legacy context API has been detected within a strict-mode tree: %s' +
                    '\n\nPlease update the following components: %s' +
                    '\n\nLearn more about this warning here:' +
                    '\nhttps://fb.me/react-strict-mode-warnings',
                  strictRootComponentStack,
                  sortedNames
                );
              });
            };
          }

          // This lets us hook into Fiber to debug what it's doing.
          // See https://github.com/facebook/react/pull/8033.
          // This is not part of the public API, not even for React DevTools.
          // You may only inject a debugTool if you work on React Fiber itself.
          var ReactFiberInstrumentation = {
            debugTool: null
          };

          var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;

          // TODO: Offscreen updates should never suspend. However, a promise that
          // suspended inside an offscreen subtree should be able to ping at the priority
          // of the outer render.

          function markPendingPriorityLevel(root, expirationTime) {
            // If there's a gap between completing a failed root and retrying it,
            // additional updates may be scheduled. Clear `didError`, in case the update
            // is sufficient to fix the error.
            root.didError = false;

            // Update the latest and earliest pending times
            var earliestPendingTime = root.earliestPendingTime;
            if (earliestPendingTime === NoWork) {
              // No other pending updates.
              root.earliestPendingTime = root.latestPendingTime = expirationTime;
            } else {
              if (earliestPendingTime > expirationTime) {
                // This is the earliest pending update.
                root.earliestPendingTime = expirationTime;
              } else {
                var latestPendingTime = root.latestPendingTime;
                if (latestPendingTime < expirationTime) {
                  // This is the latest pending update
                  root.latestPendingTime = expirationTime;
                }
              }
            }
            findNextExpirationTimeToWorkOn(expirationTime, root);
          }

          function markCommittedPriorityLevels(root, earliestRemainingTime) {
            root.didError = false;

            if (earliestRemainingTime === NoWork) {
              // Fast path. There's no remaining work. Clear everything.
              root.earliestPendingTime = NoWork;
              root.latestPendingTime = NoWork;
              root.earliestSuspendedTime = NoWork;
              root.latestSuspendedTime = NoWork;
              root.latestPingedTime = NoWork;
              findNextExpirationTimeToWorkOn(NoWork, root);
              return;
            }

            // Let's see if the previous latest known pending level was just flushed.
            var latestPendingTime = root.latestPendingTime;
            if (latestPendingTime !== NoWork) {
              if (latestPendingTime < earliestRemainingTime) {
                // We've flushed all the known pending levels.
                root.earliestPendingTime = root.latestPendingTime = NoWork;
              } else {
                var earliestPendingTime = root.earliestPendingTime;
                if (earliestPendingTime < earliestRemainingTime) {
                  // We've flushed the earliest known pending level. Set this to the
                  // latest pending time.
                  root.earliestPendingTime = root.latestPendingTime;
                }
              }
            }

            // Now let's handle the earliest remaining level in the whole tree. We need to
            // decide whether to treat it as a pending level or as suspended. Check
            // it falls within the range of known suspended levels.

            var earliestSuspendedTime = root.earliestSuspendedTime;
            if (earliestSuspendedTime === NoWork) {
              // There's no suspended work. Treat the earliest remaining level as a
              // pending level.
              markPendingPriorityLevel(root, earliestRemainingTime);
              findNextExpirationTimeToWorkOn(NoWork, root);
              return;
            }

            var latestSuspendedTime = root.latestSuspendedTime;
            if (earliestRemainingTime > latestSuspendedTime) {
              // The earliest remaining level is later than all the suspended work. That
              // means we've flushed all the suspended work.
              root.earliestSuspendedTime = NoWork;
              root.latestSuspendedTime = NoWork;
              root.latestPingedTime = NoWork;

              // There's no suspended work. Treat the earliest remaining level as a
              // pending level.
              markPendingPriorityLevel(root, earliestRemainingTime);
              findNextExpirationTimeToWorkOn(NoWork, root);
              return;
            }

            if (earliestRemainingTime < earliestSuspendedTime) {
              // The earliest remaining time is earlier than all the suspended work.
              // Treat it as a pending update.
              markPendingPriorityLevel(root, earliestRemainingTime);
              findNextExpirationTimeToWorkOn(NoWork, root);
              return;
            }

            // The earliest remaining time falls within the range of known suspended
            // levels. We should treat this as suspended work.
            findNextExpirationTimeToWorkOn(NoWork, root);
          }

          function hasLowerPriorityWork(root, erroredExpirationTime) {
            var latestPendingTime = root.latestPendingTime;
            var latestSuspendedTime = root.latestSuspendedTime;
            var latestPingedTime = root.latestPingedTime;
            return (
              (latestPendingTime !== NoWork &&
                latestPendingTime > erroredExpirationTime) ||
              (latestSuspendedTime !== NoWork &&
                latestSuspendedTime > erroredExpirationTime) ||
              (latestPingedTime !== NoWork &&
                latestPingedTime > erroredExpirationTime)
            );
          }

          function isPriorityLevelSuspended(root, expirationTime) {
            var earliestSuspendedTime = root.earliestSuspendedTime;
            var latestSuspendedTime = root.latestSuspendedTime;
            return (
              earliestSuspendedTime !== NoWork &&
              expirationTime >= earliestSuspendedTime &&
              expirationTime <= latestSuspendedTime
            );
          }

          function markSuspendedPriorityLevel(root, suspendedTime) {
            root.didError = false;
            clearPing(root, suspendedTime);

            // First, check the known pending levels and update them if needed.
            var earliestPendingTime = root.earliestPendingTime;
            var latestPendingTime = root.latestPendingTime;
            if (earliestPendingTime === suspendedTime) {
              if (latestPendingTime === suspendedTime) {
                // Both known pending levels were suspended. Clear them.
                root.earliestPendingTime = root.latestPendingTime = NoWork;
              } else {
                // The earliest pending level was suspended. Clear by setting it to the
                // latest pending level.
                root.earliestPendingTime = latestPendingTime;
              }
            } else if (latestPendingTime === suspendedTime) {
              // The latest pending level was suspended. Clear by setting it to the
              // latest pending level.
              root.latestPendingTime = earliestPendingTime;
            }

            // Finally, update the known suspended levels.
            var earliestSuspendedTime = root.earliestSuspendedTime;
            var latestSuspendedTime = root.latestSuspendedTime;
            if (earliestSuspendedTime === NoWork) {
              // No other suspended levels.
              root.earliestSuspendedTime = root.latestSuspendedTime = suspendedTime;
            } else {
              if (earliestSuspendedTime > suspendedTime) {
                // This is the earliest suspended level.
                root.earliestSuspendedTime = suspendedTime;
              } else if (latestSuspendedTime < suspendedTime) {
                // This is the latest suspended level
                root.latestSuspendedTime = suspendedTime;
              }
            }

            findNextExpirationTimeToWorkOn(suspendedTime, root);
          }

          function markPingedPriorityLevel(root, pingedTime) {
            root.didError = false;

            // TODO: When we add back resuming, we need to ensure the progressed work
            // is thrown out and not reused during the restarted render. One way to
            // invalidate the progressed work is to restart at expirationTime + 1.
            var latestPingedTime = root.latestPingedTime;
            if (latestPingedTime === NoWork || latestPingedTime < pingedTime) {
              root.latestPingedTime = pingedTime;
            }
            findNextExpirationTimeToWorkOn(pingedTime, root);
          }

          function clearPing(root, completedTime) {
            // TODO: Track whether the root was pinged during the render phase. If so,
            // we need to make sure we don't lose track of it.
            var latestPingedTime = root.latestPingedTime;
            if (
              latestPingedTime !== NoWork &&
              latestPingedTime <= completedTime
            ) {
              root.latestPingedTime = NoWork;
            }
          }

          function findEarliestOutstandingPriorityLevel(
            root,
            renderExpirationTime
          ) {
            var earliestExpirationTime = renderExpirationTime;

            var earliestPendingTime = root.earliestPendingTime;
            var earliestSuspendedTime = root.earliestSuspendedTime;
            if (
              earliestExpirationTime === NoWork ||
              (earliestPendingTime !== NoWork &&
                earliestPendingTime < earliestExpirationTime)
            ) {
              earliestExpirationTime = earliestPendingTime;
            }
            if (
              earliestExpirationTime === NoWork ||
              (earliestSuspendedTime !== NoWork &&
                earliestSuspendedTime < earliestExpirationTime)
            ) {
              earliestExpirationTime = earliestSuspendedTime;
            }
            return earliestExpirationTime;
          }

          function didExpireAtExpirationTime(root, currentTime) {
            var expirationTime = root.expirationTime;
            if (expirationTime !== NoWork && currentTime >= expirationTime) {
              // The root has expired. Flush all work up to the current time.
              root.nextExpirationTimeToWorkOn = currentTime;
            }
          }

          function findNextExpirationTimeToWorkOn(
            completedExpirationTime,
            root
          ) {
            var earliestSuspendedTime = root.earliestSuspendedTime;
            var latestSuspendedTime = root.latestSuspendedTime;
            var earliestPendingTime = root.earliestPendingTime;
            var latestPingedTime = root.latestPingedTime;

            // Work on the earliest pending time. Failing that, work on the latest
            // pinged time.
            var nextExpirationTimeToWorkOn =
              earliestPendingTime !== NoWork
                ? earliestPendingTime
                : latestPingedTime;

            // If there is no pending or pinged work, check if there's suspended work
            // that's lower priority than what we just completed.
            if (
              nextExpirationTimeToWorkOn === NoWork &&
              (completedExpirationTime === NoWork ||
                latestSuspendedTime > completedExpirationTime)
            ) {
              // The lowest priority suspended work is the work most likely to be
              // committed next. Let's start rendering it again, so that if it times out,
              // it's ready to commit.
              nextExpirationTimeToWorkOn = latestSuspendedTime;
            }

            var expirationTime = nextExpirationTimeToWorkOn;
            if (
              expirationTime !== NoWork &&
              earliestSuspendedTime !== NoWork &&
              earliestSuspendedTime < expirationTime
            ) {
              // Expire using the earliest known expiration time.
              expirationTime = earliestSuspendedTime;
            }

            root.nextExpirationTimeToWorkOn = nextExpirationTimeToWorkOn;
            root.expirationTime = expirationTime;
          }

          // UpdateQueue is a linked list of prioritized updates.
          //
          // Like fibers, update queues come in pairs: a current queue, which represents
          // the visible state of the screen, and a work-in-progress queue, which is
          // can be mutated and processed asynchronously before it is committed — a form
          // of double buffering. If a work-in-progress render is discarded before
          // finishing, we create a new work-in-progress by cloning the current queue.
          //
          // Both queues share a persistent, singly-linked list structure. To schedule an
          // update, we append it to the end of both queues. Each queue maintains a
          // pointer to first update in the persistent list that hasn't been processed.
          // The work-in-progress pointer always has a position equal to or greater than
          // the current queue, since we always work on that one. The current queue's
          // pointer is only updated during the commit phase, when we swap in the
          // work-in-progress.
          //
          // For example:
          //
          //   Current pointer:           A - B - C - D - E - F
          //   Work-in-progress pointer:              D - E - F
          //                                          ^
          //                                          The work-in-progress queue has
          //                                          processed more updates than current.
          //
          // The reason we append to both queues is because otherwise we might drop
          // updates without ever processing them. For example, if we only add updates to
          // the work-in-progress queue, some updates could be lost whenever a work-in
          // -progress render restarts by cloning from current. Similarly, if we only add
          // updates to the current queue, the updates will be lost whenever an already
          // in-progress queue commits and swaps with the current queue. However, by
          // adding to both queues, we guarantee that the update will be part of the next
          // work-in-progress. (And because the work-in-progress queue becomes the
          // current queue once it commits, there's no danger of applying the same
          // update twice.)
          //
          // Prioritization
          // --------------
          //
          // Updates are not sorted by priority, but by insertion; new updates are always
          // appended to the end of the list.
          //
          // The priority is still important, though. When processing the update queue
          // during the render phase, only the updates with sufficient priority are
          // included in the result. If we skip an update because it has insufficient
          // priority, it remains in the queue to be processed later, during a lower
          // priority render. Crucially, all updates subsequent to a skipped update also
          // remain in the queue *regardless of their priority*. That means high priority
          // updates are sometimes processed twice, at two separate priorities. We also
          // keep track of a base state, that represents the state before the first
          // update in the queue is applied.
          //
          // For example:
          //
          //   Given a base state of '', and the following queue of updates
          //
          //     A1 - B2 - C1 - D2
          //
          //   where the number indicates the priority, and the update is applied to the
          //   previous state by appending a letter, React will process these updates as
          //   two separate renders, one per distinct priority level:
          //
          //   First render, at priority 1:
          //     Base state: ''
          //     Updates: [A1, C1]
          //     Result state: 'AC'
          //
          //   Second render, at priority 2:
          //     Base state: 'A'            <-  The base state does not include C1,
          //                                    because B2 was skipped.
          //     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2
          //     Result state: 'ABCD'
          //
          // Because we process updates in insertion order, and rebase high priority
          // updates when preceding updates are skipped, the final result is deterministic
          // regardless of priority. Intermediate state may vary according to system
          // resources, but the final state is always the same.

          var UpdateState = 0;
          var ReplaceState = 1;
          var ForceUpdate = 2;
          var CaptureUpdate = 3;

          // Global state that is reset at the beginning of calling `processUpdateQueue`.
          // It should only be read right after calling `processUpdateQueue`, via
          // `checkHasForceUpdateAfterProcessing`.
          var hasForceUpdate = false;

          var didWarnUpdateInsideUpdate = void 0;
          var currentlyProcessingQueue = void 0;
          var resetCurrentlyProcessingQueue = void 0;
          {
            didWarnUpdateInsideUpdate = false;
            currentlyProcessingQueue = null;
            resetCurrentlyProcessingQueue = function() {
              currentlyProcessingQueue = null;
            };
          }

          function createUpdateQueue(baseState) {
            var queue = {
              baseState: baseState,
              firstUpdate: null,
              lastUpdate: null,
              firstCapturedUpdate: null,
              lastCapturedUpdate: null,
              firstEffect: null,
              lastEffect: null,
              firstCapturedEffect: null,
              lastCapturedEffect: null
            };
            return queue;
          }

          function cloneUpdateQueue(currentQueue) {
            var queue = {
              baseState: currentQueue.baseState,
              firstUpdate: currentQueue.firstUpdate,
              lastUpdate: currentQueue.lastUpdate,

              // TODO: With resuming, if we bail out and resuse the child tree, we should
              // keep these effects.
              firstCapturedUpdate: null,
              lastCapturedUpdate: null,

              firstEffect: null,
              lastEffect: null,

              firstCapturedEffect: null,
              lastCapturedEffect: null
            };
            return queue;
          }

          function createUpdate(expirationTime) {
            return {
              expirationTime: expirationTime,

              tag: UpdateState,
              payload: null,
              callback: null,

              next: null,
              nextEffect: null
            };
          }

          function appendUpdateToQueue(queue, update) {
            // Append the update to the end of the list.
            if (queue.lastUpdate === null) {
              // Queue is empty
              queue.firstUpdate = queue.lastUpdate = update;
            } else {
              queue.lastUpdate.next = update;
              queue.lastUpdate = update;
            }
          }

          function enqueueUpdate(fiber, update) {
            // Update queues are created lazily.
            var alternate = fiber.alternate;
            var queue1 = void 0;
            var queue2 = void 0;
            if (alternate === null) {
              // There's only one fiber.
              queue1 = fiber.updateQueue;
              queue2 = null;
              if (queue1 === null) {
                queue1 = fiber.updateQueue = createUpdateQueue(
                  fiber.memoizedState
                );
              }
            } else {
              // There are two owners.
              queue1 = fiber.updateQueue;
              queue2 = alternate.updateQueue;
              if (queue1 === null) {
                if (queue2 === null) {
                  // Neither fiber has an update queue. Create new ones.
                  queue1 = fiber.updateQueue = createUpdateQueue(
                    fiber.memoizedState
                  );
                  queue2 = alternate.updateQueue = createUpdateQueue(
                    alternate.memoizedState
                  );
                } else {
                  // Only one fiber has an update queue. Clone to create a new one.
                  queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);
                }
              } else {
                if (queue2 === null) {
                  // Only one fiber has an update queue. Clone to create a new one.
                  queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);
                } else {
                  // Both owners have an update queue.
                }
              }
            }
            if (queue2 === null || queue1 === queue2) {
              // There's only a single queue.
              appendUpdateToQueue(queue1, update);
            } else {
              // There are two queues. We need to append the update to both queues,
              // while accounting for the persistent structure of the list — we don't
              // want the same update to be added multiple times.
              if (queue1.lastUpdate === null || queue2.lastUpdate === null) {
                // One of the queues is not empty. We must add the update to both queues.
                appendUpdateToQueue(queue1, update);
                appendUpdateToQueue(queue2, update);
              } else {
                // Both queues are non-empty. The last update is the same in both lists,
                // because of structural sharing. So, only append to one of the lists.
                appendUpdateToQueue(queue1, update);
                // But we still need to update the `lastUpdate` pointer of queue2.
                queue2.lastUpdate = update;
              }
            }

            {
              if (
                (fiber.tag === ClassComponent ||
                  fiber.tag === ClassComponentLazy) &&
                (currentlyProcessingQueue === queue1 ||
                  (queue2 !== null && currentlyProcessingQueue === queue2)) &&
                !didWarnUpdateInsideUpdate
              ) {
                warningWithoutStack$1(
                  false,
                  'An update (setState, replaceState, or forceUpdate) was scheduled ' +
                    'from inside an update function. Update functions should be pure, ' +
                    'with zero side-effects. Consider using componentDidUpdate or a ' +
                    'callback.'
                );
                didWarnUpdateInsideUpdate = true;
              }
            }
          }

          function enqueueCapturedUpdate(workInProgress, update) {
            // Captured updates go into a separate list, and only on the work-in-
            // progress queue.
            var workInProgressQueue = workInProgress.updateQueue;
            if (workInProgressQueue === null) {
              workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(
                workInProgress.memoizedState
              );
            } else {
              // TODO: I put this here rather than createWorkInProgress so that we don't
              // clone the queue unnecessarily. There's probably a better way to
              // structure this.
              workInProgressQueue = ensureWorkInProgressQueueIsAClone(
                workInProgress,
                workInProgressQueue
              );
            }

            // Append the update to the end of the list.
            if (workInProgressQueue.lastCapturedUpdate === null) {
              // This is the first render phase update
              workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;
            } else {
              workInProgressQueue.lastCapturedUpdate.next = update;
              workInProgressQueue.lastCapturedUpdate = update;
            }
          }

          function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
            var current = workInProgress.alternate;
            if (current !== null) {
              // If the work-in-progress queue is equal to the current queue,
              // we need to clone it first.
              if (queue === current.updateQueue) {
                queue = workInProgress.updateQueue = cloneUpdateQueue(queue);
              }
            }
            return queue;
          }

          function getStateFromUpdate(
            workInProgress,
            queue,
            update,
            prevState,
            nextProps,
            instance
          ) {
            switch (update.tag) {
              case ReplaceState: {
                var _payload = update.payload;
                if (typeof _payload === 'function') {
                  // Updater function
                  {
                    if (
                      debugRenderPhaseSideEffects ||
                      (debugRenderPhaseSideEffectsForStrictMode &&
                        workInProgress.mode & StrictMode)
                    ) {
                      _payload.call(instance, prevState, nextProps);
                    }
                  }
                  return _payload.call(instance, prevState, nextProps);
                }
                // State object
                return _payload;
              }
              case CaptureUpdate: {
                workInProgress.effectTag =
                  (workInProgress.effectTag & ~ShouldCapture) | DidCapture;
              }
              // Intentional fallthrough
              case UpdateState: {
                var _payload2 = update.payload;
                var partialState = void 0;
                if (typeof _payload2 === 'function') {
                  // Updater function
                  {
                    if (
                      debugRenderPhaseSideEffects ||
                      (debugRenderPhaseSideEffectsForStrictMode &&
                        workInProgress.mode & StrictMode)
                    ) {
                      _payload2.call(instance, prevState, nextProps);
                    }
                  }
                  partialState = _payload2.call(instance, prevState, nextProps);
                } else {
                  // Partial state object
                  partialState = _payload2;
                }
                if (partialState === null || partialState === undefined) {
                  // Null and undefined are treated as no-ops.
                  return prevState;
                }
                // Merge the partial state and the previous state.
                return _assign({}, prevState, partialState);
              }
              case ForceUpdate: {
                hasForceUpdate = true;
                return prevState;
              }
            }
            return prevState;
          }

          function processUpdateQueue(
            workInProgress,
            queue,
            props,
            instance,
            renderExpirationTime
          ) {
            hasForceUpdate = false;

            queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

            {
              currentlyProcessingQueue = queue;
            }

            // These values may change as we process the queue.
            var newBaseState = queue.baseState;
            var newFirstUpdate = null;
            var newExpirationTime = NoWork;

            // Iterate through the list of updates to compute the result.
            var update = queue.firstUpdate;
            var resultState = newBaseState;
            while (update !== null) {
              var updateExpirationTime = update.expirationTime;
              if (updateExpirationTime > renderExpirationTime) {
                // This update does not have sufficient priority. Skip it.
                if (newFirstUpdate === null) {
                  // This is the first skipped update. It will be the first update in
                  // the new list.
                  newFirstUpdate = update;
                  // Since this is the first update that was skipped, the current result
                  // is the new base state.
                  newBaseState = resultState;
                }
                // Since this update will remain in the list, update the remaining
                // expiration time.
                if (
                  newExpirationTime === NoWork ||
                  newExpirationTime > updateExpirationTime
                ) {
                  newExpirationTime = updateExpirationTime;
                }
              } else {
                // This update does have sufficient priority. Process it and compute
                // a new result.
                resultState = getStateFromUpdate(
                  workInProgress,
                  queue,
                  update,
                  resultState,
                  props,
                  instance
                );
                var _callback = update.callback;
                if (_callback !== null) {
                  workInProgress.effectTag |= Callback;
                  // Set this to null, in case it was mutated during an aborted render.
                  update.nextEffect = null;
                  if (queue.lastEffect === null) {
                    queue.firstEffect = queue.lastEffect = update;
                  } else {
                    queue.lastEffect.nextEffect = update;
                    queue.lastEffect = update;
                  }
                }
              }
              // Continue to the next update.
              update = update.next;
            }

            // Separately, iterate though the list of captured updates.
            var newFirstCapturedUpdate = null;
            update = queue.firstCapturedUpdate;
            while (update !== null) {
              var _updateExpirationTime = update.expirationTime;
              if (_updateExpirationTime > renderExpirationTime) {
                // This update does not have sufficient priority. Skip it.
                if (newFirstCapturedUpdate === null) {
                  // This is the first skipped captured update. It will be the first
                  // update in the new list.
                  newFirstCapturedUpdate = update;
                  // If this is the first update that was skipped, the current result is
                  // the new base state.
                  if (newFirstUpdate === null) {
                    newBaseState = resultState;
                  }
                }
                // Since this update will remain in the list, update the remaining
                // expiration time.
                if (
                  newExpirationTime === NoWork ||
                  newExpirationTime > _updateExpirationTime
                ) {
                  newExpirationTime = _updateExpirationTime;
                }
              } else {
                // This update does have sufficient priority. Process it and compute
                // a new result.
                resultState = getStateFromUpdate(
                  workInProgress,
                  queue,
                  update,
                  resultState,
                  props,
                  instance
                );
                var _callback2 = update.callback;
                if (_callback2 !== null) {
                  workInProgress.effectTag |= Callback;
                  // Set this to null, in case it was mutated during an aborted render.
                  update.nextEffect = null;
                  if (queue.lastCapturedEffect === null) {
                    queue.firstCapturedEffect = queue.lastCapturedEffect = update;
                  } else {
                    queue.lastCapturedEffect.nextEffect = update;
                    queue.lastCapturedEffect = update;
                  }
                }
              }
              update = update.next;
            }

            if (newFirstUpdate === null) {
              queue.lastUpdate = null;
            }
            if (newFirstCapturedUpdate === null) {
              queue.lastCapturedUpdate = null;
            } else {
              workInProgress.effectTag |= Callback;
            }
            if (newFirstUpdate === null && newFirstCapturedUpdate === null) {
              // We processed every update, without skipping. That means the new base
              // state is the same as the result state.
              newBaseState = resultState;
            }

            queue.baseState = newBaseState;
            queue.firstUpdate = newFirstUpdate;
            queue.firstCapturedUpdate = newFirstCapturedUpdate;

            // Set the remaining expiration time to be whatever is remaining in the queue.
            // This should be fine because the only two other things that contribute to
            // expiration time are props and context. We're already in the middle of the
            // begin phase by the time we start processing the queue, so we've already
            // dealt with the props. Context in components that specify
            // shouldComponentUpdate is tricky; but we'll have to account for
            // that regardless.
            workInProgress.expirationTime = newExpirationTime;
            workInProgress.memoizedState = resultState;

            {
              currentlyProcessingQueue = null;
            }
          }

          function callCallback(callback, context) {
            !(typeof callback === 'function')
              ? invariant(
                  false,
                  'Invalid argument passed as callback. Expected a function. Instead received: %s',
                  callback
                )
              : void 0;
            callback.call(context);
          }

          function resetHasForceUpdateBeforeProcessing() {
            hasForceUpdate = false;
          }

          function checkHasForceUpdateAfterProcessing() {
            return hasForceUpdate;
          }

          function commitUpdateQueue(
            finishedWork,
            finishedQueue,
            instance,
            renderExpirationTime
          ) {
            // If the finished render included captured updates, and there are still
            // lower priority updates left over, we need to keep the captured updates
            // in the queue so that they are rebased and not dropped once we process the
            // queue again at the lower priority.
            if (finishedQueue.firstCapturedUpdate !== null) {
              // Join the captured update list to the end of the normal list.
              if (finishedQueue.lastUpdate !== null) {
                finishedQueue.lastUpdate.next =
                  finishedQueue.firstCapturedUpdate;
                finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;
              }
              // Clear the list of captured updates.
              finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;
            }

            // Commit the effects
            commitUpdateEffects(finishedQueue.firstEffect, instance);
            finishedQueue.firstEffect = finishedQueue.lastEffect = null;

            commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
            finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
          }

          function commitUpdateEffects(effect, instance) {
            while (effect !== null) {
              var _callback3 = effect.callback;
              if (_callback3 !== null) {
                effect.callback = null;
                callCallback(_callback3, instance);
              }
              effect = effect.nextEffect;
            }
          }

          function createCapturedValue(value, source) {
            // If the value is an error, call this function immediately after it is thrown
            // so the stack is accurate.
            return {
              value: value,
              source: source,
              stack: getStackByFiberInDevAndProd(source)
            };
          }

          var valueCursor = createCursor(null);

          var rendererSigil = void 0;
          {
            // Use this to detect multiple renderers using the same context
            rendererSigil = {};
          }

          var currentlyRenderingFiber = null;
          var lastContextDependency = null;
          var lastContextWithAllBitsObserved = null;

          function resetContextDependences() {
            // This is called right before React yields execution, to ensure `readContext`
            // cannot be called outside the render phase.
            currentlyRenderingFiber = null;
            lastContextDependency = null;
            lastContextWithAllBitsObserved = null;
          }

          function pushProvider(providerFiber, nextValue) {
            var context = providerFiber.type._context;

            if (isPrimaryRenderer) {
              push(valueCursor, context._currentValue, providerFiber);

              context._currentValue = nextValue;
              {
                !(
                  context._currentRenderer === undefined ||
                  context._currentRenderer === null ||
                  context._currentRenderer === rendererSigil
                )
                  ? warningWithoutStack$1(
                      false,
                      'Detected multiple renderers concurrently rendering the ' +
                        'same context provider. This is currently unsupported.'
                    )
                  : void 0;
                context._currentRenderer = rendererSigil;
              }
            } else {
              push(valueCursor, context._currentValue2, providerFiber);

              context._currentValue2 = nextValue;
              {
                !(
                  context._currentRenderer2 === undefined ||
                  context._currentRenderer2 === null ||
                  context._currentRenderer2 === rendererSigil
                )
                  ? warningWithoutStack$1(
                      false,
                      'Detected multiple renderers concurrently rendering the ' +
                        'same context provider. This is currently unsupported.'
                    )
                  : void 0;
                context._currentRenderer2 = rendererSigil;
              }
            }
          }

          function popProvider(providerFiber) {
            var currentValue = valueCursor.current;

            pop(valueCursor, providerFiber);

            var context = providerFiber.type._context;
            if (isPrimaryRenderer) {
              context._currentValue = currentValue;
            } else {
              context._currentValue2 = currentValue;
            }
          }

          function calculateChangedBits(context, newValue, oldValue) {
            // Use Object.is to compare the new context value to the old value. Inlined
            // Object.is polyfill.
            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
            if (
              (oldValue === newValue &&
                (oldValue !== 0 || 1 / oldValue === 1 / newValue)) ||
              (oldValue !== oldValue && newValue !== newValue) // eslint-disable-line no-self-compare
            ) {
              // No change
              return 0;
            } else {
              var changedBits =
                typeof context._calculateChangedBits === 'function'
                  ? context._calculateChangedBits(oldValue, newValue)
                  : maxSigned31BitInt;

              {
                !((changedBits & maxSigned31BitInt) === changedBits)
                  ? warning$1(
                      false,
                      'calculateChangedBits: Expected the return value to be a ' +
                        '31-bit integer. Instead received: %s',
                      changedBits
                    )
                  : void 0;
              }
              return changedBits | 0;
            }
          }

          function propagateContextChange(
            workInProgress,
            context,
            changedBits,
            renderExpirationTime
          ) {
            var fiber = workInProgress.child;
            if (fiber !== null) {
              // Set the return pointer of the child to the work-in-progress fiber.
              fiber.return = workInProgress;
            }
            while (fiber !== null) {
              var nextFiber = void 0;

              // Visit this fiber.
              var dependency = fiber.firstContextDependency;
              if (dependency !== null) {
                do {
                  // Check if the context matches.
                  if (
                    dependency.context === context &&
                    (dependency.observedBits & changedBits) !== 0
                  ) {
                    // Match! Schedule an update on this fiber.

                    if (
                      fiber.tag === ClassComponent ||
                      fiber.tag === ClassComponentLazy
                    ) {
                      // Schedule a force update on the work-in-progress.
                      var update = createUpdate(renderExpirationTime);
                      update.tag = ForceUpdate;
                      // TODO: Because we don't have a work-in-progress, this will add the
                      // update to the current fiber, too, which means it will persist even if
                      // this render is thrown away. Since it's a race condition, not sure it's
                      // worth fixing.
                      enqueueUpdate(fiber, update);
                    }

                    if (
                      fiber.expirationTime === NoWork ||
                      fiber.expirationTime > renderExpirationTime
                    ) {
                      fiber.expirationTime = renderExpirationTime;
                    }
                    var alternate = fiber.alternate;
                    if (
                      alternate !== null &&
                      (alternate.expirationTime === NoWork ||
                        alternate.expirationTime > renderExpirationTime)
                    ) {
                      alternate.expirationTime = renderExpirationTime;
                    }
                    // Update the child expiration time of all the ancestors, including
                    // the alternates.
                    var node = fiber.return;
                    while (node !== null) {
                      alternate = node.alternate;
                      if (
                        node.childExpirationTime === NoWork ||
                        node.childExpirationTime > renderExpirationTime
                      ) {
                        node.childExpirationTime = renderExpirationTime;
                        if (
                          alternate !== null &&
                          (alternate.childExpirationTime === NoWork ||
                            alternate.childExpirationTime >
                              renderExpirationTime)
                        ) {
                          alternate.childExpirationTime = renderExpirationTime;
                        }
                      } else if (
                        alternate !== null &&
                        (alternate.childExpirationTime === NoWork ||
                          alternate.childExpirationTime > renderExpirationTime)
                      ) {
                        alternate.childExpirationTime = renderExpirationTime;
                      } else {
                        // Neither alternate was updated, which means the rest of the
                        // ancestor path already has sufficient priority.
                        break;
                      }
                      node = node.return;
                    }
                  }
                  nextFiber = fiber.child;
                  dependency = dependency.next;
                } while (dependency !== null);
              } else if (fiber.tag === ContextProvider) {
                // Don't scan deeper if this is a matching provider
                nextFiber =
                  fiber.type === workInProgress.type ? null : fiber.child;
              } else {
                // Traverse down.
                nextFiber = fiber.child;
              }

              if (nextFiber !== null) {
                // Set the return pointer of the child to the work-in-progress fiber.
                nextFiber.return = fiber;
              } else {
                // No child. Traverse to next sibling.
                nextFiber = fiber;
                while (nextFiber !== null) {
                  if (nextFiber === workInProgress) {
                    // We're back to the root of this subtree. Exit.
                    nextFiber = null;
                    break;
                  }
                  var sibling = nextFiber.sibling;
                  if (sibling !== null) {
                    // Set the return pointer of the sibling to the work-in-progress fiber.
                    sibling.return = nextFiber.return;
                    nextFiber = sibling;
                    break;
                  }
                  // No more siblings. Traverse up.
                  nextFiber = nextFiber.return;
                }
              }
              fiber = nextFiber;
            }
          }

          function prepareToReadContext(workInProgress, renderExpirationTime) {
            currentlyRenderingFiber = workInProgress;
            lastContextDependency = null;
            lastContextWithAllBitsObserved = null;

            // Reset the work-in-progress list
            workInProgress.firstContextDependency = null;
          }

          function readContext(context, observedBits) {
            if (lastContextWithAllBitsObserved === context) {
              // Nothing to do. We already observe everything in this context.
            } else if (observedBits === false || observedBits === 0) {
              // Do not observe any updates.
            } else {
              var resolvedObservedBits = void 0; // Avoid deopting on observable arguments or heterogeneous types.
              if (
                typeof observedBits !== 'number' ||
                observedBits === maxSigned31BitInt
              ) {
                // Observe all updates.
                lastContextWithAllBitsObserved = context;
                resolvedObservedBits = maxSigned31BitInt;
              } else {
                resolvedObservedBits = observedBits;
              }

              var contextItem = {
                context: context,
                observedBits: resolvedObservedBits,
                next: null
              };

              if (lastContextDependency === null) {
                !(currentlyRenderingFiber !== null)
                  ? invariant(
                      false,
                      'Context.unstable_read(): Context can only be read while React is rendering, e.g. inside the render method or getDerivedStateFromProps.'
                    )
                  : void 0;
                // This is the first dependency in the list
                currentlyRenderingFiber.firstContextDependency = lastContextDependency = contextItem;
              } else {
                // Append a new context item.
                lastContextDependency = lastContextDependency.next = contextItem;
              }
            }
            return isPrimaryRenderer
              ? context._currentValue
              : context._currentValue2;
          }

          var NO_CONTEXT = {};

          var contextStackCursor$1 = createCursor(NO_CONTEXT);
          var contextFiberStackCursor = createCursor(NO_CONTEXT);
          var rootInstanceStackCursor = createCursor(NO_CONTEXT);

          function requiredContext(c) {
            !(c !== NO_CONTEXT)
              ? invariant(
                  false,
                  'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.'
                )
              : void 0;
            return c;
          }

          function getRootHostContainer() {
            var rootInstance = requiredContext(rootInstanceStackCursor.current);
            return rootInstance;
          }

          function pushHostContainer(fiber, nextRootInstance) {
            // Push current root instance onto the stack;
            // This allows us to reset root when portals are popped.
            push(rootInstanceStackCursor, nextRootInstance, fiber);
            // Track the context and the Fiber that provided it.
            // This enables us to pop only Fibers that provide unique contexts.
            push(contextFiberStackCursor, fiber, fiber);

            // Finally, we need to push the host context to the stack.
            // However, we can't just call getRootHostContext() and push it because
            // we'd have a different number of entries on the stack depending on
            // whether getRootHostContext() throws somewhere in renderer code or not.
            // So we push an empty value first. This lets us safely unwind on errors.
            push(contextStackCursor$1, NO_CONTEXT, fiber);
            var nextRootContext = getRootHostContext(nextRootInstance);
            // Now that we know this function doesn't throw, replace it.
            pop(contextStackCursor$1, fiber);
            push(contextStackCursor$1, nextRootContext, fiber);
          }

          function popHostContainer(fiber) {
            pop(contextStackCursor$1, fiber);
            pop(contextFiberStackCursor, fiber);
            pop(rootInstanceStackCursor, fiber);
          }

          function getHostContext() {
            var context = requiredContext(contextStackCursor$1.current);
            return context;
          }

          function pushHostContext(fiber) {
            var rootInstance = requiredContext(rootInstanceStackCursor.current);
            var context = requiredContext(contextStackCursor$1.current);
            var nextContext = getChildHostContext(
              context,
              fiber.type,
              rootInstance
            );

            // Don't push this Fiber's context unless it's unique.
            if (context === nextContext) {
              return;
            }

            // Track the context and the Fiber that provided it.
            // This enables us to pop only Fibers that provide unique contexts.
            push(contextFiberStackCursor, fiber, fiber);
            push(contextStackCursor$1, nextContext, fiber);
          }

          function popHostContext(fiber) {
            // Do not pop unless this Fiber provided the current context.
            // pushHostContext() only pushes Fibers that provide unique contexts.
            if (contextFiberStackCursor.current !== fiber) {
              return;
            }

            pop(contextStackCursor$1, fiber);
            pop(contextFiberStackCursor, fiber);
          }

          var commitTime = 0;
          var profilerStartTime = -1;

          function getCommitTime() {
            return commitTime;
          }

          function recordCommitTime() {
            if (!enableProfilerTimer) {
              return;
            }
            commitTime = schedule.unstable_now();
          }

          function startProfilerTimer(fiber) {
            if (!enableProfilerTimer) {
              return;
            }

            profilerStartTime = schedule.unstable_now();

            if (fiber.actualStartTime < 0) {
              fiber.actualStartTime = schedule.unstable_now();
            }
          }

          function stopProfilerTimerIfRunning(fiber) {
            if (!enableProfilerTimer) {
              return;
            }
            profilerStartTime = -1;
          }

          function stopProfilerTimerIfRunningAndRecordDelta(
            fiber,
            overrideBaseTime
          ) {
            if (!enableProfilerTimer) {
              return;
            }

            if (profilerStartTime >= 0) {
              var elapsedTime = schedule.unstable_now() - profilerStartTime;
              fiber.actualDuration += elapsedTime;
              if (overrideBaseTime) {
                fiber.selfBaseDuration = elapsedTime;
              }
              profilerStartTime = -1;
            }
          }

          var fakeInternalInstance = {};
          var isArray = Array.isArray;

          // React.Component uses a shared frozen object by default.
          // We'll use it to determine whether we need to initialize legacy refs.
          var emptyRefsObject = new React.Component().refs;

          var didWarnAboutStateAssignmentForComponent = void 0;
          var didWarnAboutUninitializedState = void 0;
          var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = void 0;
          var didWarnAboutLegacyLifecyclesAndDerivedState = void 0;
          var didWarnAboutUndefinedDerivedState = void 0;
          var warnOnUndefinedDerivedState = void 0;
          var warnOnInvalidCallback$1 = void 0;
          var didWarnAboutDirectlyAssigningPropsToState = void 0;

          {
            didWarnAboutStateAssignmentForComponent = new Set();
            didWarnAboutUninitializedState = new Set();
            didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
            didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
            didWarnAboutDirectlyAssigningPropsToState = new Set();
            didWarnAboutUndefinedDerivedState = new Set();

            var didWarnOnInvalidCallback = new Set();

            warnOnInvalidCallback$1 = function(callback, callerName) {
              if (callback === null || typeof callback === 'function') {
                return;
              }
              var key = callerName + '_' + callback;
              if (!didWarnOnInvalidCallback.has(key)) {
                didWarnOnInvalidCallback.add(key);
                warningWithoutStack$1(
                  false,
                  '%s(...): Expected the last optional `callback` argument to be a ' +
                    'function. Instead received: %s.',
                  callerName,
                  callback
                );
              }
            };

            warnOnUndefinedDerivedState = function(type, partialState) {
              if (partialState === undefined) {
                var componentName = getComponentName(type) || 'Component';
                if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                  didWarnAboutUndefinedDerivedState.add(componentName);
                  warningWithoutStack$1(
                    false,
                    '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' +
                      'You have returned undefined.',
                    componentName
                  );
                }
              }
            };

            // This is so gross but it's at least non-critical and can be removed if
            // it causes problems. This is meant to give a nicer error message for
            // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
            // ...)) which otherwise throws a "_processChildContext is not a function"
            // exception.
            Object.defineProperty(
              fakeInternalInstance,
              '_processChildContext',
              {
                enumerable: false,
                value: function() {
                  invariant(
                    false,
                    "_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal)."
                  );
                }
              }
            );
            Object.freeze(fakeInternalInstance);
          }

          function applyDerivedStateFromProps(
            workInProgress,
            ctor,
            getDerivedStateFromProps,
            nextProps
          ) {
            var prevState = workInProgress.memoizedState;

            {
              if (
                debugRenderPhaseSideEffects ||
                (debugRenderPhaseSideEffectsForStrictMode &&
                  workInProgress.mode & StrictMode)
              ) {
                // Invoke the function an extra time to help detect side-effects.
                getDerivedStateFromProps(nextProps, prevState);
              }
            }

            var partialState = getDerivedStateFromProps(nextProps, prevState);

            {
              warnOnUndefinedDerivedState(ctor, partialState);
            }
            // Merge the partial state and the previous state.
            var memoizedState =
              partialState === null || partialState === undefined
                ? prevState
                : _assign({}, prevState, partialState);
            workInProgress.memoizedState = memoizedState;

            // Once the update queue is empty, persist the derived state onto the
            // base state.
            var updateQueue = workInProgress.updateQueue;
            if (
              updateQueue !== null &&
              workInProgress.expirationTime === NoWork
            ) {
              updateQueue.baseState = memoizedState;
            }
          }

          var classComponentUpdater = {
            isMounted: isMounted,
            enqueueSetState: function(inst, payload, callback) {
              var fiber = get(inst);
              var currentTime = requestCurrentTime();
              var expirationTime = computeExpirationForFiber(
                currentTime,
                fiber
              );

              var update = createUpdate(expirationTime);
              update.payload = payload;
              if (callback !== undefined && callback !== null) {
                {
                  warnOnInvalidCallback$1(callback, 'setState');
                }
                update.callback = callback;
              }

              enqueueUpdate(fiber, update);
              scheduleWork(fiber, expirationTime);
            },
            enqueueReplaceState: function(inst, payload, callback) {
              var fiber = get(inst);
              var currentTime = requestCurrentTime();
              var expirationTime = computeExpirationForFiber(
                currentTime,
                fiber
              );

              var update = createUpdate(expirationTime);
              update.tag = ReplaceState;
              update.payload = payload;

              if (callback !== undefined && callback !== null) {
                {
                  warnOnInvalidCallback$1(callback, 'replaceState');
                }
                update.callback = callback;
              }

              enqueueUpdate(fiber, update);
              scheduleWork(fiber, expirationTime);
            },
            enqueueForceUpdate: function(inst, callback) {
              var fiber = get(inst);
              var currentTime = requestCurrentTime();
              var expirationTime = computeExpirationForFiber(
                currentTime,
                fiber
              );

              var update = createUpdate(expirationTime);
              update.tag = ForceUpdate;

              if (callback !== undefined && callback !== null) {
                {
                  warnOnInvalidCallback$1(callback, 'forceUpdate');
                }
                update.callback = callback;
              }

              enqueueUpdate(fiber, update);
              scheduleWork(fiber, expirationTime);
            }
          };

          function checkShouldComponentUpdate(
            workInProgress,
            ctor,
            oldProps,
            newProps,
            oldState,
            newState,
            nextLegacyContext
          ) {
            var instance = workInProgress.stateNode;
            if (typeof instance.shouldComponentUpdate === 'function') {
              startPhaseTimer(workInProgress, 'shouldComponentUpdate');
              var shouldUpdate = instance.shouldComponentUpdate(
                newProps,
                newState,
                nextLegacyContext
              );
              stopPhaseTimer();

              {
                !(shouldUpdate !== undefined)
                  ? warningWithoutStack$1(
                      false,
                      '%s.shouldComponentUpdate(): Returned undefined instead of a ' +
                        'boolean value. Make sure to return true or false.',
                      getComponentName(ctor) || 'Component'
                    )
                  : void 0;
              }

              return shouldUpdate;
            }

            if (ctor.prototype && ctor.prototype.isPureReactComponent) {
              return (
                !shallowEqual(oldProps, newProps) ||
                !shallowEqual(oldState, newState)
              );
            }

            return true;
          }

          function checkClassInstance(workInProgress, ctor, newProps) {
            var instance = workInProgress.stateNode;
            {
              var name = getComponentName(ctor) || 'Component';
              var renderPresent = instance.render;

              if (!renderPresent) {
                if (
                  ctor.prototype &&
                  typeof ctor.prototype.render === 'function'
                ) {
                  warningWithoutStack$1(
                    false,
                    '%s(...): No `render` method found on the returned component ' +
                      'instance: did you accidentally return an object from the constructor?',
                    name
                  );
                } else {
                  warningWithoutStack$1(
                    false,
                    '%s(...): No `render` method found on the returned component ' +
                      'instance: you may have forgotten to define `render`.',
                    name
                  );
                }
              }

              var noGetInitialStateOnES6 =
                !instance.getInitialState ||
                instance.getInitialState.isReactClassApproved ||
                instance.state;
              !noGetInitialStateOnES6
                ? warningWithoutStack$1(
                    false,
                    'getInitialState was defined on %s, a plain JavaScript class. ' +
                      'This is only supported for classes created using React.createClass. ' +
                      'Did you mean to define a state property instead?',
                    name
                  )
                : void 0;
              var noGetDefaultPropsOnES6 =
                !instance.getDefaultProps ||
                instance.getDefaultProps.isReactClassApproved;
              !noGetDefaultPropsOnES6
                ? warningWithoutStack$1(
                    false,
                    'getDefaultProps was defined on %s, a plain JavaScript class. ' +
                      'This is only supported for classes created using React.createClass. ' +
                      'Use a static property to define defaultProps instead.',
                    name
                  )
                : void 0;
              var noInstancePropTypes = !instance.propTypes;
              !noInstancePropTypes
                ? warningWithoutStack$1(
                    false,
                    'propTypes was defined as an instance property on %s. Use a static ' +
                      'property to define propTypes instead.',
                    name
                  )
                : void 0;
              var noInstanceContextTypes = !instance.contextTypes;
              !noInstanceContextTypes
                ? warningWithoutStack$1(
                    false,
                    'contextTypes was defined as an instance property on %s. Use a static ' +
                      'property to define contextTypes instead.',
                    name
                  )
                : void 0;
              var noComponentShouldUpdate =
                typeof instance.componentShouldUpdate !== 'function';
              !noComponentShouldUpdate
                ? warningWithoutStack$1(
                    false,
                    '%s has a method called ' +
                      'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
                      'The name is phrased as a question because the function is ' +
                      'expected to return a value.',
                    name
                  )
                : void 0;
              if (
                ctor.prototype &&
                ctor.prototype.isPureReactComponent &&
                typeof instance.shouldComponentUpdate !== 'undefined'
              ) {
                warningWithoutStack$1(
                  false,
                  '%s has a method called shouldComponentUpdate(). ' +
                    'shouldComponentUpdate should not be used when extending React.PureComponent. ' +
                    'Please extend React.Component if shouldComponentUpdate is used.',
                  getComponentName(ctor) || 'A pure component'
                );
              }
              var noComponentDidUnmount =
                typeof instance.componentDidUnmount !== 'function';
              !noComponentDidUnmount
                ? warningWithoutStack$1(
                    false,
                    '%s has a method called ' +
                      'componentDidUnmount(). But there is no such lifecycle method. ' +
                      'Did you mean componentWillUnmount()?',
                    name
                  )
                : void 0;
              var noComponentDidReceiveProps =
                typeof instance.componentDidReceiveProps !== 'function';
              !noComponentDidReceiveProps
                ? warningWithoutStack$1(
                    false,
                    '%s has a method called ' +
                      'componentDidReceiveProps(). But there is no such lifecycle method. ' +
                      'If you meant to update the state in response to changing props, ' +
                      'use componentWillReceiveProps(). If you meant to fetch data or ' +
                      'run side-effects or mutations after React has updated the UI, use componentDidUpdate().',
                    name
                  )
                : void 0;
              var noComponentWillRecieveProps =
                typeof instance.componentWillRecieveProps !== 'function';
              !noComponentWillRecieveProps
                ? warningWithoutStack$1(
                    false,
                    '%s has a method called ' +
                      'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
                    name
                  )
                : void 0;
              var noUnsafeComponentWillRecieveProps =
                typeof instance.UNSAFE_componentWillRecieveProps !== 'function';
              !noUnsafeComponentWillRecieveProps
                ? warningWithoutStack$1(
                    false,
                    '%s has a method called ' +
                      'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',
                    name
                  )
                : void 0;
              var hasMutatedProps = instance.props !== newProps;
              !(instance.props === undefined || !hasMutatedProps)
                ? warningWithoutStack$1(
                    false,
                    '%s(...): When calling super() in `%s`, make sure to pass ' +
                      "up the same props that your component's constructor was passed.",
                    name,
                    name
                  )
                : void 0;
              var noInstanceDefaultProps = !instance.defaultProps;
              !noInstanceDefaultProps
                ? warningWithoutStack$1(
                    false,
                    'Setting defaultProps as an instance property on %s is not supported and will be ignored.' +
                      ' Instead, define defaultProps as a static property on %s.',
                    name,
                    name
                  )
                : void 0;

              if (
                typeof instance.getSnapshotBeforeUpdate === 'function' &&
                typeof instance.componentDidUpdate !== 'function' &&
                !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)
              ) {
                didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
                warningWithoutStack$1(
                  false,
                  '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' +
                    'This component defines getSnapshotBeforeUpdate() only.',
                  getComponentName(ctor)
                );
              }

              var noInstanceGetDerivedStateFromProps =
                typeof instance.getDerivedStateFromProps !== 'function';
              !noInstanceGetDerivedStateFromProps
                ? warningWithoutStack$1(
                    false,
                    '%s: getDerivedStateFromProps() is defined as an instance method ' +
                      'and will be ignored. Instead, declare it as a static method.',
                    name
                  )
                : void 0;
              var noInstanceGetDerivedStateFromCatch =
                typeof instance.getDerivedStateFromCatch !== 'function';
              !noInstanceGetDerivedStateFromCatch
                ? warningWithoutStack$1(
                    false,
                    '%s: getDerivedStateFromCatch() is defined as an instance method ' +
                      'and will be ignored. Instead, declare it as a static method.',
                    name
                  )
                : void 0;
              var noStaticGetSnapshotBeforeUpdate =
                typeof ctor.getSnapshotBeforeUpdate !== 'function';
              !noStaticGetSnapshotBeforeUpdate
                ? warningWithoutStack$1(
                    false,
                    '%s: getSnapshotBeforeUpdate() is defined as a static method ' +
                      'and will be ignored. Instead, declare it as an instance method.',
                    name
                  )
                : void 0;
              var _state = instance.state;
              if (_state && (typeof _state !== 'object' || isArray(_state))) {
                warningWithoutStack$1(
                  false,
                  '%s.state: must be set to an object or null',
                  name
                );
              }
              if (typeof instance.getChildContext === 'function') {
                !(typeof ctor.childContextTypes === 'object')
                  ? warningWithoutStack$1(
                      false,
                      '%s.getChildContext(): childContextTypes must be defined in order to ' +
                        'use getChildContext().',
                      name
                    )
                  : void 0;
              }
            }
          }

          function adoptClassInstance(workInProgress, instance) {
            instance.updater = classComponentUpdater;
            workInProgress.stateNode = instance;
            // The instance needs access to the fiber so that it can schedule updates
            set(instance, workInProgress);
            {
              instance._reactInternalInstance = fakeInternalInstance;
            }
          }

          function constructClassInstance(
            workInProgress,
            ctor,
            props,
            renderExpirationTime
          ) {
            var unmaskedContext = getUnmaskedContext(
              workInProgress,
              ctor,
              true
            );
            var contextTypes = ctor.contextTypes;
            var isContextConsumer =
              contextTypes !== null && contextTypes !== undefined;
            var context = isContextConsumer
              ? getMaskedContext(workInProgress, unmaskedContext)
              : emptyContextObject;

            // Instantiate twice to help detect side-effects.
            {
              if (
                debugRenderPhaseSideEffects ||
                (debugRenderPhaseSideEffectsForStrictMode &&
                  workInProgress.mode & StrictMode)
              ) {
                new ctor(props, context); // eslint-disable-line no-new
              }
            }

            var instance = new ctor(props, context);
            var state = (workInProgress.memoizedState =
              instance.state !== null && instance.state !== undefined
                ? instance.state
                : null);
            adoptClassInstance(workInProgress, instance);

            {
              if (
                typeof ctor.getDerivedStateFromProps === 'function' &&
                state === null
              ) {
                var componentName = getComponentName(ctor) || 'Component';
                if (!didWarnAboutUninitializedState.has(componentName)) {
                  didWarnAboutUninitializedState.add(componentName);
                  warningWithoutStack$1(
                    false,
                    '`%s` uses `getDerivedStateFromProps` but its initial state is ' +
                      '%s. This is not recommended. Instead, define the initial state by ' +
                      'assigning an object to `this.state` in the constructor of `%s`. ' +
                      'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',
                    componentName,
                    instance.state === null ? 'null' : 'undefined',
                    componentName
                  );
                }
              }

              // If new component APIs are defined, "unsafe" lifecycles won't be called.
              // Warn about these lifecycles if they are present.
              // Don't warn about react-lifecycles-compat polyfilled methods though.
              if (
                typeof ctor.getDerivedStateFromProps === 'function' ||
                typeof instance.getSnapshotBeforeUpdate === 'function'
              ) {
                var foundWillMountName = null;
                var foundWillReceivePropsName = null;
                var foundWillUpdateName = null;
                if (
                  typeof instance.componentWillMount === 'function' &&
                  instance.componentWillMount.__suppressDeprecationWarning !==
                    true
                ) {
                  foundWillMountName = 'componentWillMount';
                } else if (
                  typeof instance.UNSAFE_componentWillMount === 'function'
                ) {
                  foundWillMountName = 'UNSAFE_componentWillMount';
                }
                if (
                  typeof instance.componentWillReceiveProps === 'function' &&
                  instance.componentWillReceiveProps
                    .__suppressDeprecationWarning !== true
                ) {
                  foundWillReceivePropsName = 'componentWillReceiveProps';
                } else if (
                  typeof instance.UNSAFE_componentWillReceiveProps ===
                  'function'
                ) {
                  foundWillReceivePropsName =
                    'UNSAFE_componentWillReceiveProps';
                }
                if (
                  typeof instance.componentWillUpdate === 'function' &&
                  instance.componentWillUpdate.__suppressDeprecationWarning !==
                    true
                ) {
                  foundWillUpdateName = 'componentWillUpdate';
                } else if (
                  typeof instance.UNSAFE_componentWillUpdate === 'function'
                ) {
                  foundWillUpdateName = 'UNSAFE_componentWillUpdate';
                }
                if (
                  foundWillMountName !== null ||
                  foundWillReceivePropsName !== null ||
                  foundWillUpdateName !== null
                ) {
                  var _componentName = getComponentName(ctor) || 'Component';
                  var newApiName =
                    typeof ctor.getDerivedStateFromProps === 'function'
                      ? 'getDerivedStateFromProps()'
                      : 'getSnapshotBeforeUpdate()';
                  if (
                    !didWarnAboutLegacyLifecyclesAndDerivedState.has(
                      _componentName
                    )
                  ) {
                    didWarnAboutLegacyLifecyclesAndDerivedState.add(
                      _componentName
                    );
                    warningWithoutStack$1(
                      false,
                      'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
                        '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' +
                        'The above lifecycles should be removed. Learn more about this warning here:\n' +
                        'https://fb.me/react-async-component-lifecycle-hooks',
                      _componentName,
                      newApiName,
                      foundWillMountName !== null
                        ? '\n  ' + foundWillMountName
                        : '',
                      foundWillReceivePropsName !== null
                        ? '\n  ' + foundWillReceivePropsName
                        : '',
                      foundWillUpdateName !== null
                        ? '\n  ' + foundWillUpdateName
                        : ''
                    );
                  }
                }
              }
            }

            // Cache unmasked context so we can avoid recreating masked context unless necessary.
            // ReactFiberContext usually updates this cache but can't for newly-created instances.
            if (isContextConsumer) {
              cacheContext(workInProgress, unmaskedContext, context);
            }

            return instance;
          }

          function callComponentWillMount(workInProgress, instance) {
            startPhaseTimer(workInProgress, 'componentWillMount');
            var oldState = instance.state;

            if (typeof instance.componentWillMount === 'function') {
              instance.componentWillMount();
            }
            if (typeof instance.UNSAFE_componentWillMount === 'function') {
              instance.UNSAFE_componentWillMount();
            }

            stopPhaseTimer();

            if (oldState !== instance.state) {
              {
                warningWithoutStack$1(
                  false,
                  '%s.componentWillMount(): Assigning directly to this.state is ' +
                    "deprecated (except inside a component's " +
                    'constructor). Use setState instead.',
                  getComponentName(workInProgress.type) || 'Component'
                );
              }
              classComponentUpdater.enqueueReplaceState(
                instance,
                instance.state,
                null
              );
            }
          }

          function callComponentWillReceiveProps(
            workInProgress,
            instance,
            newProps,
            nextLegacyContext
          ) {
            var oldState = instance.state;
            startPhaseTimer(workInProgress, 'componentWillReceiveProps');
            if (typeof instance.componentWillReceiveProps === 'function') {
              instance.componentWillReceiveProps(newProps, nextLegacyContext);
            }
            if (
              typeof instance.UNSAFE_componentWillReceiveProps === 'function'
            ) {
              instance.UNSAFE_componentWillReceiveProps(
                newProps,
                nextLegacyContext
              );
            }
            stopPhaseTimer();

            if (instance.state !== oldState) {
              {
                var componentName =
                  getComponentName(workInProgress.type) || 'Component';
                if (
                  !didWarnAboutStateAssignmentForComponent.has(componentName)
                ) {
                  didWarnAboutStateAssignmentForComponent.add(componentName);
                  warningWithoutStack$1(
                    false,
                    '%s.componentWillReceiveProps(): Assigning directly to ' +
                      "this.state is deprecated (except inside a component's " +
                      'constructor). Use setState instead.',
                    componentName
                  );
                }
              }
              classComponentUpdater.enqueueReplaceState(
                instance,
                instance.state,
                null
              );
            }
          }

          // Invokes the mount life-cycles on a previously never rendered instance.
          function mountClassInstance(
            workInProgress,
            ctor,
            newProps,
            renderExpirationTime
          ) {
            {
              checkClassInstance(workInProgress, ctor, newProps);
            }

            var instance = workInProgress.stateNode;
            var unmaskedContext = getUnmaskedContext(
              workInProgress,
              ctor,
              true
            );

            instance.props = newProps;
            instance.state = workInProgress.memoizedState;
            instance.refs = emptyRefsObject;
            instance.context = getMaskedContext(
              workInProgress,
              unmaskedContext
            );

            {
              if (instance.state === newProps) {
                var componentName = getComponentName(ctor) || 'Component';
                if (
                  !didWarnAboutDirectlyAssigningPropsToState.has(componentName)
                ) {
                  didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                  warningWithoutStack$1(
                    false,
                    '%s: It is not recommended to assign props directly to state ' +
                      "because updates to props won't be reflected in state. " +
                      'In most cases, it is better to use props directly.',
                    componentName
                  );
                }
              }

              if (workInProgress.mode & StrictMode) {
                ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(
                  workInProgress,
                  instance
                );

                ReactStrictModeWarnings.recordLegacyContextWarning(
                  workInProgress,
                  instance
                );
              }

              if (warnAboutDeprecatedLifecycles) {
                ReactStrictModeWarnings.recordDeprecationWarnings(
                  workInProgress,
                  instance
                );
              }
            }

            var updateQueue = workInProgress.updateQueue;
            if (updateQueue !== null) {
              processUpdateQueue(
                workInProgress,
                updateQueue,
                newProps,
                instance,
                renderExpirationTime
              );
              instance.state = workInProgress.memoizedState;
            }

            var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
            if (typeof getDerivedStateFromProps === 'function') {
              applyDerivedStateFromProps(
                workInProgress,
                ctor,
                getDerivedStateFromProps,
                newProps
              );
              instance.state = workInProgress.memoizedState;
            }

            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (
              typeof ctor.getDerivedStateFromProps !== 'function' &&
              typeof instance.getSnapshotBeforeUpdate !== 'function' &&
              (typeof instance.UNSAFE_componentWillMount === 'function' ||
                typeof instance.componentWillMount === 'function')
            ) {
              callComponentWillMount(workInProgress, instance);
              // If we had additional state updates during this life-cycle, let's
              // process them now.
              updateQueue = workInProgress.updateQueue;
              if (updateQueue !== null) {
                processUpdateQueue(
                  workInProgress,
                  updateQueue,
                  newProps,
                  instance,
                  renderExpirationTime
                );
                instance.state = workInProgress.memoizedState;
              }
            }

            if (typeof instance.componentDidMount === 'function') {
              workInProgress.effectTag |= Update;
            }
          }

          function resumeMountClassInstance(
            workInProgress,
            ctor,
            newProps,
            renderExpirationTime
          ) {
            var instance = workInProgress.stateNode;

            var oldProps = workInProgress.memoizedProps;
            instance.props = oldProps;

            var oldContext = instance.context;
            var nextLegacyUnmaskedContext = getUnmaskedContext(
              workInProgress,
              ctor,
              true
            );
            var nextLegacyContext = getMaskedContext(
              workInProgress,
              nextLegacyUnmaskedContext
            );

            var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
            var hasNewLifecycles =
              typeof getDerivedStateFromProps === 'function' ||
              typeof instance.getSnapshotBeforeUpdate === 'function';

            // Note: During these life-cycles, instance.props/instance.state are what
            // ever the previously attempted to render - not the "current". However,
            // during componentDidUpdate we pass the "current" props.

            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (
              !hasNewLifecycles &&
              (typeof instance.UNSAFE_componentWillReceiveProps ===
                'function' ||
                typeof instance.componentWillReceiveProps === 'function')
            ) {
              if (oldProps !== newProps || oldContext !== nextLegacyContext) {
                callComponentWillReceiveProps(
                  workInProgress,
                  instance,
                  newProps,
                  nextLegacyContext
                );
              }
            }

            resetHasForceUpdateBeforeProcessing();

            var oldState = workInProgress.memoizedState;
            var newState = (instance.state = oldState);
            var updateQueue = workInProgress.updateQueue;
            if (updateQueue !== null) {
              processUpdateQueue(
                workInProgress,
                updateQueue,
                newProps,
                instance,
                renderExpirationTime
              );
              newState = workInProgress.memoizedState;
            }
            if (
              oldProps === newProps &&
              oldState === newState &&
              !hasContextChanged() &&
              !checkHasForceUpdateAfterProcessing()
            ) {
              // If an update was already in progress, we should schedule an Update
              // effect even though we're bailing out, so that cWU/cDU are called.
              if (typeof instance.componentDidMount === 'function') {
                workInProgress.effectTag |= Update;
              }
              return false;
            }

            if (typeof getDerivedStateFromProps === 'function') {
              applyDerivedStateFromProps(
                workInProgress,
                ctor,
                getDerivedStateFromProps,
                newProps
              );
              newState = workInProgress.memoizedState;
            }

            var shouldUpdate =
              checkHasForceUpdateAfterProcessing() ||
              checkShouldComponentUpdate(
                workInProgress,
                ctor,
                oldProps,
                newProps,
                oldState,
                newState,
                nextLegacyContext
              );

            if (shouldUpdate) {
              // In order to support react-lifecycles-compat polyfilled components,
              // Unsafe lifecycles should not be invoked for components using the new APIs.
              if (
                !hasNewLifecycles &&
                (typeof instance.UNSAFE_componentWillMount === 'function' ||
                  typeof instance.componentWillMount === 'function')
              ) {
                startPhaseTimer(workInProgress, 'componentWillMount');
                if (typeof instance.componentWillMount === 'function') {
                  instance.componentWillMount();
                }
                if (typeof instance.UNSAFE_componentWillMount === 'function') {
                  instance.UNSAFE_componentWillMount();
                }
                stopPhaseTimer();
              }
              if (typeof instance.componentDidMount === 'function') {
                workInProgress.effectTag |= Update;
              }
            } else {
              // If an update was already in progress, we should schedule an Update
              // effect even though we're bailing out, so that cWU/cDU are called.
              if (typeof instance.componentDidMount === 'function') {
                workInProgress.effectTag |= Update;
              }

              // If shouldComponentUpdate returned false, we should still update the
              // memoized state to indicate that this work can be reused.
              workInProgress.memoizedProps = newProps;
              workInProgress.memoizedState = newState;
            }

            // Update the existing instance's state, props, and context pointers even
            // if shouldComponentUpdate returns false.
            instance.props = newProps;
            instance.state = newState;
            instance.context = nextLegacyContext;

            return shouldUpdate;
          }

          // Invokes the update life-cycles and returns false if it shouldn't rerender.
          function updateClassInstance(
            current,
            workInProgress,
            ctor,
            newProps,
            renderExpirationTime
          ) {
            var instance = workInProgress.stateNode;

            var oldProps = workInProgress.memoizedProps;
            instance.props = oldProps;

            var oldContext = instance.context;
            var nextLegacyUnmaskedContext = getUnmaskedContext(
              workInProgress,
              ctor,
              true
            );
            var nextLegacyContext = getMaskedContext(
              workInProgress,
              nextLegacyUnmaskedContext
            );

            var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
            var hasNewLifecycles =
              typeof getDerivedStateFromProps === 'function' ||
              typeof instance.getSnapshotBeforeUpdate === 'function';

            // Note: During these life-cycles, instance.props/instance.state are what
            // ever the previously attempted to render - not the "current". However,
            // during componentDidUpdate we pass the "current" props.

            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (
              !hasNewLifecycles &&
              (typeof instance.UNSAFE_componentWillReceiveProps ===
                'function' ||
                typeof instance.componentWillReceiveProps === 'function')
            ) {
              if (oldProps !== newProps || oldContext !== nextLegacyContext) {
                callComponentWillReceiveProps(
                  workInProgress,
                  instance,
                  newProps,
                  nextLegacyContext
                );
              }
            }

            resetHasForceUpdateBeforeProcessing();

            var oldState = workInProgress.memoizedState;
            var newState = (instance.state = oldState);
            var updateQueue = workInProgress.updateQueue;
            if (updateQueue !== null) {
              processUpdateQueue(
                workInProgress,
                updateQueue,
                newProps,
                instance,
                renderExpirationTime
              );
              newState = workInProgress.memoizedState;
            }

            if (
              oldProps === newProps &&
              oldState === newState &&
              !hasContextChanged() &&
              !checkHasForceUpdateAfterProcessing()
            ) {
              // If an update was already in progress, we should schedule an Update
              // effect even though we're bailing out, so that cWU/cDU are called.
              if (typeof instance.componentDidUpdate === 'function') {
                if (
                  oldProps !== current.memoizedProps ||
                  oldState !== current.memoizedState
                ) {
                  workInProgress.effectTag |= Update;
                }
              }
              if (typeof instance.getSnapshotBeforeUpdate === 'function') {
                if (
                  oldProps !== current.memoizedProps ||
                  oldState !== current.memoizedState
                ) {
                  workInProgress.effectTag |= Snapshot;
                }
              }
              return false;
            }

            if (typeof getDerivedStateFromProps === 'function') {
              applyDerivedStateFromProps(
                workInProgress,
                ctor,
                getDerivedStateFromProps,
                newProps
              );
              newState = workInProgress.memoizedState;
            }

            var shouldUpdate =
              checkHasForceUpdateAfterProcessing() ||
              checkShouldComponentUpdate(
                workInProgress,
                ctor,
                oldProps,
                newProps,
                oldState,
                newState,
                nextLegacyContext
              );

            if (shouldUpdate) {
              // In order to support react-lifecycles-compat polyfilled components,
              // Unsafe lifecycles should not be invoked for components using the new APIs.
              if (
                !hasNewLifecycles &&
                (typeof instance.UNSAFE_componentWillUpdate === 'function' ||
                  typeof instance.componentWillUpdate === 'function')
              ) {
                startPhaseTimer(workInProgress, 'componentWillUpdate');
                if (typeof instance.componentWillUpdate === 'function') {
                  instance.componentWillUpdate(
                    newProps,
                    newState,
                    nextLegacyContext
                  );
                }
                if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
                  instance.UNSAFE_componentWillUpdate(
                    newProps,
                    newState,
                    nextLegacyContext
                  );
                }
                stopPhaseTimer();
              }
              if (typeof instance.componentDidUpdate === 'function') {
                workInProgress.effectTag |= Update;
              }
              if (typeof instance.getSnapshotBeforeUpdate === 'function') {
                workInProgress.effectTag |= Snapshot;
              }
            } else {
              // If an update was already in progress, we should schedule an Update
              // effect even though we're bailing out, so that cWU/cDU are called.
              if (typeof instance.componentDidUpdate === 'function') {
                if (
                  oldProps !== current.memoizedProps ||
                  oldState !== current.memoizedState
                ) {
                  workInProgress.effectTag |= Update;
                }
              }
              if (typeof instance.getSnapshotBeforeUpdate === 'function') {
                if (
                  oldProps !== current.memoizedProps ||
                  oldState !== current.memoizedState
                ) {
                  workInProgress.effectTag |= Snapshot;
                }
              }

              // If shouldComponentUpdate returned false, we should still update the
              // memoized props/state to indicate that this work can be reused.
              workInProgress.memoizedProps = newProps;
              workInProgress.memoizedState = newState;
            }

            // Update the existing instance's state, props, and context pointers even
            // if shouldComponentUpdate returns false.
            instance.props = newProps;
            instance.state = newState;
            instance.context = nextLegacyContext;

            return shouldUpdate;
          }

          var didWarnAboutMaps = void 0;
          var didWarnAboutGenerators = void 0;
          var didWarnAboutStringRefInStrictMode = void 0;
          var ownerHasKeyUseWarning = void 0;
          var ownerHasFunctionTypeWarning = void 0;
          var warnForMissingKey = function(child) {};

          {
            didWarnAboutMaps = false;
            didWarnAboutGenerators = false;
            didWarnAboutStringRefInStrictMode = {};

            /**
             * Warn if there's no key explicitly set on dynamic arrays of children or
             * object keys are not valid. This allows us to keep track of children between
             * updates.
             */
            ownerHasKeyUseWarning = {};
            ownerHasFunctionTypeWarning = {};

            warnForMissingKey = function(child) {
              if (child === null || typeof child !== 'object') {
                return;
              }
              if (
                !child._store ||
                child._store.validated ||
                child.key != null
              ) {
                return;
              }
              !(typeof child._store === 'object')
                ? invariant(
                    false,
                    'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.'
                  )
                : void 0;
              child._store.validated = true;

              var currentComponentErrorInfo =
                'Each child in an array or iterator should have a unique ' +
                '"key" prop. See https://fb.me/react-warning-keys for ' +
                'more information.' +
                getCurrentFiberStackInDev();
              if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
                return;
              }
              ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

              warning$1(
                false,
                'Each child in an array or iterator should have a unique ' +
                  '"key" prop. See https://fb.me/react-warning-keys for ' +
                  'more information.'
              );
            };
          }

          var isArray$1 = Array.isArray;

          function coerceRef(returnFiber, current$$1, element) {
            var mixedRef = element.ref;
            if (
              mixedRef !== null &&
              typeof mixedRef !== 'function' &&
              typeof mixedRef !== 'object'
            ) {
              {
                if (returnFiber.mode & StrictMode) {
                  var componentName =
                    getComponentName(returnFiber.type) || 'Component';
                  if (!didWarnAboutStringRefInStrictMode[componentName]) {
                    warningWithoutStack$1(
                      false,
                      'A string ref, "%s", has been found within a strict mode tree. ' +
                        'String refs are a source of potential bugs and should be avoided. ' +
                        'We recommend using createRef() instead.' +
                        '\n%s' +
                        '\n\nLearn more about using refs safely here:' +
                        '\nhttps://fb.me/react-strict-mode-string-ref',
                      mixedRef,
                      getStackByFiberInDevAndProd(returnFiber)
                    );
                    didWarnAboutStringRefInStrictMode[componentName] = true;
                  }
                }
              }

              if (element._owner) {
                var owner = element._owner;
                var inst = void 0;
                if (owner) {
                  var ownerFiber = owner;
                  !(
                    ownerFiber.tag === ClassComponent ||
                    ownerFiber.tag === ClassComponentLazy
                  )
                    ? invariant(
                        false,
                        'Stateless function components cannot have refs.'
                      )
                    : void 0;
                  inst = ownerFiber.stateNode;
                }
                !inst
                  ? invariant(
                      false,
                      'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.',
                      mixedRef
                    )
                  : void 0;
                var stringRef = '' + mixedRef;
                // Check if previous string ref matches new string ref
                if (
                  current$$1 !== null &&
                  current$$1.ref !== null &&
                  typeof current$$1.ref === 'function' &&
                  current$$1.ref._stringRef === stringRef
                ) {
                  return current$$1.ref;
                }
                var ref = function(value) {
                  var refs = inst.refs;
                  if (refs === emptyRefsObject) {
                    // This is a lazy pooled frozen object, so we need to initialize.
                    refs = inst.refs = {};
                  }
                  if (value === null) {
                    delete refs[stringRef];
                  } else {
                    refs[stringRef] = value;
                  }
                };
                ref._stringRef = stringRef;
                return ref;
              } else {
                !(typeof mixedRef === 'string')
                  ? invariant(
                      false,
                      'Expected ref to be a function, a string, an object returned by React.createRef(), or null.'
                    )
                  : void 0;
                !element._owner
                  ? invariant(
                      false,
                      "Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a functional component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.",
                      mixedRef
                    )
                  : void 0;
              }
            }
            return mixedRef;
          }

          function throwOnInvalidObjectType(returnFiber, newChild) {
            if (returnFiber.type !== 'textarea') {
              var addendum = '';
              {
                addendum =
                  ' If you meant to render a collection of children, use an array ' +
                  'instead.' +
                  getCurrentFiberStackInDev();
              }
              invariant(
                false,
                'Objects are not valid as a React child (found: %s).%s',
                Object.prototype.toString.call(newChild) === '[object Object]'
                  ? 'object with keys {' +
                    Object.keys(newChild).join(', ') +
                    '}'
                  : newChild,
                addendum
              );
            }
          }

          function warnOnFunctionType() {
            var currentComponentErrorInfo =
              'Functions are not valid as a React child. This may happen if ' +
              'you return a Component instead of <Component /> from render. ' +
              'Or maybe you meant to call this function rather than return it.' +
              getCurrentFiberStackInDev();

            if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;

            warning$1(
              false,
              'Functions are not valid as a React child. This may happen if ' +
                'you return a Component instead of <Component /> from render. ' +
                'Or maybe you meant to call this function rather than return it.'
            );
          }

          // This wrapper function exists because I expect to clone the code in each path
          // to be able to optimize each path individually by branching early. This needs
          // a compiler or we can do it manually. Helpers that don't need this branching
          // live outside of this function.
          function ChildReconciler(shouldTrackSideEffects) {
            function deleteChild(returnFiber, childToDelete) {
              if (!shouldTrackSideEffects) {
                // Noop.
                return;
              }
              // Deletions are added in reversed order so we add it to the front.
              // At this point, the return fiber's effect list is empty except for
              // deletions, so we can just append the deletion to the list. The remaining
              // effects aren't added until the complete phase. Once we implement
              // resuming, this may not be true.
              var last = returnFiber.lastEffect;
              if (last !== null) {
                last.nextEffect = childToDelete;
                returnFiber.lastEffect = childToDelete;
              } else {
                returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
              }
              childToDelete.nextEffect = null;
              childToDelete.effectTag = Deletion;
            }

            function deleteRemainingChildren(returnFiber, currentFirstChild) {
              if (!shouldTrackSideEffects) {
                // Noop.
                return null;
              }

              // TODO: For the shouldClone case, this could be micro-optimized a bit by
              // assuming that after the first child we've already added everything.
              var childToDelete = currentFirstChild;
              while (childToDelete !== null) {
                deleteChild(returnFiber, childToDelete);
                childToDelete = childToDelete.sibling;
              }
              return null;
            }

            function mapRemainingChildren(returnFiber, currentFirstChild) {
              // Add the remaining children to a temporary map so that we can find them by
              // keys quickly. Implicit (null) keys get added to this set with their index
              var existingChildren = new Map();

              var existingChild = currentFirstChild;
              while (existingChild !== null) {
                if (existingChild.key !== null) {
                  existingChildren.set(existingChild.key, existingChild);
                } else {
                  existingChildren.set(existingChild.index, existingChild);
                }
                existingChild = existingChild.sibling;
              }
              return existingChildren;
            }

            function useFiber(fiber, pendingProps, expirationTime) {
              // We currently set sibling to null and index to 0 here because it is easy
              // to forget to do before returning it. E.g. for the single child case.
              var clone = createWorkInProgress(
                fiber,
                pendingProps,
                expirationTime
              );
              clone.index = 0;
              clone.sibling = null;
              return clone;
            }

            function placeChild(newFiber, lastPlacedIndex, newIndex) {
              newFiber.index = newIndex;
              if (!shouldTrackSideEffects) {
                // Noop.
                return lastPlacedIndex;
              }
              var current$$1 = newFiber.alternate;
              if (current$$1 !== null) {
                var oldIndex = current$$1.index;
                if (oldIndex < lastPlacedIndex) {
                  // This is a move.
                  newFiber.effectTag = Placement;
                  return lastPlacedIndex;
                } else {
                  // This item can stay in place.
                  return oldIndex;
                }
              } else {
                // This is an insertion.
                newFiber.effectTag = Placement;
                return lastPlacedIndex;
              }
            }

            function placeSingleChild(newFiber) {
              // This is simpler for the single child case. We only need to do a
              // placement for inserting new children.
              if (shouldTrackSideEffects && newFiber.alternate === null) {
                newFiber.effectTag = Placement;
              }
              return newFiber;
            }

            function updateTextNode(
              returnFiber,
              current$$1,
              textContent,
              expirationTime
            ) {
              if (current$$1 === null || current$$1.tag !== HostText) {
                // Insert
                var created = createFiberFromText(
                  textContent,
                  returnFiber.mode,
                  expirationTime
                );
                created.return = returnFiber;
                return created;
              } else {
                // Update
                var existing = useFiber(
                  current$$1,
                  textContent,
                  expirationTime
                );
                existing.return = returnFiber;
                return existing;
              }
            }

            function updateElement(
              returnFiber,
              current$$1,
              element,
              expirationTime
            ) {
              if (current$$1 !== null && current$$1.type === element.type) {
                // Move based on index
                var existing = useFiber(
                  current$$1,
                  element.props,
                  expirationTime
                );
                existing.ref = coerceRef(returnFiber, current$$1, element);
                existing.return = returnFiber;
                {
                  existing._debugSource = element._source;
                  existing._debugOwner = element._owner;
                }
                return existing;
              } else {
                // Insert
                var created = createFiberFromElement(
                  element,
                  returnFiber.mode,
                  expirationTime
                );
                created.ref = coerceRef(returnFiber, current$$1, element);
                created.return = returnFiber;
                return created;
              }
            }

            function updatePortal(
              returnFiber,
              current$$1,
              portal,
              expirationTime
            ) {
              if (
                current$$1 === null ||
                current$$1.tag !== HostPortal ||
                current$$1.stateNode.containerInfo !== portal.containerInfo ||
                current$$1.stateNode.implementation !== portal.implementation
              ) {
                // Insert
                var created = createFiberFromPortal(
                  portal,
                  returnFiber.mode,
                  expirationTime
                );
                created.return = returnFiber;
                return created;
              } else {
                // Update
                var existing = useFiber(
                  current$$1,
                  portal.children || [],
                  expirationTime
                );
                existing.return = returnFiber;
                return existing;
              }
            }

            function updateFragment(
              returnFiber,
              current$$1,
              fragment,
              expirationTime,
              key
            ) {
              if (current$$1 === null || current$$1.tag !== Fragment) {
                // Insert
                var created = createFiberFromFragment(
                  fragment,
                  returnFiber.mode,
                  expirationTime,
                  key
                );
                created.return = returnFiber;
                return created;
              } else {
                // Update
                var existing = useFiber(current$$1, fragment, expirationTime);
                existing.return = returnFiber;
                return existing;
              }
            }

            function createChild(returnFiber, newChild, expirationTime) {
              if (
                typeof newChild === 'string' ||
                typeof newChild === 'number'
              ) {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                var created = createFiberFromText(
                  '' + newChild,
                  returnFiber.mode,
                  expirationTime
                );
                created.return = returnFiber;
                return created;
              }

              if (typeof newChild === 'object' && newChild !== null) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE: {
                    var _created = createFiberFromElement(
                      newChild,
                      returnFiber.mode,
                      expirationTime
                    );
                    _created.ref = coerceRef(returnFiber, null, newChild);
                    _created.return = returnFiber;
                    return _created;
                  }
                  case REACT_PORTAL_TYPE: {
                    var _created2 = createFiberFromPortal(
                      newChild,
                      returnFiber.mode,
                      expirationTime
                    );
                    _created2.return = returnFiber;
                    return _created2;
                  }
                }

                if (isArray$1(newChild) || getIteratorFn(newChild)) {
                  var _created3 = createFiberFromFragment(
                    newChild,
                    returnFiber.mode,
                    expirationTime,
                    null
                  );
                  _created3.return = returnFiber;
                  return _created3;
                }

                throwOnInvalidObjectType(returnFiber, newChild);
              }

              {
                if (typeof newChild === 'function') {
                  warnOnFunctionType();
                }
              }

              return null;
            }

            function updateSlot(
              returnFiber,
              oldFiber,
              newChild,
              expirationTime
            ) {
              // Update the fiber if the keys match, otherwise return null.

              var key = oldFiber !== null ? oldFiber.key : null;

              if (
                typeof newChild === 'string' ||
                typeof newChild === 'number'
              ) {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                if (key !== null) {
                  return null;
                }
                return updateTextNode(
                  returnFiber,
                  oldFiber,
                  '' + newChild,
                  expirationTime
                );
              }

              if (typeof newChild === 'object' && newChild !== null) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE: {
                    if (newChild.key === key) {
                      if (newChild.type === REACT_FRAGMENT_TYPE) {
                        return updateFragment(
                          returnFiber,
                          oldFiber,
                          newChild.props.children,
                          expirationTime,
                          key
                        );
                      }
                      return updateElement(
                        returnFiber,
                        oldFiber,
                        newChild,
                        expirationTime
                      );
                    } else {
                      return null;
                    }
                  }
                  case REACT_PORTAL_TYPE: {
                    if (newChild.key === key) {
                      return updatePortal(
                        returnFiber,
                        oldFiber,
                        newChild,
                        expirationTime
                      );
                    } else {
                      return null;
                    }
                  }
                }

                if (isArray$1(newChild) || getIteratorFn(newChild)) {
                  if (key !== null) {
                    return null;
                  }

                  return updateFragment(
                    returnFiber,
                    oldFiber,
                    newChild,
                    expirationTime,
                    null
                  );
                }

                throwOnInvalidObjectType(returnFiber, newChild);
              }

              {
                if (typeof newChild === 'function') {
                  warnOnFunctionType();
                }
              }

              return null;
            }

            function updateFromMap(
              existingChildren,
              returnFiber,
              newIdx,
              newChild,
              expirationTime
            ) {
              if (
                typeof newChild === 'string' ||
                typeof newChild === 'number'
              ) {
                // Text nodes don't have keys, so we neither have to check the old nor
                // new node for the key. If both are text nodes, they match.
                var matchedFiber = existingChildren.get(newIdx) || null;
                return updateTextNode(
                  returnFiber,
                  matchedFiber,
                  '' + newChild,
                  expirationTime
                );
              }

              if (typeof newChild === 'object' && newChild !== null) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE: {
                    var _matchedFiber =
                      existingChildren.get(
                        newChild.key === null ? newIdx : newChild.key
                      ) || null;
                    if (newChild.type === REACT_FRAGMENT_TYPE) {
                      return updateFragment(
                        returnFiber,
                        _matchedFiber,
                        newChild.props.children,
                        expirationTime,
                        newChild.key
                      );
                    }
                    return updateElement(
                      returnFiber,
                      _matchedFiber,
                      newChild,
                      expirationTime
                    );
                  }
                  case REACT_PORTAL_TYPE: {
                    var _matchedFiber2 =
                      existingChildren.get(
                        newChild.key === null ? newIdx : newChild.key
                      ) || null;
                    return updatePortal(
                      returnFiber,
                      _matchedFiber2,
                      newChild,
                      expirationTime
                    );
                  }
                }

                if (isArray$1(newChild) || getIteratorFn(newChild)) {
                  var _matchedFiber3 = existingChildren.get(newIdx) || null;
                  return updateFragment(
                    returnFiber,
                    _matchedFiber3,
                    newChild,
                    expirationTime,
                    null
                  );
                }

                throwOnInvalidObjectType(returnFiber, newChild);
              }

              {
                if (typeof newChild === 'function') {
                  warnOnFunctionType();
                }
              }

              return null;
            }

            /**
             * Warns if there is a duplicate or missing key
             */
            function warnOnInvalidKey(child, knownKeys) {
              {
                if (typeof child !== 'object' || child === null) {
                  return knownKeys;
                }
                switch (child.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                  case REACT_PORTAL_TYPE:
                    warnForMissingKey(child);
                    var key = child.key;
                    if (typeof key !== 'string') {
                      break;
                    }
                    if (knownKeys === null) {
                      knownKeys = new Set();
                      knownKeys.add(key);
                      break;
                    }
                    if (!knownKeys.has(key)) {
                      knownKeys.add(key);
                      break;
                    }
                    warning$1(
                      false,
                      'Encountered two children with the same key, `%s`. ' +
                        'Keys should be unique so that components maintain their identity ' +
                        'across updates. Non-unique keys may cause children to be ' +
                        'duplicated and/or omitted — the behavior is unsupported and ' +
                        'could change in a future version.',
                      key
                    );
                    break;
                  default:
                    break;
                }
              }
              return knownKeys;
            }

            function reconcileChildrenArray(
              returnFiber,
              currentFirstChild,
              newChildren,
              expirationTime
            ) {
              // This algorithm can't optimize by searching from boths ends since we
              // don't have backpointers on fibers. I'm trying to see how far we can get
              // with that model. If it ends up not being worth the tradeoffs, we can
              // add it later.

              // Even with a two ended optimization, we'd want to optimize for the case
              // where there are few changes and brute force the comparison instead of
              // going for the Map. It'd like to explore hitting that path first in
              // forward-only mode and only go for the Map once we notice that we need
              // lots of look ahead. This doesn't handle reversal as well as two ended
              // search but that's unusual. Besides, for the two ended optimization to
              // work on Iterables, we'd need to copy the whole set.

              // In this first iteration, we'll just live with hitting the bad case
              // (adding everything to a Map) in for every insert/move.

              // If you change this code, also update reconcileChildrenIterator() which
              // uses the same algorithm.

              {
                // First, validate keys.
                var knownKeys = null;
                for (var i = 0; i < newChildren.length; i++) {
                  var child = newChildren[i];
                  knownKeys = warnOnInvalidKey(child, knownKeys);
                }
              }

              var resultingFirstChild = null;
              var previousNewFiber = null;

              var oldFiber = currentFirstChild;
              var lastPlacedIndex = 0;
              var newIdx = 0;
              var nextOldFiber = null;
              for (
                ;
                oldFiber !== null && newIdx < newChildren.length;
                newIdx++
              ) {
                if (oldFiber.index > newIdx) {
                  nextOldFiber = oldFiber;
                  oldFiber = null;
                } else {
                  nextOldFiber = oldFiber.sibling;
                }
                var newFiber = updateSlot(
                  returnFiber,
                  oldFiber,
                  newChildren[newIdx],
                  expirationTime
                );
                if (newFiber === null) {
                  // TODO: This breaks on empty slots like null children. That's
                  // unfortunate because it triggers the slow path all the time. We need
                  // a better way to communicate whether this was a miss or null,
                  // boolean, undefined, etc.
                  if (oldFiber === null) {
                    oldFiber = nextOldFiber;
                  }
                  break;
                }
                if (shouldTrackSideEffects) {
                  if (oldFiber && newFiber.alternate === null) {
                    // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                  }
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  // TODO: Move out of the loop. This only happens for the first run.
                  resultingFirstChild = newFiber;
                } else {
                  // TODO: Defer siblings if we're not at the right index for this slot.
                  // I.e. if we had null values before, then we want to defer this
                  // for each null value. However, we also don't want to call updateSlot
                  // with the previous one.
                  previousNewFiber.sibling = newFiber;
                }
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
              }

              if (newIdx === newChildren.length) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                return resultingFirstChild;
              }

              if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for (; newIdx < newChildren.length; newIdx++) {
                  var _newFiber = createChild(
                    returnFiber,
                    newChildren[newIdx],
                    expirationTime
                  );
                  if (!_newFiber) {
                    continue;
                  }
                  lastPlacedIndex = placeChild(
                    _newFiber,
                    lastPlacedIndex,
                    newIdx
                  );
                  if (previousNewFiber === null) {
                    // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber;
                  } else {
                    previousNewFiber.sibling = _newFiber;
                  }
                  previousNewFiber = _newFiber;
                }
                return resultingFirstChild;
              }

              // Add all children to a key map for quick lookups.
              var existingChildren = mapRemainingChildren(
                returnFiber,
                oldFiber
              );

              // Keep scanning and use the map to restore deleted items as moves.
              for (; newIdx < newChildren.length; newIdx++) {
                var _newFiber2 = updateFromMap(
                  existingChildren,
                  returnFiber,
                  newIdx,
                  newChildren[newIdx],
                  expirationTime
                );
                if (_newFiber2) {
                  if (shouldTrackSideEffects) {
                    if (_newFiber2.alternate !== null) {
                      // The new fiber is a work in progress, but if there exists a
                      // current, that means that we reused the fiber. We need to delete
                      // it from the child list so that we don't add it to the deletion
                      // list.
                      existingChildren.delete(
                        _newFiber2.key === null ? newIdx : _newFiber2.key
                      );
                    }
                  }
                  lastPlacedIndex = placeChild(
                    _newFiber2,
                    lastPlacedIndex,
                    newIdx
                  );
                  if (previousNewFiber === null) {
                    resultingFirstChild = _newFiber2;
                  } else {
                    previousNewFiber.sibling = _newFiber2;
                  }
                  previousNewFiber = _newFiber2;
                }
              }

              if (shouldTrackSideEffects) {
                // Any existing children that weren't consumed above were deleted. We need
                // to add them to the deletion list.
                existingChildren.forEach(function(child) {
                  return deleteChild(returnFiber, child);
                });
              }

              return resultingFirstChild;
            }

            function reconcileChildrenIterator(
              returnFiber,
              currentFirstChild,
              newChildrenIterable,
              expirationTime
            ) {
              // This is the same implementation as reconcileChildrenArray(),
              // but using the iterator instead.

              var iteratorFn = getIteratorFn(newChildrenIterable);
              !(typeof iteratorFn === 'function')
                ? invariant(
                    false,
                    'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.'
                  )
                : void 0;

              {
                // We don't support rendering Generators because it's a mutation.
                // See https://github.com/facebook/react/issues/12995
                if (
                  typeof Symbol === 'function' &&
                  // $FlowFixMe Flow doesn't know about toStringTag
                  newChildrenIterable[Symbol.toStringTag] === 'Generator'
                ) {
                  !didWarnAboutGenerators
                    ? warning$1(
                        false,
                        'Using Generators as children is unsupported and will likely yield ' +
                          'unexpected results because enumerating a generator mutates it. ' +
                          'You may convert it to an array with `Array.from()` or the ' +
                          '`[...spread]` operator before rendering. Keep in mind ' +
                          'you might need to polyfill these features for older browsers.'
                      )
                    : void 0;
                  didWarnAboutGenerators = true;
                }

                // Warn about using Maps as children
                if (newChildrenIterable.entries === iteratorFn) {
                  !didWarnAboutMaps
                    ? warning$1(
                        false,
                        'Using Maps as children is unsupported and will likely yield ' +
                          'unexpected results. Convert it to a sequence/iterable of keyed ' +
                          'ReactElements instead.'
                      )
                    : void 0;
                  didWarnAboutMaps = true;
                }

                // First, validate keys.
                // We'll get a different iterator later for the main pass.
                var _newChildren = iteratorFn.call(newChildrenIterable);
                if (_newChildren) {
                  var knownKeys = null;
                  var _step = _newChildren.next();
                  for (; !_step.done; _step = _newChildren.next()) {
                    var child = _step.value;
                    knownKeys = warnOnInvalidKey(child, knownKeys);
                  }
                }
              }

              var newChildren = iteratorFn.call(newChildrenIterable);
              !(newChildren != null)
                ? invariant(false, 'An iterable object provided no iterator.')
                : void 0;

              var resultingFirstChild = null;
              var previousNewFiber = null;

              var oldFiber = currentFirstChild;
              var lastPlacedIndex = 0;
              var newIdx = 0;
              var nextOldFiber = null;

              var step = newChildren.next();
              for (
                ;
                oldFiber !== null && !step.done;
                newIdx++, step = newChildren.next()
              ) {
                if (oldFiber.index > newIdx) {
                  nextOldFiber = oldFiber;
                  oldFiber = null;
                } else {
                  nextOldFiber = oldFiber.sibling;
                }
                var newFiber = updateSlot(
                  returnFiber,
                  oldFiber,
                  step.value,
                  expirationTime
                );
                if (newFiber === null) {
                  // TODO: This breaks on empty slots like null children. That's
                  // unfortunate because it triggers the slow path all the time. We need
                  // a better way to communicate whether this was a miss or null,
                  // boolean, undefined, etc.
                  if (!oldFiber) {
                    oldFiber = nextOldFiber;
                  }
                  break;
                }
                if (shouldTrackSideEffects) {
                  if (oldFiber && newFiber.alternate === null) {
                    // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                  }
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  // TODO: Move out of the loop. This only happens for the first run.
                  resultingFirstChild = newFiber;
                } else {
                  // TODO: Defer siblings if we're not at the right index for this slot.
                  // I.e. if we had null values before, then we want to defer this
                  // for each null value. However, we also don't want to call updateSlot
                  // with the previous one.
                  previousNewFiber.sibling = newFiber;
                }
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
              }

              if (step.done) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                return resultingFirstChild;
              }

              if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for (; !step.done; newIdx++, step = newChildren.next()) {
                  var _newFiber3 = createChild(
                    returnFiber,
                    step.value,
                    expirationTime
                  );
                  if (_newFiber3 === null) {
                    continue;
                  }
                  lastPlacedIndex = placeChild(
                    _newFiber3,
                    lastPlacedIndex,
                    newIdx
                  );
                  if (previousNewFiber === null) {
                    // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber3;
                  } else {
                    previousNewFiber.sibling = _newFiber3;
                  }
                  previousNewFiber = _newFiber3;
                }
                return resultingFirstChild;
              }

              // Add all children to a key map for quick lookups.
              var existingChildren = mapRemainingChildren(
                returnFiber,
                oldFiber
              );

              // Keep scanning and use the map to restore deleted items as moves.
              for (; !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber4 = updateFromMap(
                  existingChildren,
                  returnFiber,
                  newIdx,
                  step.value,
                  expirationTime
                );
                if (_newFiber4 !== null) {
                  if (shouldTrackSideEffects) {
                    if (_newFiber4.alternate !== null) {
                      // The new fiber is a work in progress, but if there exists a
                      // current, that means that we reused the fiber. We need to delete
                      // it from the child list so that we don't add it to the deletion
                      // list.
                      existingChildren.delete(
                        _newFiber4.key === null ? newIdx : _newFiber4.key
                      );
                    }
                  }
                  lastPlacedIndex = placeChild(
                    _newFiber4,
                    lastPlacedIndex,
                    newIdx
                  );
                  if (previousNewFiber === null) {
                    resultingFirstChild = _newFiber4;
                  } else {
                    previousNewFiber.sibling = _newFiber4;
                  }
                  previousNewFiber = _newFiber4;
                }
              }

              if (shouldTrackSideEffects) {
                // Any existing children that weren't consumed above were deleted. We need
                // to add them to the deletion list.
                existingChildren.forEach(function(child) {
                  return deleteChild(returnFiber, child);
                });
              }

              return resultingFirstChild;
            }

            function reconcileSingleTextNode(
              returnFiber,
              currentFirstChild,
              textContent,
              expirationTime
            ) {
              // There's no need to check for keys on text nodes since we don't have a
              // way to define them.
              if (
                currentFirstChild !== null &&
                currentFirstChild.tag === HostText
              ) {
                // We already have an existing node so let's just update it and delete
                // the rest.
                deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                var existing = useFiber(
                  currentFirstChild,
                  textContent,
                  expirationTime
                );
                existing.return = returnFiber;
                return existing;
              }
              // The existing first child is not a text node so we need to create one
              // and delete the existing ones.
              deleteRemainingChildren(returnFiber, currentFirstChild);
              var created = createFiberFromText(
                textContent,
                returnFiber.mode,
                expirationTime
              );
              created.return = returnFiber;
              return created;
            }

            function reconcileSingleElement(
              returnFiber,
              currentFirstChild,
              element,
              expirationTime
            ) {
              var key = element.key;
              var child = currentFirstChild;
              while (child !== null) {
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                  if (
                    child.tag === Fragment
                      ? element.type === REACT_FRAGMENT_TYPE
                      : child.type === element.type
                  ) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(
                      child,
                      element.type === REACT_FRAGMENT_TYPE
                        ? element.props.children
                        : element.props,
                      expirationTime
                    );
                    existing.ref = coerceRef(returnFiber, child, element);
                    existing.return = returnFiber;
                    {
                      existing._debugSource = element._source;
                      existing._debugOwner = element._owner;
                    }
                    return existing;
                  } else {
                    deleteRemainingChildren(returnFiber, child);
                    break;
                  }
                } else {
                  deleteChild(returnFiber, child);
                }
                child = child.sibling;
              }

              if (element.type === REACT_FRAGMENT_TYPE) {
                var created = createFiberFromFragment(
                  element.props.children,
                  returnFiber.mode,
                  expirationTime,
                  element.key
                );
                created.return = returnFiber;
                return created;
              } else {
                var _created4 = createFiberFromElement(
                  element,
                  returnFiber.mode,
                  expirationTime
                );
                _created4.ref = coerceRef(
                  returnFiber,
                  currentFirstChild,
                  element
                );
                _created4.return = returnFiber;
                return _created4;
              }
            }

            function reconcileSinglePortal(
              returnFiber,
              currentFirstChild,
              portal,
              expirationTime
            ) {
              var key = portal.key;
              var child = currentFirstChild;
              while (child !== null) {
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                  if (
                    child.tag === HostPortal &&
                    child.stateNode.containerInfo === portal.containerInfo &&
                    child.stateNode.implementation === portal.implementation
                  ) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(
                      child,
                      portal.children || [],
                      expirationTime
                    );
                    existing.return = returnFiber;
                    return existing;
                  } else {
                    deleteRemainingChildren(returnFiber, child);
                    break;
                  }
                } else {
                  deleteChild(returnFiber, child);
                }
                child = child.sibling;
              }

              var created = createFiberFromPortal(
                portal,
                returnFiber.mode,
                expirationTime
              );
              created.return = returnFiber;
              return created;
            }

            // This API will tag the children with the side-effect of the reconciliation
            // itself. They will be added to the side-effect list as we pass through the
            // children and the parent.
            function reconcileChildFibers(
              returnFiber,
              currentFirstChild,
              newChild,
              expirationTime
            ) {
              // This function is not recursive.
              // If the top level item is an array, we treat it as a set of children,
              // not as a fragment. Nested arrays on the other hand will be treated as
              // fragment nodes. Recursion happens at the normal flow.

              // Handle top level unkeyed fragments as if they were arrays.
              // This leads to an ambiguity between <>{[...]}</> and <>...</>.
              // We treat the ambiguous cases above the same.
              var isUnkeyedTopLevelFragment =
                typeof newChild === 'object' &&
                newChild !== null &&
                newChild.type === REACT_FRAGMENT_TYPE &&
                newChild.key === null;
              if (isUnkeyedTopLevelFragment) {
                newChild = newChild.props.children;
              }

              // Handle object types
              var isObject = typeof newChild === 'object' && newChild !== null;

              if (isObject) {
                switch (newChild.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                    return placeSingleChild(
                      reconcileSingleElement(
                        returnFiber,
                        currentFirstChild,
                        newChild,
                        expirationTime
                      )
                    );
                  case REACT_PORTAL_TYPE:
                    return placeSingleChild(
                      reconcileSinglePortal(
                        returnFiber,
                        currentFirstChild,
                        newChild,
                        expirationTime
                      )
                    );
                }
              }

              if (
                typeof newChild === 'string' ||
                typeof newChild === 'number'
              ) {
                return placeSingleChild(
                  reconcileSingleTextNode(
                    returnFiber,
                    currentFirstChild,
                    '' + newChild,
                    expirationTime
                  )
                );
              }

              if (isArray$1(newChild)) {
                return reconcileChildrenArray(
                  returnFiber,
                  currentFirstChild,
                  newChild,
                  expirationTime
                );
              }

              if (getIteratorFn(newChild)) {
                return reconcileChildrenIterator(
                  returnFiber,
                  currentFirstChild,
                  newChild,
                  expirationTime
                );
              }

              if (isObject) {
                throwOnInvalidObjectType(returnFiber, newChild);
              }

              {
                if (typeof newChild === 'function') {
                  warnOnFunctionType();
                }
              }
              if (
                typeof newChild === 'undefined' &&
                !isUnkeyedTopLevelFragment
              ) {
                // If the new child is undefined, and the return fiber is a composite
                // component, throw an error. If Fiber return types are disabled,
                // we already threw above.
                switch (returnFiber.tag) {
                  case ClassComponent:
                  case ClassComponentLazy: {
                    {
                      var instance = returnFiber.stateNode;
                      if (instance.render._isMockFunction) {
                        // We allow auto-mocks to proceed as if they're returning null.
                        break;
                      }
                    }
                  }
                  // Intentionally fall through to the next case, which handles both
                  // functions and classes
                  // eslint-disable-next-lined no-fallthrough
                  case FunctionalComponent: {
                    var Component = returnFiber.type;
                    invariant(
                      false,
                      '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.',
                      Component.displayName || Component.name || 'Component'
                    );
                  }
                }
              }

              // Remaining cases are all treated as empty.
              return deleteRemainingChildren(returnFiber, currentFirstChild);
            }

            return reconcileChildFibers;
          }

          var reconcileChildFibers = ChildReconciler(true);
          var mountChildFibers = ChildReconciler(false);

          function cloneChildFibers(current$$1, workInProgress) {
            !(current$$1 === null || workInProgress.child === current$$1.child)
              ? invariant(false, 'Resuming work not yet implemented.')
              : void 0;

            if (workInProgress.child === null) {
              return;
            }

            var currentChild = workInProgress.child;
            var newChild = createWorkInProgress(
              currentChild,
              currentChild.pendingProps,
              currentChild.expirationTime
            );
            workInProgress.child = newChild;

            newChild.return = workInProgress;
            while (currentChild.sibling !== null) {
              currentChild = currentChild.sibling;
              newChild = newChild.sibling = createWorkInProgress(
                currentChild,
                currentChild.pendingProps,
                currentChild.expirationTime
              );
              newChild.return = workInProgress;
            }
            newChild.sibling = null;
          }

          // The deepest Fiber on the stack involved in a hydration context.
          // This may have been an insertion or a hydration.
          var hydrationParentFiber = null;
          var nextHydratableInstance = null;
          var isHydrating = false;

          function enterHydrationState(fiber) {
            if (!supportsHydration) {
              return false;
            }

            var parentInstance = fiber.stateNode.containerInfo;
            nextHydratableInstance = getFirstHydratableChild(parentInstance);
            hydrationParentFiber = fiber;
            isHydrating = true;
            return true;
          }

          function deleteHydratableInstance(returnFiber, instance) {
            {
              switch (returnFiber.tag) {
                case HostRoot:
                  didNotHydrateContainerInstance(
                    returnFiber.stateNode.containerInfo,
                    instance
                  );
                  break;
                case HostComponent:
                  didNotHydrateInstance(
                    returnFiber.type,
                    returnFiber.memoizedProps,
                    returnFiber.stateNode,
                    instance
                  );
                  break;
              }
            }

            var childToDelete = createFiberFromHostInstanceForDeletion();
            childToDelete.stateNode = instance;
            childToDelete.return = returnFiber;
            childToDelete.effectTag = Deletion;

            // This might seem like it belongs on progressedFirstDeletion. However,
            // these children are not part of the reconciliation list of children.
            // Even if we abort and rereconcile the children, that will try to hydrate
            // again and the nodes are still in the host tree so these will be
            // recreated.
            if (returnFiber.lastEffect !== null) {
              returnFiber.lastEffect.nextEffect = childToDelete;
              returnFiber.lastEffect = childToDelete;
            } else {
              returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
            }
          }

          function insertNonHydratedInstance(returnFiber, fiber) {
            fiber.effectTag |= Placement;
            {
              switch (returnFiber.tag) {
                case HostRoot: {
                  var parentContainer = returnFiber.stateNode.containerInfo;
                  switch (fiber.tag) {
                    case HostComponent:
                      var type = fiber.type;
                      var props = fiber.pendingProps;
                      didNotFindHydratableContainerInstance(
                        parentContainer,
                        type,
                        props
                      );
                      break;
                    case HostText:
                      var text = fiber.pendingProps;
                      didNotFindHydratableContainerTextInstance(
                        parentContainer,
                        text
                      );
                      break;
                  }
                  break;
                }
                case HostComponent: {
                  var parentType = returnFiber.type;
                  var parentProps = returnFiber.memoizedProps;
                  var parentInstance = returnFiber.stateNode;
                  switch (fiber.tag) {
                    case HostComponent:
                      var _type = fiber.type;
                      var _props = fiber.pendingProps;
                      didNotFindHydratableInstance(
                        parentType,
                        parentProps,
                        parentInstance,
                        _type,
                        _props
                      );
                      break;
                    case HostText:
                      var _text = fiber.pendingProps;
                      didNotFindHydratableTextInstance(
                        parentType,
                        parentProps,
                        parentInstance,
                        _text
                      );
                      break;
                  }
                  break;
                }
                default:
                  return;
              }
            }
          }

          function tryHydrate(fiber, nextInstance) {
            switch (fiber.tag) {
              case HostComponent: {
                var type = fiber.type;
                var props = fiber.pendingProps;
                var instance = canHydrateInstance(nextInstance, type, props);
                if (instance !== null) {
                  fiber.stateNode = instance;
                  return true;
                }
                return false;
              }
              case HostText: {
                var text = fiber.pendingProps;
                var textInstance = canHydrateTextInstance(nextInstance, text);
                if (textInstance !== null) {
                  fiber.stateNode = textInstance;
                  return true;
                }
                return false;
              }
              default:
                return false;
            }
          }

          function tryToClaimNextHydratableInstance(fiber) {
            if (!isHydrating) {
              return;
            }
            var nextInstance = nextHydratableInstance;
            if (!nextInstance) {
              // Nothing to hydrate. Make it an insertion.
              insertNonHydratedInstance(hydrationParentFiber, fiber);
              isHydrating = false;
              hydrationParentFiber = fiber;
              return;
            }
            var firstAttemptedInstance = nextInstance;
            if (!tryHydrate(fiber, nextInstance)) {
              // If we can't hydrate this instance let's try the next one.
              // We use this as a heuristic. It's based on intuition and not data so it
              // might be flawed or unnecessary.
              nextInstance = getNextHydratableSibling(firstAttemptedInstance);
              if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
                // Nothing to hydrate. Make it an insertion.
                insertNonHydratedInstance(hydrationParentFiber, fiber);
                isHydrating = false;
                hydrationParentFiber = fiber;
                return;
              }
              // We matched the next one, we'll now assume that the first one was
              // superfluous and we'll delete it. Since we can't eagerly delete it
              // we'll have to schedule a deletion. To do that, this node needs a dummy
              // fiber associated with it.
              deleteHydratableInstance(
                hydrationParentFiber,
                firstAttemptedInstance
              );
            }
            hydrationParentFiber = fiber;
            nextHydratableInstance = getFirstHydratableChild(nextInstance);
          }

          function prepareToHydrateHostInstance(
            fiber,
            rootContainerInstance,
            hostContext
          ) {
            if (!supportsHydration) {
              invariant(
                false,
                'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.'
              );
            }

            var instance = fiber.stateNode;
            var updatePayload = hydrateInstance(
              instance,
              fiber.type,
              fiber.memoizedProps,
              rootContainerInstance,
              hostContext,
              fiber
            );
            // TODO: Type this specific to this type of component.
            fiber.updateQueue = updatePayload;
            // If the update payload indicates that there is a change or if there
            // is a new ref we mark this as an update.
            if (updatePayload !== null) {
              return true;
            }
            return false;
          }

          function prepareToHydrateHostTextInstance(fiber) {
            if (!supportsHydration) {
              invariant(
                false,
                'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.'
              );
            }

            var textInstance = fiber.stateNode;
            var textContent = fiber.memoizedProps;
            var shouldUpdate = hydrateTextInstance(
              textInstance,
              textContent,
              fiber
            );
            {
              if (shouldUpdate) {
                // We assume that prepareToHydrateHostTextInstance is called in a context where the
                // hydration parent is the parent host component of this host text.
                var returnFiber = hydrationParentFiber;
                if (returnFiber !== null) {
                  switch (returnFiber.tag) {
                    case HostRoot: {
                      var parentContainer = returnFiber.stateNode.containerInfo;
                      didNotMatchHydratedContainerTextInstance(
                        parentContainer,
                        textInstance,
                        textContent
                      );
                      break;
                    }
                    case HostComponent: {
                      var parentType = returnFiber.type;
                      var parentProps = returnFiber.memoizedProps;
                      var parentInstance = returnFiber.stateNode;
                      didNotMatchHydratedTextInstance(
                        parentType,
                        parentProps,
                        parentInstance,
                        textInstance,
                        textContent
                      );
                      break;
                    }
                  }
                }
              }
            }
            return shouldUpdate;
          }

          function popToNextHostParent(fiber) {
            var parent = fiber.return;
            while (
              parent !== null &&
              parent.tag !== HostComponent &&
              parent.tag !== HostRoot
            ) {
              parent = parent.return;
            }
            hydrationParentFiber = parent;
          }

          function popHydrationState(fiber) {
            if (!supportsHydration) {
              return false;
            }
            if (fiber !== hydrationParentFiber) {
              // We're deeper than the current hydration context, inside an inserted
              // tree.
              return false;
            }
            if (!isHydrating) {
              // If we're not currently hydrating but we're in a hydration context, then
              // we were an insertion and now need to pop up reenter hydration of our
              // siblings.
              popToNextHostParent(fiber);
              isHydrating = true;
              return false;
            }

            var type = fiber.type;

            // If we have any remaining hydratable nodes, we need to delete them now.
            // We only do this deeper than head and body since they tend to have random
            // other nodes in them. We also ignore components with pure text content in
            // side of them.
            // TODO: Better heuristic.
            if (
              fiber.tag !== HostComponent ||
              (type !== 'head' &&
                type !== 'body' &&
                !shouldSetTextContent(type, fiber.memoizedProps))
            ) {
              var nextInstance = nextHydratableInstance;
              while (nextInstance) {
                deleteHydratableInstance(fiber, nextInstance);
                nextInstance = getNextHydratableSibling(nextInstance);
              }
            }

            popToNextHostParent(fiber);
            nextHydratableInstance = hydrationParentFiber
              ? getNextHydratableSibling(fiber.stateNode)
              : null;
            return true;
          }

          function resetHydrationState() {
            if (!supportsHydration) {
              return;
            }

            hydrationParentFiber = null;
            nextHydratableInstance = null;
            isHydrating = false;
          }

          function readLazyComponentType(thenable) {
            var status = thenable._reactStatus;
            switch (status) {
              case Resolved:
                var Component = thenable._reactResult;
                return Component;
              case Rejected:
                throw thenable._reactResult;
              case Pending:
                throw thenable;
              default: {
                thenable._reactStatus = Pending;
                thenable.then(
                  function(resolvedValue) {
                    if (thenable._reactStatus === Pending) {
                      thenable._reactStatus = Resolved;
                      if (
                        typeof resolvedValue === 'object' &&
                        resolvedValue !== null
                      ) {
                        // If the `default` property is not empty, assume it's the result
                        // of an async import() and use that. Otherwise, use the
                        // resolved value itself.
                        var defaultExport = resolvedValue.default;
                        resolvedValue =
                          defaultExport !== undefined && defaultExport !== null
                            ? defaultExport
                            : resolvedValue;
                      } else {
                        resolvedValue = resolvedValue;
                      }
                      thenable._reactResult = resolvedValue;
                    }
                  },
                  function(error) {
                    if (thenable._reactStatus === Pending) {
                      thenable._reactStatus = Rejected;
                      thenable._reactResult = error;
                    }
                  }
                );
                throw thenable;
              }
            }
          }

          var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;

          var didWarnAboutBadClass = void 0;
          var didWarnAboutGetDerivedStateOnFunctionalComponent = void 0;
          var didWarnAboutStatelessRefs = void 0;

          {
            didWarnAboutBadClass = {};
            didWarnAboutGetDerivedStateOnFunctionalComponent = {};
            didWarnAboutStatelessRefs = {};
          }

          function reconcileChildren(
            current$$1,
            workInProgress,
            nextChildren,
            renderExpirationTime
          ) {
            if (current$$1 === null) {
              // If this is a fresh new component that hasn't been rendered yet, we
              // won't update its child set by applying minimal side-effects. Instead,
              // we will add them all to the child before it gets rendered. That means
              // we can optimize this reconciliation pass by not tracking side-effects.
              workInProgress.child = mountChildFibers(
                workInProgress,
                null,
                nextChildren,
                renderExpirationTime
              );
            } else {
              // If the current child is the same as the work in progress, it means that
              // we haven't yet started any work on these children. Therefore, we use
              // the clone algorithm to create a copy of all the current children.

              // If we had any progressed work already, that is invalid at this point so
              // let's throw it out.
              workInProgress.child = reconcileChildFibers(
                workInProgress,
                current$$1.child,
                nextChildren,
                renderExpirationTime
              );
            }
          }

          function updateForwardRef(
            current$$1,
            workInProgress,
            type,
            nextProps,
            renderExpirationTime
          ) {
            var render = type.render;
            var ref = workInProgress.ref;
            if (hasContextChanged()) {
              // Normally we can bail out on props equality but if context has changed
              // we don't do the bailout and we have to reuse existing props instead.
            } else if (workInProgress.memoizedProps === nextProps) {
              var currentRef = current$$1 !== null ? current$$1.ref : null;
              if (ref === currentRef) {
                return bailoutOnAlreadyFinishedWork(
                  current$$1,
                  workInProgress,
                  renderExpirationTime
                );
              }
            }

            var nextChildren = void 0;
            {
              ReactCurrentOwner$3.current = workInProgress;
              setCurrentPhase('render');
              nextChildren = render(nextProps, ref);
              setCurrentPhase(null);
            }

            reconcileChildren(
              current$$1,
              workInProgress,
              nextChildren,
              renderExpirationTime
            );
            memoizeProps(workInProgress, nextProps);
            return workInProgress.child;
          }

          function updateFragment(
            current$$1,
            workInProgress,
            renderExpirationTime
          ) {
            var nextChildren = workInProgress.pendingProps;
            reconcileChildren(
              current$$1,
              workInProgress,
              nextChildren,
              renderExpirationTime
            );
            memoizeProps(workInProgress, nextChildren);
            return workInProgress.child;
          }

          function updateMode(
            current$$1,
            workInProgress,
            renderExpirationTime
          ) {
            var nextChildren = workInProgress.pendingProps.children;
            reconcileChildren(
              current$$1,
              workInProgress,
              nextChildren,
              renderExpirationTime
            );
            memoizeProps(workInProgress, nextChildren);
            return workInProgress.child;
          }

          function updateProfiler(
            current$$1,
            workInProgress,
            renderExpirationTime
          ) {
            if (enableProfilerTimer) {
              workInProgress.effectTag |= Update;
            }
            var nextProps = workInProgress.pendingProps;
            var nextChildren = nextProps.children;
            reconcileChildren(
              current$$1,
              workInProgress,
              nextChildren,
              renderExpirationTime
            );
            memoizeProps(workInProgress, nextProps);
            return workInProgress.child;
          }

          function markRef(current$$1, workInProgress) {
            var ref = workInProgress.ref;
            if (
              (current$$1 === null && ref !== null) ||
              (current$$1 !== null && current$$1.ref !== ref)
            ) {
              // Schedule a Ref effect
              workInProgress.effectTag |= Ref;
            }
          }

          function updateFunctionalComponent(
            current$$1,
            workInProgress,
            Component,
            nextProps,
            renderExpirationTime
          ) {
            var unmaskedContext = getUnmaskedContext(
              workInProgress,
              Component,
              true
            );
            var context = getMaskedContext(workInProgress, unmaskedContext);

            var nextChildren = void 0;
            prepareToReadContext(workInProgress, renderExpirationTime);
            {
              ReactCurrentOwner$3.current = workInProgress;
              setCurrentPhase('render');
              nextChildren = Component(nextProps, context);
              setCurrentPhase(null);
            }

            // React DevTools reads this flag.
            workInProgress.effectTag |= PerformedWork;
            reconcileChildren(
              current$$1,
              workInProgress,
              nextChildren,
              renderExpirationTime
            );
            memoizeProps(workInProgress, nextProps);
            return workInProgress.child;
          }

          function updateClassComponent(
            current$$1,
            workInProgress,
            Component,
            nextProps,
            renderExpirationTime
          ) {
            // Push context providers early to prevent context stack mismatches.
            // During mounting we don't know the child context yet as the instance doesn't exist.
            // We will invalidate the child context in finishClassComponent() right after rendering.
            var hasContext = void 0;
            if (isContextProvider(Component)) {
              hasContext = true;
              pushContextProvider(workInProgress);
            } else {
              hasContext = false;
            }
            prepareToReadContext(workInProgress, renderExpirationTime);

            var shouldUpdate = void 0;
            if (current$$1 === null) {
              if (workInProgress.stateNode === null) {
                // In the initial pass we might need to construct the instance.
                constructClassInstance(
                  workInProgress,
                  Component,
                  nextProps,
                  renderExpirationTime
                );
                mountClassInstance(
                  workInProgress,
                  Component,
                  nextProps,
                  renderExpirationTime
                );
                shouldUpdate = true;
              } else {
                // In a resume, we'll already have an instance we can reuse.
                shouldUpdate = resumeMountClassInstance(
                  workInProgress,
                  Component,
                  nextProps,
                  renderExpirationTime
                );
              }
            } else {
              shouldUpdate = updateClassInstance(
                current$$1,
                workInProgress,
                Component,
                nextProps,
                renderExpirationTime
              );
            }
            return finishClassComponent(
              current$$1,
              workInProgress,
              Component,
              shouldUpdate,
              hasContext,
              renderExpirationTime
            );
          }

          function finishClassComponent(
            current$$1,
            workInProgress,
            Component,
            shouldUpdate,
            hasContext,
            renderExpirationTime
          ) {
            // Refs should update even if shouldComponentUpdate returns false
            markRef(current$$1, workInProgress);

            var didCaptureError =
              (workInProgress.effectTag & DidCapture) !== NoEffect;

            if (!shouldUpdate && !didCaptureError) {
              // Context providers should defer to sCU for rendering
              if (hasContext) {
                invalidateContextProvider(workInProgress, Component, false);
              }

              return bailoutOnAlreadyFinishedWork(
                current$$1,
                workInProgress,
                renderExpirationTime
              );
            }

            var instance = workInProgress.stateNode;

            // Rerender
            ReactCurrentOwner$3.current = workInProgress;
            var nextChildren = void 0;
            if (
              didCaptureError &&
              (!enableGetDerivedStateFromCatch ||
                typeof Component.getDerivedStateFromCatch !== 'function')
            ) {
              // If we captured an error, but getDerivedStateFrom catch is not defined,
              // unmount all the children. componentDidCatch will schedule an update to
              // re-render a fallback. This is temporary until we migrate everyone to
              // the new API.
              // TODO: Warn in a future release.
              nextChildren = null;

              if (enableProfilerTimer) {
                stopProfilerTimerIfRunning(workInProgress);
              }
            } else {
              {
                setCurrentPhase('render');
                nextChildren = instance.render();
                if (
                  debugRenderPhaseSideEffects ||
                  (debugRenderPhaseSideEffectsForStrictMode &&
                    workInProgress.mode & StrictMode)
                ) {
                  instance.render();
                }
                setCurrentPhase(null);
              }
            }

            // React DevTools reads this flag.
            workInProgress.effectTag |= PerformedWork;
            if (current$$1 !== null && didCaptureError) {
              // If we're recovering from an error, reconcile twice: first to delete
              // all the existing children.
              reconcileChildren(
                current$$1,
                workInProgress,
                null,
                renderExpirationTime
              );
              workInProgress.child = null;
              // Now we can continue reconciling like normal. This has the effect of
              // remounting all children regardless of whether their their
              // identity matches.
            }
            reconcileChildren(
              current$$1,
              workInProgress,
              nextChildren,
              renderExpirationTime
            );
            // Memoize props and state using the values we just used to render.
            // TODO: Restructure so we never read values from the instance.
            memoizeState(workInProgress, instance.state);
            memoizeProps(workInProgress, instance.props);

            // The context might have changed so we need to recalculate it.
            if (hasContext) {
              invalidateContextProvider(workInProgress, Component, true);
            }

            return workInProgress.child;
          }

          function pushHostRootContext(workInProgress) {
            var root = workInProgress.stateNode;
            if (root.pendingContext) {
              pushTopLevelContextObject(
                workInProgress,
                root.pendingContext,
                root.pendingContext !== root.context
              );
            } else if (root.context) {
              // Should always be set
              pushTopLevelContextObject(workInProgress, root.context, false);
            }
            pushHostContainer(workInProgress, root.containerInfo);
          }

          function updateHostRoot(
            current$$1,
            workInProgress,
            renderExpirationTime
          ) {
            pushHostRootContext(workInProgress);
            var updateQueue = workInProgress.updateQueue;
            !(updateQueue !== null)
              ? invariant(
                  false,
                  'If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.'
                )
              : void 0;
            var nextProps = workInProgress.pendingProps;
            var prevState = workInProgress.memoizedState;
            var prevChildren = prevState !== null ? prevState.element : null;
            processUpdateQueue(
              workInProgress,
              updateQueue,
              nextProps,
              null,
              renderExpirationTime
            );
            var nextState = workInProgress.memoizedState;
            // Caution: React DevTools currently depends on this property
            // being called "element".
            var nextChildren = nextState.element;
            if (nextChildren === prevChildren) {
              // If the state is the same as before, that's a bailout because we had
              // no work that expires at this time.
              resetHydrationState();
              return bailoutOnAlreadyFinishedWork(
                current$$1,
                workInProgress,
                renderExpirationTime
              );
            }
            var root = workInProgress.stateNode;
            if (
              (current$$1 === null || current$$1.child === null) &&
              root.hydrate &&
              enterHydrationState(workInProgress)
            ) {
              // If we don't have any current children this might be the first pass.
              // We always try to hydrate. If this isn't a hydration pass there won't
              // be any children to hydrate which is effectively the same thing as
              // not hydrating.

              // This is a bit of a hack. We track the host root as a placement to
              // know that we're currently in a mounting state. That way isMounted
              // works as expected. We must reset this before committing.
              // TODO: Delete this when we delete isMounted and findDOMNode.
              workInProgress.effectTag |= Placement;

              // Ensure that children mount into this root without tracking
              // side-effects. This ensures that we don't store Placement effects on
              // nodes that will be hydrated.
              workInProgress.child = mountChildFibers(
                workInProgress,
                null,
                nextChildren,
                renderExpirationTime
              );
            } else {
              // Otherwise reset hydration state in case we aborted and resumed another
              // root.
              reconcileChildren(
                current$$1,
                workInProgress,
                nextChildren,
                renderExpirationTime
              );
              resetHydrationState();
            }
            return workInProgress.child;
          }

          function updateHostComponent(
            current$$1,
            workInProgress,
            renderExpirationTime
          ) {
            pushHostContext(workInProgress);

            if (current$$1 === null) {
              tryToClaimNextHydratableInstance(workInProgress);
            }

            var type = workInProgress.type;
            var nextProps = workInProgress.pendingProps;
            var prevProps =
              current$$1 !== null ? current$$1.memoizedProps : null;

            var nextChildren = nextProps.children;
            var isDirectTextChild = shouldSetTextContent(type, nextProps);

            if (isDirectTextChild) {
              // We special case a direct text child of a host node. This is a common
              // case. We won't handle it as a reified child. We will instead handle
              // this in the host environment that also have access to this prop. That
              // avoids allocating another HostText fiber and traversing it.
              nextChildren = null;
            } else if (
              prevProps !== null &&
              shouldSetTextContent(type, prevProps)
            ) {
              // If we're switching from a direct text child to a normal child, or to
              // empty, we need to schedule the text content to be reset.
              workInProgress.effectTag |= ContentReset;
            }

            markRef(current$$1, workInProgress);

            // Check the host config to see if the children are offscreen/hidden.
            if (
              renderExpirationTime !== Never &&
              workInProgress.mode & AsyncMode &&
              shouldDeprioritizeSubtree(type, nextProps)
            ) {
              // Schedule this fiber to re-render at offscreen priority. Then bailout.
              workInProgress.expirationTime = Never;
              workInProgress.memoizedProps = nextProps;
              return null;
            }

            reconcileChildren(
              current$$1,
              workInProgress,
              nextChildren,
              renderExpirationTime
            );
            memoizeProps(workInProgress, nextProps);
            return workInProgress.child;
          }

          function updateHostText(current$$1, workInProgress) {
            if (current$$1 === null) {
              tryToClaimNextHydratableInstance(workInProgress);
            }
            var nextProps = workInProgress.pendingProps;
            memoizeProps(workInProgress, nextProps);
            // Nothing to do here. This is terminal. We'll do the completion step
            // immediately after.
            return null;
          }

          function resolveDefaultProps(Component, baseProps) {
            if (Component && Component.defaultProps) {
              // Resolve default props. Taken from ReactElement
              var props = _assign({}, baseProps);
              var defaultProps = Component.defaultProps;
              for (var propName in defaultProps) {
                if (props[propName] === undefined) {
                  props[propName] = defaultProps[propName];
                }
              }
              return props;
            }
            return baseProps;
          }

          function mountIndeterminateComponent(
            current$$1,
            workInProgress,
            Component,
            renderExpirationTime
          ) {
            !(current$$1 === null)
              ? invariant(
                  false,
                  'An indeterminate component should never have mounted. This error is likely caused by a bug in React. Please file an issue.'
                )
              : void 0;

            var props = workInProgress.pendingProps;
            if (
              typeof Component === 'object' &&
              Component !== null &&
              typeof Component.then === 'function'
            ) {
              Component = readLazyComponentType(Component);
              var resolvedTag = (workInProgress.tag = resolveLazyComponentTag(
                workInProgress,
                Component
              ));
              var resolvedProps = resolveDefaultProps(Component, props);
              switch (resolvedTag) {
                case FunctionalComponentLazy: {
                  return updateFunctionalComponent(
                    current$$1,
                    workInProgress,
                    Component,
                    resolvedProps,
                    renderExpirationTime
                  );
                }
                case ClassComponentLazy: {
                  return updateClassComponent(
                    current$$1,
                    workInProgress,
                    Component,
                    resolvedProps,
                    renderExpirationTime
                  );
                }
                case ForwardRefLazy: {
                  return updateForwardRef(
                    current$$1,
                    workInProgress,
                    Component,
                    resolvedProps,
                    renderExpirationTime
                  );
                }
                default: {
                  // This message intentionally doesn't metion ForwardRef because the
                  // fact that it's a separate type of work is an implementation detail.
                  invariant(
                    false,
                    'Element type is invalid. Received a promise that resolves to: %s. Promise elements must resolve to a class or function.',
                    Component
                  );
                }
              }
            }

            var unmaskedContext = getUnmaskedContext(
              workInProgress,
              Component,
              false
            );
            var context = getMaskedContext(workInProgress, unmaskedContext);

            prepareToReadContext(workInProgress, renderExpirationTime);

            var value = void 0;

            {
              if (
                Component.prototype &&
                typeof Component.prototype.render === 'function'
              ) {
                var componentName = getComponentName(Component) || 'Unknown';

                if (!didWarnAboutBadClass[componentName]) {
                  warningWithoutStack$1(
                    false,
                    "The <%s /> component appears to have a render method, but doesn't extend React.Component. " +
                      'This is likely to cause errors. Change %s to extend React.Component instead.',
                    componentName,
                    componentName
                  );
                  didWarnAboutBadClass[componentName] = true;
                }
              }

              if (workInProgress.mode & StrictMode) {
                ReactStrictModeWarnings.recordLegacyContextWarning(
                  workInProgress,
                  null
                );
              }

              ReactCurrentOwner$3.current = workInProgress;
              value = Component(props, context);
            }
            // React DevTools reads this flag.
            workInProgress.effectTag |= PerformedWork;

            if (
              typeof value === 'object' &&
              value !== null &&
              typeof value.render === 'function' &&
              value.$$typeof === undefined
            ) {
              // Proceed under the assumption that this is a class instance
              workInProgress.tag = ClassComponent;

              // Push context providers early to prevent context stack mismatches.
              // During mounting we don't know the child context yet as the instance doesn't exist.
              // We will invalidate the child context in finishClassComponent() right after rendering.
              var hasContext = false;
              if (isContextProvider(Component)) {
                hasContext = true;
                pushContextProvider(workInProgress);
              } else {
                hasContext = false;
              }

              workInProgress.memoizedState =
                value.state !== null && value.state !== undefined
                  ? value.state
                  : null;

              var getDerivedStateFromProps = Component.getDerivedStateFromProps;
              if (typeof getDerivedStateFromProps === 'function') {
                applyDerivedStateFromProps(
                  workInProgress,
                  Component,
                  getDerivedStateFromProps,
                  props
                );
              }

              adoptClassInstance(workInProgress, value);
              mountClassInstance(
                workInProgress,
                Component,
                props,
                renderExpirationTime
              );
              return finishClassComponent(
                current$$1,
                workInProgress,
                Component,
                true,
                hasContext,
                renderExpirationTime
              );
            } else {
              // Proceed under the assumption that this is a functional component
              workInProgress.tag = FunctionalComponent;
              {
                if (Component) {
                  !!Component.childContextTypes
                    ? warningWithoutStack$1(
                        false,
                        '%s(...): childContextTypes cannot be defined on a functional component.',
                        Component.displayName || Component.name || 'Component'
                      )
                    : void 0;
                }
                if (workInProgress.ref !== null) {
                  var info = '';
                  var ownerName = getCurrentFiberOwnerNameInDevOrNull();
                  if (ownerName) {
                    info +=
                      '\n\nCheck the render method of `' + ownerName + '`.';
                  }

                  var warningKey = ownerName || workInProgress._debugID || '';
                  var debugSource = workInProgress._debugSource;
                  if (debugSource) {
                    warningKey =
                      debugSource.fileName + ':' + debugSource.lineNumber;
                  }
                  if (!didWarnAboutStatelessRefs[warningKey]) {
                    didWarnAboutStatelessRefs[warningKey] = true;
                    warning$1(
                      false,
                      'Stateless function components cannot be given refs. ' +
                        'Attempts to access this ref will fail.%s',
                      info
                    );
                  }
                }

                if (typeof Component.getDerivedStateFromProps === 'function') {
                  var _componentName = getComponentName(Component) || 'Unknown';

                  if (
                    !didWarnAboutGetDerivedStateOnFunctionalComponent[
                      _componentName
                    ]
                  ) {
                    warningWithoutStack$1(
                      false,
                      '%s: Stateless functional components do not support getDerivedStateFromProps.',
                      _componentName
                    );
                    didWarnAboutGetDerivedStateOnFunctionalComponent[
                      _componentName
                    ] = true;
                  }
                }
              }
              reconcileChildren(
                current$$1,
                workInProgress,
                value,
                renderExpirationTime
              );
              memoizeProps(workInProgress, props);
              return workInProgress.child;
            }
          }

          function updatePlaceholderComponent(
            current$$1,
            workInProgress,
            renderExpirationTime
          ) {
            if (enableSuspense) {
              var nextProps = workInProgress.pendingProps;

              // Check if we already attempted to render the normal state. If we did,
              // and we timed out, render the placeholder state.
              var alreadyCaptured =
                (workInProgress.effectTag & DidCapture) === NoEffect;

              var nextDidTimeout = void 0;
              if (current$$1 !== null && workInProgress.updateQueue !== null) {
                // We're outside strict mode. Something inside this Placeholder boundary
                // suspended during the last commit. Switch to the placholder.
                workInProgress.updateQueue = null;
                nextDidTimeout = true;
                // If we're recovering from an error, reconcile twice: first to delete
                // all the existing children.
                reconcileChildren(
                  current$$1,
                  workInProgress,
                  null,
                  renderExpirationTime
                );
                current$$1.child = null;
                // Now we can continue reconciling like normal. This has the effect of
                // remounting all children regardless of whether their their
                // identity matches.
              } else {
                nextDidTimeout = !alreadyCaptured;
              }

              if ((workInProgress.mode & StrictMode) !== NoEffect) {
                if (nextDidTimeout) {
                  // If the timed-out view commits, schedule an update effect to record
                  // the committed time.
                  workInProgress.effectTag |= Update;
                } else {
                  // The state node points to the time at which placeholder timed out.
                  // We can clear it once we switch back to the normal children.
                  workInProgress.stateNode = null;
                }
              }

              // If the `children` prop is a function, treat it like a render prop.
              // TODO: This is temporary until we finalize a lower level API.
              var children = nextProps.children;
              var nextChildren = void 0;
              if (typeof children === 'function') {
                nextChildren = children(nextDidTimeout);
              } else {
                nextChildren = nextDidTimeout ? nextProps.fallback : children;
              }

              workInProgress.memoizedProps = nextProps;
              workInProgress.memoizedState = nextDidTimeout;
              reconcileChildren(
                current$$1,
                workInProgress,
                nextChildren,
                renderExpirationTime
              );
              return workInProgress.child;
            } else {
              return null;
            }
          }

          function updatePortalComponent(
            current$$1,
            workInProgress,
            renderExpirationTime
          ) {
            pushHostContainer(
              workInProgress,
              workInProgress.stateNode.containerInfo
            );
            var nextChildren = workInProgress.pendingProps;
            if (current$$1 === null) {
              // Portals are special because we don't append the children during mount
              // but at commit. Therefore we need to track insertions which the normal
              // flow doesn't do during mount. This doesn't happen at the root because
              // the root always starts with a "current" with a null child.
              // TODO: Consider unifying this with how the root works.
              workInProgress.child = reconcileChildFibers(
                workInProgress,
                null,
                nextChildren,
                renderExpirationTime
              );
              memoizeProps(workInProgress, nextChildren);
            } else {
              reconcileChildren(
                current$$1,
                workInProgress,
                nextChildren,
                renderExpirationTime
              );
              memoizeProps(workInProgress, nextChildren);
            }
            return workInProgress.child;
          }

          function updateContextProvider(
            current$$1,
            workInProgress,
            renderExpirationTime
          ) {
            var providerType = workInProgress.type;
            var context = providerType._context;

            var newProps = workInProgress.pendingProps;
            var oldProps = workInProgress.memoizedProps;

            var newValue = newProps.value;
            workInProgress.memoizedProps = newProps;

            {
              var providerPropTypes = workInProgress.type.propTypes;

              if (providerPropTypes) {
                checkPropTypes(
                  providerPropTypes,
                  newProps,
                  'prop',
                  'Context.Provider',
                  getCurrentFiberStackInDev
                );
              }
            }

            pushProvider(workInProgress, newValue);

            if (oldProps !== null) {
              var oldValue = oldProps.value;
              var changedBits = calculateChangedBits(
                context,
                newValue,
                oldValue
              );
              if (changedBits === 0) {
                // No change. Bailout early if children are the same.
                if (
                  oldProps.children === newProps.children &&
                  !hasContextChanged()
                ) {
                  return bailoutOnAlreadyFinishedWork(
                    current$$1,
                    workInProgress,
                    renderExpirationTime
                  );
                }
              } else {
                // The context value changed. Search for matching consumers and schedule
                // them to update.
                propagateContextChange(
                  workInProgress,
                  context,
                  changedBits,
                  renderExpirationTime
                );
              }
            }

            var newChildren = newProps.children;
            reconcileChildren(
              current$$1,
              workInProgress,
              newChildren,
              renderExpirationTime
            );
            return workInProgress.child;
          }

          function updateContextConsumer(
            current$$1,
            workInProgress,
            renderExpirationTime
          ) {
            var context = workInProgress.type;
            var newProps = workInProgress.pendingProps;
            var render = newProps.children;

            {
              !(typeof render === 'function')
                ? warningWithoutStack$1(
                    false,
                    'A context consumer was rendered with multiple children, or a child ' +
                      "that isn't a function. A context consumer expects a single child " +
                      'that is a function. If you did pass a function, make sure there ' +
                      'is no trailing or leading whitespace around it.'
                  )
                : void 0;
            }

            prepareToReadContext(workInProgress, renderExpirationTime);
            var newValue = readContext(context, newProps.unstable_observedBits);
            var newChildren = void 0;
            {
              ReactCurrentOwner$3.current = workInProgress;
              setCurrentPhase('render');
              newChildren = render(newValue);
              setCurrentPhase(null);
            }

            // React DevTools reads this flag.
            workInProgress.effectTag |= PerformedWork;
            reconcileChildren(
              current$$1,
              workInProgress,
              newChildren,
              renderExpirationTime
            );
            workInProgress.memoizedProps = newProps;
            return workInProgress.child;
          }

          /*
	  function reuseChildrenEffects(returnFiber : Fiber, firstChild : Fiber) {
	    let child = firstChild;
	    do {
	      // Ensure that the first and last effect of the parent corresponds
	      // to the children's first and last effect.
	      if (!returnFiber.firstEffect) {
	        returnFiber.firstEffect = child.firstEffect;
	      }
	      if (child.lastEffect) {
	        if (returnFiber.lastEffect) {
	          returnFiber.lastEffect.nextEffect = child.firstEffect;
	        }
	        returnFiber.lastEffect = child.lastEffect;
	      }
	    } while (child = child.sibling);
	  }
	  */

          function bailoutOnAlreadyFinishedWork(
            current$$1,
            workInProgress,
            renderExpirationTime
          ) {
            cancelWorkTimer(workInProgress);

            if (current$$1 !== null) {
              // Reuse previous context list
              workInProgress.firstContextDependency =
                current$$1.firstContextDependency;
            }

            if (enableProfilerTimer) {
              // Don't update "base" render times for bailouts.
              stopProfilerTimerIfRunning(workInProgress);
            }

            // Check if the children have any pending work.
            var childExpirationTime = workInProgress.childExpirationTime;
            if (
              childExpirationTime === NoWork ||
              childExpirationTime > renderExpirationTime
            ) {
              // The children don't have any work either. We can skip them.
              // TODO: Once we add back resuming, we should check if the children are
              // a work-in-progress set. If so, we need to transfer their effects.
              return null;
            } else {
              // This fiber doesn't have work, but its subtree does. Clone the child
              // fibers and continue.
              cloneChildFibers(current$$1, workInProgress);
              return workInProgress.child;
            }
          }

          // TODO: Delete memoizeProps/State and move to reconcile/bailout instead
          function memoizeProps(workInProgress, nextProps) {
            workInProgress.memoizedProps = nextProps;
          }

          function memoizeState(workInProgress, nextState) {
            workInProgress.memoizedState = nextState;
            // Don't reset the updateQueue, in case there are pending updates. Resetting
            // is handled by processUpdateQueue.
          }

          function beginWork(current$$1, workInProgress, renderExpirationTime) {
            var updateExpirationTime = workInProgress.expirationTime;
            if (
              !hasContextChanged() &&
              (updateExpirationTime === NoWork ||
                updateExpirationTime > renderExpirationTime)
            ) {
              // This fiber does not have any pending work. Bailout without entering
              // the begin phase. There's still some bookkeeping we that needs to be done
              // in this optimized path, mostly pushing stuff onto the stack.
              switch (workInProgress.tag) {
                case HostRoot:
                  pushHostRootContext(workInProgress);
                  resetHydrationState();
                  break;
                case HostComponent:
                  pushHostContext(workInProgress);
                  break;
                case ClassComponent: {
                  var Component = workInProgress.type;
                  if (isContextProvider(Component)) {
                    pushContextProvider(workInProgress);
                  }
                  break;
                }
                case ClassComponentLazy: {
                  var thenable = workInProgress.type;
                  var _Component = getResultFromResolvedThenable(thenable);
                  if (isContextProvider(_Component)) {
                    pushContextProvider(workInProgress);
                  }
                  break;
                }
                case HostPortal:
                  pushHostContainer(
                    workInProgress,
                    workInProgress.stateNode.containerInfo
                  );
                  break;
                case ContextProvider: {
                  var newValue = workInProgress.memoizedProps.value;
                  pushProvider(workInProgress, newValue);
                  break;
                }
                case Profiler:
                  if (enableProfilerTimer) {
                    workInProgress.effectTag |= Update;
                  }
                  break;
              }
              return bailoutOnAlreadyFinishedWork(
                current$$1,
                workInProgress,
                renderExpirationTime
              );
            }

            // Before entering the begin phase, clear the expiration time.
            workInProgress.expirationTime = NoWork;

            switch (workInProgress.tag) {
              case IndeterminateComponent: {
                var _Component3 = workInProgress.type;
                return mountIndeterminateComponent(
                  current$$1,
                  workInProgress,
                  _Component3,
                  renderExpirationTime
                );
              }
              case FunctionalComponent: {
                var _Component4 = workInProgress.type;
                var _unresolvedProps = workInProgress.pendingProps;
                return updateFunctionalComponent(
                  current$$1,
                  workInProgress,
                  _Component4,
                  _unresolvedProps,
                  renderExpirationTime
                );
              }
              case FunctionalComponentLazy: {
                var _thenable2 = workInProgress.type;
                var _Component5 = getResultFromResolvedThenable(_thenable2);
                var _unresolvedProps2 = workInProgress.pendingProps;
                var _child = updateFunctionalComponent(
                  current$$1,
                  workInProgress,
                  _Component5,
                  resolveDefaultProps(_Component5, _unresolvedProps2),
                  renderExpirationTime
                );
                workInProgress.memoizedProps = _unresolvedProps2;
                return _child;
              }
              case ClassComponent: {
                var _Component6 = workInProgress.type;
                var _unresolvedProps3 = workInProgress.pendingProps;
                return updateClassComponent(
                  current$$1,
                  workInProgress,
                  _Component6,
                  _unresolvedProps3,
                  renderExpirationTime
                );
              }
              case ClassComponentLazy: {
                var _thenable3 = workInProgress.type;
                var _Component7 = getResultFromResolvedThenable(_thenable3);
                var _unresolvedProps4 = workInProgress.pendingProps;
                var _child2 = updateClassComponent(
                  current$$1,
                  workInProgress,
                  _Component7,
                  resolveDefaultProps(_Component7, _unresolvedProps4),
                  renderExpirationTime
                );
                workInProgress.memoizedProps = _unresolvedProps4;
                return _child2;
              }
              case HostRoot:
                return updateHostRoot(
                  current$$1,
                  workInProgress,
                  renderExpirationTime
                );
              case HostComponent:
                return updateHostComponent(
                  current$$1,
                  workInProgress,
                  renderExpirationTime
                );
              case HostText:
                return updateHostText(current$$1, workInProgress);
              case PlaceholderComponent:
                return updatePlaceholderComponent(
                  current$$1,
                  workInProgress,
                  renderExpirationTime
                );
              case HostPortal:
                return updatePortalComponent(
                  current$$1,
                  workInProgress,
                  renderExpirationTime
                );
              case ForwardRef: {
                var type = workInProgress.type;
                return updateForwardRef(
                  current$$1,
                  workInProgress,
                  type,
                  workInProgress.pendingProps,
                  renderExpirationTime
                );
              }
              case ForwardRefLazy:
                var _thenable = workInProgress.type;
                var _Component2 = getResultFromResolvedThenable(_thenable);
                var unresolvedProps = workInProgress.pendingProps;
                var child = updateForwardRef(
                  current$$1,
                  workInProgress,
                  _Component2,
                  resolveDefaultProps(_Component2, unresolvedProps),
                  renderExpirationTime
                );
                workInProgress.memoizedProps = unresolvedProps;
                return child;
              case Fragment:
                return updateFragment(
                  current$$1,
                  workInProgress,
                  renderExpirationTime
                );
              case Mode:
                return updateMode(
                  current$$1,
                  workInProgress,
                  renderExpirationTime
                );
              case Profiler:
                return updateProfiler(
                  current$$1,
                  workInProgress,
                  renderExpirationTime
                );
              case ContextProvider:
                return updateContextProvider(
                  current$$1,
                  workInProgress,
                  renderExpirationTime
                );
              case ContextConsumer:
                return updateContextConsumer(
                  current$$1,
                  workInProgress,
                  renderExpirationTime
                );
              default:
                invariant(
                  false,
                  'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.'
                );
            }
          }

          function markUpdate(workInProgress) {
            // Tag the fiber with an update effect. This turns a Placement into
            // a PlacementAndUpdate.
            workInProgress.effectTag |= Update;
          }

          function markRef$1(workInProgress) {
            workInProgress.effectTag |= Ref;
          }

          function appendAllChildren(parent, workInProgress) {
            // We only have the top Fiber that was created but we need recurse down its
            // children to find all the terminal nodes.
            var node = workInProgress.child;
            while (node !== null) {
              if (node.tag === HostComponent || node.tag === HostText) {
                appendInitialChild(parent, node.stateNode);
              } else if (node.tag === HostPortal) {
                // If we have a portal child, then we don't want to traverse
                // down its children. Instead, we'll get insertions from each child in
                // the portal directly.
              } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === workInProgress) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === workInProgress) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }

          var updateHostContainer = void 0;
          var updateHostComponent$1 = void 0;
          var updateHostText$1 = void 0;
          if (supportsMutation) {
            // Mutation mode

            updateHostContainer = function(workInProgress) {
              // Noop
            };
            updateHostComponent$1 = function(
              current,
              workInProgress,
              type,
              newProps,
              rootContainerInstance
            ) {
              // If we have an alternate, that means this is an update and we need to
              // schedule a side-effect to do the updates.
              var oldProps = current.memoizedProps;
              if (oldProps === newProps) {
                // In mutation mode, this is sufficient for a bailout because
                // we won't touch this node even if children changed.
                return;
              }

              // If we get updated because one of our children updated, we don't
              // have newProps so we'll have to reuse them.
              // TODO: Split the update API as separate for the props vs. children.
              // Even better would be if children weren't special cased at all tho.
              var instance = workInProgress.stateNode;
              var currentHostContext = getHostContext();
              // TODO: Experiencing an error where oldProps is null. Suggests a host
              // component is hitting the resume path. Figure out why. Possibly
              // related to `hidden`.
              var updatePayload = prepareUpdate(
                instance,
                type,
                oldProps,
                newProps,
                rootContainerInstance,
                currentHostContext
              );
              // TODO: Type this specific to this type of component.
              workInProgress.updateQueue = updatePayload;
              // If the update payload indicates that there is a change or if there
              // is a new ref we mark this as an update. All the work is done in commitWork.
              if (updatePayload) {
                markUpdate(workInProgress);
              }
            };
            updateHostText$1 = function(
              current,
              workInProgress,
              oldText,
              newText
            ) {
              // If the text differs, mark it as an update. All the work in done in commitWork.
              if (oldText !== newText) {
                markUpdate(workInProgress);
              }
            };
          } else if (supportsPersistence) {
            // Persistent host tree mode

            // An unfortunate fork of appendAllChildren because we have two different parent types.
            var appendAllChildrenToContainer = function(
              containerChildSet,
              workInProgress
            ) {
              // We only have the top Fiber that was created but we need recurse down its
              // children to find all the terminal nodes.
              var node = workInProgress.child;
              while (node !== null) {
                if (node.tag === HostComponent || node.tag === HostText) {
                  appendChildToContainerChildSet(
                    containerChildSet,
                    node.stateNode
                  );
                } else if (node.tag === HostPortal) {
                  // If we have a portal child, then we don't want to traverse
                  // down its children. Instead, we'll get insertions from each child in
                  // the portal directly.
                } else if (node.child !== null) {
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
                if (node === workInProgress) {
                  return;
                }
                while (node.sibling === null) {
                  if (node.return === null || node.return === workInProgress) {
                    return;
                  }
                  node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
              }
            };
            updateHostContainer = function(workInProgress) {
              var portalOrRoot = workInProgress.stateNode;
              var childrenUnchanged = workInProgress.firstEffect === null;
              if (childrenUnchanged) {
                // No changes, just reuse the existing instance.
              } else {
                var container = portalOrRoot.containerInfo;
                var newChildSet = createContainerChildSet(container);
                // If children might have changed, we have to add them all to the set.
                appendAllChildrenToContainer(newChildSet, workInProgress);
                portalOrRoot.pendingChildren = newChildSet;
                // Schedule an update on the container to swap out the container.
                markUpdate(workInProgress);
                finalizeContainerChildren(container, newChildSet);
              }
            };
            updateHostComponent$1 = function(
              current,
              workInProgress,
              type,
              newProps,
              rootContainerInstance
            ) {
              var currentInstance = current.stateNode;
              var oldProps = current.memoizedProps;
              // If there are no effects associated with this node, then none of our children had any updates.
              // This guarantees that we can reuse all of them.
              var childrenUnchanged = workInProgress.firstEffect === null;
              if (childrenUnchanged && oldProps === newProps) {
                // No changes, just reuse the existing instance.
                // Note that this might release a previous clone.
                workInProgress.stateNode = currentInstance;
                return;
              }
              var recyclableInstance = workInProgress.stateNode;
              var currentHostContext = getHostContext();
              var updatePayload = null;
              if (oldProps !== newProps) {
                updatePayload = prepareUpdate(
                  recyclableInstance,
                  type,
                  oldProps,
                  newProps,
                  rootContainerInstance,
                  currentHostContext
                );
              }
              if (childrenUnchanged && updatePayload === null) {
                // No changes, just reuse the existing instance.
                // Note that this might release a previous clone.
                workInProgress.stateNode = currentInstance;
                return;
              }
              var newInstance = cloneInstance(
                currentInstance,
                updatePayload,
                type,
                oldProps,
                newProps,
                workInProgress,
                childrenUnchanged,
                recyclableInstance
              );
              if (
                finalizeInitialChildren(
                  newInstance,
                  type,
                  newProps,
                  rootContainerInstance,
                  currentHostContext
                )
              ) {
                markUpdate(workInProgress);
              }
              workInProgress.stateNode = newInstance;
              if (childrenUnchanged) {
                // If there are no other effects in this tree, we need to flag this node as having one.
                // Even though we're not going to use it for anything.
                // Otherwise parents won't know that there are new children to propagate upwards.
                markUpdate(workInProgress);
              } else {
                // If children might have changed, we have to add them all to the set.
                appendAllChildren(newInstance, workInProgress);
              }
            };
            updateHostText$1 = function(
              current,
              workInProgress,
              oldText,
              newText
            ) {
              if (oldText !== newText) {
                // If the text content differs, we'll create a new text instance for it.
                var rootContainerInstance = getRootHostContainer();
                var currentHostContext = getHostContext();
                workInProgress.stateNode = createTextInstance(
                  newText,
                  rootContainerInstance,
                  currentHostContext,
                  workInProgress
                );
                // We'll have to mark it as having an effect, even though we won't use the effect for anything.
                // This lets the parents know that at least one of their children has changed.
                markUpdate(workInProgress);
              }
            };
          } else {
            // No host operations
            updateHostContainer = function(workInProgress) {
              // Noop
            };
            updateHostComponent$1 = function(
              current,
              workInProgress,
              type,
              newProps,
              rootContainerInstance
            ) {
              // Noop
            };
            updateHostText$1 = function(
              current,
              workInProgress,
              oldText,
              newText
            ) {
              // Noop
            };
          }

          function completeWork(current, workInProgress, renderExpirationTime) {
            var newProps = workInProgress.pendingProps;

            switch (workInProgress.tag) {
              case FunctionalComponent:
              case FunctionalComponentLazy:
                break;
              case ClassComponent: {
                var Component = workInProgress.type;
                if (isContextProvider(Component)) {
                  popContext(workInProgress);
                }
                break;
              }
              case ClassComponentLazy: {
                var _Component = getResultFromResolvedThenable(
                  workInProgress.type
                );
                if (isContextProvider(_Component)) {
                  popContext(workInProgress);
                }
                break;
              }
              case HostRoot: {
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                var fiberRoot = workInProgress.stateNode;
                if (fiberRoot.pendingContext) {
                  fiberRoot.context = fiberRoot.pendingContext;
                  fiberRoot.pendingContext = null;
                }
                if (current === null || current.child === null) {
                  // If we hydrated, pop so that we can delete any remaining children
                  // that weren't hydrated.
                  popHydrationState(workInProgress);
                  // This resets the hacky state to fix isMounted before committing.
                  // TODO: Delete this when we delete isMounted and findDOMNode.
                  workInProgress.effectTag &= ~Placement;
                }
                updateHostContainer(workInProgress);
                break;
              }
              case HostComponent: {
                popHostContext(workInProgress);
                var rootContainerInstance = getRootHostContainer();
                var type = workInProgress.type;
                if (current !== null && workInProgress.stateNode != null) {
                  updateHostComponent$1(
                    current,
                    workInProgress,
                    type,
                    newProps,
                    rootContainerInstance
                  );

                  if (current.ref !== workInProgress.ref) {
                    markRef$1(workInProgress);
                  }
                } else {
                  if (!newProps) {
                    !(workInProgress.stateNode !== null)
                      ? invariant(
                          false,
                          'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.'
                        )
                      : void 0;
                    // This can happen when we abort work.
                    break;
                  }

                  var currentHostContext = getHostContext();
                  // TODO: Move createInstance to beginWork and keep it on a context
                  // "stack" as the parent. Then append children as we go in beginWork
                  // or completeWork depending on we want to add then top->down or
                  // bottom->up. Top->down is faster in IE11.
                  var wasHydrated = popHydrationState(workInProgress);
                  if (wasHydrated) {
                    // TODO: Move this and createInstance step into the beginPhase
                    // to consolidate.
                    if (
                      prepareToHydrateHostInstance(
                        workInProgress,
                        rootContainerInstance,
                        currentHostContext
                      )
                    ) {
                      // If changes to the hydrated node needs to be applied at the
                      // commit-phase we mark this as such.
                      markUpdate(workInProgress);
                    }
                  } else {
                    var instance = createInstance(
                      type,
                      newProps,
                      rootContainerInstance,
                      currentHostContext,
                      workInProgress
                    );

                    appendAllChildren(instance, workInProgress);

                    // Certain renderers require commit-time effects for initial mount.
                    // (eg DOM renderer supports auto-focus for certain elements).
                    // Make sure such renderers get scheduled for later work.
                    if (
                      finalizeInitialChildren(
                        instance,
                        type,
                        newProps,
                        rootContainerInstance,
                        currentHostContext
                      )
                    ) {
                      markUpdate(workInProgress);
                    }
                    workInProgress.stateNode = instance;
                  }

                  if (workInProgress.ref !== null) {
                    // If there is a ref on a host node we need to schedule a callback
                    markRef$1(workInProgress);
                  }
                }
                break;
              }
              case HostText: {
                var newText = newProps;
                if (current && workInProgress.stateNode != null) {
                  var oldText = current.memoizedProps;
                  // If we have an alternate, that means this is an update and we need
                  // to schedule a side-effect to do the updates.
                  updateHostText$1(current, workInProgress, oldText, newText);
                } else {
                  if (typeof newText !== 'string') {
                    !(workInProgress.stateNode !== null)
                      ? invariant(
                          false,
                          'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.'
                        )
                      : void 0;
                    // This can happen when we abort work.
                  }
                  var _rootContainerInstance = getRootHostContainer();
                  var _currentHostContext = getHostContext();
                  var _wasHydrated = popHydrationState(workInProgress);
                  if (_wasHydrated) {
                    if (prepareToHydrateHostTextInstance(workInProgress)) {
                      markUpdate(workInProgress);
                    }
                  } else {
                    workInProgress.stateNode = createTextInstance(
                      newText,
                      _rootContainerInstance,
                      _currentHostContext,
                      workInProgress
                    );
                  }
                }
                break;
              }
              case ForwardRef:
              case ForwardRefLazy:
                break;
              case PlaceholderComponent:
                break;
              case Fragment:
                break;
              case Mode:
                break;
              case Profiler:
                break;
              case HostPortal:
                popHostContainer(workInProgress);
                updateHostContainer(workInProgress);
                break;
              case ContextProvider:
                // Pop provider fiber
                popProvider(workInProgress);
                break;
              case ContextConsumer:
                break;
              // Error cases
              case IndeterminateComponent:
                invariant(
                  false,
                  'An indeterminate component should have become determinate before completing. This error is likely caused by a bug in React. Please file an issue.'
                );
              // eslint-disable-next-line no-fallthrough
              default:
                invariant(
                  false,
                  'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.'
                );
            }

            return null;
          }

          // This module is forked in different environments.
          // By default, return `true` to log errors to the console.
          // Forks can return `false` if this isn't desirable.
          function showErrorDialog(capturedError) {
            return true;
          }

          function logCapturedError(capturedError) {
            var logError = showErrorDialog(capturedError);

            // Allow injected showErrorDialog() to prevent default console.error logging.
            // This enables renderers like ReactNative to better manage redbox behavior.
            if (logError === false) {
              return;
            }

            var error = capturedError.error;
            {
              var componentName = capturedError.componentName,
                componentStack = capturedError.componentStack,
                errorBoundaryName = capturedError.errorBoundaryName,
                errorBoundaryFound = capturedError.errorBoundaryFound,
                willRetry = capturedError.willRetry;

              // Browsers support silencing uncaught errors by calling
              // `preventDefault()` in window `error` handler.
              // We record this information as an expando on the error.

              if (error != null && error._suppressLogging) {
                if (errorBoundaryFound && willRetry) {
                  // The error is recoverable and was silenced.
                  // Ignore it and don't print the stack addendum.
                  // This is handy for testing error boundaries without noise.
                  return;
                }
                // The error is fatal. Since the silencing might have
                // been accidental, we'll surface it anyway.
                // However, the browser would have silenced the original error
                // so we'll print it first, and then print the stack addendum.
                console.error(error);
                // For a more detailed description of this block, see:
                // https://github.com/facebook/react/pull/13384
              }

              var componentNameMessage = componentName
                ? 'The above error occurred in the <' +
                  componentName +
                  '> component:'
                : 'The above error occurred in one of your React components:';

              var errorBoundaryMessage = void 0;
              // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.
              if (errorBoundaryFound && errorBoundaryName) {
                if (willRetry) {
                  errorBoundaryMessage =
                    'React will try to recreate this component tree from scratch ' +
                    ('using the error boundary you provided, ' +
                      errorBoundaryName +
                      '.');
                } else {
                  errorBoundaryMessage =
                    'This error was initially handled by the error boundary ' +
                    errorBoundaryName +
                    '.\n' +
                    'Recreating the tree from scratch failed so React will unmount the tree.';
                }
              } else {
                errorBoundaryMessage =
                  'Consider adding an error boundary to your tree to customize error handling behavior.\n' +
                  'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
              }
              var combinedMessage =
                '' +
                componentNameMessage +
                componentStack +
                '\n\n' +
                ('' + errorBoundaryMessage);

              // In development, we provide our own message with just the component stack.
              // We don't include the original error message and JS stack because the browser
              // has already printed it. Even if the application swallows the error, it is still
              // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
              console.error(combinedMessage);
            }
          }

          var emptyObject = {};

          var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
          {
            didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
          }

          function logError(boundary, errorInfo) {
            var source = errorInfo.source;
            var stack = errorInfo.stack;
            if (stack === null && source !== null) {
              stack = getStackByFiberInDevAndProd(source);
            }

            var capturedError = {
              componentName:
                source !== null ? getComponentName(source.type) : null,
              componentStack: stack !== null ? stack : '',
              error: errorInfo.value,
              errorBoundary: null,
              errorBoundaryName: null,
              errorBoundaryFound: false,
              willRetry: false
            };

            if (boundary !== null && boundary.tag === ClassComponent) {
              capturedError.errorBoundary = boundary.stateNode;
              capturedError.errorBoundaryName = getComponentName(boundary.type);
              capturedError.errorBoundaryFound = true;
              capturedError.willRetry = true;
            }

            try {
              logCapturedError(capturedError);
            } catch (e) {
              // This method must not throw, or React internal state will get messed up.
              // If console.error is overridden, or logCapturedError() shows a dialog that throws,
              // we want to report this error outside of the normal stack as a last resort.
              // https://github.com/facebook/react/issues/13188
              setTimeout(function() {
                throw e;
              });
            }
          }

          var callComponentWillUnmountWithTimer = function(
            current$$1,
            instance
          ) {
            startPhaseTimer(current$$1, 'componentWillUnmount');
            instance.props = current$$1.memoizedProps;
            instance.state = current$$1.memoizedState;
            instance.componentWillUnmount();
            stopPhaseTimer();
          };

          // Capture errors so they don't interrupt unmounting.
          function safelyCallComponentWillUnmount(current$$1, instance) {
            {
              invokeGuardedCallback(
                null,
                callComponentWillUnmountWithTimer,
                null,
                current$$1,
                instance
              );
              if (hasCaughtError()) {
                var unmountError = clearCaughtError();
                captureCommitPhaseError(current$$1, unmountError);
              }
            }
          }

          function safelyDetachRef(current$$1) {
            var ref = current$$1.ref;
            if (ref !== null) {
              if (typeof ref === 'function') {
                {
                  invokeGuardedCallback(null, ref, null, null);
                  if (hasCaughtError()) {
                    var refError = clearCaughtError();
                    captureCommitPhaseError(current$$1, refError);
                  }
                }
              } else {
                ref.current = null;
              }
            }
          }

          function commitBeforeMutationLifeCycles(current$$1, finishedWork) {
            switch (finishedWork.tag) {
              case ClassComponent:
              case ClassComponentLazy: {
                if (finishedWork.effectTag & Snapshot) {
                  if (current$$1 !== null) {
                    var prevProps = current$$1.memoizedProps;
                    var prevState = current$$1.memoizedState;
                    startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');
                    var instance = finishedWork.stateNode;
                    instance.props = finishedWork.memoizedProps;
                    instance.state = finishedWork.memoizedState;
                    var snapshot = instance.getSnapshotBeforeUpdate(
                      prevProps,
                      prevState
                    );
                    {
                      var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                      if (
                        snapshot === undefined &&
                        !didWarnSet.has(finishedWork.type)
                      ) {
                        didWarnSet.add(finishedWork.type);
                        warningWithoutStack$1(
                          false,
                          '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' +
                            'must be returned. You have returned undefined.',
                          getComponentName(finishedWork.type)
                        );
                      }
                    }
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                    stopPhaseTimer();
                  }
                }
                return;
              }
              case HostRoot:
              case HostComponent:
              case HostText:
              case HostPortal:
                // Nothing to do for these component types
                return;
              default: {
                invariant(
                  false,
                  'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.'
                );
              }
            }
          }

          function commitLifeCycles(
            finishedRoot,
            current$$1,
            finishedWork,
            committedExpirationTime
          ) {
            switch (finishedWork.tag) {
              case ClassComponent:
              case ClassComponentLazy: {
                var instance = finishedWork.stateNode;
                if (finishedWork.effectTag & Update) {
                  if (current$$1 === null) {
                    startPhaseTimer(finishedWork, 'componentDidMount');
                    instance.props = finishedWork.memoizedProps;
                    instance.state = finishedWork.memoizedState;
                    instance.componentDidMount();
                    stopPhaseTimer();
                  } else {
                    var prevProps = current$$1.memoizedProps;
                    var prevState = current$$1.memoizedState;
                    startPhaseTimer(finishedWork, 'componentDidUpdate');
                    instance.props = finishedWork.memoizedProps;
                    instance.state = finishedWork.memoizedState;
                    instance.componentDidUpdate(
                      prevProps,
                      prevState,
                      instance.__reactInternalSnapshotBeforeUpdate
                    );
                    stopPhaseTimer();
                  }
                }
                var updateQueue = finishedWork.updateQueue;
                if (updateQueue !== null) {
                  instance.props = finishedWork.memoizedProps;
                  instance.state = finishedWork.memoizedState;
                  commitUpdateQueue(
                    finishedWork,
                    updateQueue,
                    instance,
                    committedExpirationTime
                  );
                }
                return;
              }
              case HostRoot: {
                var _updateQueue = finishedWork.updateQueue;
                if (_updateQueue !== null) {
                  var _instance = null;
                  if (finishedWork.child !== null) {
                    switch (finishedWork.child.tag) {
                      case HostComponent:
                        _instance = getPublicInstance(
                          finishedWork.child.stateNode
                        );
                        break;
                      case ClassComponent:
                      case ClassComponentLazy:
                        _instance = finishedWork.child.stateNode;
                        break;
                    }
                  }
                  commitUpdateQueue(
                    finishedWork,
                    _updateQueue,
                    _instance,
                    committedExpirationTime
                  );
                }
                return;
              }
              case HostComponent: {
                var _instance2 = finishedWork.stateNode;

                // Renderers may schedule work to be done after host components are mounted
                // (eg DOM renderer may schedule auto-focus for inputs and form controls).
                // These effects should only be committed when components are first mounted,
                // aka when there is no current/alternate.
                if (current$$1 === null && finishedWork.effectTag & Update) {
                  var type = finishedWork.type;
                  var props = finishedWork.memoizedProps;
                  commitMount(_instance2, type, props, finishedWork);
                }

                return;
              }
              case HostText: {
                // We have no life-cycles associated with text.
                return;
              }
              case HostPortal: {
                // We have no life-cycles associated with portals.
                return;
              }
              case Profiler: {
                if (enableProfilerTimer) {
                  var onRender = finishedWork.memoizedProps.onRender;

                  if (enableSchedulerTracing) {
                    onRender(
                      finishedWork.memoizedProps.id,
                      current$$1 === null ? 'mount' : 'update',
                      finishedWork.actualDuration,
                      finishedWork.treeBaseDuration,
                      finishedWork.actualStartTime,
                      getCommitTime(),
                      finishedRoot.memoizedInteractions
                    );
                  } else {
                    onRender(
                      finishedWork.memoizedProps.id,
                      current$$1 === null ? 'mount' : 'update',
                      finishedWork.actualDuration,
                      finishedWork.treeBaseDuration,
                      finishedWork.actualStartTime,
                      getCommitTime()
                    );
                  }
                }
                return;
              }
              case PlaceholderComponent: {
                if (enableSuspense) {
                  if ((finishedWork.mode & StrictMode) === NoEffect) {
                    // In loose mode, a placeholder times out by scheduling a synchronous
                    // update in the commit phase. Use `updateQueue` field to signal that
                    // the Timeout needs to switch to the placeholder. We don't need an
                    // entire queue. Any non-null value works.
                    // $FlowFixMe - Intentionally using a value other than an UpdateQueue.
                    finishedWork.updateQueue = emptyObject;
                    scheduleWork(finishedWork, Sync);
                  } else {
                    // In strict mode, the Update effect is used to record the time at
                    // which the placeholder timed out.
                    var currentTime = requestCurrentTime();
                    finishedWork.stateNode = { timedOutAt: currentTime };
                  }
                }
                return;
              }
              default: {
                invariant(
                  false,
                  'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.'
                );
              }
            }
          }

          function commitAttachRef(finishedWork) {
            var ref = finishedWork.ref;
            if (ref !== null) {
              var instance = finishedWork.stateNode;
              var instanceToUse = void 0;
              switch (finishedWork.tag) {
                case HostComponent:
                  instanceToUse = getPublicInstance(instance);
                  break;
                default:
                  instanceToUse = instance;
              }
              if (typeof ref === 'function') {
                ref(instanceToUse);
              } else {
                {
                  if (!ref.hasOwnProperty('current')) {
                    warningWithoutStack$1(
                      false,
                      'Unexpected ref object provided for %s. ' +
                        'Use either a ref-setter function or React.createRef().%s',
                      getComponentName(finishedWork.type),
                      getStackByFiberInDevAndProd(finishedWork)
                    );
                  }
                }

                ref.current = instanceToUse;
              }
            }
          }

          function commitDetachRef(current$$1) {
            var currentRef = current$$1.ref;
            if (currentRef !== null) {
              if (typeof currentRef === 'function') {
                currentRef(null);
              } else {
                currentRef.current = null;
              }
            }
          }

          // User-originating errors (lifecycles and refs) should not interrupt
          // deletion, so don't let them throw. Host-originating errors should
          // interrupt deletion, so it's okay
          function commitUnmount(current$$1) {
            onCommitUnmount(current$$1);

            switch (current$$1.tag) {
              case ClassComponent:
              case ClassComponentLazy: {
                safelyDetachRef(current$$1);
                var instance = current$$1.stateNode;
                if (typeof instance.componentWillUnmount === 'function') {
                  safelyCallComponentWillUnmount(current$$1, instance);
                }
                return;
              }
              case HostComponent: {
                safelyDetachRef(current$$1);
                return;
              }
              case HostPortal: {
                // TODO: this is recursive.
                // We are also not using this parent because
                // the portal will get pushed immediately.
                if (supportsMutation) {
                  unmountHostComponents(current$$1);
                } else if (supportsPersistence) {
                  emptyPortalContainer(current$$1);
                }
                return;
              }
            }
          }

          function commitNestedUnmounts(root) {
            // While we're inside a removed host node we don't want to call
            // removeChild on the inner nodes because they're removed by the top
            // call anyway. We also want to call componentWillUnmount on all
            // composites before this host node is removed from the tree. Therefore
            var node = root;
            while (true) {
              commitUnmount(node);
              // Visit children because they may contain more composite or host nodes.
              // Skip portals because commitUnmount() currently visits them recursively.
              if (
                node.child !== null &&
                // If we use mutation we drill down into portals using commitUnmount above.
                // If we don't use mutation we drill down into portals here instead.
                (!supportsMutation || node.tag !== HostPortal)
              ) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === root) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === root) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }

          function detachFiber(current$$1) {
            // Cut off the return pointers to disconnect it from the tree. Ideally, we
            // should clear the child pointer of the parent alternate to let this
            // get GC:ed but we don't know which for sure which parent is the current
            // one so we'll settle for GC:ing the subtree of this child. This child
            // itself will be GC:ed when the parent updates the next time.
            current$$1.return = null;
            current$$1.child = null;
            if (current$$1.alternate) {
              current$$1.alternate.child = null;
              current$$1.alternate.return = null;
            }
          }

          function emptyPortalContainer(current$$1) {
            if (!supportsPersistence) {
              return;
            }

            var portal = current$$1.stateNode;
            var containerInfo = portal.containerInfo;

            var emptyChildSet = createContainerChildSet(containerInfo);
            replaceContainerChildren(containerInfo, emptyChildSet);
          }

          function commitContainer(finishedWork) {
            if (!supportsPersistence) {
              return;
            }

            switch (finishedWork.tag) {
              case ClassComponent:
              case ClassComponentLazy: {
                return;
              }
              case HostComponent: {
                return;
              }
              case HostText: {
                return;
              }
              case HostRoot:
              case HostPortal: {
                var portalOrRoot = finishedWork.stateNode;
                var containerInfo = portalOrRoot.containerInfo,
                  _pendingChildren = portalOrRoot.pendingChildren;

                replaceContainerChildren(containerInfo, _pendingChildren);
                return;
              }
              default: {
                invariant(
                  false,
                  'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.'
                );
              }
            }
          }

          function getHostParentFiber(fiber) {
            var parent = fiber.return;
            while (parent !== null) {
              if (isHostParent(parent)) {
                return parent;
              }
              parent = parent.return;
            }
            invariant(
              false,
              'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.'
            );
          }

          function isHostParent(fiber) {
            return (
              fiber.tag === HostComponent ||
              fiber.tag === HostRoot ||
              fiber.tag === HostPortal
            );
          }

          function getHostSibling(fiber) {
            // We're going to search forward into the tree until we find a sibling host
            // node. Unfortunately, if multiple insertions are done in a row we have to
            // search past them. This leads to exponential search for the next sibling.
            var node = fiber;
            siblings: while (true) {
              // If we didn't find anything, let's try the next sibling.
              while (node.sibling === null) {
                if (node.return === null || isHostParent(node.return)) {
                  // If we pop out of the root or hit the parent the fiber we are the
                  // last sibling.
                  return null;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
              while (node.tag !== HostComponent && node.tag !== HostText) {
                // If it is not host node and, we might have a host node inside it.
                // Try to search down until we find one.
                if (node.effectTag & Placement) {
                  // If we don't have a child, try the siblings instead.
                  continue siblings;
                }
                // If we don't have a child, try the siblings instead.
                // We also skip portals because they are not part of this host tree.
                if (node.child === null || node.tag === HostPortal) {
                  continue siblings;
                } else {
                  node.child.return = node;
                  node = node.child;
                }
              }
              // Check if this host node is stable or about to be placed.
              if (!(node.effectTag & Placement)) {
                // Found it!
                return node.stateNode;
              }
            }
          }

          function commitPlacement(finishedWork) {
            if (!supportsMutation) {
              return;
            }

            // Recursively insert all host nodes into the parent.
            var parentFiber = getHostParentFiber(finishedWork);

            // Note: these two variables *must* always be updated together.
            var parent = void 0;
            var isContainer = void 0;

            switch (parentFiber.tag) {
              case HostComponent:
                parent = parentFiber.stateNode;
                isContainer = false;
                break;
              case HostRoot:
                parent = parentFiber.stateNode.containerInfo;
                isContainer = true;
                break;
              case HostPortal:
                parent = parentFiber.stateNode.containerInfo;
                isContainer = true;
                break;
              default:
                invariant(
                  false,
                  'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.'
                );
            }
            if (parentFiber.effectTag & ContentReset) {
              // Reset the text content of the parent before doing any insertions
              resetTextContent(parent);
              // Clear ContentReset from the effect tag
              parentFiber.effectTag &= ~ContentReset;
            }

            var before = getHostSibling(finishedWork);
            // We only have the top Fiber that was inserted but we need recurse down its
            // children to find all the terminal nodes.
            var node = finishedWork;
            while (true) {
              if (node.tag === HostComponent || node.tag === HostText) {
                if (before) {
                  if (isContainer) {
                    insertInContainerBefore(parent, node.stateNode, before);
                  } else {
                    insertBefore(parent, node.stateNode, before);
                  }
                } else {
                  if (isContainer) {
                    appendChildToContainer(parent, node.stateNode);
                  } else {
                    appendChild(parent, node.stateNode);
                  }
                }
              } else if (node.tag === HostPortal) {
                // If the insertion itself is a portal, then we don't want to traverse
                // down its children. Instead, we'll get insertions from each child in
                // the portal directly.
              } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === finishedWork) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === finishedWork) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }

          function unmountHostComponents(current$$1) {
            // We only have the top Fiber that was deleted but we need recurse down its
            var node = current$$1;

            // Each iteration, currentParent is populated with node's host parent if not
            // currentParentIsValid.
            var currentParentIsValid = false;

            // Note: these two variables *must* always be updated together.
            var currentParent = void 0;
            var currentParentIsContainer = void 0;

            while (true) {
              if (!currentParentIsValid) {
                var parent = node.return;
                findParent: while (true) {
                  !(parent !== null)
                    ? invariant(
                        false,
                        'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.'
                      )
                    : void 0;
                  switch (parent.tag) {
                    case HostComponent:
                      currentParent = parent.stateNode;
                      currentParentIsContainer = false;
                      break findParent;
                    case HostRoot:
                      currentParent = parent.stateNode.containerInfo;
                      currentParentIsContainer = true;
                      break findParent;
                    case HostPortal:
                      currentParent = parent.stateNode.containerInfo;
                      currentParentIsContainer = true;
                      break findParent;
                  }
                  parent = parent.return;
                }
                currentParentIsValid = true;
              }

              if (node.tag === HostComponent || node.tag === HostText) {
                commitNestedUnmounts(node);
                // After all the children have unmounted, it is now safe to remove the
                // node from the tree.
                if (currentParentIsContainer) {
                  removeChildFromContainer(currentParent, node.stateNode);
                } else {
                  removeChild(currentParent, node.stateNode);
                }
                // Don't visit children because we already visited them.
              } else if (node.tag === HostPortal) {
                // When we go into a portal, it becomes the parent to remove from.
                // We will reassign it back when we pop the portal on the way up.
                currentParent = node.stateNode.containerInfo;
                currentParentIsContainer = true;
                // Visit children because portals might contain host components.
                if (node.child !== null) {
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
              } else {
                commitUnmount(node);
                // Visit children because we may find more host components below.
                if (node.child !== null) {
                  node.child.return = node;
                  node = node.child;
                  continue;
                }
              }
              if (node === current$$1) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === current$$1) {
                  return;
                }
                node = node.return;
                if (node.tag === HostPortal) {
                  // When we go out of the portal, we need to restore the parent.
                  // Since we don't keep a stack of them, we will search for it.
                  currentParentIsValid = false;
                }
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }

          function commitDeletion(current$$1) {
            if (supportsMutation) {
              // Recursively delete all host nodes from the parent.
              // Detach refs and call componentWillUnmount() on the whole subtree.
              unmountHostComponents(current$$1);
            } else {
              // Detach refs and call componentWillUnmount() on the whole subtree.
              commitNestedUnmounts(current$$1);
            }
            detachFiber(current$$1);
          }

          function commitWork(current$$1, finishedWork) {
            if (!supportsMutation) {
              commitContainer(finishedWork);
              return;
            }

            switch (finishedWork.tag) {
              case ClassComponent:
              case ClassComponentLazy: {
                return;
              }
              case HostComponent: {
                var instance = finishedWork.stateNode;
                if (instance != null) {
                  // Commit the work prepared earlier.
                  var newProps = finishedWork.memoizedProps;
                  // For hydration we reuse the update path but we treat the oldProps
                  // as the newProps. The updatePayload will contain the real change in
                  // this case.
                  var oldProps =
                    current$$1 !== null ? current$$1.memoizedProps : newProps;
                  var type = finishedWork.type;
                  // TODO: Type the updateQueue to be specific to host components.
                  var updatePayload = finishedWork.updateQueue;
                  finishedWork.updateQueue = null;
                  if (updatePayload !== null) {
                    commitUpdate(
                      instance,
                      updatePayload,
                      type,
                      oldProps,
                      newProps,
                      finishedWork
                    );
                  }
                }
                return;
              }
              case HostText: {
                !(finishedWork.stateNode !== null)
                  ? invariant(
                      false,
                      'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.'
                    )
                  : void 0;
                var textInstance = finishedWork.stateNode;
                var newText = finishedWork.memoizedProps;
                // For hydration we reuse the update path but we treat the oldProps
                // as the newProps. The updatePayload will contain the real change in
                // this case.
                var oldText =
                  current$$1 !== null ? current$$1.memoizedProps : newText;
                commitTextUpdate(textInstance, oldText, newText);
                return;
              }
              case HostRoot: {
                return;
              }
              case Profiler: {
                return;
              }
              case PlaceholderComponent: {
                return;
              }
              default: {
                invariant(
                  false,
                  'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.'
                );
              }
            }
          }

          function commitResetTextContent(current$$1) {
            if (!supportsMutation) {
              return;
            }
            resetTextContent(current$$1.stateNode);
          }

          function NoopComponent() {
            return null;
          }

          function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
            var update = createUpdate(expirationTime);
            // Unmount the root by rendering null.
            update.tag = CaptureUpdate;
            // Caution: React DevTools currently depends on this property
            // being called "element".
            update.payload = { element: null };
            var error = errorInfo.value;
            update.callback = function() {
              onUncaughtError(error);
              logError(fiber, errorInfo);
            };
            return update;
          }

          function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
            var update = createUpdate(expirationTime);
            update.tag = CaptureUpdate;
            var getDerivedStateFromCatch = fiber.type.getDerivedStateFromCatch;
            if (
              enableGetDerivedStateFromCatch &&
              typeof getDerivedStateFromCatch === 'function'
            ) {
              var error = errorInfo.value;
              update.payload = function() {
                return getDerivedStateFromCatch(error);
              };
            }

            var inst = fiber.stateNode;
            if (inst !== null && typeof inst.componentDidCatch === 'function') {
              update.callback = function callback() {
                if (
                  !enableGetDerivedStateFromCatch ||
                  getDerivedStateFromCatch !== 'function'
                ) {
                  // To preserve the preexisting retry behavior of error boundaries,
                  // we keep track of which ones already failed during this batch.
                  // This gets reset before we yield back to the browser.
                  // TODO: Warn in strict mode if getDerivedStateFromCatch is
                  // not defined.
                  markLegacyErrorBoundaryAsFailed(this);
                }
                var error = errorInfo.value;
                var stack = errorInfo.stack;
                logError(fiber, errorInfo);
                this.componentDidCatch(error, {
                  componentStack: stack !== null ? stack : ''
                });
              };
            }
            return update;
          }

          function throwException(
            root,
            returnFiber,
            sourceFiber,
            value,
            renderExpirationTime
          ) {
            // The source fiber did not complete.
            sourceFiber.effectTag |= Incomplete;
            // Its effect list is no longer valid.
            sourceFiber.firstEffect = sourceFiber.lastEffect = null;

            if (
              enableSuspense &&
              value !== null &&
              typeof value === 'object' &&
              typeof value.then === 'function'
            ) {
              // This is a thenable.
              var thenable = value;

              // Find the earliest timeout threshold of all the placeholders in the
              // ancestor path. We could avoid this traversal by storing the thresholds on
              // the stack, but we choose not to because we only hit this path if we're
              // IO-bound (i.e. if something suspends). Whereas the stack is used even in
              // the non-IO- bound case.
              var _workInProgress = returnFiber;
              var earliestTimeoutMs = -1;
              var startTimeMs = -1;
              do {
                if (_workInProgress.tag === PlaceholderComponent) {
                  var current = _workInProgress.alternate;
                  if (
                    current !== null &&
                    current.memoizedState === true &&
                    current.stateNode !== null
                  ) {
                    // Reached a placeholder that already timed out. Each timed out
                    // placeholder acts as the root of a new suspense boundary.

                    // Use the time at which the placeholder timed out as the start time
                    // for the current render.
                    var timedOutAt = current.stateNode.timedOutAt;
                    startTimeMs = expirationTimeToMs(timedOutAt);

                    // Do not search any further.
                    break;
                  }
                  var timeoutPropMs = _workInProgress.pendingProps.delayMs;
                  if (typeof timeoutPropMs === 'number') {
                    if (timeoutPropMs <= 0) {
                      earliestTimeoutMs = 0;
                    } else if (
                      earliestTimeoutMs === -1 ||
                      timeoutPropMs < earliestTimeoutMs
                    ) {
                      earliestTimeoutMs = timeoutPropMs;
                    }
                  }
                }
                _workInProgress = _workInProgress.return;
              } while (_workInProgress !== null);

              // Schedule the nearest Placeholder to re-render the timed out view.
              _workInProgress = returnFiber;
              do {
                if (_workInProgress.tag === PlaceholderComponent) {
                  var didTimeout = _workInProgress.memoizedState;
                  if (!didTimeout) {
                    // Found the nearest boundary.

                    // If the boundary is not in async mode, we should not suspend, and
                    // likewise, when the promise resolves, we should ping synchronously.
                    var pingTime =
                      (_workInProgress.mode & AsyncMode) === NoEffect
                        ? Sync
                        : renderExpirationTime;

                    // Attach a listener to the promise to "ping" the root and retry.
                    var onResolveOrReject = retrySuspendedRoot.bind(
                      null,
                      root,
                      _workInProgress,
                      pingTime
                    );
                    thenable.then(onResolveOrReject, onResolveOrReject);

                    // If the boundary is outside of strict mode, we should *not* suspend
                    // the commit. Pretend as if the suspended component rendered null and
                    // keep rendering. In the commit phase, we'll schedule a subsequent
                    // synchronous update to re-render the Placeholder.
                    //
                    // Note: It doesn't matter whether the component that suspended was
                    // inside a strict mode tree. If the Placeholder is outside of it, we
                    // should *not* suspend the commit.
                    if ((_workInProgress.mode & StrictMode) === NoEffect) {
                      _workInProgress.effectTag |= Update;

                      // Unmount the source fiber's children
                      var nextChildren = null;
                      reconcileChildren(
                        sourceFiber.alternate,
                        sourceFiber,
                        nextChildren,
                        renderExpirationTime
                      );
                      sourceFiber.effectTag &= ~Incomplete;
                      if (sourceFiber.tag === IndeterminateComponent) {
                        // Let's just assume it's a functional component. This fiber will
                        // be unmounted in the immediate next commit, anyway.
                        sourceFiber.tag = FunctionalComponent;
                      }

                      if (
                        sourceFiber.tag === ClassComponent ||
                        sourceFiber.tag === ClassComponentLazy
                      ) {
                        // We're going to commit this fiber even though it didn't
                        // complete. But we shouldn't call any lifecycle methods or
                        // callbacks. Remove all lifecycle effect tags.
                        sourceFiber.effectTag &= ~LifecycleEffectMask;
                        if (sourceFiber.alternate === null) {
                          // We're about to mount a class component that doesn't have an
                          // instance. Turn this into a dummy functional component instead,
                          // to prevent type errors. This is a bit weird but it's an edge
                          // case and we're about to synchronously delete this
                          // component, anyway.
                          sourceFiber.tag = FunctionalComponent;
                          sourceFiber.type = NoopComponent;
                        }
                      }

                      // Exit without suspending.
                      return;
                    }

                    // Confirmed that the boundary is in a strict mode tree. Continue with
                    // the normal suspend path.

                    var absoluteTimeoutMs = void 0;
                    if (earliestTimeoutMs === -1) {
                      // If no explicit threshold is given, default to an abitrarily large
                      // value. The actual size doesn't matter because the threshold for the
                      // whole tree will be clamped to the expiration time.
                      absoluteTimeoutMs = maxSigned31BitInt;
                    } else {
                      if (startTimeMs === -1) {
                        // This suspend happened outside of any already timed-out
                        // placeholders. We don't know exactly when the update was scheduled,
                        // but we can infer an approximate start time from the expiration
                        // time. First, find the earliest uncommitted expiration time in the
                        // tree, including work that is suspended. Then subtract the offset
                        // used to compute an async update's expiration time. This will cause
                        // high priority (interactive) work to expire earlier than necessary,
                        // but we can account for this by adjusting for the Just Noticeable
                        // Difference.
                        var earliestExpirationTime = findEarliestOutstandingPriorityLevel(
                          root,
                          renderExpirationTime
                        );
                        var earliestExpirationTimeMs = expirationTimeToMs(
                          earliestExpirationTime
                        );
                        startTimeMs =
                          earliestExpirationTimeMs - LOW_PRIORITY_EXPIRATION;
                      }
                      absoluteTimeoutMs = startTimeMs + earliestTimeoutMs;
                    }

                    // Mark the earliest timeout in the suspended fiber's ancestor path.
                    // After completing the root, we'll take the largest of all the
                    // suspended fiber's timeouts and use it to compute a timeout for the
                    // whole tree.
                    renderDidSuspend(
                      root,
                      absoluteTimeoutMs,
                      renderExpirationTime
                    );

                    _workInProgress.effectTag |= ShouldCapture;
                    _workInProgress.expirationTime = renderExpirationTime;
                    return;
                  }
                  // This boundary already captured during this render. Continue to the
                  // next boundary.
                }
                _workInProgress = _workInProgress.return;
              } while (_workInProgress !== null);
              // No boundary was found. Fallthrough to error mode.
              value = new Error(
                'An update was suspended, but no placeholder UI was provided.'
              );
            }

            // We didn't find a boundary that could handle this type of exception. Start
            // over and traverse parent path again, this time treating the exception
            // as an error.
            renderDidError();
            value = createCapturedValue(value, sourceFiber);
            var workInProgress = returnFiber;
            do {
              switch (workInProgress.tag) {
                case HostRoot: {
                  var _errorInfo = value;
                  workInProgress.effectTag |= ShouldCapture;
                  workInProgress.expirationTime = renderExpirationTime;
                  var update = createRootErrorUpdate(
                    workInProgress,
                    _errorInfo,
                    renderExpirationTime
                  );
                  enqueueCapturedUpdate(workInProgress, update);
                  return;
                }
                case ClassComponent:
                case ClassComponentLazy:
                  // Capture and retry
                  var errorInfo = value;
                  var ctor = workInProgress.type;
                  var instance = workInProgress.stateNode;
                  if (
                    (workInProgress.effectTag & DidCapture) === NoEffect &&
                    ((typeof ctor.getDerivedStateFromCatch === 'function' &&
                      enableGetDerivedStateFromCatch) ||
                      (instance !== null &&
                        typeof instance.componentDidCatch === 'function' &&
                        !isAlreadyFailedLegacyErrorBoundary(instance)))
                  ) {
                    workInProgress.effectTag |= ShouldCapture;
                    workInProgress.expirationTime = renderExpirationTime;
                    // Schedule the error boundary to re-render using updated state
                    var _update = createClassErrorUpdate(
                      workInProgress,
                      errorInfo,
                      renderExpirationTime
                    );
                    enqueueCapturedUpdate(workInProgress, _update);
                    return;
                  }
                  break;
                default:
                  break;
              }
              workInProgress = workInProgress.return;
            } while (workInProgress !== null);
          }

          function unwindWork(workInProgress, renderExpirationTime) {
            switch (workInProgress.tag) {
              case ClassComponent: {
                var Component = workInProgress.type;
                if (isContextProvider(Component)) {
                  popContext(workInProgress);
                }
                var effectTag = workInProgress.effectTag;
                if (effectTag & ShouldCapture) {
                  workInProgress.effectTag =
                    (effectTag & ~ShouldCapture) | DidCapture;
                  return workInProgress;
                }
                return null;
              }
              case ClassComponentLazy: {
                var _Component = workInProgress.type._reactResult;
                if (isContextProvider(_Component)) {
                  popContext(workInProgress);
                }
                var _effectTag = workInProgress.effectTag;
                if (_effectTag & ShouldCapture) {
                  workInProgress.effectTag =
                    (_effectTag & ~ShouldCapture) | DidCapture;
                  return workInProgress;
                }
                return null;
              }
              case HostRoot: {
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                var _effectTag2 = workInProgress.effectTag;
                !((_effectTag2 & DidCapture) === NoEffect)
                  ? invariant(
                      false,
                      'The root failed to unmount after an error. This is likely a bug in React. Please file an issue.'
                    )
                  : void 0;
                workInProgress.effectTag =
                  (_effectTag2 & ~ShouldCapture) | DidCapture;
                return workInProgress;
              }
              case HostComponent: {
                popHostContext(workInProgress);
                return null;
              }
              case PlaceholderComponent: {
                var _effectTag3 = workInProgress.effectTag;
                if (_effectTag3 & ShouldCapture) {
                  workInProgress.effectTag =
                    (_effectTag3 & ~ShouldCapture) | DidCapture;
                  return workInProgress;
                }
                return null;
              }
              case HostPortal:
                popHostContainer(workInProgress);
                return null;
              case ContextProvider:
                popProvider(workInProgress);
                return null;
              default:
                return null;
            }
          }

          function unwindInterruptedWork(interruptedWork) {
            switch (interruptedWork.tag) {
              case ClassComponent: {
                var childContextTypes = interruptedWork.type.childContextTypes;
                if (
                  childContextTypes !== null &&
                  childContextTypes !== undefined
                ) {
                  popContext(interruptedWork);
                }
                break;
              }
              case ClassComponentLazy: {
                var _childContextTypes =
                  interruptedWork.type._reactResult.childContextTypes;
                if (
                  _childContextTypes !== null &&
                  _childContextTypes !== undefined
                ) {
                  popContext(interruptedWork);
                }
                break;
              }
              case HostRoot: {
                popHostContainer(interruptedWork);
                popTopLevelContextObject(interruptedWork);
                break;
              }
              case HostComponent: {
                popHostContext(interruptedWork);
                break;
              }
              case HostPortal:
                popHostContainer(interruptedWork);
                break;
              case ContextProvider:
                popProvider(interruptedWork);
                break;
              default:
                break;
            }
          }

          var Dispatcher = {
            readContext: readContext
          };

          var ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner;

          var didWarnAboutStateTransition = void 0;
          var didWarnSetStateChildContext = void 0;
          var warnAboutUpdateOnUnmounted = void 0;
          var warnAboutInvalidUpdates = void 0;

          if (enableSchedulerTracing) {
            // Provide explicit error message when production+profiling bundle of e.g. react-dom
            // is used with production (non-profiling) bundle of schedule/tracing
            !(
              tracing.__interactionsRef != null &&
              tracing.__interactionsRef.current != null
            )
              ? invariant(
                  false,
                  'It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `schedule/tracing` module with `schedule/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling'
                )
              : void 0;
          }

          {
            didWarnAboutStateTransition = false;
            didWarnSetStateChildContext = false;
            var didWarnStateUpdateForUnmountedComponent = {};

            warnAboutUpdateOnUnmounted = function(fiber) {
              // We show the whole stack but dedupe on the top component's name because
              // the problematic code almost always lies inside that component.
              var componentName = getComponentName(fiber.type) || 'ReactClass';
              if (didWarnStateUpdateForUnmountedComponent[componentName]) {
                return;
              }
              warningWithoutStack$1(
                false,
                "Can't call setState (or forceUpdate) on an unmounted component. This " +
                  'is a no-op, but it indicates a memory leak in your application. To ' +
                  'fix, cancel all subscriptions and asynchronous tasks in the ' +
                  'componentWillUnmount method.%s',
                getStackByFiberInDevAndProd(fiber)
              );
              didWarnStateUpdateForUnmountedComponent[componentName] = true;
            };

            warnAboutInvalidUpdates = function(instance) {
              switch (phase) {
                case 'getChildContext':
                  if (didWarnSetStateChildContext) {
                    return;
                  }
                  warningWithoutStack$1(
                    false,
                    'setState(...): Cannot call setState() inside getChildContext()'
                  );
                  didWarnSetStateChildContext = true;
                  break;
                case 'render':
                  if (didWarnAboutStateTransition) {
                    return;
                  }
                  warningWithoutStack$1(
                    false,
                    'Cannot update during an existing state transition (such as within ' +
                      '`render`). Render methods should be a pure function of props and state.'
                  );
                  didWarnAboutStateTransition = true;
                  break;
              }
            };
          }

          // Used to ensure computeUniqueAsyncExpiration is monotonically increasing.
          var lastUniqueAsyncExpiration = 0;

          // Represents the expiration time that incoming updates should use. (If this
          // is NoWork, use the default strategy: async updates in async mode, sync
          // updates in sync mode.)
          var expirationContext = NoWork;

          var isWorking = false;

          // The next work in progress fiber that we're currently working on.
          var nextUnitOfWork = null;
          var nextRoot = null;
          // The time at which we're currently rendering work.
          var nextRenderExpirationTime = NoWork;
          var nextLatestAbsoluteTimeoutMs = -1;
          var nextRenderDidError = false;

          // The next fiber with an effect that we're currently committing.
          var nextEffect = null;

          var isCommitting$1 = false;

          var legacyErrorBoundariesThatAlreadyFailed = null;

          // Used for performance tracking.
          var interruptedBy = null;

          // Do not decrement interaction counts in the event of suspense timeouts.
          // This would lead to prematurely calling the interaction-complete hook.
          var suspenseDidTimeout = false;

          var stashedWorkInProgressProperties = void 0;
          var replayUnitOfWork = void 0;
          var isReplayingFailedUnitOfWork = void 0;
          var originalReplayError = void 0;
          var rethrowOriginalError = void 0;
          if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
            stashedWorkInProgressProperties = null;
            isReplayingFailedUnitOfWork = false;
            originalReplayError = null;
            replayUnitOfWork = function(
              failedUnitOfWork,
              thrownValue,
              isYieldy
            ) {
              if (
                thrownValue !== null &&
                typeof thrownValue === 'object' &&
                typeof thrownValue.then === 'function'
              ) {
                // Don't replay promises. Treat everything else like an error.
                // TODO: Need to figure out a different strategy if/when we add
                // support for catching other types.
                return;
              }

              // Restore the original state of the work-in-progress
              if (stashedWorkInProgressProperties === null) {
                // This should never happen. Don't throw because this code is DEV-only.
                warningWithoutStack$1(
                  false,
                  'Could not replay rendering after an error. This is likely a bug in React. ' +
                    'Please file an issue.'
                );
                return;
              }
              assignFiberPropertiesInDEV(
                failedUnitOfWork,
                stashedWorkInProgressProperties
              );

              switch (failedUnitOfWork.tag) {
                case HostRoot:
                  popHostContainer(failedUnitOfWork);
                  popTopLevelContextObject(failedUnitOfWork);
                  break;
                case HostComponent:
                  popHostContext(failedUnitOfWork);
                  break;
                case ClassComponent: {
                  var Component = failedUnitOfWork.type;
                  if (isContextProvider(Component)) {
                    popContext(failedUnitOfWork);
                  }
                  break;
                }
                case ClassComponentLazy: {
                  var _Component = getResultFromResolvedThenable(
                    failedUnitOfWork.type
                  );
                  if (isContextProvider(_Component)) {
                    popContext(failedUnitOfWork);
                  }
                  break;
                }
                case HostPortal:
                  popHostContainer(failedUnitOfWork);
                  break;
                case ContextProvider:
                  popProvider(failedUnitOfWork);
                  break;
              }
              // Replay the begin phase.
              isReplayingFailedUnitOfWork = true;
              originalReplayError = thrownValue;
              invokeGuardedCallback(null, workLoop, null, isYieldy);
              isReplayingFailedUnitOfWork = false;
              originalReplayError = null;
              if (hasCaughtError()) {
                var replayError = clearCaughtError();
                if (replayError != null && thrownValue != null) {
                  try {
                    // Reading the expando property is intentionally
                    // inside `try` because it might be a getter or Proxy.
                    if (replayError._suppressLogging) {
                      // Also suppress logging for the original error.
                      thrownValue._suppressLogging = true;
                    }
                  } catch (inner) {
                    // Ignore.
                  }
                }
              } else {
                // If the begin phase did not fail the second time, set this pointer
                // back to the original value.
                nextUnitOfWork = failedUnitOfWork;
              }
            };
            rethrowOriginalError = function() {
              throw originalReplayError;
            };
          }

          function resetStack() {
            if (nextUnitOfWork !== null) {
              var interruptedWork = nextUnitOfWork.return;
              while (interruptedWork !== null) {
                unwindInterruptedWork(interruptedWork);
                interruptedWork = interruptedWork.return;
              }
            }

            {
              ReactStrictModeWarnings.discardPendingWarnings();
              checkThatStackIsEmpty();
            }

            nextRoot = null;
            nextRenderExpirationTime = NoWork;
            nextLatestAbsoluteTimeoutMs = -1;
            nextRenderDidError = false;
            nextUnitOfWork = null;
          }

          function commitAllHostEffects() {
            while (nextEffect !== null) {
              {
                setCurrentFiber(nextEffect);
              }
              recordEffect();

              var effectTag = nextEffect.effectTag;

              if (effectTag & ContentReset) {
                commitResetTextContent(nextEffect);
              }

              if (effectTag & Ref) {
                var current$$1 = nextEffect.alternate;
                if (current$$1 !== null) {
                  commitDetachRef(current$$1);
                }
              }

              // The following switch statement is only concerned about placement,
              // updates, and deletions. To avoid needing to add a case for every
              // possible bitmap value, we remove the secondary effects from the
              // effect tag and switch on that value.
              var primaryEffectTag =
                effectTag & (Placement | Update | Deletion);
              switch (primaryEffectTag) {
                case Placement: {
                  commitPlacement(nextEffect);
                  // Clear the "placement" from effect tag so that we know that this is inserted, before
                  // any life-cycles like componentDidMount gets called.
                  // TODO: findDOMNode doesn't rely on this any more but isMounted
                  // does and isMounted is deprecated anyway so we should be able
                  // to kill this.
                  nextEffect.effectTag &= ~Placement;
                  break;
                }
                case PlacementAndUpdate: {
                  // Placement
                  commitPlacement(nextEffect);
                  // Clear the "placement" from effect tag so that we know that this is inserted, before
                  // any life-cycles like componentDidMount gets called.
                  nextEffect.effectTag &= ~Placement;

                  // Update
                  var _current = nextEffect.alternate;
                  commitWork(_current, nextEffect);
                  break;
                }
                case Update: {
                  var _current2 = nextEffect.alternate;
                  commitWork(_current2, nextEffect);
                  break;
                }
                case Deletion: {
                  commitDeletion(nextEffect);
                  break;
                }
              }
              nextEffect = nextEffect.nextEffect;
            }

            {
              resetCurrentFiber();
            }
          }

          function commitBeforeMutationLifecycles() {
            while (nextEffect !== null) {
              {
                setCurrentFiber(nextEffect);
              }

              var effectTag = nextEffect.effectTag;
              if (effectTag & Snapshot) {
                recordEffect();
                var current$$1 = nextEffect.alternate;
                commitBeforeMutationLifeCycles(current$$1, nextEffect);
              }

              // Don't cleanup effects yet;
              // This will be done by commitAllLifeCycles()
              nextEffect = nextEffect.nextEffect;
            }

            {
              resetCurrentFiber();
            }
          }

          function commitAllLifeCycles(finishedRoot, committedExpirationTime) {
            {
              ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();

              if (warnAboutDeprecatedLifecycles) {
                ReactStrictModeWarnings.flushPendingDeprecationWarnings();
              }

              if (warnAboutLegacyContextAPI) {
                ReactStrictModeWarnings.flushLegacyContextWarning();
              }
            }
            while (nextEffect !== null) {
              var effectTag = nextEffect.effectTag;

              if (effectTag & (Update | Callback)) {
                recordEffect();
                var current$$1 = nextEffect.alternate;
                commitLifeCycles(
                  finishedRoot,
                  current$$1,
                  nextEffect,
                  committedExpirationTime
                );
              }

              if (effectTag & Ref) {
                recordEffect();
                commitAttachRef(nextEffect);
              }

              var next = nextEffect.nextEffect;
              // Ensure that we clean these up so that we don't accidentally keep them.
              // I'm not actually sure this matters because we can't reset firstEffect
              // and lastEffect since they're on every node, not just the effectful
              // ones. So we have to clean everything as we reuse nodes anyway.
              nextEffect.nextEffect = null;
              // Ensure that we reset the effectTag here so that we can rely on effect
              // tags to reason about the current life-cycle.
              nextEffect = next;
            }
          }

          function isAlreadyFailedLegacyErrorBoundary(instance) {
            return (
              legacyErrorBoundariesThatAlreadyFailed !== null &&
              legacyErrorBoundariesThatAlreadyFailed.has(instance)
            );
          }

          function markLegacyErrorBoundaryAsFailed(instance) {
            if (legacyErrorBoundariesThatAlreadyFailed === null) {
              legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
            } else {
              legacyErrorBoundariesThatAlreadyFailed.add(instance);
            }
          }

          function commitRoot(root, finishedWork) {
            isWorking = true;
            isCommitting$1 = true;
            startCommitTimer();

            !(root.current !== finishedWork)
              ? invariant(
                  false,
                  'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.'
                )
              : void 0;
            var committedExpirationTime = root.pendingCommitExpirationTime;
            !(committedExpirationTime !== NoWork)
              ? invariant(
                  false,
                  'Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.'
                )
              : void 0;
            root.pendingCommitExpirationTime = NoWork;

            // Update the pending priority levels to account for the work that we are
            // about to commit. This needs to happen before calling the lifecycles, since
            // they may schedule additional updates.
            var updateExpirationTimeBeforeCommit = finishedWork.expirationTime;
            var childExpirationTimeBeforeCommit =
              finishedWork.childExpirationTime;
            var earliestRemainingTimeBeforeCommit =
              updateExpirationTimeBeforeCommit === NoWork ||
              (childExpirationTimeBeforeCommit !== NoWork &&
                childExpirationTimeBeforeCommit <
                  updateExpirationTimeBeforeCommit)
                ? childExpirationTimeBeforeCommit
                : updateExpirationTimeBeforeCommit;
            markCommittedPriorityLevels(
              root,
              earliestRemainingTimeBeforeCommit
            );

            var prevInteractions = null;
            var committedInteractions = enableSchedulerTracing ? [] : null;
            if (enableSchedulerTracing) {
              // Restore any pending interactions at this point,
              // So that cascading work triggered during the render phase will be accounted for.
              prevInteractions = tracing.__interactionsRef.current;
              tracing.__interactionsRef.current = root.memoizedInteractions;

              // We are potentially finished with the current batch of interactions.
              // So we should clear them out of the pending interaction map.
              // We do this at the start of commit in case cascading work is scheduled by commit phase lifecycles.
              // In that event, interaction data may be added back into the pending map for a future commit.
              // We also store the interactions we are about to commit so that we can notify subscribers after we're done.
              // These are stored as an Array rather than a Set,
              // Because the same interaction may be pending for multiple expiration times,
              // In which case it's important that we decrement the count the right number of times after finishing.
              root.pendingInteractionMap.forEach(function(
                scheduledInteractions,
                scheduledExpirationTime
              ) {
                if (scheduledExpirationTime <= committedExpirationTime) {
                  committedInteractions.push.apply(
                    committedInteractions,
                    Array.from(scheduledInteractions)
                  );
                  root.pendingInteractionMap.delete(scheduledExpirationTime);
                }
              });
            }

            // Reset this to null before calling lifecycles
            ReactCurrentOwner$2.current = null;

            var firstEffect = void 0;
            if (finishedWork.effectTag > PerformedWork) {
              // A fiber's effect list consists only of its children, not itself. So if
              // the root has an effect, we need to add it to the end of the list. The
              // resulting list is the set that would belong to the root's parent, if
              // it had one; that is, all the effects in the tree including the root.
              if (finishedWork.lastEffect !== null) {
                finishedWork.lastEffect.nextEffect = finishedWork;
                firstEffect = finishedWork.firstEffect;
              } else {
                firstEffect = finishedWork;
              }
            } else {
              // There is no effect on the root.
              firstEffect = finishedWork.firstEffect;
            }

            prepareForCommit(root.containerInfo);

            // Invoke instances of getSnapshotBeforeUpdate before mutation.
            nextEffect = firstEffect;
            startCommitSnapshotEffectsTimer();
            while (nextEffect !== null) {
              var didError = false;
              var error = void 0;
              {
                invokeGuardedCallback(
                  null,
                  commitBeforeMutationLifecycles,
                  null
                );
                if (hasCaughtError()) {
                  didError = true;
                  error = clearCaughtError();
                }
              }
              if (didError) {
                !(nextEffect !== null)
                  ? invariant(
                      false,
                      'Should have next effect. This error is likely caused by a bug in React. Please file an issue.'
                    )
                  : void 0;
                captureCommitPhaseError(nextEffect, error);
                // Clean-up
                if (nextEffect !== null) {
                  nextEffect = nextEffect.nextEffect;
                }
              }
            }
            stopCommitSnapshotEffectsTimer();

            if (enableProfilerTimer) {
              // Mark the current commit time to be shared by all Profilers in this batch.
              // This enables them to be grouped later.
              recordCommitTime();
            }

            // Commit all the side-effects within a tree. We'll do this in two passes.
            // The first pass performs all the host insertions, updates, deletions and
            // ref unmounts.
            nextEffect = firstEffect;
            startCommitHostEffectsTimer();
            while (nextEffect !== null) {
              var _didError = false;
              var _error = void 0;
              {
                invokeGuardedCallback(null, commitAllHostEffects, null);
                if (hasCaughtError()) {
                  _didError = true;
                  _error = clearCaughtError();
                }
              }
              if (_didError) {
                !(nextEffect !== null)
                  ? invariant(
                      false,
                      'Should have next effect. This error is likely caused by a bug in React. Please file an issue.'
                    )
                  : void 0;
                captureCommitPhaseError(nextEffect, _error);
                // Clean-up
                if (nextEffect !== null) {
                  nextEffect = nextEffect.nextEffect;
                }
              }
            }
            stopCommitHostEffectsTimer();

            resetAfterCommit(root.containerInfo);

            // The work-in-progress tree is now the current tree. This must come after
            // the first pass of the commit phase, so that the previous tree is still
            // current during componentWillUnmount, but before the second pass, so that
            // the finished work is current during componentDidMount/Update.
            root.current = finishedWork;

            // In the second pass we'll perform all life-cycles and ref callbacks.
            // Life-cycles happen as a separate pass so that all placements, updates,
            // and deletions in the entire tree have already been invoked.
            // This pass also triggers any renderer-specific initial effects.
            nextEffect = firstEffect;
            startCommitLifeCyclesTimer();
            while (nextEffect !== null) {
              var _didError2 = false;
              var _error2 = void 0;
              {
                invokeGuardedCallback(
                  null,
                  commitAllLifeCycles,
                  null,
                  root,
                  committedExpirationTime
                );
                if (hasCaughtError()) {
                  _didError2 = true;
                  _error2 = clearCaughtError();
                }
              }
              if (_didError2) {
                !(nextEffect !== null)
                  ? invariant(
                      false,
                      'Should have next effect. This error is likely caused by a bug in React. Please file an issue.'
                    )
                  : void 0;
                captureCommitPhaseError(nextEffect, _error2);
                if (nextEffect !== null) {
                  nextEffect = nextEffect.nextEffect;
                }
              }
            }

            isCommitting$1 = false;
            isWorking = false;
            stopCommitLifeCyclesTimer();
            stopCommitTimer();
            onCommitRoot(finishedWork.stateNode);
            if (true && ReactFiberInstrumentation_1.debugTool) {
              ReactFiberInstrumentation_1.debugTool.onCommitWork(finishedWork);
            }

            var updateExpirationTimeAfterCommit = finishedWork.expirationTime;
            var childExpirationTimeAfterCommit =
              finishedWork.childExpirationTime;
            var earliestRemainingTimeAfterCommit =
              updateExpirationTimeAfterCommit === NoWork ||
              (childExpirationTimeAfterCommit !== NoWork &&
                childExpirationTimeAfterCommit <
                  updateExpirationTimeAfterCommit)
                ? childExpirationTimeAfterCommit
                : updateExpirationTimeAfterCommit;
            if (earliestRemainingTimeAfterCommit === NoWork) {
              // If there's no remaining work, we can clear the set of already failed
              // error boundaries.
              legacyErrorBoundariesThatAlreadyFailed = null;
            }
            onCommit(root, earliestRemainingTimeAfterCommit);

            if (enableSchedulerTracing) {
              tracing.__interactionsRef.current = prevInteractions;

              var subscriber = void 0;

              try {
                subscriber = tracing.__subscriberRef.current;
                if (subscriber !== null && root.memoizedInteractions.size > 0) {
                  var threadID = computeThreadID(
                    committedExpirationTime,
                    root.interactionThreadID
                  );
                  subscriber.onWorkStopped(root.memoizedInteractions, threadID);
                }
              } catch (error) {
                // It's not safe for commitRoot() to throw.
                // Store the error for now and we'll re-throw in finishRendering().
                if (!hasUnhandledError) {
                  hasUnhandledError = true;
                  unhandledError = error;
                }
              } finally {
                // Don't update interaction counts if we're frozen due to suspense.
                // In this case, we can skip the completed-work check entirely.
                if (!suspenseDidTimeout) {
                  // Now that we're done, check the completed batch of interactions.
                  // If no more work is outstanding for a given interaction,
                  // We need to notify the subscribers that it's finished.
                  committedInteractions.forEach(function(interaction) {
                    interaction.__count--;
                    if (subscriber !== null && interaction.__count === 0) {
                      try {
                        subscriber.onInteractionScheduledWorkCompleted(
                          interaction
                        );
                      } catch (error) {
                        // It's not safe for commitRoot() to throw.
                        // Store the error for now and we'll re-throw in finishRendering().
                        if (!hasUnhandledError) {
                          hasUnhandledError = true;
                          unhandledError = error;
                        }
                      }
                    }
                  });
                }
              }
            }
          }

          function resetChildExpirationTime(workInProgress, renderTime) {
            if (
              renderTime !== Never &&
              workInProgress.childExpirationTime === Never
            ) {
              // The children of this component are hidden. Don't bubble their
              // expiration times.
              return;
            }

            var newChildExpirationTime = NoWork;

            // Bubble up the earliest expiration time.
            if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
              // We're in profiling mode.
              // Let's use this same traversal to update the render durations.
              var actualDuration = workInProgress.actualDuration;
              var treeBaseDuration = workInProgress.selfBaseDuration;

              // When a fiber is cloned, its actualDuration is reset to 0.
              // This value will only be updated if work is done on the fiber (i.e. it doesn't bailout).
              // When work is done, it should bubble to the parent's actualDuration.
              // If the fiber has not been cloned though, (meaning no work was done),
              // Then this value will reflect the amount of time spent working on a previous render.
              // In that case it should not bubble.
              // We determine whether it was cloned by comparing the child pointer.
              var shouldBubbleActualDurations =
                workInProgress.alternate === null ||
                workInProgress.child !== workInProgress.alternate.child;

              var child = workInProgress.child;
              while (child !== null) {
                var childUpdateExpirationTime = child.expirationTime;
                var childChildExpirationTime = child.childExpirationTime;
                if (
                  newChildExpirationTime === NoWork ||
                  (childUpdateExpirationTime !== NoWork &&
                    childUpdateExpirationTime < newChildExpirationTime)
                ) {
                  newChildExpirationTime = childUpdateExpirationTime;
                }
                if (
                  newChildExpirationTime === NoWork ||
                  (childChildExpirationTime !== NoWork &&
                    childChildExpirationTime < newChildExpirationTime)
                ) {
                  newChildExpirationTime = childChildExpirationTime;
                }
                if (shouldBubbleActualDurations) {
                  actualDuration += child.actualDuration;
                }
                treeBaseDuration += child.treeBaseDuration;
                child = child.sibling;
              }
              workInProgress.actualDuration = actualDuration;
              workInProgress.treeBaseDuration = treeBaseDuration;
            } else {
              var _child = workInProgress.child;
              while (_child !== null) {
                var _childUpdateExpirationTime = _child.expirationTime;
                var _childChildExpirationTime = _child.childExpirationTime;
                if (
                  newChildExpirationTime === NoWork ||
                  (_childUpdateExpirationTime !== NoWork &&
                    _childUpdateExpirationTime < newChildExpirationTime)
                ) {
                  newChildExpirationTime = _childUpdateExpirationTime;
                }
                if (
                  newChildExpirationTime === NoWork ||
                  (_childChildExpirationTime !== NoWork &&
                    _childChildExpirationTime < newChildExpirationTime)
                ) {
                  newChildExpirationTime = _childChildExpirationTime;
                }
                _child = _child.sibling;
              }
            }

            workInProgress.childExpirationTime = newChildExpirationTime;
          }

          function completeUnitOfWork(workInProgress) {
            // Attempt to complete the current unit of work, then move to the
            // next sibling. If there are no more siblings, return to the
            // parent fiber.
            while (true) {
              // The current, flushed, state of this fiber is the alternate.
              // Ideally nothing should rely on this, but relying on it here
              // means that we don't need an additional field on the work in
              // progress.
              var current$$1 = workInProgress.alternate;
              {
                setCurrentFiber(workInProgress);
              }

              var returnFiber = workInProgress.return;
              var siblingFiber = workInProgress.sibling;

              if ((workInProgress.effectTag & Incomplete) === NoEffect) {
                // This fiber completed.
                if (enableProfilerTimer) {
                  if (workInProgress.mode & ProfileMode) {
                    startProfilerTimer(workInProgress);
                  }

                  nextUnitOfWork = completeWork(
                    current$$1,
                    workInProgress,
                    nextRenderExpirationTime
                  );

                  if (workInProgress.mode & ProfileMode) {
                    // Update render duration assuming we didn't error.
                    stopProfilerTimerIfRunningAndRecordDelta(
                      workInProgress,
                      false
                    );
                  }
                } else {
                  nextUnitOfWork = completeWork(
                    current$$1,
                    workInProgress,
                    nextRenderExpirationTime
                  );
                }
                var next = nextUnitOfWork;
                stopWorkTimer(workInProgress);
                resetChildExpirationTime(
                  workInProgress,
                  nextRenderExpirationTime
                );
                {
                  resetCurrentFiber();
                }

                if (next !== null) {
                  stopWorkTimer(workInProgress);
                  if (true && ReactFiberInstrumentation_1.debugTool) {
                    ReactFiberInstrumentation_1.debugTool.onCompleteWork(
                      workInProgress
                    );
                  }
                  // If completing this work spawned new work, do that next. We'll come
                  // back here again.
                  return next;
                }

                if (
                  returnFiber !== null &&
                  // Do not append effects to parents if a sibling failed to complete
                  (returnFiber.effectTag & Incomplete) === NoEffect
                ) {
                  // Append all the effects of the subtree and this fiber onto the effect
                  // list of the parent. The completion order of the children affects the
                  // side-effect order.
                  if (returnFiber.firstEffect === null) {
                    returnFiber.firstEffect = workInProgress.firstEffect;
                  }
                  if (workInProgress.lastEffect !== null) {
                    if (returnFiber.lastEffect !== null) {
                      returnFiber.lastEffect.nextEffect =
                        workInProgress.firstEffect;
                    }
                    returnFiber.lastEffect = workInProgress.lastEffect;
                  }

                  // If this fiber had side-effects, we append it AFTER the children's
                  // side-effects. We can perform certain side-effects earlier if
                  // needed, by doing multiple passes over the effect list. We don't want
                  // to schedule our own side-effect on our own list because if end up
                  // reusing children we'll schedule this effect onto itself since we're
                  // at the end.
                  var effectTag = workInProgress.effectTag;
                  // Skip both NoWork and PerformedWork tags when creating the effect list.
                  // PerformedWork effect is read by React DevTools but shouldn't be committed.
                  if (effectTag > PerformedWork) {
                    if (returnFiber.lastEffect !== null) {
                      returnFiber.lastEffect.nextEffect = workInProgress;
                    } else {
                      returnFiber.firstEffect = workInProgress;
                    }
                    returnFiber.lastEffect = workInProgress;
                  }
                }

                if (true && ReactFiberInstrumentation_1.debugTool) {
                  ReactFiberInstrumentation_1.debugTool.onCompleteWork(
                    workInProgress
                  );
                }

                if (siblingFiber !== null) {
                  // If there is more work to do in this returnFiber, do that next.
                  return siblingFiber;
                } else if (returnFiber !== null) {
                  // If there's no more work in this returnFiber. Complete the returnFiber.
                  workInProgress = returnFiber;
                  continue;
                } else {
                  // We've reached the root.
                  return null;
                }
              } else {
                if (workInProgress.mode & ProfileMode) {
                  // Record the render duration for the fiber that errored.
                  stopProfilerTimerIfRunningAndRecordDelta(
                    workInProgress,
                    false
                  );
                }

                // This fiber did not complete because something threw. Pop values off
                // the stack without entering the complete phase. If this is a boundary,
                // capture values if possible.
                var _next = unwindWork(
                  workInProgress,
                  nextRenderExpirationTime
                );
                // Because this fiber did not complete, don't reset its expiration time.
                if (workInProgress.effectTag & DidCapture) {
                  // Restarting an error boundary
                  stopFailedWorkTimer(workInProgress);
                } else {
                  stopWorkTimer(workInProgress);
                }

                {
                  resetCurrentFiber();
                }

                if (_next !== null) {
                  stopWorkTimer(workInProgress);
                  if (true && ReactFiberInstrumentation_1.debugTool) {
                    ReactFiberInstrumentation_1.debugTool.onCompleteWork(
                      workInProgress
                    );
                  }

                  if (enableProfilerTimer) {
                    // Include the time spent working on failed children before continuing.
                    if (_next.mode & ProfileMode) {
                      var actualDuration = _next.actualDuration;
                      var child = _next.child;
                      while (child !== null) {
                        actualDuration += child.actualDuration;
                        child = child.sibling;
                      }
                      _next.actualDuration = actualDuration;
                    }
                  }

                  // If completing this work spawned new work, do that next. We'll come
                  // back here again.
                  // Since we're restarting, remove anything that is not a host effect
                  // from the effect tag.
                  _next.effectTag &= HostEffectMask;
                  return _next;
                }

                if (returnFiber !== null) {
                  // Mark the parent fiber as incomplete and clear its effect list.
                  returnFiber.firstEffect = returnFiber.lastEffect = null;
                  returnFiber.effectTag |= Incomplete;
                }

                if (true && ReactFiberInstrumentation_1.debugTool) {
                  ReactFiberInstrumentation_1.debugTool.onCompleteWork(
                    workInProgress
                  );
                }

                if (siblingFiber !== null) {
                  // If there is more work to do in this returnFiber, do that next.
                  return siblingFiber;
                } else if (returnFiber !== null) {
                  // If there's no more work in this returnFiber. Complete the returnFiber.
                  workInProgress = returnFiber;
                  continue;
                } else {
                  return null;
                }
              }
            }

            // Without this explicit null return Flow complains of invalid return type
            // TODO Remove the above while(true) loop
            // eslint-disable-next-line no-unreachable
            return null;
          }

          function performUnitOfWork(workInProgress) {
            // The current, flushed, state of this fiber is the alternate.
            // Ideally nothing should rely on this, but relying on it here
            // means that we don't need an additional field on the work in
            // progress.
            var current$$1 = workInProgress.alternate;

            // See if beginning this work spawns more work.
            startWorkTimer(workInProgress);
            {
              setCurrentFiber(workInProgress);
            }

            if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
              stashedWorkInProgressProperties = assignFiberPropertiesInDEV(
                stashedWorkInProgressProperties,
                workInProgress
              );
            }

            var next = void 0;
            if (enableProfilerTimer) {
              if (workInProgress.mode & ProfileMode) {
                startProfilerTimer(workInProgress);
              }

              next = beginWork(
                current$$1,
                workInProgress,
                nextRenderExpirationTime
              );

              if (workInProgress.mode & ProfileMode) {
                // Record the render duration assuming we didn't bailout (or error).
                stopProfilerTimerIfRunningAndRecordDelta(workInProgress, true);
              }
            } else {
              next = beginWork(
                current$$1,
                workInProgress,
                nextRenderExpirationTime
              );
            }

            {
              resetCurrentFiber();
              if (isReplayingFailedUnitOfWork) {
                // Currently replaying a failed unit of work. This should be unreachable,
                // because the render phase is meant to be idempotent, and it should
                // have thrown again. Since it didn't, rethrow the original error, so
                // React's internal stack is not misaligned.
                rethrowOriginalError();
              }
            }
            if (true && ReactFiberInstrumentation_1.debugTool) {
              ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);
            }

            if (next === null) {
              // If this doesn't spawn new work, complete the current work.
              next = completeUnitOfWork(workInProgress);
            }

            ReactCurrentOwner$2.current = null;

            return next;
          }

          function workLoop(isYieldy) {
            if (!isYieldy) {
              // Flush work without yielding
              while (nextUnitOfWork !== null) {
                nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
              }
            } else {
              // Flush asynchronous work until the deadline runs out of time.
              while (nextUnitOfWork !== null && !shouldYield()) {
                nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
              }
            }
          }

          function renderRoot(root, isYieldy, isExpired) {
            !!isWorking
              ? invariant(
                  false,
                  'renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.'
                )
              : void 0;
            isWorking = true;
            ReactCurrentOwner$2.currentDispatcher = Dispatcher;

            var expirationTime = root.nextExpirationTimeToWorkOn;

            var prevInteractions = null;
            if (enableSchedulerTracing) {
              // We're about to start new traced work.
              // Restore pending interactions so cascading work triggered during the render phase will be accounted for.
              prevInteractions = tracing.__interactionsRef.current;
              tracing.__interactionsRef.current = root.memoizedInteractions;
            }

            // Check if we're starting from a fresh stack, or if we're resuming from
            // previously yielded work.
            if (
              expirationTime !== nextRenderExpirationTime ||
              root !== nextRoot ||
              nextUnitOfWork === null
            ) {
              // Reset the stack and start working from the root.
              resetStack();
              nextRoot = root;
              nextRenderExpirationTime = expirationTime;
              nextUnitOfWork = createWorkInProgress(
                nextRoot.current,
                null,
                nextRenderExpirationTime
              );
              root.pendingCommitExpirationTime = NoWork;

              if (enableSchedulerTracing) {
                // Determine which interactions this batch of work currently includes,
                // So that we can accurately attribute time spent working on it,
                var interactions = new Set();
                root.pendingInteractionMap.forEach(function(
                  scheduledInteractions,
                  scheduledExpirationTime
                ) {
                  if (scheduledExpirationTime <= expirationTime) {
                    scheduledInteractions.forEach(function(interaction) {
                      return interactions.add(interaction);
                    });
                  }
                });

                // Store the current set of interactions on the FiberRoot for a few reasons:
                // We can re-use it in hot functions like renderRoot() without having to recalculate it.
                // We will also use it in commitWork() to pass to any Profiler onRender() hooks.
                // This also provides DevTools with a way to access it when the onCommitRoot() hook is called.
                root.memoizedInteractions = interactions;

                if (interactions.size > 0) {
                  var subscriber = tracing.__subscriberRef.current;
                  if (subscriber !== null) {
                    var threadID = computeThreadID(
                      expirationTime,
                      root.interactionThreadID
                    );
                    try {
                      subscriber.onWorkStarted(interactions, threadID);
                    } catch (error) {
                      // Work thrown by an interaction tracing subscriber should be rethrown,
                      // But only once it's safe (to avoid leaveing the scheduler in an invalid state).
                      // Store the error for now and we'll re-throw in finishRendering().
                      if (!hasUnhandledError) {
                        hasUnhandledError = true;
                        unhandledError = error;
                      }
                    }
                  }
                }
              }
            }

            var didFatal = false;

            startWorkLoopTimer(nextUnitOfWork);

            do {
              try {
                workLoop(isYieldy);
              } catch (thrownValue) {
                if (nextUnitOfWork === null) {
                  // This is a fatal error.
                  didFatal = true;
                  onUncaughtError(thrownValue);
                } else {
                  {
                    // Reset global debug state
                    // We assume this is defined in DEV
                    resetCurrentlyProcessingQueue();
                  }

                  var failedUnitOfWork = nextUnitOfWork;
                  if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
                    replayUnitOfWork(failedUnitOfWork, thrownValue, isYieldy);
                  }

                  // TODO: we already know this isn't true in some cases.
                  // At least this shows a nicer error message until we figure out the cause.
                  // https://github.com/facebook/react/issues/12449#issuecomment-386727431
                  !(nextUnitOfWork !== null)
                    ? invariant(
                        false,
                        'Failed to replay rendering after an error. This is likely caused by a bug in React. Please file an issue with a reproducing case to help us find it.'
                      )
                    : void 0;

                  var sourceFiber = nextUnitOfWork;
                  var returnFiber = sourceFiber.return;
                  if (returnFiber === null) {
                    // This is the root. The root could capture its own errors. However,
                    // we don't know if it errors before or after we pushed the host
                    // context. This information is needed to avoid a stack mismatch.
                    // Because we're not sure, treat this as a fatal error. We could track
                    // which phase it fails in, but doesn't seem worth it. At least
                    // for now.
                    didFatal = true;
                    onUncaughtError(thrownValue);
                  } else {
                    throwException(
                      root,
                      returnFiber,
                      sourceFiber,
                      thrownValue,
                      nextRenderExpirationTime
                    );
                    nextUnitOfWork = completeUnitOfWork(sourceFiber);
                    continue;
                  }
                }
              }
              break;
            } while (true);

            if (enableSchedulerTracing) {
              // Traced work is done for now; restore the previous interactions.
              tracing.__interactionsRef.current = prevInteractions;
            }

            // We're done performing work. Time to clean up.
            isWorking = false;
            ReactCurrentOwner$2.currentDispatcher = null;
            resetContextDependences();

            // Yield back to main thread.
            if (didFatal) {
              var _didCompleteRoot = false;
              stopWorkLoopTimer(interruptedBy, _didCompleteRoot);
              interruptedBy = null;
              // There was a fatal error.
              {
                resetStackAfterFatalErrorInDev();
              }
              // `nextRoot` points to the in-progress root. A non-null value indicates
              // that we're in the middle of an async render. Set it to null to indicate
              // there's no more work to be done in the current batch.
              nextRoot = null;
              onFatal(root);
              return;
            }

            if (nextUnitOfWork !== null) {
              // There's still remaining async work in this tree, but we ran out of time
              // in the current frame. Yield back to the renderer. Unless we're
              // interrupted by a higher priority update, we'll continue later from where
              // we left off.
              var _didCompleteRoot2 = false;
              stopWorkLoopTimer(interruptedBy, _didCompleteRoot2);
              interruptedBy = null;
              onYield(root);
              return;
            }

            // We completed the whole tree.
            var didCompleteRoot = true;
            stopWorkLoopTimer(interruptedBy, didCompleteRoot);
            var rootWorkInProgress = root.current.alternate;
            !(rootWorkInProgress !== null)
              ? invariant(
                  false,
                  'Finished root should have a work-in-progress. This error is likely caused by a bug in React. Please file an issue.'
                )
              : void 0;

            // `nextRoot` points to the in-progress root. A non-null value indicates
            // that we're in the middle of an async render. Set it to null to indicate
            // there's no more work to be done in the current batch.
            nextRoot = null;
            interruptedBy = null;

            if (nextRenderDidError) {
              // There was an error
              if (hasLowerPriorityWork(root, expirationTime)) {
                // There's lower priority work. If so, it may have the effect of fixing
                // the exception that was just thrown. Exit without committing. This is
                // similar to a suspend, but without a timeout because we're not waiting
                // for a promise to resolve. React will restart at the lower
                // priority level.
                markSuspendedPriorityLevel(root, expirationTime);
                var suspendedExpirationTime = expirationTime;
                var rootExpirationTime = root.expirationTime;
                onSuspend(
                  root,
                  rootWorkInProgress,
                  suspendedExpirationTime,
                  rootExpirationTime,
                  -1 // Indicates no timeout
                );
                return;
              } else if (
                // There's no lower priority work, but we're rendering asynchronously.
                // Synchronsouly attempt to render the same level one more time. This is
                // similar to a suspend, but without a timeout because we're not waiting
                // for a promise to resolve.
                !root.didError &&
                !isExpired
              ) {
                root.didError = true;
                var _suspendedExpirationTime = (root.nextExpirationTimeToWorkOn = expirationTime);
                var _rootExpirationTime = (root.expirationTime = Sync);
                onSuspend(
                  root,
                  rootWorkInProgress,
                  _suspendedExpirationTime,
                  _rootExpirationTime,
                  -1 // Indicates no timeout
                );
                return;
              }
            }

            if (
              enableSuspense &&
              !isExpired &&
              nextLatestAbsoluteTimeoutMs !== -1
            ) {
              // The tree was suspended.
              var _suspendedExpirationTime2 = expirationTime;
              markSuspendedPriorityLevel(root, _suspendedExpirationTime2);

              // Find the earliest uncommitted expiration time in the tree, including
              // work that is suspended. The timeout threshold cannot be longer than
              // the overall expiration.
              var earliestExpirationTime = findEarliestOutstandingPriorityLevel(
                root,
                expirationTime
              );
              var earliestExpirationTimeMs = expirationTimeToMs(
                earliestExpirationTime
              );
              if (earliestExpirationTimeMs < nextLatestAbsoluteTimeoutMs) {
                nextLatestAbsoluteTimeoutMs = earliestExpirationTimeMs;
              }

              // Subtract the current time from the absolute timeout to get the number
              // of milliseconds until the timeout. In other words, convert an absolute
              // timestamp to a relative time. This is the value that is passed
              // to `setTimeout`.
              var currentTimeMs = expirationTimeToMs(requestCurrentTime());
              var msUntilTimeout = nextLatestAbsoluteTimeoutMs - currentTimeMs;
              msUntilTimeout = msUntilTimeout < 0 ? 0 : msUntilTimeout;

              // TODO: Account for the Just Noticeable Difference

              var _rootExpirationTime2 = root.expirationTime;
              onSuspend(
                root,
                rootWorkInProgress,
                _suspendedExpirationTime2,
                _rootExpirationTime2,
                msUntilTimeout
              );
              return;
            }

            // Ready to commit.
            onComplete(root, rootWorkInProgress, expirationTime);
          }

          function dispatch(sourceFiber, value, expirationTime) {
            !(!isWorking || isCommitting$1)
              ? invariant(
                  false,
                  'dispatch: Cannot dispatch during the render phase.'
                )
              : void 0;

            var fiber = sourceFiber.return;
            while (fiber !== null) {
              switch (fiber.tag) {
                case ClassComponent:
                case ClassComponentLazy:
                  var ctor = fiber.type;
                  var instance = fiber.stateNode;
                  if (
                    typeof ctor.getDerivedStateFromCatch === 'function' ||
                    (typeof instance.componentDidCatch === 'function' &&
                      !isAlreadyFailedLegacyErrorBoundary(instance))
                  ) {
                    var errorInfo = createCapturedValue(value, sourceFiber);
                    var update = createClassErrorUpdate(
                      fiber,
                      errorInfo,
                      expirationTime
                    );
                    enqueueUpdate(fiber, update);
                    scheduleWork(fiber, expirationTime);
                    return;
                  }
                  break;
                case HostRoot: {
                  var _errorInfo = createCapturedValue(value, sourceFiber);
                  var _update = createRootErrorUpdate(
                    fiber,
                    _errorInfo,
                    expirationTime
                  );
                  enqueueUpdate(fiber, _update);
                  scheduleWork(fiber, expirationTime);
                  return;
                }
              }
              fiber = fiber.return;
            }

            if (sourceFiber.tag === HostRoot) {
              // Error was thrown at the root. There is no parent, so the root
              // itself should capture it.
              var rootFiber = sourceFiber;
              var _errorInfo2 = createCapturedValue(value, rootFiber);
              var _update2 = createRootErrorUpdate(
                rootFiber,
                _errorInfo2,
                expirationTime
              );
              enqueueUpdate(rootFiber, _update2);
              scheduleWork(rootFiber, expirationTime);
            }
          }

          function captureCommitPhaseError(fiber, error) {
            return dispatch(fiber, error, Sync);
          }

          function computeThreadID(expirationTime, interactionThreadID) {
            // Interaction threads are unique per root and expiration time.
            return expirationTime * 1000 + interactionThreadID;
          }

          // Creates a unique async expiration time.
          function computeUniqueAsyncExpiration() {
            var currentTime = requestCurrentTime();
            var result = computeAsyncExpiration(currentTime);
            if (result <= lastUniqueAsyncExpiration) {
              // Since we assume the current time monotonically increases, we only hit
              // this branch when computeUniqueAsyncExpiration is fired multiple times
              // within a 200ms window (or whatever the async bucket size is).
              result = lastUniqueAsyncExpiration + 1;
            }
            lastUniqueAsyncExpiration = result;
            return lastUniqueAsyncExpiration;
          }

          function computeExpirationForFiber(currentTime, fiber) {
            var expirationTime = void 0;
            if (expirationContext !== NoWork) {
              // An explicit expiration context was set;
              expirationTime = expirationContext;
            } else if (isWorking) {
              if (isCommitting$1) {
                // Updates that occur during the commit phase should have sync priority
                // by default.
                expirationTime = Sync;
              } else {
                // Updates during the render phase should expire at the same time as
                // the work that is being rendered.
                expirationTime = nextRenderExpirationTime;
              }
            } else {
              // No explicit expiration context was set, and we're not currently
              // performing work. Calculate a new expiration time.
              if (fiber.mode & AsyncMode) {
                if (isBatchingInteractiveUpdates) {
                  // This is an interactive update
                  expirationTime = computeInteractiveExpiration(currentTime);
                } else {
                  // This is an async update
                  expirationTime = computeAsyncExpiration(currentTime);
                }
                // If we're in the middle of rendering a tree, do not update at the same
                // expiration time that is already rendering.
                if (
                  nextRoot !== null &&
                  expirationTime === nextRenderExpirationTime
                ) {
                  expirationTime += 1;
                }
              } else {
                // This is a sync update
                expirationTime = Sync;
              }
            }
            if (isBatchingInteractiveUpdates) {
              // This is an interactive update. Keep track of the lowest pending
              // interactive expiration time. This allows us to synchronously flush
              // all interactive updates when needed.
              if (
                lowestPriorityPendingInteractiveExpirationTime === NoWork ||
                expirationTime > lowestPriorityPendingInteractiveExpirationTime
              ) {
                lowestPriorityPendingInteractiveExpirationTime = expirationTime;
              }
            }
            return expirationTime;
          }

          function renderDidSuspend(root, absoluteTimeoutMs, suspendedTime) {
            // Schedule the timeout.
            if (
              absoluteTimeoutMs >= 0 &&
              nextLatestAbsoluteTimeoutMs < absoluteTimeoutMs
            ) {
              nextLatestAbsoluteTimeoutMs = absoluteTimeoutMs;
            }
          }

          function renderDidError() {
            nextRenderDidError = true;
          }

          function retrySuspendedRoot(root, fiber, suspendedTime) {
            if (enableSuspense) {
              var retryTime = void 0;

              if (isPriorityLevelSuspended(root, suspendedTime)) {
                // Ping at the original level
                retryTime = suspendedTime;
                markPingedPriorityLevel(root, retryTime);
              } else {
                // Placeholder already timed out. Compute a new expiration time
                var currentTime = requestCurrentTime();
                retryTime = computeExpirationForFiber(currentTime, fiber);
                markPendingPriorityLevel(root, retryTime);
              }

              scheduleWorkToRoot(fiber, retryTime);
              var rootExpirationTime = root.expirationTime;
              if (rootExpirationTime !== NoWork) {
                if (enableSchedulerTracing) {
                  // Restore previous interactions so that new work is associated with them.
                  var prevInteractions = tracing.__interactionsRef.current;
                  tracing.__interactionsRef.current = root.memoizedInteractions;
                  // Because suspense timeouts do not decrement the interaction count,
                  // Continued suspense work should also not increment the count.
                  storeInteractionsForExpirationTime(
                    root,
                    rootExpirationTime,
                    false
                  );
                  requestWork(root, rootExpirationTime);
                  tracing.__interactionsRef.current = prevInteractions;
                } else {
                  requestWork(root, rootExpirationTime);
                }
              }
            }
          }

          function scheduleWorkToRoot(fiber, expirationTime) {
            // Update the source fiber's expiration time
            if (
              fiber.expirationTime === NoWork ||
              fiber.expirationTime > expirationTime
            ) {
              fiber.expirationTime = expirationTime;
            }
            var alternate = fiber.alternate;
            if (
              alternate !== null &&
              (alternate.expirationTime === NoWork ||
                alternate.expirationTime > expirationTime)
            ) {
              alternate.expirationTime = expirationTime;
            }
            // Walk the parent path to the root and update the child expiration time.
            var node = fiber.return;
            if (node === null && fiber.tag === HostRoot) {
              return fiber.stateNode;
            }
            while (node !== null) {
              alternate = node.alternate;
              if (
                node.childExpirationTime === NoWork ||
                node.childExpirationTime > expirationTime
              ) {
                node.childExpirationTime = expirationTime;
                if (
                  alternate !== null &&
                  (alternate.childExpirationTime === NoWork ||
                    alternate.childExpirationTime > expirationTime)
                ) {
                  alternate.childExpirationTime = expirationTime;
                }
              } else if (
                alternate !== null &&
                (alternate.childExpirationTime === NoWork ||
                  alternate.childExpirationTime > expirationTime)
              ) {
                alternate.childExpirationTime = expirationTime;
              }
              if (node.return === null && node.tag === HostRoot) {
                return node.stateNode;
              }
              node = node.return;
            }
            return null;
          }

          function storeInteractionsForExpirationTime(
            root,
            expirationTime,
            updateInteractionCounts
          ) {
            if (!enableSchedulerTracing) {
              return;
            }

            var interactions = tracing.__interactionsRef.current;
            if (interactions.size > 0) {
              var pendingInteractions = root.pendingInteractionMap.get(
                expirationTime
              );
              if (pendingInteractions != null) {
                interactions.forEach(function(interaction) {
                  if (
                    updateInteractionCounts &&
                    !pendingInteractions.has(interaction)
                  ) {
                    // Update the pending async work count for previously unscheduled interaction.
                    interaction.__count++;
                  }

                  pendingInteractions.add(interaction);
                });
              } else {
                root.pendingInteractionMap.set(
                  expirationTime,
                  new Set(interactions)
                );

                // Update the pending async work count for the current interactions.
                if (updateInteractionCounts) {
                  interactions.forEach(function(interaction) {
                    interaction.__count++;
                  });
                }
              }

              var subscriber = tracing.__subscriberRef.current;
              if (subscriber !== null) {
                var threadID = computeThreadID(
                  expirationTime,
                  root.interactionThreadID
                );
                subscriber.onWorkScheduled(interactions, threadID);
              }
            }
          }

          function scheduleWork(fiber, expirationTime) {
            recordScheduleUpdate();

            {
              if (
                fiber.tag === ClassComponent ||
                fiber.tag === ClassComponentLazy
              ) {
                var instance = fiber.stateNode;
                warnAboutInvalidUpdates(instance);
              }
            }

            var root = scheduleWorkToRoot(fiber, expirationTime);
            if (root === null) {
              if (
                true &&
                (fiber.tag === ClassComponent ||
                  fiber.tag === ClassComponentLazy)
              ) {
                warnAboutUpdateOnUnmounted(fiber);
              }
              return;
            }

            if (enableSchedulerTracing) {
              storeInteractionsForExpirationTime(root, expirationTime, true);
            }

            if (
              !isWorking &&
              nextRenderExpirationTime !== NoWork &&
              expirationTime < nextRenderExpirationTime
            ) {
              // This is an interruption. (Used for performance tracking.)
              interruptedBy = fiber;
              resetStack();
            }
            markPendingPriorityLevel(root, expirationTime);
            if (
              // If we're in the render phase, we don't need to schedule this root
              // for an update, because we'll do it before we exit...
              !isWorking ||
              isCommitting$1 ||
              // ...unless this is a different root than the one we're rendering.
              nextRoot !== root
            ) {
              var rootExpirationTime = root.expirationTime;
              requestWork(root, rootExpirationTime);
            }
            if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
              // Reset this back to zero so subsequent updates don't throw.
              nestedUpdateCount = 0;
              invariant(
                false,
                'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.'
              );
            }
          }

          function syncUpdates(fn, a, b, c, d) {
            var previousExpirationContext = expirationContext;
            expirationContext = Sync;
            try {
              return fn(a, b, c, d);
            } finally {
              expirationContext = previousExpirationContext;
            }
          }

          // TODO: Everything below this is written as if it has been lifted to the
          // renderers. I'll do this in a follow-up.

          // Linked-list of roots
          var firstScheduledRoot = null;
          var lastScheduledRoot = null;

          var callbackExpirationTime = NoWork;
          var callbackID = void 0;
          var isRendering = false;
          var nextFlushedRoot = null;
          var nextFlushedExpirationTime = NoWork;
          var lowestPriorityPendingInteractiveExpirationTime = NoWork;
          var deadlineDidExpire = false;
          var hasUnhandledError = false;
          var unhandledError = null;
          var deadline = null;

          var isBatchingUpdates = false;
          var isUnbatchingUpdates = false;
          var isBatchingInteractiveUpdates = false;

          var completedBatches = null;

          var originalStartTimeMs = schedule.unstable_now();
          var currentRendererTime = msToExpirationTime(originalStartTimeMs);
          var currentSchedulerTime = currentRendererTime;

          // Use these to prevent an infinite loop of nested updates
          var NESTED_UPDATE_LIMIT = 50;
          var nestedUpdateCount = 0;
          var lastCommittedRootDuringThisBatch = null;

          var timeHeuristicForUnitOfWork = 1;

          function recomputeCurrentRendererTime() {
            var currentTimeMs = schedule.unstable_now() - originalStartTimeMs;
            currentRendererTime = msToExpirationTime(currentTimeMs);
          }

          function scheduleCallbackWithExpirationTime(root, expirationTime) {
            if (callbackExpirationTime !== NoWork) {
              // A callback is already scheduled. Check its expiration time (timeout).
              if (expirationTime > callbackExpirationTime) {
                // Existing callback has sufficient timeout. Exit.
                return;
              } else {
                if (callbackID !== null) {
                  // Existing callback has insufficient timeout. Cancel and schedule a
                  // new one.
                  schedule.unstable_cancelScheduledWork(callbackID);
                }
              }
              // The request callback timer is already running. Don't start a new one.
            } else {
              startRequestCallbackTimer();
            }

            callbackExpirationTime = expirationTime;
            var currentMs = schedule.unstable_now() - originalStartTimeMs;
            var expirationTimeMs = expirationTimeToMs(expirationTime);
            var timeout = expirationTimeMs - currentMs;
            callbackID = schedule.unstable_scheduleWork(performAsyncWork, {
              timeout: timeout
            });
          }

          // For every call to renderRoot, one of onFatal, onComplete, onSuspend, and
          // onYield is called upon exiting. We use these in lieu of returning a tuple.
          // I've also chosen not to inline them into renderRoot because these will
          // eventually be lifted into the renderer.
          function onFatal(root) {
            root.finishedWork = null;
          }

          function onComplete(root, finishedWork, expirationTime) {
            root.pendingCommitExpirationTime = expirationTime;
            root.finishedWork = finishedWork;
          }

          function onSuspend(
            root,
            finishedWork,
            suspendedExpirationTime,
            rootExpirationTime,
            msUntilTimeout
          ) {
            root.expirationTime = rootExpirationTime;
            if (enableSuspense && msUntilTimeout === 0 && !shouldYield()) {
              // Don't wait an additional tick. Commit the tree immediately.
              root.pendingCommitExpirationTime = suspendedExpirationTime;
              root.finishedWork = finishedWork;
            } else if (msUntilTimeout > 0) {
              // Wait `msUntilTimeout` milliseconds before committing.
              root.timeoutHandle = scheduleTimeout(
                onTimeout.bind(
                  null,
                  root,
                  finishedWork,
                  suspendedExpirationTime
                ),
                msUntilTimeout
              );
            }
          }

          function onYield(root) {
            root.finishedWork = null;
          }

          function onTimeout(root, finishedWork, suspendedExpirationTime) {
            if (enableSuspense) {
              // The root timed out. Commit it.
              root.pendingCommitExpirationTime = suspendedExpirationTime;
              root.finishedWork = finishedWork;
              // Read the current time before entering the commit phase. We can be
              // certain this won't cause tearing related to batching of event updates
              // because we're at the top of a timer event.
              recomputeCurrentRendererTime();
              currentSchedulerTime = currentRendererTime;

              if (enableSchedulerTracing) {
                // Don't update pending interaction counts for suspense timeouts,
                // Because we know we still need to do more work in this case.
                suspenseDidTimeout = true;
                flushRoot(root, suspendedExpirationTime);
                suspenseDidTimeout = false;
              } else {
                flushRoot(root, suspendedExpirationTime);
              }
            }
          }

          function onCommit(root, expirationTime) {
            root.expirationTime = expirationTime;
            root.finishedWork = null;
          }

          function requestCurrentTime() {
            // requestCurrentTime is called by the scheduler to compute an expiration
            // time.
            //
            // Expiration times are computed by adding to the current time (the start
            // time). However, if two updates are scheduled within the same event, we
            // should treat their start times as simultaneous, even if the actual clock
            // time has advanced between the first and second call.

            // In other words, because expiration times determine how updates are batched,
            // we want all updates of like priority that occur within the same event to
            // receive the same expiration time. Otherwise we get tearing.
            //
            // We keep track of two separate times: the current "renderer" time and the
            // current "scheduler" time. The renderer time can be updated whenever; it
            // only exists to minimize the calls performance.now.
            //
            // But the scheduler time can only be updated if there's no pending work, or
            // if we know for certain that we're not in the middle of an event.

            if (isRendering) {
              // We're already rendering. Return the most recently read time.
              return currentSchedulerTime;
            }
            // Check if there's pending work.
            findHighestPriorityRoot();
            if (
              nextFlushedExpirationTime === NoWork ||
              nextFlushedExpirationTime === Never
            ) {
              // If there's no pending work, or if the pending work is offscreen, we can
              // read the current time without risk of tearing.
              recomputeCurrentRendererTime();
              currentSchedulerTime = currentRendererTime;
              return currentSchedulerTime;
            }
            // There's already pending work. We might be in the middle of a browser
            // event. If we were to read the current time, it could cause multiple updates
            // within the same event to receive different expiration times, leading to
            // tearing. Return the last read time. During the next idle callback, the
            // time will be updated.
            return currentSchedulerTime;
          }

          // requestWork is called by the scheduler whenever a root receives an update.
          // It's up to the renderer to call renderRoot at some point in the future.
          function requestWork(root, expirationTime) {
            addRootToSchedule(root, expirationTime);
            if (isRendering) {
              // Prevent reentrancy. Remaining work will be scheduled at the end of
              // the currently rendering batch.
              return;
            }

            if (isBatchingUpdates) {
              // Flush work at the end of the batch.
              if (isUnbatchingUpdates) {
                // ...unless we're inside unbatchedUpdates, in which case we should
                // flush it now.
                nextFlushedRoot = root;
                nextFlushedExpirationTime = Sync;
                performWorkOnRoot(root, Sync, true);
              }
              return;
            }

            // TODO: Get rid of Sync and use current time?
            if (expirationTime === Sync) {
              performSyncWork();
            } else {
              scheduleCallbackWithExpirationTime(root, expirationTime);
            }
          }

          function addRootToSchedule(root, expirationTime) {
            // Add the root to the schedule.
            // Check if this root is already part of the schedule.
            if (root.nextScheduledRoot === null) {
              // This root is not already scheduled. Add it.
              root.expirationTime = expirationTime;
              if (lastScheduledRoot === null) {
                firstScheduledRoot = lastScheduledRoot = root;
                root.nextScheduledRoot = root;
              } else {
                lastScheduledRoot.nextScheduledRoot = root;
                lastScheduledRoot = root;
                lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
              }
            } else {
              // This root is already scheduled, but its priority may have increased.
              var remainingExpirationTime = root.expirationTime;
              if (
                remainingExpirationTime === NoWork ||
                expirationTime < remainingExpirationTime
              ) {
                // Update the priority.
                root.expirationTime = expirationTime;
              }
            }
          }

          function findHighestPriorityRoot() {
            var highestPriorityWork = NoWork;
            var highestPriorityRoot = null;
            if (lastScheduledRoot !== null) {
              var previousScheduledRoot = lastScheduledRoot;
              var root = firstScheduledRoot;
              while (root !== null) {
                var remainingExpirationTime = root.expirationTime;
                if (remainingExpirationTime === NoWork) {
                  // This root no longer has work. Remove it from the scheduler.

                  // TODO: This check is redudant, but Flow is confused by the branch
                  // below where we set lastScheduledRoot to null, even though we break
                  // from the loop right after.
                  !(
                    previousScheduledRoot !== null && lastScheduledRoot !== null
                  )
                    ? invariant(
                        false,
                        'Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.'
                      )
                    : void 0;
                  if (root === root.nextScheduledRoot) {
                    // This is the only root in the list.
                    root.nextScheduledRoot = null;
                    firstScheduledRoot = lastScheduledRoot = null;
                    break;
                  } else if (root === firstScheduledRoot) {
                    // This is the first root in the list.
                    var next = root.nextScheduledRoot;
                    firstScheduledRoot = next;
                    lastScheduledRoot.nextScheduledRoot = next;
                    root.nextScheduledRoot = null;
                  } else if (root === lastScheduledRoot) {
                    // This is the last root in the list.
                    lastScheduledRoot = previousScheduledRoot;
                    lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
                    root.nextScheduledRoot = null;
                    break;
                  } else {
                    previousScheduledRoot.nextScheduledRoot =
                      root.nextScheduledRoot;
                    root.nextScheduledRoot = null;
                  }
                  root = previousScheduledRoot.nextScheduledRoot;
                } else {
                  if (
                    highestPriorityWork === NoWork ||
                    remainingExpirationTime < highestPriorityWork
                  ) {
                    // Update the priority, if it's higher
                    highestPriorityWork = remainingExpirationTime;
                    highestPriorityRoot = root;
                  }
                  if (root === lastScheduledRoot) {
                    break;
                  }
                  if (highestPriorityWork === Sync) {
                    // Sync is highest priority by definition so
                    // we can stop searching.
                    break;
                  }
                  previousScheduledRoot = root;
                  root = root.nextScheduledRoot;
                }
              }
            }

            nextFlushedRoot = highestPriorityRoot;
            nextFlushedExpirationTime = highestPriorityWork;
          }

          function performAsyncWork(dl) {
            if (dl.didTimeout) {
              // The callback timed out. That means at least one update has expired.
              // Iterate through the root schedule. If they contain expired work, set
              // the next render expiration time to the current time. This has the effect
              // of flushing all expired work in a single batch, instead of flushing each
              // level one at a time.
              if (firstScheduledRoot !== null) {
                recomputeCurrentRendererTime();
                var root = firstScheduledRoot;
                do {
                  didExpireAtExpirationTime(root, currentRendererTime);
                  // The root schedule is circular, so this is never null.
                  root = root.nextScheduledRoot;
                } while (root !== firstScheduledRoot);
              }
            }
            performWork(NoWork, dl);
          }

          function performSyncWork() {
            performWork(Sync, null);
          }

          function performWork(minExpirationTime, dl) {
            deadline = dl;

            // Keep working on roots until there's no more work, or until we reach
            // the deadline.
            findHighestPriorityRoot();

            if (deadline !== null) {
              recomputeCurrentRendererTime();
              currentSchedulerTime = currentRendererTime;

              if (enableUserTimingAPI) {
                var didExpire = nextFlushedExpirationTime < currentRendererTime;
                var timeout = expirationTimeToMs(nextFlushedExpirationTime);
                stopRequestCallbackTimer(didExpire, timeout);
              }

              while (
                nextFlushedRoot !== null &&
                nextFlushedExpirationTime !== NoWork &&
                (minExpirationTime === NoWork ||
                  minExpirationTime >= nextFlushedExpirationTime) &&
                (!deadlineDidExpire ||
                  currentRendererTime >= nextFlushedExpirationTime)
              ) {
                performWorkOnRoot(
                  nextFlushedRoot,
                  nextFlushedExpirationTime,
                  currentRendererTime >= nextFlushedExpirationTime
                );
                findHighestPriorityRoot();
                recomputeCurrentRendererTime();
                currentSchedulerTime = currentRendererTime;
              }
            } else {
              while (
                nextFlushedRoot !== null &&
                nextFlushedExpirationTime !== NoWork &&
                (minExpirationTime === NoWork ||
                  minExpirationTime >= nextFlushedExpirationTime)
              ) {
                performWorkOnRoot(
                  nextFlushedRoot,
                  nextFlushedExpirationTime,
                  true
                );
                findHighestPriorityRoot();
              }
            }

            // We're done flushing work. Either we ran out of time in this callback,
            // or there's no more work left with sufficient priority.

            // If we're inside a callback, set this to false since we just completed it.
            if (deadline !== null) {
              callbackExpirationTime = NoWork;
              callbackID = null;
            }
            // If there's work left over, schedule a new callback.
            if (nextFlushedExpirationTime !== NoWork) {
              scheduleCallbackWithExpirationTime(
                nextFlushedRoot,
                nextFlushedExpirationTime
              );
            }

            // Clean-up.
            deadline = null;
            deadlineDidExpire = false;

            finishRendering();
          }

          function flushRoot(root, expirationTime) {
            !!isRendering
              ? invariant(
                  false,
                  'work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.'
                )
              : void 0;
            // Perform work on root as if the given expiration time is the current time.
            // This has the effect of synchronously flushing all work up to and
            // including the given time.
            nextFlushedRoot = root;
            nextFlushedExpirationTime = expirationTime;
            performWorkOnRoot(root, expirationTime, true);
            // Flush any sync work that was scheduled by lifecycles
            performSyncWork();
          }

          function finishRendering() {
            nestedUpdateCount = 0;
            lastCommittedRootDuringThisBatch = null;

            if (completedBatches !== null) {
              var batches = completedBatches;
              completedBatches = null;
              for (var i = 0; i < batches.length; i++) {
                var batch = batches[i];
                try {
                  batch._onComplete();
                } catch (error) {
                  if (!hasUnhandledError) {
                    hasUnhandledError = true;
                    unhandledError = error;
                  }
                }
              }
            }

            if (hasUnhandledError) {
              var error = unhandledError;
              unhandledError = null;
              hasUnhandledError = false;
              throw error;
            }
          }

          function performWorkOnRoot(root, expirationTime, isExpired) {
            !!isRendering
              ? invariant(
                  false,
                  'performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.'
                )
              : void 0;

            isRendering = true;

            // Check if this is async work or sync/expired work.
            if (deadline === null || isExpired) {
              // Flush work without yielding.
              // TODO: Non-yieldy work does not necessarily imply expired work. A renderer
              // may want to perform some work without yielding, but also without
              // requiring the root to complete (by triggering placeholders).

              var finishedWork = root.finishedWork;
              if (finishedWork !== null) {
                // This root is already complete. We can commit it.
                completeRoot(root, finishedWork, expirationTime);
              } else {
                root.finishedWork = null;
                // If this root previously suspended, clear its existing timeout, since
                // we're about to try rendering again.
                var timeoutHandle = root.timeoutHandle;
                if (enableSuspense && timeoutHandle !== noTimeout) {
                  root.timeoutHandle = noTimeout;
                  // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
                  cancelTimeout(timeoutHandle);
                }
                var isYieldy = false;
                renderRoot(root, isYieldy, isExpired);
                finishedWork = root.finishedWork;
                if (finishedWork !== null) {
                  // We've completed the root. Commit it.
                  completeRoot(root, finishedWork, expirationTime);
                }
              }
            } else {
              // Flush async work.
              var _finishedWork = root.finishedWork;
              if (_finishedWork !== null) {
                // This root is already complete. We can commit it.
                completeRoot(root, _finishedWork, expirationTime);
              } else {
                root.finishedWork = null;
                // If this root previously suspended, clear its existing timeout, since
                // we're about to try rendering again.
                var _timeoutHandle = root.timeoutHandle;
                if (enableSuspense && _timeoutHandle !== noTimeout) {
                  root.timeoutHandle = noTimeout;
                  // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
                  cancelTimeout(_timeoutHandle);
                }
                var _isYieldy = true;
                renderRoot(root, _isYieldy, isExpired);
                _finishedWork = root.finishedWork;
                if (_finishedWork !== null) {
                  // We've completed the root. Check the deadline one more time
                  // before committing.
                  if (!shouldYield()) {
                    // Still time left. Commit the root.
                    completeRoot(root, _finishedWork, expirationTime);
                  } else {
                    // There's no time left. Mark this root as complete. We'll come
                    // back and commit it later.
                    root.finishedWork = _finishedWork;
                  }
                }
              }
            }

            isRendering = false;
          }

          function completeRoot(root, finishedWork, expirationTime) {
            // Check if there's a batch that matches this expiration time.
            var firstBatch = root.firstBatch;
            if (
              firstBatch !== null &&
              firstBatch._expirationTime <= expirationTime
            ) {
              if (completedBatches === null) {
                completedBatches = [firstBatch];
              } else {
                completedBatches.push(firstBatch);
              }
              if (firstBatch._defer) {
                // This root is blocked from committing by a batch. Unschedule it until
                // we receive another update.
                root.finishedWork = finishedWork;
                root.expirationTime = NoWork;
                return;
              }
            }

            // Commit the root.
            root.finishedWork = null;

            // Check if this is a nested update (a sync update scheduled during the
            // commit phase).
            if (root === lastCommittedRootDuringThisBatch) {
              // If the next root is the same as the previous root, this is a nested
              // update. To prevent an infinite loop, increment the nested update count.
              nestedUpdateCount++;
            } else {
              // Reset whenever we switch roots.
              lastCommittedRootDuringThisBatch = root;
              nestedUpdateCount = 0;
            }
            commitRoot(root, finishedWork);
          }

          // When working on async work, the reconciler asks the renderer if it should
          // yield execution. For DOM, we implement this with requestIdleCallback.
          function shouldYield() {
            if (deadlineDidExpire) {
              return true;
            }
            if (
              deadline === null ||
              deadline.timeRemaining() > timeHeuristicForUnitOfWork
            ) {
              // Disregard deadline.didTimeout. Only expired work should be flushed
              // during a timeout. This path is only hit for non-expired work.
              return false;
            }
            deadlineDidExpire = true;
            return true;
          }

          function onUncaughtError(error) {
            !(nextFlushedRoot !== null)
              ? invariant(
                  false,
                  'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.'
                )
              : void 0;
            // Unschedule this root so we don't work on it again until there's
            // another update.
            nextFlushedRoot.expirationTime = NoWork;
            if (!hasUnhandledError) {
              hasUnhandledError = true;
              unhandledError = error;
            }
          }

          // TODO: Batching should be implemented at the renderer level, not inside
          // the reconciler.
          function batchedUpdates$1(fn, a) {
            var previousIsBatchingUpdates = isBatchingUpdates;
            isBatchingUpdates = true;
            try {
              return fn(a);
            } finally {
              isBatchingUpdates = previousIsBatchingUpdates;
              if (!isBatchingUpdates && !isRendering) {
                performSyncWork();
              }
            }
          }

          // TODO: Batching should be implemented at the renderer level, not inside
          // the reconciler.
          function unbatchedUpdates(fn, a) {
            if (isBatchingUpdates && !isUnbatchingUpdates) {
              isUnbatchingUpdates = true;
              try {
                return fn(a);
              } finally {
                isUnbatchingUpdates = false;
              }
            }
            return fn(a);
          }

          // TODO: Batching should be implemented at the renderer level, not within
          // the reconciler.
          function flushSync(fn, a) {
            !!isRendering
              ? invariant(
                  false,
                  'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.'
                )
              : void 0;
            var previousIsBatchingUpdates = isBatchingUpdates;
            isBatchingUpdates = true;
            try {
              return syncUpdates(fn, a);
            } finally {
              isBatchingUpdates = previousIsBatchingUpdates;
              performSyncWork();
            }
          }

          function interactiveUpdates$1(fn, a, b) {
            if (isBatchingInteractiveUpdates) {
              return fn(a, b);
            }
            // If there are any pending interactive updates, synchronously flush them.
            // This needs to happen before we read any handlers, because the effect of
            // the previous event may influence which handlers are called during
            // this event.
            if (
              !isBatchingUpdates &&
              !isRendering &&
              lowestPriorityPendingInteractiveExpirationTime !== NoWork
            ) {
              // Synchronously flush pending interactive updates.
              performWork(lowestPriorityPendingInteractiveExpirationTime, null);
              lowestPriorityPendingInteractiveExpirationTime = NoWork;
            }
            var previousIsBatchingInteractiveUpdates = isBatchingInteractiveUpdates;
            var previousIsBatchingUpdates = isBatchingUpdates;
            isBatchingInteractiveUpdates = true;
            isBatchingUpdates = true;
            try {
              return fn(a, b);
            } finally {
              isBatchingInteractiveUpdates = previousIsBatchingInteractiveUpdates;
              isBatchingUpdates = previousIsBatchingUpdates;
              if (!isBatchingUpdates && !isRendering) {
                performSyncWork();
              }
            }
          }

          function flushInteractiveUpdates$1() {
            if (
              !isRendering &&
              lowestPriorityPendingInteractiveExpirationTime !== NoWork
            ) {
              // Synchronously flush pending interactive updates.
              performWork(lowestPriorityPendingInteractiveExpirationTime, null);
              lowestPriorityPendingInteractiveExpirationTime = NoWork;
            }
          }

          function flushControlled(fn) {
            var previousIsBatchingUpdates = isBatchingUpdates;
            isBatchingUpdates = true;
            try {
              syncUpdates(fn);
            } finally {
              isBatchingUpdates = previousIsBatchingUpdates;
              if (!isBatchingUpdates && !isRendering) {
                performSyncWork();
              }
            }
          }

          // 0 is PROD, 1 is DEV.
          // Might add PROFILE later.

          var didWarnAboutNestedUpdates = void 0;

          {
            didWarnAboutNestedUpdates = false;
          }

          function getContextForSubtree(parentComponent) {
            if (!parentComponent) {
              return emptyContextObject;
            }

            var fiber = get(parentComponent);
            var parentContext = findCurrentUnmaskedContext(fiber);

            if (fiber.tag === ClassComponent) {
              var Component = fiber.type;
              if (isContextProvider(Component)) {
                return processChildContext(fiber, Component, parentContext);
              }
            } else if (fiber.tag === ClassComponentLazy) {
              var _Component = getResultFromResolvedThenable(fiber.type);
              if (isContextProvider(_Component)) {
                return processChildContext(fiber, _Component, parentContext);
              }
            }

            return parentContext;
          }

          function scheduleRootUpdate(
            current$$1,
            element,
            expirationTime,
            callback
          ) {
            {
              if (
                phase === 'render' &&
                current !== null &&
                !didWarnAboutNestedUpdates
              ) {
                didWarnAboutNestedUpdates = true;
                warningWithoutStack$1(
                  false,
                  'Render methods should be a pure function of props and state; ' +
                    'triggering nested component updates from render is not allowed. ' +
                    'If necessary, trigger nested updates in componentDidUpdate.\n\n' +
                    'Check the render method of %s.',
                  getComponentName(current.type) || 'Unknown'
                );
              }
            }

            var update = createUpdate(expirationTime);
            // Caution: React DevTools currently depends on this property
            // being called "element".
            update.payload = { element: element };

            callback = callback === undefined ? null : callback;
            if (callback !== null) {
              !(typeof callback === 'function')
                ? warningWithoutStack$1(
                    false,
                    'render(...): Expected the last optional `callback` argument to be a ' +
                      'function. Instead received: %s.',
                    callback
                  )
                : void 0;
              update.callback = callback;
            }
            enqueueUpdate(current$$1, update);

            scheduleWork(current$$1, expirationTime);
            return expirationTime;
          }

          function updateContainerAtExpirationTime(
            element,
            container,
            parentComponent,
            expirationTime,
            callback
          ) {
            // TODO: If this is a nested container, this won't be the root.
            var current$$1 = container.current;

            {
              if (ReactFiberInstrumentation_1.debugTool) {
                if (current$$1.alternate === null) {
                  ReactFiberInstrumentation_1.debugTool.onMountContainer(
                    container
                  );
                } else if (element === null) {
                  ReactFiberInstrumentation_1.debugTool.onUnmountContainer(
                    container
                  );
                } else {
                  ReactFiberInstrumentation_1.debugTool.onUpdateContainer(
                    container
                  );
                }
              }
            }

            var context = getContextForSubtree(parentComponent);
            if (container.context === null) {
              container.context = context;
            } else {
              container.pendingContext = context;
            }

            return scheduleRootUpdate(
              current$$1,
              element,
              expirationTime,
              callback
            );
          }

          function findHostInstance(component) {
            var fiber = get(component);
            if (fiber === undefined) {
              if (typeof component.render === 'function') {
                invariant(
                  false,
                  'Unable to find node on an unmounted component.'
                );
              } else {
                invariant(
                  false,
                  'Argument appears to not be a ReactComponent. Keys: %s',
                  Object.keys(component)
                );
              }
            }
            var hostFiber = findCurrentHostFiber(fiber);
            if (hostFiber === null) {
              return null;
            }
            return hostFiber.stateNode;
          }

          function createContainer(containerInfo, isAsync, hydrate) {
            return createFiberRoot(containerInfo, isAsync, hydrate);
          }

          function updateContainer(
            element,
            container,
            parentComponent,
            callback
          ) {
            var current$$1 = container.current;
            var currentTime = requestCurrentTime();
            var expirationTime = computeExpirationForFiber(
              currentTime,
              current$$1
            );
            return updateContainerAtExpirationTime(
              element,
              container,
              parentComponent,
              expirationTime,
              callback
            );
          }

          function getPublicRootInstance(container) {
            var containerFiber = container.current;
            if (!containerFiber.child) {
              return null;
            }
            switch (containerFiber.child.tag) {
              case HostComponent:
                return getPublicInstance(containerFiber.child.stateNode);
              default:
                return containerFiber.child.stateNode;
            }
          }

          function findHostInstanceWithNoPortals(fiber) {
            var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
            if (hostFiber === null) {
              return null;
            }
            return hostFiber.stateNode;
          }

          function injectIntoDevTools(devToolsConfig) {
            var findFiberByHostInstance =
              devToolsConfig.findFiberByHostInstance;

            return injectInternals(
              _assign({}, devToolsConfig, {
                findHostInstanceByFiber: function(fiber) {
                  var hostFiber = findCurrentHostFiber(fiber);
                  if (hostFiber === null) {
                    return null;
                  }
                  return hostFiber.stateNode;
                },
                findFiberByHostInstance: function(instance) {
                  if (!findFiberByHostInstance) {
                    // Might not be implemented by the renderer.
                    return null;
                  }
                  return findFiberByHostInstance(instance);
                }
              })
            );
          }

          // This file intentionally does *not* have the Flow annotation.
          // Don't add it. See `./inline-typed.js` for an explanation.

          function createPortal$1(
            children,
            containerInfo,
            // TODO: figure out the API for cross-renderer implementation.
            implementation
          ) {
            var key =
              arguments.length > 3 && arguments[3] !== undefined
                ? arguments[3]
                : null;

            return {
              // This tag allow us to uniquely identify this as a React Portal
              $$typeof: REACT_PORTAL_TYPE,
              key: key == null ? null : '' + key,
              children: children,
              containerInfo: containerInfo,
              implementation: implementation
            };
          }

          // TODO: this is special because it gets imported during build.

          var ReactVersion = '16.5.2';

          // TODO: This type is shared between the reconciler and ReactDOM, but will
          // eventually be lifted out to the renderer.
          var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;

          var topLevelUpdateWarnings = void 0;
          var warnOnInvalidCallback = void 0;
          var didWarnAboutUnstableCreatePortal = false;

          {
            if (
              typeof Map !== 'function' ||
              // $FlowIssue Flow incorrectly thinks Map has no prototype
              Map.prototype == null ||
              typeof Map.prototype.forEach !== 'function' ||
              typeof Set !== 'function' ||
              // $FlowIssue Flow incorrectly thinks Set has no prototype
              Set.prototype == null ||
              typeof Set.prototype.clear !== 'function' ||
              typeof Set.prototype.forEach !== 'function'
            ) {
              warningWithoutStack$1(
                false,
                'React depends on Map and Set built-in types. Make sure that you load a ' +
                  'polyfill in older browsers. https://fb.me/react-polyfills'
              );
            }

            topLevelUpdateWarnings = function(container) {
              if (
                container._reactRootContainer &&
                container.nodeType !== COMMENT_NODE
              ) {
                var hostInstance = findHostInstanceWithNoPortals(
                  container._reactRootContainer._internalRoot.current
                );
                if (hostInstance) {
                  !(hostInstance.parentNode === container)
                    ? warningWithoutStack$1(
                        false,
                        'render(...): It looks like the React-rendered content of this ' +
                          'container was removed without using React. This is not ' +
                          'supported and will cause errors. Instead, call ' +
                          'ReactDOM.unmountComponentAtNode to empty a container.'
                      )
                    : void 0;
                }
              }

              var isRootRenderedBySomeReact = !!container._reactRootContainer;
              var rootEl = getReactRootElementInContainer(container);
              var hasNonRootReactChild = !!(
                rootEl && getInstanceFromNode$1(rootEl)
              );

              !(!hasNonRootReactChild || isRootRenderedBySomeReact)
                ? warningWithoutStack$1(
                    false,
                    'render(...): Replacing React-rendered children with a new root ' +
                      'component. If you intended to update the children of this node, ' +
                      'you should instead have the existing children update their state ' +
                      'and render the new components instead of calling ReactDOM.render.'
                  )
                : void 0;

              !(
                container.nodeType !== ELEMENT_NODE ||
                !container.tagName ||
                container.tagName.toUpperCase() !== 'BODY'
              )
                ? warningWithoutStack$1(
                    false,
                    'render(): Rendering components directly into document.body is ' +
                      'discouraged, since its children are often manipulated by third-party ' +
                      'scripts and browser extensions. This may lead to subtle ' +
                      'reconciliation issues. Try rendering into a container element created ' +
                      'for your app.'
                  )
                : void 0;
            };

            warnOnInvalidCallback = function(callback, callerName) {
              !(callback === null || typeof callback === 'function')
                ? warningWithoutStack$1(
                    false,
                    '%s(...): Expected the last optional `callback` argument to be a ' +
                      'function. Instead received: %s.',
                    callerName,
                    callback
                  )
                : void 0;
            };
          }

          setRestoreImplementation(restoreControlledState$1);

          /* eslint-disable no-use-before-define */

          /* eslint-enable no-use-before-define */

          function ReactBatch(root) {
            var expirationTime = computeUniqueAsyncExpiration();
            this._expirationTime = expirationTime;
            this._root = root;
            this._next = null;
            this._callbacks = null;
            this._didComplete = false;
            this._hasChildren = false;
            this._children = null;
            this._defer = true;
          }
          ReactBatch.prototype.render = function(children) {
            !this._defer
              ? invariant(
                  false,
                  'batch.render: Cannot render a batch that already committed.'
                )
              : void 0;
            this._hasChildren = true;
            this._children = children;
            var internalRoot = this._root._internalRoot;
            var expirationTime = this._expirationTime;
            var work = new ReactWork();
            updateContainerAtExpirationTime(
              children,
              internalRoot,
              null,
              expirationTime,
              work._onCommit
            );
            return work;
          };
          ReactBatch.prototype.then = function(onComplete) {
            if (this._didComplete) {
              onComplete();
              return;
            }
            var callbacks = this._callbacks;
            if (callbacks === null) {
              callbacks = this._callbacks = [];
            }
            callbacks.push(onComplete);
          };
          ReactBatch.prototype.commit = function() {
            var internalRoot = this._root._internalRoot;
            var firstBatch = internalRoot.firstBatch;
            !(this._defer && firstBatch !== null)
              ? invariant(
                  false,
                  'batch.commit: Cannot commit a batch multiple times.'
                )
              : void 0;

            if (!this._hasChildren) {
              // This batch is empty. Return.
              this._next = null;
              this._defer = false;
              return;
            }

            var expirationTime = this._expirationTime;

            // Ensure this is the first batch in the list.
            if (firstBatch !== this) {
              // This batch is not the earliest batch. We need to move it to the front.
              // Update its expiration time to be the expiration time of the earliest
              // batch, so that we can flush it without flushing the other batches.
              if (this._hasChildren) {
                expirationTime = this._expirationTime =
                  firstBatch._expirationTime;
                // Rendering this batch again ensures its children will be the final state
                // when we flush (updates are processed in insertion order: last
                // update wins).
                // TODO: This forces a restart. Should we print a warning?
                this.render(this._children);
              }

              // Remove the batch from the list.
              var previous = null;
              var batch = firstBatch;
              while (batch !== this) {
                previous = batch;
                batch = batch._next;
              }
              !(previous !== null)
                ? invariant(
                    false,
                    'batch.commit: Cannot commit a batch multiple times.'
                  )
                : void 0;
              previous._next = batch._next;

              // Add it to the front.
              this._next = firstBatch;
              firstBatch = internalRoot.firstBatch = this;
            }

            // Synchronously flush all the work up to this batch's expiration time.
            this._defer = false;
            flushRoot(internalRoot, expirationTime);

            // Pop the batch from the list.
            var next = this._next;
            this._next = null;
            firstBatch = internalRoot.firstBatch = next;

            // Append the next earliest batch's children to the update queue.
            if (firstBatch !== null && firstBatch._hasChildren) {
              firstBatch.render(firstBatch._children);
            }
          };
          ReactBatch.prototype._onComplete = function() {
            if (this._didComplete) {
              return;
            }
            this._didComplete = true;
            var callbacks = this._callbacks;
            if (callbacks === null) {
              return;
            }
            // TODO: Error handling.
            for (var i = 0; i < callbacks.length; i++) {
              var _callback = callbacks[i];
              _callback();
            }
          };

          function ReactWork() {
            this._callbacks = null;
            this._didCommit = false;
            // TODO: Avoid need to bind by replacing callbacks in the update queue with
            // list of Work objects.
            this._onCommit = this._onCommit.bind(this);
          }
          ReactWork.prototype.then = function(onCommit) {
            if (this._didCommit) {
              onCommit();
              return;
            }
            var callbacks = this._callbacks;
            if (callbacks === null) {
              callbacks = this._callbacks = [];
            }
            callbacks.push(onCommit);
          };
          ReactWork.prototype._onCommit = function() {
            if (this._didCommit) {
              return;
            }
            this._didCommit = true;
            var callbacks = this._callbacks;
            if (callbacks === null) {
              return;
            }
            // TODO: Error handling.
            for (var i = 0; i < callbacks.length; i++) {
              var _callback2 = callbacks[i];
              !(typeof _callback2 === 'function')
                ? invariant(
                    false,
                    'Invalid argument passed as callback. Expected a function. Instead received: %s',
                    _callback2
                  )
                : void 0;
              _callback2();
            }
          };

          function ReactRoot(container, isAsync, hydrate) {
            var root = createContainer(container, isAsync, hydrate);
            this._internalRoot = root;
          }
          ReactRoot.prototype.render = function(children, callback) {
            var root = this._internalRoot;
            var work = new ReactWork();
            callback = callback === undefined ? null : callback;
            {
              warnOnInvalidCallback(callback, 'render');
            }
            if (callback !== null) {
              work.then(callback);
            }
            updateContainer(children, root, null, work._onCommit);
            return work;
          };
          ReactRoot.prototype.unmount = function(callback) {
            var root = this._internalRoot;
            var work = new ReactWork();
            callback = callback === undefined ? null : callback;
            {
              warnOnInvalidCallback(callback, 'render');
            }
            if (callback !== null) {
              work.then(callback);
            }
            updateContainer(null, root, null, work._onCommit);
            return work;
          };
          ReactRoot.prototype.legacy_renderSubtreeIntoContainer = function(
            parentComponent,
            children,
            callback
          ) {
            var root = this._internalRoot;
            var work = new ReactWork();
            callback = callback === undefined ? null : callback;
            {
              warnOnInvalidCallback(callback, 'render');
            }
            if (callback !== null) {
              work.then(callback);
            }
            updateContainer(children, root, parentComponent, work._onCommit);
            return work;
          };
          ReactRoot.prototype.createBatch = function() {
            var batch = new ReactBatch(this);
            var expirationTime = batch._expirationTime;

            var internalRoot = this._internalRoot;
            var firstBatch = internalRoot.firstBatch;
            if (firstBatch === null) {
              internalRoot.firstBatch = batch;
              batch._next = null;
            } else {
              // Insert sorted by expiration time then insertion order
              var insertAfter = null;
              var insertBefore = firstBatch;
              while (
                insertBefore !== null &&
                insertBefore._expirationTime <= expirationTime
              ) {
                insertAfter = insertBefore;
                insertBefore = insertBefore._next;
              }
              batch._next = insertBefore;
              if (insertAfter !== null) {
                insertAfter._next = batch;
              }
            }

            return batch;
          };

          /**
           * True if the supplied DOM node is a valid node element.
           *
           * @param {?DOMElement} node The candidate DOM node.
           * @return {boolean} True if the DOM is a valid DOM node.
           * @internal
           */
          function isValidContainer(node) {
            return !!(
              node &&
              (node.nodeType === ELEMENT_NODE ||
                node.nodeType === DOCUMENT_NODE ||
                node.nodeType === DOCUMENT_FRAGMENT_NODE ||
                (node.nodeType === COMMENT_NODE &&
                  node.nodeValue === ' react-mount-point-unstable '))
            );
          }

          function getReactRootElementInContainer(container) {
            if (!container) {
              return null;
            }

            if (container.nodeType === DOCUMENT_NODE) {
              return container.documentElement;
            } else {
              return container.firstChild;
            }
          }

          function shouldHydrateDueToLegacyHeuristic(container) {
            var rootElement = getReactRootElementInContainer(container);
            return !!(
              rootElement &&
              rootElement.nodeType === ELEMENT_NODE &&
              rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME)
            );
          }

          setBatchingImplementation(
            batchedUpdates$1,
            interactiveUpdates$1,
            flushInteractiveUpdates$1
          );

          var warnedAboutHydrateAPI = false;

          function legacyCreateRootFromDOMContainer(container, forceHydrate) {
            var shouldHydrate =
              forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
            // First clear any existing content.
            if (!shouldHydrate) {
              var warned = false;
              var rootSibling = void 0;
              while ((rootSibling = container.lastChild)) {
                {
                  if (
                    !warned &&
                    rootSibling.nodeType === ELEMENT_NODE &&
                    rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)
                  ) {
                    warned = true;
                    warningWithoutStack$1(
                      false,
                      'render(): Target node has markup rendered by React, but there ' +
                        'are unrelated nodes as well. This is most commonly caused by ' +
                        'white-space inserted around server-rendered markup.'
                    );
                  }
                }
                container.removeChild(rootSibling);
              }
            }
            {
              if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
                warnedAboutHydrateAPI = true;
                lowPriorityWarning$1(
                  false,
                  'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' +
                    'will stop working in React v17. Replace the ReactDOM.render() call ' +
                    'with ReactDOM.hydrate() if you want React to attach to the server HTML.'
                );
              }
            }
            // Legacy roots are not async by default.
            var isAsync = false;
            return new ReactRoot(container, isAsync, shouldHydrate);
          }

          function legacyRenderSubtreeIntoContainer(
            parentComponent,
            children,
            container,
            forceHydrate,
            callback
          ) {
            // TODO: Ensure all entry points contain this check
            !isValidContainer(container)
              ? invariant(false, 'Target container is not a DOM element.')
              : void 0;

            {
              topLevelUpdateWarnings(container);
            }

            // TODO: Without `any` type, Flow says "Property cannot be accessed on any
            // member of intersection type." Whyyyyyy.
            var root = container._reactRootContainer;
            if (!root) {
              // Initial mount
              root = container._reactRootContainer = legacyCreateRootFromDOMContainer(
                container,
                forceHydrate
              );
              if (typeof callback === 'function') {
                var originalCallback = callback;
                callback = function() {
                  var instance = getPublicRootInstance(root._internalRoot);
                  originalCallback.call(instance);
                };
              }
              // Initial mount should not be batched.
              unbatchedUpdates(function() {
                if (parentComponent != null) {
                  root.legacy_renderSubtreeIntoContainer(
                    parentComponent,
                    children,
                    callback
                  );
                } else {
                  root.render(children, callback);
                }
              });
            } else {
              if (typeof callback === 'function') {
                var _originalCallback = callback;
                callback = function() {
                  var instance = getPublicRootInstance(root._internalRoot);
                  _originalCallback.call(instance);
                };
              }
              // Update
              if (parentComponent != null) {
                root.legacy_renderSubtreeIntoContainer(
                  parentComponent,
                  children,
                  callback
                );
              } else {
                root.render(children, callback);
              }
            }
            return getPublicRootInstance(root._internalRoot);
          }

          function createPortal(children, container) {
            var key =
              arguments.length > 2 && arguments[2] !== undefined
                ? arguments[2]
                : null;

            !isValidContainer(container)
              ? invariant(false, 'Target container is not a DOM element.')
              : void 0;
            // TODO: pass ReactDOM portal implementation as third argument
            return createPortal$1(children, container, null, key);
          }

          var ReactDOM = {
            createPortal: createPortal,

            findDOMNode: function(componentOrElement) {
              {
                var owner = ReactCurrentOwner.current;
                if (owner !== null && owner.stateNode !== null) {
                  var warnedAboutRefsInRender =
                    owner.stateNode._warnedAboutRefsInRender;
                  !warnedAboutRefsInRender
                    ? warningWithoutStack$1(
                        false,
                        '%s is accessing findDOMNode inside its render(). ' +
                          'render() should be a pure function of props and state. It should ' +
                          'never access something that requires stale data from the previous ' +
                          'render, such as refs. Move this logic to componentDidMount and ' +
                          'componentDidUpdate instead.',
                        getComponentName(owner.type) || 'A component'
                      )
                    : void 0;
                  owner.stateNode._warnedAboutRefsInRender = true;
                }
              }
              if (componentOrElement == null) {
                return null;
              }
              if (componentOrElement.nodeType === ELEMENT_NODE) {
                return componentOrElement;
              }

              return findHostInstance(componentOrElement);
            },
            hydrate: function(element, container, callback) {
              // TODO: throw or warn if we couldn't hydrate?
              return legacyRenderSubtreeIntoContainer(
                null,
                element,
                container,
                true,
                callback
              );
            },
            render: function(element, container, callback) {
              return legacyRenderSubtreeIntoContainer(
                null,
                element,
                container,
                false,
                callback
              );
            },
            unstable_renderSubtreeIntoContainer: function(
              parentComponent,
              element,
              containerNode,
              callback
            ) {
              !(parentComponent != null && has(parentComponent))
                ? invariant(
                    false,
                    'parentComponent must be a valid React Component'
                  )
                : void 0;
              return legacyRenderSubtreeIntoContainer(
                parentComponent,
                element,
                containerNode,
                false,
                callback
              );
            },
            unmountComponentAtNode: function(container) {
              !isValidContainer(container)
                ? invariant(
                    false,
                    'unmountComponentAtNode(...): Target container is not a DOM element.'
                  )
                : void 0;

              if (container._reactRootContainer) {
                {
                  var rootEl = getReactRootElementInContainer(container);
                  var renderedByDifferentReact =
                    rootEl && !getInstanceFromNode$1(rootEl);
                  !!renderedByDifferentReact
                    ? warningWithoutStack$1(
                        false,
                        "unmountComponentAtNode(): The node you're attempting to unmount " +
                          'was rendered by another copy of React.'
                      )
                    : void 0;
                }

                // Unmount should not be batched.
                unbatchedUpdates(function() {
                  legacyRenderSubtreeIntoContainer(
                    null,
                    null,
                    container,
                    false,
                    function() {
                      container._reactRootContainer = null;
                    }
                  );
                });
                // If you call unmountComponentAtNode twice in quick succession, you'll
                // get `true` twice. That's probably fine?
                return true;
              } else {
                {
                  var _rootEl = getReactRootElementInContainer(container);
                  var hasNonRootReactChild = !!(
                    _rootEl && getInstanceFromNode$1(_rootEl)
                  );

                  // Check if the container itself is a React root node.
                  var isContainerReactRoot =
                    container.nodeType === ELEMENT_NODE &&
                    isValidContainer(container.parentNode) &&
                    !!container.parentNode._reactRootContainer;

                  !!hasNonRootReactChild
                    ? warningWithoutStack$1(
                        false,
                        "unmountComponentAtNode(): The node you're attempting to unmount " +
                          'was rendered by React and is not a top-level container. %s',
                        isContainerReactRoot
                          ? 'You may have accidentally passed in a React root node instead ' +
                            'of its container.'
                          : 'Instead, have the parent component update its state and ' +
                            'rerender in order to remove this component.'
                      )
                    : void 0;
                }

                return false;
              }
            },

            // Temporary alias since we already shipped React 16 RC with it.
            // TODO: remove in React 17.
            unstable_createPortal: function() {
              if (!didWarnAboutUnstableCreatePortal) {
                didWarnAboutUnstableCreatePortal = true;
                lowPriorityWarning$1(
                  false,
                  'The ReactDOM.unstable_createPortal() alias has been deprecated, ' +
                    'and will be removed in React 17+. Update your code to use ' +
                    'ReactDOM.createPortal() instead. It has the exact same API, ' +
                    'but without the "unstable_" prefix.'
                );
              }
              return createPortal.apply(undefined, arguments);
            },

            unstable_batchedUpdates: batchedUpdates$1,

            unstable_interactiveUpdates: interactiveUpdates$1,

            flushSync: flushSync,

            unstable_flushControlled: flushControlled,

            __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
              // Keep in sync with ReactDOMUnstableNativeDependencies.js
              // and ReactTestUtils.js. This is an array for better minification.
              Events: [
                getInstanceFromNode$1,
                getNodeFromInstance$1,
                getFiberCurrentPropsFromNode$1,
                injection.injectEventPluginsByName,
                eventNameDispatchConfigs,
                accumulateTwoPhaseDispatches,
                accumulateDirectDispatches,
                enqueueStateRestore,
                restoreStateIfNeeded,
                dispatchEvent,
                runEventsInBatch
              ]
            }
          };

          ReactDOM.unstable_createRoot = function createRoot(
            container,
            options
          ) {
            !isValidContainer(container)
              ? invariant(
                  false,
                  'unstable_createRoot(...): Target container is not a DOM element.'
                )
              : void 0;
            var hydrate = options != null && options.hydrate === true;
            return new ReactRoot(container, true, hydrate);
          };

          var foundDevTools = injectIntoDevTools({
            findFiberByHostInstance: getClosestInstanceFromNode,
            bundleType: 1,
            version: ReactVersion,
            rendererPackageName: 'react-dom'
          });

          {
            if (!foundDevTools && canUseDOM && window.top === window.self) {
              // If we're in Chrome or Firefox, provide a download link if not installed.
              if (
                (navigator.userAgent.indexOf('Chrome') > -1 &&
                  navigator.userAgent.indexOf('Edge') === -1) ||
                navigator.userAgent.indexOf('Firefox') > -1
              ) {
                var protocol = window.location.protocol;
                // Don't warn in exotic cases like chrome-extension://.
                if (/^(https?|file):$/.test(protocol)) {
                  console.info(
                    '%cDownload the React DevTools ' +
                      'for a better development experience: ' +
                      'https://fb.me/react-devtools' +
                      (protocol === 'file:'
                        ? '\nYou might need to use a local HTTP server (instead of file://): ' +
                          'https://fb.me/react-devtools-faq'
                        : ''),
                    'font-weight:bold'
                  );
                }
              }
            }
          }

          var ReactDOM$2 = Object.freeze({
            default: ReactDOM
          });

          var ReactDOM$3 = (ReactDOM$2 && ReactDOM) || ReactDOM$2;

          // TODO: decide on the top-level export form.
          // This is hacky but makes it work with both Rollup and Jest.
          var reactDom = ReactDOM$3.default || ReactDOM$3;

          module.exports = reactDom;
        })();
      }

      /***/
    },
    /* 340 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      if (undefined === 'production') {
        module.exports = __webpack_require__(341);
      } else {
        module.exports = __webpack_require__(342);
      }

      /***/
    },
    /* 341 */
    /***/ function(module, exports) {
      /** @license React v16.5.2
       * schedule-tracing.production.min.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      'use strict';
      Object.defineProperty(exports, '__esModule', { value: !0 });
      var b = 0;
      exports.__interactionsRef = null;
      exports.__subscriberRef = null;
      exports.unstable_clear = function(a) {
        return a();
      };
      exports.unstable_getCurrent = function() {
        return null;
      };
      exports.unstable_getThreadID = function() {
        return ++b;
      };
      exports.unstable_trace = function(a, d, c) {
        return c();
      };
      exports.unstable_wrap = function(a) {
        return a;
      };
      exports.unstable_subscribe = function() {};
      exports.unstable_unsubscribe = function() {};

      /***/
    },
    /* 342 */
    /***/ function(module, exports, __webpack_require__) {
      /** @license React v16.5.2
       * schedule-tracing.development.js
       *
       * Copyright (c) Facebook, Inc. and its affiliates.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      'use strict';

      if (undefined !== 'production') {
        (function() {
          'use strict';

          Object.defineProperty(exports, '__esModule', { value: true });

          // Exports ReactDOM.createRoot

          // Experimental error-boundary API that can recover from errors within a single
          // render phase

          // Suspense

          // Helps identify side effects in begin-phase lifecycle hooks and setState reducers:

          // In some cases, StrictMode should also double-render lifecycles.
          // This can be confusing for tests though,
          // And it can be bad for performance in production.
          // This feature flag can be used to control the behavior:

          // To preserve the "Pause on caught exceptions" behavior of the debugger, we
          // replay the begin phase of a failed component inside invokeGuardedCallback.

          // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:

          // Warn about legacy context API

          // Gather advanced timing metrics for Profiler subtrees.

          // Trace which interactions trigger each commit.
          var enableSchedulerTracing = true;

          // Only used in www builds.

          // Only used in www builds.

          // React Fire: prevent the value and checked attributes from syncing
          // with their related DOM properties

          var DEFAULT_THREAD_ID = 0;

          // Counters used to generate unique IDs.
          var interactionIDCounter = 0;
          var threadIDCounter = 0;

          // Set of currently traced interactions.
          // Interactions "stack"–
          // Meaning that newly traced interactions are appended to the previously active set.
          // When an interaction goes out of scope, the previous set (if any) is restored.
          exports.__interactionsRef = null;

          // Listener(s) to notify when interactions begin and end.
          exports.__subscriberRef = null;

          if (enableSchedulerTracing) {
            exports.__interactionsRef = {
              current: new Set()
            };
            exports.__subscriberRef = {
              current: null
            };
          }

          function unstable_clear(callback) {
            if (!enableSchedulerTracing) {
              return callback();
            }

            var prevInteractions = exports.__interactionsRef.current;
            exports.__interactionsRef.current = new Set();

            try {
              return callback();
            } finally {
              exports.__interactionsRef.current = prevInteractions;
            }
          }

          function unstable_getCurrent() {
            if (!enableSchedulerTracing) {
              return null;
            } else {
              return exports.__interactionsRef.current;
            }
          }

          function unstable_getThreadID() {
            return ++threadIDCounter;
          }

          function unstable_trace(name, timestamp, callback) {
            var threadID =
              arguments.length > 3 && arguments[3] !== undefined
                ? arguments[3]
                : DEFAULT_THREAD_ID;

            if (!enableSchedulerTracing) {
              return callback();
            }

            var interaction = {
              __count: 1,
              id: interactionIDCounter++,
              name: name,
              timestamp: timestamp
            };

            var prevInteractions = exports.__interactionsRef.current;

            // Traced interactions should stack/accumulate.
            // To do that, clone the current interactions.
            // The previous set will be restored upon completion.
            var interactions = new Set(prevInteractions);
            interactions.add(interaction);
            exports.__interactionsRef.current = interactions;

            var subscriber = exports.__subscriberRef.current;
            var returnValue = void 0;

            try {
              if (subscriber !== null) {
                subscriber.onInteractionTraced(interaction);
              }
            } finally {
              try {
                if (subscriber !== null) {
                  subscriber.onWorkStarted(interactions, threadID);
                }
              } finally {
                try {
                  returnValue = callback();
                } finally {
                  exports.__interactionsRef.current = prevInteractions;

                  try {
                    if (subscriber !== null) {
                      subscriber.onWorkStopped(interactions, threadID);
                    }
                  } finally {
                    interaction.__count--;

                    // If no async work was scheduled for this interaction,
                    // Notify subscribers that it's completed.
                    if (subscriber !== null && interaction.__count === 0) {
                      subscriber.onInteractionScheduledWorkCompleted(
                        interaction
                      );
                    }
                  }
                }
              }
            }

            return returnValue;
          }

          function unstable_wrap(callback) {
            var threadID =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : DEFAULT_THREAD_ID;

            if (!enableSchedulerTracing) {
              return callback;
            }

            var wrappedInteractions = exports.__interactionsRef.current;

            var subscriber = exports.__subscriberRef.current;
            if (subscriber !== null) {
              subscriber.onWorkScheduled(wrappedInteractions, threadID);
            }

            // Update the pending async work count for the current interactions.
            // Update after calling subscribers in case of error.
            wrappedInteractions.forEach(function(interaction) {
              interaction.__count++;
            });

            var hasRun = false;

            function wrapped() {
              var prevInteractions = exports.__interactionsRef.current;
              exports.__interactionsRef.current = wrappedInteractions;

              subscriber = exports.__subscriberRef.current;

              try {
                var returnValue = void 0;

                try {
                  if (subscriber !== null) {
                    subscriber.onWorkStarted(wrappedInteractions, threadID);
                  }
                } finally {
                  try {
                    returnValue = callback.apply(undefined, arguments);
                  } finally {
                    exports.__interactionsRef.current = prevInteractions;

                    if (subscriber !== null) {
                      subscriber.onWorkStopped(wrappedInteractions, threadID);
                    }
                  }
                }

                return returnValue;
              } finally {
                if (!hasRun) {
                  // We only expect a wrapped function to be executed once,
                  // But in the event that it's executed more than once–
                  // Only decrement the outstanding interaction counts once.
                  hasRun = true;

                  // Update pending async counts for all wrapped interactions.
                  // If this was the last scheduled async work for any of them,
                  // Mark them as completed.
                  wrappedInteractions.forEach(function(interaction) {
                    interaction.__count--;

                    if (subscriber !== null && interaction.__count === 0) {
                      subscriber.onInteractionScheduledWorkCompleted(
                        interaction
                      );
                    }
                  });
                }
              }
            }

            wrapped.cancel = function cancel() {
              subscriber = exports.__subscriberRef.current;

              try {
                if (subscriber !== null) {
                  subscriber.onWorkCanceled(wrappedInteractions, threadID);
                }
              } finally {
                // Update pending async counts for all wrapped interactions.
                // If this was the last scheduled async work for any of them,
                // Mark them as completed.
                wrappedInteractions.forEach(function(interaction) {
                  interaction.__count--;

                  if (subscriber && interaction.__count === 0) {
                    subscriber.onInteractionScheduledWorkCompleted(interaction);
                  }
                });
              }
            };

            return wrapped;
          }

          var subscribers = null;
          if (enableSchedulerTracing) {
            subscribers = new Set();
          }

          function unstable_subscribe(subscriber) {
            if (enableSchedulerTracing) {
              subscribers.add(subscriber);

              if (subscribers.size === 1) {
                exports.__subscriberRef.current = {
                  onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,
                  onInteractionTraced: onInteractionTraced,
                  onWorkCanceled: onWorkCanceled,
                  onWorkScheduled: onWorkScheduled,
                  onWorkStarted: onWorkStarted,
                  onWorkStopped: onWorkStopped
                };
              }
            }
          }

          function unstable_unsubscribe(subscriber) {
            if (enableSchedulerTracing) {
              subscribers.delete(subscriber);

              if (subscribers.size === 0) {
                exports.__subscriberRef.current = null;
              }
            }
          }

          function onInteractionTraced(interaction) {
            var didCatchError = false;
            var caughtError = null;

            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onInteractionTraced(interaction);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });

            if (didCatchError) {
              throw caughtError;
            }
          }

          function onInteractionScheduledWorkCompleted(interaction) {
            var didCatchError = false;
            var caughtError = null;

            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onInteractionScheduledWorkCompleted(interaction);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });

            if (didCatchError) {
              throw caughtError;
            }
          }

          function onWorkScheduled(interactions, threadID) {
            var didCatchError = false;
            var caughtError = null;

            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onWorkScheduled(interactions, threadID);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });

            if (didCatchError) {
              throw caughtError;
            }
          }

          function onWorkStarted(interactions, threadID) {
            var didCatchError = false;
            var caughtError = null;

            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onWorkStarted(interactions, threadID);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });

            if (didCatchError) {
              throw caughtError;
            }
          }

          function onWorkStopped(interactions, threadID) {
            var didCatchError = false;
            var caughtError = null;

            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onWorkStopped(interactions, threadID);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });

            if (didCatchError) {
              throw caughtError;
            }
          }

          function onWorkCanceled(interactions, threadID) {
            var didCatchError = false;
            var caughtError = null;

            subscribers.forEach(function(subscriber) {
              try {
                subscriber.onWorkCanceled(interactions, threadID);
              } catch (error) {
                if (!didCatchError) {
                  didCatchError = true;
                  caughtError = error;
                }
              }
            });

            if (didCatchError) {
              throw caughtError;
            }
          }

          exports.unstable_clear = unstable_clear;
          exports.unstable_getCurrent = unstable_getCurrent;
          exports.unstable_getThreadID = unstable_getThreadID;
          exports.unstable_trace = unstable_trace;
          exports.unstable_wrap = unstable_wrap;
          exports.unstable_subscribe = unstable_subscribe;
          exports.unstable_unsubscribe = unstable_unsubscribe;
        })();
      }

      /***/
    },
    /* 343 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _example_components = __webpack_require__(344);

      var _example_components2 = _interopRequireDefault(_example_components);

      var _hero_example = __webpack_require__(803);

      var _hero_example2 = _interopRequireDefault(_hero_example);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Root = (function(_React$Component) {
        _inherits(Root, _React$Component);

        function Root() {
          _classCallCheck(this, Root);

          return _possibleConstructorReturn(
            this,
            _React$Component.apply(this, arguments)
          );
        }

        Root.prototype.componentDidMount = function componentDidMount() {
          window.scrollTo(0, 0);
        };

        Root.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(
              'div',
              { className: 'hero' },
              _react2.default.createElement(
                'div',
                { className: 'hero__content' },
                _react2.default.createElement(
                  'h1',
                  { className: 'hero__title' },
                  'ReactJS Datepicker'
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'hero__crafted-by' },
                  _react2.default.createElement(
                    'a',
                    {
                      href: 'https://hackerone.com',
                      className: 'hero__crafted-by-link'
                    },
                    'Crafted by ',
                    _react2.default.createElement('img', {
                      src: 'images/logo.png',
                      className: 'hero__image',
                      alt: 'HackerOne',
                      title: 'HackerOne'
                    })
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'hero__example' },
                  _react2.default.createElement(_hero_example2.default, null)
                )
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'wrapper' },
              _react2.default.createElement('h1', null, 'ReactJS Datepicker'),
              _react2.default.createElement(
                'p',
                { className: 'badges' },
                _react2.default.createElement(
                  'a',
                  { href: 'https://npmjs.org/package/react-datepicker' },
                  _react2.default.createElement('img', {
                    src: 'https://badge.fury.io/js/react-datepicker.svg',
                    className: 'badge'
                  })
                ),
                _react2.default.createElement(
                  'a',
                  { href: 'https://travis-ci.org/Hacker0x01/react-datepicker' },
                  _react2.default.createElement('img', {
                    src:
                      'https://travis-ci.org/Hacker0x01/react-datepicker.svg?branch=master',
                    className: 'badge'
                  })
                ),
                _react2.default.createElement(
                  'a',
                  { href: 'https://david-dm.org/Hacker0x01/react-datepicker' },
                  _react2.default.createElement('img', {
                    src: 'https://david-dm.org/Hacker0x01/react-datepicker.svg',
                    className: 'badge'
                  })
                ),
                _react2.default.createElement(
                  'a',
                  {
                    href:
                      'https://npmjs.org/package/react-datepicker' +
                      '?__hstc=72727564.ca821b01b5b29b1831f0936a681f0483.1428679773810.1435582678273.1438354735499.5' +
                      '&__hssc=72727564.1.1438354735499' +
                      '&__hsfp=2497064007'
                  },
                  _react2.default.createElement('img', {
                    src: 'https://img.shields.io/npm/dm/react-datepicker.svg',
                    className: 'badge'
                  })
                )
              ),
              _react2.default.createElement(
                'p',
                null,
                'A simple and reusable datepicker component for React.'
              ),
              _react2.default.createElement('h2', null, 'Installation'),
              _react2.default.createElement(
                'p',
                null,
                'The package can be installed via NPM:'
              ),
              _react2.default.createElement(
                'p',
                null,
                _react2.default.createElement(
                  'code',
                  null,
                  'npm install react-datepicker --save'
                )
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'wrapper' },
              _react2.default.createElement(_example_components2.default, null)
            ),
            _react2.default.createElement(
              'a',
              { href: 'https://github.com/Hacker0x01/react-datepicker/' },
              _react2.default.createElement('img', {
                className: 'github-ribbon',
                src: 'images/ribbon.png',
                alt: 'Fork me on GitHub'
              })
            )
          );
        };

        return Root;
      })(_react2.default.Component);

      exports.default = Root;

      /***/
    },
    /* 344 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _highlight = __webpack_require__(345);

      var _highlight2 = _interopRequireDefault(_highlight);

      var _default = __webpack_require__(532);

      var _default2 = _interopRequireDefault(_default);

      var _code_example_component = __webpack_require__(730);

      var _code_example_component2 = _interopRequireDefault(
        _code_example_component
      );

      var _custom_date_format = __webpack_require__(731);

      var _custom_date_format2 = _interopRequireDefault(_custom_date_format);

      var _custom_class_name = __webpack_require__(732);

      var _custom_class_name2 = _interopRequireDefault(_custom_class_name);

      var _custom_calendar_class_name = __webpack_require__(733);

      var _custom_calendar_class_name2 = _interopRequireDefault(
        _custom_calendar_class_name
      );

      var _custom_day_class_names = __webpack_require__(734);

      var _custom_day_class_names2 = _interopRequireDefault(
        _custom_day_class_names
      );

      var _placeholder_text = __webpack_require__(735);

      var _placeholder_text2 = _interopRequireDefault(_placeholder_text);

      var _specific_date_range = __webpack_require__(736);

      var _specific_date_range2 = _interopRequireDefault(_specific_date_range);

      var _locale = __webpack_require__(737);

      var _locale2 = _interopRequireDefault(_locale);

      var _exclude_dates = __webpack_require__(740);

      var _exclude_dates2 = _interopRequireDefault(_exclude_dates);

      var _highlight_dates = __webpack_require__(741);

      var _highlight_dates2 = _interopRequireDefault(_highlight_dates);

      var _highlight_dates_with_ranges = __webpack_require__(742);

      var _highlight_dates_with_ranges2 = _interopRequireDefault(
        _highlight_dates_with_ranges
      );

      var _include_dates = __webpack_require__(743);

      var _include_dates2 = _interopRequireDefault(_include_dates);

      var _filter_dates = __webpack_require__(744);

      var _filter_dates2 = _interopRequireDefault(_filter_dates);

      var _disabled = __webpack_require__(745);

      var _disabled2 = _interopRequireDefault(_disabled);

      var _disabled_keyboard_navigation = __webpack_require__(746);

      var _disabled_keyboard_navigation2 = _interopRequireDefault(
        _disabled_keyboard_navigation
      );

      var _clear_input = __webpack_require__(747);

      var _clear_input2 = _interopRequireDefault(_clear_input);

      var _on_blur_callbacks = __webpack_require__(748);

      var _on_blur_callbacks2 = _interopRequireDefault(_on_blur_callbacks);

      var _configurePopper = __webpack_require__(749);

      var _configurePopper2 = _interopRequireDefault(_configurePopper);

      var _date_range = __webpack_require__(750);

      var _date_range2 = _interopRequireDefault(_date_range);

      var _date_range_with_show_disabled_navigation = __webpack_require__(751);

      var _date_range_with_show_disabled_navigation2 = _interopRequireDefault(
        _date_range_with_show_disabled_navigation
      );

      var _tab_index = __webpack_require__(752);

      var _tab_index2 = _interopRequireDefault(_tab_index);

      var _year_dropdown = __webpack_require__(753);

      var _year_dropdown2 = _interopRequireDefault(_year_dropdown);

      var _month_dropdown = __webpack_require__(754);

      var _month_dropdown2 = _interopRequireDefault(_month_dropdown);

      var _month_year_dropdown = __webpack_require__(755);

      var _month_year_dropdown2 = _interopRequireDefault(_month_year_dropdown);

      var _month_dropdown_short = __webpack_require__(756);

      var _month_dropdown_short2 = _interopRequireDefault(
        _month_dropdown_short
      );

      var _year_select_dropdown = __webpack_require__(757);

      var _year_select_dropdown2 = _interopRequireDefault(
        _year_select_dropdown
      );

      var _today = __webpack_require__(758);

      var _today2 = _interopRequireDefault(_today);

      var _inline = __webpack_require__(759);

      var _inline2 = _interopRequireDefault(_inline);

      var _open_to_date = __webpack_require__(760);

      var _open_to_date2 = _interopRequireDefault(_open_to_date);

      var _fixed_calendar = __webpack_require__(761);

      var _fixed_calendar2 = _interopRequireDefault(_fixed_calendar);

      var _week_numbers = __webpack_require__(762);

      var _week_numbers2 = _interopRequireDefault(_week_numbers);

      var _custom_input = __webpack_require__(763);

      var _custom_input2 = _interopRequireDefault(_custom_input);

      var _multi_month = __webpack_require__(764);

      var _multi_month2 = _interopRequireDefault(_multi_month);

      var _multi_month_drp = __webpack_require__(765);

      var _multi_month_drp2 = _interopRequireDefault(_multi_month_drp);

      var _multi_month_inline = __webpack_require__(766);

      var _multi_month_inline2 = _interopRequireDefault(_multi_month_inline);

      var _children = __webpack_require__(767);

      var _children2 = _interopRequireDefault(_children);

      var _calendar_container = __webpack_require__(768);

      var _calendar_container2 = _interopRequireDefault(_calendar_container);

      var _portal = __webpack_require__(769);

      var _portal2 = _interopRequireDefault(_portal);

      var _inline_portal = __webpack_require__(770);

      var _inline_portal2 = _interopRequireDefault(_inline_portal);

      var _raw_change = __webpack_require__(771);

      var _raw_change2 = _interopRequireDefault(_raw_change);

      var _read_only = __webpack_require__(772);

      var _read_only2 = _interopRequireDefault(_read_only);

      var _show_time = __webpack_require__(773);

      var _show_time2 = _interopRequireDefault(_show_time);

      var _show_time_only = __webpack_require__(774);

      var _show_time_only2 = _interopRequireDefault(_show_time_only);

      var _exclude_times = __webpack_require__(775);

      var _exclude_times2 = _interopRequireDefault(_exclude_times);

      var _exclude_time_period = __webpack_require__(776);

      var _exclude_time_period2 = _interopRequireDefault(_exclude_time_period);

      var _include_times = __webpack_require__(777);

      var _include_times2 = _interopRequireDefault(_include_times);

      var _inject_times = __webpack_require__(778);

      var _inject_times2 = _interopRequireDefault(_inject_times);

      var _dont_close_onSelect = __webpack_require__(779);

      var _dont_close_onSelect2 = _interopRequireDefault(_dont_close_onSelect);

      var _render_custom_header = __webpack_require__(780);

      var _render_custom_header2 = _interopRequireDefault(
        _render_custom_header
      );

      __webpack_require__(801);

      __webpack_require__(802);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var exampleComponents = (function(_React$Component) {
        _inherits(exampleComponents, _React$Component);

        function exampleComponents() {
          var _temp, _this, _ret;

          _classCallCheck(this, exampleComponents);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.examples = [
              {
                title: 'Default',
                component: _react2.default.createElement(
                  _default2.default,
                  null
                )
              },
              {
                title: 'Select Time',
                component: _react2.default.createElement(
                  _show_time2.default,
                  null
                )
              },
              {
                title: 'Select Time Only',
                component: _react2.default.createElement(
                  _show_time_only2.default,
                  null
                )
              },
              {
                title: 'Exclude Times',
                component: _react2.default.createElement(
                  _exclude_times2.default,
                  null
                )
              },
              {
                title: 'Include Times',
                component: _react2.default.createElement(
                  _include_times2.default,
                  null
                )
              },
              {
                title: 'Inject Specific Times',
                component: _react2.default.createElement(
                  _inject_times2.default,
                  null
                )
              },
              {
                title: 'Specific Time Range',
                component: _react2.default.createElement(
                  _exclude_time_period2.default,
                  null
                )
              },
              {
                title: 'Custom date format',
                component: _react2.default.createElement(
                  _custom_date_format2.default,
                  null
                )
              },
              {
                title: 'Custom class name',
                component: _react2.default.createElement(
                  _custom_class_name2.default,
                  null
                )
              },
              {
                title: 'Custom calendar class name',
                component: _react2.default.createElement(
                  _custom_calendar_class_name2.default,
                  null
                )
              },
              {
                title: 'Custom day class names',
                component: _react2.default.createElement(
                  _custom_day_class_names2.default,
                  null
                )
              },
              {
                title: 'Today button',
                component: _react2.default.createElement(_today2.default, null)
              },
              {
                title: 'Placeholder text',
                component: _react2.default.createElement(
                  _placeholder_text2.default,
                  null
                )
              },
              {
                title: 'Specific date range',
                component: _react2.default.createElement(
                  _specific_date_range2.default,
                  null
                )
              },
              {
                title: 'Date Range with disabled navigation shown',
                component: _react2.default.createElement(
                  _date_range_with_show_disabled_navigation2.default,
                  null
                )
              },
              {
                title: 'Locale',
                component: _react2.default.createElement(_locale2.default, null)
              },
              {
                title: 'Exclude dates',
                component: _react2.default.createElement(
                  _exclude_dates2.default,
                  null
                )
              },
              {
                title: 'Highlight dates',
                component: _react2.default.createElement(
                  _highlight_dates2.default,
                  null
                )
              },
              {
                title: 'Highlight dates with custom class names and ranges',
                component: _react2.default.createElement(
                  _highlight_dates_with_ranges2.default,
                  null
                )
              },
              {
                title: 'Include dates',
                component: _react2.default.createElement(
                  _include_dates2.default,
                  null
                )
              },
              {
                title: 'Filter dates',
                component: _react2.default.createElement(
                  _filter_dates2.default,
                  null
                )
              },
              {
                title: 'Date Range',
                component: _react2.default.createElement(
                  _date_range2.default,
                  null
                )
              },
              {
                title: 'Disable datepicker',
                component: _react2.default.createElement(
                  _disabled2.default,
                  null
                )
              },
              {
                title: 'Disable keyboard navigation',
                component: _react2.default.createElement(
                  _disabled_keyboard_navigation2.default,
                  null
                )
              },
              {
                title: 'Read only datepicker',
                component: _react2.default.createElement(
                  _read_only2.default,
                  null
                )
              },
              {
                title: 'Clear datepicker input',
                component: _react2.default.createElement(
                  _clear_input2.default,
                  null
                )
              },
              {
                title: 'onBlur callbacks in console',
                component: _react2.default.createElement(
                  _on_blur_callbacks2.default,
                  null
                )
              },
              {
                title: 'Configure Popper Properties',
                component: _react2.default.createElement(
                  _configurePopper2.default,
                  null
                )
              },
              {
                title: 'Portal version',
                component: _react2.default.createElement(_portal2.default, null)
              },
              {
                title: 'Inline portal version',
                component: _react2.default.createElement(
                  _inline_portal2.default,
                  null
                )
              },
              {
                title: 'TabIndex',
                component: _react2.default.createElement(
                  _tab_index2.default,
                  null
                )
              },
              {
                title: 'Year dropdown',
                component: _react2.default.createElement(
                  _year_dropdown2.default,
                  null
                )
              },
              {
                title: 'Month dropdown',
                component: _react2.default.createElement(
                  _month_dropdown2.default,
                  null
                )
              },
              {
                title: 'Month dropdown short month',
                component: _react2.default.createElement(
                  _month_dropdown_short2.default,
                  null
                )
              },
              {
                title: 'MonthYear dropdown',
                component: _react2.default.createElement(
                  _month_year_dropdown2.default,
                  null
                )
              },
              {
                title: 'Year select dropdown',
                component: _react2.default.createElement(
                  _year_select_dropdown2.default,
                  null
                )
              },
              {
                title: 'Inline version',
                component: _react2.default.createElement(_inline2.default, null)
              },
              {
                title: 'Open to date',
                component: _react2.default.createElement(
                  _open_to_date2.default,
                  null
                )
              },
              {
                title: 'Fixed height of Calendar',
                component: _react2.default.createElement(
                  _fixed_calendar2.default,
                  null
                )
              },
              {
                title: 'Display Week Numbers',
                component: _react2.default.createElement(
                  _week_numbers2.default,
                  null
                )
              },
              {
                title: 'Custom input',
                component: _react2.default.createElement(
                  _custom_input2.default,
                  null
                )
              },
              {
                title: 'Multiple months',
                component: _react2.default.createElement(
                  _multi_month2.default,
                  null
                )
              },
              {
                title: 'Multiple months with year dropdown',
                component: _react2.default.createElement(
                  _multi_month_drp2.default,
                  null
                )
              },
              {
                title: 'Multiple months inline',
                component: _react2.default.createElement(
                  _multi_month_inline2.default,
                  null
                )
              },
              {
                title: 'Children',
                component: _react2.default.createElement(
                  _children2.default,
                  null
                )
              },
              {
                title: 'Calendar container',
                component: _react2.default.createElement(
                  _calendar_container2.default,
                  null
                )
              },
              {
                title: 'Get raw input value on change',
                component: _react2.default.createElement(
                  _raw_change2.default,
                  null
                )
              },
              {
                title: "Don't hide calendar on date selection",
                component: _react2.default.createElement(
                  _dont_close_onSelect2.default,
                  null
                )
              },
              {
                title: 'Custom header',
                component: _react2.default.createElement(
                  _render_custom_header2.default,
                  null
                )
              }
            ]),
            (_this.renderExamples = function() {
              return _this.examples.map(function(example, index) {
                return _react2.default.createElement(
                  _code_example_component2.default,
                  {
                    key: 'example-' + index,
                    id: index,
                    title: example.title
                  },
                  example.component
                );
              });
            }),
            (_this.renderLeftColumn = function() {
              return _this.examples.map(function(example, index) {
                return _react2.default.createElement(
                  'li',
                  {
                    className: 'examples__navigation-item',
                    key: 'link-' + index
                  },
                  _react2.default.createElement(
                    'a',
                    { href: '#example-' + index },
                    example.title
                  )
                );
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        exampleComponents.prototype.componentDidMount = function componentDidMount() {
          _highlight2.default.initHighlightingOnLoad();
        };

        exampleComponents.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement('h1', null, 'Examples'),
            _react2.default.createElement(
              'ul',
              { className: 'examples__navigation' },
              this.renderLeftColumn()
            ),
            _react2.default.createElement(
              'div',
              { className: 'examples' },
              this.renderExamples()
            )
          );
        };

        return exampleComponents;
      })(_react2.default.Component);

      exports.default = exampleComponents;

      /***/
    },
    /* 345 */
    /***/ function(module, exports, __webpack_require__) {
      var hljs = __webpack_require__(346);

      hljs.registerLanguage('1c', __webpack_require__(347));
      hljs.registerLanguage('abnf', __webpack_require__(348));
      hljs.registerLanguage('accesslog', __webpack_require__(349));
      hljs.registerLanguage('actionscript', __webpack_require__(350));
      hljs.registerLanguage('ada', __webpack_require__(351));
      hljs.registerLanguage('angelscript', __webpack_require__(352));
      hljs.registerLanguage('apache', __webpack_require__(353));
      hljs.registerLanguage('applescript', __webpack_require__(354));
      hljs.registerLanguage('arcade', __webpack_require__(355));
      hljs.registerLanguage('cpp', __webpack_require__(356));
      hljs.registerLanguage('arduino', __webpack_require__(357));
      hljs.registerLanguage('armasm', __webpack_require__(358));
      hljs.registerLanguage('xml', __webpack_require__(359));
      hljs.registerLanguage('asciidoc', __webpack_require__(360));
      hljs.registerLanguage('aspectj', __webpack_require__(361));
      hljs.registerLanguage('autohotkey', __webpack_require__(362));
      hljs.registerLanguage('autoit', __webpack_require__(363));
      hljs.registerLanguage('avrasm', __webpack_require__(364));
      hljs.registerLanguage('awk', __webpack_require__(365));
      hljs.registerLanguage('axapta', __webpack_require__(366));
      hljs.registerLanguage('bash', __webpack_require__(367));
      hljs.registerLanguage('basic', __webpack_require__(368));
      hljs.registerLanguage('bnf', __webpack_require__(369));
      hljs.registerLanguage('brainfuck', __webpack_require__(370));
      hljs.registerLanguage('cal', __webpack_require__(371));
      hljs.registerLanguage('capnproto', __webpack_require__(372));
      hljs.registerLanguage('ceylon', __webpack_require__(373));
      hljs.registerLanguage('clean', __webpack_require__(374));
      hljs.registerLanguage('clojure', __webpack_require__(375));
      hljs.registerLanguage('clojure-repl', __webpack_require__(376));
      hljs.registerLanguage('cmake', __webpack_require__(377));
      hljs.registerLanguage('coffeescript', __webpack_require__(378));
      hljs.registerLanguage('coq', __webpack_require__(379));
      hljs.registerLanguage('cos', __webpack_require__(380));
      hljs.registerLanguage('crmsh', __webpack_require__(381));
      hljs.registerLanguage('crystal', __webpack_require__(382));
      hljs.registerLanguage('cs', __webpack_require__(383));
      hljs.registerLanguage('csp', __webpack_require__(384));
      hljs.registerLanguage('css', __webpack_require__(385));
      hljs.registerLanguage('d', __webpack_require__(386));
      hljs.registerLanguage('markdown', __webpack_require__(387));
      hljs.registerLanguage('dart', __webpack_require__(388));
      hljs.registerLanguage('delphi', __webpack_require__(389));
      hljs.registerLanguage('diff', __webpack_require__(390));
      hljs.registerLanguage('django', __webpack_require__(391));
      hljs.registerLanguage('dns', __webpack_require__(392));
      hljs.registerLanguage('dockerfile', __webpack_require__(393));
      hljs.registerLanguage('dos', __webpack_require__(394));
      hljs.registerLanguage('dsconfig', __webpack_require__(395));
      hljs.registerLanguage('dts', __webpack_require__(396));
      hljs.registerLanguage('dust', __webpack_require__(397));
      hljs.registerLanguage('ebnf', __webpack_require__(398));
      hljs.registerLanguage('elixir', __webpack_require__(399));
      hljs.registerLanguage('elm', __webpack_require__(400));
      hljs.registerLanguage('ruby', __webpack_require__(401));
      hljs.registerLanguage('erb', __webpack_require__(402));
      hljs.registerLanguage('erlang-repl', __webpack_require__(403));
      hljs.registerLanguage('erlang', __webpack_require__(404));
      hljs.registerLanguage('excel', __webpack_require__(405));
      hljs.registerLanguage('fix', __webpack_require__(406));
      hljs.registerLanguage('flix', __webpack_require__(407));
      hljs.registerLanguage('fortran', __webpack_require__(408));
      hljs.registerLanguage('fsharp', __webpack_require__(409));
      hljs.registerLanguage('gams', __webpack_require__(410));
      hljs.registerLanguage('gauss', __webpack_require__(411));
      hljs.registerLanguage('gcode', __webpack_require__(412));
      hljs.registerLanguage('gherkin', __webpack_require__(413));
      hljs.registerLanguage('glsl', __webpack_require__(414));
      hljs.registerLanguage('gml', __webpack_require__(415));
      hljs.registerLanguage('go', __webpack_require__(416));
      hljs.registerLanguage('golo', __webpack_require__(417));
      hljs.registerLanguage('gradle', __webpack_require__(418));
      hljs.registerLanguage('groovy', __webpack_require__(419));
      hljs.registerLanguage('haml', __webpack_require__(420));
      hljs.registerLanguage('handlebars', __webpack_require__(421));
      hljs.registerLanguage('haskell', __webpack_require__(422));
      hljs.registerLanguage('haxe', __webpack_require__(423));
      hljs.registerLanguage('hsp', __webpack_require__(424));
      hljs.registerLanguage('htmlbars', __webpack_require__(425));
      hljs.registerLanguage('http', __webpack_require__(426));
      hljs.registerLanguage('hy', __webpack_require__(427));
      hljs.registerLanguage('inform7', __webpack_require__(428));
      hljs.registerLanguage('ini', __webpack_require__(429));
      hljs.registerLanguage('irpf90', __webpack_require__(430));
      hljs.registerLanguage('isbl', __webpack_require__(431));
      hljs.registerLanguage('java', __webpack_require__(432));
      hljs.registerLanguage('javascript', __webpack_require__(433));
      hljs.registerLanguage('jboss-cli', __webpack_require__(434));
      hljs.registerLanguage('json', __webpack_require__(435));
      hljs.registerLanguage('julia', __webpack_require__(436));
      hljs.registerLanguage('julia-repl', __webpack_require__(437));
      hljs.registerLanguage('kotlin', __webpack_require__(438));
      hljs.registerLanguage('lasso', __webpack_require__(439));
      hljs.registerLanguage('ldif', __webpack_require__(440));
      hljs.registerLanguage('leaf', __webpack_require__(441));
      hljs.registerLanguage('less', __webpack_require__(442));
      hljs.registerLanguage('lisp', __webpack_require__(443));
      hljs.registerLanguage('livecodeserver', __webpack_require__(444));
      hljs.registerLanguage('livescript', __webpack_require__(445));
      hljs.registerLanguage('llvm', __webpack_require__(446));
      hljs.registerLanguage('lsl', __webpack_require__(447));
      hljs.registerLanguage('lua', __webpack_require__(448));
      hljs.registerLanguage('makefile', __webpack_require__(449));
      hljs.registerLanguage('mathematica', __webpack_require__(450));
      hljs.registerLanguage('matlab', __webpack_require__(451));
      hljs.registerLanguage('maxima', __webpack_require__(452));
      hljs.registerLanguage('mel', __webpack_require__(453));
      hljs.registerLanguage('mercury', __webpack_require__(454));
      hljs.registerLanguage('mipsasm', __webpack_require__(455));
      hljs.registerLanguage('mizar', __webpack_require__(456));
      hljs.registerLanguage('perl', __webpack_require__(457));
      hljs.registerLanguage('mojolicious', __webpack_require__(458));
      hljs.registerLanguage('monkey', __webpack_require__(459));
      hljs.registerLanguage('moonscript', __webpack_require__(460));
      hljs.registerLanguage('n1ql', __webpack_require__(461));
      hljs.registerLanguage('nginx', __webpack_require__(462));
      hljs.registerLanguage('nimrod', __webpack_require__(463));
      hljs.registerLanguage('nix', __webpack_require__(464));
      hljs.registerLanguage('nsis', __webpack_require__(465));
      hljs.registerLanguage('objectivec', __webpack_require__(466));
      hljs.registerLanguage('ocaml', __webpack_require__(467));
      hljs.registerLanguage('openscad', __webpack_require__(468));
      hljs.registerLanguage('oxygene', __webpack_require__(469));
      hljs.registerLanguage('parser3', __webpack_require__(470));
      hljs.registerLanguage('pf', __webpack_require__(471));
      hljs.registerLanguage('pgsql', __webpack_require__(472));
      hljs.registerLanguage('php', __webpack_require__(473));
      hljs.registerLanguage('plaintext', __webpack_require__(474));
      hljs.registerLanguage('pony', __webpack_require__(475));
      hljs.registerLanguage('powershell', __webpack_require__(476));
      hljs.registerLanguage('processing', __webpack_require__(477));
      hljs.registerLanguage('profile', __webpack_require__(478));
      hljs.registerLanguage('prolog', __webpack_require__(479));
      hljs.registerLanguage('properties', __webpack_require__(480));
      hljs.registerLanguage('protobuf', __webpack_require__(481));
      hljs.registerLanguage('puppet', __webpack_require__(482));
      hljs.registerLanguage('purebasic', __webpack_require__(483));
      hljs.registerLanguage('python', __webpack_require__(484));
      hljs.registerLanguage('q', __webpack_require__(485));
      hljs.registerLanguage('qml', __webpack_require__(486));
      hljs.registerLanguage('r', __webpack_require__(487));
      hljs.registerLanguage('reasonml', __webpack_require__(488));
      hljs.registerLanguage('rib', __webpack_require__(489));
      hljs.registerLanguage('roboconf', __webpack_require__(490));
      hljs.registerLanguage('routeros', __webpack_require__(491));
      hljs.registerLanguage('rsl', __webpack_require__(492));
      hljs.registerLanguage('ruleslanguage', __webpack_require__(493));
      hljs.registerLanguage('rust', __webpack_require__(494));
      hljs.registerLanguage('sas', __webpack_require__(495));
      hljs.registerLanguage('scala', __webpack_require__(496));
      hljs.registerLanguage('scheme', __webpack_require__(497));
      hljs.registerLanguage('scilab', __webpack_require__(498));
      hljs.registerLanguage('scss', __webpack_require__(499));
      hljs.registerLanguage('shell', __webpack_require__(500));
      hljs.registerLanguage('smali', __webpack_require__(501));
      hljs.registerLanguage('smalltalk', __webpack_require__(502));
      hljs.registerLanguage('sml', __webpack_require__(503));
      hljs.registerLanguage('sqf', __webpack_require__(504));
      hljs.registerLanguage('sql', __webpack_require__(505));
      hljs.registerLanguage('stan', __webpack_require__(506));
      hljs.registerLanguage('stata', __webpack_require__(507));
      hljs.registerLanguage('step21', __webpack_require__(508));
      hljs.registerLanguage('stylus', __webpack_require__(509));
      hljs.registerLanguage('subunit', __webpack_require__(510));
      hljs.registerLanguage('swift', __webpack_require__(511));
      hljs.registerLanguage('taggerscript', __webpack_require__(512));
      hljs.registerLanguage('yaml', __webpack_require__(513));
      hljs.registerLanguage('tap', __webpack_require__(514));
      hljs.registerLanguage('tcl', __webpack_require__(515));
      hljs.registerLanguage('tex', __webpack_require__(516));
      hljs.registerLanguage('thrift', __webpack_require__(517));
      hljs.registerLanguage('tp', __webpack_require__(518));
      hljs.registerLanguage('twig', __webpack_require__(519));
      hljs.registerLanguage('typescript', __webpack_require__(520));
      hljs.registerLanguage('vala', __webpack_require__(521));
      hljs.registerLanguage('vbnet', __webpack_require__(522));
      hljs.registerLanguage('vbscript', __webpack_require__(523));
      hljs.registerLanguage('vbscript-html', __webpack_require__(524));
      hljs.registerLanguage('verilog', __webpack_require__(525));
      hljs.registerLanguage('vhdl', __webpack_require__(526));
      hljs.registerLanguage('vim', __webpack_require__(527));
      hljs.registerLanguage('x86asm', __webpack_require__(528));
      hljs.registerLanguage('xl', __webpack_require__(529));
      hljs.registerLanguage('xquery', __webpack_require__(530));
      hljs.registerLanguage('zephir', __webpack_require__(531));

      module.exports = hljs;

      /***/
    },
    /* 346 */
    /***/ function(module, exports, __webpack_require__) {
      /*
	Syntax highlighting with language autodetection.
	https://highlightjs.org/
	*/

      (function(factory) {
        // Find the global object for export to both the browser and web workers.
        var globalObject =
          (typeof window === 'object' && window) ||
          (typeof self === 'object' && self);

        // Setup highlight.js for different environments. First is Node.js or
        // CommonJS.
        if (true) {
          factory(exports);
        } else if (globalObject) {
          // Export hljs globally even when using AMD for cases when this script
          // is loaded with others that may still expect a global hljs.
          globalObject.hljs = factory({});

          // Finally register the global hljs with AMD.
          if (typeof define === 'function' && define.amd) {
            define([], function() {
              return globalObject.hljs;
            });
          }
        }
      })(function(hljs) {
        // Convenience variables for build-in objects
        var ArrayProto = [],
          objectKeys = Object.keys;

        // Global internal variables used within the highlight.js library.
        var languages = {},
          aliases = {};

        // Regular expressions used throughout the highlight.js library.
        var noHighlightRe = /^(no-?highlight|plain|text)$/i,
          languagePrefixRe = /\blang(?:uage)?-([\w-]+)\b/i,
          fixMarkupRe = /((^(<[^>]+>|\t|)+|(?:\n)))/gm;

        var spanEndTag = '</span>';

        // Global options used when within external APIs. This is modified when
        // calling the `hljs.configure` function.
        var options = {
          classPrefix: 'hljs-',
          tabReplace: null,
          useBR: false,
          languages: undefined
        };

        /* Utility functions */

        function escape(value) {
          return value
            .replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;');
        }

        function tag(node) {
          return node.nodeName.toLowerCase();
        }

        function testRe(re, lexeme) {
          var match = re && re.exec(lexeme);
          return match && match.index === 0;
        }

        function isNotHighlighted(language) {
          return noHighlightRe.test(language);
        }

        function blockLanguage(block) {
          var i, match, length, _class;
          var classes = block.className + ' ';

          classes += block.parentNode ? block.parentNode.className : '';

          // language-* takes precedence over non-prefixed class names.
          match = languagePrefixRe.exec(classes);
          if (match) {
            return getLanguage(match[1]) ? match[1] : 'no-highlight';
          }

          classes = classes.split(/\s+/);

          for (i = 0, length = classes.length; i < length; i++) {
            _class = classes[i];

            if (isNotHighlighted(_class) || getLanguage(_class)) {
              return _class;
            }
          }
        }

        function inherit(parent) {
          // inherit(parent, override_obj, override_obj, ...)
          var key;
          var result = {};
          var objects = Array.prototype.slice.call(arguments, 1);

          for (key in parent) result[key] = parent[key];
          objects.forEach(function(obj) {
            for (key in obj) result[key] = obj[key];
          });
          return result;
        }

        /* Stream merging */

        function nodeStream(node) {
          var result = [];
          (function _nodeStream(node, offset) {
            for (
              var child = node.firstChild;
              child;
              child = child.nextSibling
            ) {
              if (child.nodeType === 3) offset += child.nodeValue.length;
              else if (child.nodeType === 1) {
                result.push({
                  event: 'start',
                  offset: offset,
                  node: child
                });
                offset = _nodeStream(child, offset);
                // Prevent void elements from having an end tag that would actually
                // double them in the output. There are more void elements in HTML
                // but we list only those realistically expected in code display.
                if (!tag(child).match(/br|hr|img|input/)) {
                  result.push({
                    event: 'stop',
                    offset: offset,
                    node: child
                  });
                }
              }
            }
            return offset;
          })(node, 0);
          return result;
        }

        function mergeStreams(original, highlighted, value) {
          var processed = 0;
          var result = '';
          var nodeStack = [];

          function selectStream() {
            if (!original.length || !highlighted.length) {
              return original.length ? original : highlighted;
            }
            if (original[0].offset !== highlighted[0].offset) {
              return original[0].offset < highlighted[0].offset
                ? original
                : highlighted;
            }

            /*
	      To avoid starting the stream just before it should stop the order is
	      ensured that original always starts first and closes last:

	      if (event1 == 'start' && event2 == 'start')
	        return original;
	      if (event1 == 'start' && event2 == 'stop')
	        return highlighted;
	      if (event1 == 'stop' && event2 == 'start')
	        return original;
	      if (event1 == 'stop' && event2 == 'stop')
	        return highlighted;

	      ... which is collapsed to:
	      */
            return highlighted[0].event === 'start' ? original : highlighted;
          }

          function open(node) {
            function attr_str(a) {
              return (
                ' ' +
                a.nodeName +
                '="' +
                escape(a.value).replace('"', '&quot;') +
                '"'
              );
            }
            result +=
              '<' +
              tag(node) +
              ArrayProto.map.call(node.attributes, attr_str).join('') +
              '>';
          }

          function close(node) {
            result += '</' + tag(node) + '>';
          }

          function render(event) {
            (event.event === 'start' ? open : close)(event.node);
          }

          while (original.length || highlighted.length) {
            var stream = selectStream();
            result += escape(value.substring(processed, stream[0].offset));
            processed = stream[0].offset;
            if (stream === original) {
              /*
	        On any opening or closing tag of the original markup we first close
	        the entire highlighted node stack, then render the original tag along
	        with all the following original tags at the same offset and then
	        reopen all the tags on the highlighted stack.
	        */
              nodeStack.reverse().forEach(close);
              do {
                render(stream.splice(0, 1)[0]);
                stream = selectStream();
              } while (
                stream === original &&
                stream.length &&
                stream[0].offset === processed
              );
              nodeStack.reverse().forEach(open);
            } else {
              if (stream[0].event === 'start') {
                nodeStack.push(stream[0].node);
              } else {
                nodeStack.pop();
              }
              render(stream.splice(0, 1)[0]);
            }
          }
          return result + escape(value.substr(processed));
        }

        /* Initialization */

        function expand_mode(mode) {
          if (mode.variants && !mode.cached_variants) {
            mode.cached_variants = mode.variants.map(function(variant) {
              return inherit(mode, { variants: null }, variant);
            });
          }
          return (
            mode.cached_variants ||
            (mode.endsWithParent && [inherit(mode)]) || [mode]
          );
        }

        function compileLanguage(language) {
          function reStr(re) {
            return (re && re.source) || re;
          }

          function langRe(value, global) {
            return new RegExp(
              reStr(value),
              'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')
            );
          }

          function compileMode(mode, parent) {
            if (mode.compiled) return;
            mode.compiled = true;

            mode.keywords = mode.keywords || mode.beginKeywords;
            if (mode.keywords) {
              var compiled_keywords = {};

              var flatten = function(className, str) {
                if (language.case_insensitive) {
                  str = str.toLowerCase();
                }
                str.split(' ').forEach(function(kw) {
                  var pair = kw.split('|');
                  compiled_keywords[pair[0]] = [
                    className,
                    pair[1] ? Number(pair[1]) : 1
                  ];
                });
              };

              if (typeof mode.keywords === 'string') {
                // string
                flatten('keyword', mode.keywords);
              } else {
                objectKeys(mode.keywords).forEach(function(className) {
                  flatten(className, mode.keywords[className]);
                });
              }
              mode.keywords = compiled_keywords;
            }
            mode.lexemesRe = langRe(mode.lexemes || /\w+/, true);

            if (parent) {
              if (mode.beginKeywords) {
                mode.begin =
                  '\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\b';
              }
              if (!mode.begin) mode.begin = /\B|\b/;
              mode.beginRe = langRe(mode.begin);
              if (mode.endSameAsBegin) mode.end = mode.begin;
              if (!mode.end && !mode.endsWithParent) mode.end = /\B|\b/;
              if (mode.end) mode.endRe = langRe(mode.end);
              mode.terminator_end = reStr(mode.end) || '';
              if (mode.endsWithParent && parent.terminator_end)
                mode.terminator_end +=
                  (mode.end ? '|' : '') + parent.terminator_end;
            }
            if (mode.illegal) mode.illegalRe = langRe(mode.illegal);
            if (mode.relevance == null) mode.relevance = 1;
            if (!mode.contains) {
              mode.contains = [];
            }
            mode.contains = Array.prototype.concat.apply(
              [],
              mode.contains.map(function(c) {
                return expand_mode(c === 'self' ? mode : c);
              })
            );
            mode.contains.forEach(function(c) {
              compileMode(c, mode);
            });

            if (mode.starts) {
              compileMode(mode.starts, parent);
            }

            var terminators = mode.contains
              .map(function(c) {
                return c.beginKeywords ? '\\.?(' + c.begin + ')\\.?' : c.begin;
              })
              .concat([mode.terminator_end, mode.illegal])
              .map(reStr)
              .filter(Boolean);
            mode.terminators = terminators.length
              ? langRe(terminators.join('|'), true)
              : {
                  exec: function(/*s*/) {
                    return null;
                  }
                };
          }

          compileMode(language);
        }

        /*
	  Core highlighting function. Accepts a language name, or an alias, and a
	  string with the code to highlight. Returns an object with the following
	  properties:

	  - relevance (int)
	  - value (an HTML string with highlighting markup)

	  */
        function highlight(name, value, ignore_illegals, continuation) {
          function escapeRe(value) {
            return new RegExp(
              value.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&'),
              'm'
            );
          }

          function subMode(lexeme, mode) {
            var i, length;

            for (i = 0, length = mode.contains.length; i < length; i++) {
              if (testRe(mode.contains[i].beginRe, lexeme)) {
                if (mode.contains[i].endSameAsBegin) {
                  mode.contains[i].endRe = escapeRe(
                    mode.contains[i].beginRe.exec(lexeme)[0]
                  );
                }
                return mode.contains[i];
              }
            }
          }

          function endOfMode(mode, lexeme) {
            if (testRe(mode.endRe, lexeme)) {
              while (mode.endsParent && mode.parent) {
                mode = mode.parent;
              }
              return mode;
            }
            if (mode.endsWithParent) {
              return endOfMode(mode.parent, lexeme);
            }
          }

          function isIllegal(lexeme, mode) {
            return !ignore_illegals && testRe(mode.illegalRe, lexeme);
          }

          function keywordMatch(mode, match) {
            var match_str = language.case_insensitive
              ? match[0].toLowerCase()
              : match[0];
            return (
              mode.keywords.hasOwnProperty(match_str) &&
              mode.keywords[match_str]
            );
          }

          function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {
            var classPrefix = noPrefix ? '' : options.classPrefix,
              openSpan = '<span class="' + classPrefix,
              closeSpan = leaveOpen ? '' : spanEndTag;

            openSpan += classname + '">';

            return openSpan + insideSpan + closeSpan;
          }

          function processKeywords() {
            var keyword_match, last_index, match, result;

            if (!top.keywords) return escape(mode_buffer);

            result = '';
            last_index = 0;
            top.lexemesRe.lastIndex = 0;
            match = top.lexemesRe.exec(mode_buffer);

            while (match) {
              result += escape(mode_buffer.substring(last_index, match.index));
              keyword_match = keywordMatch(top, match);
              if (keyword_match) {
                relevance += keyword_match[1];
                result += buildSpan(keyword_match[0], escape(match[0]));
              } else {
                result += escape(match[0]);
              }
              last_index = top.lexemesRe.lastIndex;
              match = top.lexemesRe.exec(mode_buffer);
            }
            return result + escape(mode_buffer.substr(last_index));
          }

          function processSubLanguage() {
            var explicit = typeof top.subLanguage === 'string';
            if (explicit && !languages[top.subLanguage]) {
              return escape(mode_buffer);
            }

            var result = explicit
              ? highlight(
                  top.subLanguage,
                  mode_buffer,
                  true,
                  continuations[top.subLanguage]
                )
              : highlightAuto(
                  mode_buffer,
                  top.subLanguage.length ? top.subLanguage : undefined
                );

            // Counting embedded language score towards the host language may be disabled
            // with zeroing the containing mode relevance. Usecase in point is Markdown that
            // allows XML everywhere and makes every XML snippet to have a much larger Markdown
            // score.
            if (top.relevance > 0) {
              relevance += result.relevance;
            }
            if (explicit) {
              continuations[top.subLanguage] = result.top;
            }
            return buildSpan(result.language, result.value, false, true);
          }

          function processBuffer() {
            result +=
              top.subLanguage != null
                ? processSubLanguage()
                : processKeywords();
            mode_buffer = '';
          }

          function startNewMode(mode) {
            result += mode.className ? buildSpan(mode.className, '', true) : '';
            top = Object.create(mode, { parent: { value: top } });
          }

          function processLexeme(buffer, lexeme) {
            mode_buffer += buffer;

            if (lexeme == null) {
              processBuffer();
              return 0;
            }

            var new_mode = subMode(lexeme, top);
            if (new_mode) {
              if (new_mode.skip) {
                mode_buffer += lexeme;
              } else {
                if (new_mode.excludeBegin) {
                  mode_buffer += lexeme;
                }
                processBuffer();
                if (!new_mode.returnBegin && !new_mode.excludeBegin) {
                  mode_buffer = lexeme;
                }
              }
              startNewMode(new_mode, lexeme);
              return new_mode.returnBegin ? 0 : lexeme.length;
            }

            var end_mode = endOfMode(top, lexeme);
            if (end_mode) {
              var origin = top;
              if (origin.skip) {
                mode_buffer += lexeme;
              } else {
                if (!(origin.returnEnd || origin.excludeEnd)) {
                  mode_buffer += lexeme;
                }
                processBuffer();
                if (origin.excludeEnd) {
                  mode_buffer = lexeme;
                }
              }
              do {
                if (top.className) {
                  result += spanEndTag;
                }
                if (!top.skip && !top.subLanguage) {
                  relevance += top.relevance;
                }
                top = top.parent;
              } while (top !== end_mode.parent);
              if (end_mode.starts) {
                if (end_mode.endSameAsBegin) {
                  end_mode.starts.endRe = end_mode.endRe;
                }
                startNewMode(end_mode.starts, '');
              }
              return origin.returnEnd ? 0 : lexeme.length;
            }

            if (isIllegal(lexeme, top))
              throw new Error(
                'Illegal lexeme "' +
                  lexeme +
                  '" for mode "' +
                  (top.className || '<unnamed>') +
                  '"'
              );

            /*
	      Parser should not reach this point as all types of lexemes should be caught
	      earlier, but if it does due to some bug make sure it advances at least one
	      character forward to prevent infinite looping.
	      */
            mode_buffer += lexeme;
            return lexeme.length || 1;
          }

          var language = getLanguage(name);
          if (!language) {
            throw new Error('Unknown language: "' + name + '"');
          }

          compileLanguage(language);
          var top = continuation || language;
          var continuations = {}; // keep continuations for sub-languages
          var result = '',
            current;
          for (current = top; current !== language; current = current.parent) {
            if (current.className) {
              result = buildSpan(current.className, '', true) + result;
            }
          }
          var mode_buffer = '';
          var relevance = 0;
          try {
            var match,
              count,
              index = 0;
            while (true) {
              top.terminators.lastIndex = index;
              match = top.terminators.exec(value);
              if (!match) break;
              count = processLexeme(
                value.substring(index, match.index),
                match[0]
              );
              index = match.index + count;
            }
            processLexeme(value.substr(index));
            for (current = top; current.parent; current = current.parent) {
              // close dangling modes
              if (current.className) {
                result += spanEndTag;
              }
            }
            return {
              relevance: relevance,
              value: result,
              language: name,
              top: top
            };
          } catch (e) {
            if (e.message && e.message.indexOf('Illegal') !== -1) {
              return {
                relevance: 0,
                value: escape(value)
              };
            } else {
              throw e;
            }
          }
        }

        /*
	  Highlighting with language detection. Accepts a string with the code to
	  highlight. Returns an object with the following properties:

	  - language (detected language)
	  - relevance (int)
	  - value (an HTML string with highlighting markup)
	  - second_best (object with the same structure for second-best heuristically
	    detected language, may be absent)

	  */
        function highlightAuto(text, languageSubset) {
          languageSubset =
            languageSubset || options.languages || objectKeys(languages);
          var result = {
            relevance: 0,
            value: escape(text)
          };
          var second_best = result;
          languageSubset
            .filter(getLanguage)
            .filter(autoDetection)
            .forEach(function(name) {
              var current = highlight(name, text, false);
              current.language = name;
              if (current.relevance > second_best.relevance) {
                second_best = current;
              }
              if (current.relevance > result.relevance) {
                second_best = result;
                result = current;
              }
            });
          if (second_best.language) {
            result.second_best = second_best;
          }
          return result;
        }

        /*
	  Post-processing of the highlighted markup:

	  - replace TABs with something more useful
	  - replace real line-breaks with '<br>' for non-pre containers

	  */
        function fixMarkup(value) {
          return !(options.tabReplace || options.useBR)
            ? value
            : value.replace(fixMarkupRe, function(match, p1) {
                if (options.useBR && match === '\n') {
                  return '<br>';
                } else if (options.tabReplace) {
                  return p1.replace(/\t/g, options.tabReplace);
                }
                return '';
              });
        }

        function buildClassName(prevClassName, currentLang, resultLang) {
          var language = currentLang ? aliases[currentLang] : resultLang,
            result = [prevClassName.trim()];

          if (!prevClassName.match(/\bhljs\b/)) {
            result.push('hljs');
          }

          if (prevClassName.indexOf(language) === -1) {
            result.push(language);
          }

          return result.join(' ').trim();
        }

        /*
	  Applies highlighting to a DOM node containing code. Accepts a DOM node and
	  two optional parameters for fixMarkup.
	  */
        function highlightBlock(block) {
          var node, originalStream, result, resultNode, text;
          var language = blockLanguage(block);

          if (isNotHighlighted(language)) return;

          if (options.useBR) {
            node = document.createElementNS(
              'http://www.w3.org/1999/xhtml',
              'div'
            );
            node.innerHTML = block.innerHTML
              .replace(/\n/g, '')
              .replace(/<br[ \/]*>/g, '\n');
          } else {
            node = block;
          }
          text = node.textContent;
          result = language
            ? highlight(language, text, true)
            : highlightAuto(text);

          originalStream = nodeStream(node);
          if (originalStream.length) {
            resultNode = document.createElementNS(
              'http://www.w3.org/1999/xhtml',
              'div'
            );
            resultNode.innerHTML = result.value;
            result.value = mergeStreams(
              originalStream,
              nodeStream(resultNode),
              text
            );
          }
          result.value = fixMarkup(result.value);

          block.innerHTML = result.value;
          block.className = buildClassName(
            block.className,
            language,
            result.language
          );
          block.result = {
            language: result.language,
            re: result.relevance
          };
          if (result.second_best) {
            block.second_best = {
              language: result.second_best.language,
              re: result.second_best.relevance
            };
          }
        }

        /*
	  Updates highlight.js global options with values passed in the form of an object.
	  */
        function configure(user_options) {
          options = inherit(options, user_options);
        }

        /*
	  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.
	  */
        function initHighlighting() {
          if (initHighlighting.called) return;
          initHighlighting.called = true;

          var blocks = document.querySelectorAll('pre code');
          ArrayProto.forEach.call(blocks, highlightBlock);
        }

        /*
	  Attaches highlighting to the page load event.
	  */
        function initHighlightingOnLoad() {
          addEventListener('DOMContentLoaded', initHighlighting, false);
          addEventListener('load', initHighlighting, false);
        }

        function registerLanguage(name, language) {
          var lang = (languages[name] = language(hljs));
          if (lang.aliases) {
            lang.aliases.forEach(function(alias) {
              aliases[alias] = name;
            });
          }
        }

        function listLanguages() {
          return objectKeys(languages);
        }

        function getLanguage(name) {
          name = (name || '').toLowerCase();
          return languages[name] || languages[aliases[name]];
        }

        function autoDetection(name) {
          var lang = getLanguage(name);
          return lang && !lang.disableAutodetect;
        }

        /* Interface definition */

        hljs.highlight = highlight;
        hljs.highlightAuto = highlightAuto;
        hljs.fixMarkup = fixMarkup;
        hljs.highlightBlock = highlightBlock;
        hljs.configure = configure;
        hljs.initHighlighting = initHighlighting;
        hljs.initHighlightingOnLoad = initHighlightingOnLoad;
        hljs.registerLanguage = registerLanguage;
        hljs.listLanguages = listLanguages;
        hljs.getLanguage = getLanguage;
        hljs.autoDetection = autoDetection;
        hljs.inherit = inherit;

        // Common regexps
        hljs.IDENT_RE = '[a-zA-Z]\\w*';
        hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\w*';
        hljs.NUMBER_RE = '\\b\\d+(\\.\\d+)?';
        hljs.C_NUMBER_RE =
          '(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)'; // 0x..., 0..., decimal, float
        hljs.BINARY_NUMBER_RE = '\\b(0b[01]+)'; // 0b...
        hljs.RE_STARTERS_RE =
          '!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~';

        // Common modes
        hljs.BACKSLASH_ESCAPE = {
          begin: '\\\\[\\s\\S]',
          relevance: 0
        };
        hljs.APOS_STRING_MODE = {
          className: 'string',
          begin: "'",
          end: "'",
          illegal: '\\n',
          contains: [hljs.BACKSLASH_ESCAPE]
        };
        hljs.QUOTE_STRING_MODE = {
          className: 'string',
          begin: '"',
          end: '"',
          illegal: '\\n',
          contains: [hljs.BACKSLASH_ESCAPE]
        };
        hljs.PHRASAL_WORDS_MODE = {
          begin: /\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/
        };
        hljs.COMMENT = function(begin, end, inherits) {
          var mode = hljs.inherit(
            {
              className: 'comment',
              begin: begin,
              end: end,
              contains: []
            },
            inherits || {}
          );
          mode.contains.push(hljs.PHRASAL_WORDS_MODE);
          mode.contains.push({
            className: 'doctag',
            begin: '(?:TODO|FIXME|NOTE|BUG|XXX):',
            relevance: 0
          });
          return mode;
        };
        hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');
        hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\*', '\\*/');
        hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');
        hljs.NUMBER_MODE = {
          className: 'number',
          begin: hljs.NUMBER_RE,
          relevance: 0
        };
        hljs.C_NUMBER_MODE = {
          className: 'number',
          begin: hljs.C_NUMBER_RE,
          relevance: 0
        };
        hljs.BINARY_NUMBER_MODE = {
          className: 'number',
          begin: hljs.BINARY_NUMBER_RE,
          relevance: 0
        };
        hljs.CSS_NUMBER_MODE = {
          className: 'number',
          begin:
            hljs.NUMBER_RE +
            '(' +
            '%|em|ex|ch|rem' +
            '|vw|vh|vmin|vmax' +
            '|cm|mm|in|pt|pc|px' +
            '|deg|grad|rad|turn' +
            '|s|ms' +
            '|Hz|kHz' +
            '|dpi|dpcm|dppx' +
            ')?',
          relevance: 0
        };
        hljs.REGEXP_MODE = {
          className: 'regexp',
          begin: /\//,
          end: /\/[gimuy]*/,
          illegal: /\n/,
          contains: [
            hljs.BACKSLASH_ESCAPE,
            {
              begin: /\[/,
              end: /\]/,
              relevance: 0,
              contains: [hljs.BACKSLASH_ESCAPE]
            }
          ]
        };
        hljs.TITLE_MODE = {
          className: 'title',
          begin: hljs.IDENT_RE,
          relevance: 0
        };
        hljs.UNDERSCORE_TITLE_MODE = {
          className: 'title',
          begin: hljs.UNDERSCORE_IDENT_RE,
          relevance: 0
        };
        hljs.METHOD_GUARD = {
          // excludes method names from keyword processing
          begin: '\\.\\s*' + hljs.UNDERSCORE_IDENT_RE,
          relevance: 0
        };

        return hljs;
      });

      /***/
    },
    /* 347 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        // общий паттерн для определения идентификаторов
        var UNDERSCORE_IDENT_RE = '[A-Za-zА-Яа-яёЁ_][A-Za-zА-Яа-яёЁ_0-9]+';

        // v7 уникальные ключевые слова, отсутствующие в v8 ==> keyword
        var v7_keywords = 'далее ';

        // v8 ключевые слова ==> keyword
        var v8_keywords =
          'возврат вызватьисключение выполнить для если и из или иначе иначеесли исключение каждого конецесли ' +
          'конецпопытки конеццикла не новый перейти перем по пока попытка прервать продолжить тогда цикл экспорт ';

        // keyword : ключевые слова
        var KEYWORD = v7_keywords + v8_keywords;

        // v7 уникальные директивы, отсутствующие в v8 ==> meta-keyword
        var v7_meta_keywords = 'загрузитьизфайла ';

        // v8 ключевые слова в инструкциях препроцессора, директивах компиляции, аннотациях ==> meta-keyword
        var v8_meta_keywords =
          'вебклиент вместо внешнеесоединение клиент конецобласти мобильноеприложениеклиент мобильноеприложениесервер ' +
          'наклиенте наклиентенасервере наклиентенасерверебезконтекста насервере насерверебезконтекста область перед ' +
          'после сервер толстыйклиентобычноеприложение толстыйклиентуправляемоеприложение тонкийклиент ';

        // meta-keyword : ключевые слова в инструкциях препроцессора, директивах компиляции, аннотациях
        var METAKEYWORD = v7_meta_keywords + v8_meta_keywords;

        // v7 системные константы ==> built_in
        var v7_system_constants =
          'разделительстраниц разделительстрок символтабуляции ';

        // v7 уникальные методы глобального контекста, отсутствующие в v8 ==> built_in
        var v7_global_context_methods =
          'ansitooem oemtoansi ввестивидсубконто ввестиперечисление ввестипериод ввестиплансчетов выбранныйплансчетов ' +
          'датагод датамесяц датачисло заголовоксистемы значениевстроку значениеизстроки каталогиб каталогпользователя ' +
          'кодсимв конгода конецпериодаби конецрассчитанногопериодаби конецстандартногоинтервала конквартала конмесяца ' +
          'коннедели лог лог10 максимальноеколичествосубконто названиеинтерфейса названиенабораправ назначитьвид ' +
          'назначитьсчет найтиссылки началопериодаби началостандартногоинтервала начгода начквартала начмесяца ' +
          'начнедели номерднягода номерднянедели номернеделигода обработкаожидания основнойжурналрасчетов ' +
          'основнойплансчетов основнойязык очиститьокносообщений периодстр получитьвремята получитьдатута ' +
          'получитьдокументта получитьзначенияотбора получитьпозициюта получитьпустоезначение получитьта ' +
          'префиксавтонумерации пропись пустоезначение разм разобратьпозициюдокумента рассчитатьрегистрына ' +
          'рассчитатьрегистрыпо симв создатьобъект статусвозврата стрколичествострок сформироватьпозициюдокумента ' +
          'счетпокоду текущеевремя типзначения типзначениястр установитьтана установитьтапо фиксшаблон шаблон ';

        // v8 методы глобального контекста ==> built_in
        var v8_global_context_methods =
          'acos asin atan base64значение base64строка cos exp log log10 pow sin sqrt tan xmlзначение xmlстрока ' +
          'xmlтип xmlтипзнч активноеокно безопасныйрежим безопасныйрежимразделенияданных булево ввестидату ввестизначение ' +
          'ввестистроку ввестичисло возможностьчтенияxml вопрос восстановитьзначение врег выгрузитьжурналрегистрации ' +
          'выполнитьобработкуоповещения выполнитьпроверкуправдоступа вычислить год данныеформывзначение дата день деньгода ' +
          'деньнедели добавитьмесяц заблокироватьданныедляредактирования заблокироватьработупользователя завершитьработусистемы ' +
          'загрузитьвнешнююкомпоненту закрытьсправку записатьjson записатьxml записатьдатуjson записьжурналарегистрации ' +
          'заполнитьзначениясвойств запроситьразрешениепользователя запуститьприложение запуститьсистему зафиксироватьтранзакцию ' +
          'значениевданныеформы значениевстрокувнутр значениевфайл значениезаполнено значениеизстрокивнутр значениеизфайла ' +
          'изxmlтипа импортмоделиxdto имякомпьютера имяпользователя инициализироватьпредопределенныеданные информацияобошибке ' +
          'каталогбиблиотекимобильногоустройства каталогвременныхфайлов каталогдокументов каталогпрограммы кодироватьстроку ' +
          'кодлокализацииинформационнойбазы кодсимвола командасистемы конецгода конецдня конецквартала конецмесяца конецминуты ' +
          'конецнедели конецчаса конфигурациябазыданныхизмененадинамически конфигурацияизменена копироватьданныеформы ' +
          'копироватьфайл краткоепредставлениеошибки лев макс местноевремя месяц мин минута монопольныйрежим найти ' +
          'найтинедопустимыесимволыxml найтиокнопонавигационнойссылке найтипомеченныенаудаление найтипоссылкам найтифайлы ' +
          'началогода началодня началоквартала началомесяца началоминуты началонедели началочаса начатьзапросразрешенияпользователя ' +
          'начатьзапускприложения начатькопированиефайла начатьперемещениефайла начатьподключениевнешнейкомпоненты ' +
          'начатьподключениерасширенияработыскриптографией начатьподключениерасширенияработысфайлами начатьпоискфайлов ' +
          'начатьполучениекаталогавременныхфайлов начатьполучениекаталогадокументов начатьполучениерабочегокаталогаданныхпользователя ' +
          'начатьполучениефайлов начатьпомещениефайла начатьпомещениефайлов начатьсозданиедвоичныхданныхизфайла начатьсозданиекаталога ' +
          'начатьтранзакцию начатьудалениефайлов начатьустановкувнешнейкомпоненты начатьустановкурасширенияработыскриптографией ' +
          'начатьустановкурасширенияработысфайлами неделягода необходимостьзавершениясоединения номерсеансаинформационнойбазы ' +
          'номерсоединенияинформационнойбазы нрег нстр обновитьинтерфейс обновитьнумерациюобъектов обновитьповторноиспользуемыезначения ' +
          'обработкапрерыванияпользователя объединитьфайлы окр описаниеошибки оповестить оповеститьобизменении ' +
          'отключитьобработчикзапросанастроекклиенталицензирования отключитьобработчикожидания отключитьобработчикоповещения ' +
          'открытьзначение открытьиндекссправки открытьсодержаниесправки открытьсправку открытьформу открытьформумодально ' +
          'отменитьтранзакцию очиститьжурналрегистрации очиститьнастройкипользователя очиститьсообщения параметрыдоступа ' +
          'перейтипонавигационнойссылке переместитьфайл подключитьвнешнююкомпоненту ' +
          'подключитьобработчикзапросанастроекклиенталицензирования подключитьобработчикожидания подключитьобработчикоповещения ' +
          'подключитьрасширениеработыскриптографией подключитьрасширениеработысфайлами подробноепредставлениеошибки ' +
          'показатьвводдаты показатьвводзначения показатьвводстроки показатьвводчисла показатьвопрос показатьзначение ' +
          'показатьинформациюобошибке показатьнакарте показатьоповещениепользователя показатьпредупреждение полноеимяпользователя ' +
          'получитьcomобъект получитьxmlтип получитьадреспоместоположению получитьблокировкусеансов получитьвремязавершенияспящегосеанса ' +
          'получитьвремязасыпанияпассивногосеанса получитьвремяожиданияблокировкиданных получитьданныевыбора ' +
          'получитьдополнительныйпараметрклиенталицензирования получитьдопустимыекодылокализации получитьдопустимыечасовыепояса ' +
          'получитьзаголовокклиентскогоприложения получитьзаголовоксистемы получитьзначенияотборажурналарегистрации ' +
          'получитьидентификаторконфигурации получитьизвременногохранилища получитьимявременногофайла ' +
          'получитьимяклиенталицензирования получитьинформациюэкрановклиента получитьиспользованиежурналарегистрации ' +
          'получитьиспользованиесобытияжурналарегистрации получитькраткийзаголовокприложения получитьмакетоформления ' +
          'получитьмаскувсефайлы получитьмаскувсефайлыклиента получитьмаскувсефайлысервера получитьместоположениепоадресу ' +
          'получитьминимальнуюдлинупаролейпользователей получитьнавигационнуюссылку получитьнавигационнуюссылкуинформационнойбазы ' +
          'получитьобновлениеконфигурациибазыданных получитьобновлениепредопределенныхданныхинформационнойбазы получитьобщиймакет ' +
          'получитьобщуюформу получитьокна получитьоперативнуюотметкувремени получитьотключениебезопасногорежима ' +
          'получитьпараметрыфункциональныхопцийинтерфейса получитьполноеимяпредопределенногозначения ' +
          'получитьпредставлениянавигационныхссылок получитьпроверкусложностипаролейпользователей получитьразделительпути ' +
          'получитьразделительпутиклиента получитьразделительпутисервера получитьсеансыинформационнойбазы ' +
          'получитьскоростьклиентскогосоединения получитьсоединенияинформационнойбазы получитьсообщенияпользователю ' +
          'получитьсоответствиеобъектаиформы получитьсоставстандартногоинтерфейсаodata получитьструктурухранениябазыданных ' +
          'получитьтекущийсеансинформационнойбазы получитьфайл получитьфайлы получитьформу получитьфункциональнуюопцию ' +
          'получитьфункциональнуюопциюинтерфейса получитьчасовойпоясинформационнойбазы пользователиос поместитьвовременноехранилище ' +
          'поместитьфайл поместитьфайлы прав праводоступа предопределенноезначение представлениекодалокализации представлениепериода ' +
          'представлениеправа представлениеприложения представлениесобытияжурналарегистрации представлениечасовогопояса предупреждение ' +
          'прекратитьработусистемы привилегированныйрежим продолжитьвызов прочитатьjson прочитатьxml прочитатьдатуjson пустаястрока ' +
          'рабочийкаталогданныхпользователя разблокироватьданныедляредактирования разделитьфайл разорватьсоединениесвнешнимисточникомданных ' +
          'раскодироватьстроку рольдоступна секунда сигнал символ скопироватьжурналрегистрации смещениелетнеговремени ' +
          'смещениестандартноговремени соединитьбуферыдвоичныхданных создатькаталог создатьфабрикуxdto сокрл сокрлп сокрп сообщить ' +
          'состояние сохранитьзначение сохранитьнастройкипользователя сред стрдлина стрзаканчиваетсяна стрзаменить стрнайти стрначинаетсяс ' +
          'строка строкасоединенияинформационнойбазы стрполучитьстроку стрразделить стрсоединить стрсравнить стрчисловхождений ' +
          'стрчислострок стршаблон текущаядата текущаядатасеанса текущаяуниверсальнаядата текущаяуниверсальнаядатавмиллисекундах ' +
          'текущийвариантинтерфейсаклиентскогоприложения текущийвариантосновногошрифтаклиентскогоприложения текущийкодлокализации ' +
          'текущийрежимзапуска текущийязык текущийязыксистемы тип типзнч транзакцияактивна трег удалитьданныеинформационнойбазы ' +
          'удалитьизвременногохранилища удалитьобъекты удалитьфайлы универсальноевремя установитьбезопасныйрежим ' +
          'установитьбезопасныйрежимразделенияданных установитьблокировкусеансов установитьвнешнююкомпоненту ' +
          'установитьвремязавершенияспящегосеанса установитьвремязасыпанияпассивногосеанса установитьвремяожиданияблокировкиданных ' +
          'установитьзаголовокклиентскогоприложения установитьзаголовоксистемы установитьиспользованиежурналарегистрации ' +
          'установитьиспользованиесобытияжурналарегистрации установитькраткийзаголовокприложения ' +
          'установитьминимальнуюдлинупаролейпользователей установитьмонопольныйрежим установитьнастройкиклиенталицензирования ' +
          'установитьобновлениепредопределенныхданныхинформационнойбазы установитьотключениебезопасногорежима ' +
          'установитьпараметрыфункциональныхопцийинтерфейса установитьпривилегированныйрежим ' +
          'установитьпроверкусложностипаролейпользователей установитьрасширениеработыскриптографией ' +
          'установитьрасширениеработысфайлами установитьсоединениесвнешнимисточникомданных установитьсоответствиеобъектаиформы ' +
          'установитьсоставстандартногоинтерфейсаodata установитьчасовойпоясинформационнойбазы установитьчасовойпояссеанса ' +
          'формат цел час часовойпояс часовойпояссеанса число числопрописью этоадресвременногохранилища ';

        // v8 свойства глобального контекста ==> built_in
        var v8_global_context_property =
          'wsссылки библиотекакартинок библиотекамакетовоформлениякомпоновкиданных библиотекастилей бизнеспроцессы ' +
          'внешниеисточникиданных внешниеобработки внешниеотчеты встроенныепокупки главныйинтерфейс главныйстиль ' +
          'документы доставляемыеуведомления журналыдокументов задачи информацияобинтернетсоединении использованиерабочейдаты ' +
          'историяработыпользователя константы критерииотбора метаданные обработки отображениерекламы отправкадоставляемыхуведомлений ' +
          'отчеты панельзадачос параметрзапуска параметрысеанса перечисления планывидоврасчета планывидовхарактеристик ' +
          'планыобмена планысчетов полнотекстовыйпоиск пользователиинформационнойбазы последовательности проверкавстроенныхпокупок ' +
          'рабочаядата расширенияконфигурации регистрыбухгалтерии регистрынакопления регистрырасчета регистрысведений ' +
          'регламентныезадания сериализаторxdto справочники средствагеопозиционирования средствакриптографии средствамультимедиа ' +
          'средстваотображениярекламы средствапочты средствателефонии фабрикаxdto файловыепотоки фоновыезадания хранилищанастроек ' +
          'хранилищевариантовотчетов хранилищенастроекданныхформ хранилищеобщихнастроек хранилищепользовательскихнастроекдинамическихсписков ' +
          'хранилищепользовательскихнастроекотчетов хранилищесистемныхнастроек ';

        // built_in : встроенные или библиотечные объекты (константы, классы, функции)
        var BUILTIN =
          v7_system_constants +
          v7_global_context_methods +
          v8_global_context_methods +
          v8_global_context_property;

        // v8 системные наборы значений ==> class
        var v8_system_sets_of_values =
          'webцвета windowsцвета windowsшрифты библиотекакартинок рамкистиля символы цветастиля шрифтыстиля ';

        // v8 системные перечисления - интерфейсные ==> class
        var v8_system_enums_interface =
          'автоматическоесохранениеданныхформывнастройках автонумерациявформе автораздвижениесерий ' +
          'анимациядиаграммы вариантвыравниванияэлементовизаголовков вариантуправлениявысотойтаблицы ' +
          'вертикальнаяпрокруткаформы вертикальноеположение вертикальноеположениеэлемента видгруппыформы ' +
          'виддекорацииформы виддополненияэлементаформы видизмененияданных видкнопкиформы видпереключателя ' +
          'видподписейкдиаграмме видполяформы видфлажка влияниеразмеранапузырекдиаграммы горизонтальноеположение ' +
          'горизонтальноеположениеэлемента группировкаколонок группировкаподчиненныхэлементовформы ' +
          'группыиэлементы действиеперетаскивания дополнительныйрежимотображения допустимыедействияперетаскивания ' +
          'интервалмеждуэлементамиформы использованиевывода использованиеполосыпрокрутки ' +
          'используемоезначениеточкибиржевойдиаграммы историявыборапривводе источникзначенийоситочекдиаграммы ' +
          'источникзначенияразмерапузырькадиаграммы категориягруппыкоманд максимумсерий начальноеотображениедерева ' +
          'начальноеотображениесписка обновлениетекстаредактирования ориентациядендрограммы ориентациядиаграммы ' +
          'ориентацияметокдиаграммы ориентацияметоксводнойдиаграммы ориентацияэлементаформы отображениевдиаграмме ' +
          'отображениевлегендедиаграммы отображениегруппыкнопок отображениезаголовкашкалыдиаграммы ' +
          'отображениезначенийсводнойдиаграммы отображениезначенияизмерительнойдиаграммы ' +
          'отображениеинтерваладиаграммыганта отображениекнопки отображениекнопкивыбора отображениеобсужденийформы ' +
          'отображениеобычнойгруппы отображениеотрицательныхзначенийпузырьковойдиаграммы отображениепанелипоиска ' +
          'отображениеподсказки отображениепредупрежденияприредактировании отображениеразметкиполосырегулирования ' +
          'отображениестраницформы отображениетаблицы отображениетекстазначениядиаграммыганта ' +
          'отображениеуправленияобычнойгруппы отображениефигурыкнопки палитрацветовдиаграммы поведениеобычнойгруппы ' +
          'поддержкамасштабадендрограммы поддержкамасштабадиаграммыганта поддержкамасштабасводнойдиаграммы ' +
          'поисквтаблицепривводе положениезаголовкаэлементаформы положениекартинкикнопкиформы ' +
          'положениекартинкиэлементаграфическойсхемы положениекоманднойпанелиформы положениекоманднойпанелиэлементаформы ' +
          'положениеопорнойточкиотрисовки положениеподписейкдиаграмме положениеподписейшкалызначенийизмерительнойдиаграммы ' +
          'положениесостоянияпросмотра положениестрокипоиска положениетекстасоединительнойлинии положениеуправленияпоиском ' +
          'положениешкалывремени порядокотображенияточекгоризонтальнойгистограммы порядоксерийвлегендедиаграммы ' +
          'размеркартинки расположениезаголовкашкалыдиаграммы растягиваниеповертикалидиаграммыганта ' +
          'режимавтоотображениясостояния режимвводастроктаблицы режимвыборанезаполненного режимвыделениядаты ' +
          'режимвыделениястрокитаблицы режимвыделениятаблицы режимизмененияразмера режимизменениясвязанногозначения ' +
          'режимиспользованиядиалогапечати режимиспользованияпараметракоманды режиммасштабированияпросмотра ' +
          'режимосновногоокнаклиентскогоприложения режимоткрытияокнаформы режимотображениявыделения ' +
          'режимотображениягеографическойсхемы режимотображениязначенийсерии режимотрисовкисеткиграфическойсхемы ' +
          'режимполупрозрачностидиаграммы режимпробеловдиаграммы режимразмещениянастранице режимредактированияколонки ' +
          'режимсглаживаниядиаграммы режимсглаживанияиндикатора режимсписказадач сквозноевыравнивание ' +
          'сохранениеданныхформывнастройках способзаполнениятекстазаголовкашкалыдиаграммы ' +
          'способопределенияограничивающегозначениядиаграммы стандартнаягруппакоманд стандартноеоформление ' +
          'статусоповещенияпользователя стильстрелки типаппроксимациилиниитрендадиаграммы типдиаграммы ' +
          'типединицышкалывремени типимпортасерийслоягеографическойсхемы типлиниигеографическойсхемы типлиниидиаграммы ' +
          'типмаркерагеографическойсхемы типмаркерадиаграммы типобластиоформления ' +
          'типорганизацииисточникаданныхгеографическойсхемы типотображениясериислоягеографическойсхемы ' +
          'типотображенияточечногообъектагеографическойсхемы типотображенияшкалыэлементалегендыгеографическойсхемы ' +
          'типпоискаобъектовгеографическойсхемы типпроекциигеографическойсхемы типразмещенияизмерений ' +
          'типразмещенияреквизитовизмерений типрамкиэлементауправления типсводнойдиаграммы ' +
          'типсвязидиаграммыганта типсоединениязначенийпосериямдиаграммы типсоединенияточекдиаграммы ' +
          'типсоединительнойлинии типстороныэлементаграфическойсхемы типформыотчета типшкалырадарнойдиаграммы ' +
          'факторлиниитрендадиаграммы фигуракнопки фигурыграфическойсхемы фиксациявтаблице форматдняшкалывремени ' +
          'форматкартинки ширинаподчиненныхэлементовформы ';

        // v8 системные перечисления - свойства прикладных объектов ==> class
        var v8_system_enums_objects_properties =
          'виддвижениябухгалтерии виддвижениянакопления видпериодарегистрарасчета видсчета видточкимаршрутабизнеспроцесса ' +
          'использованиеагрегатарегистранакопления использованиегруппиэлементов использованиережимапроведения ' +
          'использованиесреза периодичностьагрегатарегистранакопления режимавтовремя режимзаписидокумента режимпроведениядокумента ';

        // v8 системные перечисления - планы обмена ==> class
        var v8_system_enums_exchange_plans =
          'авторегистрацияизменений допустимыйномерсообщения отправкаэлементаданных получениеэлементаданных ';

        // v8 системные перечисления - табличный документ ==> class
        var v8_system_enums_tabular_document =
          'использованиерасшифровкитабличногодокумента ориентациястраницы положениеитоговколоноксводнойтаблицы ' +
          'положениеитоговстроксводнойтаблицы положениетекстаотносительнокартинки расположениезаголовкагруппировкитабличногодокумента ' +
          'способчтениязначенийтабличногодокумента типдвустороннейпечати типзаполненияобластитабличногодокумента ' +
          'типкурсоровтабличногодокумента типлиниирисункатабличногодокумента типлинииячейкитабличногодокумента ' +
          'типнаправленияпереходатабличногодокумента типотображениявыделениятабличногодокумента типотображениялинийсводнойтаблицы ' +
          'типразмещениятекстатабличногодокумента типрисункатабличногодокумента типсмещениятабличногодокумента ' +
          'типузоратабличногодокумента типфайлатабличногодокумента точностьпечати чередованиерасположениястраниц ';

        // v8 системные перечисления - планировщик ==> class
        var v8_system_enums_sheduler =
          'отображениевремениэлементовпланировщика ';

        // v8 системные перечисления - форматированный документ ==> class
        var v8_system_enums_formatted_document =
          'типфайлаформатированногодокумента ';

        // v8 системные перечисления - запрос ==> class
        var v8_system_enums_query = 'обходрезультатазапроса типзаписизапроса ';

        // v8 системные перечисления - построитель отчета ==> class
        var v8_system_enums_report_builder =
          'видзаполнениярасшифровкипостроителяотчета типдобавленияпредставлений типизмеренияпостроителяотчета типразмещенияитогов ';

        // v8 системные перечисления - работа с файлами ==> class
        var v8_system_enums_files =
          'доступкфайлу режимдиалогавыборафайла режимоткрытияфайла ';

        // v8 системные перечисления - построитель запроса ==> class
        var v8_system_enums_query_builder = 'типизмеренияпостроителязапроса ';

        // v8 системные перечисления - анализ данных ==> class
        var v8_system_enums_data_analysis =
          'видданныханализа методкластеризации типединицыинтервалавременианализаданных типзаполнениятаблицырезультатаанализаданных ' +
          'типиспользованиячисловыхзначенийанализаданных типисточникаданныхпоискаассоциаций типколонкианализаданныхдереворешений ' +
          'типколонкианализаданныхкластеризация типколонкианализаданныхобщаястатистика типколонкианализаданныхпоискассоциаций ' +
          'типколонкианализаданныхпоискпоследовательностей типколонкимоделипрогноза типмерырасстоянияанализаданных ' +
          'типотсеченияправилассоциации типполяанализаданных типстандартизациианализаданных типупорядочиванияправилассоциациианализаданных ' +
          'типупорядочиванияшаблоновпоследовательностейанализаданных типупрощениядереварешений ';

        // v8 системные перечисления - xml, json, xs, dom, xdto, web-сервисы ==> class
        var v8_system_enums_xml_json_xs_dom_xdto_ws =
          'wsнаправлениепараметра вариантxpathxs вариантзаписидатыjson вариантпростоготипаxs видгруппымоделиxs видфасетаxdto ' +
          'действиепостроителяdom завершенностьпростоготипаxs завершенностьсоставноготипаxs завершенностьсхемыxs запрещенныеподстановкиxs ' +
          'исключениягруппподстановкиxs категорияиспользованияатрибутаxs категорияограниченияидентичностиxs категорияограниченияпространствименxs ' +
          'методнаследованияxs модельсодержимогоxs назначениетипаxml недопустимыеподстановкиxs обработкапробельныхсимволовxs обработкасодержимогоxs ' +
          'ограничениезначенияxs параметрыотбораузловdom переносстрокjson позициявдокументеdom пробельныесимволыxml типатрибутаxml типзначенияjson ' +
          'типканоническогоxml типкомпонентыxs типпроверкиxml типрезультатаdomxpath типузлаdom типузлаxml формаxml формапредставленияxs ' +
          'форматдатыjson экранированиесимволовjson ';

        // v8 системные перечисления - система компоновки данных ==> class
        var v8_system_enums_data_composition_system =
          'видсравнениякомпоновкиданных действиеобработкирасшифровкикомпоновкиданных направлениесортировкикомпоновкиданных ' +
          'расположениевложенныхэлементоврезультатакомпоновкиданных расположениеитоговкомпоновкиданных расположениегруппировкикомпоновкиданных ' +
          'расположениеполейгруппировкикомпоновкиданных расположениеполякомпоновкиданных расположениереквизитовкомпоновкиданных ' +
          'расположениересурсовкомпоновкиданных типбухгалтерскогоостаткакомпоновкиданных типвыводатекстакомпоновкиданных ' +
          'типгруппировкикомпоновкиданных типгруппыэлементовотборакомпоновкиданных типдополненияпериодакомпоновкиданных ' +
          'типзаголовкаполейкомпоновкиданных типмакетагруппировкикомпоновкиданных типмакетаобластикомпоновкиданных типостаткакомпоновкиданных ' +
          'типпериодакомпоновкиданных типразмещениятекстакомпоновкиданных типсвязинаборовданныхкомпоновкиданных типэлементарезультатакомпоновкиданных ' +
          'расположениелегендыдиаграммыкомпоновкиданных типпримененияотборакомпоновкиданных режимотображенияэлементанастройкикомпоновкиданных ' +
          'режимотображениянастроеккомпоновкиданных состояниеэлементанастройкикомпоновкиданных способвосстановлениянастроеккомпоновкиданных ' +
          'режимкомпоновкирезультата использованиепараметракомпоновкиданных автопозицияресурсовкомпоновкиданных ' +
          'вариантиспользованиягруппировкикомпоновкиданных расположениересурсоввдиаграммекомпоновкиданных фиксациякомпоновкиданных ' +
          'использованиеусловногооформлениякомпоновкиданных ';

        // v8 системные перечисления - почта ==> class
        var v8_system_enums_email =
          'важностьинтернетпочтовогосообщения обработкатекстаинтернетпочтовогосообщения способкодированияинтернетпочтовоговложения ' +
          'способкодированиянеasciiсимволовинтернетпочтовогосообщения типтекстапочтовогосообщения протоколинтернетпочты ' +
          'статусразборапочтовогосообщения ';

        // v8 системные перечисления - журнал регистрации ==> class
        var v8_system_enums_logbook =
          'режимтранзакциизаписижурналарегистрации статустранзакциизаписижурналарегистрации уровеньжурналарегистрации ';

        // v8 системные перечисления - криптография ==> class
        var v8_system_enums_cryptography =
          'расположениехранилищасертификатовкриптографии режимвключениясертификатовкриптографии режимпроверкисертификатакриптографии ' +
          'типхранилищасертификатовкриптографии ';

        // v8 системные перечисления - ZIP ==> class
        var v8_system_enums_zip =
          'кодировкаименфайловвzipфайле методсжатияzip методшифрованияzip режимвосстановленияпутейфайловzip режимобработкиподкаталоговzip ' +
          'режимсохраненияпутейzip уровеньсжатияzip ';

        // v8 системные перечисления -
        // Блокировка данных, Фоновые задания, Автоматизированное тестирование,
        // Доставляемые уведомления, Встроенные покупки, Интернет, Работа с двоичными данными ==> class
        var v8_system_enums_other =
          'звуковоеоповещение направлениепереходакстроке позициявпотоке порядокбайтов режимблокировкиданных режимуправленияблокировкойданных ' +
          'сервисвстроенныхпокупок состояниефоновогозадания типподписчикадоставляемыхуведомлений уровеньиспользованиязащищенногосоединенияftp ';

        // v8 системные перечисления - схема запроса ==> class
        var v8_system_enums_request_schema =
          'направлениепорядкасхемызапроса типдополненияпериодамисхемызапроса типконтрольнойточкисхемызапроса типобъединениясхемызапроса ' +
          'типпараметрадоступнойтаблицысхемызапроса типсоединениясхемызапроса ';

        // v8 системные перечисления - свойства объектов метаданных ==> class
        var v8_system_enums_properties_of_metadata_objects =
          'httpметод автоиспользованиеобщегореквизита автопрефиксномеразадачи вариантвстроенногоязыка видиерархии видрегистранакопления ' +
          'видтаблицывнешнегоисточникаданных записьдвиженийприпроведении заполнениепоследовательностей индексирование ' +
          'использованиебазыпланавидоврасчета использованиебыстроговыбора использованиеобщегореквизита использованиеподчинения ' +
          'использованиеполнотекстовогопоиска использованиеразделяемыхданныхобщегореквизита использованиереквизита ' +
          'назначениеиспользованияприложения назначениерасширенияконфигурации направлениепередачи обновлениепредопределенныхданных ' +
          'оперативноепроведение основноепредставлениевидарасчета основноепредставлениевидахарактеристики основноепредставлениезадачи ' +
          'основноепредставлениепланаобмена основноепредставлениесправочника основноепредставлениесчета перемещениеграницыприпроведении ' +
          'периодичностьномерабизнеспроцесса периодичностьномерадокумента периодичностьрегистрарасчета периодичностьрегистрасведений ' +
          'повторноеиспользованиевозвращаемыхзначений полнотекстовыйпоискпривводепостроке принадлежностьобъекта проведение ' +
          'разделениеаутентификацииобщегореквизита разделениеданныхобщегореквизита разделениерасширенийконфигурацииобщегореквизита ' +
          'режимавтонумерацииобъектов режимзаписирегистра режимиспользованиямодальности ' +
          'режимиспользованиясинхронныхвызововрасширенийплатформыивнешнихкомпонент режимповторногоиспользованиясеансов ' +
          'режимполученияданныхвыборапривводепостроке режимсовместимости режимсовместимостиинтерфейса ' +
          'режимуправленияблокировкойданныхпоумолчанию сериикодовпланавидовхарактеристик сериикодовпланасчетов ' +
          'сериикодовсправочника созданиепривводе способвыбора способпоискастрокипривводепостроке способредактирования ' +
          'типданныхтаблицывнешнегоисточникаданных типкодапланавидоврасчета типкодасправочника типмакета типномерабизнеспроцесса ' +
          'типномерадокумента типномеразадачи типформы удалениедвижений ';

        // v8 системные перечисления - разные ==> class
        var v8_system_enums_differents =
          'важностьпроблемыприменениярасширенияконфигурации вариантинтерфейсаклиентскогоприложения вариантмасштабаформклиентскогоприложения ' +
          'вариантосновногошрифтаклиентскогоприложения вариантстандартногопериода вариантстандартнойдатыначала видграницы видкартинки ' +
          'видотображенияполнотекстовогопоиска видрамки видсравнения видцвета видчисловогозначения видшрифта допустимаядлина допустимыйзнак ' +
          'использованиеbyteordermark использованиеметаданныхполнотекстовогопоиска источникрасширенийконфигурации клавиша кодвозвратадиалога ' +
          'кодировкаxbase кодировкатекста направлениепоиска направлениесортировки обновлениепредопределенныхданных обновлениеприизмененииданных ' +
          'отображениепанелиразделов проверказаполнения режимдиалогавопрос режимзапускаклиентскогоприложения режимокругления режимоткрытияформприложения ' +
          'режимполнотекстовогопоиска скоростьклиентскогосоединения состояниевнешнегоисточникаданных состояниеобновленияконфигурациибазыданных ' +
          'способвыборасертификатаwindows способкодированиястроки статуссообщения типвнешнейкомпоненты типплатформы типповеденияклавишиenter ' +
          'типэлементаинформацииовыполненииобновленияконфигурациибазыданных уровеньизоляциитранзакций хешфункция частидаты';

        // class: встроенные наборы значений, системные перечисления (содержат дочерние значения, обращения к которым через разыменование)
        var CLASS =
          v8_system_sets_of_values +
          v8_system_enums_interface +
          v8_system_enums_objects_properties +
          v8_system_enums_exchange_plans +
          v8_system_enums_tabular_document +
          v8_system_enums_sheduler +
          v8_system_enums_formatted_document +
          v8_system_enums_query +
          v8_system_enums_report_builder +
          v8_system_enums_files +
          v8_system_enums_query_builder +
          v8_system_enums_data_analysis +
          v8_system_enums_xml_json_xs_dom_xdto_ws +
          v8_system_enums_data_composition_system +
          v8_system_enums_email +
          v8_system_enums_logbook +
          v8_system_enums_cryptography +
          v8_system_enums_zip +
          v8_system_enums_other +
          v8_system_enums_request_schema +
          v8_system_enums_properties_of_metadata_objects +
          v8_system_enums_differents;

        // v8 общие объекты (у объектов есть конструктор, экземпляры создаются методом НОВЫЙ) ==> type
        var v8_shared_object =
          'comобъект ftpсоединение httpзапрос httpсервисответ httpсоединение wsопределения wsпрокси xbase анализданных аннотацияxs ' +
          'блокировкаданных буфердвоичныхданных включениеxs выражениекомпоновкиданных генераторслучайныхчисел географическаясхема ' +
          'географическиекоординаты графическаясхема группамоделиxs данныерасшифровкикомпоновкиданных двоичныеданные дендрограмма ' +
          'диаграмма диаграммаганта диалогвыборафайла диалогвыборацвета диалогвыборашрифта диалограсписаниярегламентногозадания ' +
          'диалогредактированиястандартногопериода диапазон документdom документhtml документацияxs доставляемоеуведомление ' +
          'записьdom записьfastinfoset записьhtml записьjson записьxml записьzipфайла записьданных записьтекста записьузловdom ' +
          'запрос защищенноесоединениеopenssl значенияполейрасшифровкикомпоновкиданных извлечениетекста импортxs интернетпочта ' +
          'интернетпочтовоесообщение интернетпочтовыйпрофиль интернетпрокси интернетсоединение информациядляприложенияxs ' +
          'использованиеатрибутаxs использованиесобытияжурналарегистрации источникдоступныхнастроеккомпоновкиданных ' +
          'итераторузловdom картинка квалификаторыдаты квалификаторыдвоичныхданных квалификаторыстроки квалификаторычисла ' +
          'компоновщикмакетакомпоновкиданных компоновщикнастроеккомпоновкиданных конструктормакетаоформлениякомпоновкиданных ' +
          'конструкторнастроеккомпоновкиданных конструкторформатнойстроки линия макеткомпоновкиданных макетобластикомпоновкиданных ' +
          'макетоформлениякомпоновкиданных маскаxs менеджеркриптографии наборсхемxml настройкикомпоновкиданных настройкисериализацииjson ' +
          'обработкакартинок обработкарасшифровкикомпоновкиданных обходдереваdom объявлениеатрибутаxs объявлениенотацииxs ' +
          'объявлениеэлементаxs описаниеиспользованиясобытиядоступжурналарегистрации ' +
          'описаниеиспользованиясобытияотказвдоступежурналарегистрации описаниеобработкирасшифровкикомпоновкиданных ' +
          'описаниепередаваемогофайла описаниетипов определениегруппыатрибутовxs определениегруппымоделиxs ' +
          'определениеограниченияидентичностиxs определениепростоготипаxs определениесоставноготипаxs определениетипадокументаdom ' +
          'определенияxpathxs отборкомпоновкиданных пакетотображаемыхдокументов параметрвыбора параметркомпоновкиданных ' +
          'параметрызаписиjson параметрызаписиxml параметрычтенияxml переопределениеxs планировщик полеанализаданных ' +
          'полекомпоновкиданных построительdom построительзапроса построительотчета построительотчетаанализаданных ' +
          'построительсхемxml поток потоквпамяти почта почтовоесообщение преобразованиеxsl преобразованиекканоническомуxml ' +
          'процессорвыводарезультатакомпоновкиданныхвколлекциюзначений процессорвыводарезультатакомпоновкиданныхвтабличныйдокумент ' +
          'процессоркомпоновкиданных разыменовательпространствименdom рамка расписаниерегламентногозадания расширенноеимяxml ' +
          'результатчтенияданных своднаядиаграмма связьпараметравыбора связьпотипу связьпотипукомпоновкиданных сериализаторxdto ' +
          'сертификатклиентаwindows сертификатклиентафайл сертификаткриптографии сертификатыудостоверяющихцентровwindows ' +
          'сертификатыудостоверяющихцентровфайл сжатиеданных системнаяинформация сообщениепользователю сочетаниеклавиш ' +
          'сравнениезначений стандартнаядатаначала стандартныйпериод схемаxml схемакомпоновкиданных табличныйдокумент ' +
          'текстовыйдокумент тестируемоеприложение типданныхxml уникальныйидентификатор фабрикаxdto файл файловыйпоток ' +
          'фасетдлиныxs фасетколичестваразрядовдробнойчастиxs фасетмаксимальноговключающегозначенияxs ' +
          'фасетмаксимальногоисключающегозначенияxs фасетмаксимальнойдлиныxs фасетминимальноговключающегозначенияxs ' +
          'фасетминимальногоисключающегозначенияxs фасетминимальнойдлиныxs фасетобразцаxs фасетобщегоколичестваразрядовxs ' +
          'фасетперечисленияxs фасетпробельныхсимволовxs фильтрузловdom форматированнаястрока форматированныйдокумент ' +
          'фрагментxs хешированиеданных хранилищезначения цвет чтениеfastinfoset чтениеhtml чтениеjson чтениеxml чтениеzipфайла ' +
          'чтениеданных чтениетекста чтениеузловdom шрифт элементрезультатакомпоновкиданных ';

        // v8 универсальные коллекции значений ==> type
        var v8_universal_collection =
          'comsafearray деревозначений массив соответствие списокзначений структура таблицазначений фиксированнаяструктура ' +
          'фиксированноесоответствие фиксированныймассив ';

        // type : встроенные типы
        var TYPE = v8_shared_object + v8_universal_collection;

        // literal : примитивные типы
        var LITERAL = 'null истина ложь неопределено';

        // number : числа
        var NUMBERS = hljs.inherit(hljs.NUMBER_MODE);

        // string : строки
        var STRINGS = {
          className: 'string',
          begin: '"|\\|',
          end: '"|$',
          contains: [{ begin: '""' }]
        };

        // number : даты
        var DATE = {
          begin: "'",
          end: "'",
          excludeBegin: true,
          excludeEnd: true,
          contains: [
            {
              className: 'number',
              begin: '\\d{4}([\\.\\\\/:-]?\\d{2}){0,5}'
            }
          ]
        };

        // comment : комментарии
        var COMMENTS = hljs.inherit(hljs.C_LINE_COMMENT_MODE);

        // meta : инструкции препроцессора, директивы компиляции
        var META = {
          className: 'meta',
          lexemes: UNDERSCORE_IDENT_RE,
          begin: '#|&',
          end: '$',
          keywords: { 'meta-keyword': KEYWORD + METAKEYWORD },
          contains: [COMMENTS]
        };

        // symbol : метка goto
        var SYMBOL = {
          className: 'symbol',
          begin: '~',
          end: ';|:',
          excludeEnd: true
        };

        // function : объявление процедур и функций
        var FUNCTION = {
          className: 'function',
          lexemes: UNDERSCORE_IDENT_RE,
          variants: [
            {
              begin: 'процедура|функция',
              end: '\\)',
              keywords: 'процедура функция'
            },
            {
              begin: 'конецпроцедуры|конецфункции',
              keywords: 'конецпроцедуры конецфункции'
            }
          ],
          contains: [
            {
              begin: '\\(',
              end: '\\)',
              endsParent: true,
              contains: [
                {
                  className: 'params',
                  lexemes: UNDERSCORE_IDENT_RE,
                  begin: UNDERSCORE_IDENT_RE,
                  end: ',',
                  excludeEnd: true,
                  endsWithParent: true,
                  keywords: {
                    keyword: 'знач',
                    literal: LITERAL
                  },
                  contains: [NUMBERS, STRINGS, DATE]
                },
                COMMENTS
              ]
            },
            hljs.inherit(hljs.TITLE_MODE, { begin: UNDERSCORE_IDENT_RE })
          ]
        };

        return {
          case_insensitive: true,
          lexemes: UNDERSCORE_IDENT_RE,
          keywords: {
            keyword: KEYWORD,
            built_in: BUILTIN,
            class: CLASS,
            type: TYPE,
            literal: LITERAL
          },
          contains: [META, FUNCTION, COMMENTS, SYMBOL, NUMBERS, STRINGS, DATE]
        };
      };

      /***/
    },
    /* 348 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var regexes = {
          ruleDeclaration: '^[a-zA-Z][a-zA-Z0-9-]*',
          unexpectedChars: "[!@#$^&',?+~`|:]"
        };

        var keywords = [
          'ALPHA',
          'BIT',
          'CHAR',
          'CR',
          'CRLF',
          'CTL',
          'DIGIT',
          'DQUOTE',
          'HEXDIG',
          'HTAB',
          'LF',
          'LWSP',
          'OCTET',
          'SP',
          'VCHAR',
          'WSP'
        ];

        var commentMode = hljs.COMMENT(';', '$');

        var terminalBinaryMode = {
          className: 'symbol',
          begin: /%b[0-1]+(-[0-1]+|(\.[0-1]+)+){0,1}/
        };

        var terminalDecimalMode = {
          className: 'symbol',
          begin: /%d[0-9]+(-[0-9]+|(\.[0-9]+)+){0,1}/
        };

        var terminalHexadecimalMode = {
          className: 'symbol',
          begin: /%x[0-9A-F]+(-[0-9A-F]+|(\.[0-9A-F]+)+){0,1}/
        };

        var caseSensitivityIndicatorMode = {
          className: 'symbol',
          begin: /%[si]/
        };

        var ruleDeclarationMode = {
          begin: regexes.ruleDeclaration + '\\s*=',
          returnBegin: true,
          end: /=/,
          relevance: 0,
          contains: [{ className: 'attribute', begin: regexes.ruleDeclaration }]
        };

        return {
          illegal: regexes.unexpectedChars,
          keywords: keywords.join(' '),
          contains: [
            ruleDeclarationMode,
            commentMode,
            terminalBinaryMode,
            terminalDecimalMode,
            terminalHexadecimalMode,
            caseSensitivityIndicatorMode,
            hljs.QUOTE_STRING_MODE,
            hljs.NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 349 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            // IP
            {
              className: 'number',
              begin:
                '\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b'
            },
            // Other numbers
            {
              className: 'number',
              begin: '\\b\\d+\\b',
              relevance: 0
            },
            // Requests
            {
              className: 'string',
              begin: '"(GET|POST|HEAD|PUT|DELETE|CONNECT|OPTIONS|PATCH|TRACE)',
              end: '"',
              keywords: 'GET POST HEAD PUT DELETE CONNECT OPTIONS PATCH TRACE',
              illegal: '\\n',
              relevance: 10
            },
            // Dates
            {
              className: 'string',
              begin: /\[/,
              end: /\]/,
              illegal: '\\n'
            },
            // Strings
            {
              className: 'string',
              begin: '"',
              end: '"',
              illegal: '\\n'
            }
          ]
        };
      };

      /***/
    },
    /* 350 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';
        var IDENT_FUNC_RETURN_TYPE_RE = '([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)';

        var AS3_REST_ARG_MODE = {
          className: 'rest_arg',
          begin: '[.]{3}',
          end: IDENT_RE,
          relevance: 10
        };

        return {
          aliases: ['as'],
          keywords: {
            keyword:
              'as break case catch class const continue default delete do dynamic each ' +
              'else extends final finally for function get if implements import in include ' +
              'instanceof interface internal is namespace native new override package private ' +
              'protected public return set static super switch this throw try typeof use var void ' +
              'while with',
            literal: 'true false null undefined'
          },
          contains: [
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.C_NUMBER_MODE,
            {
              className: 'class',
              beginKeywords: 'package',
              end: '{',
              contains: [hljs.TITLE_MODE]
            },
            {
              className: 'class',
              beginKeywords: 'class interface',
              end: '{',
              excludeEnd: true,
              contains: [
                {
                  beginKeywords: 'extends implements'
                },
                hljs.TITLE_MODE
              ]
            },
            {
              className: 'meta',
              beginKeywords: 'import include',
              end: ';',
              keywords: { 'meta-keyword': 'import include' }
            },
            {
              className: 'function',
              beginKeywords: 'function',
              end: '[{;]',
              excludeEnd: true,
              illegal: '\\S',
              contains: [
                hljs.TITLE_MODE,
                {
                  className: 'params',
                  begin: '\\(',
                  end: '\\)',
                  contains: [
                    hljs.APOS_STRING_MODE,
                    hljs.QUOTE_STRING_MODE,
                    hljs.C_LINE_COMMENT_MODE,
                    hljs.C_BLOCK_COMMENT_MODE,
                    AS3_REST_ARG_MODE
                  ]
                },
                {
                  begin: ':\\s*' + IDENT_FUNC_RETURN_TYPE_RE
                }
              ]
            },
            hljs.METHOD_GUARD
          ],
          illegal: /#/
        };
      };

      /***/
    },
    /* 351 */
    /***/ function(module, exports) {
      module.exports = // We try to support full Ada2012
        //
        // We highlight all appearances of types, keywords, literals (string, char, number, bool)
        // and titles (user defined function/procedure/package)
        // CSS classes are set accordingly
        //
        // Languages causing problems for language detection:
        // xml (broken by Foo : Bar type), elm (broken by Foo : Bar type), vbscript-html (broken by body keyword)
        // sql (ada default.txt has a lot of sql keywords)

        function(hljs) {
          // Regular expression for Ada numeric literals.
          // stolen form the VHDL highlighter

          // Decimal literal:
          var INTEGER_RE = '\\d(_|\\d)*';
          var EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;
          var DECIMAL_LITERAL_RE =
            INTEGER_RE + '(\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?';

          // Based literal:
          var BASED_INTEGER_RE = '\\w+';
          var BASED_LITERAL_RE =
            INTEGER_RE +
            '#' +
            BASED_INTEGER_RE +
            '(\\.' +
            BASED_INTEGER_RE +
            ')?' +
            '#' +
            '(' +
            EXPONENT_RE +
            ')?';

          var NUMBER_RE =
            '\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';

          // Identifier regex
          var ID_REGEX = '[A-Za-z](_?[A-Za-z0-9.])*';

          // bad chars, only allowed in literals
          var BAD_CHARS = '[]{}%#\'"';

          // Ada doesn't have block comments, only line comments
          var COMMENTS = hljs.COMMENT('--', '$');

          // variable declarations of the form
          // Foo : Bar := Baz;
          // where only Bar will be highlighted
          var VAR_DECLS = {
            // TODO: These spaces are not required by the Ada syntax
            // however, I have yet to see handwritten Ada code where
            // someone does not put spaces around :
            begin: '\\s+:\\s+',
            end: '\\s*(:=|;|\\)|=>|$)',
            // endsWithParent: true,
            // returnBegin: true,
            illegal: BAD_CHARS,
            contains: [
              {
                // workaround to avoid highlighting
                // named loops and declare blocks
                beginKeywords: 'loop for declare others',
                endsParent: true
              },
              {
                // properly highlight all modifiers
                className: 'keyword',
                beginKeywords:
                  'not null constant access function procedure in out aliased exception'
              },
              {
                className: 'type',
                begin: ID_REGEX,
                endsParent: true,
                relevance: 0
              }
            ]
          };

          return {
            case_insensitive: true,
            keywords: {
              keyword:
                'abort else new return abs elsif not reverse abstract end ' +
                'accept entry select access exception of separate aliased exit or some ' +
                'all others subtype and for out synchronized array function overriding ' +
                'at tagged generic package task begin goto pragma terminate ' +
                'body private then if procedure type case in protected constant interface ' +
                'is raise use declare range delay limited record when delta loop rem while ' +
                'digits renames with do mod requeue xor',
              literal: 'True False'
            },
            contains: [
              COMMENTS,
              // strings "foobar"
              {
                className: 'string',
                begin: /"/,
                end: /"/,
                contains: [{ begin: /""/, relevance: 0 }]
              },
              // characters ''
              {
                // character literals always contain one char
                className: 'string',
                begin: /'.'/
              },
              {
                // number literals
                className: 'number',
                begin: NUMBER_RE,
                relevance: 0
              },
              {
                // Attributes
                className: 'symbol',
                begin: "'" + ID_REGEX
              },
              {
                // package definition, maybe inside generic
                className: 'title',
                begin:
                  '(\\bwith\\s+)?(\\bprivate\\s+)?\\bpackage\\s+(\\bbody\\s+)?',
                end: '(is|$)',
                keywords: 'package body',
                excludeBegin: true,
                excludeEnd: true,
                illegal: BAD_CHARS
              },
              {
                // function/procedure declaration/definition
                // maybe inside generic
                begin: '(\\b(with|overriding)\\s+)?\\b(function|procedure)\\s+',
                end: '(\\bis|\\bwith|\\brenames|\\)\\s*;)',
                keywords:
                  'overriding function procedure with is renames return',
                // we need to re-match the 'function' keyword, so that
                // the title mode below matches only exactly once
                returnBegin: true,
                contains: [
                  COMMENTS,
                  {
                    // name of the function/procedure
                    className: 'title',
                    begin: '(\\bwith\\s+)?\\b(function|procedure)\\s+',
                    end: '(\\(|\\s+|$)',
                    excludeBegin: true,
                    excludeEnd: true,
                    illegal: BAD_CHARS
                  },
                  // 'self'
                  // // parameter types
                  VAR_DECLS,
                  {
                    // return type
                    className: 'type',
                    begin: '\\breturn\\s+',
                    end: '(\\s+|;|$)',
                    keywords: 'return',
                    excludeBegin: true,
                    excludeEnd: true,
                    // we are done with functions
                    endsParent: true,
                    illegal: BAD_CHARS
                  }
                ]
              },
              {
                // new type declarations
                // maybe inside generic
                className: 'type',
                begin: '\\b(sub)?type\\s+',
                end: '\\s+',
                keywords: 'type',
                excludeBegin: true,
                illegal: BAD_CHARS
              },

              // see comment above the definition
              VAR_DECLS

              // no markup
              // relevance boosters for small snippets
              // {begin: '\\s*=>\\s*'},
              // {begin: '\\s*:=\\s*'},
              // {begin: '\\s+:=\\s+'},
            ]
          };
        };

      /***/
    },
    /* 352 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var builtInTypeMode = {
          className: 'built_in',
          begin:
            '\\b(void|bool|int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|string|ref|array|double|float|auto|dictionary)'
        };

        var objectHandleMode = {
          className: 'symbol',
          begin: '[a-zA-Z0-9_]+@'
        };

        var genericMode = {
          className: 'keyword',
          begin: '<',
          end: '>',
          contains: [builtInTypeMode, objectHandleMode]
        };

        builtInTypeMode.contains = [genericMode];
        objectHandleMode.contains = [genericMode];

        return {
          aliases: ['asc'],

          keywords:
            'for in|0 break continue while do|0 return if else case switch namespace is cast ' +
            'or and xor not get|0 in inout|10 out override set|0 private public const default|0 ' +
            'final shared external mixin|10 enum typedef funcdef this super import from interface ' +
            'abstract|0 try catch protected explicit',

          // avoid close detection with C# and JS
          illegal: '(^using\\s+[A-Za-z0-9_\\.]+;$|\\bfunctions*[^\\(])',

          contains: [
            {
              // 'strings'
              className: 'string',
              begin: "'",
              end: "'",
              illegal: '\\n',
              contains: [hljs.BACKSLASH_ESCAPE],
              relevance: 0
            },

            {
              // "strings"
              className: 'string',
              begin: '"',
              end: '"',
              illegal: '\\n',
              contains: [hljs.BACKSLASH_ESCAPE],
              relevance: 0
            },

            // """heredoc strings"""
            {
              className: 'string',
              begin: '"""',
              end: '"""'
            },

            hljs.C_LINE_COMMENT_MODE, // single-line comments
            hljs.C_BLOCK_COMMENT_MODE, // comment blocks

            {
              // interface or namespace declaration
              beginKeywords: 'interface namespace',
              end: '{',
              illegal: '[;.\\-]',
              contains: [
                {
                  // interface or namespace name
                  className: 'symbol',
                  begin: '[a-zA-Z0-9_]+'
                }
              ]
            },

            {
              // class declaration
              beginKeywords: 'class',
              end: '{',
              illegal: '[;.\\-]',
              contains: [
                {
                  // class name
                  className: 'symbol',
                  begin: '[a-zA-Z0-9_]+',
                  contains: [
                    {
                      begin: '[:,]\\s*',
                      contains: [
                        {
                          className: 'symbol',
                          begin: '[a-zA-Z0-9_]+'
                        }
                      ]
                    }
                  ]
                }
              ]
            },

            builtInTypeMode, // built-in types
            objectHandleMode, // object handles

            {
              // literals
              className: 'literal',
              begin: '\\b(null|true|false)'
            },

            {
              // numbers
              className: 'number',
              begin:
                '(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?f?|\\.\\d+f?)([eE][-+]?\\d+f?)?)'
            }
          ]
        };
      };

      /***/
    },
    /* 353 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var NUMBER = { className: 'number', begin: '[\\$%]\\d+' };
        return {
          aliases: ['apacheconf'],
          case_insensitive: true,
          contains: [
            hljs.HASH_COMMENT_MODE,
            { className: 'section', begin: '</?', end: '>' },
            {
              className: 'attribute',
              begin: /\w+/,
              relevance: 0,
              // keywords aren’t needed for highlighting per se, they only boost relevance
              // for a very generally defined mode (starts with a word, ends with line-end
              keywords: {
                nomarkup:
                  'order deny allow setenv rewriterule rewriteengine rewritecond documentroot ' +
                  'sethandler errordocument loadmodule options header listen serverroot ' +
                  'servername'
              },
              starts: {
                end: /$/,
                relevance: 0,
                keywords: {
                  literal: 'on off all'
                },
                contains: [
                  {
                    className: 'meta',
                    begin: '\\s\\[',
                    end: '\\]$'
                  },
                  {
                    className: 'variable',
                    begin: '[\\$%]\\{',
                    end: '\\}',
                    contains: ['self', NUMBER]
                  },
                  NUMBER,
                  hljs.QUOTE_STRING_MODE
                ]
              }
            }
          ],
          illegal: /\S/
        };
      };

      /***/
    },
    /* 354 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: '' });
        var PARAMS = {
          className: 'params',
          begin: '\\(',
          end: '\\)',
          contains: ['self', hljs.C_NUMBER_MODE, STRING]
        };
        var COMMENT_MODE_1 = hljs.COMMENT('--', '$');
        var COMMENT_MODE_2 = hljs.COMMENT('\\(\\*', '\\*\\)', {
          contains: ['self', COMMENT_MODE_1] //allow nesting
        });
        var COMMENTS = [COMMENT_MODE_1, COMMENT_MODE_2, hljs.HASH_COMMENT_MODE];

        return {
          aliases: ['osascript'],
          keywords: {
            keyword:
              'about above after against and around as at back before beginning ' +
              'behind below beneath beside between but by considering ' +
              'contain contains continue copy div does eighth else end equal ' +
              'equals error every exit fifth first for fourth from front ' +
              'get given global if ignoring in into is it its last local me ' +
              'middle mod my ninth not of on onto or over prop property put ref ' +
              'reference repeat returning script second set seventh since ' +
              'sixth some tell tenth that the|0 then third through thru ' +
              'timeout times to transaction try until where while whose with ' +
              'without',
            literal:
              'AppleScript false linefeed return pi quote result space tab true',
            built_in:
              'alias application boolean class constant date file integer list ' +
              'number real record string text ' +
              'activate beep count delay launch log offset read round ' +
              'run say summarize write ' +
              'character characters contents day frontmost id item length ' +
              'month name paragraph paragraphs rest reverse running time version ' +
              'weekday word words year'
          },
          contains: [
            STRING,
            hljs.C_NUMBER_MODE,
            {
              className: 'built_in',
              begin:
                '\\b(clipboard info|the clipboard|info for|list (disks|folder)|' +
                'mount volume|path to|(close|open for) access|(get|set) eof|' +
                'current date|do shell script|get volume settings|random number|' +
                'set volume|system attribute|system info|time to GMT|' +
                '(load|run|store) script|scripting components|' +
                'ASCII (character|number)|localized string|' +
                'choose (application|color|file|file name|' +
                'folder|from list|remote application|URL)|' +
                'display (alert|dialog))\\b|^\\s*return\\b'
            },
            {
              className: 'literal',
              begin:
                '\\b(text item delimiters|current application|missing value)\\b'
            },
            {
              className: 'keyword',
              begin:
                '\\b(apart from|aside from|instead of|out of|greater than|' +
                "isn't|(doesn't|does not) (equal|come before|come after|contain)|" +
                '(greater|less) than( or equal)?|(starts?|ends|begins?) with|' +
                'contained by|comes (before|after)|a (ref|reference)|POSIX file|' +
                'POSIX path|(date|time) string|quoted form)\\b'
            },
            {
              beginKeywords: 'on',
              illegal: '[${=;\\n]',
              contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]
            }
          ].concat(COMMENTS),
          illegal: '//|->|=>|\\[\\['
        };
      };

      /***/
    },
    /* 355 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENT_RE = '[A-Za-z_][0-9A-Za-z_]*';
        var KEYWORDS = {
          keyword: 'if for while var new function do return void else break',
          literal:
            'true false null undefined NaN Infinity PI BackSlash DoubleQuote ForwardSlash NewLine SingleQuote Tab',
          built_in:
            'Abs Acos Area AreaGeodetic Asin Atan Atan2 Average Boolean Buffer BufferGeodetic ' +
            'Ceil Centroid Clip Console Constrain Contains Cos Count Crosses Cut Date DateAdd ' +
            'DateDiff Day Decode DefaultValue Dictionary Difference Disjoint Distance Distinct ' +
            'DomainCode DomainName Equals Exp Extent Feature FeatureSet FeatureSetById FeatureSetByTitle ' +
            'FeatureSetByUrl Filter First Floor Geometry Guid HasKey Hour IIf IndexOf Intersection ' +
            'Intersects IsEmpty Length LengthGeodetic Log Max Mean Millisecond Min Minute Month ' +
            'MultiPartToSinglePart Multipoint NextSequenceValue Now Number OrderBy Overlaps Point Polygon ' +
            'Polyline Pow Random Relate Reverse Round Second SetGeometry Sin Sort Sqrt Stdev Sum ' +
            'SymmetricDifference Tan Text Timestamp Today ToLocal Top Touches ToUTC TypeOf Union Variance ' +
            'Weekday When Within Year '
        };
        var EXPRESSIONS;
        var SYMBOL = {
          className: 'symbol',
          begin: '\\$[feature|layer|map|value|view]+'
        };
        var NUMBER = {
          className: 'number',
          variants: [
            { begin: '\\b(0[bB][01]+)' },
            { begin: '\\b(0[oO][0-7]+)' },
            { begin: hljs.C_NUMBER_RE }
          ],
          relevance: 0
        };
        var SUBST = {
          className: 'subst',
          begin: '\\$\\{',
          end: '\\}',
          keywords: KEYWORDS,
          contains: [] // defined later
        };
        var TEMPLATE_STRING = {
          className: 'string',
          begin: '`',
          end: '`',
          contains: [hljs.BACKSLASH_ESCAPE, SUBST]
        };
        SUBST.contains = [
          hljs.APOS_STRING_MODE,
          hljs.QUOTE_STRING_MODE,
          TEMPLATE_STRING,
          NUMBER,
          hljs.REGEXP_MODE
        ];
        var PARAMS_CONTAINS = SUBST.contains.concat([
          hljs.C_BLOCK_COMMENT_MODE,
          hljs.C_LINE_COMMENT_MODE
        ]);

        return {
          aliases: ['arcade'],
          keywords: KEYWORDS,
          contains: [
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            TEMPLATE_STRING,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            SYMBOL,
            NUMBER,
            {
              // object attr container
              begin: /[{,]\s*/,
              relevance: 0,
              contains: [
                {
                  begin: IDENT_RE + '\\s*:',
                  returnBegin: true,
                  relevance: 0,
                  contains: [
                    { className: 'attr', begin: IDENT_RE, relevance: 0 }
                  ]
                }
              ]
            },
            {
              // "value" container
              begin: '(' + hljs.RE_STARTERS_RE + '|\\b(return)\\b)\\s*',
              keywords: 'return',
              contains: [
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                hljs.REGEXP_MODE,
                {
                  className: 'function',
                  begin: '(\\(.*?\\)|' + IDENT_RE + ')\\s*=>',
                  returnBegin: true,
                  end: '\\s*=>',
                  contains: [
                    {
                      className: 'params',
                      variants: [
                        {
                          begin: IDENT_RE
                        },
                        {
                          begin: /\(\s*\)/
                        },
                        {
                          begin: /\(/,
                          end: /\)/,
                          excludeBegin: true,
                          excludeEnd: true,
                          keywords: KEYWORDS,
                          contains: PARAMS_CONTAINS
                        }
                      ]
                    }
                  ]
                }
              ],
              relevance: 0
            },
            {
              className: 'function',
              beginKeywords: 'function',
              end: /\{/,
              excludeEnd: true,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE }),
                {
                  className: 'params',
                  begin: /\(/,
                  end: /\)/,
                  excludeBegin: true,
                  excludeEnd: true,
                  contains: PARAMS_CONTAINS
                }
              ],
              illegal: /\[|%/
            },
            {
              begin: /\$[(.]/
            }
          ],
          illegal: /#(?!!)/
        };
      };

      /***/
    },
    /* 356 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var CPP_PRIMITIVE_TYPES = {
          className: 'keyword',
          begin: '\\b[a-z\\d_]*_t\\b'
        };

        var STRINGS = {
          className: 'string',
          variants: [
            {
              begin: '(u8?|U|L)?"',
              end: '"',
              illegal: '\\n',
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              // TODO: This does not handle raw string literals with prefixes. Using
              // a single regex with backreferences would work (note to use *?
              // instead of * to make it non-greedy), but the mode.terminators
              // computation in highlight.js breaks the counting.
              begin: '(u8?|U|L)?R"\\(',
              end: '\\)"'
            },
            {
              begin: "'\\\\?.",
              end: "'",
              illegal: '.'
            }
          ]
        };

        var NUMBERS = {
          className: 'number',
          variants: [
            { begin: "\\b(0b[01']+)" },
            {
              begin:
                "(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)(u|U|l|L|ul|UL|f|F|b|B)"
            },
            {
              begin:
                "(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"
            }
          ],
          relevance: 0
        };

        var PREPROCESSOR = {
          className: 'meta',
          begin: /#\s*[a-z]+\b/,
          end: /$/,
          keywords: {
            'meta-keyword':
              'if else elif endif define undef warning error line ' +
              'pragma ifdef ifndef include'
          },
          contains: [
            {
              begin: /\\\n/,
              relevance: 0
            },
            hljs.inherit(STRINGS, { className: 'meta-string' }),
            {
              className: 'meta-string',
              begin: /<[^\n>]*>/,
              end: /$/,
              illegal: '\\n'
            },
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE
          ]
        };

        var FUNCTION_TITLE = hljs.IDENT_RE + '\\s*\\(';

        var CPP_KEYWORDS = {
          keyword:
            'int float while private char catch import module export virtual operator sizeof ' +
            'dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace ' +
            'unsigned long volatile static protected bool template mutable if public friend ' +
            'do goto auto void enum else break extern using asm case typeid ' +
            'short reinterpret_cast|10 default double register explicit signed typename try this ' +
            'switch continue inline delete alignof constexpr decltype ' +
            'noexcept static_assert thread_local restrict _Bool complex _Complex _Imaginary ' +
            'atomic_bool atomic_char atomic_schar ' +
            'atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong ' +
            'atomic_ullong new throw return ' +
            'and or not',
          built_in:
            'std string cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream ' +
            'auto_ptr deque list queue stack vector map set bitset multiset multimap unordered_set ' +
            'unordered_map unordered_multiset unordered_multimap array shared_ptr abort abs acos ' +
            'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp ' +
            'fscanf isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper ' +
            'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow ' +
            'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp ' +
            'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan ' +
            'vfprintf vprintf vsprintf endl initializer_list unique_ptr',
          literal: 'true false nullptr NULL'
        };

        var EXPRESSION_CONTAINS = [
          CPP_PRIMITIVE_TYPES,
          hljs.C_LINE_COMMENT_MODE,
          hljs.C_BLOCK_COMMENT_MODE,
          NUMBERS,
          STRINGS
        ];

        return {
          aliases: ['c', 'cc', 'h', 'c++', 'h++', 'hpp'],
          keywords: CPP_KEYWORDS,
          illegal: '</',
          contains: EXPRESSION_CONTAINS.concat([
            PREPROCESSOR,
            {
              begin:
                '\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*<',
              end: '>',
              keywords: CPP_KEYWORDS,
              contains: ['self', CPP_PRIMITIVE_TYPES]
            },
            {
              begin: hljs.IDENT_RE + '::',
              keywords: CPP_KEYWORDS
            },
            {
              // This mode covers expression context where we can't expect a function
              // definition and shouldn't highlight anything that looks like one:
              // `return some()`, `else if()`, `(x*sum(1, 2))`
              variants: [
                { begin: /=/, end: /;/ },
                { begin: /\(/, end: /\)/ },
                { beginKeywords: 'new throw return else', end: /;/ }
              ],
              keywords: CPP_KEYWORDS,
              contains: EXPRESSION_CONTAINS.concat([
                {
                  begin: /\(/,
                  end: /\)/,
                  keywords: CPP_KEYWORDS,
                  contains: EXPRESSION_CONTAINS.concat(['self']),
                  relevance: 0
                }
              ]),
              relevance: 0
            },
            {
              className: 'function',
              begin: '(' + hljs.IDENT_RE + '[\\*&\\s]+)+' + FUNCTION_TITLE,
              returnBegin: true,
              end: /[{;=]/,
              excludeEnd: true,
              keywords: CPP_KEYWORDS,
              illegal: /[^\w\s\*&]/,
              contains: [
                {
                  begin: FUNCTION_TITLE,
                  returnBegin: true,
                  contains: [hljs.TITLE_MODE],
                  relevance: 0
                },
                {
                  className: 'params',
                  begin: /\(/,
                  end: /\)/,
                  keywords: CPP_KEYWORDS,
                  relevance: 0,
                  contains: [
                    hljs.C_LINE_COMMENT_MODE,
                    hljs.C_BLOCK_COMMENT_MODE,
                    STRINGS,
                    NUMBERS,
                    CPP_PRIMITIVE_TYPES,
                    // Count matching parentheses.
                    {
                      begin: /\(/,
                      end: /\)/,
                      keywords: CPP_KEYWORDS,
                      relevance: 0,
                      contains: [
                        'self',
                        hljs.C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE,
                        STRINGS,
                        NUMBERS,
                        CPP_PRIMITIVE_TYPES
                      ]
                    }
                  ]
                },
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                PREPROCESSOR
              ]
            },
            {
              className: 'class',
              beginKeywords: 'class struct',
              end: /[{;:]/,
              contains: [
                { begin: /</, end: />/, contains: ['self'] }, // skip generic stuff
                hljs.TITLE_MODE
              ]
            }
          ]),
          exports: {
            preprocessor: PREPROCESSOR,
            strings: STRINGS,
            keywords: CPP_KEYWORDS
          }
        };
      };

      /***/
    },
    /* 357 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var CPP = hljs.getLanguage('cpp').exports;
        return {
          keywords: {
            keyword:
              'boolean byte word string String array ' + CPP.keywords.keyword,
            built_in:
              'setup loop while catch for if do goto try switch case else ' +
              'default break continue return ' +
              'KeyboardController MouseController SoftwareSerial ' +
              'EthernetServer EthernetClient LiquidCrystal ' +
              'RobotControl GSMVoiceCall EthernetUDP EsploraTFT ' +
              'HttpClient RobotMotor WiFiClient GSMScanner ' +
              'FileSystem Scheduler GSMServer YunClient YunServer ' +
              'IPAddress GSMClient GSMModem Keyboard Ethernet ' +
              'Console GSMBand Esplora Stepper Process ' +
              'WiFiUDP GSM_SMS Mailbox USBHost Firmata PImage ' +
              'Client Server GSMPIN FileIO Bridge Serial ' +
              'EEPROM Stream Mouse Audio Servo File Task ' +
              'GPRS WiFi Wire TFT GSM SPI SD ' +
              'runShellCommandAsynchronously analogWriteResolution ' +
              'retrieveCallingNumber printFirmwareVersion ' +
              'analogReadResolution sendDigitalPortPair ' +
              'noListenOnLocalhost readJoystickButton setFirmwareVersion ' +
              'readJoystickSwitch scrollDisplayRight getVoiceCallStatus ' +
              'scrollDisplayLeft writeMicroseconds delayMicroseconds ' +
              'beginTransmission getSignalStrength runAsynchronously ' +
              'getAsynchronously listenOnLocalhost getCurrentCarrier ' +
              'readAccelerometer messageAvailable sendDigitalPorts ' +
              'lineFollowConfig countryNameWrite runShellCommand ' +
              'readStringUntil rewindDirectory readTemperature ' +
              'setClockDivider readLightSensor endTransmission ' +
              'analogReference detachInterrupt countryNameRead ' +
              'attachInterrupt encryptionType readBytesUntil ' +
              'robotNameWrite readMicrophone robotNameRead cityNameWrite ' +
              'userNameWrite readJoystickY readJoystickX mouseReleased ' +
              'openNextFile scanNetworks noInterrupts digitalWrite ' +
              'beginSpeaker mousePressed isActionDone mouseDragged ' +
              'displayLogos noAutoscroll addParameter remoteNumber ' +
              'getModifiers keyboardRead userNameRead waitContinue ' +
              'processInput parseCommand printVersion readNetworks ' +
              'writeMessage blinkVersion cityNameRead readMessage ' +
              'setDataMode parsePacket isListening setBitOrder ' +
              'beginPacket isDirectory motorsWrite drawCompass ' +
              'digitalRead clearScreen serialEvent rightToLeft ' +
              'setTextSize leftToRight requestFrom keyReleased ' +
              'compassRead analogWrite interrupts WiFiServer ' +
              'disconnect playMelody parseFloat autoscroll ' +
              'getPINUsed setPINUsed setTimeout sendAnalog ' +
              'readSlider analogRead beginWrite createChar ' +
              'motorsStop keyPressed tempoWrite readButton ' +
              'subnetMask debugPrint macAddress writeGreen ' +
              'randomSeed attachGPRS readString sendString ' +
              'remotePort releaseAll mouseMoved background ' +
              'getXChange getYChange answerCall getResult ' +
              'voiceCall endPacket constrain getSocket writeJSON ' +
              'getButton available connected findUntil readBytes ' +
              'exitValue readGreen writeBlue startLoop IPAddress ' +
              'isPressed sendSysex pauseMode gatewayIP setCursor ' +
              'getOemKey tuneWrite noDisplay loadImage switchPIN ' +
              'onRequest onReceive changePIN playFile noBuffer ' +
              'parseInt overflow checkPIN knobRead beginTFT ' +
              'bitClear updateIR bitWrite position writeRGB ' +
              'highByte writeRed setSpeed readBlue noStroke ' +
              'remoteIP transfer shutdown hangCall beginSMS ' +
              'endWrite attached maintain noCursor checkReg ' +
              'checkPUK shiftOut isValid shiftIn pulseIn ' +
              'connect println localIP pinMode getIMEI ' +
              'display noBlink process getBand running beginSD ' +
              'drawBMP lowByte setBand release bitRead prepare ' +
              'pointTo readRed setMode noFill remove listen ' +
              'stroke detach attach noTone exists buffer ' +
              'height bitSet circle config cursor random ' +
              'IRread setDNS endSMS getKey micros ' +
              'millis begin print write ready flush width ' +
              'isPIN blink clear press mkdir rmdir close ' +
              'point yield image BSSID click delay ' +
              'read text move peek beep rect line open ' +
              'seek fill size turn stop home find ' +
              'step tone sqrt RSSI SSID ' +
              'end bit tan cos sin pow map abs max ' +
              'min get run put',
            literal:
              'DIGITAL_MESSAGE FIRMATA_STRING ANALOG_MESSAGE ' +
              'REPORT_DIGITAL REPORT_ANALOG INPUT_PULLUP ' +
              'SET_PIN_MODE INTERNAL2V56 SYSTEM_RESET LED_BUILTIN ' +
              'INTERNAL1V1 SYSEX_START INTERNAL EXTERNAL ' +
              'DEFAULT OUTPUT INPUT HIGH LOW'
          },
          contains: [
            CPP.preprocessor,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 358 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        //local labels: %?[FB]?[AT]?\d{1,2}\w+
        return {
          case_insensitive: true,
          aliases: ['arm'],
          lexemes: '\\.?' + hljs.IDENT_RE,
          keywords: {
            meta:
              //GNU preprocs
              '.2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .arm .thumb .code16 .code32 .force_thumb .thumb_func .ltorg ' +
              //ARM directives
              'ALIAS ALIGN ARM AREA ASSERT ATTR CN CODE CODE16 CODE32 COMMON CP DATA DCB DCD DCDU DCDO DCFD DCFDU DCI DCQ DCQU DCW DCWU DN ELIF ELSE END ENDFUNC ENDIF ENDP ENTRY EQU EXPORT EXPORTAS EXTERN FIELD FILL FUNCTION GBLA GBLL GBLS GET GLOBAL IF IMPORT INCBIN INCLUDE INFO KEEP LCLA LCLL LCLS LTORG MACRO MAP MEND MEXIT NOFP OPT PRESERVE8 PROC QN READONLY RELOC REQUIRE REQUIRE8 RLIST FN ROUT SETA SETL SETS SN SPACE SUBT THUMB THUMBX TTL WHILE WEND ',
            built_in:
              'r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 ' + //standard registers
              'pc lr sp ip sl sb fp ' + //typical regs plus backward compatibility
              'a1 a2 a3 a4 v1 v2 v3 v4 v5 v6 v7 v8 f0 f1 f2 f3 f4 f5 f6 f7 ' + //more regs and fp
              'p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 ' + //coprocessor regs
              'c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 ' + //more coproc
              'q0 q1 q2 q3 q4 q5 q6 q7 q8 q9 q10 q11 q12 q13 q14 q15 ' + //advanced SIMD NEON regs
              //program status registers
              'cpsr_c cpsr_x cpsr_s cpsr_f cpsr_cx cpsr_cxs cpsr_xs cpsr_xsf cpsr_sf cpsr_cxsf ' +
              'spsr_c spsr_x spsr_s spsr_f spsr_cx spsr_cxs spsr_xs spsr_xsf spsr_sf spsr_cxsf ' +
              //NEON and VFP registers
              's0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 ' +
              's16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 ' +
              'd0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 ' +
              'd16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 d30 d31 ' +
              '{PC} {VAR} {TRUE} {FALSE} {OPT} {CONFIG} {ENDIAN} {CODESIZE} {CPU} {FPU} {ARCHITECTURE} {PCSTOREOFFSET} {ARMASM_VERSION} {INTER} {ROPI} {RWPI} {SWST} {NOSWST} . @'
          },
          contains: [
            {
              className: 'keyword',
              begin:
                '\\b(' + //mnemonics
                'adc|' +
                '(qd?|sh?|u[qh]?)?add(8|16)?|usada?8|(q|sh?|u[qh]?)?(as|sa)x|' +
                'and|adrl?|sbc|rs[bc]|asr|b[lx]?|blx|bxj|cbn?z|tb[bh]|bic|' +
                'bfc|bfi|[su]bfx|bkpt|cdp2?|clz|clrex|cmp|cmn|cpsi[ed]|cps|' +
                'setend|dbg|dmb|dsb|eor|isb|it[te]{0,3}|lsl|lsr|ror|rrx|' +
                'ldm(([id][ab])|f[ds])?|ldr((s|ex)?[bhd])?|movt?|mvn|mra|mar|' +
                'mul|[us]mull|smul[bwt][bt]|smu[as]d|smmul|smmla|' +
                'mla|umlaal|smlal?([wbt][bt]|d)|mls|smlsl?[ds]|smc|svc|sev|' +
                'mia([bt]{2}|ph)?|mrr?c2?|mcrr2?|mrs|msr|orr|orn|pkh(tb|bt)|rbit|' +
                'rev(16|sh)?|sel|[su]sat(16)?|nop|pop|push|rfe([id][ab])?|' +
                'stm([id][ab])?|str(ex)?[bhd]?|(qd?)?sub|(sh?|q|u[qh]?)?sub(8|16)|' +
                '[su]xt(a?h|a?b(16)?)|srs([id][ab])?|swpb?|swi|smi|tst|teq|' +
                'wfe|wfi|yield' +
                ')' +
                '(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al|hs|lo)?' + //condition codes
                '[sptrx]?', //legal postfixes
              end: '\\s'
            },
            hljs.COMMENT('[;@]', '$', { relevance: 0 }),
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: 'string',
              begin: "'",
              end: "[^\\\\]'",
              relevance: 0
            },
            {
              className: 'title',
              begin: '\\|',
              end: '\\|',
              illegal: '\\n',
              relevance: 0
            },
            {
              className: 'number',
              variants: [
                { begin: '[#$=]?0x[0-9a-f]+' }, //hex
                { begin: '[#$=]?0b[01]+' }, //bin
                { begin: '[#$=]\\d+' }, //literal
                { begin: '\\b\\d+' } //bare number
              ],
              relevance: 0
            },
            {
              className: 'symbol',
              variants: [
                { begin: '^[a-z_\\.\\$][a-z0-9_\\.\\$]+' }, //ARM syntax
                { begin: '^\\s*[a-z_\\.\\$][a-z0-9_\\.\\$]+:' }, //GNU ARM syntax
                { begin: '[=#]\\w+' } //label reference
              ],
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 359 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var XML_IDENT_RE = '[A-Za-z0-9\\._:-]+';
        var TAG_INTERNALS = {
          endsWithParent: true,
          illegal: /</,
          relevance: 0,
          contains: [
            {
              className: 'attr',
              begin: XML_IDENT_RE,
              relevance: 0
            },
            {
              begin: /=\s*/,
              relevance: 0,
              contains: [
                {
                  className: 'string',
                  endsParent: true,
                  variants: [
                    { begin: /"/, end: /"/ },
                    { begin: /'/, end: /'/ },
                    { begin: /[^\s"'=<>`]+/ }
                  ]
                }
              ]
            }
          ]
        };
        return {
          aliases: [
            'html',
            'xhtml',
            'rss',
            'atom',
            'xjb',
            'xsd',
            'xsl',
            'plist'
          ],
          case_insensitive: true,
          contains: [
            {
              className: 'meta',
              begin: '<!DOCTYPE',
              end: '>',
              relevance: 10,
              contains: [{ begin: '\\[', end: '\\]' }]
            },
            hljs.COMMENT('<!--', '-->', {
              relevance: 10
            }),
            {
              begin: '<\\!\\[CDATA\\[',
              end: '\\]\\]>',
              relevance: 10
            },
            {
              className: 'meta',
              begin: /<\?xml/,
              end: /\?>/,
              relevance: 10
            },
            {
              begin: /<\?(php)?/,
              end: /\?>/,
              subLanguage: 'php',
              contains: [
                // We don't want the php closing tag ?> to close the PHP block when
                // inside any of the following blocks:
                { begin: '/\\*', end: '\\*/', skip: true },
                { begin: 'b"', end: '"', skip: true },
                { begin: "b'", end: "'", skip: true },
                hljs.inherit(hljs.APOS_STRING_MODE, {
                  illegal: null,
                  className: null,
                  contains: null,
                  skip: true
                }),
                hljs.inherit(hljs.QUOTE_STRING_MODE, {
                  illegal: null,
                  className: null,
                  contains: null,
                  skip: true
                })
              ]
            },
            {
              className: 'tag',
              /*
	        The lookahead pattern (?=...) ensures that 'begin' only matches
	        '<style' as a single word, followed by a whitespace or an
	        ending braket. The '$' is needed for the lexeme to be recognized
	        by hljs.subMode() that tests lexemes outside the stream.
	        */
              begin: '<style(?=\\s|>|$)',
              end: '>',
              keywords: { name: 'style' },
              contains: [TAG_INTERNALS],
              starts: {
                end: '</style>',
                returnEnd: true,
                subLanguage: ['css', 'xml']
              }
            },
            {
              className: 'tag',
              // See the comment in the <style tag about the lookahead pattern
              begin: '<script(?=\\s|>|$)',
              end: '>',
              keywords: { name: 'script' },
              contains: [TAG_INTERNALS],
              starts: {
                end: '</script>',
                returnEnd: true,
                subLanguage: ['actionscript', 'javascript', 'handlebars', 'xml']
              }
            },
            {
              className: 'tag',
              begin: '</?',
              end: '/?>',
              contains: [
                {
                  className: 'name',
                  begin: /[^\/><\s]+/,
                  relevance: 0
                },
                TAG_INTERNALS
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 360 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['adoc'],
          contains: [
            // block comment
            hljs.COMMENT(
              '^/{4,}\\n',
              '\\n/{4,}$',
              // can also be done as...
              //'^/{4,}$',
              //'^/{4,}$',
              {
                relevance: 10
              }
            ),
            // line comment
            hljs.COMMENT('^//', '$', {
              relevance: 0
            }),
            // title
            {
              className: 'title',
              begin: '^\\.\\w.*$'
            },
            // example, admonition & sidebar blocks
            {
              begin: '^[=\\*]{4,}\\n',
              end: '\\n^[=\\*]{4,}$',
              relevance: 10
            },
            // headings
            {
              className: 'section',
              relevance: 10,
              variants: [
                { begin: '^(={1,5}) .+?( \\1)?$' },
                { begin: '^[^\\[\\]\\n]+?\\n[=\\-~\\^\\+]{2,}$' }
              ]
            },
            // document attributes
            {
              className: 'meta',
              begin: '^:.+?:',
              end: '\\s',
              excludeEnd: true,
              relevance: 10
            },
            // block attributes
            {
              className: 'meta',
              begin: '^\\[.+?\\]$',
              relevance: 0
            },
            // quoteblocks
            {
              className: 'quote',
              begin: '^_{4,}\\n',
              end: '\\n_{4,}$',
              relevance: 10
            },
            // listing and literal blocks
            {
              className: 'code',
              begin: '^[\\-\\.]{4,}\\n',
              end: '\\n[\\-\\.]{4,}$',
              relevance: 10
            },
            // passthrough blocks
            {
              begin: '^\\+{4,}\\n',
              end: '\\n\\+{4,}$',
              contains: [
                {
                  begin: '<',
                  end: '>',
                  subLanguage: 'xml',
                  relevance: 0
                }
              ],
              relevance: 10
            },
            // lists (can only capture indicators)
            {
              className: 'bullet',
              begin: '^(\\*+|\\-+|\\.+|[^\\n]+?::)\\s+'
            },
            // admonition
            {
              className: 'symbol',
              begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\s+',
              relevance: 10
            },
            // inline strong
            {
              className: 'strong',
              // must not follow a word character or be followed by an asterisk or space
              begin: '\\B\\*(?![\\*\\s])',
              end: '(\\n{2}|\\*)',
              // allow escaped asterisk followed by word char
              contains: [
                {
                  begin: '\\\\*\\w',
                  relevance: 0
                }
              ]
            },
            // inline emphasis
            {
              className: 'emphasis',
              // must not follow a word character or be followed by a single quote or space
              begin: "\\B'(?!['\\s])",
              end: "(\\n{2}|')",
              // allow escaped single quote followed by word char
              contains: [
                {
                  begin: "\\\\'\\w",
                  relevance: 0
                }
              ],
              relevance: 0
            },
            // inline emphasis (alt)
            {
              className: 'emphasis',
              // must not follow a word character or be followed by an underline or space
              begin: '_(?![_\\s])',
              end: '(\\n{2}|_)',
              relevance: 0
            },
            // inline smart quotes
            {
              className: 'string',
              variants: [{ begin: "``.+?''" }, { begin: "`.+?'" }]
            },
            // inline code snippets (TODO should get same treatment as strong and emphasis)
            {
              className: 'code',
              begin: '(`.+?`|\\+.+?\\+)',
              relevance: 0
            },
            // indented literal block
            {
              className: 'code',
              begin: '^[ \\t]',
              end: '$',
              relevance: 0
            },
            // horizontal rules
            {
              begin: "^'{3,}[ \\t]*$",
              relevance: 10
            },
            // images and links
            {
              begin: '(link:)?(http|https|ftp|file|irc|image:?):\\S+\\[.*?\\]',
              returnBegin: true,
              contains: [
                {
                  begin: '(link|image:?):',
                  relevance: 0
                },
                {
                  className: 'link',
                  begin: '\\w',
                  end: '[^\\[]+',
                  relevance: 0
                },
                {
                  className: 'string',
                  begin: '\\[',
                  end: '\\]',
                  excludeBegin: true,
                  excludeEnd: true,
                  relevance: 0
                }
              ],
              relevance: 10
            }
          ]
        };
      };

      /***/
    },
    /* 361 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS =
          'false synchronized int abstract float private char boolean static null if const ' +
          'for true while long throw strictfp finally protected import native final return void ' +
          'enum else extends implements break transient new catch instanceof byte super volatile case ' +
          'assert short package default double public try this switch continue throws privileged ' +
          'aspectOf adviceexecution proceed cflowbelow cflow initialization preinitialization ' +
          'staticinitialization withincode target within execution getWithinTypeName handler ' +
          'thisJoinPoint thisJoinPointStaticPart thisEnclosingJoinPointStaticPart declare parents ' +
          'warning error soft precedence thisAspectInstance';
        var SHORTKEYS = 'get set args call';
        return {
          keywords: KEYWORDS,
          illegal: /<\/|#/,
          contains: [
            hljs.COMMENT('/\\*\\*', '\\*/', {
              relevance: 0,
              contains: [
                {
                  // eat up @'s in emails to prevent them to be recognized as doctags
                  begin: /\w+@/,
                  relevance: 0
                },
                {
                  className: 'doctag',
                  begin: '@[A-Za-z]+'
                }
              ]
            }),
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: 'class',
              beginKeywords: 'aspect',
              end: /[{;=]/,
              excludeEnd: true,
              illegal: /[:;"\[\]]/,
              contains: [
                {
                  beginKeywords:
                    'extends implements pertypewithin perthis pertarget percflowbelow percflow issingleton'
                },
                hljs.UNDERSCORE_TITLE_MODE,
                {
                  begin: /\([^\)]*/,
                  end: /[)]+/,
                  keywords: KEYWORDS + ' ' + SHORTKEYS,
                  excludeEnd: false
                }
              ]
            },
            {
              className: 'class',
              beginKeywords: 'class interface',
              end: /[{;=]/,
              excludeEnd: true,
              relevance: 0,
              keywords: 'class interface',
              illegal: /[:"\[\]]/,
              contains: [
                { beginKeywords: 'extends implements' },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            },
            {
              // AspectJ Constructs
              beginKeywords: 'pointcut after before around throwing returning',
              end: /[)]/,
              excludeEnd: false,
              illegal: /["\[\]]/,
              contains: [
                {
                  begin: hljs.UNDERSCORE_IDENT_RE + '\\s*\\(',
                  returnBegin: true,
                  contains: [hljs.UNDERSCORE_TITLE_MODE]
                }
              ]
            },
            {
              begin: /[:]/,
              returnBegin: true,
              end: /[{;]/,
              relevance: 0,
              excludeEnd: false,
              keywords: KEYWORDS,
              illegal: /["\[\]]/,
              contains: [
                {
                  begin: hljs.UNDERSCORE_IDENT_RE + '\\s*\\(',
                  keywords: KEYWORDS + ' ' + SHORTKEYS,
                  relevance: 0
                },
                hljs.QUOTE_STRING_MODE
              ]
            },
            {
              // this prevents 'new Name(...), or throw ...' from being recognized as a function definition
              beginKeywords: 'new throw',
              relevance: 0
            },
            {
              // the function class is a bit different for AspectJ compared to the Java language
              className: 'function',
              begin: /\w+ +\w+(\.)?\w+\s*\([^\)]*\)\s*((throws)[\w\s,]+)?[\{;]/,
              returnBegin: true,
              end: /[{;=]/,
              keywords: KEYWORDS,
              excludeEnd: true,
              contains: [
                {
                  begin: hljs.UNDERSCORE_IDENT_RE + '\\s*\\(',
                  returnBegin: true,
                  relevance: 0,
                  contains: [hljs.UNDERSCORE_TITLE_MODE]
                },
                {
                  className: 'params',
                  begin: /\(/,
                  end: /\)/,
                  relevance: 0,
                  keywords: KEYWORDS,
                  contains: [
                    hljs.APOS_STRING_MODE,
                    hljs.QUOTE_STRING_MODE,
                    hljs.C_NUMBER_MODE,
                    hljs.C_BLOCK_COMMENT_MODE
                  ]
                },
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },
            hljs.C_NUMBER_MODE,
            {
              // annotation is also used in this language
              className: 'meta',
              begin: '@[A-Za-z]+'
            }
          ]
        };
      };

      /***/
    },
    /* 362 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var BACKTICK_ESCAPE = {
          begin: '`[\\s\\S]'
        };

        return {
          case_insensitive: true,
          aliases: ['ahk'],
          keywords: {
            keyword:
              'Break Continue Critical Exit ExitApp Gosub Goto New OnExit Pause return SetBatchLines SetTimer Suspend Thread Throw Until ahk_id ahk_class ahk_pid ahk_exe ahk_group',
            literal: 'A|0 true false NOT AND OR',
            built_in: 'ComSpec Clipboard ClipboardAll ErrorLevel'
          },
          contains: [
            {
              className: 'built_in',
              begin: 'A_[a-zA-Z0-9]+'
            },
            BACKTICK_ESCAPE,
            hljs.inherit(hljs.QUOTE_STRING_MODE, {
              contains: [BACKTICK_ESCAPE]
            }),
            hljs.COMMENT(';', '$', { relevance: 0 }),
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: 'number',
              begin: hljs.NUMBER_RE,
              relevance: 0
            },
            {
              className: 'subst', // FIXED
              begin: '%(?=[a-zA-Z0-9#_$@])',
              end: '%',
              illegal: '[^a-zA-Z0-9#_$@]'
            },
            {
              className: 'built_in',
              begin: '^\\s*\\w+\\s*,'
              //I don't really know if this is totally relevant
            },
            {
              className: 'meta',
              begin: '^\\s*#w+',
              end: '$',
              relevance: 0
            },
            {
              className: 'symbol',
              contains: [BACKTICK_ESCAPE],
              variants: [
                { begin: '^[^\\n";]+::(?!=)' },
                { begin: '^[^\\n";]+:(?!=)', relevance: 0 } // zero relevance as it catches a lot of things
                // followed by a single ':' in many languages
              ]
            },
            {
              // consecutive commas, not for highlighting but just for relevance
              begin: ',\\s*,'
            }
          ]
        };
      };

      /***/
    },
    /* 363 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS =
            'ByRef Case Const ContinueCase ContinueLoop ' +
            'Default Dim Do Else ElseIf EndFunc EndIf EndSelect ' +
            'EndSwitch EndWith Enum Exit ExitLoop For Func ' +
            'Global If In Local Next ReDim Return Select Static ' +
            'Step Switch Then To Until Volatile WEnd While With',
          LITERAL = 'True False And Null Not Or',
          BUILT_IN =
            'Abs ACos AdlibRegister AdlibUnRegister Asc AscW ASin Assign ATan AutoItSetOption AutoItWinGetTitle AutoItWinSetTitle Beep Binary BinaryLen BinaryMid BinaryToString BitAND BitNOT BitOR BitRotate BitShift BitXOR BlockInput Break Call CDTray Ceiling Chr ChrW ClipGet ClipPut ConsoleRead ConsoleWrite ConsoleWriteError ControlClick ControlCommand ControlDisable ControlEnable ControlFocus ControlGetFocus ControlGetHandle ControlGetPos ControlGetText ControlHide ControlListView ControlMove ControlSend ControlSetText ControlShow ControlTreeView Cos Dec DirCopy DirCreate DirGetSize DirMove DirRemove DllCall DllCallAddress DllCallbackFree DllCallbackGetPtr DllCallbackRegister DllClose DllOpen DllStructCreate DllStructGetData DllStructGetPtr DllStructGetSize DllStructSetData DriveGetDrive DriveGetFileSystem DriveGetLabel DriveGetSerial DriveGetType DriveMapAdd DriveMapDel DriveMapGet DriveSetLabel DriveSpaceFree DriveSpaceTotal DriveStatus EnvGet EnvSet EnvUpdate Eval Execute Exp FileChangeDir FileClose FileCopy FileCreateNTFSLink FileCreateShortcut FileDelete FileExists FileFindFirstFile FileFindNextFile FileFlush FileGetAttrib FileGetEncoding FileGetLongName FileGetPos FileGetShortcut FileGetShortName FileGetSize FileGetTime FileGetVersion FileInstall FileMove FileOpen FileOpenDialog FileRead FileReadLine FileReadToArray FileRecycle FileRecycleEmpty FileSaveDialog FileSelectFolder FileSetAttrib FileSetEnd FileSetPos FileSetTime FileWrite FileWriteLine Floor FtpSetProxy FuncName GUICreate GUICtrlCreateAvi GUICtrlCreateButton GUICtrlCreateCheckbox GUICtrlCreateCombo GUICtrlCreateContextMenu GUICtrlCreateDate GUICtrlCreateDummy GUICtrlCreateEdit GUICtrlCreateGraphic GUICtrlCreateGroup GUICtrlCreateIcon GUICtrlCreateInput GUICtrlCreateLabel GUICtrlCreateList GUICtrlCreateListView GUICtrlCreateListViewItem GUICtrlCreateMenu GUICtrlCreateMenuItem GUICtrlCreateMonthCal GUICtrlCreateObj GUICtrlCreatePic GUICtrlCreateProgress GUICtrlCreateRadio GUICtrlCreateSlider GUICtrlCreateTab GUICtrlCreateTabItem GUICtrlCreateTreeView GUICtrlCreateTreeViewItem GUICtrlCreateUpdown GUICtrlDelete GUICtrlGetHandle GUICtrlGetState GUICtrlRead GUICtrlRecvMsg GUICtrlRegisterListViewSort GUICtrlSendMsg GUICtrlSendToDummy GUICtrlSetBkColor GUICtrlSetColor GUICtrlSetCursor GUICtrlSetData GUICtrlSetDefBkColor GUICtrlSetDefColor GUICtrlSetFont GUICtrlSetGraphic GUICtrlSetImage GUICtrlSetLimit GUICtrlSetOnEvent GUICtrlSetPos GUICtrlSetResizing GUICtrlSetState GUICtrlSetStyle GUICtrlSetTip GUIDelete GUIGetCursorInfo GUIGetMsg GUIGetStyle GUIRegisterMsg GUISetAccelerators GUISetBkColor GUISetCoord GUISetCursor GUISetFont GUISetHelp GUISetIcon GUISetOnEvent GUISetState GUISetStyle GUIStartGroup GUISwitch Hex HotKeySet HttpSetProxy HttpSetUserAgent HWnd InetClose InetGet InetGetInfo InetGetSize InetRead IniDelete IniRead IniReadSection IniReadSectionNames IniRenameSection IniWrite IniWriteSection InputBox Int IsAdmin IsArray IsBinary IsBool IsDeclared IsDllStruct IsFloat IsFunc IsHWnd IsInt IsKeyword IsNumber IsObj IsPtr IsString Log MemGetStats Mod MouseClick MouseClickDrag MouseDown MouseGetCursor MouseGetPos MouseMove MouseUp MouseWheel MsgBox Number ObjCreate ObjCreateInterface ObjEvent ObjGet ObjName OnAutoItExitRegister OnAutoItExitUnRegister Ping PixelChecksum PixelGetColor PixelSearch ProcessClose ProcessExists ProcessGetStats ProcessList ProcessSetPriority ProcessWait ProcessWaitClose ProgressOff ProgressOn ProgressSet Ptr Random RegDelete RegEnumKey RegEnumVal RegRead RegWrite Round Run RunAs RunAsWait RunWait Send SendKeepActive SetError SetExtended ShellExecute ShellExecuteWait Shutdown Sin Sleep SoundPlay SoundSetWaveVolume SplashImageOn SplashOff SplashTextOn Sqrt SRandom StatusbarGetText StderrRead StdinWrite StdioClose StdoutRead String StringAddCR StringCompare StringFormat StringFromASCIIArray StringInStr StringIsAlNum StringIsAlpha StringIsASCII StringIsDigit StringIsFloat StringIsInt StringIsLower StringIsSpace StringIsUpper StringIsXDigit StringLeft StringLen StringLower StringMid StringRegExp StringRegExpReplace StringReplace StringReverse StringRight StringSplit StringStripCR StringStripWS StringToASCIIArray StringToBinary StringTrimLeft StringTrimRight StringUpper Tan TCPAccept TCPCloseSocket TCPConnect TCPListen TCPNameToIP TCPRecv TCPSend TCPShutdown, UDPShutdown TCPStartup, UDPStartup TimerDiff TimerInit ToolTip TrayCreateItem TrayCreateMenu TrayGetMsg TrayItemDelete TrayItemGetHandle TrayItemGetState TrayItemGetText TrayItemSetOnEvent TrayItemSetState TrayItemSetText TraySetClick TraySetIcon TraySetOnEvent TraySetPauseIcon TraySetState TraySetToolTip TrayTip UBound UDPBind UDPCloseSocket UDPOpen UDPRecv UDPSend VarGetType WinActivate WinActive WinClose WinExists WinFlash WinGetCaretPos WinGetClassList WinGetClientSize WinGetHandle WinGetPos WinGetProcess WinGetState WinGetText WinGetTitle WinKill WinList WinMenuSelectItem WinMinimizeAll WinMinimizeAllUndo WinMove WinSetOnTop WinSetState WinSetTitle WinSetTrans WinWait',
          COMMENT = {
            variants: [
              hljs.COMMENT(';', '$', { relevance: 0 }),
              hljs.COMMENT('#cs', '#ce'),
              hljs.COMMENT('#comments-start', '#comments-end')
            ]
          },
          VARIABLE = {
            begin: '\\$[A-z0-9_]+'
          },
          STRING = {
            className: 'string',
            variants: [
              {
                begin: /"/,
                end: /"/,
                contains: [
                  {
                    begin: /""/,
                    relevance: 0
                  }
                ]
              },
              {
                begin: /'/,
                end: /'/,
                contains: [
                  {
                    begin: /''/,
                    relevance: 0
                  }
                ]
              }
            ]
          },
          NUMBER = {
            variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]
          },
          PREPROCESSOR = {
            className: 'meta',
            begin: '#',
            end: '$',
            keywords: {
              'meta-keyword':
                'comments include include-once NoTrayIcon OnAutoItStartRegister pragma compile RequireAdmin'
            },
            contains: [
              {
                begin: /\\\n/,
                relevance: 0
              },
              {
                beginKeywords: 'include',
                keywords: { 'meta-keyword': 'include' },
                end: '$',
                contains: [
                  STRING,
                  {
                    className: 'meta-string',
                    variants: [
                      {
                        begin: '<',
                        end: '>'
                      },
                      {
                        begin: /"/,
                        end: /"/,
                        contains: [
                          {
                            begin: /""/,
                            relevance: 0
                          }
                        ]
                      },
                      {
                        begin: /'/,
                        end: /'/,
                        contains: [
                          {
                            begin: /''/,
                            relevance: 0
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              STRING,
              COMMENT
            ]
          },
          CONSTANT = {
            className: 'symbol',
            // begin: '@',
            // end: '$',
            // keywords: 'AppDataCommonDir AppDataDir AutoItExe AutoItPID AutoItVersion AutoItX64 COM_EventObj CommonFilesDir Compiled ComputerName ComSpec CPUArch CR CRLF DesktopCommonDir DesktopDepth DesktopDir DesktopHeight DesktopRefresh DesktopWidth DocumentsCommonDir error exitCode exitMethod extended FavoritesCommonDir FavoritesDir GUI_CtrlHandle GUI_CtrlId GUI_DragFile GUI_DragId GUI_DropId GUI_WinHandle HomeDrive HomePath HomeShare HotKeyPressed HOUR IPAddress1 IPAddress2 IPAddress3 IPAddress4 KBLayout LF LocalAppDataDir LogonDNSDomain LogonDomain LogonServer MDAY MIN MON MSEC MUILang MyDocumentsDir NumParams OSArch OSBuild OSLang OSServicePack OSType OSVersion ProgramFilesDir ProgramsCommonDir ProgramsDir ScriptDir ScriptFullPath ScriptLineNumber ScriptName SEC StartMenuCommonDir StartMenuDir StartupCommonDir StartupDir SW_DISABLE SW_ENABLE SW_HIDE SW_LOCK SW_MAXIMIZE SW_MINIMIZE SW_RESTORE SW_SHOW SW_SHOWDEFAULT SW_SHOWMAXIMIZED SW_SHOWMINIMIZED SW_SHOWMINNOACTIVE SW_SHOWNA SW_SHOWNOACTIVATE SW_SHOWNORMAL SW_UNLOCK SystemDir TAB TempDir TRAY_ID TrayIconFlashing TrayIconVisible UserName UserProfileDir WDAY WindowsDir WorkingDir YDAY YEAR',
            // relevance: 5
            begin: '@[A-z0-9_]+'
          },
          FUNCTION = {
            className: 'function',
            beginKeywords: 'Func',
            end: '$',
            illegal: '\\$|\\[|%',
            contains: [
              hljs.UNDERSCORE_TITLE_MODE,
              {
                className: 'params',
                begin: '\\(',
                end: '\\)',
                contains: [VARIABLE, STRING, NUMBER]
              }
            ]
          };

        return {
          case_insensitive: true,
          illegal: /\/\*/,
          keywords: {
            keyword: KEYWORDS,
            built_in: BUILT_IN,
            literal: LITERAL
          },
          contains: [
            COMMENT,
            VARIABLE,
            STRING,
            NUMBER,
            PREPROCESSOR,
            CONSTANT,
            FUNCTION
          ]
        };
      };

      /***/
    },
    /* 364 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          case_insensitive: true,
          lexemes: '\\.?' + hljs.IDENT_RE,
          keywords: {
            keyword:
              /* mnemonic */
              'adc add adiw and andi asr bclr bld brbc brbs brcc brcs break breq brge brhc brhs ' +
              'brid brie brlo brlt brmi brne brpl brsh brtc brts brvc brvs bset bst call cbi cbr ' +
              'clc clh cli cln clr cls clt clv clz com cp cpc cpi cpse dec eicall eijmp elpm eor ' +
              'fmul fmuls fmulsu icall ijmp in inc jmp ld ldd ldi lds lpm lsl lsr mov movw mul ' +
              'muls mulsu neg nop or ori out pop push rcall ret reti rjmp rol ror sbc sbr sbrc sbrs ' +
              'sec seh sbi sbci sbic sbis sbiw sei sen ser ses set sev sez sleep spm st std sts sub ' +
              'subi swap tst wdr',
            built_in:
              /* general purpose registers */
              'r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 ' +
              'r23 r24 r25 r26 r27 r28 r29 r30 r31 x|0 xh xl y|0 yh yl z|0 zh zl ' +
              /* IO Registers (ATMega128) */
              'ucsr1c udr1 ucsr1a ucsr1b ubrr1l ubrr1h ucsr0c ubrr0h tccr3c tccr3a tccr3b tcnt3h ' +
              'tcnt3l ocr3ah ocr3al ocr3bh ocr3bl ocr3ch ocr3cl icr3h icr3l etimsk etifr tccr1c ' +
              'ocr1ch ocr1cl twcr twdr twar twsr twbr osccal xmcra xmcrb eicra spmcsr spmcr portg ' +
              'ddrg ping portf ddrf sreg sph spl xdiv rampz eicrb eimsk gimsk gicr eifr gifr timsk ' +
              'tifr mcucr mcucsr tccr0 tcnt0 ocr0 assr tccr1a tccr1b tcnt1h tcnt1l ocr1ah ocr1al ' +
              'ocr1bh ocr1bl icr1h icr1l tccr2 tcnt2 ocr2 ocdr wdtcr sfior eearh eearl eedr eecr ' +
              'porta ddra pina portb ddrb pinb portc ddrc pinc portd ddrd pind spdr spsr spcr udr0 ' +
              'ucsr0a ucsr0b ubrr0l acsr admux adcsr adch adcl porte ddre pine pinf',
            meta:
              '.byte .cseg .db .def .device .dseg .dw .endmacro .equ .eseg .exit .include .list ' +
              '.listmac .macro .nolist .org .set'
          },
          contains: [
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.COMMENT(';', '$', {
              relevance: 0
            }),
            hljs.C_NUMBER_MODE, // 0x..., decimal, float
            hljs.BINARY_NUMBER_MODE, // 0b...
            {
              className: 'number',
              begin: '\\b(\\$[a-zA-Z0-9]+|0o[0-7]+)' // $..., 0o...
            },
            hljs.QUOTE_STRING_MODE,
            {
              className: 'string',
              begin: "'",
              end: "[^\\\\]'",
              illegal: "[^\\\\][^']"
            },
            { className: 'symbol', begin: '^[A-Za-z0-9_.$]+:' },
            { className: 'meta', begin: '#', end: '$' },
            {
              // подстановка в «.macro»
              className: 'subst',
              begin: '@[0-9]+'
            }
          ]
        };
      };

      /***/
    },
    /* 365 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var VARIABLE = {
          className: 'variable',
          variants: [{ begin: /\$[\w\d#@][\w\d_]*/ }, { begin: /\$\{(.*?)}/ }]
        };
        var KEYWORDS =
          'BEGIN END if else while do for in break continue delete next nextfile function func exit|10';
        var STRING = {
          className: 'string',
          contains: [hljs.BACKSLASH_ESCAPE],
          variants: [
            {
              begin: /(u|b)?r?'''/,
              end: /'''/,
              relevance: 10
            },
            {
              begin: /(u|b)?r?"""/,
              end: /"""/,
              relevance: 10
            },
            {
              begin: /(u|r|ur)'/,
              end: /'/,
              relevance: 10
            },
            {
              begin: /(u|r|ur)"/,
              end: /"/,
              relevance: 10
            },
            {
              begin: /(b|br)'/,
              end: /'/
            },
            {
              begin: /(b|br)"/,
              end: /"/
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE
          ]
        };
        return {
          keywords: {
            keyword: KEYWORDS
          },
          contains: [
            VARIABLE,
            STRING,
            hljs.REGEXP_MODE,
            hljs.HASH_COMMENT_MODE,
            hljs.NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 366 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords:
            'false int abstract private char boolean static null if for true ' +
            'while long throw finally protected final return void enum else ' +
            'break new catch byte super case short default double public try this switch ' +
            'continue reverse firstfast firstonly forupdate nofetch sum avg minof maxof count ' +
            'order group by asc desc index hint like dispaly edit client server ttsbegin ' +
            'ttscommit str real date container anytype common div mod',
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE,
            {
              className: 'meta',
              begin: '#',
              end: '$'
            },
            {
              className: 'class',
              beginKeywords: 'class interface',
              end: '{',
              excludeEnd: true,
              illegal: ':',
              contains: [
                { beginKeywords: 'extends implements' },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 367 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var VAR = {
          className: 'variable',
          variants: [{ begin: /\$[\w\d#@][\w\d_]*/ }, { begin: /\$\{(.*?)}/ }]
        };
        var QUOTE_STRING = {
          className: 'string',
          begin: /"/,
          end: /"/,
          contains: [
            hljs.BACKSLASH_ESCAPE,
            VAR,
            {
              className: 'variable',
              begin: /\$\(/,
              end: /\)/,
              contains: [hljs.BACKSLASH_ESCAPE]
            }
          ]
        };
        var APOS_STRING = {
          className: 'string',
          begin: /'/,
          end: /'/
        };

        return {
          aliases: ['sh', 'zsh'],
          lexemes: /\b-?[a-z\._]+\b/,
          keywords: {
            keyword:
              'if then else elif fi for while in do done case esac function',
            literal: 'true false',
            built_in:
              // Shell built-ins
              // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html
              'break cd continue eval exec exit export getopts hash pwd readonly return shift test times ' +
              'trap umask unset ' +
              // Bash built-ins
              'alias bind builtin caller command declare echo enable help let local logout mapfile printf ' +
              'read readarray source type typeset ulimit unalias ' +
              // Shell modifiers
              'set shopt ' +
              // Zsh built-ins
              'autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles ' +
              'compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate ' +
              'fc fg float functions getcap getln history integer jobs kill limit log noglob popd print ' +
              'pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit ' +
              'unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof ' +
              'zpty zregexparse zsocket zstyle ztcp',
            _: '-ne -eq -lt -gt -f -d -e -s -l -a' // relevance booster
          },
          contains: [
            {
              className: 'meta',
              begin: /^#![^\n]+sh\s*$/,
              relevance: 10
            },
            {
              className: 'function',
              begin: /\w[\w\d_]*\s*\(\s*\)\s*\{/,
              returnBegin: true,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, { begin: /\w[\w\d_]*/ })
              ],
              relevance: 0
            },
            hljs.HASH_COMMENT_MODE,
            QUOTE_STRING,
            APOS_STRING,
            VAR
          ]
        };
      };

      /***/
    },
    /* 368 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          case_insensitive: true,
          illegal: '^.',
          // Support explicitely typed variables that end with $%! or #.
          lexemes: '[a-zA-Z][a-zA-Z0-9_$%!#]*',
          keywords: {
            keyword:
              'ABS ASC AND ATN AUTO|0 BEEP BLOAD|10 BSAVE|10 CALL CALLS CDBL CHAIN CHDIR CHR$|10 CINT CIRCLE ' +
              'CLEAR CLOSE CLS COLOR COM COMMON CONT COS CSNG CSRLIN CVD CVI CVS DATA DATE$ ' +
              'DEFDBL DEFINT DEFSNG DEFSTR DEF|0 SEG USR DELETE DIM DRAW EDIT END ENVIRON ENVIRON$ ' +
              'EOF EQV ERASE ERDEV ERDEV$ ERL ERR ERROR EXP FIELD FILES FIX FOR|0 FRE GET GOSUB|10 GOTO ' +
              'HEX$ IF|0 THEN ELSE|0 INKEY$ INP INPUT INPUT# INPUT$ INSTR IMP INT IOCTL IOCTL$ KEY ON ' +
              'OFF LIST KILL LEFT$ LEN LET LINE LLIST LOAD LOC LOCATE LOF LOG LPRINT USING LSET ' +
              'MERGE MID$ MKDIR MKD$ MKI$ MKS$ MOD NAME NEW NEXT NOISE NOT OCT$ ON OR PEN PLAY STRIG OPEN OPTION ' +
              'BASE OUT PAINT PALETTE PCOPY PEEK PMAP POINT POKE POS PRINT PRINT] PSET PRESET ' +
              'PUT RANDOMIZE READ REM RENUM RESET|0 RESTORE RESUME RETURN|0 RIGHT$ RMDIR RND RSET ' +
              'RUN SAVE SCREEN SGN SHELL SIN SOUND SPACE$ SPC SQR STEP STICK STOP STR$ STRING$ SWAP ' +
              'SYSTEM TAB TAN TIME$ TIMER TROFF TRON TO USR VAL VARPTR VARPTR$ VIEW WAIT WHILE ' +
              'WEND WIDTH WINDOW WRITE XOR'
          },
          contains: [
            hljs.QUOTE_STRING_MODE,
            hljs.COMMENT('REM', '$', { relevance: 10 }),
            hljs.COMMENT("'", '$', { relevance: 0 }),
            {
              // Match line numbers
              className: 'symbol',
              begin: '^[0-9]+ ',
              relevance: 10
            },
            {
              // Match typed numeric constants (1000, 12.34!, 1.2e5, 1.5#, 1.2D2)
              className: 'number',
              begin: '\\b([0-9]+[0-9edED.]*[#!]?)',
              relevance: 0
            },
            {
              // Match hexadecimal numbers (&Hxxxx)
              className: 'number',
              begin: '(&[hH][0-9a-fA-F]{1,4})'
            },
            {
              // Match octal numbers (&Oxxxxxx)
              className: 'number',
              begin: '(&[oO][0-7]{1,6})'
            }
          ]
        };
      };

      /***/
    },
    /* 369 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            // Attribute
            {
              className: 'attribute',
              begin: /</,
              end: />/
            },
            // Specific
            {
              begin: /::=/,
              starts: {
                end: /$/,
                contains: [
                  {
                    begin: /</,
                    end: />/
                  },
                  // Common
                  hljs.C_LINE_COMMENT_MODE,
                  hljs.C_BLOCK_COMMENT_MODE,
                  hljs.APOS_STRING_MODE,
                  hljs.QUOTE_STRING_MODE
                ]
              }
            }
          ]
        };
      };

      /***/
    },
    /* 370 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var LITERAL = {
          className: 'literal',
          begin: '[\\+\\-]',
          relevance: 0
        };
        return {
          aliases: ['bf'],
          contains: [
            hljs.COMMENT(
              '[^\\[\\]\\.,\\+\\-<> \r\n]',
              '[\\[\\]\\.,\\+\\-<> \r\n]',
              {
                returnEnd: true,
                relevance: 0
              }
            ),
            {
              className: 'title',
              begin: '[\\[\\]]',
              relevance: 0
            },
            {
              className: 'string',
              begin: '[\\.,]',
              relevance: 0
            },
            {
              // this mode works as the only relevance counter
              begin: /\+\+|\-\-/,
              returnBegin: true,
              contains: [LITERAL]
            },
            LITERAL
          ]
        };
      };

      /***/
    },
    /* 371 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS =
          'div mod in and or not xor asserterror begin case do downto else end exit for if of repeat then to ' +
          'until while with var';
        var LITERALS = 'false true';
        var COMMENT_MODES = [
          hljs.C_LINE_COMMENT_MODE,
          hljs.COMMENT(/\{/, /\}/, {
            relevance: 0
          }),
          hljs.COMMENT(/\(\*/, /\*\)/, {
            relevance: 10
          })
        ];
        var STRING = {
          className: 'string',
          begin: /'/,
          end: /'/,
          contains: [{ begin: /''/ }]
        };
        var CHAR_STRING = {
          className: 'string',
          begin: /(#\d+)+/
        };
        var DATE = {
          className: 'number',
          begin: '\\b\\d+(\\.\\d+)?(DT|D|T)',
          relevance: 0
        };
        var DBL_QUOTED_VARIABLE = {
          className: 'string', // not a string technically but makes sense to be highlighted in the same style
          begin: '"',
          end: '"'
        };

        var PROCEDURE = {
          className: 'function',
          beginKeywords: 'procedure',
          end: /[:;]/,
          keywords: 'procedure|10',
          contains: [
            hljs.TITLE_MODE,
            {
              className: 'params',
              begin: /\(/,
              end: /\)/,
              keywords: KEYWORDS,
              contains: [STRING, CHAR_STRING]
            }
          ].concat(COMMENT_MODES)
        };

        var OBJECT = {
          className: 'class',
          begin:
            'OBJECT (Table|Form|Report|Dataport|Codeunit|XMLport|MenuSuite|Page|Query) (\\d+) ([^\\r\\n]+)',
          returnBegin: true,
          contains: [hljs.TITLE_MODE, PROCEDURE]
        };

        return {
          case_insensitive: true,
          keywords: { keyword: KEYWORDS, literal: LITERALS },
          illegal: /\/\*/,
          contains: [
            STRING,
            CHAR_STRING,
            DATE,
            DBL_QUOTED_VARIABLE,
            hljs.NUMBER_MODE,
            OBJECT,
            PROCEDURE
          ]
        };
      };

      /***/
    },
    /* 372 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['capnp'],
          keywords: {
            keyword:
              'struct enum interface union group import using const annotation extends in of on as with from fixed',
            built_in:
              'Void Bool Int8 Int16 Int32 Int64 UInt8 UInt16 UInt32 UInt64 Float32 Float64 ' +
              'Text Data AnyPointer AnyStruct Capability List',
            literal: 'true false'
          },
          contains: [
            hljs.QUOTE_STRING_MODE,
            hljs.NUMBER_MODE,
            hljs.HASH_COMMENT_MODE,
            {
              className: 'meta',
              begin: /@0x[\w\d]{16};/,
              illegal: /\n/
            },
            {
              className: 'symbol',
              begin: /@\d+\b/
            },
            {
              className: 'class',
              beginKeywords: 'struct enum',
              end: /\{/,
              illegal: /\n/,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  starts: { endsWithParent: true, excludeEnd: true } // hack: eating everything after the first title
                })
              ]
            },
            {
              className: 'class',
              beginKeywords: 'interface',
              end: /\{/,
              illegal: /\n/,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  starts: { endsWithParent: true, excludeEnd: true } // hack: eating everything after the first title
                })
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 373 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        // 2.3. Identifiers and keywords
        var KEYWORDS =
          'assembly module package import alias class interface object given value ' +
          'assign void function new of extends satisfies abstracts in out return ' +
          'break continue throw assert dynamic if else switch case for while try ' +
          'catch finally then let this outer super is exists nonempty';
        // 7.4.1 Declaration Modifiers
        var DECLARATION_MODIFIERS =
          'shared abstract formal default actual variable late native deprecated' +
          'final sealed annotation suppressWarnings small';
        // 7.4.2 Documentation
        var DOCUMENTATION = 'doc by license see throws tagged';
        var SUBST = {
          className: 'subst',
          excludeBegin: true,
          excludeEnd: true,
          begin: /``/,
          end: /``/,
          keywords: KEYWORDS,
          relevance: 10
        };
        var EXPRESSIONS = [
          {
            // verbatim string
            className: 'string',
            begin: '"""',
            end: '"""',
            relevance: 10
          },
          {
            // string literal or template
            className: 'string',
            begin: '"',
            end: '"',
            contains: [SUBST]
          },
          {
            // character literal
            className: 'string',
            begin: "'",
            end: "'"
          },
          {
            // numeric literal
            className: 'number',
            begin:
              '#[0-9a-fA-F_]+|\\$[01_]+|[0-9_]+(?:\\.[0-9_](?:[eE][+-]?\\d+)?)?[kMGTPmunpf]?',
            relevance: 0
          }
        ];
        SUBST.contains = EXPRESSIONS;

        return {
          keywords: {
            keyword: KEYWORDS + ' ' + DECLARATION_MODIFIERS,
            meta: DOCUMENTATION
          },
          illegal: '\\$[^01]|#[^0-9a-fA-F]',
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.COMMENT('/\\*', '\\*/', { contains: ['self'] }),
            {
              // compiler annotation
              className: 'meta',
              begin: '@[a-z]\\w*(?:\\:"[^"]*")?'
            }
          ].concat(EXPRESSIONS)
        };
      };

      /***/
    },
    /* 374 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['clean', 'icl', 'dcl'],
          keywords: {
            keyword:
              'if let in with where case of class instance otherwise ' +
              'implementation definition system module from import qualified as ' +
              'special code inline foreign export ccall stdcall generic derive ' +
              'infix infixl infixr',
            literal: 'True False'
          },
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE,

            { begin: '->|<-[|:]?|::|#!?|>>=|\\{\\||\\|\\}|:==|=:|\\.\\.|<>|`' } // relevance booster
          ]
        };
      };

      /***/
    },
    /* 375 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var keywords = {
          'builtin-name':
            // Clojure keywords
            'def defonce cond apply if-not if-let if not not= = < > <= >= == + / * - rem ' +
            'quot neg? pos? delay? symbol? keyword? true? false? integer? empty? coll? list? ' +
            'set? ifn? fn? associative? sequential? sorted? counted? reversible? number? decimal? ' +
            'class? distinct? isa? float? rational? reduced? ratio? odd? even? char? seq? vector? ' +
            'string? map? nil? contains? zero? instance? not-every? not-any? libspec? -> ->> .. . ' +
            'inc compare do dotimes mapcat take remove take-while drop letfn drop-last take-last ' +
            'drop-while while intern condp case reduced cycle split-at split-with repeat replicate ' +
            'iterate range merge zipmap declare line-seq sort comparator sort-by dorun doall nthnext ' +
            'nthrest partition eval doseq await await-for let agent atom send send-off release-pending-sends ' +
            'add-watch mapv filterv remove-watch agent-error restart-agent set-error-handler error-handler ' +
            'set-error-mode! error-mode shutdown-agents quote var fn loop recur throw try monitor-enter ' +
            'monitor-exit defmacro defn defn- macroexpand macroexpand-1 for dosync and or ' +
            'when when-not when-let comp juxt partial sequence memoize constantly complement identity assert ' +
            'peek pop doto proxy defstruct first rest cons defprotocol cast coll deftype defrecord last butlast ' +
            'sigs reify second ffirst fnext nfirst nnext defmulti defmethod meta with-meta ns in-ns create-ns import ' +
            'refer keys select-keys vals key val rseq name namespace promise into transient persistent! conj! ' +
            'assoc! dissoc! pop! disj! use class type num float double short byte boolean bigint biginteger ' +
            'bigdec print-method print-dup throw-if printf format load compile get-in update-in pr pr-on newline ' +
            'flush read slurp read-line subvec with-open memfn time re-find re-groups rand-int rand mod locking ' +
            'assert-valid-fdecl alias resolve ref deref refset swap! reset! set-validator! compare-and-set! alter-meta! ' +
            'reset-meta! commute get-validator alter ref-set ref-history-count ref-min-history ref-max-history ensure sync io! ' +
            'new next conj set! to-array future future-call into-array aset gen-class reduce map filter find empty ' +
            'hash-map hash-set sorted-map sorted-map-by sorted-set sorted-set-by vec vector seq flatten reverse assoc dissoc list ' +
            'disj get union difference intersection extend extend-type extend-protocol int nth delay count concat chunk chunk-buffer ' +
            'chunk-append chunk-first chunk-rest max min dec unchecked-inc-int unchecked-inc unchecked-dec-inc unchecked-dec unchecked-negate ' +
            'unchecked-add-int unchecked-add unchecked-subtract-int unchecked-subtract chunk-next chunk-cons chunked-seq? prn vary-meta ' +
            'lazy-seq spread list* str find-keyword keyword symbol gensym force rationalize'
        };

        var SYMBOLSTART = "a-zA-Z_\\-!.?+*=<>&#'";
        var SYMBOL_RE = '[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:]*';
        var SIMPLE_NUMBER_RE = '[-+]?\\d+(\\.\\d+)?';

        var SYMBOL = {
          begin: SYMBOL_RE,
          relevance: 0
        };
        var NUMBER = {
          className: 'number',
          begin: SIMPLE_NUMBER_RE,
          relevance: 0
        };
        var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });
        var COMMENT = hljs.COMMENT(';', '$', {
          relevance: 0
        });
        var LITERAL = {
          className: 'literal',
          begin: /\b(true|false|nil)\b/
        };
        var COLLECTION = {
          begin: '[\\[\\{]',
          end: '[\\]\\}]'
        };
        var HINT = {
          className: 'comment',
          begin: '\\^' + SYMBOL_RE
        };
        var HINT_COL = hljs.COMMENT('\\^\\{', '\\}');
        var KEY = {
          className: 'symbol',
          begin: '[:]{1,2}' + SYMBOL_RE
        };
        var LIST = {
          begin: '\\(',
          end: '\\)'
        };
        var BODY = {
          endsWithParent: true,
          relevance: 0
        };
        var NAME = {
          keywords: keywords,
          lexemes: SYMBOL_RE,
          className: 'name',
          begin: SYMBOL_RE,
          starts: BODY
        };
        var DEFAULT_CONTAINS = [
          LIST,
          STRING,
          HINT,
          HINT_COL,
          COMMENT,
          KEY,
          COLLECTION,
          NUMBER,
          LITERAL,
          SYMBOL
        ];

        LIST.contains = [hljs.COMMENT('comment', ''), NAME, BODY];
        BODY.contains = DEFAULT_CONTAINS;
        COLLECTION.contains = DEFAULT_CONTAINS;
        HINT_COL.contains = [COLLECTION];

        return {
          aliases: ['clj'],
          illegal: /\S/,
          contains: [
            LIST,
            STRING,
            HINT,
            HINT_COL,
            COMMENT,
            KEY,
            COLLECTION,
            NUMBER,
            LITERAL
          ]
        };
      };

      /***/
    },
    /* 376 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            {
              className: 'meta',
              begin: /^([\w.-]+|\s*#_)=>/,
              starts: {
                end: /$/,
                subLanguage: 'clojure'
              }
            }
          ]
        };
      };

      /***/
    },
    /* 377 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['cmake.in'],
          case_insensitive: true,
          keywords: {
            keyword:
              // scripting commands
              'break cmake_host_system_information cmake_minimum_required cmake_parse_arguments ' +
              'cmake_policy configure_file continue elseif else endforeach endfunction endif endmacro ' +
              'endwhile execute_process file find_file find_library find_package find_path ' +
              'find_program foreach function get_cmake_property get_directory_property ' +
              'get_filename_component get_property if include include_guard list macro ' +
              'mark_as_advanced math message option return separate_arguments ' +
              'set_directory_properties set_property set site_name string unset variable_watch while ' +
              // project commands
              'add_compile_definitions add_compile_options add_custom_command add_custom_target ' +
              'add_definitions add_dependencies add_executable add_library add_link_options ' +
              'add_subdirectory add_test aux_source_directory build_command create_test_sourcelist ' +
              'define_property enable_language enable_testing export fltk_wrap_ui ' +
              'get_source_file_property get_target_property get_test_property include_directories ' +
              'include_external_msproject include_regular_expression install link_directories ' +
              'link_libraries load_cache project qt_wrap_cpp qt_wrap_ui remove_definitions ' +
              'set_source_files_properties set_target_properties set_tests_properties source_group ' +
              'target_compile_definitions target_compile_features target_compile_options ' +
              'target_include_directories target_link_directories target_link_libraries ' +
              'target_link_options target_sources try_compile try_run ' +
              // CTest commands
              'ctest_build ctest_configure ctest_coverage ctest_empty_binary_directory ctest_memcheck ' +
              'ctest_read_custom_files ctest_run_script ctest_sleep ctest_start ctest_submit ' +
              'ctest_test ctest_update ctest_upload ' +
              // deprecated commands
              'build_name exec_program export_library_dependencies install_files install_programs ' +
              'install_targets load_command make_directory output_required_files remove ' +
              'subdir_depends subdirs use_mangled_mesa utility_source variable_requires write_file ' +
              'qt5_use_modules qt5_use_package qt5_wrap_cpp ' +
              // core keywords
              'on off true false and or not command policy target test exists is_newer_than ' +
              'is_directory is_symlink is_absolute matches less greater equal less_equal ' +
              'greater_equal strless strgreater strequal strless_equal strgreater_equal version_less ' +
              'version_greater version_equal version_less_equal version_greater_equal in_list defined'
          },
          contains: [
            {
              className: 'variable',
              begin: '\\${',
              end: '}'
            },
            hljs.HASH_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 378 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            // JS keywords
            'in if for while finally new do return else break catch instanceof throw try this ' +
            'switch continue typeof delete debugger super yield import export from as default await ' +
            // Coffee keywords
            'then unless until loop of by when and or is isnt not',
          literal:
            // JS literals
            'true false null undefined ' +
            // Coffee literals
            'yes no on off',
          built_in: 'npm require console print module global window document'
        };
        var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';
        var SUBST = {
          className: 'subst',
          begin: /#\{/,
          end: /}/,
          keywords: KEYWORDS
        };
        var EXPRESSIONS = [
          hljs.BINARY_NUMBER_MODE,
          hljs.inherit(hljs.C_NUMBER_MODE, {
            starts: { end: '(\\s*/)?', relevance: 0 }
          }), // a number tries to eat the following slash to prevent treating it as a regexp
          {
            className: 'string',
            variants: [
              {
                begin: /'''/,
                end: /'''/,
                contains: [hljs.BACKSLASH_ESCAPE]
              },
              {
                begin: /'/,
                end: /'/,
                contains: [hljs.BACKSLASH_ESCAPE]
              },
              {
                begin: /"""/,
                end: /"""/,
                contains: [hljs.BACKSLASH_ESCAPE, SUBST]
              },
              {
                begin: /"/,
                end: /"/,
                contains: [hljs.BACKSLASH_ESCAPE, SUBST]
              }
            ]
          },
          {
            className: 'regexp',
            variants: [
              {
                begin: '///',
                end: '///',
                contains: [SUBST, hljs.HASH_COMMENT_MODE]
              },
              {
                begin: '//[gim]*',
                relevance: 0
              },
              {
                // regex can't start with space to parse x / 2 / 3 as two divisions
                // regex can't start with *, and it supports an "illegal" in the main mode
                begin: /\/(?![ *])(\\\/|.)*?\/[gim]*(?=\W|$)/
              }
            ]
          },
          {
            begin: '@' + JS_IDENT_RE // relevance booster
          },
          {
            subLanguage: 'javascript',
            excludeBegin: true,
            excludeEnd: true,
            variants: [
              {
                begin: '```',
                end: '```'
              },
              {
                begin: '`',
                end: '`'
              }
            ]
          }
        ];
        SUBST.contains = EXPRESSIONS;

        var TITLE = hljs.inherit(hljs.TITLE_MODE, { begin: JS_IDENT_RE });
        var PARAMS_RE = '(\\(.*\\))?\\s*\\B[-=]>';
        var PARAMS = {
          className: 'params',
          begin: '\\([^\\(]',
          returnBegin: true,
          /* We need another contained nameless mode to not have every nested
	    pair of parens to be called "params" */
          contains: [
            {
              begin: /\(/,
              end: /\)/,
              keywords: KEYWORDS,
              contains: ['self'].concat(EXPRESSIONS)
            }
          ]
        };

        return {
          aliases: ['coffee', 'cson', 'iced'],
          keywords: KEYWORDS,
          illegal: /\/\*/,
          contains: EXPRESSIONS.concat([
            hljs.COMMENT('###', '###'),
            hljs.HASH_COMMENT_MODE,
            {
              className: 'function',
              begin: '^\\s*' + JS_IDENT_RE + '\\s*=\\s*' + PARAMS_RE,
              end: '[-=]>',
              returnBegin: true,
              contains: [TITLE, PARAMS]
            },
            {
              // anonymous function start
              begin: /[:\(,=]\s*/,
              relevance: 0,
              contains: [
                {
                  className: 'function',
                  begin: PARAMS_RE,
                  end: '[-=]>',
                  returnBegin: true,
                  contains: [PARAMS]
                }
              ]
            },
            {
              className: 'class',
              beginKeywords: 'class',
              end: '$',
              illegal: /[:="\[\]]/,
              contains: [
                {
                  beginKeywords: 'extends',
                  endsWithParent: true,
                  illegal: /[:="\[\]]/,
                  contains: [TITLE]
                },
                TITLE
              ]
            },
            {
              begin: JS_IDENT_RE + ':',
              end: ':',
              returnBegin: true,
              returnEnd: true,
              relevance: 0
            }
          ])
        };
      };

      /***/
    },
    /* 379 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            keyword:
              '_ as at cofix else end exists exists2 fix for forall fun if IF in let ' +
              'match mod Prop return Set then Type using where with ' +
              'Abort About Add Admit Admitted All Arguments Assumptions Axiom Back BackTo ' +
              'Backtrack Bind Blacklist Canonical Cd Check Class Classes Close Coercion ' +
              'Coercions CoFixpoint CoInductive Collection Combined Compute Conjecture ' +
              'Conjectures Constant constr Constraint Constructors Context Corollary ' +
              'CreateHintDb Cut Declare Defined Definition Delimit Dependencies Dependent' +
              'Derive Drop eauto End Equality Eval Example Existential Existentials ' +
              'Existing Export exporting Extern Extract Extraction Fact Field Fields File ' +
              'Fixpoint Focus for From Function Functional Generalizable Global Goal Grab ' +
              'Grammar Graph Guarded Heap Hint HintDb Hints Hypotheses Hypothesis ident ' +
              'Identity If Immediate Implicit Import Include Inductive Infix Info Initial ' +
              'Inline Inspect Instance Instances Intro Intros Inversion Inversion_clear ' +
              'Language Left Lemma Let Libraries Library Load LoadPath Local Locate Ltac ML ' +
              'Mode Module Modules Monomorphic Morphism Next NoInline Notation Obligation ' +
              'Obligations Opaque Open Optimize Options Parameter Parameters Parametric ' +
              'Path Paths pattern Polymorphic Preterm Print Printing Program Projections ' +
              'Proof Proposition Pwd Qed Quit Rec Record Recursive Redirect Relation Remark ' +
              'Remove Require Reserved Reset Resolve Restart Rewrite Right Ring Rings Save ' +
              'Scheme Scope Scopes Script Search SearchAbout SearchHead SearchPattern ' +
              'SearchRewrite Section Separate Set Setoid Show Solve Sorted Step Strategies ' +
              'Strategy Structure SubClass Table Tables Tactic Term Test Theorem Time ' +
              'Timeout Transparent Type Typeclasses Types Undelimit Undo Unfocus Unfocused ' +
              'Unfold Universe Universes Unset Unshelve using Variable Variables Variant ' +
              'Verbose Visibility where with',
            built_in:
              'abstract absurd admit after apply as assert assumption at auto autorewrite ' +
              'autounfold before bottom btauto by case case_eq cbn cbv change ' +
              'classical_left classical_right clear clearbody cofix compare compute ' +
              'congruence constr_eq constructor contradict contradiction cut cutrewrite ' +
              'cycle decide decompose dependent destruct destruction dintuition ' +
              'discriminate discrR do double dtauto eapply eassumption eauto ecase ' +
              'econstructor edestruct ediscriminate eelim eexact eexists einduction ' +
              'einjection eleft elim elimtype enough equality erewrite eright ' +
              'esimplify_eq esplit evar exact exactly_once exfalso exists f_equal fail ' +
              'field field_simplify field_simplify_eq first firstorder fix fold fourier ' +
              'functional generalize generalizing gfail give_up has_evar hnf idtac in ' +
              'induction injection instantiate intro intro_pattern intros intuition ' +
              'inversion inversion_clear is_evar is_var lapply lazy left lia lra move ' +
              'native_compute nia nsatz omega once pattern pose progress proof psatz quote ' +
              'record red refine reflexivity remember rename repeat replace revert ' +
              'revgoals rewrite rewrite_strat right ring ring_simplify rtauto set ' +
              'setoid_reflexivity setoid_replace setoid_rewrite setoid_symmetry ' +
              'setoid_transitivity shelve shelve_unifiable simpl simple simplify_eq solve ' +
              'specialize split split_Rabs split_Rmult stepl stepr subst sum swap ' +
              'symmetry tactic tauto time timeout top transitivity trivial try tryif ' +
              'unfold unify until using vm_compute with'
          },
          contains: [
            hljs.QUOTE_STRING_MODE,
            hljs.COMMENT('\\(\\*', '\\*\\)'),
            hljs.C_NUMBER_MODE,
            {
              className: 'type',
              excludeBegin: true,
              begin: '\\|\\s*',
              end: '\\w+'
            },
            { begin: /[-=]>/ } // relevance booster
          ]
        };
      };

      /***/
    },
    /* 380 */
    /***/ function(module, exports) {
      module.exports = function cos(hljs) {
        var STRINGS = {
          className: 'string',
          variants: [
            {
              begin: '"',
              end: '"',
              contains: [
                {
                  // escaped
                  begin: '""',
                  relevance: 0
                }
              ]
            }
          ]
        };

        var NUMBERS = {
          className: 'number',
          begin: '\\b(\\d+(\\.\\d*)?|\\.\\d+)',
          relevance: 0
        };

        var COS_KEYWORDS =
          'property parameter class classmethod clientmethod extends as break ' +
          'catch close continue do d|0 else elseif for goto halt hang h|0 if job ' +
          'j|0 kill k|0 lock l|0 merge new open quit q|0 read r|0 return set s|0 ' +
          'tcommit throw trollback try tstart use view while write w|0 xecute x|0 ' +
          'zkill znspace zn ztrap zwrite zw zzdump zzwrite print zbreak zinsert ' +
          'zload zprint zremove zsave zzprint mv mvcall mvcrt mvdim mvprint zquit ' +
          'zsync ascii';

        // registered function - no need in them due to all functions are highlighted,
        // but I'll just leave this here.

        //"$bit", "$bitcount",
        //"$bitfind", "$bitlogic", "$case", "$char", "$classmethod", "$classname",
        //"$compile", "$data", "$decimal", "$double", "$extract", "$factor",
        //"$find", "$fnumber", "$get", "$increment", "$inumber", "$isobject",
        //"$isvaliddouble", "$isvalidnum", "$justify", "$length", "$list",
        //"$listbuild", "$listdata", "$listfind", "$listfromstring", "$listget",
        //"$listlength", "$listnext", "$listsame", "$listtostring", "$listvalid",
        //"$locate", "$match", "$method", "$name", "$nconvert", "$next",
        //"$normalize", "$now", "$number", "$order", "$parameter", "$piece",
        //"$prefetchoff", "$prefetchon", "$property", "$qlength", "$qsubscript",
        //"$query", "$random", "$replace", "$reverse", "$sconvert", "$select",
        //"$sortbegin", "$sortend", "$stack", "$text", "$translate", "$view",
        //"$wascii", "$wchar", "$wextract", "$wfind", "$wiswide", "$wlength",
        //"$wreverse", "$xecute", "$zabs", "$zarccos", "$zarcsin", "$zarctan",
        //"$zcos", "$zcot", "$zcsc", "$zdate", "$zdateh", "$zdatetime",
        //"$zdatetimeh", "$zexp", "$zhex", "$zln", "$zlog", "$zpower", "$zsec",
        //"$zsin", "$zsqr", "$ztan", "$ztime", "$ztimeh", "$zboolean",
        //"$zconvert", "$zcrc", "$zcyc", "$zdascii", "$zdchar", "$zf",
        //"$ziswide", "$zlascii", "$zlchar", "$zname", "$zposition", "$zqascii",
        //"$zqchar", "$zsearch", "$zseek", "$zstrip", "$zwascii", "$zwchar",
        //"$zwidth", "$zwpack", "$zwbpack", "$zwunpack", "$zwbunpack", "$zzenkaku",
        //"$change", "$mv", "$mvat", "$mvfmt", "$mvfmts", "$mviconv",
        //"$mviconvs", "$mvinmat", "$mvlover", "$mvoconv", "$mvoconvs", "$mvraise",
        //"$mvtrans", "$mvv", "$mvname", "$zbitand", "$zbitcount", "$zbitfind",
        //"$zbitget", "$zbitlen", "$zbitnot", "$zbitor", "$zbitset", "$zbitstr",
        //"$zbitxor", "$zincrement", "$znext", "$zorder", "$zprevious", "$zsort",
        //"device", "$ecode", "$estack", "$etrap", "$halt", "$horolog",
        //"$io", "$job", "$key", "$namespace", "$principal", "$quit", "$roles",
        //"$storage", "$system", "$test", "$this", "$tlevel", "$username",
        //"$x", "$y", "$za", "$zb", "$zchild", "$zeof", "$zeos", "$zerror",
        //"$zhorolog", "$zio", "$zjob", "$zmode", "$znspace", "$zparent", "$zpi",
        //"$zpos", "$zreference", "$zstorage", "$ztimestamp", "$ztimezone",
        //"$ztrap", "$zversion"

        return {
          case_insensitive: true,
          aliases: ['cos', 'cls'],
          keywords: COS_KEYWORDS,
          contains: [
            NUMBERS,
            STRINGS,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: 'comment',
              begin: /;/,
              end: '$',
              relevance: 0
            },
            {
              // Functions and user-defined functions: write $ztime(60*60*3), $$myFunc(10), $$^Val(1)
              className: 'built_in',
              begin: /(?:\$\$?|\.\.)\^?[a-zA-Z]+/
            },
            {
              // Macro command: quit $$$OK
              className: 'built_in',
              begin: /\$\$\$[a-zA-Z]+/
            },
            {
              // Special (global) variables: write %request.Content; Built-in classes: %Library.Integer
              className: 'built_in',
              begin: /%[a-z]+(?:\.[a-z]+)*/
            },
            {
              // Global variable: set ^globalName = 12 write ^globalName
              className: 'symbol',
              begin: /\^%?[a-zA-Z][\w]*/
            },
            {
              // Some control constructions: do ##class(Package.ClassName).Method(), ##super()
              className: 'keyword',
              begin: /##class|##super|#define|#dim/
            },

            // sub-languages: are not fully supported by hljs by 11/15/2015
            // left for the future implementation.
            {
              begin: /&sql\(/,
              end: /\)/,
              excludeBegin: true,
              excludeEnd: true,
              subLanguage: 'sql'
            },
            {
              begin: /&(js|jscript|javascript)</,
              end: />/,
              excludeBegin: true,
              excludeEnd: true,
              subLanguage: 'javascript'
            },
            {
              // this brakes first and last tag, but this is the only way to embed a valid html
              begin: /&html<\s*</,
              end: />\s*>/,
              subLanguage: 'xml'
            }
          ]
        };
      };

      /***/
    },
    /* 381 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var RESOURCES = 'primitive rsc_template';

        var COMMANDS =
          'group clone ms master location colocation order fencing_topology ' +
          'rsc_ticket acl_target acl_group user role ' +
          'tag xml';

        var PROPERTY_SETS = 'property rsc_defaults op_defaults';

        var KEYWORDS = 'params meta operations op rule attributes utilization';

        var OPERATORS =
          'read write deny defined not_defined in_range date spec in ' +
          'ref reference attribute type xpath version and or lt gt tag ' +
          'lte gte eq ne \\';

        var TYPES = 'number string';

        var LITERALS =
          'Master Started Slave Stopped start promote demote stop monitor true false';

        return {
          aliases: ['crm', 'pcmk'],
          case_insensitive: true,
          keywords: {
            keyword: KEYWORDS + ' ' + OPERATORS + ' ' + TYPES,
            literal: LITERALS
          },
          contains: [
            hljs.HASH_COMMENT_MODE,
            {
              beginKeywords: 'node',
              starts: {
                end: '\\s*([\\w_-]+:)?',
                starts: {
                  className: 'title',
                  end: '\\s*[\\$\\w_][\\w_-]*'
                }
              }
            },
            {
              beginKeywords: RESOURCES,
              starts: {
                className: 'title',
                end: '\\s*[\\$\\w_][\\w_-]*',
                starts: {
                  end: '\\s*@?[\\w_][\\w_\\.:-]*'
                }
              }
            },
            {
              begin: '\\b(' + COMMANDS.split(' ').join('|') + ')\\s+',
              keywords: COMMANDS,
              starts: {
                className: 'title',
                end: '[\\$\\w_][\\w_-]*'
              }
            },
            {
              beginKeywords: PROPERTY_SETS,
              starts: {
                className: 'title',
                end: '\\s*([\\w_-]+:)?'
              }
            },
            hljs.QUOTE_STRING_MODE,
            {
              className: 'meta',
              begin: '(ocf|systemd|service|lsb):[\\w_:-]+',
              relevance: 0
            },
            {
              className: 'number',
              begin: '\\b\\d+(\\.\\d+)?(ms|s|h|m)?',
              relevance: 0
            },
            {
              className: 'literal',
              begin: '[-]?(infinity|inf)',
              relevance: 0
            },
            {
              className: 'attr',
              begin: /([A-Za-z\$_\#][\w_-]+)=/,
              relevance: 0
            },
            {
              className: 'tag',
              begin: '</?',
              end: '/?>',
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 382 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var NUM_SUFFIX = '(_[uif](8|16|32|64))?';
        var CRYSTAL_IDENT_RE = '[a-zA-Z_]\\w*[!?=]?';
        var RE_STARTER =
          '!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|' +
          '>>|>|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~';
        var CRYSTAL_METHOD_RE =
          '[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\][=?]?';
        var CRYSTAL_KEYWORDS = {
          keyword:
            'abstract alias as as? asm begin break case class def do else elsif end ensure enum extend for fun if ' +
            'include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? ' +
            'return require select self sizeof struct super then type typeof union uninitialized unless until when while with yield ' +
            '__DIR__ __END_LINE__ __FILE__ __LINE__',
          literal: 'false nil true'
        };
        var SUBST = {
          className: 'subst',
          begin: '#{',
          end: '}',
          keywords: CRYSTAL_KEYWORDS
        };
        var EXPANSION = {
          className: 'template-variable',
          variants: [
            { begin: '\\{\\{', end: '\\}\\}' },
            { begin: '\\{%', end: '%\\}' }
          ],
          keywords: CRYSTAL_KEYWORDS
        };

        function recursiveParen(begin, end) {
          var contains = [{ begin: begin, end: end }];
          contains[0].contains = contains;
          return contains;
        }
        var STRING = {
          className: 'string',
          contains: [hljs.BACKSLASH_ESCAPE, SUBST],
          variants: [
            { begin: /'/, end: /'/ },
            { begin: /"/, end: /"/ },
            { begin: /`/, end: /`/ },
            {
              begin: '%w?\\(',
              end: '\\)',
              contains: recursiveParen('\\(', '\\)')
            },
            {
              begin: '%w?\\[',
              end: '\\]',
              contains: recursiveParen('\\[', '\\]')
            },
            { begin: '%w?{', end: '}', contains: recursiveParen('{', '}') },
            { begin: '%w?<', end: '>', contains: recursiveParen('<', '>') },
            { begin: '%w?/', end: '/' },
            { begin: '%w?%', end: '%' },
            { begin: '%w?-', end: '-' },
            { begin: '%w?\\|', end: '\\|' },
            { begin: /<<-\w+$/, end: /^\s*\w+$/ }
          ],
          relevance: 0
        };
        var Q_STRING = {
          className: 'string',
          variants: [
            {
              begin: '%q\\(',
              end: '\\)',
              contains: recursiveParen('\\(', '\\)')
            },
            {
              begin: '%q\\[',
              end: '\\]',
              contains: recursiveParen('\\[', '\\]')
            },
            { begin: '%q{', end: '}', contains: recursiveParen('{', '}') },
            { begin: '%q<', end: '>', contains: recursiveParen('<', '>') },
            { begin: '%q/', end: '/' },
            { begin: '%q%', end: '%' },
            { begin: '%q-', end: '-' },
            { begin: '%q\\|', end: '\\|' },
            { begin: /<<-'\w+'$/, end: /^\s*\w+$/ }
          ],
          relevance: 0
        };
        var REGEXP = {
          begin: '(' + RE_STARTER + ')\\s*',
          contains: [
            {
              className: 'regexp',
              contains: [hljs.BACKSLASH_ESCAPE, SUBST],
              variants: [
                { begin: '//[a-z]*', relevance: 0 },
                { begin: '/', end: '/[a-z]*' },
                {
                  begin: '%r\\(',
                  end: '\\)',
                  contains: recursiveParen('\\(', '\\)')
                },
                {
                  begin: '%r\\[',
                  end: '\\]',
                  contains: recursiveParen('\\[', '\\]')
                },
                { begin: '%r{', end: '}', contains: recursiveParen('{', '}') },
                { begin: '%r<', end: '>', contains: recursiveParen('<', '>') },
                { begin: '%r/', end: '/' },
                { begin: '%r%', end: '%' },
                { begin: '%r-', end: '-' },
                { begin: '%r\\|', end: '\\|' }
              ]
            }
          ],
          relevance: 0
        };
        var REGEXP2 = {
          className: 'regexp',
          contains: [hljs.BACKSLASH_ESCAPE, SUBST],
          variants: [
            {
              begin: '%r\\(',
              end: '\\)',
              contains: recursiveParen('\\(', '\\)')
            },
            {
              begin: '%r\\[',
              end: '\\]',
              contains: recursiveParen('\\[', '\\]')
            },
            { begin: '%r{', end: '}', contains: recursiveParen('{', '}') },
            { begin: '%r<', end: '>', contains: recursiveParen('<', '>') },
            { begin: '%r/', end: '/' },
            { begin: '%r%', end: '%' },
            { begin: '%r-', end: '-' },
            { begin: '%r\\|', end: '\\|' }
          ],
          relevance: 0
        };
        var ATTRIBUTE = {
          className: 'meta',
          begin: '@\\[',
          end: '\\]',
          contains: [
            hljs.inherit(hljs.QUOTE_STRING_MODE, { className: 'meta-string' })
          ]
        };
        var CRYSTAL_DEFAULT_CONTAINS = [
          EXPANSION,
          STRING,
          Q_STRING,
          REGEXP,
          REGEXP2,
          ATTRIBUTE,
          hljs.HASH_COMMENT_MODE,
          {
            className: 'class',
            beginKeywords: 'class module struct',
            end: '$|;',
            illegal: /=/,
            contains: [
              hljs.HASH_COMMENT_MODE,
              hljs.inherit(hljs.TITLE_MODE, {
                begin: '[A-Za-z_]\\w*(::\\w+)*(\\?|\\!)?'
              }),
              { begin: '<' } // relevance booster for inheritance
            ]
          },
          {
            className: 'class',
            beginKeywords: 'lib enum union',
            end: '$|;',
            illegal: /=/,
            contains: [
              hljs.HASH_COMMENT_MODE,
              hljs.inherit(hljs.TITLE_MODE, {
                begin: '[A-Za-z_]\\w*(::\\w+)*(\\?|\\!)?'
              })
            ],
            relevance: 10
          },
          {
            className: 'function',
            beginKeywords: 'def',
            end: /\B\b/,
            contains: [
              hljs.inherit(hljs.TITLE_MODE, {
                begin: CRYSTAL_METHOD_RE,
                endsParent: true
              })
            ]
          },
          {
            className: 'function',
            beginKeywords: 'fun macro',
            end: /\B\b/,
            contains: [
              hljs.inherit(hljs.TITLE_MODE, {
                begin: CRYSTAL_METHOD_RE,
                endsParent: true
              })
            ],
            relevance: 5
          },
          {
            className: 'symbol',
            begin: hljs.UNDERSCORE_IDENT_RE + '(\\!|\\?)?:',
            relevance: 0
          },
          {
            className: 'symbol',
            begin: ':',
            contains: [STRING, { begin: CRYSTAL_METHOD_RE }],
            relevance: 0
          },
          {
            className: 'number',
            variants: [
              { begin: '\\b0b([01_]*[01])' + NUM_SUFFIX },
              { begin: '\\b0o([0-7_]*[0-7])' + NUM_SUFFIX },
              { begin: '\\b0x([A-Fa-f0-9_]*[A-Fa-f0-9])' + NUM_SUFFIX },
              {
                begin:
                  '\\b(([0-9][0-9_]*[0-9]|[0-9])(\\.[0-9_]*[0-9])?([eE][+-]?[0-9_]*[0-9])?)' +
                  NUM_SUFFIX
              }
            ],
            relevance: 0
          }
        ];
        SUBST.contains = CRYSTAL_DEFAULT_CONTAINS;
        EXPANSION.contains = CRYSTAL_DEFAULT_CONTAINS.slice(1); // without EXPANSION

        return {
          aliases: ['cr'],
          lexemes: CRYSTAL_IDENT_RE,
          keywords: CRYSTAL_KEYWORDS,
          contains: CRYSTAL_DEFAULT_CONTAINS
        };
      };

      /***/
    },
    /* 383 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            // Normal keywords.
            'abstract as base bool break byte case catch char checked const continue decimal ' +
            'default delegate do double enum event explicit extern finally fixed float ' +
            'for foreach goto if implicit in int interface internal is lock long nameof ' +
            'object operator out override params private protected public readonly ref sbyte ' +
            'sealed short sizeof stackalloc static string struct switch this try typeof ' +
            'uint ulong unchecked unsafe ushort using virtual void volatile while ' +
            // Contextual keywords.
            'add alias ascending async await by descending dynamic equals from get global group into join ' +
            'let on orderby partial remove select set value var where yield',
          literal: 'null false true'
        };
        var NUMBERS = {
          className: 'number',
          variants: [
            { begin: "\\b(0b[01']+)" },
            {
              begin:
                "(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)(u|U|l|L|ul|UL|f|F|b|B)"
            },
            {
              begin:
                "(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"
            }
          ],
          relevance: 0
        };
        var VERBATIM_STRING = {
          className: 'string',
          begin: '@"',
          end: '"',
          contains: [{ begin: '""' }]
        };
        var VERBATIM_STRING_NO_LF = hljs.inherit(VERBATIM_STRING, {
          illegal: /\n/
        });
        var SUBST = {
          className: 'subst',
          begin: '{',
          end: '}',
          keywords: KEYWORDS
        };
        var SUBST_NO_LF = hljs.inherit(SUBST, { illegal: /\n/ });
        var INTERPOLATED_STRING = {
          className: 'string',
          begin: /\$"/,
          end: '"',
          illegal: /\n/,
          contains: [
            { begin: '{{' },
            { begin: '}}' },
            hljs.BACKSLASH_ESCAPE,
            SUBST_NO_LF
          ]
        };
        var INTERPOLATED_VERBATIM_STRING = {
          className: 'string',
          begin: /\$@"/,
          end: '"',
          contains: [{ begin: '{{' }, { begin: '}}' }, { begin: '""' }, SUBST]
        };
        var INTERPOLATED_VERBATIM_STRING_NO_LF = hljs.inherit(
          INTERPOLATED_VERBATIM_STRING,
          {
            illegal: /\n/,
            contains: [
              { begin: '{{' },
              { begin: '}}' },
              { begin: '""' },
              SUBST_NO_LF
            ]
          }
        );
        SUBST.contains = [
          INTERPOLATED_VERBATIM_STRING,
          INTERPOLATED_STRING,
          VERBATIM_STRING,
          hljs.APOS_STRING_MODE,
          hljs.QUOTE_STRING_MODE,
          NUMBERS,
          hljs.C_BLOCK_COMMENT_MODE
        ];
        SUBST_NO_LF.contains = [
          INTERPOLATED_VERBATIM_STRING_NO_LF,
          INTERPOLATED_STRING,
          VERBATIM_STRING_NO_LF,
          hljs.APOS_STRING_MODE,
          hljs.QUOTE_STRING_MODE,
          NUMBERS,
          hljs.inherit(hljs.C_BLOCK_COMMENT_MODE, { illegal: /\n/ })
        ];
        var STRING = {
          variants: [
            INTERPOLATED_VERBATIM_STRING,
            INTERPOLATED_STRING,
            VERBATIM_STRING,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE
          ]
        };

        var TYPE_IDENT_RE =
          hljs.IDENT_RE +
          '(<' +
          hljs.IDENT_RE +
          '(\\s*,\\s*' +
          hljs.IDENT_RE +
          ')*>)?(\\[\\])?';

        return {
          aliases: ['csharp'],
          keywords: KEYWORDS,
          illegal: /::/,
          contains: [
            hljs.COMMENT('///', '$', {
              returnBegin: true,
              contains: [
                {
                  className: 'doctag',
                  variants: [
                    {
                      begin: '///',
                      relevance: 0
                    },
                    {
                      begin: '<!--|-->'
                    },
                    {
                      begin: '</?',
                      end: '>'
                    }
                  ]
                }
              ]
            }),
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: 'meta',
              begin: '#',
              end: '$',
              keywords: {
                'meta-keyword':
                  'if else elif endif define undef warning error line region endregion pragma checksum'
              }
            },
            STRING,
            NUMBERS,
            {
              beginKeywords: 'class interface',
              end: /[{;=]/,
              illegal: /[^\s:,]/,
              contains: [
                hljs.TITLE_MODE,
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },
            {
              beginKeywords: 'namespace',
              end: /[{;=]/,
              illegal: /[^\s:]/,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, { begin: '[a-zA-Z](\\.?\\w)*' }),
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },
            {
              // [Attributes("")]
              className: 'meta',
              begin: '^\\s*\\[',
              excludeBegin: true,
              end: '\\]',
              excludeEnd: true,
              contains: [{ className: 'meta-string', begin: /"/, end: /"/ }]
            },
            {
              // Expression keywords prevent 'keyword Name(...)' from being
              // recognized as a function definition
              beginKeywords: 'new return throw await else',
              relevance: 0
            },
            {
              className: 'function',
              begin: '(' + TYPE_IDENT_RE + '\\s+)+' + hljs.IDENT_RE + '\\s*\\(',
              returnBegin: true,
              end: /\s*[{;=]/,
              excludeEnd: true,
              keywords: KEYWORDS,
              contains: [
                {
                  begin: hljs.IDENT_RE + '\\s*\\(',
                  returnBegin: true,
                  contains: [hljs.TITLE_MODE],
                  relevance: 0
                },
                {
                  className: 'params',
                  begin: /\(/,
                  end: /\)/,
                  excludeBegin: true,
                  excludeEnd: true,
                  keywords: KEYWORDS,
                  relevance: 0,
                  contains: [STRING, NUMBERS, hljs.C_BLOCK_COMMENT_MODE]
                },
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 384 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          case_insensitive: false,
          lexemes: '[a-zA-Z][a-zA-Z0-9_-]*',
          keywords: {
            keyword:
              'base-uri child-src connect-src default-src font-src form-action' +
              ' frame-ancestors frame-src img-src media-src object-src plugin-types' +
              ' report-uri sandbox script-src style-src'
          },
          contains: [
            {
              className: 'string',
              begin: "'",
              end: "'"
            },
            {
              className: 'attribute',
              begin: '^Content',
              end: ':',
              excludeEnd: true
            }
          ]
        };
      };

      /***/
    },
    /* 385 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';
        var RULE = {
          begin: /[A-Z\_\.\-]+\s*:/,
          returnBegin: true,
          end: ';',
          endsWithParent: true,
          contains: [
            {
              className: 'attribute',
              begin: /\S/,
              end: ':',
              excludeEnd: true,
              starts: {
                endsWithParent: true,
                excludeEnd: true,
                contains: [
                  {
                    begin: /[\w-]+\(/,
                    returnBegin: true,
                    contains: [
                      {
                        className: 'built_in',
                        begin: /[\w-]+/
                      },
                      {
                        begin: /\(/,
                        end: /\)/,
                        contains: [
                          hljs.APOS_STRING_MODE,
                          hljs.QUOTE_STRING_MODE
                        ]
                      }
                    ]
                  },
                  hljs.CSS_NUMBER_MODE,
                  hljs.QUOTE_STRING_MODE,
                  hljs.APOS_STRING_MODE,
                  hljs.C_BLOCK_COMMENT_MODE,
                  {
                    className: 'number',
                    begin: '#[0-9A-Fa-f]+'
                  },
                  {
                    className: 'meta',
                    begin: '!important'
                  }
                ]
              }
            }
          ]
        };

        return {
          case_insensitive: true,
          illegal: /[=\/|'\$]/,
          contains: [
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: 'selector-id',
              begin: /#[A-Za-z0-9_-]+/
            },
            {
              className: 'selector-class',
              begin: /\.[A-Za-z0-9_-]+/
            },
            {
              className: 'selector-attr',
              begin: /\[/,
              end: /\]/,
              illegal: '$'
            },
            {
              className: 'selector-pseudo',
              begin: /:(:)?[a-zA-Z0-9\_\-\+\(\)"'.]+/
            },
            {
              begin: '@(font-face|page)',
              lexemes: '[a-z-]+',
              keywords: 'font-face page'
            },
            {
              begin: '@',
              end: '[{;]', // at_rule eating first "{" is a good thing
              // because it doesn’t let it to be parsed as
              // a rule set but instead drops parser into
              // the default mode which is how it should be.
              illegal: /:/, // break on Less variables @var: ...
              contains: [
                {
                  className: 'keyword',
                  begin: /\w+/
                },
                {
                  begin: /\s/,
                  endsWithParent: true,
                  excludeEnd: true,
                  relevance: 0,
                  contains: [
                    hljs.APOS_STRING_MODE,
                    hljs.QUOTE_STRING_MODE,
                    hljs.CSS_NUMBER_MODE
                  ]
                }
              ]
            },
            {
              className: 'selector-tag',
              begin: IDENT_RE,
              relevance: 0
            },
            {
              begin: '{',
              end: '}',
              illegal: /\S/,
              contains: [hljs.C_BLOCK_COMMENT_MODE, RULE]
            }
          ]
        };
      };

      /***/
    },
    /* 386 */
    /***/ function(module, exports) {
      module.exports
      /**
       * Known issues:
       *
       * - invalid hex string literals will be recognized as a double quoted strings
       *   but 'x' at the beginning of string will not be matched
       *
       * - delimited string literals are not checked for matching end delimiter
       *   (not possible to do with js regexp)
       *
       * - content of token string is colored as a string (i.e. no keyword coloring inside a token string)
       *   also, content of token string is not validated to contain only valid D tokens
       *
       * - special token sequence rule is not strictly following D grammar (anything following #line
       *   up to the end of line is matched as special token sequence)
       */ = function(hljs) {
        /**
         * Language keywords
         *
         * @type {Object}
         */
        var D_KEYWORDS = {
          keyword:
            'abstract alias align asm assert auto body break byte case cast catch class ' +
            'const continue debug default delete deprecated do else enum export extern final ' +
            'finally for foreach foreach_reverse|10 goto if immutable import in inout int ' +
            'interface invariant is lazy macro mixin module new nothrow out override package ' +
            'pragma private protected public pure ref return scope shared static struct ' +
            'super switch synchronized template this throw try typedef typeid typeof union ' +
            'unittest version void volatile while with __FILE__ __LINE__ __gshared|10 ' +
            '__thread __traits __DATE__ __EOF__ __TIME__ __TIMESTAMP__ __VENDOR__ __VERSION__',
          built_in:
            'bool cdouble cent cfloat char creal dchar delegate double dstring float function ' +
            'idouble ifloat ireal long real short string ubyte ucent uint ulong ushort wchar ' +
            'wstring',
          literal: 'false null true'
        };

        /**
         * Number literal regexps
         *
         * @type {String}
         */
        var decimal_integer_re = '(0|[1-9][\\d_]*)',
          decimal_integer_nosus_re = '(0|[1-9][\\d_]*|\\d[\\d_]*|[\\d_]+?\\d)',
          binary_integer_re = '0[bB][01_]+',
          hexadecimal_digits_re =
            '([\\da-fA-F][\\da-fA-F_]*|_[\\da-fA-F][\\da-fA-F_]*)',
          hexadecimal_integer_re = '0[xX]' + hexadecimal_digits_re,
          decimal_exponent_re = '([eE][+-]?' + decimal_integer_nosus_re + ')',
          decimal_float_re =
            '(' +
            decimal_integer_nosus_re +
            '(\\.\\d*|' +
            decimal_exponent_re +
            ')|' +
            '\\d+\\.' +
            decimal_integer_nosus_re +
            decimal_integer_nosus_re +
            '|' +
            '\\.' +
            decimal_integer_re +
            decimal_exponent_re +
            '?' +
            ')',
          hexadecimal_float_re =
            '(0[xX](' +
            hexadecimal_digits_re +
            '\\.' +
            hexadecimal_digits_re +
            '|' +
            '\\.?' +
            hexadecimal_digits_re +
            ')[pP][+-]?' +
            decimal_integer_nosus_re +
            ')',
          integer_re =
            '(' +
            decimal_integer_re +
            '|' +
            binary_integer_re +
            '|' +
            hexadecimal_integer_re +
            ')',
          float_re = '(' + hexadecimal_float_re + '|' + decimal_float_re + ')';

        /**
         * Escape sequence supported in D string and character literals
         *
         * @type {String}
         */
        var escape_sequence_re =
          '\\\\(' +
          '[\'"\\?\\\\abfnrtv]|' + // common escapes
          'u[\\dA-Fa-f]{4}|' + // four hex digit unicode codepoint
          '[0-7]{1,3}|' + // one to three octal digit ascii char code
          'x[\\dA-Fa-f]{2}|' + // two hex digit ascii char code
          'U[\\dA-Fa-f]{8}' + // eight hex digit unicode codepoint
          ')|' +
          '&[a-zA-Z\\d]{2,};'; // named character entity

        /**
         * D integer number literals
         *
         * @type {Object}
         */
        var D_INTEGER_MODE = {
          className: 'number',
          begin: '\\b' + integer_re + '(L|u|U|Lu|LU|uL|UL)?',
          relevance: 0
        };

        /**
         * [D_FLOAT_MODE description]
         * @type {Object}
         */
        var D_FLOAT_MODE = {
          className: 'number',
          begin:
            '\\b(' +
            float_re +
            '([fF]|L|i|[fF]i|Li)?|' +
            integer_re +
            '(i|[fF]i|Li)' +
            ')',
          relevance: 0
        };

        /**
         * D character literal
         *
         * @type {Object}
         */
        var D_CHARACTER_MODE = {
          className: 'string',
          begin: "'(" + escape_sequence_re + '|.)',
          end: "'",
          illegal: '.'
        };

        /**
         * D string escape sequence
         *
         * @type {Object}
         */
        var D_ESCAPE_SEQUENCE = {
          begin: escape_sequence_re,
          relevance: 0
        };

        /**
         * D double quoted string literal
         *
         * @type {Object}
         */
        var D_STRING_MODE = {
          className: 'string',
          begin: '"',
          contains: [D_ESCAPE_SEQUENCE],
          end: '"[cwd]?'
        };

        /**
         * D wysiwyg and delimited string literals
         *
         * @type {Object}
         */
        var D_WYSIWYG_DELIMITED_STRING_MODE = {
          className: 'string',
          begin: '[rq]"',
          end: '"[cwd]?',
          relevance: 5
        };

        /**
         * D alternate wysiwyg string literal
         *
         * @type {Object}
         */
        var D_ALTERNATE_WYSIWYG_STRING_MODE = {
          className: 'string',
          begin: '`',
          end: '`[cwd]?'
        };

        /**
         * D hexadecimal string literal
         *
         * @type {Object}
         */
        var D_HEX_STRING_MODE = {
          className: 'string',
          begin: 'x"[\\da-fA-F\\s\\n\\r]*"[cwd]?',
          relevance: 10
        };

        /**
         * D delimited string literal
         *
         * @type {Object}
         */
        var D_TOKEN_STRING_MODE = {
          className: 'string',
          begin: 'q"\\{',
          end: '\\}"'
        };

        /**
         * Hashbang support
         *
         * @type {Object}
         */
        var D_HASHBANG_MODE = {
          className: 'meta',
          begin: '^#!',
          end: '$',
          relevance: 5
        };

        /**
         * D special token sequence
         *
         * @type {Object}
         */
        var D_SPECIAL_TOKEN_SEQUENCE_MODE = {
          className: 'meta',
          begin: '#(line)',
          end: '$',
          relevance: 5
        };

        /**
         * D attributes
         *
         * @type {Object}
         */
        var D_ATTRIBUTE_MODE = {
          className: 'keyword',
          begin: '@[a-zA-Z_][a-zA-Z_\\d]*'
        };

        /**
         * D nesting comment
         *
         * @type {Object}
         */
        var D_NESTING_COMMENT_MODE = hljs.COMMENT('\\/\\+', '\\+\\/', {
          contains: ['self'],
          relevance: 10
        });

        return {
          lexemes: hljs.UNDERSCORE_IDENT_RE,
          keywords: D_KEYWORDS,
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            D_NESTING_COMMENT_MODE,
            D_HEX_STRING_MODE,
            D_STRING_MODE,
            D_WYSIWYG_DELIMITED_STRING_MODE,
            D_ALTERNATE_WYSIWYG_STRING_MODE,
            D_TOKEN_STRING_MODE,
            D_FLOAT_MODE,
            D_INTEGER_MODE,
            D_CHARACTER_MODE,
            D_HASHBANG_MODE,
            D_SPECIAL_TOKEN_SEQUENCE_MODE,
            D_ATTRIBUTE_MODE
          ]
        };
      };

      /***/
    },
    /* 387 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['md', 'mkdown', 'mkd'],
          contains: [
            // highlight headers
            {
              className: 'section',
              variants: [
                { begin: '^#{1,6}', end: '$' },
                { begin: '^.+?\\n[=-]{2,}$' }
              ]
            },
            // inline html
            {
              begin: '<',
              end: '>',
              subLanguage: 'xml',
              relevance: 0
            },
            // lists (indicators only)
            {
              className: 'bullet',
              begin: '^([*+-]|(\\d+\\.))\\s+'
            },
            // strong segments
            {
              className: 'strong',
              begin: '[*_]{2}.+?[*_]{2}'
            },
            // emphasis segments
            {
              className: 'emphasis',
              variants: [
                { begin: '\\*.+?\\*' },
                {
                  begin: '_.+?_',
                  relevance: 0
                }
              ]
            },
            // blockquotes
            {
              className: 'quote',
              begin: '^>\\s+',
              end: '$'
            },
            // code snippets
            {
              className: 'code',
              variants: [
                {
                  begin: '^```w*s*$',
                  end: '^```s*$'
                },
                {
                  begin: '`.+?`'
                },
                {
                  begin: '^( {4}|\t)',
                  end: '$',
                  relevance: 0
                }
              ]
            },
            // horizontal rules
            {
              begin: '^[-\\*]{3,}',
              end: '$'
            },
            // using links - title and link
            {
              begin: '\\[.+?\\][\\(\\[].*?[\\)\\]]',
              returnBegin: true,
              contains: [
                {
                  className: 'string',
                  begin: '\\[',
                  end: '\\]',
                  excludeBegin: true,
                  returnEnd: true,
                  relevance: 0
                },
                {
                  className: 'link',
                  begin: '\\]\\(',
                  end: '\\)',
                  excludeBegin: true,
                  excludeEnd: true
                },
                {
                  className: 'symbol',
                  begin: '\\]\\[',
                  end: '\\]',
                  excludeBegin: true,
                  excludeEnd: true
                }
              ],
              relevance: 10
            },
            {
              begin: /^\[[^\n]+\]:/,
              returnBegin: true,
              contains: [
                {
                  className: 'symbol',
                  begin: /\[/,
                  end: /\]/,
                  excludeBegin: true,
                  excludeEnd: true
                },
                {
                  className: 'link',
                  begin: /:\s*/,
                  end: /$/,
                  excludeBegin: true
                }
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 388 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var SUBST = {
          className: 'subst',
          variants: [
            { begin: '\\${', end: '}' },
            { begin: '\\$[A-Za-z0-9_]+' }
          ],
          keywords: 'true false null this is new super'
        };

        var STRING = {
          className: 'string',
          variants: [
            {
              begin: "r'''",
              end: "'''"
            },
            {
              begin: 'r"""',
              end: '"""'
            },
            {
              begin: "r'",
              end: "'",
              illegal: '\\n'
            },
            {
              begin: 'r"',
              end: '"',
              illegal: '\\n'
            },
            {
              begin: "'''",
              end: "'''",
              contains: [hljs.BACKSLASH_ESCAPE, SUBST]
            },
            {
              begin: '"""',
              end: '"""',
              contains: [hljs.BACKSLASH_ESCAPE, SUBST]
            },
            {
              begin: "'",
              end: "'",
              illegal: '\\n',
              contains: [hljs.BACKSLASH_ESCAPE, SUBST]
            },
            {
              begin: '"',
              end: '"',
              illegal: '\\n',
              contains: [hljs.BACKSLASH_ESCAPE, SUBST]
            }
          ]
        };
        SUBST.contains = [hljs.C_NUMBER_MODE, STRING];

        var KEYWORDS = {
          keyword:
            'assert async await break case catch class const continue default do else enum extends false final ' +
            'finally for if in is new null rethrow return super switch sync this throw true try var void while with yield ' +
            'abstract as dynamic export external factory get implements import library operator part set static typedef',
          built_in:
            // dart:core
            'print Comparable DateTime Duration Function Iterable Iterator List Map Match Null Object Pattern RegExp Set ' +
            'Stopwatch String StringBuffer StringSink Symbol Type Uri bool double int num ' +
            // dart:html
            'document window querySelector querySelectorAll Element ElementList'
        };

        return {
          keywords: KEYWORDS,
          contains: [
            STRING,
            hljs.COMMENT('/\\*\\*', '\\*/', {
              subLanguage: 'markdown'
            }),
            hljs.COMMENT('///', '$', {
              subLanguage: 'markdown'
            }),
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: 'class',
              beginKeywords: 'class interface',
              end: '{',
              excludeEnd: true,
              contains: [
                {
                  beginKeywords: 'extends implements'
                },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            },
            hljs.C_NUMBER_MODE,
            {
              className: 'meta',
              begin: '@[A-Za-z]+'
            },
            {
              begin: '=>' // No markup, just a relevance booster
            }
          ]
        };
      };

      /***/
    },
    /* 389 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS =
          'exports register file shl array record property for mod while set ally label uses raise not ' +
          'stored class safecall var interface or private static exit index inherited to else stdcall ' +
          'override shr asm far resourcestring finalization packed virtual out and protected library do ' +
          'xorwrite goto near function end div overload object unit begin string on inline repeat until ' +
          'destructor write message program with read initialization except default nil if case cdecl in ' +
          'downto threadvar of try pascal const external constructor type public then implementation ' +
          'finally published procedure absolute reintroduce operator as is abstract alias assembler ' +
          'bitpacked break continue cppdecl cvar enumerator experimental platform deprecated ' +
          'unimplemented dynamic export far16 forward generic helper implements interrupt iochecks ' +
          'local name nodefault noreturn nostackframe oldfpccall otherwise saveregisters softfloat ' +
          'specialize strict unaligned varargs ';
        var COMMENT_MODES = [
          hljs.C_LINE_COMMENT_MODE,
          hljs.COMMENT(/\{/, /\}/, { relevance: 0 }),
          hljs.COMMENT(/\(\*/, /\*\)/, { relevance: 10 })
        ];
        var DIRECTIVE = {
          className: 'meta',
          variants: [
            { begin: /\{\$/, end: /\}/ },
            { begin: /\(\*\$/, end: /\*\)/ }
          ]
        };
        var STRING = {
          className: 'string',
          begin: /'/,
          end: /'/,
          contains: [{ begin: /''/ }]
        };
        var CHAR_STRING = {
          className: 'string',
          begin: /(#\d+)+/
        };
        var CLASS = {
          begin: hljs.IDENT_RE + '\\s*=\\s*class\\s*\\(',
          returnBegin: true,
          contains: [hljs.TITLE_MODE]
        };
        var FUNCTION = {
          className: 'function',
          beginKeywords: 'function constructor destructor procedure',
          end: /[:;]/,
          keywords: 'function constructor|10 destructor|10 procedure|10',
          contains: [
            hljs.TITLE_MODE,
            {
              className: 'params',
              begin: /\(/,
              end: /\)/,
              keywords: KEYWORDS,
              contains: [STRING, CHAR_STRING, DIRECTIVE].concat(COMMENT_MODES)
            },
            DIRECTIVE
          ].concat(COMMENT_MODES)
        };
        return {
          aliases: [
            'dpr',
            'dfm',
            'pas',
            'pascal',
            'freepascal',
            'lazarus',
            'lpr',
            'lfm'
          ],
          case_insensitive: true,
          keywords: KEYWORDS,
          illegal: /"|\$[G-Zg-z]|\/\*|<\/|\|/,
          contains: [
            STRING,
            CHAR_STRING,
            hljs.NUMBER_MODE,
            CLASS,
            FUNCTION,
            DIRECTIVE
          ].concat(COMMENT_MODES)
        };
      };

      /***/
    },
    /* 390 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['patch'],
          contains: [
            {
              className: 'meta',
              relevance: 10,
              variants: [
                { begin: /^@@ +\-\d+,\d+ +\+\d+,\d+ +@@$/ },
                { begin: /^\*\*\* +\d+,\d+ +\*\*\*\*$/ },
                { begin: /^\-\-\- +\d+,\d+ +\-\-\-\-$/ }
              ]
            },
            {
              className: 'comment',
              variants: [
                { begin: /Index: /, end: /$/ },
                { begin: /={3,}/, end: /$/ },
                { begin: /^\-{3}/, end: /$/ },
                { begin: /^\*{3} /, end: /$/ },
                { begin: /^\+{3}/, end: /$/ },
                { begin: /\*{5}/, end: /\*{5}$/ }
              ]
            },
            {
              className: 'addition',
              begin: '^\\+',
              end: '$'
            },
            {
              className: 'deletion',
              begin: '^\\-',
              end: '$'
            },
            {
              className: 'addition',
              begin: '^\\!',
              end: '$'
            }
          ]
        };
      };

      /***/
    },
    /* 391 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var FILTER = {
          begin: /\|[A-Za-z]+:?/,
          keywords: {
            name:
              'truncatewords removetags linebreaksbr yesno get_digit timesince random striptags ' +
              'filesizeformat escape linebreaks length_is ljust rjust cut urlize fix_ampersands ' +
              'title floatformat capfirst pprint divisibleby add make_list unordered_list urlencode ' +
              'timeuntil urlizetrunc wordcount stringformat linenumbers slice date dictsort ' +
              'dictsortreversed default_if_none pluralize lower join center default ' +
              'truncatewords_html upper length phone2numeric wordwrap time addslashes slugify first ' +
              'escapejs force_escape iriencode last safe safeseq truncatechars localize unlocalize ' +
              'localtime utc timezone'
          },
          contains: [hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE]
        };

        return {
          aliases: ['jinja'],
          case_insensitive: true,
          subLanguage: 'xml',
          contains: [
            hljs.COMMENT(/\{%\s*comment\s*%}/, /\{%\s*endcomment\s*%}/),
            hljs.COMMENT(/\{#/, /#}/),
            {
              className: 'template-tag',
              begin: /\{%/,
              end: /%}/,
              contains: [
                {
                  className: 'name',
                  begin: /\w+/,
                  keywords: {
                    name:
                      'comment endcomment load templatetag ifchanged endifchanged if endif firstof for ' +
                      'endfor ifnotequal endifnotequal widthratio extends include spaceless ' +
                      'endspaceless regroup ifequal endifequal ssi now with cycle url filter ' +
                      'endfilter debug block endblock else autoescape endautoescape csrf_token empty elif ' +
                      'endwith static trans blocktrans endblocktrans get_static_prefix get_media_prefix ' +
                      'plural get_current_language language get_available_languages ' +
                      'get_current_language_bidi get_language_info get_language_info_list localize ' +
                      'endlocalize localtime endlocaltime timezone endtimezone get_current_timezone ' +
                      'verbatim'
                  },
                  starts: {
                    endsWithParent: true,
                    keywords: 'in by as',
                    contains: [FILTER],
                    relevance: 0
                  }
                }
              ]
            },
            {
              className: 'template-variable',
              begin: /\{\{/,
              end: /}}/,
              contains: [FILTER]
            }
          ]
        };
      };

      /***/
    },
    /* 392 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['bind', 'zone'],
          keywords: {
            keyword:
              'IN A AAAA AFSDB APL CAA CDNSKEY CDS CERT CNAME DHCID DLV DNAME DNSKEY DS HIP IPSECKEY KEY KX ' +
              'LOC MX NAPTR NS NSEC NSEC3 NSEC3PARAM PTR RRSIG RP SIG SOA SRV SSHFP TA TKEY TLSA TSIG TXT'
          },
          contains: [
            hljs.COMMENT(';', '$', { relevance: 0 }),
            {
              className: 'meta',
              begin: /^\$(TTL|GENERATE|INCLUDE|ORIGIN)\b/
            },
            // IPv6
            {
              className: 'number',
              begin:
                '((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))\\b'
            },
            // IPv4
            {
              className: 'number',
              begin:
                '((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]).){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\b'
            },
            hljs.inherit(hljs.NUMBER_MODE, { begin: /\b\d+[dhwm]?/ })
          ]
        };
      };

      /***/
    },
    /* 393 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['docker'],
          case_insensitive: true,
          keywords: 'from maintainer expose env arg user onbuild stopsignal',
          contains: [
            hljs.HASH_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.NUMBER_MODE,
            {
              beginKeywords:
                'run cmd entrypoint volume add copy workdir label healthcheck shell',
              starts: {
                end: /[^\\]\n/,
                subLanguage: 'bash'
              }
            }
          ],
          illegal: '</'
        };
      };

      /***/
    },
    /* 394 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var COMMENT = hljs.COMMENT(/^\s*@?rem\b/, /$/, {
          relevance: 10
        });
        var LABEL = {
          className: 'symbol',
          begin: '^\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\s+label)',
          relevance: 0
        };
        return {
          aliases: ['bat', 'cmd'],
          case_insensitive: true,
          illegal: /\/\*/,
          keywords: {
            keyword:
              'if else goto for in do call exit not exist errorlevel defined ' +
              'equ neq lss leq gtr geq',
            built_in:
              'prn nul lpt3 lpt2 lpt1 con com4 com3 com2 com1 aux ' +
              'shift cd dir echo setlocal endlocal set pause copy ' +
              'append assoc at attrib break cacls cd chcp chdir chkdsk chkntfs cls cmd color ' +
              'comp compact convert date dir diskcomp diskcopy doskey erase fs ' +
              'find findstr format ftype graftabl help keyb label md mkdir mode more move path ' +
              'pause print popd pushd promt rd recover rem rename replace restore rmdir shift' +
              'sort start subst time title tree type ver verify vol ' +
              // winutils
              'ping net ipconfig taskkill xcopy ren del'
          },
          contains: [
            {
              className: 'variable',
              begin: /%%[^ ]|%[^ ]+?%|![^ ]+?!/
            },
            {
              className: 'function',
              begin: LABEL.begin,
              end: 'goto:eof',
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  begin: '([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*'
                }),
                COMMENT
              ]
            },
            {
              className: 'number',
              begin: '\\b\\d+',
              relevance: 0
            },
            COMMENT
          ]
        };
      };

      /***/
    },
    /* 395 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var QUOTED_PROPERTY = {
          className: 'string',
          begin: /"/,
          end: /"/
        };
        var APOS_PROPERTY = {
          className: 'string',
          begin: /'/,
          end: /'/
        };
        var UNQUOTED_PROPERTY = {
          className: 'string',
          begin: '[\\w-?]+:\\w+',
          end: '\\W',
          relevance: 0
        };
        var VALUELESS_PROPERTY = {
          className: 'string',
          begin: '\\w+-?\\w+',
          end: '\\W',
          relevance: 0
        };

        return {
          keywords: 'dsconfig',
          contains: [
            {
              className: 'keyword',
              begin: '^dsconfig',
              end: '\\s',
              excludeEnd: true,
              relevance: 10
            },
            {
              className: 'built_in',
              begin: '(list|create|get|set|delete)-(\\w+)',
              end: '\\s',
              excludeEnd: true,
              illegal: '!@#$%^&*()',
              relevance: 10
            },
            {
              className: 'built_in',
              begin: '--(\\w+)',
              end: '\\s',
              excludeEnd: true
            },
            QUOTED_PROPERTY,
            APOS_PROPERTY,
            UNQUOTED_PROPERTY,
            VALUELESS_PROPERTY,
            hljs.HASH_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 396 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var STRINGS = {
          className: 'string',
          variants: [
            hljs.inherit(hljs.QUOTE_STRING_MODE, { begin: '((u8?|U)|L)?"' }),
            {
              begin: '(u8?|U)?R"',
              end: '"',
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              begin: "'\\\\?.",
              end: "'",
              illegal: '.'
            }
          ]
        };

        var NUMBERS = {
          className: 'number',
          variants: [
            { begin: '\\b(\\d+(\\.\\d*)?|\\.\\d+)(u|U|l|L|ul|UL|f|F)' },
            { begin: hljs.C_NUMBER_RE }
          ],
          relevance: 0
        };

        var PREPROCESSOR = {
          className: 'meta',
          begin: '#',
          end: '$',
          keywords: {
            'meta-keyword': 'if else elif endif define undef ifdef ifndef'
          },
          contains: [
            {
              begin: /\\\n/,
              relevance: 0
            },
            {
              beginKeywords: 'include',
              end: '$',
              keywords: { 'meta-keyword': 'include' },
              contains: [
                hljs.inherit(STRINGS, { className: 'meta-string' }),
                {
                  className: 'meta-string',
                  begin: '<',
                  end: '>',
                  illegal: '\\n'
                }
              ]
            },
            STRINGS,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE
          ]
        };

        var DTS_REFERENCE = {
          className: 'variable',
          begin: '\\&[a-z\\d_]*\\b'
        };

        var DTS_KEYWORD = {
          className: 'meta-keyword',
          begin: '/[a-z][a-z\\d-]*/'
        };

        var DTS_LABEL = {
          className: 'symbol',
          begin: '^\\s*[a-zA-Z_][a-zA-Z\\d_]*:'
        };

        var DTS_CELL_PROPERTY = {
          className: 'params',
          begin: '<',
          end: '>',
          contains: [NUMBERS, DTS_REFERENCE]
        };

        var DTS_NODE = {
          className: 'class',
          begin: /[a-zA-Z_][a-zA-Z\d_@]*\s{/,
          end: /[{;=]/,
          returnBegin: true,
          excludeEnd: true
        };

        var DTS_ROOT_NODE = {
          className: 'class',
          begin: '/\\s*{',
          end: '};',
          relevance: 10,
          contains: [
            DTS_REFERENCE,
            DTS_KEYWORD,
            DTS_LABEL,
            DTS_NODE,
            DTS_CELL_PROPERTY,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            NUMBERS,
            STRINGS
          ]
        };

        return {
          keywords: '',
          contains: [
            DTS_ROOT_NODE,
            DTS_REFERENCE,
            DTS_KEYWORD,
            DTS_LABEL,
            DTS_NODE,
            DTS_CELL_PROPERTY,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            NUMBERS,
            STRINGS,
            PREPROCESSOR,
            {
              begin: hljs.IDENT_RE + '::',
              keywords: ''
            }
          ]
        };
      };

      /***/
    },
    /* 397 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var EXPRESSION_KEYWORDS =
          'if eq ne lt lte gt gte select default math sep';
        return {
          aliases: ['dst'],
          case_insensitive: true,
          subLanguage: 'xml',
          contains: [
            {
              className: 'template-tag',
              begin: /\{[#\/]/,
              end: /\}/,
              illegal: /;/,
              contains: [
                {
                  className: 'name',
                  begin: /[a-zA-Z\.-]+/,
                  starts: {
                    endsWithParent: true,
                    relevance: 0,
                    contains: [hljs.QUOTE_STRING_MODE]
                  }
                }
              ]
            },
            {
              className: 'template-variable',
              begin: /\{/,
              end: /\}/,
              illegal: /;/,
              keywords: EXPRESSION_KEYWORDS
            }
          ]
        };
      };

      /***/
    },
    /* 398 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var commentMode = hljs.COMMENT(/\(\*/, /\*\)/);

        var nonTerminalMode = {
          className: 'attribute',
          begin: /^[ ]*[a-zA-Z][a-zA-Z-]*([\s-]+[a-zA-Z][a-zA-Z]*)*/
        };

        var specialSequenceMode = {
          className: 'meta',
          begin: /\?.*\?/
        };

        var ruleBodyMode = {
          begin: /=/,
          end: /;/,
          contains: [
            commentMode,
            specialSequenceMode,
            // terminals
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE
          ]
        };

        return {
          illegal: /\S/,
          contains: [commentMode, nonTerminalMode, ruleBodyMode]
        };
      };

      /***/
    },
    /* 399 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_.]*(\\!|\\?)?';
        var ELIXIR_METHOD_RE =
          '[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?';
        var ELIXIR_KEYWORDS =
          'and false then defined module in return redo retry end for true self when ' +
          'next until do begin unless nil break not case cond alias while ensure or ' +
          'include use alias fn quote require import with|0';
        var SUBST = {
          className: 'subst',
          begin: '#\\{',
          end: '}',
          lexemes: ELIXIR_IDENT_RE,
          keywords: ELIXIR_KEYWORDS
        };
        var STRING = {
          className: 'string',
          contains: [hljs.BACKSLASH_ESCAPE, SUBST],
          variants: [
            {
              begin: /'/,
              end: /'/
            },
            {
              begin: /"/,
              end: /"/
            }
          ]
        };
        var FUNCTION = {
          className: 'function',
          beginKeywords: 'def defp defmacro',
          end: /\B\b/, // the mode is ended by the title
          contains: [
            hljs.inherit(hljs.TITLE_MODE, {
              begin: ELIXIR_IDENT_RE,
              endsParent: true
            })
          ]
        };
        var CLASS = hljs.inherit(FUNCTION, {
          className: 'class',
          beginKeywords: 'defimpl defmodule defprotocol defrecord',
          end: /\bdo\b|$|;/
        });
        var ELIXIR_DEFAULT_CONTAINS = [
          STRING,
          hljs.HASH_COMMENT_MODE,
          CLASS,
          FUNCTION,
          {
            begin: '::'
          },
          {
            className: 'symbol',
            begin: ':(?![\\s:])',
            contains: [STRING, { begin: ELIXIR_METHOD_RE }],
            relevance: 0
          },
          {
            className: 'symbol',
            begin: ELIXIR_IDENT_RE + ':(?!:)',
            relevance: 0
          },
          {
            className: 'number',
            begin:
              '(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b',
            relevance: 0
          },
          {
            className: 'variable',
            begin: '(\\$\\W)|((\\$|\\@\\@?)(\\w+))'
          },
          {
            begin: '->'
          },
          {
            // regexp container
            begin: '(' + hljs.RE_STARTERS_RE + ')\\s*',
            contains: [
              hljs.HASH_COMMENT_MODE,
              {
                className: 'regexp',
                illegal: '\\n',
                contains: [hljs.BACKSLASH_ESCAPE, SUBST],
                variants: [
                  {
                    begin: '/',
                    end: '/[a-z]*'
                  },
                  {
                    begin: '%r\\[',
                    end: '\\][a-z]*'
                  }
                ]
              }
            ],
            relevance: 0
          }
        ];
        SUBST.contains = ELIXIR_DEFAULT_CONTAINS;

        return {
          lexemes: ELIXIR_IDENT_RE,
          keywords: ELIXIR_KEYWORDS,
          contains: ELIXIR_DEFAULT_CONTAINS
        };
      };

      /***/
    },
    /* 400 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var COMMENT = {
          variants: [
            hljs.COMMENT('--', '$'),
            hljs.COMMENT('{-', '-}', {
              contains: ['self']
            })
          ]
        };

        var CONSTRUCTOR = {
          className: 'type',
          begin: "\\b[A-Z][\\w']*", // TODO: other constructors (built-in, infix).
          relevance: 0
        };

        var LIST = {
          begin: '\\(',
          end: '\\)',
          illegal: '"',
          contains: [
            {
              className: 'type',
              begin: '\\b[A-Z][\\w]*(\\((\\.\\.|,|\\w+)\\))?'
            },
            COMMENT
          ]
        };

        var RECORD = {
          begin: '{',
          end: '}',
          contains: LIST.contains
        };

        var CHARACTER = {
          className: 'string',
          begin: "'\\\\?.",
          end: "'",
          illegal: '.'
        };

        return {
          keywords:
            'let in if then else case of where module import exposing ' +
            'type alias as infix infixl infixr port effect command subscription',
          contains: [
            // Top-level constructions.

            {
              beginKeywords: 'port effect module',
              end: 'exposing',
              keywords:
                'port effect module where command subscription exposing',
              contains: [LIST, COMMENT],
              illegal: '\\W\\.|;'
            },
            {
              begin: 'import',
              end: '$',
              keywords: 'import as exposing',
              contains: [LIST, COMMENT],
              illegal: '\\W\\.|;'
            },
            {
              begin: 'type',
              end: '$',
              keywords: 'type alias',
              contains: [CONSTRUCTOR, LIST, RECORD, COMMENT]
            },
            {
              beginKeywords: 'infix infixl infixr',
              end: '$',
              contains: [hljs.C_NUMBER_MODE, COMMENT]
            },
            {
              begin: 'port',
              end: '$',
              keywords: 'port',
              contains: [COMMENT]
            },

            // Literals and names.

            CHARACTER,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE,
            CONSTRUCTOR,
            hljs.inherit(hljs.TITLE_MODE, { begin: "^[_a-z][\\w']*" }),
            COMMENT,

            { begin: '->|<-' } // No markup, relevance booster
          ],
          illegal: /;/
        };
      };

      /***/
    },
    /* 401 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var RUBY_METHOD_RE =
          '[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?';
        var RUBY_KEYWORDS = {
          keyword:
            'and then defined module in return redo if BEGIN retry end for self when ' +
            'next until do begin unless END rescue else break undef not super class case ' +
            'require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor',
          literal: 'true false nil'
        };
        var YARDOCTAG = {
          className: 'doctag',
          begin: '@[A-Za-z]+'
        };
        var IRB_OBJECT = {
          begin: '#<',
          end: '>'
        };
        var COMMENT_MODES = [
          hljs.COMMENT('#', '$', {
            contains: [YARDOCTAG]
          }),
          hljs.COMMENT('^\\=begin', '^\\=end', {
            contains: [YARDOCTAG],
            relevance: 10
          }),
          hljs.COMMENT('^__END__', '\\n$')
        ];
        var SUBST = {
          className: 'subst',
          begin: '#\\{',
          end: '}',
          keywords: RUBY_KEYWORDS
        };
        var STRING = {
          className: 'string',
          contains: [hljs.BACKSLASH_ESCAPE, SUBST],
          variants: [
            { begin: /'/, end: /'/ },
            { begin: /"/, end: /"/ },
            { begin: /`/, end: /`/ },
            { begin: '%[qQwWx]?\\(', end: '\\)' },
            { begin: '%[qQwWx]?\\[', end: '\\]' },
            { begin: '%[qQwWx]?{', end: '}' },
            { begin: '%[qQwWx]?<', end: '>' },
            { begin: '%[qQwWx]?/', end: '/' },
            { begin: '%[qQwWx]?%', end: '%' },
            { begin: '%[qQwWx]?-', end: '-' },
            { begin: '%[qQwWx]?\\|', end: '\\|' },
            {
              // \B in the beginning suppresses recognition of ?-sequences where ?
              // is the last character of a preceding identifier, as in: `func?4`
              begin: /\B\?(\\\d{1,3}|\\x[A-Fa-f0-9]{1,2}|\\u[A-Fa-f0-9]{4}|\\?\S)\b/
            },
            {
              begin: /<<(-?)\w+$/,
              end: /^\s*\w+$/
            }
          ]
        };
        var PARAMS = {
          className: 'params',
          begin: '\\(',
          end: '\\)',
          endsParent: true,
          keywords: RUBY_KEYWORDS
        };

        var RUBY_DEFAULT_CONTAINS = [
          STRING,
          IRB_OBJECT,
          {
            className: 'class',
            beginKeywords: 'class module',
            end: '$|;',
            illegal: /=/,
            contains: [
              hljs.inherit(hljs.TITLE_MODE, {
                begin: '[A-Za-z_]\\w*(::\\w+)*(\\?|\\!)?'
              }),
              {
                begin: '<\\s*',
                contains: [
                  {
                    begin: '(' + hljs.IDENT_RE + '::)?' + hljs.IDENT_RE
                  }
                ]
              }
            ].concat(COMMENT_MODES)
          },
          {
            className: 'function',
            beginKeywords: 'def',
            end: '$|;',
            contains: [
              hljs.inherit(hljs.TITLE_MODE, { begin: RUBY_METHOD_RE }),
              PARAMS
            ].concat(COMMENT_MODES)
          },
          {
            // swallow namespace qualifiers before symbols
            begin: hljs.IDENT_RE + '::'
          },
          {
            className: 'symbol',
            begin: hljs.UNDERSCORE_IDENT_RE + '(\\!|\\?)?:',
            relevance: 0
          },
          {
            className: 'symbol',
            begin: ':(?!\\s)',
            contains: [STRING, { begin: RUBY_METHOD_RE }],
            relevance: 0
          },
          {
            className: 'number',
            begin:
              '(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b',
            relevance: 0
          },
          {
            begin: '(\\$\\W)|((\\$|\\@\\@?)(\\w+))' // variables
          },
          {
            className: 'params',
            begin: /\|/,
            end: /\|/,
            keywords: RUBY_KEYWORDS
          },
          {
            // regexp container
            begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\s*',
            keywords: 'unless',
            contains: [
              IRB_OBJECT,
              {
                className: 'regexp',
                contains: [hljs.BACKSLASH_ESCAPE, SUBST],
                illegal: /\n/,
                variants: [
                  { begin: '/', end: '/[a-z]*' },
                  { begin: '%r{', end: '}[a-z]*' },
                  { begin: '%r\\(', end: '\\)[a-z]*' },
                  { begin: '%r!', end: '![a-z]*' },
                  { begin: '%r\\[', end: '\\][a-z]*' }
                ]
              }
            ].concat(COMMENT_MODES),
            relevance: 0
          }
        ].concat(COMMENT_MODES);

        SUBST.contains = RUBY_DEFAULT_CONTAINS;
        PARAMS.contains = RUBY_DEFAULT_CONTAINS;

        var SIMPLE_PROMPT = '[>?]>';
        var DEFAULT_PROMPT = '[\\w#]+\\(\\w+\\):\\d+:\\d+>';
        var RVM_PROMPT = '(\\w+-)?\\d+\\.\\d+\\.\\d(p\\d+)?[^>]+>';

        var IRB_DEFAULT = [
          {
            begin: /^\s*=>/,
            starts: {
              end: '$',
              contains: RUBY_DEFAULT_CONTAINS
            }
          },
          {
            className: 'meta',
            begin:
              '^(' +
              SIMPLE_PROMPT +
              '|' +
              DEFAULT_PROMPT +
              '|' +
              RVM_PROMPT +
              ')',
            starts: {
              end: '$',
              contains: RUBY_DEFAULT_CONTAINS
            }
          }
        ];

        return {
          aliases: ['rb', 'gemspec', 'podspec', 'thor', 'irb'],
          keywords: RUBY_KEYWORDS,
          illegal: /\/\*/,
          contains: COMMENT_MODES.concat(IRB_DEFAULT).concat(
            RUBY_DEFAULT_CONTAINS
          )
        };
      };

      /***/
    },
    /* 402 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          subLanguage: 'xml',
          contains: [
            hljs.COMMENT('<%#', '%>'),
            {
              begin: '<%[%=-]?',
              end: '[%-]?%>',
              subLanguage: 'ruby',
              excludeBegin: true,
              excludeEnd: true
            }
          ]
        };
      };

      /***/
    },
    /* 403 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            built_in: 'spawn spawn_link self',
            keyword:
              'after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if ' +
              'let not of or orelse|10 query receive rem try when xor'
          },
          contains: [
            {
              className: 'meta',
              begin: '^[0-9]+> ',
              relevance: 10
            },
            hljs.COMMENT('%', '$'),
            {
              className: 'number',
              begin: '\\b(\\d+#[a-fA-F0-9]+|\\d+(\\.\\d+)?([eE][-+]?\\d+)?)',
              relevance: 0
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              begin: '\\?(::)?([A-Z]\\w*(::)?)+'
            },
            {
              begin: '->'
            },
            {
              begin: 'ok'
            },
            {
              begin: '!'
            },
            {
              begin:
                "(\\b[a-z'][a-zA-Z0-9_']*:[a-z'][a-zA-Z0-9_']*)|(\\b[a-z'][a-zA-Z0-9_']*)",
              relevance: 0
            },
            {
              begin: "[A-Z][a-zA-Z0-9_']*",
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 404 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var BASIC_ATOM_RE = "[a-z'][a-zA-Z0-9_']*";
        var FUNCTION_NAME_RE =
          '(' + BASIC_ATOM_RE + ':' + BASIC_ATOM_RE + '|' + BASIC_ATOM_RE + ')';
        var ERLANG_RESERVED = {
          keyword:
            'after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun if ' +
            'let not of orelse|10 query receive rem try when xor',
          literal: 'false true'
        };

        var COMMENT = hljs.COMMENT('%', '$');
        var NUMBER = {
          className: 'number',
          begin: '\\b(\\d+#[a-fA-F0-9]+|\\d+(\\.\\d+)?([eE][-+]?\\d+)?)',
          relevance: 0
        };
        var NAMED_FUN = {
          begin: 'fun\\s+' + BASIC_ATOM_RE + '/\\d+'
        };
        var FUNCTION_CALL = {
          begin: FUNCTION_NAME_RE + '\\(',
          end: '\\)',
          returnBegin: true,
          relevance: 0,
          contains: [
            {
              begin: FUNCTION_NAME_RE,
              relevance: 0
            },
            {
              begin: '\\(',
              end: '\\)',
              endsWithParent: true,
              returnEnd: true,
              relevance: 0
              // "contains" defined later
            }
          ]
        };
        var TUPLE = {
          begin: '{',
          end: '}',
          relevance: 0
          // "contains" defined later
        };
        var VAR1 = {
          begin: '\\b_([A-Z][A-Za-z0-9_]*)?',
          relevance: 0
        };
        var VAR2 = {
          begin: '[A-Z][a-zA-Z0-9_]*',
          relevance: 0
        };
        var RECORD_ACCESS = {
          begin: '#' + hljs.UNDERSCORE_IDENT_RE,
          relevance: 0,
          returnBegin: true,
          contains: [
            {
              begin: '#' + hljs.UNDERSCORE_IDENT_RE,
              relevance: 0
            },
            {
              begin: '{',
              end: '}',
              relevance: 0
              // "contains" defined later
            }
          ]
        };

        var BLOCK_STATEMENTS = {
          beginKeywords: 'fun receive if try case',
          end: 'end',
          keywords: ERLANG_RESERVED
        };
        BLOCK_STATEMENTS.contains = [
          COMMENT,
          NAMED_FUN,
          hljs.inherit(hljs.APOS_STRING_MODE, { className: '' }),
          BLOCK_STATEMENTS,
          FUNCTION_CALL,
          hljs.QUOTE_STRING_MODE,
          NUMBER,
          TUPLE,
          VAR1,
          VAR2,
          RECORD_ACCESS
        ];

        var BASIC_MODES = [
          COMMENT,
          NAMED_FUN,
          BLOCK_STATEMENTS,
          FUNCTION_CALL,
          hljs.QUOTE_STRING_MODE,
          NUMBER,
          TUPLE,
          VAR1,
          VAR2,
          RECORD_ACCESS
        ];
        FUNCTION_CALL.contains[1].contains = BASIC_MODES;
        TUPLE.contains = BASIC_MODES;
        RECORD_ACCESS.contains[1].contains = BASIC_MODES;

        var PARAMS = {
          className: 'params',
          begin: '\\(',
          end: '\\)',
          contains: BASIC_MODES
        };
        return {
          aliases: ['erl'],
          keywords: ERLANG_RESERVED,
          illegal: '(</|\\*=|\\+=|-=|/\\*|\\*/|\\(\\*|\\*\\))',
          contains: [
            {
              className: 'function',
              begin: '^' + BASIC_ATOM_RE + '\\s*\\(',
              end: '->',
              returnBegin: true,
              illegal: '\\(|#|//|/\\*|\\\\|:|;',
              contains: [
                PARAMS,
                hljs.inherit(hljs.TITLE_MODE, { begin: BASIC_ATOM_RE })
              ],
              starts: {
                end: ';|\\.',
                keywords: ERLANG_RESERVED,
                contains: BASIC_MODES
              }
            },
            COMMENT,
            {
              begin: '^-',
              end: '\\.',
              relevance: 0,
              excludeEnd: true,
              returnBegin: true,
              lexemes: '-' + hljs.IDENT_RE,
              keywords:
                '-module -record -undef -export -ifdef -ifndef -author -copyright -doc -vsn ' +
                '-import -include -include_lib -compile -define -else -endif -file -behaviour ' +
                '-behavior -spec',
              contains: [PARAMS]
            },
            NUMBER,
            hljs.QUOTE_STRING_MODE,
            RECORD_ACCESS,
            VAR1,
            VAR2,
            TUPLE,
            { begin: /\.$/ } // relevance booster
          ]
        };
      };

      /***/
    },
    /* 405 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['xlsx', 'xls'],
          case_insensitive: true,
          lexemes: /[a-zA-Z][\w\.]*/,
          // built-in functions imported from https://web.archive.org/web/20160513042710/https://support.office.com/en-us/article/Excel-functions-alphabetical-b3944572-255d-4efb-bb96-c6d90033e188
          keywords: {
            built_in:
              'ABS ACCRINT ACCRINTM ACOS ACOSH ACOT ACOTH AGGREGATE ADDRESS AMORDEGRC AMORLINC AND ARABIC AREAS ASC ASIN ASINH ATAN ATAN2 ATANH AVEDEV AVERAGE AVERAGEA AVERAGEIF AVERAGEIFS BAHTTEXT BASE BESSELI BESSELJ BESSELK BESSELY BETADIST BETA.DIST BETAINV BETA.INV BIN2DEC BIN2HEX BIN2OCT BINOMDIST BINOM.DIST BINOM.DIST.RANGE BINOM.INV BITAND BITLSHIFT BITOR BITRSHIFT BITXOR CALL CEILING CEILING.MATH CEILING.PRECISE CELL CHAR CHIDIST CHIINV CHITEST CHISQ.DIST CHISQ.DIST.RT CHISQ.INV CHISQ.INV.RT CHISQ.TEST CHOOSE CLEAN CODE COLUMN COLUMNS COMBIN COMBINA COMPLEX CONCAT CONCATENATE CONFIDENCE CONFIDENCE.NORM CONFIDENCE.T CONVERT CORREL COS COSH COT COTH COUNT COUNTA COUNTBLANK COUNTIF COUNTIFS COUPDAYBS COUPDAYS COUPDAYSNC COUPNCD COUPNUM COUPPCD COVAR COVARIANCE.P COVARIANCE.S CRITBINOM CSC CSCH CUBEKPIMEMBER CUBEMEMBER CUBEMEMBERPROPERTY CUBERANKEDMEMBER CUBESET CUBESETCOUNT CUBEVALUE CUMIPMT CUMPRINC DATE DATEDIF DATEVALUE DAVERAGE DAY DAYS DAYS360 DB DBCS DCOUNT DCOUNTA DDB DEC2BIN DEC2HEX DEC2OCT DECIMAL DEGREES DELTA DEVSQ DGET DISC DMAX DMIN DOLLAR DOLLARDE DOLLARFR DPRODUCT DSTDEV DSTDEVP DSUM DURATION DVAR DVARP EDATE EFFECT ENCODEURL EOMONTH ERF ERF.PRECISE ERFC ERFC.PRECISE ERROR.TYPE EUROCONVERT EVEN EXACT EXP EXPON.DIST EXPONDIST FACT FACTDOUBLE FALSE|0 F.DIST FDIST F.DIST.RT FILTERXML FIND FINDB F.INV F.INV.RT FINV FISHER FISHERINV FIXED FLOOR FLOOR.MATH FLOOR.PRECISE FORECAST FORECAST.ETS FORECAST.ETS.CONFINT FORECAST.ETS.SEASONALITY FORECAST.ETS.STAT FORECAST.LINEAR FORMULATEXT FREQUENCY F.TEST FTEST FV FVSCHEDULE GAMMA GAMMA.DIST GAMMADIST GAMMA.INV GAMMAINV GAMMALN GAMMALN.PRECISE GAUSS GCD GEOMEAN GESTEP GETPIVOTDATA GROWTH HARMEAN HEX2BIN HEX2DEC HEX2OCT HLOOKUP HOUR HYPERLINK HYPGEOM.DIST HYPGEOMDIST IF|0 IFERROR IFNA IFS IMABS IMAGINARY IMARGUMENT IMCONJUGATE IMCOS IMCOSH IMCOT IMCSC IMCSCH IMDIV IMEXP IMLN IMLOG10 IMLOG2 IMPOWER IMPRODUCT IMREAL IMSEC IMSECH IMSIN IMSINH IMSQRT IMSUB IMSUM IMTAN INDEX INDIRECT INFO INT INTERCEPT INTRATE IPMT IRR ISBLANK ISERR ISERROR ISEVEN ISFORMULA ISLOGICAL ISNA ISNONTEXT ISNUMBER ISODD ISREF ISTEXT ISO.CEILING ISOWEEKNUM ISPMT JIS KURT LARGE LCM LEFT LEFTB LEN LENB LINEST LN LOG LOG10 LOGEST LOGINV LOGNORM.DIST LOGNORMDIST LOGNORM.INV LOOKUP LOWER MATCH MAX MAXA MAXIFS MDETERM MDURATION MEDIAN MID MIDBs MIN MINIFS MINA MINUTE MINVERSE MIRR MMULT MOD MODE MODE.MULT MODE.SNGL MONTH MROUND MULTINOMIAL MUNIT N NA NEGBINOM.DIST NEGBINOMDIST NETWORKDAYS NETWORKDAYS.INTL NOMINAL NORM.DIST NORMDIST NORMINV NORM.INV NORM.S.DIST NORMSDIST NORM.S.INV NORMSINV NOT NOW NPER NPV NUMBERVALUE OCT2BIN OCT2DEC OCT2HEX ODD ODDFPRICE ODDFYIELD ODDLPRICE ODDLYIELD OFFSET OR PDURATION PEARSON PERCENTILE.EXC PERCENTILE.INC PERCENTILE PERCENTRANK.EXC PERCENTRANK.INC PERCENTRANK PERMUT PERMUTATIONA PHI PHONETIC PI PMT POISSON.DIST POISSON POWER PPMT PRICE PRICEDISC PRICEMAT PROB PRODUCT PROPER PV QUARTILE QUARTILE.EXC QUARTILE.INC QUOTIENT RADIANS RAND RANDBETWEEN RANK.AVG RANK.EQ RANK RATE RECEIVED REGISTER.ID REPLACE REPLACEB REPT RIGHT RIGHTB ROMAN ROUND ROUNDDOWN ROUNDUP ROW ROWS RRI RSQ RTD SEARCH SEARCHB SEC SECH SECOND SERIESSUM SHEET SHEETS SIGN SIN SINH SKEW SKEW.P SLN SLOPE SMALL SQL.REQUEST SQRT SQRTPI STANDARDIZE STDEV STDEV.P STDEV.S STDEVA STDEVP STDEVPA STEYX SUBSTITUTE SUBTOTAL SUM SUMIF SUMIFS SUMPRODUCT SUMSQ SUMX2MY2 SUMX2PY2 SUMXMY2 SWITCH SYD T TAN TANH TBILLEQ TBILLPRICE TBILLYIELD T.DIST T.DIST.2T T.DIST.RT TDIST TEXT TEXTJOIN TIME TIMEVALUE T.INV T.INV.2T TINV TODAY TRANSPOSE TREND TRIM TRIMMEAN TRUE|0 TRUNC T.TEST TTEST TYPE UNICHAR UNICODE UPPER VALUE VAR VAR.P VAR.S VARA VARP VARPA VDB VLOOKUP WEBSERVICE WEEKDAY WEEKNUM WEIBULL WEIBULL.DIST WORKDAY WORKDAY.INTL XIRR XNPV XOR YEAR YEARFRAC YIELD YIELDDISC YIELDMAT Z.TEST ZTEST'
          },
          contains: [
            {
              /* matches a beginning equal sign found in Excel formula examples */

              begin: /^=/,
              end: /[^=]/,
              returnEnd: true,
              illegal: /=/ /* only allow single equal sign at front of line */,
              relevance: 10
            },
            /* technically, there can be more than 2 letters in column names, but this prevents conflict with some keywords */
            {
              /* matches a reference to a single cell */
              className: 'symbol',
              begin: /\b[A-Z]{1,2}\d+\b/,
              end: /[^\d]/,
              excludeEnd: true,
              relevance: 0
            },
            {
              /* matches a reference to a range of cells */
              className: 'symbol',
              begin: /[A-Z]{0,2}\d*:[A-Z]{0,2}\d*/,
              relevance: 0
            },
            hljs.BACKSLASH_ESCAPE,
            hljs.QUOTE_STRING_MODE,
            {
              className: 'number',
              begin: hljs.NUMBER_RE + '(%)?',
              relevance: 0
            },
            /* Excel formula comments are done by putting the comment in a function call to N() */
            hljs.COMMENT(/\bN\(/, /\)/, {
              excludeBegin: true,
              excludeEnd: true,
              illegal: /\n/
            })
          ]
        };
      };

      /***/
    },
    /* 406 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            {
              begin: /[^\u2401\u0001]+/,
              end: /[\u2401\u0001]/,
              excludeEnd: true,
              returnBegin: true,
              returnEnd: false,
              contains: [
                {
                  begin: /([^\u2401\u0001=]+)/,
                  end: /=([^\u2401\u0001=]+)/,
                  returnEnd: true,
                  returnBegin: false,
                  className: 'attr'
                },
                {
                  begin: /=/,
                  end: /([\u2401\u0001])/,
                  excludeEnd: true,
                  excludeBegin: true,
                  className: 'string'
                }
              ]
            }
          ],
          case_insensitive: true
        };
      };

      /***/
    },
    /* 407 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var CHAR = {
          className: 'string',
          begin: /'(.|\\[xXuU][a-zA-Z0-9]+)'/
        };

        var STRING = {
          className: 'string',
          variants: [
            {
              begin: '"',
              end: '"'
            }
          ]
        };

        var NAME = {
          className: 'title',
          begin: /[^0-9\n\t "'(),.`{}\[\]:;][^\n\t "'(),.`{}\[\]:;]+|[^0-9\n\t "'(),.`{}\[\]:;=]/
        };

        var METHOD = {
          className: 'function',
          beginKeywords: 'def',
          end: /[:={\[(\n;]/,
          excludeEnd: true,
          contains: [NAME]
        };

        return {
          keywords: {
            literal: 'true false',
            keyword:
              'case class def else enum if impl import in lat rel index let match namespace switch type yield with'
          },
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            CHAR,
            STRING,
            METHOD,
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 408 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var PARAMS = {
          className: 'params',
          begin: '\\(',
          end: '\\)'
        };

        var F_KEYWORDS = {
          literal: '.False. .True.',
          keyword:
            'kind do while private call intrinsic where elsewhere ' +
            'type endtype endmodule endselect endinterface end enddo endif if forall endforall only contains default return stop then ' +
            'public subroutine|10 function program .and. .or. .not. .le. .eq. .ge. .gt. .lt. ' +
            'goto save else use module select case ' +
            'access blank direct exist file fmt form formatted iostat name named nextrec number opened rec recl sequential status unformatted unit ' +
            'continue format pause cycle exit ' +
            'c_null_char c_alert c_backspace c_form_feed flush wait decimal round iomsg ' +
            'synchronous nopass non_overridable pass protected volatile abstract extends import ' +
            'non_intrinsic value deferred generic final enumerator class associate bind enum ' +
            'c_int c_short c_long c_long_long c_signed_char c_size_t c_int8_t c_int16_t c_int32_t c_int64_t c_int_least8_t c_int_least16_t ' +
            'c_int_least32_t c_int_least64_t c_int_fast8_t c_int_fast16_t c_int_fast32_t c_int_fast64_t c_intmax_t C_intptr_t c_float c_double ' +
            'c_long_double c_float_complex c_double_complex c_long_double_complex c_bool c_char c_null_ptr c_null_funptr ' +
            'c_new_line c_carriage_return c_horizontal_tab c_vertical_tab iso_c_binding c_loc c_funloc c_associated  c_f_pointer ' +
            'c_ptr c_funptr iso_fortran_env character_storage_size error_unit file_storage_size input_unit iostat_end iostat_eor ' +
            'numeric_storage_size output_unit c_f_procpointer ieee_arithmetic ieee_support_underflow_control ' +
            'ieee_get_underflow_mode ieee_set_underflow_mode newunit contiguous recursive ' +
            'pad position action delim readwrite eor advance nml interface procedure namelist include sequence elemental pure ' +
            'integer real character complex logical dimension allocatable|10 parameter ' +
            'external implicit|10 none double precision assign intent optional pointer ' +
            'target in out common equivalence data',
          built_in:
            'alog alog10 amax0 amax1 amin0 amin1 amod cabs ccos cexp clog csin csqrt dabs dacos dasin datan datan2 dcos dcosh ddim dexp dint ' +
            'dlog dlog10 dmax1 dmin1 dmod dnint dsign dsin dsinh dsqrt dtan dtanh float iabs idim idint idnint ifix isign max0 max1 min0 min1 sngl ' +
            'algama cdabs cdcos cdexp cdlog cdsin cdsqrt cqabs cqcos cqexp cqlog cqsin cqsqrt dcmplx dconjg derf derfc dfloat dgamma dimag dlgama ' +
            'iqint qabs qacos qasin qatan qatan2 qcmplx qconjg qcos qcosh qdim qerf qerfc qexp qgamma qimag qlgama qlog qlog10 qmax1 qmin1 qmod ' +
            'qnint qsign qsin qsinh qsqrt qtan qtanh abs acos aimag aint anint asin atan atan2 char cmplx conjg cos cosh exp ichar index int log ' +
            'log10 max min nint sign sin sinh sqrt tan tanh print write dim lge lgt lle llt mod nullify allocate deallocate ' +
            'adjustl adjustr all allocated any associated bit_size btest ceiling count cshift date_and_time digits dot_product ' +
            'eoshift epsilon exponent floor fraction huge iand ibclr ibits ibset ieor ior ishft ishftc lbound len_trim matmul ' +
            'maxexponent maxloc maxval merge minexponent minloc minval modulo mvbits nearest pack present product ' +
            'radix random_number random_seed range repeat reshape rrspacing scale scan selected_int_kind selected_real_kind ' +
            'set_exponent shape size spacing spread sum system_clock tiny transpose trim ubound unpack verify achar iachar transfer ' +
            'dble entry dprod cpu_time command_argument_count get_command get_command_argument get_environment_variable is_iostat_end ' +
            'ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode ' +
            'is_iostat_eor move_alloc new_line selected_char_kind same_type_as extends_type_of' +
            'acosh asinh atanh bessel_j0 bessel_j1 bessel_jn bessel_y0 bessel_y1 bessel_yn erf erfc erfc_scaled gamma log_gamma hypot norm2 ' +
            'atomic_define atomic_ref execute_command_line leadz trailz storage_size merge_bits ' +
            'bge bgt ble blt dshiftl dshiftr findloc iall iany iparity image_index lcobound ucobound maskl maskr ' +
            'num_images parity popcnt poppar shifta shiftl shiftr this_image'
        };
        return {
          case_insensitive: true,
          aliases: ['f90', 'f95'],
          keywords: F_KEYWORDS,
          illegal: /\/\*/,
          contains: [
            hljs.inherit(hljs.APOS_STRING_MODE, {
              className: 'string',
              relevance: 0
            }),
            hljs.inherit(hljs.QUOTE_STRING_MODE, {
              className: 'string',
              relevance: 0
            }),
            {
              className: 'function',
              beginKeywords: 'subroutine function program',
              illegal: '[${=\\n]',
              contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]
            },
            hljs.COMMENT('!', '$', { relevance: 0 }),
            {
              className: 'number',
              begin:
                '(?=\\b|\\+|\\-|\\.)(?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*)(?:[de][+-]?\\d+)?\\b\\.?',
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 409 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var TYPEPARAM = {
          begin: '<',
          end: '>',
          contains: [hljs.inherit(hljs.TITLE_MODE, { begin: /'[a-zA-Z0-9_]+/ })]
        };

        return {
          aliases: ['fs'],
          keywords:
            'abstract and as assert base begin class default delegate do done ' +
            'downcast downto elif else end exception extern false finally for ' +
            'fun function global if in inherit inline interface internal lazy let ' +
            'match member module mutable namespace new null of open or ' +
            'override private public rec return sig static struct then to ' +
            'true try type upcast use val void when while with yield',
          illegal: /\/\*/,
          contains: [
            {
              // monad builder keywords (matches before non-bang kws)
              className: 'keyword',
              begin: /\b(yield|return|let|do)!/
            },
            {
              className: 'string',
              begin: '@"',
              end: '"',
              contains: [{ begin: '""' }]
            },
            {
              className: 'string',
              begin: '"""',
              end: '"""'
            },
            hljs.COMMENT('\\(\\*', '\\*\\)'),
            {
              className: 'class',
              beginKeywords: 'type',
              end: '\\(|=|$',
              excludeEnd: true,
              contains: [hljs.UNDERSCORE_TITLE_MODE, TYPEPARAM]
            },
            {
              className: 'meta',
              begin: '\\[<',
              end: '>\\]',
              relevance: 10
            },
            {
              className: 'symbol',
              begin: "\\B('[A-Za-z])\\b",
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            hljs.C_LINE_COMMENT_MODE,
            hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 410 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            'abort acronym acronyms alias all and assign binary card diag display ' +
            'else eq file files for free ge gt if integer le loop lt maximizing ' +
            'minimizing model models ne negative no not option options or ord ' +
            'positive prod put putpage puttl repeat sameas semicont semiint smax ' +
            'smin solve sos1 sos2 sum system table then until using while xor yes',
          literal: 'eps inf na',
          'built-in':
            'abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy ' +
            'cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact ' +
            'floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max ' +
            'min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power ' +
            'randBinomial randLinear randTriangle round rPower sigmoid sign ' +
            'signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt ' +
            'tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp ' +
            'bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt ' +
            'rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear ' +
            'jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion ' +
            'handleCollect handleDelete handleStatus handleSubmit heapFree ' +
            'heapLimit heapSize jobHandle jobKill jobStatus jobTerminate ' +
            'licenseLevel licenseStatus maxExecError sleep timeClose timeComp ' +
            'timeElapsed timeExec timeStart'
        };
        var PARAMS = {
          className: 'params',
          begin: /\(/,
          end: /\)/,
          excludeBegin: true,
          excludeEnd: true
        };
        var SYMBOLS = {
          className: 'symbol',
          variants: [{ begin: /\=[lgenxc]=/ }, { begin: /\$/ }]
        };
        var QSTR = {
          // One-line quoted comment string
          className: 'comment',
          variants: [{ begin: "'", end: "'" }, { begin: '"', end: '"' }],
          illegal: '\\n',
          contains: [hljs.BACKSLASH_ESCAPE]
        };
        var ASSIGNMENT = {
          begin: '/',
          end: '/',
          keywords: KEYWORDS,
          contains: [
            QSTR,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.APOS_STRING_MODE,
            hljs.C_NUMBER_MODE
          ]
        };
        var DESCTEXT = {
          // Parameter/set/variable description text
          begin: /[a-z][a-z0-9_]*(\([a-z0-9_, ]*\))?[ \t]+/,
          excludeBegin: true,
          end: '$',
          endsWithParent: true,
          contains: [
            QSTR,
            ASSIGNMENT,
            {
              className: 'comment',
              begin: /([ ]*[a-z0-9&#*=?@>\\<:\-,()$\[\]_.{}!+%^]+)+/,
              relevance: 0
            }
          ]
        };

        return {
          aliases: ['gms'],
          case_insensitive: true,
          keywords: KEYWORDS,
          contains: [
            hljs.COMMENT(/^\$ontext/, /^\$offtext/),
            {
              className: 'meta',
              begin: '^\\$[a-z0-9]+',
              end: '$',
              returnBegin: true,
              contains: [
                {
                  className: 'meta-keyword',
                  begin: '^\\$[a-z0-9]+'
                }
              ]
            },
            hljs.COMMENT('^\\*', '$'),
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.APOS_STRING_MODE,
            // Declarations
            {
              beginKeywords:
                'set sets parameter parameters variable variables ' +
                'scalar scalars equation equations',
              end: ';',
              contains: [
                hljs.COMMENT('^\\*', '$'),
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                hljs.QUOTE_STRING_MODE,
                hljs.APOS_STRING_MODE,
                ASSIGNMENT,
                DESCTEXT
              ]
            },
            {
              // table environment
              beginKeywords: 'table',
              end: ';',
              returnBegin: true,
              contains: [
                {
                  // table header row
                  beginKeywords: 'table',
                  end: '$',
                  contains: [DESCTEXT]
                },
                hljs.COMMENT('^\\*', '$'),
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                hljs.QUOTE_STRING_MODE,
                hljs.APOS_STRING_MODE,
                hljs.C_NUMBER_MODE
                // Table does not contain DESCTEXT or ASSIGNMENT
              ]
            },
            // Function definitions
            {
              className: 'function',
              begin: /^[a-z][a-z0-9_,\-+' ()$]+\.{2}/,
              returnBegin: true,
              contains: [
                {
                  // Function title
                  className: 'title',
                  begin: /^[a-z0-9_]+/
                },
                PARAMS,
                SYMBOLS
              ]
            },
            hljs.C_NUMBER_MODE,
            SYMBOLS
          ]
        };
      };

      /***/
    },
    /* 411 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            'and bool break call callexe checkinterrupt clear clearg closeall cls comlog compile ' +
            'continue create debug declare delete disable dlibrary dllcall do dos ed edit else ' +
            'elseif enable end endfor endif endp endo errorlog errorlogat expr external fn ' +
            'for format goto gosub graph if keyword let lib library line load loadarray loadexe ' +
            'loadf loadk loadm loadp loads loadx local locate loopnextindex lprint lpwidth lshow ' +
            'matrix msym ndpclex new not open or output outwidth plot plotsym pop prcsn print ' +
            'printdos proc push retp return rndcon rndmod rndmult rndseed run save saveall screen ' +
            'scroll setarray show sparse stop string struct system trace trap threadfor ' +
            'threadendfor threadbegin threadjoin threadstat threadend until use while winprint',
          built_in:
            'abs acf aconcat aeye amax amean AmericanBinomCall AmericanBinomCall_Greeks AmericanBinomCall_ImpVol ' +
            'AmericanBinomPut AmericanBinomPut_Greeks AmericanBinomPut_ImpVol AmericanBSCall AmericanBSCall_Greeks ' +
            'AmericanBSCall_ImpVol AmericanBSPut AmericanBSPut_Greeks AmericanBSPut_ImpVol amin amult annotationGetDefaults ' +
            'annotationSetBkd annotationSetFont annotationSetLineColor annotationSetLineStyle annotationSetLineThickness ' +
            'annualTradingDays arccos arcsin areshape arrayalloc arrayindex arrayinit arraytomat asciiload asclabel astd ' +
            'astds asum atan atan2 atranspose axmargin balance band bandchol bandcholsol bandltsol bandrv bandsolpd bar ' +
            'base10 begwind besselj bessely beta box boxcox cdfBeta cdfBetaInv cdfBinomial cdfBinomialInv cdfBvn cdfBvn2 ' +
            'cdfBvn2e cdfCauchy cdfCauchyInv cdfChic cdfChii cdfChinc cdfChincInv cdfExp cdfExpInv cdfFc cdfFnc cdfFncInv ' +
            'cdfGam cdfGenPareto cdfHyperGeo cdfLaplace cdfLaplaceInv cdfLogistic cdfLogisticInv cdfmControlCreate cdfMvn ' +
            'cdfMvn2e cdfMvnce cdfMvne cdfMvt2e cdfMvtce cdfMvte cdfN cdfN2 cdfNc cdfNegBinomial cdfNegBinomialInv cdfNi ' +
            'cdfPoisson cdfPoissonInv cdfRayleigh cdfRayleighInv cdfTc cdfTci cdfTnc cdfTvn cdfWeibull cdfWeibullInv cdir ' +
            'ceil ChangeDir chdir chiBarSquare chol choldn cholsol cholup chrs close code cols colsf combinate combinated ' +
            'complex con cond conj cons ConScore contour conv convertsatostr convertstrtosa corrm corrms corrvc corrx corrxs ' +
            'cos cosh counts countwts crossprd crout croutp csrcol csrlin csvReadM csvReadSA cumprodc cumsumc curve cvtos ' +
            'datacreate datacreatecomplex datalist dataload dataloop dataopen datasave date datestr datestring datestrymd ' +
            'dayinyr dayofweek dbAddDatabase dbClose dbCommit dbCreateQuery dbExecQuery dbGetConnectOptions dbGetDatabaseName ' +
            'dbGetDriverName dbGetDrivers dbGetHostName dbGetLastErrorNum dbGetLastErrorText dbGetNumericalPrecPolicy ' +
            'dbGetPassword dbGetPort dbGetTableHeaders dbGetTables dbGetUserName dbHasFeature dbIsDriverAvailable dbIsOpen ' +
            'dbIsOpenError dbOpen dbQueryBindValue dbQueryClear dbQueryCols dbQueryExecPrepared dbQueryFetchAllM dbQueryFetchAllSA ' +
            'dbQueryFetchOneM dbQueryFetchOneSA dbQueryFinish dbQueryGetBoundValue dbQueryGetBoundValues dbQueryGetField ' +
            'dbQueryGetLastErrorNum dbQueryGetLastErrorText dbQueryGetLastInsertID dbQueryGetLastQuery dbQueryGetPosition ' +
            'dbQueryIsActive dbQueryIsForwardOnly dbQueryIsNull dbQueryIsSelect dbQueryIsValid dbQueryPrepare dbQueryRows ' +
            'dbQuerySeek dbQuerySeekFirst dbQuerySeekLast dbQuerySeekNext dbQuerySeekPrevious dbQuerySetForwardOnly ' +
            'dbRemoveDatabase dbRollback dbSetConnectOptions dbSetDatabaseName dbSetHostName dbSetNumericalPrecPolicy ' +
            'dbSetPort dbSetUserName dbTransaction DeleteFile delif delrows denseToSp denseToSpRE denToZero design det detl ' +
            'dfft dffti diag diagrv digamma doswin DOSWinCloseall DOSWinOpen dotfeq dotfeqmt dotfge dotfgemt dotfgt dotfgtmt ' +
            'dotfle dotflemt dotflt dotfltmt dotfne dotfnemt draw drop dsCreate dstat dstatmt dstatmtControlCreate dtdate dtday ' +
            'dttime dttodtv dttostr dttoutc dtvnormal dtvtodt dtvtoutc dummy dummybr dummydn eig eigh eighv eigv elapsedTradingDays ' +
            'endwind envget eof eqSolve eqSolvemt eqSolvemtControlCreate eqSolvemtOutCreate eqSolveset erf erfc erfccplx erfcplx error ' +
            'etdays ethsec etstr EuropeanBinomCall EuropeanBinomCall_Greeks EuropeanBinomCall_ImpVol EuropeanBinomPut ' +
            'EuropeanBinomPut_Greeks EuropeanBinomPut_ImpVol EuropeanBSCall EuropeanBSCall_Greeks EuropeanBSCall_ImpVol ' +
            'EuropeanBSPut EuropeanBSPut_Greeks EuropeanBSPut_ImpVol exctsmpl exec execbg exp extern eye fcheckerr fclearerr feq ' +
            'feqmt fflush fft ffti fftm fftmi fftn fge fgemt fgets fgetsa fgetsat fgetst fgt fgtmt fileinfo filesa fle flemt ' +
            'floor flt fltmt fmod fne fnemt fonts fopen formatcv formatnv fputs fputst fseek fstrerror ftell ftocv ftos ftostrC ' +
            'gamma gammacplx gammaii gausset gdaAppend gdaCreate gdaDStat gdaDStatMat gdaGetIndex gdaGetName gdaGetNames gdaGetOrders ' +
            'gdaGetType gdaGetTypes gdaGetVarInfo gdaIsCplx gdaLoad gdaPack gdaRead gdaReadByIndex gdaReadSome gdaReadSparse ' +
            'gdaReadStruct gdaReportVarInfo gdaSave gdaUpdate gdaUpdateAndPack gdaVars gdaWrite gdaWrite32 gdaWriteSome getarray ' +
            'getdims getf getGAUSShome getmatrix getmatrix4D getname getnamef getNextTradingDay getNextWeekDay getnr getorders ' +
            'getpath getPreviousTradingDay getPreviousWeekDay getRow getscalar3D getscalar4D getTrRow getwind glm gradcplx gradMT ' +
            'gradMTm gradMTT gradMTTm gradp graphprt graphset hasimag header headermt hess hessMT hessMTg hessMTgw hessMTm ' +
            'hessMTmw hessMTT hessMTTg hessMTTgw hessMTTm hessMTw hessp hist histf histp hsec imag indcv indexcat indices indices2 ' +
            'indicesf indicesfn indnv indsav integrate1d integrateControlCreate intgrat2 intgrat3 inthp1 inthp2 inthp3 inthp4 ' +
            'inthpControlCreate intquad1 intquad2 intquad3 intrleav intrleavsa intrsect intsimp inv invpd invswp iscplx iscplxf ' +
            'isden isinfnanmiss ismiss key keyav keyw lag lag1 lagn lapEighb lapEighi lapEighvb lapEighvi lapgEig lapgEigh lapgEighv ' +
            'lapgEigv lapgSchur lapgSvdcst lapgSvds lapgSvdst lapSvdcusv lapSvds lapSvdusv ldlp ldlsol linSolve listwise ln lncdfbvn ' +
            'lncdfbvn2 lncdfmvn lncdfn lncdfn2 lncdfnc lnfact lngammacplx lnpdfmvn lnpdfmvt lnpdfn lnpdft loadd loadstruct loadwind ' +
            'loess loessmt loessmtControlCreate log loglog logx logy lower lowmat lowmat1 ltrisol lu lusol machEpsilon make makevars ' +
            'makewind margin matalloc matinit mattoarray maxbytes maxc maxindc maxv maxvec mbesselei mbesselei0 mbesselei1 mbesseli ' +
            'mbesseli0 mbesseli1 meanc median mergeby mergevar minc minindc minv miss missex missrv moment momentd movingave ' +
            'movingaveExpwgt movingaveWgt nextindex nextn nextnevn nextwind ntos null null1 numCombinations ols olsmt olsmtControlCreate ' +
            'olsqr olsqr2 olsqrmt ones optn optnevn orth outtyp pacf packedToSp packr parse pause pdfCauchy pdfChi pdfExp pdfGenPareto ' +
            'pdfHyperGeo pdfLaplace pdfLogistic pdfn pdfPoisson pdfRayleigh pdfWeibull pi pinv pinvmt plotAddArrow plotAddBar plotAddBox ' +
            'plotAddHist plotAddHistF plotAddHistP plotAddPolar plotAddScatter plotAddShape plotAddTextbox plotAddTS plotAddXY plotArea ' +
            'plotBar plotBox plotClearLayout plotContour plotCustomLayout plotGetDefaults plotHist plotHistF plotHistP plotLayout ' +
            'plotLogLog plotLogX plotLogY plotOpenWindow plotPolar plotSave plotScatter plotSetAxesPen plotSetBar plotSetBarFill ' +
            'plotSetBarStacked plotSetBkdColor plotSetFill plotSetGrid plotSetLegend plotSetLineColor plotSetLineStyle plotSetLineSymbol ' +
            'plotSetLineThickness plotSetNewWindow plotSetTitle plotSetWhichYAxis plotSetXAxisShow plotSetXLabel plotSetXRange ' +
            'plotSetXTicInterval plotSetXTicLabel plotSetYAxisShow plotSetYLabel plotSetYRange plotSetZAxisShow plotSetZLabel ' +
            'plotSurface plotTS plotXY polar polychar polyeval polygamma polyint polymake polymat polymroot polymult polyroot ' +
            'pqgwin previousindex princomp printfm printfmt prodc psi putarray putf putvals pvCreate pvGetIndex pvGetParNames ' +
            'pvGetParVector pvLength pvList pvPack pvPacki pvPackm pvPackmi pvPacks pvPacksi pvPacksm pvPacksmi pvPutParVector ' +
            'pvTest pvUnpack QNewton QNewtonmt QNewtonmtControlCreate QNewtonmtOutCreate QNewtonSet QProg QProgmt QProgmtInCreate ' +
            'qqr qqre qqrep qr qre qrep qrsol qrtsol qtyr qtyre qtyrep quantile quantiled qyr qyre qyrep qz rank rankindx readr ' +
            'real reclassify reclassifyCuts recode recserar recsercp recserrc rerun rescale reshape rets rev rfft rffti rfftip rfftn ' +
            'rfftnp rfftp rndBernoulli rndBeta rndBinomial rndCauchy rndChiSquare rndCon rndCreateState rndExp rndGamma rndGeo rndGumbel ' +
            'rndHyperGeo rndi rndKMbeta rndKMgam rndKMi rndKMn rndKMnb rndKMp rndKMu rndKMvm rndLaplace rndLCbeta rndLCgam rndLCi rndLCn ' +
            'rndLCnb rndLCp rndLCu rndLCvm rndLogNorm rndMTu rndMVn rndMVt rndn rndnb rndNegBinomial rndp rndPoisson rndRayleigh ' +
            'rndStateSkip rndu rndvm rndWeibull rndWishart rotater round rows rowsf rref sampleData satostrC saved saveStruct savewind ' +
            'scale scale3d scalerr scalinfnanmiss scalmiss schtoc schur searchsourcepath seekr select selif seqa seqm setdif setdifsa ' +
            'setvars setvwrmode setwind shell shiftr sin singleindex sinh sleep solpd sortc sortcc sortd sorthc sorthcc sortind ' +
            'sortindc sortmc sortr sortrc spBiconjGradSol spChol spConjGradSol spCreate spDenseSubmat spDiagRvMat spEigv spEye spLDL ' +
            'spline spLU spNumNZE spOnes spreadSheetReadM spreadSheetReadSA spreadSheetWrite spScale spSubmat spToDense spTrTDense ' +
            'spTScalar spZeros sqpSolve sqpSolveMT sqpSolveMTControlCreate sqpSolveMTlagrangeCreate sqpSolveMToutCreate sqpSolveSet ' +
            'sqrt statements stdc stdsc stocv stof strcombine strindx strlen strput strrindx strsect strsplit strsplitPad strtodt ' +
            'strtof strtofcplx strtriml strtrimr strtrunc strtruncl strtruncpad strtruncr submat subscat substute subvec sumc sumr ' +
            'surface svd svd1 svd2 svdcusv svds svdusv sysstate tab tan tanh tempname threadBegin threadEnd threadEndFor threadFor ' +
            'threadJoin threadStat time timedt timestr timeutc title tkf2eps tkf2ps tocart todaydt toeplitz token topolar trapchk ' +
            'trigamma trimr trunc type typecv typef union unionsa uniqindx uniqindxsa unique uniquesa upmat upmat1 upper utctodt ' +
            'utctodtv utrisol vals varCovMS varCovXS varget vargetl varmall varmares varput varputl vartypef vcm vcms vcx vcxs ' +
            'vec vech vecr vector vget view viewxyz vlist vnamecv volume vput vread vtypecv wait waitc walkindex where window ' +
            'writer xlabel xlsGetSheetCount xlsGetSheetSize xlsGetSheetTypes xlsMakeRange xlsReadM xlsReadSA xlsWrite xlsWriteM ' +
            'xlsWriteSA xpnd xtics xy xyz ylabel ytics zeros zeta zlabel ztics cdfEmpirical dot h5create h5open h5read h5readAttribute ' +
            'h5write h5writeAttribute ldl plotAddErrorBar plotAddSurface plotCDFEmpirical plotSetColormap plotSetContourLabels ' +
            'plotSetLegendFont plotSetTextInterpreter plotSetXTicCount plotSetYTicCount plotSetZLevels powerm strjoin strtrim sylvester',
          literal:
            'DB_AFTER_LAST_ROW DB_ALL_TABLES DB_BATCH_OPERATIONS DB_BEFORE_FIRST_ROW DB_BLOB DB_EVENT_NOTIFICATIONS ' +
            'DB_FINISH_QUERY DB_HIGH_PRECISION DB_LAST_INSERT_ID DB_LOW_PRECISION_DOUBLE DB_LOW_PRECISION_INT32 ' +
            'DB_LOW_PRECISION_INT64 DB_LOW_PRECISION_NUMBERS DB_MULTIPLE_RESULT_SETS DB_NAMED_PLACEHOLDERS ' +
            'DB_POSITIONAL_PLACEHOLDERS DB_PREPARED_QUERIES DB_QUERY_SIZE DB_SIMPLE_LOCKING DB_SYSTEM_TABLES DB_TABLES ' +
            'DB_TRANSACTIONS DB_UNICODE DB_VIEWS'
        };

        var PREPROCESSOR = {
          className: 'meta',
          begin: '#',
          end: '$',
          keywords: {
            'meta-keyword':
              'define definecs|10 undef ifdef ifndef iflight ifdllcall ifmac ifos2win ifunix else endif lineson linesoff srcfile srcline'
          },
          contains: [
            {
              begin: /\\\n/,
              relevance: 0
            },
            {
              beginKeywords: 'include',
              end: '$',
              keywords: { 'meta-keyword': 'include' },
              contains: [
                {
                  className: 'meta-string',
                  begin: '"',
                  end: '"',
                  illegal: '\\n'
                }
              ]
            },
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE
          ]
        };

        var FUNCTION_TITLE = hljs.UNDERSCORE_IDENT_RE + '\\s*\\(?';
        var PARSE_PARAMS = [
          {
            className: 'params',
            begin: /\(/,
            end: /\)/,
            keywords: KEYWORDS,
            relevance: 0,
            contains: [
              hljs.C_NUMBER_MODE,
              hljs.C_LINE_COMMENT_MODE,
              hljs.C_BLOCK_COMMENT_MODE
            ]
          }
        ];

        return {
          aliases: ['gss'],
          case_insensitive: true, // language is case-insensitive
          keywords: KEYWORDS,
          illegal: '(\\{[%#]|[%#]\\})',
          contains: [
            hljs.C_NUMBER_MODE,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.COMMENT('@', '@'),
            PREPROCESSOR,
            {
              className: 'string',
              begin: '"',
              end: '"',
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              className: 'function',
              beginKeywords: 'proc keyword',
              end: ';',
              excludeEnd: true,
              keywords: KEYWORDS,
              contains: [
                {
                  begin: FUNCTION_TITLE,
                  returnBegin: true,
                  contains: [hljs.UNDERSCORE_TITLE_MODE],
                  relevance: 0
                },
                hljs.C_NUMBER_MODE,
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                PREPROCESSOR
              ].concat(PARSE_PARAMS)
            },
            {
              className: 'function',
              beginKeywords: 'fn',
              end: ';',
              excludeEnd: true,
              keywords: KEYWORDS,
              contains: [
                {
                  begin: FUNCTION_TITLE + hljs.IDENT_RE + '\\)?\\s*\\=\\s*',
                  returnBegin: true,
                  contains: [hljs.UNDERSCORE_TITLE_MODE],
                  relevance: 0
                },
                hljs.C_NUMBER_MODE,
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ].concat(PARSE_PARAMS)
            },
            {
              className: 'function',
              begin: '\\bexternal (proc|keyword|fn)\\s+',
              end: ';',
              excludeEnd: true,
              keywords: KEYWORDS,
              contains: [
                {
                  begin: FUNCTION_TITLE,
                  returnBegin: true,
                  contains: [hljs.UNDERSCORE_TITLE_MODE],
                  relevance: 0
                },
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },
            {
              className: 'function',
              begin:
                '\\bexternal (matrix|string|array|sparse matrix|struct ' +
                hljs.IDENT_RE +
                ')\\s+',
              end: ';',
              excludeEnd: true,
              keywords: KEYWORDS,
              contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]
            }
          ]
        };
      };

      /***/
    },
    /* 412 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var GCODE_IDENT_RE = '[A-Z_][A-Z0-9_.]*';
        var GCODE_CLOSE_RE = '\\%';
        var GCODE_KEYWORDS =
          'IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT ' +
          'EQ LT GT NE GE LE OR XOR';
        var GCODE_START = {
          className: 'meta',
          begin: '([O])([0-9]+)'
        };
        var GCODE_CODE = [
          hljs.C_LINE_COMMENT_MODE,
          hljs.C_BLOCK_COMMENT_MODE,
          hljs.COMMENT(/\(/, /\)/),
          hljs.inherit(hljs.C_NUMBER_MODE, {
            begin: '([-+]?([0-9]*\\.?[0-9]+\\.?))|' + hljs.C_NUMBER_RE
          }),
          hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null }),
          hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),
          {
            className: 'name',
            begin: '([G])([0-9]+\\.?[0-9]?)'
          },
          {
            className: 'name',
            begin: '([M])([0-9]+\\.?[0-9]?)'
          },
          {
            className: 'attr',
            begin: '(VC|VS|#)',
            end: '(\\d+)'
          },
          {
            className: 'attr',
            begin: '(VZOFX|VZOFY|VZOFZ)'
          },
          {
            className: 'built_in',
            begin: '(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\[)',
            end: '([-+]?([0-9]*\\.?[0-9]+\\.?))(\\])'
          },
          {
            className: 'symbol',
            variants: [
              {
                begin: 'N',
                end: '\\d+',
                illegal: '\\W'
              }
            ]
          }
        ];

        return {
          aliases: ['nc'],
          // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.
          // However, most prefer all uppercase and uppercase is customary.
          case_insensitive: true,
          lexemes: GCODE_IDENT_RE,
          keywords: GCODE_KEYWORDS,
          contains: [
            {
              className: 'meta',
              begin: GCODE_CLOSE_RE
            },
            GCODE_START
          ].concat(GCODE_CODE)
        };
      };

      /***/
    },
    /* 413 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['feature'],
          keywords:
            'Feature Background Ability Business Need Scenario Scenarios Scenario Outline Scenario Template Examples Given And Then But When',
          contains: [
            {
              className: 'symbol',
              begin: '\\*',
              relevance: 0
            },
            {
              className: 'meta',
              begin: '@[^@\\s]+'
            },
            {
              begin: '\\|',
              end: '\\|\\w*$',
              contains: [
                {
                  className: 'string',
                  begin: '[^|]+'
                }
              ]
            },
            {
              className: 'variable',
              begin: '<',
              end: '>'
            },
            hljs.HASH_COMMENT_MODE,
            {
              className: 'string',
              begin: '"""',
              end: '"""'
            },
            hljs.QUOTE_STRING_MODE
          ]
        };
      };

      /***/
    },
    /* 414 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            keyword:
              // Statements
              'break continue discard do else for if return while switch case default ' +
              // Qualifiers
              'attribute binding buffer ccw centroid centroid varying coherent column_major const cw ' +
              'depth_any depth_greater depth_less depth_unchanged early_fragment_tests equal_spacing ' +
              'flat fractional_even_spacing fractional_odd_spacing highp in index inout invariant ' +
              'invocations isolines layout line_strip lines lines_adjacency local_size_x local_size_y ' +
              'local_size_z location lowp max_vertices mediump noperspective offset origin_upper_left ' +
              'out packed patch pixel_center_integer point_mode points precise precision quads r11f_g11f_b10f ' +
              'r16 r16_snorm r16f r16i r16ui r32f r32i r32ui r8 r8_snorm r8i r8ui readonly restrict ' +
              'rg16 rg16_snorm rg16f rg16i rg16ui rg32f rg32i rg32ui rg8 rg8_snorm rg8i rg8ui rgb10_a2 ' +
              'rgb10_a2ui rgba16 rgba16_snorm rgba16f rgba16i rgba16ui rgba32f rgba32i rgba32ui rgba8 ' +
              'rgba8_snorm rgba8i rgba8ui row_major sample shared smooth std140 std430 stream triangle_strip ' +
              'triangles triangles_adjacency uniform varying vertices volatile writeonly',
            type:
              'atomic_uint bool bvec2 bvec3 bvec4 dmat2 dmat2x2 dmat2x3 dmat2x4 dmat3 dmat3x2 dmat3x3 ' +
              'dmat3x4 dmat4 dmat4x2 dmat4x3 dmat4x4 double dvec2 dvec3 dvec4 float iimage1D iimage1DArray ' +
              'iimage2D iimage2DArray iimage2DMS iimage2DMSArray iimage2DRect iimage3D iimageBuffer' +
              'iimageCube iimageCubeArray image1D image1DArray image2D image2DArray image2DMS image2DMSArray ' +
              'image2DRect image3D imageBuffer imageCube imageCubeArray int isampler1D isampler1DArray ' +
              'isampler2D isampler2DArray isampler2DMS isampler2DMSArray isampler2DRect isampler3D ' +
              'isamplerBuffer isamplerCube isamplerCubeArray ivec2 ivec3 ivec4 mat2 mat2x2 mat2x3 ' +
              'mat2x4 mat3 mat3x2 mat3x3 mat3x4 mat4 mat4x2 mat4x3 mat4x4 sampler1D sampler1DArray ' +
              'sampler1DArrayShadow sampler1DShadow sampler2D sampler2DArray sampler2DArrayShadow ' +
              'sampler2DMS sampler2DMSArray sampler2DRect sampler2DRectShadow sampler2DShadow sampler3D ' +
              'samplerBuffer samplerCube samplerCubeArray samplerCubeArrayShadow samplerCubeShadow ' +
              'image1D uimage1DArray uimage2D uimage2DArray uimage2DMS uimage2DMSArray uimage2DRect ' +
              'uimage3D uimageBuffer uimageCube uimageCubeArray uint usampler1D usampler1DArray ' +
              'usampler2D usampler2DArray usampler2DMS usampler2DMSArray usampler2DRect usampler3D ' +
              'samplerBuffer usamplerCube usamplerCubeArray uvec2 uvec3 uvec4 vec2 vec3 vec4 void',
            built_in:
              // Constants
              'gl_MaxAtomicCounterBindings gl_MaxAtomicCounterBufferSize gl_MaxClipDistances gl_MaxClipPlanes ' +
              'gl_MaxCombinedAtomicCounterBuffers gl_MaxCombinedAtomicCounters gl_MaxCombinedImageUniforms ' +
              'gl_MaxCombinedImageUnitsAndFragmentOutputs gl_MaxCombinedTextureImageUnits gl_MaxComputeAtomicCounterBuffers ' +
              'gl_MaxComputeAtomicCounters gl_MaxComputeImageUniforms gl_MaxComputeTextureImageUnits ' +
              'gl_MaxComputeUniformComponents gl_MaxComputeWorkGroupCount gl_MaxComputeWorkGroupSize ' +
              'gl_MaxDrawBuffers gl_MaxFragmentAtomicCounterBuffers gl_MaxFragmentAtomicCounters ' +
              'gl_MaxFragmentImageUniforms gl_MaxFragmentInputComponents gl_MaxFragmentInputVectors ' +
              'gl_MaxFragmentUniformComponents gl_MaxFragmentUniformVectors gl_MaxGeometryAtomicCounterBuffers ' +
              'gl_MaxGeometryAtomicCounters gl_MaxGeometryImageUniforms gl_MaxGeometryInputComponents ' +
              'gl_MaxGeometryOutputComponents gl_MaxGeometryOutputVertices gl_MaxGeometryTextureImageUnits ' +
              'gl_MaxGeometryTotalOutputComponents gl_MaxGeometryUniformComponents gl_MaxGeometryVaryingComponents ' +
              'gl_MaxImageSamples gl_MaxImageUnits gl_MaxLights gl_MaxPatchVertices gl_MaxProgramTexelOffset ' +
              'gl_MaxTessControlAtomicCounterBuffers gl_MaxTessControlAtomicCounters gl_MaxTessControlImageUniforms ' +
              'gl_MaxTessControlInputComponents gl_MaxTessControlOutputComponents gl_MaxTessControlTextureImageUnits ' +
              'gl_MaxTessControlTotalOutputComponents gl_MaxTessControlUniformComponents ' +
              'gl_MaxTessEvaluationAtomicCounterBuffers gl_MaxTessEvaluationAtomicCounters ' +
              'gl_MaxTessEvaluationImageUniforms gl_MaxTessEvaluationInputComponents gl_MaxTessEvaluationOutputComponents ' +
              'gl_MaxTessEvaluationTextureImageUnits gl_MaxTessEvaluationUniformComponents ' +
              'gl_MaxTessGenLevel gl_MaxTessPatchComponents gl_MaxTextureCoords gl_MaxTextureImageUnits ' +
              'gl_MaxTextureUnits gl_MaxVaryingComponents gl_MaxVaryingFloats gl_MaxVaryingVectors ' +
              'gl_MaxVertexAtomicCounterBuffers gl_MaxVertexAtomicCounters gl_MaxVertexAttribs gl_MaxVertexImageUniforms ' +
              'gl_MaxVertexOutputComponents gl_MaxVertexOutputVectors gl_MaxVertexTextureImageUnits ' +
              'gl_MaxVertexUniformComponents gl_MaxVertexUniformVectors gl_MaxViewports gl_MinProgramTexelOffset ' +
              // Variables
              'gl_BackColor gl_BackLightModelProduct gl_BackLightProduct gl_BackMaterial ' +
              'gl_BackSecondaryColor gl_ClipDistance gl_ClipPlane gl_ClipVertex gl_Color ' +
              'gl_DepthRange gl_EyePlaneQ gl_EyePlaneR gl_EyePlaneS gl_EyePlaneT gl_Fog gl_FogCoord ' +
              'gl_FogFragCoord gl_FragColor gl_FragCoord gl_FragData gl_FragDepth gl_FrontColor ' +
              'gl_FrontFacing gl_FrontLightModelProduct gl_FrontLightProduct gl_FrontMaterial ' +
              'gl_FrontSecondaryColor gl_GlobalInvocationID gl_InstanceID gl_InvocationID gl_Layer gl_LightModel ' +
              'gl_LightSource gl_LocalInvocationID gl_LocalInvocationIndex gl_ModelViewMatrix ' +
              'gl_ModelViewMatrixInverse gl_ModelViewMatrixInverseTranspose gl_ModelViewMatrixTranspose ' +
              'gl_ModelViewProjectionMatrix gl_ModelViewProjectionMatrixInverse gl_ModelViewProjectionMatrixInverseTranspose ' +
              'gl_ModelViewProjectionMatrixTranspose gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 ' +
              'gl_MultiTexCoord3 gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 ' +
              'gl_Normal gl_NormalMatrix gl_NormalScale gl_NumSamples gl_NumWorkGroups gl_ObjectPlaneQ ' +
              'gl_ObjectPlaneR gl_ObjectPlaneS gl_ObjectPlaneT gl_PatchVerticesIn gl_Point gl_PointCoord ' +
              'gl_PointSize gl_Position gl_PrimitiveID gl_PrimitiveIDIn gl_ProjectionMatrix gl_ProjectionMatrixInverse ' +
              'gl_ProjectionMatrixInverseTranspose gl_ProjectionMatrixTranspose gl_SampleID gl_SampleMask ' +
              'gl_SampleMaskIn gl_SamplePosition gl_SecondaryColor gl_TessCoord gl_TessLevelInner gl_TessLevelOuter ' +
              'gl_TexCoord gl_TextureEnvColor gl_TextureMatrix gl_TextureMatrixInverse gl_TextureMatrixInverseTranspose ' +
              'gl_TextureMatrixTranspose gl_Vertex gl_VertexID gl_ViewportIndex gl_WorkGroupID gl_WorkGroupSize gl_in gl_out ' +
              // Functions
              'EmitStreamVertex EmitVertex EndPrimitive EndStreamPrimitive abs acos acosh all any asin ' +
              'asinh atan atanh atomicAdd atomicAnd atomicCompSwap atomicCounter atomicCounterDecrement ' +
              'atomicCounterIncrement atomicExchange atomicMax atomicMin atomicOr atomicXor barrier ' +
              'bitCount bitfieldExtract bitfieldInsert bitfieldReverse ceil clamp cos cosh cross ' +
              'dFdx dFdy degrees determinant distance dot equal exp exp2 faceforward findLSB findMSB ' +
              'floatBitsToInt floatBitsToUint floor fma fract frexp ftransform fwidth greaterThan ' +
              'greaterThanEqual groupMemoryBarrier imageAtomicAdd imageAtomicAnd imageAtomicCompSwap ' +
              'imageAtomicExchange imageAtomicMax imageAtomicMin imageAtomicOr imageAtomicXor imageLoad ' +
              'imageSize imageStore imulExtended intBitsToFloat interpolateAtCentroid interpolateAtOffset ' +
              'interpolateAtSample inverse inversesqrt isinf isnan ldexp length lessThan lessThanEqual log ' +
              'log2 matrixCompMult max memoryBarrier memoryBarrierAtomicCounter memoryBarrierBuffer ' +
              'memoryBarrierImage memoryBarrierShared min mix mod modf noise1 noise2 noise3 noise4 ' +
              'normalize not notEqual outerProduct packDouble2x32 packHalf2x16 packSnorm2x16 packSnorm4x8 ' +
              'packUnorm2x16 packUnorm4x8 pow radians reflect refract round roundEven shadow1D shadow1DLod ' +
              'shadow1DProj shadow1DProjLod shadow2D shadow2DLod shadow2DProj shadow2DProjLod sign sin sinh ' +
              'smoothstep sqrt step tan tanh texelFetch texelFetchOffset texture texture1D texture1DLod ' +
              'texture1DProj texture1DProjLod texture2D texture2DLod texture2DProj texture2DProjLod ' +
              'texture3D texture3DLod texture3DProj texture3DProjLod textureCube textureCubeLod ' +
              'textureGather textureGatherOffset textureGatherOffsets textureGrad textureGradOffset ' +
              'textureLod textureLodOffset textureOffset textureProj textureProjGrad textureProjGradOffset ' +
              'textureProjLod textureProjLodOffset textureProjOffset textureQueryLevels textureQueryLod ' +
              'textureSize transpose trunc uaddCarry uintBitsToFloat umulExtended unpackDouble2x32 ' +
              'unpackHalf2x16 unpackSnorm2x16 unpackSnorm4x8 unpackUnorm2x16 unpackUnorm4x8 usubBorrow',
            literal: 'true false'
          },
          illegal: '"',
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.C_NUMBER_MODE,
            {
              className: 'meta',
              begin: '#',
              end: '$'
            }
          ]
        };
      };

      /***/
    },
    /* 415 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var GML_KEYWORDS = {
          keywords:
            'begin end if then else while do for break continue with until ' +
            'repeat exit and or xor not return mod div switch case default var ' +
            'globalvar enum #macro #region #endregion',
          built_in:
            'is_real is_string is_array is_undefined is_int32 is_int64 ' +
            'is_ptr is_vec3 is_vec4 is_matrix is_bool typeof ' +
            'variable_global_exists variable_global_get variable_global_set ' +
            'variable_instance_exists variable_instance_get variable_instance_set ' +
            'variable_instance_get_names array_length_1d array_length_2d ' +
            'array_height_2d array_equals array_create array_copy random ' +
            'random_range irandom irandom_range random_set_seed random_get_seed ' +
            'randomize randomise choose abs round floor ceil sign frac sqrt sqr ' +
            'exp ln log2 log10 sin cos tan arcsin arccos arctan arctan2 dsin dcos ' +
            'dtan darcsin darccos darctan darctan2 degtorad radtodeg power logn ' +
            'min max mean median clamp lerp dot_product dot_product_3d ' +
            'dot_product_normalised dot_product_3d_normalised ' +
            'dot_product_normalized dot_product_3d_normalized math_set_epsilon ' +
            'math_get_epsilon angle_difference point_distance_3d point_distance ' +
            'point_direction lengthdir_x lengthdir_y real string int64 ptr ' +
            'string_format chr ansi_char ord string_length string_byte_length ' +
            'string_pos string_copy string_char_at string_ord_at string_byte_at ' +
            'string_set_byte_at string_delete string_insert string_lower ' +
            'string_upper string_repeat string_letters string_digits ' +
            'string_lettersdigits string_replace string_replace_all string_count ' +
            'string_hash_to_newline clipboard_has_text clipboard_set_text ' +
            'clipboard_get_text date_current_datetime date_create_datetime ' +
            'date_valid_datetime date_inc_year date_inc_month date_inc_week ' +
            'date_inc_day date_inc_hour date_inc_minute date_inc_second ' +
            'date_get_year date_get_month date_get_week date_get_day ' +
            'date_get_hour date_get_minute date_get_second date_get_weekday ' +
            'date_get_day_of_year date_get_hour_of_year date_get_minute_of_year ' +
            'date_get_second_of_year date_year_span date_month_span ' +
            'date_week_span date_day_span date_hour_span date_minute_span ' +
            'date_second_span date_compare_datetime date_compare_date ' +
            'date_compare_time date_date_of date_time_of date_datetime_string ' +
            'date_date_string date_time_string date_days_in_month ' +
            'date_days_in_year date_leap_year date_is_today date_set_timezone ' +
            'date_get_timezone game_set_speed game_get_speed motion_set ' +
            'motion_add place_free place_empty place_meeting place_snapped ' +
            'move_random move_snap move_towards_point move_contact_solid ' +
            'move_contact_all move_outside_solid move_outside_all ' +
            'move_bounce_solid move_bounce_all move_wrap distance_to_point ' +
            'distance_to_object position_empty position_meeting path_start ' +
            'path_end mp_linear_step mp_potential_step mp_linear_step_object ' +
            'mp_potential_step_object mp_potential_settings mp_linear_path ' +
            'mp_potential_path mp_linear_path_object mp_potential_path_object ' +
            'mp_grid_create mp_grid_destroy mp_grid_clear_all mp_grid_clear_cell ' +
            'mp_grid_clear_rectangle mp_grid_add_cell mp_grid_get_cell ' +
            'mp_grid_add_rectangle mp_grid_add_instances mp_grid_path ' +
            'mp_grid_draw mp_grid_to_ds_grid collision_point collision_rectangle ' +
            'collision_circle collision_ellipse collision_line ' +
            'collision_point_list collision_rectangle_list collision_circle_list ' +
            'collision_ellipse_list collision_line_list instance_position_list ' +
            'instance_place_list point_in_rectangle ' +
            'point_in_triangle point_in_circle rectangle_in_rectangle ' +
            'rectangle_in_triangle rectangle_in_circle instance_find ' +
            'instance_exists instance_number instance_position instance_nearest ' +
            'instance_furthest instance_place instance_create_depth ' +
            'instance_create_layer instance_copy instance_change instance_destroy ' +
            'position_destroy position_change instance_id_get ' +
            'instance_deactivate_all instance_deactivate_object ' +
            'instance_deactivate_region instance_activate_all ' +
            'instance_activate_object instance_activate_region room_goto ' +
            'room_goto_previous room_goto_next room_previous room_next ' +
            'room_restart game_end game_restart game_load game_save ' +
            'game_save_buffer game_load_buffer event_perform event_user ' +
            'event_perform_object event_inherited show_debug_message ' +
            'show_debug_overlay debug_event debug_get_callstack alarm_get ' +
            'alarm_set font_texture_page_size keyboard_set_map keyboard_get_map ' +
            'keyboard_unset_map keyboard_check keyboard_check_pressed ' +
            'keyboard_check_released keyboard_check_direct keyboard_get_numlock ' +
            'keyboard_set_numlock keyboard_key_press keyboard_key_release ' +
            'keyboard_clear io_clear mouse_check_button ' +
            'mouse_check_button_pressed mouse_check_button_released ' +
            'mouse_wheel_up mouse_wheel_down mouse_clear draw_self draw_sprite ' +
            'draw_sprite_pos draw_sprite_ext draw_sprite_stretched ' +
            'draw_sprite_stretched_ext draw_sprite_tiled draw_sprite_tiled_ext ' +
            'draw_sprite_part draw_sprite_part_ext draw_sprite_general draw_clear ' +
            'draw_clear_alpha draw_point draw_line draw_line_width draw_rectangle ' +
            'draw_roundrect draw_roundrect_ext draw_triangle draw_circle ' +
            'draw_ellipse draw_set_circle_precision draw_arrow draw_button ' +
            'draw_path draw_healthbar draw_getpixel draw_getpixel_ext ' +
            'draw_set_colour draw_set_color draw_set_alpha draw_get_colour ' +
            'draw_get_color draw_get_alpha merge_colour make_colour_rgb ' +
            'make_colour_hsv colour_get_red colour_get_green colour_get_blue ' +
            'colour_get_hue colour_get_saturation colour_get_value merge_color ' +
            'make_color_rgb make_color_hsv color_get_red color_get_green ' +
            'color_get_blue color_get_hue color_get_saturation color_get_value ' +
            'merge_color screen_save screen_save_part draw_set_font ' +
            'draw_set_halign draw_set_valign draw_text draw_text_ext string_width ' +
            'string_height string_width_ext string_height_ext ' +
            'draw_text_transformed draw_text_ext_transformed draw_text_colour ' +
            'draw_text_ext_colour draw_text_transformed_colour ' +
            'draw_text_ext_transformed_colour draw_text_color draw_text_ext_color ' +
            'draw_text_transformed_color draw_text_ext_transformed_color ' +
            'draw_point_colour draw_line_colour draw_line_width_colour ' +
            'draw_rectangle_colour draw_roundrect_colour ' +
            'draw_roundrect_colour_ext draw_triangle_colour draw_circle_colour ' +
            'draw_ellipse_colour draw_point_color draw_line_color ' +
            'draw_line_width_color draw_rectangle_color draw_roundrect_color ' +
            'draw_roundrect_color_ext draw_triangle_color draw_circle_color ' +
            'draw_ellipse_color draw_primitive_begin draw_vertex ' +
            'draw_vertex_colour draw_vertex_color draw_primitive_end ' +
            'sprite_get_uvs font_get_uvs sprite_get_texture font_get_texture ' +
            'texture_get_width texture_get_height texture_get_uvs ' +
            'draw_primitive_begin_texture draw_vertex_texture ' +
            'draw_vertex_texture_colour draw_vertex_texture_color ' +
            'texture_global_scale surface_create surface_create_ext ' +
            'surface_resize surface_free surface_exists surface_get_width ' +
            'surface_get_height surface_get_texture surface_set_target ' +
            'surface_set_target_ext surface_reset_target surface_depth_disable ' +
            'surface_get_depth_disable draw_surface draw_surface_stretched ' +
            'draw_surface_tiled draw_surface_part draw_surface_ext ' +
            'draw_surface_stretched_ext draw_surface_tiled_ext ' +
            'draw_surface_part_ext draw_surface_general surface_getpixel ' +
            'surface_getpixel_ext surface_save surface_save_part surface_copy ' +
            'surface_copy_part application_surface_draw_enable ' +
            'application_get_position application_surface_enable ' +
            'application_surface_is_enabled display_get_width display_get_height ' +
            'display_get_orientation display_get_gui_width display_get_gui_height ' +
            'display_reset display_mouse_get_x display_mouse_get_y ' +
            'display_mouse_set display_set_ui_visibility ' +
            'window_set_fullscreen window_get_fullscreen ' +
            'window_set_caption window_set_min_width window_set_max_width ' +
            'window_set_min_height window_set_max_height window_get_visible_rects ' +
            'window_get_caption window_set_cursor window_get_cursor ' +
            'window_set_colour window_get_colour window_set_color ' +
            'window_get_color window_set_position window_set_size ' +
            'window_set_rectangle window_center window_get_x window_get_y ' +
            'window_get_width window_get_height window_mouse_get_x ' +
            'window_mouse_get_y window_mouse_set window_view_mouse_get_x ' +
            'window_view_mouse_get_y window_views_mouse_get_x ' +
            'window_views_mouse_get_y audio_listener_position ' +
            'audio_listener_velocity audio_listener_orientation ' +
            'audio_emitter_position audio_emitter_create audio_emitter_free ' +
            'audio_emitter_exists audio_emitter_pitch audio_emitter_velocity ' +
            'audio_emitter_falloff audio_emitter_gain audio_play_sound ' +
            'audio_play_sound_on audio_play_sound_at audio_stop_sound ' +
            'audio_resume_music audio_music_is_playing audio_resume_sound ' +
            'audio_pause_sound audio_pause_music audio_channel_num ' +
            'audio_sound_length audio_get_type audio_falloff_set_model ' +
            'audio_play_music audio_stop_music audio_master_gain audio_music_gain ' +
            'audio_sound_gain audio_sound_pitch audio_stop_all audio_resume_all ' +
            'audio_pause_all audio_is_playing audio_is_paused audio_exists ' +
            'audio_sound_set_track_position audio_sound_get_track_position ' +
            'audio_emitter_get_gain audio_emitter_get_pitch audio_emitter_get_x ' +
            'audio_emitter_get_y audio_emitter_get_z audio_emitter_get_vx ' +
            'audio_emitter_get_vy audio_emitter_get_vz ' +
            'audio_listener_set_position audio_listener_set_velocity ' +
            'audio_listener_set_orientation audio_listener_get_data ' +
            'audio_set_master_gain audio_get_master_gain audio_sound_get_gain ' +
            'audio_sound_get_pitch audio_get_name audio_sound_set_track_position ' +
            'audio_sound_get_track_position audio_create_stream ' +
            'audio_destroy_stream audio_create_sync_group ' +
            'audio_destroy_sync_group audio_play_in_sync_group ' +
            'audio_start_sync_group audio_stop_sync_group audio_pause_sync_group ' +
            'audio_resume_sync_group audio_sync_group_get_track_pos ' +
            'audio_sync_group_debug audio_sync_group_is_playing audio_debug ' +
            'audio_group_load audio_group_unload audio_group_is_loaded ' +
            'audio_group_load_progress audio_group_name audio_group_stop_all ' +
            'audio_group_set_gain audio_create_buffer_sound ' +
            'audio_free_buffer_sound audio_create_play_queue ' +
            'audio_free_play_queue audio_queue_sound audio_get_recorder_count ' +
            'audio_get_recorder_info audio_start_recording audio_stop_recording ' +
            'audio_sound_get_listener_mask audio_emitter_get_listener_mask ' +
            'audio_get_listener_mask audio_sound_set_listener_mask ' +
            'audio_emitter_set_listener_mask audio_set_listener_mask ' +
            'audio_get_listener_count audio_get_listener_info audio_system ' +
            'show_message show_message_async clickable_add clickable_add_ext ' +
            'clickable_change clickable_change_ext clickable_delete ' +
            'clickable_exists clickable_set_style show_question ' +
            'show_question_async get_integer get_string get_integer_async ' +
            'get_string_async get_login_async get_open_filename get_save_filename ' +
            'get_open_filename_ext get_save_filename_ext show_error ' +
            'highscore_clear highscore_add highscore_value highscore_name ' +
            'draw_highscore sprite_exists sprite_get_name sprite_get_number ' +
            'sprite_get_width sprite_get_height sprite_get_xoffset ' +
            'sprite_get_yoffset sprite_get_bbox_left sprite_get_bbox_right ' +
            'sprite_get_bbox_top sprite_get_bbox_bottom sprite_save ' +
            'sprite_save_strip sprite_set_cache_size sprite_set_cache_size_ext ' +
            'sprite_get_tpe sprite_prefetch sprite_prefetch_multi sprite_flush ' +
            'sprite_flush_multi sprite_set_speed sprite_get_speed_type ' +
            'sprite_get_speed font_exists font_get_name font_get_fontname ' +
            'font_get_bold font_get_italic font_get_first font_get_last ' +
            'font_get_size font_set_cache_size path_exists path_get_name ' +
            'path_get_length path_get_time path_get_kind path_get_closed ' +
            'path_get_precision path_get_number path_get_point_x path_get_point_y ' +
            'path_get_point_speed path_get_x path_get_y path_get_speed ' +
            'script_exists script_get_name timeline_add timeline_delete ' +
            'timeline_clear timeline_exists timeline_get_name ' +
            'timeline_moment_clear timeline_moment_add_script timeline_size ' +
            'timeline_max_moment object_exists object_get_name object_get_sprite ' +
            'object_get_solid object_get_visible object_get_persistent ' +
            'object_get_mask object_get_parent object_get_physics ' +
            'object_is_ancestor room_exists room_get_name sprite_set_offset ' +
            'sprite_duplicate sprite_assign sprite_merge sprite_add ' +
            'sprite_replace sprite_create_from_surface sprite_add_from_surface ' +
            'sprite_delete sprite_set_alpha_from_sprite sprite_collision_mask ' +
            'font_add_enable_aa font_add_get_enable_aa font_add font_add_sprite ' +
            'font_add_sprite_ext font_replace font_replace_sprite ' +
            'font_replace_sprite_ext font_delete path_set_kind path_set_closed ' +
            'path_set_precision path_add path_assign path_duplicate path_append ' +
            'path_delete path_add_point path_insert_point path_change_point ' +
            'path_delete_point path_clear_points path_reverse path_mirror ' +
            'path_flip path_rotate path_rescale path_shift script_execute ' +
            'object_set_sprite object_set_solid object_set_visible ' +
            'object_set_persistent object_set_mask room_set_width room_set_height ' +
            'room_set_persistent room_set_background_colour ' +
            'room_set_background_color room_set_view room_set_viewport ' +
            'room_get_viewport room_set_view_enabled room_add room_duplicate ' +
            'room_assign room_instance_add room_instance_clear room_get_camera ' +
            'room_set_camera asset_get_index asset_get_type ' +
            'file_text_open_from_string file_text_open_read file_text_open_write ' +
            'file_text_open_append file_text_close file_text_write_string ' +
            'file_text_write_real file_text_writeln file_text_read_string ' +
            'file_text_read_real file_text_readln file_text_eof file_text_eoln ' +
            'file_exists file_delete file_rename file_copy directory_exists ' +
            'directory_create directory_destroy file_find_first file_find_next ' +
            'file_find_close file_attributes filename_name filename_path ' +
            'filename_dir filename_drive filename_ext filename_change_ext ' +
            'file_bin_open file_bin_rewrite file_bin_close file_bin_position ' +
            'file_bin_size file_bin_seek file_bin_write_byte file_bin_read_byte ' +
            'parameter_count parameter_string environment_get_variable ' +
            'ini_open_from_string ini_open ini_close ini_read_string ' +
            'ini_read_real ini_write_string ini_write_real ini_key_exists ' +
            'ini_section_exists ini_key_delete ini_section_delete ' +
            'ds_set_precision ds_exists ds_stack_create ds_stack_destroy ' +
            'ds_stack_clear ds_stack_copy ds_stack_size ds_stack_empty ' +
            'ds_stack_push ds_stack_pop ds_stack_top ds_stack_write ds_stack_read ' +
            'ds_queue_create ds_queue_destroy ds_queue_clear ds_queue_copy ' +
            'ds_queue_size ds_queue_empty ds_queue_enqueue ds_queue_dequeue ' +
            'ds_queue_head ds_queue_tail ds_queue_write ds_queue_read ' +
            'ds_list_create ds_list_destroy ds_list_clear ds_list_copy ' +
            'ds_list_size ds_list_empty ds_list_add ds_list_insert ' +
            'ds_list_replace ds_list_delete ds_list_find_index ds_list_find_value ' +
            'ds_list_mark_as_list ds_list_mark_as_map ds_list_sort ' +
            'ds_list_shuffle ds_list_write ds_list_read ds_list_set ds_map_create ' +
            'ds_map_destroy ds_map_clear ds_map_copy ds_map_size ds_map_empty ' +
            'ds_map_add ds_map_add_list ds_map_add_map ds_map_replace ' +
            'ds_map_replace_map ds_map_replace_list ds_map_delete ds_map_exists ' +
            'ds_map_find_value ds_map_find_previous ds_map_find_next ' +
            'ds_map_find_first ds_map_find_last ds_map_write ds_map_read ' +
            'ds_map_secure_save ds_map_secure_load ds_map_secure_load_buffer ' +
            'ds_map_secure_save_buffer ds_map_set ds_priority_create ' +
            'ds_priority_destroy ds_priority_clear ds_priority_copy ' +
            'ds_priority_size ds_priority_empty ds_priority_add ' +
            'ds_priority_change_priority ds_priority_find_priority ' +
            'ds_priority_delete_value ds_priority_delete_min ds_priority_find_min ' +
            'ds_priority_delete_max ds_priority_find_max ds_priority_write ' +
            'ds_priority_read ds_grid_create ds_grid_destroy ds_grid_copy ' +
            'ds_grid_resize ds_grid_width ds_grid_height ds_grid_clear ' +
            'ds_grid_set ds_grid_add ds_grid_multiply ds_grid_set_region ' +
            'ds_grid_add_region ds_grid_multiply_region ds_grid_set_disk ' +
            'ds_grid_add_disk ds_grid_multiply_disk ds_grid_set_grid_region ' +
            'ds_grid_add_grid_region ds_grid_multiply_grid_region ds_grid_get ' +
            'ds_grid_get_sum ds_grid_get_max ds_grid_get_min ds_grid_get_mean ' +
            'ds_grid_get_disk_sum ds_grid_get_disk_min ds_grid_get_disk_max ' +
            'ds_grid_get_disk_mean ds_grid_value_exists ds_grid_value_x ' +
            'ds_grid_value_y ds_grid_value_disk_exists ds_grid_value_disk_x ' +
            'ds_grid_value_disk_y ds_grid_shuffle ds_grid_write ds_grid_read ' +
            'ds_grid_sort ds_grid_set ds_grid_get effect_create_below ' +
            'effect_create_above effect_clear part_type_create part_type_destroy ' +
            'part_type_exists part_type_clear part_type_shape part_type_sprite ' +
            'part_type_size part_type_scale part_type_orientation part_type_life ' +
            'part_type_step part_type_death part_type_speed part_type_direction ' +
            'part_type_gravity part_type_colour1 part_type_colour2 ' +
            'part_type_colour3 part_type_colour_mix part_type_colour_rgb ' +
            'part_type_colour_hsv part_type_color1 part_type_color2 ' +
            'part_type_color3 part_type_color_mix part_type_color_rgb ' +
            'part_type_color_hsv part_type_alpha1 part_type_alpha2 ' +
            'part_type_alpha3 part_type_blend part_system_create ' +
            'part_system_create_layer part_system_destroy part_system_exists ' +
            'part_system_clear part_system_draw_order part_system_depth ' +
            'part_system_position part_system_automatic_update ' +
            'part_system_automatic_draw part_system_update part_system_drawit ' +
            'part_system_get_layer part_system_layer part_particles_create ' +
            'part_particles_create_colour part_particles_create_color ' +
            'part_particles_clear part_particles_count part_emitter_create ' +
            'part_emitter_destroy part_emitter_destroy_all part_emitter_exists ' +
            'part_emitter_clear part_emitter_region part_emitter_burst ' +
            'part_emitter_stream external_call external_define external_free ' +
            'window_handle window_device matrix_get matrix_set ' +
            'matrix_build_identity matrix_build matrix_build_lookat ' +
            'matrix_build_projection_ortho matrix_build_projection_perspective ' +
            'matrix_build_projection_perspective_fov matrix_multiply ' +
            'matrix_transform_vertex matrix_stack_push matrix_stack_pop ' +
            'matrix_stack_multiply matrix_stack_set matrix_stack_clear ' +
            'matrix_stack_top matrix_stack_is_empty browser_input_capture ' +
            'os_get_config os_get_info os_get_language os_get_region ' +
            'os_lock_orientation display_get_dpi_x display_get_dpi_y ' +
            'display_set_gui_size display_set_gui_maximise ' +
            'display_set_gui_maximize device_mouse_dbclick_enable ' +
            'display_set_timing_method display_get_timing_method ' +
            'display_set_sleep_margin display_get_sleep_margin virtual_key_add ' +
            'virtual_key_hide virtual_key_delete virtual_key_show ' +
            'draw_enable_drawevent draw_enable_swf_aa draw_set_swf_aa_level ' +
            'draw_get_swf_aa_level draw_texture_flush draw_flush ' +
            'gpu_set_blendenable gpu_set_ztestenable gpu_set_zfunc ' +
            'gpu_set_zwriteenable gpu_set_lightingenable gpu_set_fog ' +
            'gpu_set_cullmode gpu_set_blendmode gpu_set_blendmode_ext ' +
            'gpu_set_blendmode_ext_sepalpha gpu_set_colorwriteenable ' +
            'gpu_set_colourwriteenable gpu_set_alphatestenable ' +
            'gpu_set_alphatestref gpu_set_alphatestfunc gpu_set_texfilter ' +
            'gpu_set_texfilter_ext gpu_set_texrepeat gpu_set_texrepeat_ext ' +
            'gpu_set_tex_filter gpu_set_tex_filter_ext gpu_set_tex_repeat ' +
            'gpu_set_tex_repeat_ext gpu_set_tex_mip_filter ' +
            'gpu_set_tex_mip_filter_ext gpu_set_tex_mip_bias ' +
            'gpu_set_tex_mip_bias_ext gpu_set_tex_min_mip gpu_set_tex_min_mip_ext ' +
            'gpu_set_tex_max_mip gpu_set_tex_max_mip_ext gpu_set_tex_max_aniso ' +
            'gpu_set_tex_max_aniso_ext gpu_set_tex_mip_enable ' +
            'gpu_set_tex_mip_enable_ext gpu_get_blendenable gpu_get_ztestenable ' +
            'gpu_get_zfunc gpu_get_zwriteenable gpu_get_lightingenable ' +
            'gpu_get_fog gpu_get_cullmode gpu_get_blendmode gpu_get_blendmode_ext ' +
            'gpu_get_blendmode_ext_sepalpha gpu_get_blendmode_src ' +
            'gpu_get_blendmode_dest gpu_get_blendmode_srcalpha ' +
            'gpu_get_blendmode_destalpha gpu_get_colorwriteenable ' +
            'gpu_get_colourwriteenable gpu_get_alphatestenable ' +
            'gpu_get_alphatestref gpu_get_alphatestfunc gpu_get_texfilter ' +
            'gpu_get_texfilter_ext gpu_get_texrepeat gpu_get_texrepeat_ext ' +
            'gpu_get_tex_filter gpu_get_tex_filter_ext gpu_get_tex_repeat ' +
            'gpu_get_tex_repeat_ext gpu_get_tex_mip_filter ' +
            'gpu_get_tex_mip_filter_ext gpu_get_tex_mip_bias ' +
            'gpu_get_tex_mip_bias_ext gpu_get_tex_min_mip gpu_get_tex_min_mip_ext ' +
            'gpu_get_tex_max_mip gpu_get_tex_max_mip_ext gpu_get_tex_max_aniso ' +
            'gpu_get_tex_max_aniso_ext gpu_get_tex_mip_enable ' +
            'gpu_get_tex_mip_enable_ext gpu_push_state gpu_pop_state ' +
            'gpu_get_state gpu_set_state draw_light_define_ambient ' +
            'draw_light_define_direction draw_light_define_point ' +
            'draw_light_enable draw_set_lighting draw_light_get_ambient ' +
            'draw_light_get draw_get_lighting shop_leave_rating url_get_domain ' +
            'url_open url_open_ext url_open_full get_timer achievement_login ' +
            'achievement_logout achievement_post achievement_increment ' +
            'achievement_post_score achievement_available ' +
            'achievement_show_achievements achievement_show_leaderboards ' +
            'achievement_load_friends achievement_load_leaderboard ' +
            'achievement_send_challenge achievement_load_progress ' +
            'achievement_reset achievement_login_status achievement_get_pic ' +
            'achievement_show_challenge_notifications achievement_get_challenges ' +
            'achievement_event achievement_show achievement_get_info ' +
            'cloud_file_save cloud_string_save cloud_synchronise ads_enable ' +
            'ads_disable ads_setup ads_engagement_launch ads_engagement_available ' +
            'ads_engagement_active ads_event ads_event_preload ' +
            'ads_set_reward_callback ads_get_display_height ads_get_display_width ' +
            'ads_move ads_interstitial_available ads_interstitial_display ' +
            'device_get_tilt_x device_get_tilt_y device_get_tilt_z ' +
            'device_is_keypad_open device_mouse_check_button ' +
            'device_mouse_check_button_pressed device_mouse_check_button_released ' +
            'device_mouse_x device_mouse_y device_mouse_raw_x device_mouse_raw_y ' +
            'device_mouse_x_to_gui device_mouse_y_to_gui iap_activate iap_status ' +
            'iap_enumerate_products iap_restore_all iap_acquire iap_consume ' +
            'iap_product_details iap_purchase_details facebook_init ' +
            'facebook_login facebook_status facebook_graph_request ' +
            'facebook_dialog facebook_logout facebook_launch_offerwall ' +
            'facebook_post_message facebook_send_invite facebook_user_id ' +
            'facebook_accesstoken facebook_check_permission ' +
            'facebook_request_read_permissions ' +
            'facebook_request_publish_permissions gamepad_is_supported ' +
            'gamepad_get_device_count gamepad_is_connected ' +
            'gamepad_get_description gamepad_get_button_threshold ' +
            'gamepad_set_button_threshold gamepad_get_axis_deadzone ' +
            'gamepad_set_axis_deadzone gamepad_button_count gamepad_button_check ' +
            'gamepad_button_check_pressed gamepad_button_check_released ' +
            'gamepad_button_value gamepad_axis_count gamepad_axis_value ' +
            'gamepad_set_vibration gamepad_set_colour gamepad_set_color ' +
            'os_is_paused window_has_focus code_is_compiled http_get ' +
            'http_get_file http_post_string http_request json_encode json_decode ' +
            'zip_unzip load_csv base64_encode base64_decode md5_string_unicode ' +
            'md5_string_utf8 md5_file os_is_network_connected sha1_string_unicode ' +
            'sha1_string_utf8 sha1_file os_powersave_enable analytics_event ' +
            'analytics_event_ext win8_livetile_tile_notification ' +
            'win8_livetile_tile_clear win8_livetile_badge_notification ' +
            'win8_livetile_badge_clear win8_livetile_queue_enable ' +
            'win8_secondarytile_pin win8_secondarytile_badge_notification ' +
            'win8_secondarytile_delete win8_livetile_notification_begin ' +
            'win8_livetile_notification_secondary_begin ' +
            'win8_livetile_notification_expiry win8_livetile_notification_tag ' +
            'win8_livetile_notification_text_add ' +
            'win8_livetile_notification_image_add win8_livetile_notification_end ' +
            'win8_appbar_enable win8_appbar_add_element ' +
            'win8_appbar_remove_element win8_settingscharm_add_entry ' +
            'win8_settingscharm_add_html_entry win8_settingscharm_add_xaml_entry ' +
            'win8_settingscharm_set_xaml_property ' +
            'win8_settingscharm_get_xaml_property win8_settingscharm_remove_entry ' +
            'win8_share_image win8_share_screenshot win8_share_file ' +
            'win8_share_url win8_share_text win8_search_enable ' +
            'win8_search_disable win8_search_add_suggestions ' +
            'win8_device_touchscreen_available win8_license_initialize_sandbox ' +
            'win8_license_trial_version winphone_license_trial_version ' +
            'winphone_tile_title winphone_tile_count winphone_tile_back_title ' +
            'winphone_tile_back_content winphone_tile_back_content_wide ' +
            'winphone_tile_front_image winphone_tile_front_image_small ' +
            'winphone_tile_front_image_wide winphone_tile_back_image ' +
            'winphone_tile_back_image_wide winphone_tile_background_colour ' +
            'winphone_tile_background_color winphone_tile_icon_image ' +
            'winphone_tile_small_icon_image winphone_tile_wide_content ' +
            'winphone_tile_cycle_images winphone_tile_small_background_image ' +
            'physics_world_create physics_world_gravity ' +
            'physics_world_update_speed physics_world_update_iterations ' +
            'physics_world_draw_debug physics_pause_enable physics_fixture_create ' +
            'physics_fixture_set_kinematic physics_fixture_set_density ' +
            'physics_fixture_set_awake physics_fixture_set_restitution ' +
            'physics_fixture_set_friction physics_fixture_set_collision_group ' +
            'physics_fixture_set_sensor physics_fixture_set_linear_damping ' +
            'physics_fixture_set_angular_damping physics_fixture_set_circle_shape ' +
            'physics_fixture_set_box_shape physics_fixture_set_edge_shape ' +
            'physics_fixture_set_polygon_shape physics_fixture_set_chain_shape ' +
            'physics_fixture_add_point physics_fixture_bind ' +
            'physics_fixture_bind_ext physics_fixture_delete physics_apply_force ' +
            'physics_apply_impulse physics_apply_angular_impulse ' +
            'physics_apply_local_force physics_apply_local_impulse ' +
            'physics_apply_torque physics_mass_properties physics_draw_debug ' +
            'physics_test_overlap physics_remove_fixture physics_set_friction ' +
            'physics_set_density physics_set_restitution physics_get_friction ' +
            'physics_get_density physics_get_restitution ' +
            'physics_joint_distance_create physics_joint_rope_create ' +
            'physics_joint_revolute_create physics_joint_prismatic_create ' +
            'physics_joint_pulley_create physics_joint_wheel_create ' +
            'physics_joint_weld_create physics_joint_friction_create ' +
            'physics_joint_gear_create physics_joint_enable_motor ' +
            'physics_joint_get_value physics_joint_set_value physics_joint_delete ' +
            'physics_particle_create physics_particle_delete ' +
            'physics_particle_delete_region_circle ' +
            'physics_particle_delete_region_box ' +
            'physics_particle_delete_region_poly physics_particle_set_flags ' +
            'physics_particle_set_category_flags physics_particle_draw ' +
            'physics_particle_draw_ext physics_particle_count ' +
            'physics_particle_get_data physics_particle_get_data_particle ' +
            'physics_particle_group_begin physics_particle_group_circle ' +
            'physics_particle_group_box physics_particle_group_polygon ' +
            'physics_particle_group_add_point physics_particle_group_end ' +
            'physics_particle_group_join physics_particle_group_delete ' +
            'physics_particle_group_count physics_particle_group_get_data ' +
            'physics_particle_group_get_mass physics_particle_group_get_inertia ' +
            'physics_particle_group_get_centre_x ' +
            'physics_particle_group_get_centre_y physics_particle_group_get_vel_x ' +
            'physics_particle_group_get_vel_y physics_particle_group_get_ang_vel ' +
            'physics_particle_group_get_x physics_particle_group_get_y ' +
            'physics_particle_group_get_angle physics_particle_set_group_flags ' +
            'physics_particle_get_group_flags physics_particle_get_max_count ' +
            'physics_particle_get_radius physics_particle_get_density ' +
            'physics_particle_get_damping physics_particle_get_gravity_scale ' +
            'physics_particle_set_max_count physics_particle_set_radius ' +
            'physics_particle_set_density physics_particle_set_damping ' +
            'physics_particle_set_gravity_scale network_create_socket ' +
            'network_create_socket_ext network_create_server ' +
            'network_create_server_raw network_connect network_connect_raw ' +
            'network_send_packet network_send_raw network_send_broadcast ' +
            'network_send_udp network_send_udp_raw network_set_timeout ' +
            'network_set_config network_resolve network_destroy buffer_create ' +
            'buffer_write buffer_read buffer_seek buffer_get_surface ' +
            'buffer_set_surface buffer_delete buffer_exists buffer_get_type ' +
            'buffer_get_alignment buffer_poke buffer_peek buffer_save ' +
            'buffer_save_ext buffer_load buffer_load_ext buffer_load_partial ' +
            'buffer_copy buffer_fill buffer_get_size buffer_tell buffer_resize ' +
            'buffer_md5 buffer_sha1 buffer_base64_encode buffer_base64_decode ' +
            'buffer_base64_decode_ext buffer_sizeof buffer_get_address ' +
            'buffer_create_from_vertex_buffer ' +
            'buffer_create_from_vertex_buffer_ext buffer_copy_from_vertex_buffer ' +
            'buffer_async_group_begin buffer_async_group_option ' +
            'buffer_async_group_end buffer_load_async buffer_save_async ' +
            'gml_release_mode gml_pragma steam_activate_overlay ' +
            'steam_is_overlay_enabled steam_is_overlay_activated ' +
            'steam_get_persona_name steam_initialised ' +
            'steam_is_cloud_enabled_for_app steam_is_cloud_enabled_for_account ' +
            'steam_file_persisted steam_get_quota_total steam_get_quota_free ' +
            'steam_file_write steam_file_write_file steam_file_read ' +
            'steam_file_delete steam_file_exists steam_file_size steam_file_share ' +
            'steam_is_screenshot_requested steam_send_screenshot ' +
            'steam_is_user_logged_on steam_get_user_steam_id steam_user_owns_dlc ' +
            'steam_user_installed_dlc steam_set_achievement steam_get_achievement ' +
            'steam_clear_achievement steam_set_stat_int steam_set_stat_float ' +
            'steam_set_stat_avg_rate steam_get_stat_int steam_get_stat_float ' +
            'steam_get_stat_avg_rate steam_reset_all_stats ' +
            'steam_reset_all_stats_achievements steam_stats_ready ' +
            'steam_create_leaderboard steam_upload_score steam_upload_score_ext ' +
            'steam_download_scores_around_user steam_download_scores ' +
            'steam_download_friends_scores steam_upload_score_buffer ' +
            'steam_upload_score_buffer_ext steam_current_game_language ' +
            'steam_available_languages steam_activate_overlay_browser ' +
            'steam_activate_overlay_user steam_activate_overlay_store ' +
            'steam_get_user_persona_name steam_get_app_id ' +
            'steam_get_user_account_id steam_ugc_download steam_ugc_create_item ' +
            'steam_ugc_start_item_update steam_ugc_set_item_title ' +
            'steam_ugc_set_item_description steam_ugc_set_item_visibility ' +
            'steam_ugc_set_item_tags steam_ugc_set_item_content ' +
            'steam_ugc_set_item_preview steam_ugc_submit_item_update ' +
            'steam_ugc_get_item_update_progress steam_ugc_subscribe_item ' +
            'steam_ugc_unsubscribe_item steam_ugc_num_subscribed_items ' +
            'steam_ugc_get_subscribed_items steam_ugc_get_item_install_info ' +
            'steam_ugc_get_item_update_info steam_ugc_request_item_details ' +
            'steam_ugc_create_query_user steam_ugc_create_query_user_ex ' +
            'steam_ugc_create_query_all steam_ugc_create_query_all_ex ' +
            'steam_ugc_query_set_cloud_filename_filter ' +
            'steam_ugc_query_set_match_any_tag steam_ugc_query_set_search_text ' +
            'steam_ugc_query_set_ranked_by_trend_days ' +
            'steam_ugc_query_add_required_tag steam_ugc_query_add_excluded_tag ' +
            'steam_ugc_query_set_return_long_description ' +
            'steam_ugc_query_set_return_total_only ' +
            'steam_ugc_query_set_allow_cached_response steam_ugc_send_query ' +
            'shader_set shader_get_name shader_reset shader_current ' +
            'shader_is_compiled shader_get_sampler_index shader_get_uniform ' +
            'shader_set_uniform_i shader_set_uniform_i_array shader_set_uniform_f ' +
            'shader_set_uniform_f_array shader_set_uniform_matrix ' +
            'shader_set_uniform_matrix_array shader_enable_corner_id ' +
            'texture_set_stage texture_get_texel_width texture_get_texel_height ' +
            'shaders_are_supported vertex_format_begin vertex_format_end ' +
            'vertex_format_delete vertex_format_add_position ' +
            'vertex_format_add_position_3d vertex_format_add_colour ' +
            'vertex_format_add_color vertex_format_add_normal ' +
            'vertex_format_add_texcoord vertex_format_add_textcoord ' +
            'vertex_format_add_custom vertex_create_buffer ' +
            'vertex_create_buffer_ext vertex_delete_buffer vertex_begin ' +
            'vertex_end vertex_position vertex_position_3d vertex_colour ' +
            'vertex_color vertex_argb vertex_texcoord vertex_normal vertex_float1 ' +
            'vertex_float2 vertex_float3 vertex_float4 vertex_ubyte4 ' +
            'vertex_submit vertex_freeze vertex_get_number vertex_get_buffer_size ' +
            'vertex_create_buffer_from_buffer ' +
            'vertex_create_buffer_from_buffer_ext push_local_notification ' +
            'push_get_first_local_notification push_get_next_local_notification ' +
            'push_cancel_local_notification skeleton_animation_set ' +
            'skeleton_animation_get skeleton_animation_mix ' +
            'skeleton_animation_set_ext skeleton_animation_get_ext ' +
            'skeleton_animation_get_duration skeleton_animation_get_frames ' +
            'skeleton_animation_clear skeleton_skin_set skeleton_skin_get ' +
            'skeleton_attachment_set skeleton_attachment_get ' +
            'skeleton_attachment_create skeleton_collision_draw_set ' +
            'skeleton_bone_data_get skeleton_bone_data_set ' +
            'skeleton_bone_state_get skeleton_bone_state_set skeleton_get_minmax ' +
            'skeleton_get_num_bounds skeleton_get_bounds ' +
            'skeleton_animation_get_frame skeleton_animation_set_frame ' +
            'draw_skeleton draw_skeleton_time draw_skeleton_instance ' +
            'draw_skeleton_collision skeleton_animation_list skeleton_skin_list ' +
            'skeleton_slot_data layer_get_id layer_get_id_at_depth ' +
            'layer_get_depth layer_create layer_destroy layer_destroy_instances ' +
            'layer_add_instance layer_has_instance layer_set_visible ' +
            'layer_get_visible layer_exists layer_x layer_y layer_get_x ' +
            'layer_get_y layer_hspeed layer_vspeed layer_get_hspeed ' +
            'layer_get_vspeed layer_script_begin layer_script_end layer_shader ' +
            'layer_get_script_begin layer_get_script_end layer_get_shader ' +
            'layer_set_target_room layer_get_target_room layer_reset_target_room ' +
            'layer_get_all layer_get_all_elements layer_get_name layer_depth ' +
            'layer_get_element_layer layer_get_element_type layer_element_move ' +
            'layer_force_draw_depth layer_is_draw_depth_forced ' +
            'layer_get_forced_depth layer_background_get_id ' +
            'layer_background_exists layer_background_create ' +
            'layer_background_destroy layer_background_visible ' +
            'layer_background_change layer_background_sprite ' +
            'layer_background_htiled layer_background_vtiled ' +
            'layer_background_stretch layer_background_yscale ' +
            'layer_background_xscale layer_background_blend ' +
            'layer_background_alpha layer_background_index layer_background_speed ' +
            'layer_background_get_visible layer_background_get_sprite ' +
            'layer_background_get_htiled layer_background_get_vtiled ' +
            'layer_background_get_stretch layer_background_get_yscale ' +
            'layer_background_get_xscale layer_background_get_blend ' +
            'layer_background_get_alpha layer_background_get_index ' +
            'layer_background_get_speed layer_sprite_get_id layer_sprite_exists ' +
            'layer_sprite_create layer_sprite_destroy layer_sprite_change ' +
            'layer_sprite_index layer_sprite_speed layer_sprite_xscale ' +
            'layer_sprite_yscale layer_sprite_angle layer_sprite_blend ' +
            'layer_sprite_alpha layer_sprite_x layer_sprite_y ' +
            'layer_sprite_get_sprite layer_sprite_get_index ' +
            'layer_sprite_get_speed layer_sprite_get_xscale ' +
            'layer_sprite_get_yscale layer_sprite_get_angle ' +
            'layer_sprite_get_blend layer_sprite_get_alpha layer_sprite_get_x ' +
            'layer_sprite_get_y layer_tilemap_get_id layer_tilemap_exists ' +
            'layer_tilemap_create layer_tilemap_destroy tilemap_tileset tilemap_x ' +
            'tilemap_y tilemap_set tilemap_set_at_pixel tilemap_get_tileset ' +
            'tilemap_get_tile_width tilemap_get_tile_height tilemap_get_width ' +
            'tilemap_get_height tilemap_get_x tilemap_get_y tilemap_get ' +
            'tilemap_get_at_pixel tilemap_get_cell_x_at_pixel ' +
            'tilemap_get_cell_y_at_pixel tilemap_clear draw_tilemap draw_tile ' +
            'tilemap_set_global_mask tilemap_get_global_mask tilemap_set_mask ' +
            'tilemap_get_mask tilemap_get_frame tile_set_empty tile_set_index ' +
            'tile_set_flip tile_set_mirror tile_set_rotate tile_get_empty ' +
            'tile_get_index tile_get_flip tile_get_mirror tile_get_rotate ' +
            'layer_tile_exists layer_tile_create layer_tile_destroy ' +
            'layer_tile_change layer_tile_xscale layer_tile_yscale ' +
            'layer_tile_blend layer_tile_alpha layer_tile_x layer_tile_y ' +
            'layer_tile_region layer_tile_visible layer_tile_get_sprite ' +
            'layer_tile_get_xscale layer_tile_get_yscale layer_tile_get_blend ' +
            'layer_tile_get_alpha layer_tile_get_x layer_tile_get_y ' +
            'layer_tile_get_region layer_tile_get_visible ' +
            'layer_instance_get_instance instance_activate_layer ' +
            'instance_deactivate_layer camera_create camera_create_view ' +
            'camera_destroy camera_apply camera_get_active camera_get_default ' +
            'camera_set_default camera_set_view_mat camera_set_proj_mat ' +
            'camera_set_update_script camera_set_begin_script ' +
            'camera_set_end_script camera_set_view_pos camera_set_view_size ' +
            'camera_set_view_speed camera_set_view_border camera_set_view_angle ' +
            'camera_set_view_target camera_get_view_mat camera_get_proj_mat ' +
            'camera_get_update_script camera_get_begin_script ' +
            'camera_get_end_script camera_get_view_x camera_get_view_y ' +
            'camera_get_view_width camera_get_view_height camera_get_view_speed_x ' +
            'camera_get_view_speed_y camera_get_view_border_x ' +
            'camera_get_view_border_y camera_get_view_angle ' +
            'camera_get_view_target view_get_camera view_get_visible ' +
            'view_get_xport view_get_yport view_get_wport view_get_hport ' +
            'view_get_surface_id view_set_camera view_set_visible view_set_xport ' +
            'view_set_yport view_set_wport view_set_hport view_set_surface_id ' +
            'gesture_drag_time gesture_drag_distance gesture_flick_speed ' +
            'gesture_double_tap_time gesture_double_tap_distance ' +
            'gesture_pinch_distance gesture_pinch_angle_towards ' +
            'gesture_pinch_angle_away gesture_rotate_time gesture_rotate_angle ' +
            'gesture_tap_count gesture_get_drag_time gesture_get_drag_distance ' +
            'gesture_get_flick_speed gesture_get_double_tap_time ' +
            'gesture_get_double_tap_distance gesture_get_pinch_distance ' +
            'gesture_get_pinch_angle_towards gesture_get_pinch_angle_away ' +
            'gesture_get_rotate_time gesture_get_rotate_angle ' +
            'gesture_get_tap_count keyboard_virtual_show keyboard_virtual_hide ' +
            'keyboard_virtual_status keyboard_virtual_height',
          literal:
            'self other all noone global local undefined pointer_invalid ' +
            'pointer_null path_action_stop path_action_restart ' +
            'path_action_continue path_action_reverse true false pi GM_build_date ' +
            'GM_version GM_runtime_version  timezone_local timezone_utc ' +
            'gamespeed_fps gamespeed_microseconds  ev_create ev_destroy ev_step ' +
            'ev_alarm ev_keyboard ev_mouse ev_collision ev_other ev_draw ' +
            'ev_draw_begin ev_draw_end ev_draw_pre ev_draw_post ev_keypress ' +
            'ev_keyrelease ev_trigger ev_left_button ev_right_button ' +
            'ev_middle_button ev_no_button ev_left_press ev_right_press ' +
            'ev_middle_press ev_left_release ev_right_release ev_middle_release ' +
            'ev_mouse_enter ev_mouse_leave ev_mouse_wheel_up ev_mouse_wheel_down ' +
            'ev_global_left_button ev_global_right_button ev_global_middle_button ' +
            'ev_global_left_press ev_global_right_press ev_global_middle_press ' +
            'ev_global_left_release ev_global_right_release ' +
            'ev_global_middle_release ev_joystick1_left ev_joystick1_right ' +
            'ev_joystick1_up ev_joystick1_down ev_joystick1_button1 ' +
            'ev_joystick1_button2 ev_joystick1_button3 ev_joystick1_button4 ' +
            'ev_joystick1_button5 ev_joystick1_button6 ev_joystick1_button7 ' +
            'ev_joystick1_button8 ev_joystick2_left ev_joystick2_right ' +
            'ev_joystick2_up ev_joystick2_down ev_joystick2_button1 ' +
            'ev_joystick2_button2 ev_joystick2_button3 ev_joystick2_button4 ' +
            'ev_joystick2_button5 ev_joystick2_button6 ev_joystick2_button7 ' +
            'ev_joystick2_button8 ev_outside ev_boundary ev_game_start ' +
            'ev_game_end ev_room_start ev_room_end ev_no_more_lives ' +
            'ev_animation_end ev_end_of_path ev_no_more_health ev_close_button ' +
            'ev_user0 ev_user1 ev_user2 ev_user3 ev_user4 ev_user5 ev_user6 ' +
            'ev_user7 ev_user8 ev_user9 ev_user10 ev_user11 ev_user12 ev_user13 ' +
            'ev_user14 ev_user15 ev_step_normal ev_step_begin ev_step_end ev_gui ' +
            'ev_gui_begin ev_gui_end ev_cleanup ev_gesture ev_gesture_tap ' +
            'ev_gesture_double_tap ev_gesture_drag_start ev_gesture_dragging ' +
            'ev_gesture_drag_end ev_gesture_flick ev_gesture_pinch_start ' +
            'ev_gesture_pinch_in ev_gesture_pinch_out ev_gesture_pinch_end ' +
            'ev_gesture_rotate_start ev_gesture_rotating ev_gesture_rotate_end ' +
            'ev_global_gesture_tap ev_global_gesture_double_tap ' +
            'ev_global_gesture_drag_start ev_global_gesture_dragging ' +
            'ev_global_gesture_drag_end ev_global_gesture_flick ' +
            'ev_global_gesture_pinch_start ev_global_gesture_pinch_in ' +
            'ev_global_gesture_pinch_out ev_global_gesture_pinch_end ' +
            'ev_global_gesture_rotate_start ev_global_gesture_rotating ' +
            'ev_global_gesture_rotate_end vk_nokey vk_anykey vk_enter vk_return ' +
            'vk_shift vk_control vk_alt vk_escape vk_space vk_backspace vk_tab ' +
            'vk_pause vk_printscreen vk_left vk_right vk_up vk_down vk_home ' +
            'vk_end vk_delete vk_insert vk_pageup vk_pagedown vk_f1 vk_f2 vk_f3 ' +
            'vk_f4 vk_f5 vk_f6 vk_f7 vk_f8 vk_f9 vk_f10 vk_f11 vk_f12 vk_numpad0 ' +
            'vk_numpad1 vk_numpad2 vk_numpad3 vk_numpad4 vk_numpad5 vk_numpad6 ' +
            'vk_numpad7 vk_numpad8 vk_numpad9 vk_divide vk_multiply vk_subtract ' +
            'vk_add vk_decimal vk_lshift vk_lcontrol vk_lalt vk_rshift ' +
            'vk_rcontrol vk_ralt  mb_any mb_none mb_left mb_right mb_middle ' +
            'c_aqua c_black c_blue c_dkgray c_fuchsia c_gray c_green c_lime ' +
            'c_ltgray c_maroon c_navy c_olive c_purple c_red c_silver c_teal ' +
            'c_white c_yellow c_orange fa_left fa_center fa_right fa_top ' +
            'fa_middle fa_bottom pr_pointlist pr_linelist pr_linestrip ' +
            'pr_trianglelist pr_trianglestrip pr_trianglefan bm_complex bm_normal ' +
            'bm_add bm_max bm_subtract bm_zero bm_one bm_src_colour ' +
            'bm_inv_src_colour bm_src_color bm_inv_src_color bm_src_alpha ' +
            'bm_inv_src_alpha bm_dest_alpha bm_inv_dest_alpha bm_dest_colour ' +
            'bm_inv_dest_colour bm_dest_color bm_inv_dest_color bm_src_alpha_sat ' +
            'tf_point tf_linear tf_anisotropic mip_off mip_on mip_markedonly ' +
            'audio_falloff_none audio_falloff_inverse_distance ' +
            'audio_falloff_inverse_distance_clamped audio_falloff_linear_distance ' +
            'audio_falloff_linear_distance_clamped ' +
            'audio_falloff_exponent_distance ' +
            'audio_falloff_exponent_distance_clamped audio_old_system ' +
            'audio_new_system audio_mono audio_stereo audio_3d cr_default cr_none ' +
            'cr_arrow cr_cross cr_beam cr_size_nesw cr_size_ns cr_size_nwse ' +
            'cr_size_we cr_uparrow cr_hourglass cr_drag cr_appstart cr_handpoint ' +
            'cr_size_all spritespeed_framespersecond ' +
            'spritespeed_framespergameframe asset_object asset_unknown ' +
            'asset_sprite asset_sound asset_room asset_path asset_script ' +
            'asset_font asset_timeline asset_tiles asset_shader fa_readonly ' +
            'fa_hidden fa_sysfile fa_volumeid fa_directory fa_archive  ' +
            'ds_type_map ds_type_list ds_type_stack ds_type_queue ds_type_grid ' +
            'ds_type_priority ef_explosion ef_ring ef_ellipse ef_firework ' +
            'ef_smoke ef_smokeup ef_star ef_spark ef_flare ef_cloud ef_rain ' +
            'ef_snow pt_shape_pixel pt_shape_disk pt_shape_square pt_shape_line ' +
            'pt_shape_star pt_shape_circle pt_shape_ring pt_shape_sphere ' +
            'pt_shape_flare pt_shape_spark pt_shape_explosion pt_shape_cloud ' +
            'pt_shape_smoke pt_shape_snow ps_distr_linear ps_distr_gaussian ' +
            'ps_distr_invgaussian ps_shape_rectangle ps_shape_ellipse ' +
            'ps_shape_diamond ps_shape_line ty_real ty_string dll_cdecl ' +
            'dll_stdcall matrix_view matrix_projection matrix_world os_win32 ' +
            'os_windows os_macosx os_ios os_android os_symbian os_linux ' +
            'os_unknown os_winphone os_tizen os_win8native ' +
            'os_wiiu os_3ds  os_psvita os_bb10 os_ps4 os_xboxone ' +
            'os_ps3 os_xbox360 os_uwp os_tvos os_switch ' +
            'browser_not_a_browser browser_unknown browser_ie browser_firefox ' +
            'browser_chrome browser_safari browser_safari_mobile browser_opera ' +
            'browser_tizen browser_edge browser_windows_store browser_ie_mobile  ' +
            'device_ios_unknown device_ios_iphone device_ios_iphone_retina ' +
            'device_ios_ipad device_ios_ipad_retina device_ios_iphone5 ' +
            'device_ios_iphone6 device_ios_iphone6plus device_emulator ' +
            'device_tablet display_landscape display_landscape_flipped ' +
            'display_portrait display_portrait_flipped tm_sleep tm_countvsyncs ' +
            'of_challenge_win of_challen ge_lose of_challenge_tie ' +
            'leaderboard_type_number leaderboard_type_time_mins_secs ' +
            'cmpfunc_never cmpfunc_less cmpfunc_equal cmpfunc_lessequal ' +
            'cmpfunc_greater cmpfunc_notequal cmpfunc_greaterequal cmpfunc_always ' +
            'cull_noculling cull_clockwise cull_counterclockwise lighttype_dir ' +
            'lighttype_point iap_ev_storeload iap_ev_product iap_ev_purchase ' +
            'iap_ev_consume iap_ev_restore iap_storeload_ok iap_storeload_failed ' +
            'iap_status_uninitialised iap_status_unavailable iap_status_loading ' +
            'iap_status_available iap_status_processing iap_status_restoring ' +
            'iap_failed iap_unavailable iap_available iap_purchased iap_canceled ' +
            'iap_refunded fb_login_default fb_login_fallback_to_webview ' +
            'fb_login_no_fallback_to_webview fb_login_forcing_webview ' +
            'fb_login_use_system_account fb_login_forcing_safari  ' +
            'phy_joint_anchor_1_x phy_joint_anchor_1_y phy_joint_anchor_2_x ' +
            'phy_joint_anchor_2_y phy_joint_reaction_force_x ' +
            'phy_joint_reaction_force_y phy_joint_reaction_torque ' +
            'phy_joint_motor_speed phy_joint_angle phy_joint_motor_torque ' +
            'phy_joint_max_motor_torque phy_joint_translation phy_joint_speed ' +
            'phy_joint_motor_force phy_joint_max_motor_force phy_joint_length_1 ' +
            'phy_joint_length_2 phy_joint_damping_ratio phy_joint_frequency ' +
            'phy_joint_lower_angle_limit phy_joint_upper_angle_limit ' +
            'phy_joint_angle_limits phy_joint_max_length phy_joint_max_torque ' +
            'phy_joint_max_force phy_debug_render_aabb ' +
            'phy_debug_render_collision_pairs phy_debug_render_coms ' +
            'phy_debug_render_core_shapes phy_debug_render_joints ' +
            'phy_debug_render_obb phy_debug_render_shapes  ' +
            'phy_particle_flag_water phy_particle_flag_zombie ' +
            'phy_particle_flag_wall phy_particle_flag_spring ' +
            'phy_particle_flag_elastic phy_particle_flag_viscous ' +
            'phy_particle_flag_powder phy_particle_flag_tensile ' +
            'phy_particle_flag_colourmixing phy_particle_flag_colormixing ' +
            'phy_particle_group_flag_solid phy_particle_group_flag_rigid ' +
            'phy_particle_data_flag_typeflags phy_particle_data_flag_position ' +
            'phy_particle_data_flag_velocity phy_particle_data_flag_colour ' +
            'phy_particle_data_flag_color phy_particle_data_flag_category  ' +
            'achievement_our_info achievement_friends_info ' +
            'achievement_leaderboard_info achievement_achievement_info ' +
            'achievement_filter_all_players achievement_filter_friends_only ' +
            'achievement_filter_favorites_only ' +
            'achievement_type_achievement_challenge ' +
            'achievement_type_score_challenge achievement_pic_loaded  ' +
            'achievement_show_ui achievement_show_profile ' +
            'achievement_show_leaderboard achievement_show_achievement ' +
            'achievement_show_bank achievement_show_friend_picker ' +
            'achievement_show_purchase_prompt network_socket_tcp ' +
            'network_socket_udp network_socket_bluetooth network_type_connect ' +
            'network_type_disconnect network_type_data ' +
            'network_type_non_blocking_connect network_config_connect_timeout ' +
            'network_config_use_non_blocking_socket ' +
            'network_config_enable_reliable_udp ' +
            'network_config_disable_reliable_udp buffer_fixed buffer_grow ' +
            'buffer_wrap buffer_fast buffer_vbuffer buffer_network buffer_u8 ' +
            'buffer_s8 buffer_u16 buffer_s16 buffer_u32 buffer_s32 buffer_u64 ' +
            'buffer_f16 buffer_f32 buffer_f64 buffer_bool buffer_text ' +
            'buffer_string buffer_surface_copy buffer_seek_start ' +
            'buffer_seek_relative buffer_seek_end ' +
            'buffer_generalerror buffer_outofspace buffer_outofbounds ' +
            'buffer_invalidtype  text_type button_type input_type ANSI_CHARSET ' +
            'DEFAULT_CHARSET EASTEUROPE_CHARSET RUSSIAN_CHARSET SYMBOL_CHARSET ' +
            'SHIFTJIS_CHARSET HANGEUL_CHARSET GB2312_CHARSET CHINESEBIG5_CHARSET ' +
            'JOHAB_CHARSET HEBREW_CHARSET ARABIC_CHARSET GREEK_CHARSET ' +
            'TURKISH_CHARSET VIETNAMESE_CHARSET THAI_CHARSET MAC_CHARSET ' +
            'BALTIC_CHARSET OEM_CHARSET  gp_face1 gp_face2 gp_face3 gp_face4 ' +
            'gp_shoulderl gp_shoulderr gp_shoulderlb gp_shoulderrb gp_select ' +
            'gp_start gp_stickl gp_stickr gp_padu gp_padd gp_padl gp_padr ' +
            'gp_axislh gp_axislv gp_axisrh gp_axisrv ov_friends ov_community ' +
            'ov_players ov_settings ov_gamegroup ov_achievements lb_sort_none ' +
            'lb_sort_ascending lb_sort_descending lb_disp_none lb_disp_numeric ' +
            'lb_disp_time_sec lb_disp_time_ms ugc_result_success ' +
            'ugc_filetype_community ugc_filetype_microtrans ugc_visibility_public ' +
            'ugc_visibility_friends_only ugc_visibility_private ' +
            'ugc_query_RankedByVote ugc_query_RankedByPublicationDate ' +
            'ugc_query_AcceptedForGameRankedByAcceptanceDate ' +
            'ugc_query_RankedByTrend ' +
            'ugc_query_FavoritedByFriendsRankedByPublicationDate ' +
            'ugc_query_CreatedByFriendsRankedByPublicationDate ' +
            'ugc_query_RankedByNumTimesReported ' +
            'ugc_query_CreatedByFollowedUsersRankedByPublicationDate ' +
            'ugc_query_NotYetRated ugc_query_RankedByTotalVotesAsc ' +
            'ugc_query_RankedByVotesUp ugc_query_RankedByTextSearch ' +
            'ugc_sortorder_CreationOrderDesc ugc_sortorder_CreationOrderAsc ' +
            'ugc_sortorder_TitleAsc ugc_sortorder_LastUpdatedDesc ' +
            'ugc_sortorder_SubscriptionDateDesc ugc_sortorder_VoteScoreDesc ' +
            'ugc_sortorder_ForModeration ugc_list_Published ugc_list_VotedOn ' +
            'ugc_list_VotedUp ugc_list_VotedDown ugc_list_WillVoteLater ' +
            'ugc_list_Favorited ugc_list_Subscribed ugc_list_UsedOrPlayed ' +
            'ugc_list_Followed ugc_match_Items ugc_match_Items_Mtx ' +
            'ugc_match_Items_ReadyToUse ugc_match_Collections ugc_match_Artwork ' +
            'ugc_match_Videos ugc_match_Screenshots ugc_match_AllGuides ' +
            'ugc_match_WebGuides ugc_match_IntegratedGuides ' +
            'ugc_match_UsableInGame ugc_match_ControllerBindings  ' +
            'vertex_usage_position vertex_usage_colour vertex_usage_color ' +
            'vertex_usage_normal vertex_usage_texcoord vertex_usage_textcoord ' +
            'vertex_usage_blendweight vertex_usage_blendindices ' +
            'vertex_usage_psize vertex_usage_tangent vertex_usage_binormal ' +
            'vertex_usage_fog vertex_usage_depth vertex_usage_sample ' +
            'vertex_type_float1 vertex_type_float2 vertex_type_float3 ' +
            'vertex_type_float4 vertex_type_colour vertex_type_color ' +
            'vertex_type_ubyte4 layerelementtype_undefined ' +
            'layerelementtype_background layerelementtype_instance ' +
            'layerelementtype_oldtilemap layerelementtype_sprite ' +
            'layerelementtype_tilemap layerelementtype_particlesystem ' +
            'layerelementtype_tile tile_rotate tile_flip tile_mirror ' +
            'tile_index_mask kbv_type_default kbv_type_ascii kbv_type_url ' +
            'kbv_type_email kbv_type_numbers kbv_type_phone kbv_type_phone_name ' +
            'kbv_returnkey_default kbv_returnkey_go kbv_returnkey_google ' +
            'kbv_returnkey_join kbv_returnkey_next kbv_returnkey_route ' +
            'kbv_returnkey_search kbv_returnkey_send kbv_returnkey_yahoo ' +
            'kbv_returnkey_done kbv_returnkey_continue kbv_returnkey_emergency ' +
            'kbv_autocapitalize_none kbv_autocapitalize_words ' +
            'kbv_autocapitalize_sentences kbv_autocapitalize_characters',
          symbol:
            'argument_relative argument argument0 argument1 argument2 ' +
            'argument3 argument4 argument5 argument6 argument7 argument8 ' +
            'argument9 argument10 argument11 argument12 argument13 argument14 ' +
            'argument15 argument_count x y xprevious yprevious xstart ystart ' +
            'hspeed vspeed direction speed friction gravity gravity_direction ' +
            'path_index path_position path_positionprevious path_speed ' +
            'path_scale path_orientation path_endaction object_index id solid ' +
            'persistent mask_index instance_count instance_id room_speed fps ' +
            'fps_real current_time current_year current_month current_day ' +
            'current_weekday current_hour current_minute current_second alarm ' +
            'timeline_index timeline_position timeline_speed timeline_running ' +
            'timeline_loop room room_first room_last room_width room_height ' +
            'room_caption room_persistent score lives health show_score ' +
            'show_lives show_health caption_score caption_lives caption_health ' +
            'event_type event_number event_object event_action ' +
            'application_surface gamemaker_pro gamemaker_registered ' +
            'gamemaker_version error_occurred error_last debug_mode ' +
            'keyboard_key keyboard_lastkey keyboard_lastchar keyboard_string ' +
            'mouse_x mouse_y mouse_button mouse_lastbutton cursor_sprite ' +
            'visible sprite_index sprite_width sprite_height sprite_xoffset ' +
            'sprite_yoffset image_number image_index image_speed depth ' +
            'image_xscale image_yscale image_angle image_alpha image_blend ' +
            'bbox_left bbox_right bbox_top bbox_bottom layer background_colour  ' +
            'background_showcolour background_color background_showcolor ' +
            'view_enabled view_current view_visible view_xview view_yview ' +
            'view_wview view_hview view_xport view_yport view_wport view_hport ' +
            'view_angle view_hborder view_vborder view_hspeed view_vspeed ' +
            'view_object view_surface_id view_camera game_id game_display_name ' +
            'game_project_name game_save_id working_directory temp_directory ' +
            'program_directory browser_width browser_height os_type os_device ' +
            'os_browser os_version display_aa async_load delta_time ' +
            'webgl_enabled event_data iap_data phy_rotation phy_position_x ' +
            'phy_position_y phy_angular_velocity phy_linear_velocity_x ' +
            'phy_linear_velocity_y phy_speed_x phy_speed_y phy_speed ' +
            'phy_angular_damping phy_linear_damping phy_bullet ' +
            'phy_fixed_rotation phy_active phy_mass phy_inertia phy_com_x ' +
            'phy_com_y phy_dynamic phy_kinematic phy_sleeping ' +
            'phy_collision_points phy_collision_x phy_collision_y ' +
            'phy_col_normal_x phy_col_normal_y phy_position_xprevious ' +
            'phy_position_yprevious'
        };

        return {
          aliases: ['gml', 'GML'],
          case_insensitive: false, // language is case-insensitive
          keywords: GML_KEYWORDS,

          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 416 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var GO_KEYWORDS = {
          keyword:
            'break default func interface select case map struct chan else goto package switch ' +
            'const fallthrough if range type continue for import return var go defer ' +
            'bool byte complex64 complex128 float32 float64 int8 int16 int32 int64 string uint8 ' +
            'uint16 uint32 uint64 int uint uintptr rune',
          literal: 'true false iota nil',
          built_in:
            'append cap close complex copy imag len make new panic print println real recover delete'
        };
        return {
          aliases: ['golang'],
          keywords: GO_KEYWORDS,
          illegal: '</',
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: 'string',
              variants: [
                hljs.QUOTE_STRING_MODE,
                { begin: "'", end: "[^\\\\]'" },
                { begin: '`', end: '`' }
              ]
            },
            {
              className: 'number',
              variants: [
                { begin: hljs.C_NUMBER_RE + '[dflsi]', relevance: 1 },
                hljs.C_NUMBER_MODE
              ]
            },
            {
              begin: /:=/ // relevance booster
            },
            {
              className: 'function',
              beginKeywords: 'func',
              end: /\s*\{/,
              excludeEnd: true,
              contains: [
                hljs.TITLE_MODE,
                {
                  className: 'params',
                  begin: /\(/,
                  end: /\)/,
                  keywords: GO_KEYWORDS,
                  illegal: /["']/
                }
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 417 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            keyword:
              'println readln print import module function local return let var ' +
              'while for foreach times in case when match with break continue ' +
              'augment augmentation each find filter reduce ' +
              'if then else otherwise try catch finally raise throw orIfNull ' +
              'DynamicObject|10 DynamicVariable struct Observable map set vector list array',
            literal: 'true false null'
          },
          contains: [
            hljs.HASH_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE,
            {
              className: 'meta',
              begin: '@[A-Za-z]+'
            }
          ]
        };
      };

      /***/
    },
    /* 418 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          case_insensitive: true,
          keywords: {
            keyword:
              'task project allprojects subprojects artifacts buildscript configurations ' +
              'dependencies repositories sourceSets description delete from into include ' +
              'exclude source classpath destinationDir includes options sourceCompatibility ' +
              'targetCompatibility group flatDir doLast doFirst flatten todir fromdir ant ' +
              'def abstract break case catch continue default do else extends final finally ' +
              'for if implements instanceof native new private protected public return static ' +
              'switch synchronized throw throws transient try volatile while strictfp package ' +
              'import false null super this true antlrtask checkstyle codenarc copy boolean ' +
              'byte char class double float int interface long short void compile runTime ' +
              'file fileTree abs any append asList asWritable call collect compareTo count ' +
              'div dump each eachByte eachFile eachLine every find findAll flatten getAt ' +
              'getErr getIn getOut getText grep immutable inject inspect intersect invokeMethods ' +
              'isCase join leftShift minus multiply newInputStream newOutputStream newPrintWriter ' +
              'newReader newWriter next plus pop power previous print println push putAt read ' +
              'readBytes readLines reverse reverseEach round size sort splitEachLine step subMap ' +
              'times toInteger toList tokenize upto waitForOrKill withPrintWriter withReader ' +
              'withStream withWriter withWriterAppend write writeLine'
          },
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.NUMBER_MODE,
            hljs.REGEXP_MODE
          ]
        };
      };

      /***/
    },
    /* 419 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            literal: 'true false null',
            keyword:
              'byte short char int long boolean float double void ' +
              // groovy specific keywords
              'def as in assert trait ' +
              // common keywords with Java
              'super this abstract static volatile transient public private protected synchronized final ' +
              'class interface enum if else for while switch case break default continue ' +
              'throw throws try catch finally implements extends new import package return instanceof'
          },

          contains: [
            hljs.COMMENT('/\\*\\*', '\\*/', {
              relevance: 0,
              contains: [
                {
                  // eat up @'s in emails to prevent them to be recognized as doctags
                  begin: /\w+@/,
                  relevance: 0
                },
                {
                  className: 'doctag',
                  begin: '@[A-Za-z]+'
                }
              ]
            }),
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: 'string',
              begin: '"""',
              end: '"""'
            },
            {
              className: 'string',
              begin: "'''",
              end: "'''"
            },
            {
              className: 'string',
              begin: '\\$/',
              end: '/\\$',
              relevance: 10
            },
            hljs.APOS_STRING_MODE,
            {
              className: 'regexp',
              begin: /~?\/[^\/\n]+\//,
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            hljs.QUOTE_STRING_MODE,
            {
              className: 'meta',
              begin: '^#!/usr/bin/env',
              end: '$',
              illegal: '\n'
            },
            hljs.BINARY_NUMBER_MODE,
            {
              className: 'class',
              beginKeywords: 'class interface trait enum',
              end: '{',
              illegal: ':',
              contains: [
                { beginKeywords: 'extends implements' },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            },
            hljs.C_NUMBER_MODE,
            {
              className: 'meta',
              begin: '@[A-Za-z]+'
            },
            {
              // highlight map keys and named parameters as strings
              className: 'string',
              begin: /[^\?]{0}[A-Za-z0-9_$]+ *:/
            },
            {
              // catch middle element of the ternary operator
              // to avoid highlight it as a label, named parameter, or map key
              begin: /\?/,
              end: /\:/
            },
            {
              // highlight labeled statements
              className: 'symbol',
              begin: '^\\s*[A-Za-z0-9_$]+:',
              relevance: 0
            }
          ],
          illegal: /#|<\//
        };
      };

      /***/
    },
    /* 420 */
    /***/ function(module, exports) {
      module.exports = function(hljs) { // TODO support filter tags like :javascript, support inline HTML
        return {
          case_insensitive: true,
          contains: [
            {
              className: 'meta',
              begin:
                '^!!!( (5|1\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\b.*))?$',
              relevance: 10
            },
            // FIXME these comments should be allowed to span indented lines
            hljs.COMMENT('^\\s*(!=#|=#|-#|/).*$', false, {
              relevance: 0
            }),
            {
              begin: '^\\s*(-|=|!=)(?!#)',
              starts: {
                end: '\\n',
                subLanguage: 'ruby'
              }
            },
            {
              className: 'tag',
              begin: '^\\s*%',
              contains: [
                {
                  className: 'selector-tag',
                  begin: '\\w+'
                },
                {
                  className: 'selector-id',
                  begin: '#[\\w-]+'
                },
                {
                  className: 'selector-class',
                  begin: '\\.[\\w-]+'
                },
                {
                  begin: '{\\s*',
                  end: '\\s*}',
                  contains: [
                    {
                      begin: ':\\w+\\s*=>',
                      end: ',\\s+',
                      returnBegin: true,
                      endsWithParent: true,
                      contains: [
                        {
                          className: 'attr',
                          begin: ':\\w+'
                        },
                        hljs.APOS_STRING_MODE,
                        hljs.QUOTE_STRING_MODE,
                        {
                          begin: '\\w+',
                          relevance: 0
                        }
                      ]
                    }
                  ]
                },
                {
                  begin: '\\(\\s*',
                  end: '\\s*\\)',
                  excludeEnd: true,
                  contains: [
                    {
                      begin: '\\w+\\s*=',
                      end: '\\s+',
                      returnBegin: true,
                      endsWithParent: true,
                      contains: [
                        {
                          className: 'attr',
                          begin: '\\w+',
                          relevance: 0
                        },
                        hljs.APOS_STRING_MODE,
                        hljs.QUOTE_STRING_MODE,
                        {
                          begin: '\\w+',
                          relevance: 0
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              begin: '^\\s*[=~]\\s*'
            },
            {
              begin: '#{',
              starts: {
                end: '}',
                subLanguage: 'ruby'
              }
            }
          ]
        };
      };

      /***/
    },
    /* 421 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var BUILT_INS = {
          'builtin-name':
            'each in with if else unless bindattr action collection debugger log outlet template unbound view yield'
        };
        return {
          aliases: ['hbs', 'html.hbs', 'html.handlebars'],
          case_insensitive: true,
          subLanguage: 'xml',
          contains: [
            hljs.COMMENT('{{!(--)?', '(--)?}}'),
            {
              className: 'template-tag',
              begin: /\{\{[#\/]/,
              end: /\}\}/,
              contains: [
                {
                  className: 'name',
                  begin: /[a-zA-Z\.-]+/,
                  keywords: BUILT_INS,
                  starts: {
                    endsWithParent: true,
                    relevance: 0,
                    contains: [hljs.QUOTE_STRING_MODE]
                  }
                }
              ]
            },
            {
              className: 'template-variable',
              begin: /\{\{/,
              end: /\}\}/,
              keywords: BUILT_INS
            }
          ]
        };
      };

      /***/
    },
    /* 422 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var COMMENT = {
          variants: [
            hljs.COMMENT('--', '$'),
            hljs.COMMENT('{-', '-}', {
              contains: ['self']
            })
          ]
        };

        var PRAGMA = {
          className: 'meta',
          begin: '{-#',
          end: '#-}'
        };

        var PREPROCESSOR = {
          className: 'meta',
          begin: '^#',
          end: '$'
        };

        var CONSTRUCTOR = {
          className: 'type',
          begin: "\\b[A-Z][\\w']*", // TODO: other constructors (build-in, infix).
          relevance: 0
        };

        var LIST = {
          begin: '\\(',
          end: '\\)',
          illegal: '"',
          contains: [
            PRAGMA,
            PREPROCESSOR,
            {
              className: 'type',
              begin: '\\b[A-Z][\\w]*(\\((\\.\\.|,|\\w+)\\))?'
            },
            hljs.inherit(hljs.TITLE_MODE, { begin: "[_a-z][\\w']*" }),
            COMMENT
          ]
        };

        var RECORD = {
          begin: '{',
          end: '}',
          contains: LIST.contains
        };

        return {
          aliases: ['hs'],
          keywords:
            'let in if then else case of where do module import hiding ' +
            'qualified type data newtype deriving class instance as default ' +
            'infix infixl infixr foreign export ccall stdcall cplusplus ' +
            'jvm dotnet safe unsafe family forall mdo proc rec',
          contains: [
            // Top-level constructions.

            {
              beginKeywords: 'module',
              end: 'where',
              keywords: 'module where',
              contains: [LIST, COMMENT],
              illegal: '\\W\\.|;'
            },
            {
              begin: '\\bimport\\b',
              end: '$',
              keywords: 'import qualified as hiding',
              contains: [LIST, COMMENT],
              illegal: '\\W\\.|;'
            },

            {
              className: 'class',
              begin: '^(\\s*)?(class|instance)\\b',
              end: 'where',
              keywords: 'class family instance where',
              contains: [CONSTRUCTOR, LIST, COMMENT]
            },
            {
              className: 'class',
              begin: '\\b(data|(new)?type)\\b',
              end: '$',
              keywords: 'data family type newtype deriving',
              contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD, COMMENT]
            },
            {
              beginKeywords: 'default',
              end: '$',
              contains: [CONSTRUCTOR, LIST, COMMENT]
            },
            {
              beginKeywords: 'infix infixl infixr',
              end: '$',
              contains: [hljs.C_NUMBER_MODE, COMMENT]
            },
            {
              begin: '\\bforeign\\b',
              end: '$',
              keywords:
                'foreign import export ccall stdcall cplusplus jvm ' +
                'dotnet safe unsafe',
              contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE, COMMENT]
            },
            {
              className: 'meta',
              begin: '#!\\/usr\\/bin\\/env runhaskell',
              end: '$'
            },

            // "Whitespaces".

            PRAGMA,
            PREPROCESSOR,

            // Literals and names.

            // TODO: characters.
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE,
            CONSTRUCTOR,
            hljs.inherit(hljs.TITLE_MODE, { begin: "^[_a-z][\\w']*" }),

            COMMENT,

            { begin: '->|<-' } // No markup, relevance booster
          ]
        };
      };

      /***/
    },
    /* 423 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';
        var IDENT_FUNC_RETURN_TYPE_RE = '([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)';

        var HAXE_BASIC_TYPES = 'Int Float String Bool Dynamic Void Array ';

        return {
          aliases: ['hx'],
          keywords: {
            keyword:
              'break case cast catch continue default do dynamic else enum extern ' +
              'for function here if import in inline never new override package private get set ' +
              'public return static super switch this throw trace try typedef untyped using var while ' +
              HAXE_BASIC_TYPES,
            built_in: 'trace this',
            literal: 'true false null _'
          },
          contains: [
            {
              className: 'string', // interpolate-able strings
              begin: "'",
              end: "'",
              contains: [
                hljs.BACKSLASH_ESCAPE,
                {
                  className: 'subst', // interpolation
                  begin: '\\$\\{',
                  end: '\\}'
                },
                {
                  className: 'subst', // interpolation
                  begin: '\\$',
                  end: '\\W}'
                }
              ]
            },
            hljs.QUOTE_STRING_MODE,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.C_NUMBER_MODE,
            {
              className: 'meta', // compiler meta
              begin: '@:',
              end: '$'
            },
            {
              className: 'meta', // compiler conditionals
              begin: '#',
              end: '$',
              keywords: { 'meta-keyword': 'if else elseif end error' }
            },
            {
              className: 'type', // function types
              begin: ':[ \t]*',
              end: '[^A-Za-z0-9_ \t\\->]',
              excludeBegin: true,
              excludeEnd: true,
              relevance: 0
            },
            {
              className: 'type', // types
              begin: ':[ \t]*',
              end: '\\W',
              excludeBegin: true,
              excludeEnd: true
            },
            {
              className: 'type', // instantiation
              begin: 'new *',
              end: '\\W',
              excludeBegin: true,
              excludeEnd: true
            },
            {
              className: 'class', // enums
              beginKeywords: 'enum',
              end: '\\{',
              contains: [hljs.TITLE_MODE]
            },
            {
              className: 'class', // abstracts
              beginKeywords: 'abstract',
              end: '[\\{$]',
              contains: [
                {
                  className: 'type',
                  begin: '\\(',
                  end: '\\)',
                  excludeBegin: true,
                  excludeEnd: true
                },
                {
                  className: 'type',
                  begin: 'from +',
                  end: '\\W',
                  excludeBegin: true,
                  excludeEnd: true
                },
                {
                  className: 'type',
                  begin: 'to +',
                  end: '\\W',
                  excludeBegin: true,
                  excludeEnd: true
                },
                hljs.TITLE_MODE
              ],
              keywords: {
                keyword: 'abstract from to'
              }
            },
            {
              className: 'class', // classes
              begin: '\\b(class|interface) +',
              end: '[\\{$]',
              excludeEnd: true,
              keywords: 'class interface',
              contains: [
                {
                  className: 'keyword',
                  begin: '\\b(extends|implements) +',
                  keywords: 'extends implements',
                  contains: [
                    {
                      className: 'type',
                      begin: hljs.IDENT_RE,
                      relevance: 0
                    }
                  ]
                },
                hljs.TITLE_MODE
              ]
            },
            {
              className: 'function',
              beginKeywords: 'function',
              end: '\\(',
              excludeEnd: true,
              illegal: '\\S',
              contains: [hljs.TITLE_MODE]
            }
          ],
          illegal: /<\//
        };
      };

      /***/
    },
    /* 424 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          case_insensitive: true,
          lexemes: /[\w\._]+/,
          keywords:
            'goto gosub return break repeat loop continue wait await dim sdim foreach dimtype dup dupptr end stop newmod delmod mref run exgoto on mcall assert logmes newlab resume yield onexit onerror onkey onclick oncmd exist delete mkdir chdir dirlist bload bsave bcopy memfile if else poke wpoke lpoke getstr chdpm memexpand memcpy memset notesel noteadd notedel noteload notesave randomize noteunsel noteget split strrep setease button chgdisp exec dialog mmload mmplay mmstop mci pset pget syscolor mes print title pos circle cls font sysfont objsize picload color palcolor palette redraw width gsel gcopy gzoom gmode bmpsave hsvcolor getkey listbox chkbox combox input mesbox buffer screen bgscr mouse objsel groll line clrobj boxf objprm objmode stick grect grotate gsquare gradf objimage objskip objenable celload celdiv celput newcom querycom delcom cnvstow comres axobj winobj sendmsg comevent comevarg sarrayconv callfunc cnvwtos comevdisp libptr system hspstat hspver stat cnt err strsize looplev sublev iparam wparam lparam refstr refdval int rnd strlen length length2 length3 length4 vartype gettime peek wpeek lpeek varptr varuse noteinfo instr abs limit getease str strmid strf getpath strtrim sin cos tan atan sqrt double absf expf logf limitf powf geteasef mousex mousey mousew hwnd hinstance hdc ginfo objinfo dirinfo sysinfo thismod __hspver__ __hsp30__ __date__ __time__ __line__ __file__ _debug __hspdef__ and or xor not screen_normal screen_palette screen_hide screen_fixedsize screen_tool screen_frame gmode_gdi gmode_mem gmode_rgb0 gmode_alpha gmode_rgb0alpha gmode_add gmode_sub gmode_pixela ginfo_mx ginfo_my ginfo_act ginfo_sel ginfo_wx1 ginfo_wy1 ginfo_wx2 ginfo_wy2 ginfo_vx ginfo_vy ginfo_sizex ginfo_sizey ginfo_winx ginfo_winy ginfo_mesx ginfo_mesy ginfo_r ginfo_g ginfo_b ginfo_paluse ginfo_dispx ginfo_dispy ginfo_cx ginfo_cy ginfo_intid ginfo_newid ginfo_sx ginfo_sy objinfo_mode objinfo_bmscr objinfo_hwnd notemax notesize dir_cur dir_exe dir_win dir_sys dir_cmdline dir_desktop dir_mydoc dir_tv font_normal font_bold font_italic font_underline font_strikeout font_antialias objmode_normal objmode_guifont objmode_usefont gsquare_grad msgothic msmincho do until while wend for next _break _continue switch case default swbreak swend ddim ldim alloc m_pi rad2deg deg2rad ease_linear ease_quad_in ease_quad_out ease_quad_inout ease_cubic_in ease_cubic_out ease_cubic_inout ease_quartic_in ease_quartic_out ease_quartic_inout ease_bounce_in ease_bounce_out ease_bounce_inout ease_shake_in ease_shake_out ease_shake_inout ease_loop',
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.APOS_STRING_MODE,

            {
              // multi-line string
              className: 'string',
              begin: '{"',
              end: '"}',
              contains: [hljs.BACKSLASH_ESCAPE]
            },

            hljs.COMMENT(';', '$', { relevance: 0 }),

            {
              // pre-processor
              className: 'meta',
              begin: '#',
              end: '$',
              keywords: {
                'meta-keyword':
                  'addion cfunc cmd cmpopt comfunc const defcfunc deffunc define else endif enum epack func global if ifdef ifndef include modcfunc modfunc modinit modterm module pack packopt regcmd runtime undef usecom uselib'
              },
              contains: [
                hljs.inherit(hljs.QUOTE_STRING_MODE, {
                  className: 'meta-string'
                }),
                hljs.NUMBER_MODE,
                hljs.C_NUMBER_MODE,
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },

            {
              // label
              className: 'symbol',
              begin: '^\\*(\\w+|@)'
            },

            hljs.NUMBER_MODE,
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 425 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var BUILT_INS =
          'action collection component concat debugger each each-in else get hash if input link-to loc log mut outlet partial query-params render textarea unbound unless with yield view';

        var ATTR_ASSIGNMENT = {
          illegal: /\}\}/,
          begin: /[a-zA-Z0-9_]+=/,
          returnBegin: true,
          relevance: 0,
          contains: [
            {
              className: 'attr',
              begin: /[a-zA-Z0-9_]+/
            }
          ]
        };

        var SUB_EXPR = {
          illegal: /\}\}/,
          begin: /\)/,
          end: /\)/,
          contains: [
            {
              begin: /[a-zA-Z\.\-]+/,
              keywords: { built_in: BUILT_INS },
              starts: {
                endsWithParent: true,
                relevance: 0,
                contains: [hljs.QUOTE_STRING_MODE]
              }
            }
          ]
        };

        var TAG_INNARDS = {
          endsWithParent: true,
          relevance: 0,
          keywords: { keyword: 'as', built_in: BUILT_INS },
          contains: [hljs.QUOTE_STRING_MODE, ATTR_ASSIGNMENT, hljs.NUMBER_MODE]
        };

        return {
          case_insensitive: true,
          subLanguage: 'xml',
          contains: [
            hljs.COMMENT('{{!(--)?', '(--)?}}'),
            {
              className: 'template-tag',
              begin: /\{\{[#\/]/,
              end: /\}\}/,
              contains: [
                {
                  className: 'name',
                  begin: /[a-zA-Z\.\-]+/,
                  keywords: { 'builtin-name': BUILT_INS },
                  starts: TAG_INNARDS
                }
              ]
            },
            {
              className: 'template-variable',
              begin: /\{\{[a-zA-Z][a-zA-Z\-]+/,
              end: /\}\}/,
              keywords: { keyword: 'as', built_in: BUILT_INS },
              contains: [hljs.QUOTE_STRING_MODE]
            }
          ]
        };
      };

      /***/
    },
    /* 426 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var VERSION = 'HTTP/[0-9\\.]+';
        return {
          aliases: ['https'],
          illegal: '\\S',
          contains: [
            {
              begin: '^' + VERSION,
              end: '$',
              contains: [{ className: 'number', begin: '\\b\\d{3}\\b' }]
            },
            {
              begin: '^[A-Z]+ (.*?) ' + VERSION + '$',
              returnBegin: true,
              end: '$',
              contains: [
                {
                  className: 'string',
                  begin: ' ',
                  end: ' ',
                  excludeBegin: true,
                  excludeEnd: true
                },
                {
                  begin: VERSION
                },
                {
                  className: 'keyword',
                  begin: '[A-Z]+'
                }
              ]
            },
            {
              className: 'attribute',
              begin: '^\\w',
              end: ': ',
              excludeEnd: true,
              illegal: '\\n|\\s|=',
              starts: { end: '$', relevance: 0 }
            },
            {
              begin: '\\n\\n',
              starts: { subLanguage: [], endsWithParent: true }
            }
          ]
        };
      };

      /***/
    },
    /* 427 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var keywords = {
          'builtin-name':
            // keywords
            '!= % %= & &= * ** **= *= *map ' +
            '+ += , --build-class-- --import-- -= . / // //= ' +
            '/= < << <<= <= = > >= >> >>= ' +
            '@ @= ^ ^= abs accumulate all and any ap-compose ' +
            'ap-dotimes ap-each ap-each-while ap-filter ap-first ap-if ap-last ap-map ap-map-when ap-pipe ' +
            'ap-reduce ap-reject apply as-> ascii assert assoc bin break butlast ' +
            'callable calling-module-name car case cdr chain chr coll? combinations compile ' +
            'compress cond cons cons? continue count curry cut cycle dec ' +
            'def default-method defclass defmacro defmacro-alias defmacro/g! defmain defmethod defmulti defn ' +
            'defn-alias defnc defnr defreader defseq del delattr delete-route dict-comp dir ' +
            'disassemble dispatch-reader-macro distinct divmod do doto drop drop-last drop-while empty? ' +
            'end-sequence eval eval-and-compile eval-when-compile even? every? except exec filter first ' +
            'flatten float? fn fnc fnr for for* format fraction genexpr ' +
            'gensym get getattr global globals group-by hasattr hash hex id ' +
            'identity if if* if-not if-python2 import in inc input instance? ' +
            'integer integer-char? integer? interleave interpose is is-coll is-cons is-empty is-even ' +
            'is-every is-float is-instance is-integer is-integer-char is-iterable is-iterator is-keyword is-neg is-none ' +
            'is-not is-numeric is-odd is-pos is-string is-symbol is-zero isinstance islice issubclass ' +
            'iter iterable? iterate iterator? keyword keyword? lambda last len let ' +
            'lif lif-not list* list-comp locals loop macro-error macroexpand macroexpand-1 macroexpand-all ' +
            'map max merge-with method-decorator min multi-decorator multicombinations name neg? next ' +
            'none? nonlocal not not-in not? nth numeric? oct odd? open ' +
            'or ord partition permutations pos? post-route postwalk pow prewalk print ' +
            'product profile/calls profile/cpu put-route quasiquote quote raise range read read-str ' +
            'recursive-replace reduce remove repeat repeatedly repr require rest round route ' +
            'route-with-methods rwm second seq set-comp setattr setv some sorted string ' +
            'string? sum switch symbol? take take-nth take-while tee try unless ' +
            'unquote unquote-splicing vars walk when while with with* with-decorator with-gensyms ' +
            'xi xor yield yield-from zero? zip zip-longest | |= ~'
        };

        var SYMBOLSTART = "a-zA-Z_\\-!.?+*=<>&#'";
        var SYMBOL_RE = '[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:]*';
        var SIMPLE_NUMBER_RE = '[-+]?\\d+(\\.\\d+)?';

        var SHEBANG = {
          className: 'meta',
          begin: '^#!',
          end: '$'
        };

        var SYMBOL = {
          begin: SYMBOL_RE,
          relevance: 0
        };
        var NUMBER = {
          className: 'number',
          begin: SIMPLE_NUMBER_RE,
          relevance: 0
        };
        var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });
        var COMMENT = hljs.COMMENT(';', '$', {
          relevance: 0
        });
        var LITERAL = {
          className: 'literal',
          begin: /\b([Tt]rue|[Ff]alse|nil|None)\b/
        };
        var COLLECTION = {
          begin: '[\\[\\{]',
          end: '[\\]\\}]'
        };
        var HINT = {
          className: 'comment',
          begin: '\\^' + SYMBOL_RE
        };
        var HINT_COL = hljs.COMMENT('\\^\\{', '\\}');
        var KEY = {
          className: 'symbol',
          begin: '[:]{1,2}' + SYMBOL_RE
        };
        var LIST = {
          begin: '\\(',
          end: '\\)'
        };
        var BODY = {
          endsWithParent: true,
          relevance: 0
        };
        var NAME = {
          keywords: keywords,
          lexemes: SYMBOL_RE,
          className: 'name',
          begin: SYMBOL_RE,
          starts: BODY
        };
        var DEFAULT_CONTAINS = [
          LIST,
          STRING,
          HINT,
          HINT_COL,
          COMMENT,
          KEY,
          COLLECTION,
          NUMBER,
          LITERAL,
          SYMBOL
        ];

        LIST.contains = [hljs.COMMENT('comment', ''), NAME, BODY];
        BODY.contains = DEFAULT_CONTAINS;
        COLLECTION.contains = DEFAULT_CONTAINS;

        return {
          aliases: ['hylang'],
          illegal: /\S/,
          contains: [
            SHEBANG,
            LIST,
            STRING,
            HINT,
            HINT_COL,
            COMMENT,
            KEY,
            COLLECTION,
            NUMBER,
            LITERAL
          ]
        };
      };

      /***/
    },
    /* 428 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var START_BRACKET = '\\[';
        var END_BRACKET = '\\]';
        return {
          aliases: ['i7'],
          case_insensitive: true,
          keywords: {
            // Some keywords more or less unique to I7, for relevance.
            keyword:
              // kind:
              'thing room person man woman animal container ' +
              'supporter backdrop door ' +
              // characteristic:
              'scenery open closed locked inside gender ' +
              // verb:
              'is are say understand ' +
              // misc keyword:
              'kind of rule'
          },
          contains: [
            {
              className: 'string',
              begin: '"',
              end: '"',
              relevance: 0,
              contains: [
                {
                  className: 'subst',
                  begin: START_BRACKET,
                  end: END_BRACKET
                }
              ]
            },
            {
              className: 'section',
              begin: /^(Volume|Book|Part|Chapter|Section|Table)\b/,
              end: '$'
            },
            {
              // Rule definition
              // This is here for relevance.
              begin: /^(Check|Carry out|Report|Instead of|To|Rule|When|Before|After)\b/,
              end: ':',
              contains: [
                {
                  //Rule name
                  begin: '\\(This',
                  end: '\\)'
                }
              ]
            },
            {
              className: 'comment',
              begin: START_BRACKET,
              end: END_BRACKET,
              contains: ['self']
            }
          ]
        };
      };

      /***/
    },
    /* 429 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var STRING = {
          className: 'string',
          contains: [hljs.BACKSLASH_ESCAPE],
          variants: [
            {
              begin: "'''",
              end: "'''",
              relevance: 10
            },
            {
              begin: '"""',
              end: '"""',
              relevance: 10
            },
            {
              begin: '"',
              end: '"'
            },
            {
              begin: "'",
              end: "'"
            }
          ]
        };
        return {
          aliases: ['toml'],
          case_insensitive: true,
          illegal: /\S/,
          contains: [
            hljs.COMMENT(';', '$'),
            hljs.HASH_COMMENT_MODE,
            {
              className: 'section',
              begin: /^\s*\[+/,
              end: /\]+/
            },
            {
              begin: /^[a-z0-9\[\]_-]+\s*=\s*/,
              end: '$',
              returnBegin: true,
              contains: [
                {
                  className: 'attr',
                  begin: /[a-z0-9\[\]_-]+/
                },
                {
                  begin: /=/,
                  endsWithParent: true,
                  relevance: 0,
                  contains: [
                    {
                      className: 'literal',
                      begin: /\bon|off|true|false|yes|no\b/
                    },
                    {
                      className: 'variable',
                      variants: [
                        { begin: /\$[\w\d"][\w\d_]*/ },
                        { begin: /\$\{(.*?)}/ }
                      ]
                    },
                    STRING,
                    {
                      className: 'number',
                      begin: /([\+\-]+)?[\d]+_[\d_]+/
                    },
                    hljs.NUMBER_MODE
                  ]
                }
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 430 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var PARAMS = {
          className: 'params',
          begin: '\\(',
          end: '\\)'
        };

        var F_KEYWORDS = {
          literal: '.False. .True.',
          keyword:
            'kind do while private call intrinsic where elsewhere ' +
            'type endtype endmodule endselect endinterface end enddo endif if forall endforall only contains default return stop then ' +
            'public subroutine|10 function program .and. .or. .not. .le. .eq. .ge. .gt. .lt. ' +
            'goto save else use module select case ' +
            'access blank direct exist file fmt form formatted iostat name named nextrec number opened rec recl sequential status unformatted unit ' +
            'continue format pause cycle exit ' +
            'c_null_char c_alert c_backspace c_form_feed flush wait decimal round iomsg ' +
            'synchronous nopass non_overridable pass protected volatile abstract extends import ' +
            'non_intrinsic value deferred generic final enumerator class associate bind enum ' +
            'c_int c_short c_long c_long_long c_signed_char c_size_t c_int8_t c_int16_t c_int32_t c_int64_t c_int_least8_t c_int_least16_t ' +
            'c_int_least32_t c_int_least64_t c_int_fast8_t c_int_fast16_t c_int_fast32_t c_int_fast64_t c_intmax_t C_intptr_t c_float c_double ' +
            'c_long_double c_float_complex c_double_complex c_long_double_complex c_bool c_char c_null_ptr c_null_funptr ' +
            'c_new_line c_carriage_return c_horizontal_tab c_vertical_tab iso_c_binding c_loc c_funloc c_associated  c_f_pointer ' +
            'c_ptr c_funptr iso_fortran_env character_storage_size error_unit file_storage_size input_unit iostat_end iostat_eor ' +
            'numeric_storage_size output_unit c_f_procpointer ieee_arithmetic ieee_support_underflow_control ' +
            'ieee_get_underflow_mode ieee_set_underflow_mode newunit contiguous recursive ' +
            'pad position action delim readwrite eor advance nml interface procedure namelist include sequence elemental pure ' +
            'integer real character complex logical dimension allocatable|10 parameter ' +
            'external implicit|10 none double precision assign intent optional pointer ' +
            'target in out common equivalence data ' +
            // IRPF90 special keywords
            'begin_provider &begin_provider end_provider begin_shell end_shell begin_template end_template subst assert touch ' +
            'soft_touch provide no_dep free irp_if irp_else irp_endif irp_write irp_read',
          built_in:
            'alog alog10 amax0 amax1 amin0 amin1 amod cabs ccos cexp clog csin csqrt dabs dacos dasin datan datan2 dcos dcosh ddim dexp dint ' +
            'dlog dlog10 dmax1 dmin1 dmod dnint dsign dsin dsinh dsqrt dtan dtanh float iabs idim idint idnint ifix isign max0 max1 min0 min1 sngl ' +
            'algama cdabs cdcos cdexp cdlog cdsin cdsqrt cqabs cqcos cqexp cqlog cqsin cqsqrt dcmplx dconjg derf derfc dfloat dgamma dimag dlgama ' +
            'iqint qabs qacos qasin qatan qatan2 qcmplx qconjg qcos qcosh qdim qerf qerfc qexp qgamma qimag qlgama qlog qlog10 qmax1 qmin1 qmod ' +
            'qnint qsign qsin qsinh qsqrt qtan qtanh abs acos aimag aint anint asin atan atan2 char cmplx conjg cos cosh exp ichar index int log ' +
            'log10 max min nint sign sin sinh sqrt tan tanh print write dim lge lgt lle llt mod nullify allocate deallocate ' +
            'adjustl adjustr all allocated any associated bit_size btest ceiling count cshift date_and_time digits dot_product ' +
            'eoshift epsilon exponent floor fraction huge iand ibclr ibits ibset ieor ior ishft ishftc lbound len_trim matmul ' +
            'maxexponent maxloc maxval merge minexponent minloc minval modulo mvbits nearest pack present product ' +
            'radix random_number random_seed range repeat reshape rrspacing scale scan selected_int_kind selected_real_kind ' +
            'set_exponent shape size spacing spread sum system_clock tiny transpose trim ubound unpack verify achar iachar transfer ' +
            'dble entry dprod cpu_time command_argument_count get_command get_command_argument get_environment_variable is_iostat_end ' +
            'ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode ' +
            'is_iostat_eor move_alloc new_line selected_char_kind same_type_as extends_type_of' +
            'acosh asinh atanh bessel_j0 bessel_j1 bessel_jn bessel_y0 bessel_y1 bessel_yn erf erfc erfc_scaled gamma log_gamma hypot norm2 ' +
            'atomic_define atomic_ref execute_command_line leadz trailz storage_size merge_bits ' +
            'bge bgt ble blt dshiftl dshiftr findloc iall iany iparity image_index lcobound ucobound maskl maskr ' +
            'num_images parity popcnt poppar shifta shiftl shiftr this_image ' +
            // IRPF90 special built_ins
            'IRP_ALIGN irp_here'
        };
        return {
          case_insensitive: true,
          keywords: F_KEYWORDS,
          illegal: /\/\*/,
          contains: [
            hljs.inherit(hljs.APOS_STRING_MODE, {
              className: 'string',
              relevance: 0
            }),
            hljs.inherit(hljs.QUOTE_STRING_MODE, {
              className: 'string',
              relevance: 0
            }),
            {
              className: 'function',
              beginKeywords: 'subroutine function program',
              illegal: '[${=\\n]',
              contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]
            },
            hljs.COMMENT('!', '$', { relevance: 0 }),
            hljs.COMMENT('begin_doc', 'end_doc', { relevance: 10 }),
            {
              className: 'number',
              begin:
                '(?=\\b|\\+|\\-|\\.)(?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*)(?:[de][+-]?\\d+)?\\b\\.?',
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 431 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        // Определение идентификаторов
        var UNDERSCORE_IDENT_RE = '[A-Za-zА-Яа-яёЁ_!][A-Za-zА-Яа-яёЁ_0-9]*';

        // Определение имен функций
        var FUNCTION_NAME_IDENT_RE = '[A-Za-zА-Яа-яёЁ_][A-Za-zА-Яа-яёЁ_0-9]*';

        // keyword : ключевые слова
        var KEYWORD =
          'and и else иначе endexcept endfinally endforeach конецвсе endif конецесли endwhile конецпока ' +
          'except exitfor finally foreach все if если in в not не or или try while пока ';

        // SYSRES Constants
        var sysres_constants =
          'SYSRES_CONST_ACCES_RIGHT_TYPE_EDIT ' +
          'SYSRES_CONST_ACCES_RIGHT_TYPE_FULL ' +
          'SYSRES_CONST_ACCES_RIGHT_TYPE_VIEW ' +
          'SYSRES_CONST_ACCESS_MODE_REQUISITE_CODE ' +
          'SYSRES_CONST_ACCESS_NO_ACCESS_VIEW ' +
          'SYSRES_CONST_ACCESS_NO_ACCESS_VIEW_CODE ' +
          'SYSRES_CONST_ACCESS_RIGHTS_ADD_REQUISITE_CODE ' +
          'SYSRES_CONST_ACCESS_RIGHTS_ADD_REQUISITE_YES_CODE ' +
          'SYSRES_CONST_ACCESS_RIGHTS_CHANGE_REQUISITE_CODE ' +
          'SYSRES_CONST_ACCESS_RIGHTS_CHANGE_REQUISITE_YES_CODE ' +
          'SYSRES_CONST_ACCESS_RIGHTS_DELETE_REQUISITE_CODE ' +
          'SYSRES_CONST_ACCESS_RIGHTS_DELETE_REQUISITE_YES_CODE ' +
          'SYSRES_CONST_ACCESS_RIGHTS_EXECUTE_REQUISITE_CODE ' +
          'SYSRES_CONST_ACCESS_RIGHTS_EXECUTE_REQUISITE_YES_CODE ' +
          'SYSRES_CONST_ACCESS_RIGHTS_NO_ACCESS_REQUISITE_CODE ' +
          'SYSRES_CONST_ACCESS_RIGHTS_NO_ACCESS_REQUISITE_YES_CODE ' +
          'SYSRES_CONST_ACCESS_RIGHTS_RATIFY_REQUISITE_CODE ' +
          'SYSRES_CONST_ACCESS_RIGHTS_RATIFY_REQUISITE_YES_CODE ' +
          'SYSRES_CONST_ACCESS_RIGHTS_REQUISITE_CODE ' +
          'SYSRES_CONST_ACCESS_RIGHTS_VIEW ' +
          'SYSRES_CONST_ACCESS_RIGHTS_VIEW_CODE ' +
          'SYSRES_CONST_ACCESS_RIGHTS_VIEW_REQUISITE_CODE ' +
          'SYSRES_CONST_ACCESS_RIGHTS_VIEW_REQUISITE_YES_CODE ' +
          'SYSRES_CONST_ACCESS_TYPE_CHANGE ' +
          'SYSRES_CONST_ACCESS_TYPE_CHANGE_CODE ' +
          'SYSRES_CONST_ACCESS_TYPE_EXISTS ' +
          'SYSRES_CONST_ACCESS_TYPE_EXISTS_CODE ' +
          'SYSRES_CONST_ACCESS_TYPE_FULL ' +
          'SYSRES_CONST_ACCESS_TYPE_FULL_CODE ' +
          'SYSRES_CONST_ACCESS_TYPE_VIEW ' +
          'SYSRES_CONST_ACCESS_TYPE_VIEW_CODE ' +
          'SYSRES_CONST_ACTION_TYPE_ABORT ' +
          'SYSRES_CONST_ACTION_TYPE_ACCEPT ' +
          'SYSRES_CONST_ACTION_TYPE_ACCESS_RIGHTS ' +
          'SYSRES_CONST_ACTION_TYPE_ADD_ATTACHMENT ' +
          'SYSRES_CONST_ACTION_TYPE_CHANGE_CARD ' +
          'SYSRES_CONST_ACTION_TYPE_CHANGE_KIND ' +
          'SYSRES_CONST_ACTION_TYPE_CHANGE_STORAGE ' +
          'SYSRES_CONST_ACTION_TYPE_CONTINUE ' +
          'SYSRES_CONST_ACTION_TYPE_COPY ' +
          'SYSRES_CONST_ACTION_TYPE_CREATE ' +
          'SYSRES_CONST_ACTION_TYPE_CREATE_VERSION ' +
          'SYSRES_CONST_ACTION_TYPE_DELETE ' +
          'SYSRES_CONST_ACTION_TYPE_DELETE_ATTACHMENT ' +
          'SYSRES_CONST_ACTION_TYPE_DELETE_VERSION ' +
          'SYSRES_CONST_ACTION_TYPE_DISABLE_DELEGATE_ACCESS_RIGHTS ' +
          'SYSRES_CONST_ACTION_TYPE_ENABLE_DELEGATE_ACCESS_RIGHTS ' +
          'SYSRES_CONST_ACTION_TYPE_ENCRYPTION_BY_CERTIFICATE ' +
          'SYSRES_CONST_ACTION_TYPE_ENCRYPTION_BY_CERTIFICATE_AND_PASSWORD ' +
          'SYSRES_CONST_ACTION_TYPE_ENCRYPTION_BY_PASSWORD ' +
          'SYSRES_CONST_ACTION_TYPE_EXPORT_WITH_LOCK ' +
          'SYSRES_CONST_ACTION_TYPE_EXPORT_WITHOUT_LOCK ' +
          'SYSRES_CONST_ACTION_TYPE_IMPORT_WITH_UNLOCK ' +
          'SYSRES_CONST_ACTION_TYPE_IMPORT_WITHOUT_UNLOCK ' +
          'SYSRES_CONST_ACTION_TYPE_LIFE_CYCLE_STAGE ' +
          'SYSRES_CONST_ACTION_TYPE_LOCK ' +
          'SYSRES_CONST_ACTION_TYPE_LOCK_FOR_SERVER ' +
          'SYSRES_CONST_ACTION_TYPE_LOCK_MODIFY ' +
          'SYSRES_CONST_ACTION_TYPE_MARK_AS_READED ' +
          'SYSRES_CONST_ACTION_TYPE_MARK_AS_UNREADED ' +
          'SYSRES_CONST_ACTION_TYPE_MODIFY ' +
          'SYSRES_CONST_ACTION_TYPE_MODIFY_CARD ' +
          'SYSRES_CONST_ACTION_TYPE_MOVE_TO_ARCHIVE ' +
          'SYSRES_CONST_ACTION_TYPE_OFF_ENCRYPTION ' +
          'SYSRES_CONST_ACTION_TYPE_PASSWORD_CHANGE ' +
          'SYSRES_CONST_ACTION_TYPE_PERFORM ' +
          'SYSRES_CONST_ACTION_TYPE_RECOVER_FROM_LOCAL_COPY ' +
          'SYSRES_CONST_ACTION_TYPE_RESTART ' +
          'SYSRES_CONST_ACTION_TYPE_RESTORE_FROM_ARCHIVE ' +
          'SYSRES_CONST_ACTION_TYPE_REVISION ' +
          'SYSRES_CONST_ACTION_TYPE_SEND_BY_MAIL ' +
          'SYSRES_CONST_ACTION_TYPE_SIGN ' +
          'SYSRES_CONST_ACTION_TYPE_START ' +
          'SYSRES_CONST_ACTION_TYPE_UNLOCK ' +
          'SYSRES_CONST_ACTION_TYPE_UNLOCK_FROM_SERVER ' +
          'SYSRES_CONST_ACTION_TYPE_VERSION_STATE ' +
          'SYSRES_CONST_ACTION_TYPE_VERSION_VISIBILITY ' +
          'SYSRES_CONST_ACTION_TYPE_VIEW ' +
          'SYSRES_CONST_ACTION_TYPE_VIEW_SHADOW_COPY ' +
          'SYSRES_CONST_ACTION_TYPE_WORKFLOW_DESCRIPTION_MODIFY ' +
          'SYSRES_CONST_ACTION_TYPE_WRITE_HISTORY ' +
          'SYSRES_CONST_ACTIVE_VERSION_STATE_PICK_VALUE ' +
          'SYSRES_CONST_ADD_REFERENCE_MODE_NAME ' +
          'SYSRES_CONST_ADDITION_REQUISITE_CODE ' +
          'SYSRES_CONST_ADDITIONAL_PARAMS_REQUISITE_CODE ' +
          'SYSRES_CONST_ADITIONAL_JOB_END_DATE_REQUISITE_NAME ' +
          'SYSRES_CONST_ADITIONAL_JOB_READ_REQUISITE_NAME ' +
          'SYSRES_CONST_ADITIONAL_JOB_START_DATE_REQUISITE_NAME ' +
          'SYSRES_CONST_ADITIONAL_JOB_STATE_REQUISITE_NAME ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_ADDING_USER_TO_GROUP_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_ADDING_USER_TO_GROUP_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_COMP_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_COMP_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_GROUP_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_GROUP_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_USER_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_USER_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_DATABASE_USER_CREATION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_DATABASE_USER_CREATION_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_DATABASE_USER_DELETION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_DATABASE_USER_DELETION_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_COMP_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_COMP_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_GROUP_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_GROUP_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_USER_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_USER_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_USER_FROM_GROUP_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_USER_FROM_GROUP_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_FILTERER_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_FILTERER_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_FILTERER_RESTRICTION_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_FILTERER_RESTRICTION_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_PRIVILEGE_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_PRIVILEGE_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_RIGHTS_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_RIGHTS_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_IS_MAIN_SERVER_CHANGED_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_IS_MAIN_SERVER_CHANGED_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_IS_PUBLIC_CHANGED_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_IS_PUBLIC_CHANGED_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_FILTERER_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_FILTERER_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_FILTERER_RESTRICTION_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_FILTERER_RESTRICTION_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_PRIVILEGE_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_PRIVILEGE_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_RIGHTS_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_RIGHTS_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_SERVER_LOGIN_CREATION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_SERVER_LOGIN_CREATION_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_SERVER_LOGIN_DELETION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_SERVER_LOGIN_DELETION_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_CATEGORY_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_CATEGORY_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_COMP_TITLE_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_COMP_TITLE_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_FULL_NAME_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_FULL_NAME_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_GROUP_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_GROUP_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_PARENT_GROUP_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_PARENT_GROUP_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_AUTH_TYPE_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_AUTH_TYPE_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_LOGIN_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_LOGIN_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_STATUS_ACTION ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_STATUS_ACTION_CODE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_USER_PASSWORD_CHANGE ' +
          'SYSRES_CONST_ADMINISTRATION_HISTORY_USER_PASSWORD_CHANGE_ACTION ' +
          'SYSRES_CONST_ALL_ACCEPT_CONDITION_RUS ' +
          'SYSRES_CONST_ALL_USERS_GROUP ' +
          'SYSRES_CONST_ALL_USERS_GROUP_NAME ' +
          'SYSRES_CONST_ALL_USERS_SERVER_GROUP_NAME ' +
          'SYSRES_CONST_ALLOWED_ACCESS_TYPE_CODE ' +
          'SYSRES_CONST_ALLOWED_ACCESS_TYPE_NAME ' +
          'SYSRES_CONST_APP_VIEWER_TYPE_REQUISITE_CODE ' +
          'SYSRES_CONST_APPROVING_SIGNATURE_NAME ' +
          'SYSRES_CONST_APPROVING_SIGNATURE_REQUISITE_CODE ' +
          'SYSRES_CONST_ASSISTANT_SUBSTITUE_TYPE ' +
          'SYSRES_CONST_ASSISTANT_SUBSTITUE_TYPE_CODE ' +
          'SYSRES_CONST_ATTACH_TYPE_COMPONENT_TOKEN ' +
          'SYSRES_CONST_ATTACH_TYPE_DOC ' +
          'SYSRES_CONST_ATTACH_TYPE_EDOC ' +
          'SYSRES_CONST_ATTACH_TYPE_FOLDER ' +
          'SYSRES_CONST_ATTACH_TYPE_JOB ' +
          'SYSRES_CONST_ATTACH_TYPE_REFERENCE ' +
          'SYSRES_CONST_ATTACH_TYPE_TASK ' +
          'SYSRES_CONST_AUTH_ENCODED_PASSWORD ' +
          'SYSRES_CONST_AUTH_ENCODED_PASSWORD_CODE ' +
          'SYSRES_CONST_AUTH_NOVELL ' +
          'SYSRES_CONST_AUTH_PASSWORD ' +
          'SYSRES_CONST_AUTH_PASSWORD_CODE ' +
          'SYSRES_CONST_AUTH_WINDOWS ' +
          'SYSRES_CONST_AUTHENTICATING_SIGNATURE_NAME ' +
          'SYSRES_CONST_AUTHENTICATING_SIGNATURE_REQUISITE_CODE ' +
          'SYSRES_CONST_AUTO_ENUM_METHOD_FLAG ' +
          'SYSRES_CONST_AUTO_NUMERATION_CODE ' +
          'SYSRES_CONST_AUTO_STRONG_ENUM_METHOD_FLAG ' +
          'SYSRES_CONST_AUTOTEXT_NAME_REQUISITE_CODE ' +
          'SYSRES_CONST_AUTOTEXT_TEXT_REQUISITE_CODE ' +
          'SYSRES_CONST_AUTOTEXT_USAGE_ALL ' +
          'SYSRES_CONST_AUTOTEXT_USAGE_ALL_CODE ' +
          'SYSRES_CONST_AUTOTEXT_USAGE_SIGN ' +
          'SYSRES_CONST_AUTOTEXT_USAGE_SIGN_CODE ' +
          'SYSRES_CONST_AUTOTEXT_USAGE_WORK ' +
          'SYSRES_CONST_AUTOTEXT_USAGE_WORK_CODE ' +
          'SYSRES_CONST_AUTOTEXT_USE_ANYWHERE_CODE ' +
          'SYSRES_CONST_AUTOTEXT_USE_ON_SIGNING_CODE ' +
          'SYSRES_CONST_AUTOTEXT_USE_ON_WORK_CODE ' +
          'SYSRES_CONST_BEGIN_DATE_REQUISITE_CODE ' +
          'SYSRES_CONST_BLACK_LIFE_CYCLE_STAGE_FONT_COLOR ' +
          'SYSRES_CONST_BLUE_LIFE_CYCLE_STAGE_FONT_COLOR ' +
          'SYSRES_CONST_BTN_PART ' +
          'SYSRES_CONST_CALCULATED_ROLE_TYPE_CODE ' +
          'SYSRES_CONST_CALL_TYPE_VARIABLE_BUTTON_VALUE ' +
          'SYSRES_CONST_CALL_TYPE_VARIABLE_PROGRAM_VALUE ' +
          'SYSRES_CONST_CANCEL_MESSAGE_FUNCTION_RESULT ' +
          'SYSRES_CONST_CARD_PART ' +
          'SYSRES_CONST_CARD_REFERENCE_MODE_NAME ' +
          'SYSRES_CONST_CERTIFICATE_TYPE_REQUISITE_ENCRYPT_VALUE ' +
          'SYSRES_CONST_CERTIFICATE_TYPE_REQUISITE_SIGN_AND_ENCRYPT_VALUE ' +
          'SYSRES_CONST_CERTIFICATE_TYPE_REQUISITE_SIGN_VALUE ' +
          'SYSRES_CONST_CHECK_PARAM_VALUE_DATE_PARAM_TYPE ' +
          'SYSRES_CONST_CHECK_PARAM_VALUE_FLOAT_PARAM_TYPE ' +
          'SYSRES_CONST_CHECK_PARAM_VALUE_INTEGER_PARAM_TYPE ' +
          'SYSRES_CONST_CHECK_PARAM_VALUE_PICK_PARAM_TYPE ' +
          'SYSRES_CONST_CHECK_PARAM_VALUE_REEFRENCE_PARAM_TYPE ' +
          'SYSRES_CONST_CLOSED_RECORD_FLAG_VALUE_FEMININE ' +
          'SYSRES_CONST_CLOSED_RECORD_FLAG_VALUE_MASCULINE ' +
          'SYSRES_CONST_CODE_COMPONENT_TYPE_ADMIN ' +
          'SYSRES_CONST_CODE_COMPONENT_TYPE_DEVELOPER ' +
          'SYSRES_CONST_CODE_COMPONENT_TYPE_DOCS ' +
          'SYSRES_CONST_CODE_COMPONENT_TYPE_EDOC_CARDS ' +
          'SYSRES_CONST_CODE_COMPONENT_TYPE_EXTERNAL_EXECUTABLE ' +
          'SYSRES_CONST_CODE_COMPONENT_TYPE_OTHER ' +
          'SYSRES_CONST_CODE_COMPONENT_TYPE_REFERENCE ' +
          'SYSRES_CONST_CODE_COMPONENT_TYPE_REPORT ' +
          'SYSRES_CONST_CODE_COMPONENT_TYPE_SCRIPT ' +
          'SYSRES_CONST_CODE_COMPONENT_TYPE_URL ' +
          'SYSRES_CONST_CODE_REQUISITE_ACCESS ' +
          'SYSRES_CONST_CODE_REQUISITE_CODE ' +
          'SYSRES_CONST_CODE_REQUISITE_COMPONENT ' +
          'SYSRES_CONST_CODE_REQUISITE_DESCRIPTION ' +
          'SYSRES_CONST_CODE_REQUISITE_EXCLUDE_COMPONENT ' +
          'SYSRES_CONST_CODE_REQUISITE_RECORD ' +
          'SYSRES_CONST_COMMENT_REQ_CODE ' +
          'SYSRES_CONST_COMMON_SETTINGS_REQUISITE_CODE ' +
          'SYSRES_CONST_COMP_CODE_GRD ' +
          'SYSRES_CONST_COMPONENT_GROUP_TYPE_REQUISITE_CODE ' +
          'SYSRES_CONST_COMPONENT_TYPE_ADMIN_COMPONENTS ' +
          'SYSRES_CONST_COMPONENT_TYPE_DEVELOPER_COMPONENTS ' +
          'SYSRES_CONST_COMPONENT_TYPE_DOCS ' +
          'SYSRES_CONST_COMPONENT_TYPE_EDOC_CARDS ' +
          'SYSRES_CONST_COMPONENT_TYPE_EDOCS ' +
          'SYSRES_CONST_COMPONENT_TYPE_EXTERNAL_EXECUTABLE ' +
          'SYSRES_CONST_COMPONENT_TYPE_OTHER ' +
          'SYSRES_CONST_COMPONENT_TYPE_REFERENCE_TYPES ' +
          'SYSRES_CONST_COMPONENT_TYPE_REFERENCES ' +
          'SYSRES_CONST_COMPONENT_TYPE_REPORTS ' +
          'SYSRES_CONST_COMPONENT_TYPE_SCRIPTS ' +
          'SYSRES_CONST_COMPONENT_TYPE_URL ' +
          'SYSRES_CONST_COMPONENTS_REMOTE_SERVERS_VIEW_CODE ' +
          'SYSRES_CONST_CONDITION_BLOCK_DESCRIPTION ' +
          'SYSRES_CONST_CONST_FIRM_STATUS_COMMON ' +
          'SYSRES_CONST_CONST_FIRM_STATUS_INDIVIDUAL ' +
          'SYSRES_CONST_CONST_NEGATIVE_VALUE ' +
          'SYSRES_CONST_CONST_POSITIVE_VALUE ' +
          'SYSRES_CONST_CONST_SERVER_STATUS_DONT_REPLICATE ' +
          'SYSRES_CONST_CONST_SERVER_STATUS_REPLICATE ' +
          'SYSRES_CONST_CONTENTS_REQUISITE_CODE ' +
          'SYSRES_CONST_DATA_TYPE_BOOLEAN ' +
          'SYSRES_CONST_DATA_TYPE_DATE ' +
          'SYSRES_CONST_DATA_TYPE_FLOAT ' +
          'SYSRES_CONST_DATA_TYPE_INTEGER ' +
          'SYSRES_CONST_DATA_TYPE_PICK ' +
          'SYSRES_CONST_DATA_TYPE_REFERENCE ' +
          'SYSRES_CONST_DATA_TYPE_STRING ' +
          'SYSRES_CONST_DATA_TYPE_TEXT ' +
          'SYSRES_CONST_DATA_TYPE_VARIANT ' +
          'SYSRES_CONST_DATE_CLOSE_REQ_CODE ' +
          'SYSRES_CONST_DATE_FORMAT_DATE_ONLY_CHAR ' +
          'SYSRES_CONST_DATE_OPEN_REQ_CODE ' +
          'SYSRES_CONST_DATE_REQUISITE ' +
          'SYSRES_CONST_DATE_REQUISITE_CODE ' +
          'SYSRES_CONST_DATE_REQUISITE_NAME ' +
          'SYSRES_CONST_DATE_REQUISITE_TYPE ' +
          'SYSRES_CONST_DATE_TYPE_CHAR ' +
          'SYSRES_CONST_DATETIME_FORMAT_VALUE ' +
          'SYSRES_CONST_DEA_ACCESS_RIGHTS_ACTION_CODE ' +
          'SYSRES_CONST_DESCRIPTION_LOCALIZE_ID_REQUISITE_CODE ' +
          'SYSRES_CONST_DESCRIPTION_REQUISITE_CODE ' +
          'SYSRES_CONST_DET1_PART ' +
          'SYSRES_CONST_DET2_PART ' +
          'SYSRES_CONST_DET3_PART ' +
          'SYSRES_CONST_DET4_PART ' +
          'SYSRES_CONST_DET5_PART ' +
          'SYSRES_CONST_DET6_PART ' +
          'SYSRES_CONST_DETAIL_DATASET_KEY_REQUISITE_CODE ' +
          'SYSRES_CONST_DETAIL_PICK_REQUISITE_CODE ' +
          'SYSRES_CONST_DETAIL_REQ_CODE ' +
          'SYSRES_CONST_DO_NOT_USE_ACCESS_TYPE_CODE ' +
          'SYSRES_CONST_DO_NOT_USE_ACCESS_TYPE_NAME ' +
          'SYSRES_CONST_DO_NOT_USE_ON_VIEW_ACCESS_TYPE_CODE ' +
          'SYSRES_CONST_DO_NOT_USE_ON_VIEW_ACCESS_TYPE_NAME ' +
          'SYSRES_CONST_DOCUMENT_STORAGES_CODE ' +
          'SYSRES_CONST_DOCUMENT_TEMPLATES_TYPE_NAME ' +
          'SYSRES_CONST_DOUBLE_REQUISITE_CODE ' +
          'SYSRES_CONST_EDITOR_CLOSE_FILE_OBSERV_TYPE_CODE ' +
          'SYSRES_CONST_EDITOR_CLOSE_PROCESS_OBSERV_TYPE_CODE ' +
          'SYSRES_CONST_EDITOR_TYPE_REQUISITE_CODE ' +
          'SYSRES_CONST_EDITORS_APPLICATION_NAME_REQUISITE_CODE ' +
          'SYSRES_CONST_EDITORS_CREATE_SEVERAL_PROCESSES_REQUISITE_CODE ' +
          'SYSRES_CONST_EDITORS_EXTENSION_REQUISITE_CODE ' +
          'SYSRES_CONST_EDITORS_OBSERVER_BY_PROCESS_TYPE ' +
          'SYSRES_CONST_EDITORS_REFERENCE_CODE ' +
          'SYSRES_CONST_EDITORS_REPLACE_SPEC_CHARS_REQUISITE_CODE ' +
          'SYSRES_CONST_EDITORS_USE_PLUGINS_REQUISITE_CODE ' +
          'SYSRES_CONST_EDITORS_VIEW_DOCUMENT_OPENED_TO_EDIT_CODE ' +
          'SYSRES_CONST_EDOC_CARD_TYPE_REQUISITE_CODE ' +
          'SYSRES_CONST_EDOC_CARD_TYPES_LINK_REQUISITE_CODE ' +
          'SYSRES_CONST_EDOC_CERTIFICATE_AND_PASSWORD_ENCODE_CODE ' +
          'SYSRES_CONST_EDOC_CERTIFICATE_ENCODE_CODE ' +
          'SYSRES_CONST_EDOC_DATE_REQUISITE_CODE ' +
          'SYSRES_CONST_EDOC_KIND_REFERENCE_CODE ' +
          'SYSRES_CONST_EDOC_KINDS_BY_TEMPLATE_ACTION_CODE ' +
          'SYSRES_CONST_EDOC_MANAGE_ACCESS_CODE ' +
          'SYSRES_CONST_EDOC_NONE_ENCODE_CODE ' +
          'SYSRES_CONST_EDOC_NUMBER_REQUISITE_CODE ' +
          'SYSRES_CONST_EDOC_PASSWORD_ENCODE_CODE ' +
          'SYSRES_CONST_EDOC_READONLY_ACCESS_CODE ' +
          'SYSRES_CONST_EDOC_SHELL_LIFE_TYPE_VIEW_VALUE ' +
          'SYSRES_CONST_EDOC_SIZE_RESTRICTION_PRIORITY_REQUISITE_CODE ' +
          'SYSRES_CONST_EDOC_STORAGE_CHECK_ACCESS_RIGHTS_REQUISITE_CODE ' +
          'SYSRES_CONST_EDOC_STORAGE_COMPUTER_NAME_REQUISITE_CODE ' +
          'SYSRES_CONST_EDOC_STORAGE_DATABASE_NAME_REQUISITE_CODE ' +
          'SYSRES_CONST_EDOC_STORAGE_EDIT_IN_STORAGE_REQUISITE_CODE ' +
          'SYSRES_CONST_EDOC_STORAGE_LOCAL_PATH_REQUISITE_CODE ' +
          'SYSRES_CONST_EDOC_STORAGE_SHARED_SOURCE_NAME_REQUISITE_CODE ' +
          'SYSRES_CONST_EDOC_TEMPLATE_REQUISITE_CODE ' +
          'SYSRES_CONST_EDOC_TYPES_REFERENCE_CODE ' +
          'SYSRES_CONST_EDOC_VERSION_ACTIVE_STAGE_CODE ' +
          'SYSRES_CONST_EDOC_VERSION_DESIGN_STAGE_CODE ' +
          'SYSRES_CONST_EDOC_VERSION_OBSOLETE_STAGE_CODE ' +
          'SYSRES_CONST_EDOC_WRITE_ACCES_CODE ' +
          'SYSRES_CONST_EDOCUMENT_CARD_REQUISITES_REFERENCE_CODE_SELECTED_REQUISITE ' +
          'SYSRES_CONST_ENCODE_CERTIFICATE_TYPE_CODE ' +
          'SYSRES_CONST_END_DATE_REQUISITE_CODE ' +
          'SYSRES_CONST_ENUMERATION_TYPE_REQUISITE_CODE ' +
          'SYSRES_CONST_EXECUTE_ACCESS_RIGHTS_TYPE_CODE ' +
          'SYSRES_CONST_EXECUTIVE_FILE_STORAGE_TYPE ' +
          'SYSRES_CONST_EXIST_CONST ' +
          'SYSRES_CONST_EXIST_VALUE ' +
          'SYSRES_CONST_EXPORT_LOCK_TYPE_ASK ' +
          'SYSRES_CONST_EXPORT_LOCK_TYPE_WITH_LOCK ' +
          'SYSRES_CONST_EXPORT_LOCK_TYPE_WITHOUT_LOCK ' +
          'SYSRES_CONST_EXPORT_VERSION_TYPE_ASK ' +
          'SYSRES_CONST_EXPORT_VERSION_TYPE_LAST ' +
          'SYSRES_CONST_EXPORT_VERSION_TYPE_LAST_ACTIVE ' +
          'SYSRES_CONST_EXTENSION_REQUISITE_CODE ' +
          'SYSRES_CONST_FILTER_NAME_REQUISITE_CODE ' +
          'SYSRES_CONST_FILTER_REQUISITE_CODE ' +
          'SYSRES_CONST_FILTER_TYPE_COMMON_CODE ' +
          'SYSRES_CONST_FILTER_TYPE_COMMON_NAME ' +
          'SYSRES_CONST_FILTER_TYPE_USER_CODE ' +
          'SYSRES_CONST_FILTER_TYPE_USER_NAME ' +
          'SYSRES_CONST_FILTER_VALUE_REQUISITE_NAME ' +
          'SYSRES_CONST_FLOAT_NUMBER_FORMAT_CHAR ' +
          'SYSRES_CONST_FLOAT_REQUISITE_TYPE ' +
          'SYSRES_CONST_FOLDER_AUTHOR_VALUE ' +
          'SYSRES_CONST_FOLDER_KIND_ANY_OBJECTS ' +
          'SYSRES_CONST_FOLDER_KIND_COMPONENTS ' +
          'SYSRES_CONST_FOLDER_KIND_EDOCS ' +
          'SYSRES_CONST_FOLDER_KIND_JOBS ' +
          'SYSRES_CONST_FOLDER_KIND_TASKS ' +
          'SYSRES_CONST_FOLDER_TYPE_COMMON ' +
          'SYSRES_CONST_FOLDER_TYPE_COMPONENT ' +
          'SYSRES_CONST_FOLDER_TYPE_FAVORITES ' +
          'SYSRES_CONST_FOLDER_TYPE_INBOX ' +
          'SYSRES_CONST_FOLDER_TYPE_OUTBOX ' +
          'SYSRES_CONST_FOLDER_TYPE_QUICK_LAUNCH ' +
          'SYSRES_CONST_FOLDER_TYPE_SEARCH ' +
          'SYSRES_CONST_FOLDER_TYPE_SHORTCUTS ' +
          'SYSRES_CONST_FOLDER_TYPE_USER ' +
          'SYSRES_CONST_FROM_DICTIONARY_ENUM_METHOD_FLAG ' +
          'SYSRES_CONST_FULL_SUBSTITUTE_TYPE ' +
          'SYSRES_CONST_FULL_SUBSTITUTE_TYPE_CODE ' +
          'SYSRES_CONST_FUNCTION_CANCEL_RESULT ' +
          'SYSRES_CONST_FUNCTION_CATEGORY_SYSTEM ' +
          'SYSRES_CONST_FUNCTION_CATEGORY_USER ' +
          'SYSRES_CONST_FUNCTION_FAILURE_RESULT ' +
          'SYSRES_CONST_FUNCTION_SAVE_RESULT ' +
          'SYSRES_CONST_GENERATED_REQUISITE ' +
          'SYSRES_CONST_GREEN_LIFE_CYCLE_STAGE_FONT_COLOR ' +
          'SYSRES_CONST_GROUP_ACCOUNT_TYPE_VALUE_CODE ' +
          'SYSRES_CONST_GROUP_CATEGORY_NORMAL_CODE ' +
          'SYSRES_CONST_GROUP_CATEGORY_NORMAL_NAME ' +
          'SYSRES_CONST_GROUP_CATEGORY_SERVICE_CODE ' +
          'SYSRES_CONST_GROUP_CATEGORY_SERVICE_NAME ' +
          'SYSRES_CONST_GROUP_COMMON_CATEGORY_FIELD_VALUE ' +
          'SYSRES_CONST_GROUP_FULL_NAME_REQUISITE_CODE ' +
          'SYSRES_CONST_GROUP_NAME_REQUISITE_CODE ' +
          'SYSRES_CONST_GROUP_RIGHTS_T_REQUISITE_CODE ' +
          'SYSRES_CONST_GROUP_SERVER_CODES_REQUISITE_CODE ' +
          'SYSRES_CONST_GROUP_SERVER_NAME_REQUISITE_CODE ' +
          'SYSRES_CONST_GROUP_SERVICE_CATEGORY_FIELD_VALUE ' +
          'SYSRES_CONST_GROUP_USER_REQUISITE_CODE ' +
          'SYSRES_CONST_GROUPS_REFERENCE_CODE ' +
          'SYSRES_CONST_GROUPS_REQUISITE_CODE ' +
          'SYSRES_CONST_HIDDEN_MODE_NAME ' +
          'SYSRES_CONST_HIGH_LVL_REQUISITE_CODE ' +
          'SYSRES_CONST_HISTORY_ACTION_CREATE_CODE ' +
          'SYSRES_CONST_HISTORY_ACTION_DELETE_CODE ' +
          'SYSRES_CONST_HISTORY_ACTION_EDIT_CODE ' +
          'SYSRES_CONST_HOUR_CHAR ' +
          'SYSRES_CONST_ID_REQUISITE_CODE ' +
          'SYSRES_CONST_IDSPS_REQUISITE_CODE ' +
          'SYSRES_CONST_IMAGE_MODE_COLOR ' +
          'SYSRES_CONST_IMAGE_MODE_GREYSCALE ' +
          'SYSRES_CONST_IMAGE_MODE_MONOCHROME ' +
          'SYSRES_CONST_IMPORTANCE_HIGH ' +
          'SYSRES_CONST_IMPORTANCE_LOW ' +
          'SYSRES_CONST_IMPORTANCE_NORMAL ' +
          'SYSRES_CONST_IN_DESIGN_VERSION_STATE_PICK_VALUE ' +
          'SYSRES_CONST_INCOMING_WORK_RULE_TYPE_CODE ' +
          'SYSRES_CONST_INT_REQUISITE ' +
          'SYSRES_CONST_INT_REQUISITE_TYPE ' +
          'SYSRES_CONST_INTEGER_NUMBER_FORMAT_CHAR ' +
          'SYSRES_CONST_INTEGER_TYPE_CHAR ' +
          'SYSRES_CONST_IS_GENERATED_REQUISITE_NEGATIVE_VALUE ' +
          'SYSRES_CONST_IS_PUBLIC_ROLE_REQUISITE_CODE ' +
          'SYSRES_CONST_IS_REMOTE_USER_NEGATIVE_VALUE ' +
          'SYSRES_CONST_IS_REMOTE_USER_POSITIVE_VALUE ' +
          'SYSRES_CONST_IS_STORED_REQUISITE_NEGATIVE_VALUE ' +
          'SYSRES_CONST_IS_STORED_REQUISITE_STORED_VALUE ' +
          'SYSRES_CONST_ITALIC_LIFE_CYCLE_STAGE_DRAW_STYLE ' +
          'SYSRES_CONST_JOB_BLOCK_DESCRIPTION ' +
          'SYSRES_CONST_JOB_KIND_CONTROL_JOB ' +
          'SYSRES_CONST_JOB_KIND_JOB ' +
          'SYSRES_CONST_JOB_KIND_NOTICE ' +
          'SYSRES_CONST_JOB_STATE_ABORTED ' +
          'SYSRES_CONST_JOB_STATE_COMPLETE ' +
          'SYSRES_CONST_JOB_STATE_WORKING ' +
          'SYSRES_CONST_KIND_REQUISITE_CODE ' +
          'SYSRES_CONST_KIND_REQUISITE_NAME ' +
          'SYSRES_CONST_KINDS_CREATE_SHADOW_COPIES_REQUISITE_CODE ' +
          'SYSRES_CONST_KINDS_DEFAULT_EDOC_LIFE_STAGE_REQUISITE_CODE ' +
          'SYSRES_CONST_KINDS_EDOC_ALL_TEPLATES_ALLOWED_REQUISITE_CODE ' +
          'SYSRES_CONST_KINDS_EDOC_ALLOW_LIFE_CYCLE_STAGE_CHANGING_REQUISITE_CODE ' +
          'SYSRES_CONST_KINDS_EDOC_ALLOW_MULTIPLE_ACTIVE_VERSIONS_REQUISITE_CODE ' +
          'SYSRES_CONST_KINDS_EDOC_SHARE_ACCES_RIGHTS_BY_DEFAULT_CODE ' +
          'SYSRES_CONST_KINDS_EDOC_TEMPLATE_REQUISITE_CODE ' +
          'SYSRES_CONST_KINDS_EDOC_TYPE_REQUISITE_CODE ' +
          'SYSRES_CONST_KINDS_SIGNERS_REQUISITES_CODE ' +
          'SYSRES_CONST_KOD_INPUT_TYPE ' +
          'SYSRES_CONST_LAST_UPDATE_DATE_REQUISITE_CODE ' +
          'SYSRES_CONST_LIFE_CYCLE_START_STAGE_REQUISITE_CODE ' +
          'SYSRES_CONST_LILAC_LIFE_CYCLE_STAGE_FONT_COLOR ' +
          'SYSRES_CONST_LINK_OBJECT_KIND_COMPONENT ' +
          'SYSRES_CONST_LINK_OBJECT_KIND_DOCUMENT ' +
          'SYSRES_CONST_LINK_OBJECT_KIND_EDOC ' +
          'SYSRES_CONST_LINK_OBJECT_KIND_FOLDER ' +
          'SYSRES_CONST_LINK_OBJECT_KIND_JOB ' +
          'SYSRES_CONST_LINK_OBJECT_KIND_REFERENCE ' +
          'SYSRES_CONST_LINK_OBJECT_KIND_TASK ' +
          'SYSRES_CONST_LINK_REF_TYPE_REQUISITE_CODE ' +
          'SYSRES_CONST_LIST_REFERENCE_MODE_NAME ' +
          'SYSRES_CONST_LOCALIZATION_DICTIONARY_MAIN_VIEW_CODE ' +
          'SYSRES_CONST_MAIN_VIEW_CODE ' +
          'SYSRES_CONST_MANUAL_ENUM_METHOD_FLAG ' +
          'SYSRES_CONST_MASTER_COMP_TYPE_REQUISITE_CODE ' +
          'SYSRES_CONST_MASTER_TABLE_REC_ID_REQUISITE_CODE ' +
          'SYSRES_CONST_MAXIMIZED_MODE_NAME ' +
          'SYSRES_CONST_ME_VALUE ' +
          'SYSRES_CONST_MESSAGE_ATTENTION_CAPTION ' +
          'SYSRES_CONST_MESSAGE_CONFIRMATION_CAPTION ' +
          'SYSRES_CONST_MESSAGE_ERROR_CAPTION ' +
          'SYSRES_CONST_MESSAGE_INFORMATION_CAPTION ' +
          'SYSRES_CONST_MINIMIZED_MODE_NAME ' +
          'SYSRES_CONST_MINUTE_CHAR ' +
          'SYSRES_CONST_MODULE_REQUISITE_CODE ' +
          'SYSRES_CONST_MONITORING_BLOCK_DESCRIPTION ' +
          'SYSRES_CONST_MONTH_FORMAT_VALUE ' +
          'SYSRES_CONST_NAME_LOCALIZE_ID_REQUISITE_CODE ' +
          'SYSRES_CONST_NAME_REQUISITE_CODE ' +
          'SYSRES_CONST_NAME_SINGULAR_REQUISITE_CODE ' +
          'SYSRES_CONST_NAMEAN_INPUT_TYPE ' +
          'SYSRES_CONST_NEGATIVE_PICK_VALUE ' +
          'SYSRES_CONST_NEGATIVE_VALUE ' +
          'SYSRES_CONST_NO ' +
          'SYSRES_CONST_NO_PICK_VALUE ' +
          'SYSRES_CONST_NO_SIGNATURE_REQUISITE_CODE ' +
          'SYSRES_CONST_NO_VALUE ' +
          'SYSRES_CONST_NONE_ACCESS_RIGHTS_TYPE_CODE ' +
          'SYSRES_CONST_NONOPERATING_RECORD_FLAG_VALUE ' +
          'SYSRES_CONST_NONOPERATING_RECORD_FLAG_VALUE_MASCULINE ' +
          'SYSRES_CONST_NORMAL_ACCESS_RIGHTS_TYPE_CODE ' +
          'SYSRES_CONST_NORMAL_LIFE_CYCLE_STAGE_DRAW_STYLE ' +
          'SYSRES_CONST_NORMAL_MODE_NAME ' +
          'SYSRES_CONST_NOT_ALLOWED_ACCESS_TYPE_CODE ' +
          'SYSRES_CONST_NOT_ALLOWED_ACCESS_TYPE_NAME ' +
          'SYSRES_CONST_NOTE_REQUISITE_CODE ' +
          'SYSRES_CONST_NOTICE_BLOCK_DESCRIPTION ' +
          'SYSRES_CONST_NUM_REQUISITE ' +
          'SYSRES_CONST_NUM_STR_REQUISITE_CODE ' +
          'SYSRES_CONST_NUMERATION_AUTO_NOT_STRONG ' +
          'SYSRES_CONST_NUMERATION_AUTO_STRONG ' +
          'SYSRES_CONST_NUMERATION_FROM_DICTONARY ' +
          'SYSRES_CONST_NUMERATION_MANUAL ' +
          'SYSRES_CONST_NUMERIC_TYPE_CHAR ' +
          'SYSRES_CONST_NUMREQ_REQUISITE_CODE ' +
          'SYSRES_CONST_OBSOLETE_VERSION_STATE_PICK_VALUE ' +
          'SYSRES_CONST_OPERATING_RECORD_FLAG_VALUE ' +
          'SYSRES_CONST_OPERATING_RECORD_FLAG_VALUE_CODE ' +
          'SYSRES_CONST_OPERATING_RECORD_FLAG_VALUE_FEMININE ' +
          'SYSRES_CONST_OPERATING_RECORD_FLAG_VALUE_MASCULINE ' +
          'SYSRES_CONST_OPTIONAL_FORM_COMP_REQCODE_PREFIX ' +
          'SYSRES_CONST_ORANGE_LIFE_CYCLE_STAGE_FONT_COLOR ' +
          'SYSRES_CONST_ORIGINALREF_REQUISITE_CODE ' +
          'SYSRES_CONST_OURFIRM_REF_CODE ' +
          'SYSRES_CONST_OURFIRM_REQUISITE_CODE ' +
          'SYSRES_CONST_OURFIRM_VAR ' +
          'SYSRES_CONST_OUTGOING_WORK_RULE_TYPE_CODE ' +
          'SYSRES_CONST_PICK_NEGATIVE_RESULT ' +
          'SYSRES_CONST_PICK_POSITIVE_RESULT ' +
          'SYSRES_CONST_PICK_REQUISITE ' +
          'SYSRES_CONST_PICK_REQUISITE_TYPE ' +
          'SYSRES_CONST_PICK_TYPE_CHAR ' +
          'SYSRES_CONST_PLAN_STATUS_REQUISITE_CODE ' +
          'SYSRES_CONST_PLATFORM_VERSION_COMMENT ' +
          'SYSRES_CONST_PLUGINS_SETTINGS_DESCRIPTION_REQUISITE_CODE ' +
          'SYSRES_CONST_POSITIVE_PICK_VALUE ' +
          'SYSRES_CONST_POWER_TO_CREATE_ACTION_CODE ' +
          'SYSRES_CONST_POWER_TO_SIGN_ACTION_CODE ' +
          'SYSRES_CONST_PRIORITY_REQUISITE_CODE ' +
          'SYSRES_CONST_QUALIFIED_TASK_TYPE ' +
          'SYSRES_CONST_QUALIFIED_TASK_TYPE_CODE ' +
          'SYSRES_CONST_RECSTAT_REQUISITE_CODE ' +
          'SYSRES_CONST_RED_LIFE_CYCLE_STAGE_FONT_COLOR ' +
          'SYSRES_CONST_REF_ID_T_REF_TYPE_REQUISITE_CODE ' +
          'SYSRES_CONST_REF_REQUISITE ' +
          'SYSRES_CONST_REF_REQUISITE_TYPE ' +
          'SYSRES_CONST_REF_REQUISITES_REFERENCE_CODE_SELECTED_REQUISITE ' +
          'SYSRES_CONST_REFERENCE_RECORD_HISTORY_CREATE_ACTION_CODE ' +
          'SYSRES_CONST_REFERENCE_RECORD_HISTORY_DELETE_ACTION_CODE ' +
          'SYSRES_CONST_REFERENCE_RECORD_HISTORY_MODIFY_ACTION_CODE ' +
          'SYSRES_CONST_REFERENCE_TYPE_CHAR ' +
          'SYSRES_CONST_REFERENCE_TYPE_REQUISITE_NAME ' +
          'SYSRES_CONST_REFERENCES_ADD_PARAMS_REQUISITE_CODE ' +
          'SYSRES_CONST_REFERENCES_DISPLAY_REQUISITE_REQUISITE_CODE ' +
          'SYSRES_CONST_REMOTE_SERVER_STATUS_WORKING ' +
          'SYSRES_CONST_REMOTE_SERVER_TYPE_MAIN ' +
          'SYSRES_CONST_REMOTE_SERVER_TYPE_SECONDARY ' +
          'SYSRES_CONST_REMOTE_USER_FLAG_VALUE_CODE ' +
          'SYSRES_CONST_REPORT_APP_EDITOR_INTERNAL ' +
          'SYSRES_CONST_REPORT_BASE_REPORT_ID_REQUISITE_CODE ' +
          'SYSRES_CONST_REPORT_BASE_REPORT_REQUISITE_CODE ' +
          'SYSRES_CONST_REPORT_SCRIPT_REQUISITE_CODE ' +
          'SYSRES_CONST_REPORT_TEMPLATE_REQUISITE_CODE ' +
          'SYSRES_CONST_REPORT_VIEWER_CODE_REQUISITE_CODE ' +
          'SYSRES_CONST_REQ_ALLOW_COMPONENT_DEFAULT_VALUE ' +
          'SYSRES_CONST_REQ_ALLOW_RECORD_DEFAULT_VALUE ' +
          'SYSRES_CONST_REQ_ALLOW_SERVER_COMPONENT_DEFAULT_VALUE ' +
          'SYSRES_CONST_REQ_MODE_AVAILABLE_CODE ' +
          'SYSRES_CONST_REQ_MODE_EDIT_CODE ' +
          'SYSRES_CONST_REQ_MODE_HIDDEN_CODE ' +
          'SYSRES_CONST_REQ_MODE_NOT_AVAILABLE_CODE ' +
          'SYSRES_CONST_REQ_MODE_VIEW_CODE ' +
          'SYSRES_CONST_REQ_NUMBER_REQUISITE_CODE ' +
          'SYSRES_CONST_REQ_SECTION_VALUE ' +
          'SYSRES_CONST_REQ_TYPE_VALUE ' +
          'SYSRES_CONST_REQUISITE_FORMAT_BY_UNIT ' +
          'SYSRES_CONST_REQUISITE_FORMAT_DATE_FULL ' +
          'SYSRES_CONST_REQUISITE_FORMAT_DATE_TIME ' +
          'SYSRES_CONST_REQUISITE_FORMAT_LEFT ' +
          'SYSRES_CONST_REQUISITE_FORMAT_RIGHT ' +
          'SYSRES_CONST_REQUISITE_FORMAT_WITHOUT_UNIT ' +
          'SYSRES_CONST_REQUISITE_NUMBER_REQUISITE_CODE ' +
          'SYSRES_CONST_REQUISITE_SECTION_ACTIONS ' +
          'SYSRES_CONST_REQUISITE_SECTION_BUTTON ' +
          'SYSRES_CONST_REQUISITE_SECTION_BUTTONS ' +
          'SYSRES_CONST_REQUISITE_SECTION_CARD ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE10 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE11 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE12 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE13 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE14 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE15 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE16 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE17 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE18 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE19 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE2 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE20 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE21 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE22 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE23 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE24 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE3 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE4 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE5 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE6 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE7 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE8 ' +
          'SYSRES_CONST_REQUISITE_SECTION_TABLE9 ' +
          'SYSRES_CONST_REQUISITES_PSEUDOREFERENCE_REQUISITE_NUMBER_REQUISITE_CODE ' +
          'SYSRES_CONST_RIGHT_ALIGNMENT_CODE ' +
          'SYSRES_CONST_ROLES_REFERENCE_CODE ' +
          'SYSRES_CONST_ROUTE_STEP_AFTER_RUS ' +
          'SYSRES_CONST_ROUTE_STEP_AND_CONDITION_RUS ' +
          'SYSRES_CONST_ROUTE_STEP_OR_CONDITION_RUS ' +
          'SYSRES_CONST_ROUTE_TYPE_COMPLEX ' +
          'SYSRES_CONST_ROUTE_TYPE_PARALLEL ' +
          'SYSRES_CONST_ROUTE_TYPE_SERIAL ' +
          'SYSRES_CONST_SBDATASETDESC_NEGATIVE_VALUE ' +
          'SYSRES_CONST_SBDATASETDESC_POSITIVE_VALUE ' +
          'SYSRES_CONST_SBVIEWSDESC_POSITIVE_VALUE ' +
          'SYSRES_CONST_SCRIPT_BLOCK_DESCRIPTION ' +
          'SYSRES_CONST_SEARCH_BY_TEXT_REQUISITE_CODE ' +
          'SYSRES_CONST_SEARCHES_COMPONENT_CONTENT ' +
          'SYSRES_CONST_SEARCHES_CRITERIA_ACTION_NAME ' +
          'SYSRES_CONST_SEARCHES_EDOC_CONTENT ' +
          'SYSRES_CONST_SEARCHES_FOLDER_CONTENT ' +
          'SYSRES_CONST_SEARCHES_JOB_CONTENT ' +
          'SYSRES_CONST_SEARCHES_REFERENCE_CODE ' +
          'SYSRES_CONST_SEARCHES_TASK_CONTENT ' +
          'SYSRES_CONST_SECOND_CHAR ' +
          'SYSRES_CONST_SECTION_REQUISITE_ACTIONS_VALUE ' +
          'SYSRES_CONST_SECTION_REQUISITE_CARD_VALUE ' +
          'SYSRES_CONST_SECTION_REQUISITE_CODE ' +
          'SYSRES_CONST_SECTION_REQUISITE_DETAIL_1_VALUE ' +
          'SYSRES_CONST_SECTION_REQUISITE_DETAIL_2_VALUE ' +
          'SYSRES_CONST_SECTION_REQUISITE_DETAIL_3_VALUE ' +
          'SYSRES_CONST_SECTION_REQUISITE_DETAIL_4_VALUE ' +
          'SYSRES_CONST_SECTION_REQUISITE_DETAIL_5_VALUE ' +
          'SYSRES_CONST_SECTION_REQUISITE_DETAIL_6_VALUE ' +
          'SYSRES_CONST_SELECT_REFERENCE_MODE_NAME ' +
          'SYSRES_CONST_SELECT_TYPE_SELECTABLE ' +
          'SYSRES_CONST_SELECT_TYPE_SELECTABLE_ONLY_CHILD ' +
          'SYSRES_CONST_SELECT_TYPE_SELECTABLE_WITH_CHILD ' +
          'SYSRES_CONST_SELECT_TYPE_UNSLECTABLE ' +
          'SYSRES_CONST_SERVER_TYPE_MAIN ' +
          'SYSRES_CONST_SERVICE_USER_CATEGORY_FIELD_VALUE ' +
          'SYSRES_CONST_SETTINGS_USER_REQUISITE_CODE ' +
          'SYSRES_CONST_SIGNATURE_AND_ENCODE_CERTIFICATE_TYPE_CODE ' +
          'SYSRES_CONST_SIGNATURE_CERTIFICATE_TYPE_CODE ' +
          'SYSRES_CONST_SINGULAR_TITLE_REQUISITE_CODE ' +
          'SYSRES_CONST_SQL_SERVER_AUTHENTIFICATION_FLAG_VALUE_CODE ' +
          'SYSRES_CONST_SQL_SERVER_ENCODE_AUTHENTIFICATION_FLAG_VALUE_CODE ' +
          'SYSRES_CONST_STANDART_ROUTE_REFERENCE_CODE ' +
          'SYSRES_CONST_STANDART_ROUTE_REFERENCE_COMMENT_REQUISITE_CODE ' +
          'SYSRES_CONST_STANDART_ROUTES_GROUPS_REFERENCE_CODE ' +
          'SYSRES_CONST_STATE_REQ_NAME ' +
          'SYSRES_CONST_STATE_REQUISITE_ACTIVE_VALUE ' +
          'SYSRES_CONST_STATE_REQUISITE_CLOSED_VALUE ' +
          'SYSRES_CONST_STATE_REQUISITE_CODE ' +
          'SYSRES_CONST_STATIC_ROLE_TYPE_CODE ' +
          'SYSRES_CONST_STATUS_PLAN_DEFAULT_VALUE ' +
          'SYSRES_CONST_STATUS_VALUE_AUTOCLEANING ' +
          'SYSRES_CONST_STATUS_VALUE_BLUE_SQUARE ' +
          'SYSRES_CONST_STATUS_VALUE_COMPLETE ' +
          'SYSRES_CONST_STATUS_VALUE_GREEN_SQUARE ' +
          'SYSRES_CONST_STATUS_VALUE_ORANGE_SQUARE ' +
          'SYSRES_CONST_STATUS_VALUE_PURPLE_SQUARE ' +
          'SYSRES_CONST_STATUS_VALUE_RED_SQUARE ' +
          'SYSRES_CONST_STATUS_VALUE_SUSPEND ' +
          'SYSRES_CONST_STATUS_VALUE_YELLOW_SQUARE ' +
          'SYSRES_CONST_STDROUTE_SHOW_TO_USERS_REQUISITE_CODE ' +
          'SYSRES_CONST_STORAGE_TYPE_FILE ' +
          'SYSRES_CONST_STORAGE_TYPE_SQL_SERVER ' +
          'SYSRES_CONST_STR_REQUISITE ' +
          'SYSRES_CONST_STRIKEOUT_LIFE_CYCLE_STAGE_DRAW_STYLE ' +
          'SYSRES_CONST_STRING_FORMAT_LEFT_ALIGN_CHAR ' +
          'SYSRES_CONST_STRING_FORMAT_RIGHT_ALIGN_CHAR ' +
          'SYSRES_CONST_STRING_REQUISITE_CODE ' +
          'SYSRES_CONST_STRING_REQUISITE_TYPE ' +
          'SYSRES_CONST_STRING_TYPE_CHAR ' +
          'SYSRES_CONST_SUBSTITUTES_PSEUDOREFERENCE_CODE ' +
          'SYSRES_CONST_SUBTASK_BLOCK_DESCRIPTION ' +
          'SYSRES_CONST_SYSTEM_SETTING_CURRENT_USER_PARAM_VALUE ' +
          'SYSRES_CONST_SYSTEM_SETTING_EMPTY_VALUE_PARAM_VALUE ' +
          'SYSRES_CONST_SYSTEM_VERSION_COMMENT ' +
          'SYSRES_CONST_TASK_ACCESS_TYPE_ALL ' +
          'SYSRES_CONST_TASK_ACCESS_TYPE_ALL_MEMBERS ' +
          'SYSRES_CONST_TASK_ACCESS_TYPE_MANUAL ' +
          'SYSRES_CONST_TASK_ENCODE_TYPE_CERTIFICATION ' +
          'SYSRES_CONST_TASK_ENCODE_TYPE_CERTIFICATION_AND_PASSWORD ' +
          'SYSRES_CONST_TASK_ENCODE_TYPE_NONE ' +
          'SYSRES_CONST_TASK_ENCODE_TYPE_PASSWORD ' +
          'SYSRES_CONST_TASK_ROUTE_ALL_CONDITION ' +
          'SYSRES_CONST_TASK_ROUTE_AND_CONDITION ' +
          'SYSRES_CONST_TASK_ROUTE_OR_CONDITION ' +
          'SYSRES_CONST_TASK_STATE_ABORTED ' +
          'SYSRES_CONST_TASK_STATE_COMPLETE ' +
          'SYSRES_CONST_TASK_STATE_CONTINUED ' +
          'SYSRES_CONST_TASK_STATE_CONTROL ' +
          'SYSRES_CONST_TASK_STATE_INIT ' +
          'SYSRES_CONST_TASK_STATE_WORKING ' +
          'SYSRES_CONST_TASK_TITLE ' +
          'SYSRES_CONST_TASK_TYPES_GROUPS_REFERENCE_CODE ' +
          'SYSRES_CONST_TASK_TYPES_REFERENCE_CODE ' +
          'SYSRES_CONST_TEMPLATES_REFERENCE_CODE ' +
          'SYSRES_CONST_TEST_DATE_REQUISITE_NAME ' +
          'SYSRES_CONST_TEST_DEV_DATABASE_NAME ' +
          'SYSRES_CONST_TEST_DEV_SYSTEM_CODE ' +
          'SYSRES_CONST_TEST_EDMS_DATABASE_NAME ' +
          'SYSRES_CONST_TEST_EDMS_MAIN_CODE ' +
          'SYSRES_CONST_TEST_EDMS_MAIN_DB_NAME ' +
          'SYSRES_CONST_TEST_EDMS_SECOND_CODE ' +
          'SYSRES_CONST_TEST_EDMS_SECOND_DB_NAME ' +
          'SYSRES_CONST_TEST_EDMS_SYSTEM_CODE ' +
          'SYSRES_CONST_TEST_NUMERIC_REQUISITE_NAME ' +
          'SYSRES_CONST_TEXT_REQUISITE ' +
          'SYSRES_CONST_TEXT_REQUISITE_CODE ' +
          'SYSRES_CONST_TEXT_REQUISITE_TYPE ' +
          'SYSRES_CONST_TEXT_TYPE_CHAR ' +
          'SYSRES_CONST_TYPE_CODE_REQUISITE_CODE ' +
          'SYSRES_CONST_TYPE_REQUISITE_CODE ' +
          'SYSRES_CONST_UNDEFINED_LIFE_CYCLE_STAGE_FONT_COLOR ' +
          'SYSRES_CONST_UNITS_SECTION_ID_REQUISITE_CODE ' +
          'SYSRES_CONST_UNITS_SECTION_REQUISITE_CODE ' +
          'SYSRES_CONST_UNOPERATING_RECORD_FLAG_VALUE_CODE ' +
          'SYSRES_CONST_UNSTORED_DATA_REQUISITE_CODE ' +
          'SYSRES_CONST_UNSTORED_DATA_REQUISITE_NAME ' +
          'SYSRES_CONST_USE_ACCESS_TYPE_CODE ' +
          'SYSRES_CONST_USE_ACCESS_TYPE_NAME ' +
          'SYSRES_CONST_USER_ACCOUNT_TYPE_VALUE_CODE ' +
          'SYSRES_CONST_USER_ADDITIONAL_INFORMATION_REQUISITE_CODE ' +
          'SYSRES_CONST_USER_AND_GROUP_ID_FROM_PSEUDOREFERENCE_REQUISITE_CODE ' +
          'SYSRES_CONST_USER_CATEGORY_NORMAL ' +
          'SYSRES_CONST_USER_CERTIFICATE_REQUISITE_CODE ' +
          'SYSRES_CONST_USER_CERTIFICATE_STATE_REQUISITE_CODE ' +
          'SYSRES_CONST_USER_CERTIFICATE_SUBJECT_NAME_REQUISITE_CODE ' +
          'SYSRES_CONST_USER_CERTIFICATE_THUMBPRINT_REQUISITE_CODE ' +
          'SYSRES_CONST_USER_COMMON_CATEGORY ' +
          'SYSRES_CONST_USER_COMMON_CATEGORY_CODE ' +
          'SYSRES_CONST_USER_FULL_NAME_REQUISITE_CODE ' +
          'SYSRES_CONST_USER_GROUP_TYPE_REQUISITE_CODE ' +
          'SYSRES_CONST_USER_LOGIN_REQUISITE_CODE ' +
          'SYSRES_CONST_USER_REMOTE_CONTROLLER_REQUISITE_CODE ' +
          'SYSRES_CONST_USER_REMOTE_SYSTEM_REQUISITE_CODE ' +
          'SYSRES_CONST_USER_RIGHTS_T_REQUISITE_CODE ' +
          'SYSRES_CONST_USER_SERVER_NAME_REQUISITE_CODE ' +
          'SYSRES_CONST_USER_SERVICE_CATEGORY ' +
          'SYSRES_CONST_USER_SERVICE_CATEGORY_CODE ' +
          'SYSRES_CONST_USER_STATUS_ADMINISTRATOR_CODE ' +
          'SYSRES_CONST_USER_STATUS_ADMINISTRATOR_NAME ' +
          'SYSRES_CONST_USER_STATUS_DEVELOPER_CODE ' +
          'SYSRES_CONST_USER_STATUS_DEVELOPER_NAME ' +
          'SYSRES_CONST_USER_STATUS_DISABLED_CODE ' +
          'SYSRES_CONST_USER_STATUS_DISABLED_NAME ' +
          'SYSRES_CONST_USER_STATUS_SYSTEM_DEVELOPER_CODE ' +
          'SYSRES_CONST_USER_STATUS_USER_CODE ' +
          'SYSRES_CONST_USER_STATUS_USER_NAME ' +
          'SYSRES_CONST_USER_STATUS_USER_NAME_DEPRECATED ' +
          'SYSRES_CONST_USER_TYPE_FIELD_VALUE_USER ' +
          'SYSRES_CONST_USER_TYPE_REQUISITE_CODE ' +
          'SYSRES_CONST_USERS_CONTROLLER_REQUISITE_CODE ' +
          'SYSRES_CONST_USERS_IS_MAIN_SERVER_REQUISITE_CODE ' +
          'SYSRES_CONST_USERS_REFERENCE_CODE ' +
          'SYSRES_CONST_USERS_REGISTRATION_CERTIFICATES_ACTION_NAME ' +
          'SYSRES_CONST_USERS_REQUISITE_CODE ' +
          'SYSRES_CONST_USERS_SYSTEM_REQUISITE_CODE ' +
          'SYSRES_CONST_USERS_USER_ACCESS_RIGHTS_TYPR_REQUISITE_CODE ' +
          'SYSRES_CONST_USERS_USER_AUTHENTICATION_REQUISITE_CODE ' +
          'SYSRES_CONST_USERS_USER_COMPONENT_REQUISITE_CODE ' +
          'SYSRES_CONST_USERS_USER_GROUP_REQUISITE_CODE ' +
          'SYSRES_CONST_USERS_VIEW_CERTIFICATES_ACTION_NAME ' +
          'SYSRES_CONST_VIEW_DEFAULT_CODE ' +
          'SYSRES_CONST_VIEW_DEFAULT_NAME ' +
          'SYSRES_CONST_VIEWER_REQUISITE_CODE ' +
          'SYSRES_CONST_WAITING_BLOCK_DESCRIPTION ' +
          'SYSRES_CONST_WIZARD_FORM_LABEL_TEST_STRING  ' +
          'SYSRES_CONST_WIZARD_QUERY_PARAM_HEIGHT_ETALON_STRING ' +
          'SYSRES_CONST_WIZARD_REFERENCE_COMMENT_REQUISITE_CODE ' +
          'SYSRES_CONST_WORK_RULES_DESCRIPTION_REQUISITE_CODE ' +
          'SYSRES_CONST_WORK_TIME_CALENDAR_REFERENCE_CODE ' +
          'SYSRES_CONST_WORK_WORKFLOW_HARD_ROUTE_TYPE_VALUE ' +
          'SYSRES_CONST_WORK_WORKFLOW_HARD_ROUTE_TYPE_VALUE_CODE ' +
          'SYSRES_CONST_WORK_WORKFLOW_HARD_ROUTE_TYPE_VALUE_CODE_RUS ' +
          'SYSRES_CONST_WORK_WORKFLOW_SOFT_ROUTE_TYPE_VALUE_CODE_RUS ' +
          'SYSRES_CONST_WORKFLOW_ROUTE_TYPR_HARD ' +
          'SYSRES_CONST_WORKFLOW_ROUTE_TYPR_SOFT ' +
          'SYSRES_CONST_XML_ENCODING ' +
          'SYSRES_CONST_XREC_STAT_REQUISITE_CODE ' +
          'SYSRES_CONST_XRECID_FIELD_NAME ' +
          'SYSRES_CONST_YES ' +
          'SYSRES_CONST_YES_NO_2_REQUISITE_CODE ' +
          'SYSRES_CONST_YES_NO_REQUISITE_CODE ' +
          'SYSRES_CONST_YES_NO_T_REF_TYPE_REQUISITE_CODE ' +
          'SYSRES_CONST_YES_PICK_VALUE ' +
          'SYSRES_CONST_YES_VALUE ';

        // Base constant
        var base_constants = 'CR FALSE nil NO_VALUE NULL TAB TRUE YES_VALUE ';

        // Base group name
        var base_group_name_constants =
          'ADMINISTRATORS_GROUP_NAME CUSTOMIZERS_GROUP_NAME DEVELOPERS_GROUP_NAME SERVICE_USERS_GROUP_NAME ';

        // Decision block properties
        var decision_block_properties_constants =
          'DECISION_BLOCK_FIRST_OPERAND_PROPERTY DECISION_BLOCK_NAME_PROPERTY DECISION_BLOCK_OPERATION_PROPERTY ' +
          'DECISION_BLOCK_RESULT_TYPE_PROPERTY DECISION_BLOCK_SECOND_OPERAND_PROPERTY ';

        // File extension
        var file_extension_constants =
          'ANY_FILE_EXTENTION COMPRESSED_DOCUMENT_EXTENSION EXTENDED_DOCUMENT_EXTENSION ' +
          'SHORT_COMPRESSED_DOCUMENT_EXTENSION SHORT_EXTENDED_DOCUMENT_EXTENSION ';

        // Job block properties
        var job_block_properties_constants =
          'JOB_BLOCK_ABORT_DEADLINE_PROPERTY ' +
          'JOB_BLOCK_AFTER_FINISH_EVENT ' +
          'JOB_BLOCK_AFTER_QUERY_PARAMETERS_EVENT ' +
          'JOB_BLOCK_ATTACHMENT_PROPERTY ' +
          'JOB_BLOCK_ATTACHMENTS_RIGHTS_GROUP_PROPERTY ' +
          'JOB_BLOCK_ATTACHMENTS_RIGHTS_TYPE_PROPERTY ' +
          'JOB_BLOCK_BEFORE_QUERY_PARAMETERS_EVENT ' +
          'JOB_BLOCK_BEFORE_START_EVENT ' +
          'JOB_BLOCK_CREATED_JOBS_PROPERTY ' +
          'JOB_BLOCK_DEADLINE_PROPERTY ' +
          'JOB_BLOCK_EXECUTION_RESULTS_PROPERTY ' +
          'JOB_BLOCK_IS_PARALLEL_PROPERTY ' +
          'JOB_BLOCK_IS_RELATIVE_ABORT_DEADLINE_PROPERTY ' +
          'JOB_BLOCK_IS_RELATIVE_DEADLINE_PROPERTY ' +
          'JOB_BLOCK_JOB_TEXT_PROPERTY ' +
          'JOB_BLOCK_NAME_PROPERTY ' +
          'JOB_BLOCK_NEED_SIGN_ON_PERFORM_PROPERTY ' +
          'JOB_BLOCK_PERFORMER_PROPERTY ' +
          'JOB_BLOCK_RELATIVE_ABORT_DEADLINE_TYPE_PROPERTY ' +
          'JOB_BLOCK_RELATIVE_DEADLINE_TYPE_PROPERTY ' +
          'JOB_BLOCK_SUBJECT_PROPERTY ';

        // Language code
        var language_code_constants =
          'ENGLISH_LANGUAGE_CODE RUSSIAN_LANGUAGE_CODE ';

        // Launching external applications
        var launching_external_applications_constants =
          'smHidden smMaximized smMinimized smNormal wmNo wmYes ';

        // Link kind
        var link_kind_constants =
          'COMPONENT_TOKEN_LINK_KIND ' +
          'DOCUMENT_LINK_KIND ' +
          'EDOCUMENT_LINK_KIND ' +
          'FOLDER_LINK_KIND ' +
          'JOB_LINK_KIND ' +
          'REFERENCE_LINK_KIND ' +
          'TASK_LINK_KIND ';

        // Lock type
        var lock_type_constants =
          'COMPONENT_TOKEN_LOCK_TYPE EDOCUMENT_VERSION_LOCK_TYPE ';

        // Monitor block properties
        var monitor_block_properties_constants =
          'MONITOR_BLOCK_AFTER_FINISH_EVENT ' +
          'MONITOR_BLOCK_BEFORE_START_EVENT ' +
          'MONITOR_BLOCK_DEADLINE_PROPERTY ' +
          'MONITOR_BLOCK_INTERVAL_PROPERTY ' +
          'MONITOR_BLOCK_INTERVAL_TYPE_PROPERTY ' +
          'MONITOR_BLOCK_IS_RELATIVE_DEADLINE_PROPERTY ' +
          'MONITOR_BLOCK_NAME_PROPERTY ' +
          'MONITOR_BLOCK_RELATIVE_DEADLINE_TYPE_PROPERTY ' +
          'MONITOR_BLOCK_SEARCH_SCRIPT_PROPERTY ';

        // Notice block properties
        var notice_block_properties_constants =
          'NOTICE_BLOCK_AFTER_FINISH_EVENT ' +
          'NOTICE_BLOCK_ATTACHMENT_PROPERTY ' +
          'NOTICE_BLOCK_ATTACHMENTS_RIGHTS_GROUP_PROPERTY ' +
          'NOTICE_BLOCK_ATTACHMENTS_RIGHTS_TYPE_PROPERTY ' +
          'NOTICE_BLOCK_BEFORE_START_EVENT ' +
          'NOTICE_BLOCK_CREATED_NOTICES_PROPERTY ' +
          'NOTICE_BLOCK_DEADLINE_PROPERTY ' +
          'NOTICE_BLOCK_IS_RELATIVE_DEADLINE_PROPERTY ' +
          'NOTICE_BLOCK_NAME_PROPERTY ' +
          'NOTICE_BLOCK_NOTICE_TEXT_PROPERTY ' +
          'NOTICE_BLOCK_PERFORMER_PROPERTY ' +
          'NOTICE_BLOCK_RELATIVE_DEADLINE_TYPE_PROPERTY ' +
          'NOTICE_BLOCK_SUBJECT_PROPERTY ';

        // Object events
        var object_events_constants =
          'dseAfterCancel ' +
          'dseAfterClose ' +
          'dseAfterDelete ' +
          'dseAfterDeleteOutOfTransaction ' +
          'dseAfterInsert ' +
          'dseAfterOpen ' +
          'dseAfterScroll ' +
          'dseAfterUpdate ' +
          'dseAfterUpdateOutOfTransaction ' +
          'dseBeforeCancel ' +
          'dseBeforeClose ' +
          'dseBeforeDelete ' +
          'dseBeforeDetailUpdate ' +
          'dseBeforeInsert ' +
          'dseBeforeOpen ' +
          'dseBeforeUpdate ' +
          'dseOnAnyRequisiteChange ' +
          'dseOnCloseRecord ' +
          'dseOnDeleteError ' +
          'dseOnOpenRecord ' +
          'dseOnPrepareUpdate ' +
          'dseOnUpdateError ' +
          'dseOnUpdateRatifiedRecord ' +
          'dseOnValidDelete ' +
          'dseOnValidUpdate ' +
          'reOnChange ' +
          'reOnChangeValues ' +
          'SELECTION_BEGIN_ROUTE_EVENT ' +
          'SELECTION_END_ROUTE_EVENT ';

        // Object params
        var object_params_constants =
          'CURRENT_PERIOD_IS_REQUIRED ' +
          'PREVIOUS_CARD_TYPE_NAME ' +
          'SHOW_RECORD_PROPERTIES_FORM ';

        // Other
        var other_constants =
          'ACCESS_RIGHTS_SETTING_DIALOG_CODE ' +
          'ADMINISTRATOR_USER_CODE ' +
          'ANALYTIC_REPORT_TYPE ' +
          'asrtHideLocal ' +
          'asrtHideRemote ' +
          'CALCULATED_ROLE_TYPE_CODE ' +
          'COMPONENTS_REFERENCE_DEVELOPER_VIEW_CODE ' +
          'DCTS_TEST_PROTOCOLS_FOLDER_PATH ' +
          'E_EDOC_VERSION_ALREADY_APPROVINGLY_SIGNED ' +
          'E_EDOC_VERSION_ALREADY_APPROVINGLY_SIGNED_BY_USER ' +
          'E_EDOC_VERSION_ALREDY_SIGNED ' +
          'E_EDOC_VERSION_ALREDY_SIGNED_BY_USER ' +
          'EDOC_TYPES_CODE_REQUISITE_FIELD_NAME ' +
          'EDOCUMENTS_ALIAS_NAME ' +
          'FILES_FOLDER_PATH ' +
          'FILTER_OPERANDS_DELIMITER ' +
          'FILTER_OPERATIONS_DELIMITER ' +
          'FORMCARD_NAME ' +
          'FORMLIST_NAME ' +
          'GET_EXTENDED_DOCUMENT_EXTENSION_CREATION_MODE ' +
          'GET_EXTENDED_DOCUMENT_EXTENSION_IMPORT_MODE ' +
          'INTEGRATED_REPORT_TYPE ' +
          'IS_BUILDER_APPLICATION_ROLE ' +
          'IS_BUILDER_APPLICATION_ROLE2 ' +
          'IS_BUILDER_USERS ' +
          'ISBSYSDEV ' +
          'LOG_FOLDER_PATH ' +
          'mbCancel ' +
          'mbNo ' +
          'mbNoToAll ' +
          'mbOK ' +
          'mbYes ' +
          'mbYesToAll ' +
          'MEMORY_DATASET_DESRIPTIONS_FILENAME ' +
          'mrNo ' +
          'mrNoToAll ' +
          'mrYes ' +
          'mrYesToAll ' +
          'MULTIPLE_SELECT_DIALOG_CODE ' +
          'NONOPERATING_RECORD_FLAG_FEMININE ' +
          'NONOPERATING_RECORD_FLAG_MASCULINE ' +
          'OPERATING_RECORD_FLAG_FEMININE ' +
          'OPERATING_RECORD_FLAG_MASCULINE ' +
          'PROFILING_SETTINGS_COMMON_SETTINGS_CODE_VALUE ' +
          'PROGRAM_INITIATED_LOOKUP_ACTION ' +
          'ratDelete ' +
          'ratEdit ' +
          'ratInsert ' +
          'REPORT_TYPE ' +
          'REQUIRED_PICK_VALUES_VARIABLE ' +
          'rmCard ' +
          'rmList ' +
          'SBRTE_PROGID_DEV ' +
          'SBRTE_PROGID_RELEASE ' +
          'STATIC_ROLE_TYPE_CODE ' +
          'SUPPRESS_EMPTY_TEMPLATE_CREATION ' +
          'SYSTEM_USER_CODE ' +
          'UPDATE_DIALOG_DATASET ' +
          'USED_IN_OBJECT_HINT_PARAM ' +
          'USER_INITIATED_LOOKUP_ACTION ' +
          'USER_NAME_FORMAT ' +
          'USER_SELECTION_RESTRICTIONS ' +
          'WORKFLOW_TEST_PROTOCOLS_FOLDER_PATH ' +
          'ELS_SUBTYPE_CONTROL_NAME ' +
          'ELS_FOLDER_KIND_CONTROL_NAME ' +
          'REPEAT_PROCESS_CURRENT_OBJECT_EXCEPTION_NAME ';

        // Privileges
        var privileges_constants =
          'PRIVILEGE_COMPONENT_FULL_ACCESS ' +
          'PRIVILEGE_DEVELOPMENT_EXPORT ' +
          'PRIVILEGE_DEVELOPMENT_IMPORT ' +
          'PRIVILEGE_DOCUMENT_DELETE ' +
          'PRIVILEGE_ESD ' +
          'PRIVILEGE_FOLDER_DELETE ' +
          'PRIVILEGE_MANAGE_ACCESS_RIGHTS ' +
          'PRIVILEGE_MANAGE_REPLICATION ' +
          'PRIVILEGE_MANAGE_SESSION_SERVER ' +
          'PRIVILEGE_OBJECT_FULL_ACCESS ' +
          'PRIVILEGE_OBJECT_VIEW ' +
          'PRIVILEGE_RESERVE_LICENSE ' +
          'PRIVILEGE_SYSTEM_CUSTOMIZE ' +
          'PRIVILEGE_SYSTEM_DEVELOP ' +
          'PRIVILEGE_SYSTEM_INSTALL ' +
          'PRIVILEGE_TASK_DELETE ' +
          'PRIVILEGE_USER_PLUGIN_SETTINGS_CUSTOMIZE ' +
          'PRIVILEGES_PSEUDOREFERENCE_CODE ';

        // Pseudoreference code
        var pseudoreference_code_constants =
          'ACCESS_TYPES_PSEUDOREFERENCE_CODE ' +
          'ALL_AVAILABLE_COMPONENTS_PSEUDOREFERENCE_CODE ' +
          'ALL_AVAILABLE_PRIVILEGES_PSEUDOREFERENCE_CODE ' +
          'ALL_REPLICATE_COMPONENTS_PSEUDOREFERENCE_CODE ' +
          'AVAILABLE_DEVELOPERS_COMPONENTS_PSEUDOREFERENCE_CODE ' +
          'COMPONENTS_PSEUDOREFERENCE_CODE ' +
          'FILTRATER_SETTINGS_CONFLICTS_PSEUDOREFERENCE_CODE ' +
          'GROUPS_PSEUDOREFERENCE_CODE ' +
          'RECEIVE_PROTOCOL_PSEUDOREFERENCE_CODE ' +
          'REFERENCE_REQUISITE_PSEUDOREFERENCE_CODE ' +
          'REFERENCE_REQUISITES_PSEUDOREFERENCE_CODE ' +
          'REFTYPES_PSEUDOREFERENCE_CODE ' +
          'REPLICATION_SEANCES_DIARY_PSEUDOREFERENCE_CODE ' +
          'SEND_PROTOCOL_PSEUDOREFERENCE_CODE ' +
          'SUBSTITUTES_PSEUDOREFERENCE_CODE ' +
          'SYSTEM_SETTINGS_PSEUDOREFERENCE_CODE ' +
          'UNITS_PSEUDOREFERENCE_CODE ' +
          'USERS_PSEUDOREFERENCE_CODE ' +
          'VIEWERS_PSEUDOREFERENCE_CODE ';

        // Requisite ISBCertificateType values
        var requisite_ISBCertificateType_values_constants =
          'CERTIFICATE_TYPE_ENCRYPT ' +
          'CERTIFICATE_TYPE_SIGN ' +
          'CERTIFICATE_TYPE_SIGN_AND_ENCRYPT ';

        // Requisite ISBEDocStorageType values
        var requisite_ISBEDocStorageType_values_constants =
          'STORAGE_TYPE_FILE ' +
          'STORAGE_TYPE_NAS_CIFS ' +
          'STORAGE_TYPE_SAPERION ' +
          'STORAGE_TYPE_SQL_SERVER ';

        // Requisite CompType2 values
        var requisite_compType2_values_constants =
          'COMPTYPE2_REQUISITE_DOCUMENTS_VALUE ' +
          'COMPTYPE2_REQUISITE_TASKS_VALUE ' +
          'COMPTYPE2_REQUISITE_FOLDERS_VALUE ' +
          'COMPTYPE2_REQUISITE_REFERENCES_VALUE ';

        // Requisite name
        var requisite_name_constants =
          'SYSREQ_CODE ' +
          'SYSREQ_COMPTYPE2 ' +
          'SYSREQ_CONST_AVAILABLE_FOR_WEB ' +
          'SYSREQ_CONST_COMMON_CODE ' +
          'SYSREQ_CONST_COMMON_VALUE ' +
          'SYSREQ_CONST_FIRM_CODE ' +
          'SYSREQ_CONST_FIRM_STATUS ' +
          'SYSREQ_CONST_FIRM_VALUE ' +
          'SYSREQ_CONST_SERVER_STATUS ' +
          'SYSREQ_CONTENTS ' +
          'SYSREQ_DATE_OPEN ' +
          'SYSREQ_DATE_CLOSE ' +
          'SYSREQ_DESCRIPTION ' +
          'SYSREQ_DESCRIPTION_LOCALIZE_ID ' +
          'SYSREQ_DOUBLE ' +
          'SYSREQ_EDOC_ACCESS_TYPE ' +
          'SYSREQ_EDOC_AUTHOR ' +
          'SYSREQ_EDOC_CREATED ' +
          'SYSREQ_EDOC_DELEGATE_RIGHTS_REQUISITE_CODE ' +
          'SYSREQ_EDOC_EDITOR ' +
          'SYSREQ_EDOC_ENCODE_TYPE ' +
          'SYSREQ_EDOC_ENCRYPTION_PLUGIN_NAME ' +
          'SYSREQ_EDOC_ENCRYPTION_PLUGIN_VERSION ' +
          'SYSREQ_EDOC_EXPORT_DATE ' +
          'SYSREQ_EDOC_EXPORTER ' +
          'SYSREQ_EDOC_KIND ' +
          'SYSREQ_EDOC_LIFE_STAGE_NAME ' +
          'SYSREQ_EDOC_LOCKED_FOR_SERVER_CODE ' +
          'SYSREQ_EDOC_MODIFIED ' +
          'SYSREQ_EDOC_NAME ' +
          'SYSREQ_EDOC_NOTE ' +
          'SYSREQ_EDOC_QUALIFIED_ID ' +
          'SYSREQ_EDOC_SESSION_KEY ' +
          'SYSREQ_EDOC_SESSION_KEY_ENCRYPTION_PLUGIN_NAME ' +
          'SYSREQ_EDOC_SESSION_KEY_ENCRYPTION_PLUGIN_VERSION ' +
          'SYSREQ_EDOC_SIGNATURE_TYPE ' +
          'SYSREQ_EDOC_SIGNED ' +
          'SYSREQ_EDOC_STORAGE ' +
          'SYSREQ_EDOC_STORAGES_ARCHIVE_STORAGE ' +
          'SYSREQ_EDOC_STORAGES_CHECK_RIGHTS ' +
          'SYSREQ_EDOC_STORAGES_COMPUTER_NAME ' +
          'SYSREQ_EDOC_STORAGES_EDIT_IN_STORAGE ' +
          'SYSREQ_EDOC_STORAGES_EXECUTIVE_STORAGE ' +
          'SYSREQ_EDOC_STORAGES_FUNCTION ' +
          'SYSREQ_EDOC_STORAGES_INITIALIZED ' +
          'SYSREQ_EDOC_STORAGES_LOCAL_PATH ' +
          'SYSREQ_EDOC_STORAGES_SAPERION_DATABASE_NAME ' +
          'SYSREQ_EDOC_STORAGES_SEARCH_BY_TEXT ' +
          'SYSREQ_EDOC_STORAGES_SERVER_NAME ' +
          'SYSREQ_EDOC_STORAGES_SHARED_SOURCE_NAME ' +
          'SYSREQ_EDOC_STORAGES_TYPE ' +
          'SYSREQ_EDOC_TEXT_MODIFIED ' +
          'SYSREQ_EDOC_TYPE_ACT_CODE ' +
          'SYSREQ_EDOC_TYPE_ACT_DESCRIPTION ' +
          'SYSREQ_EDOC_TYPE_ACT_DESCRIPTION_LOCALIZE_ID ' +
          'SYSREQ_EDOC_TYPE_ACT_ON_EXECUTE ' +
          'SYSREQ_EDOC_TYPE_ACT_ON_EXECUTE_EXISTS ' +
          'SYSREQ_EDOC_TYPE_ACT_SECTION ' +
          'SYSREQ_EDOC_TYPE_ADD_PARAMS ' +
          'SYSREQ_EDOC_TYPE_COMMENT ' +
          'SYSREQ_EDOC_TYPE_EVENT_TEXT ' +
          'SYSREQ_EDOC_TYPE_NAME_IN_SINGULAR ' +
          'SYSREQ_EDOC_TYPE_NAME_IN_SINGULAR_LOCALIZE_ID ' +
          'SYSREQ_EDOC_TYPE_NAME_LOCALIZE_ID ' +
          'SYSREQ_EDOC_TYPE_NUMERATION_METHOD ' +
          'SYSREQ_EDOC_TYPE_PSEUDO_REQUISITE_CODE ' +
          'SYSREQ_EDOC_TYPE_REQ_CODE ' +
          'SYSREQ_EDOC_TYPE_REQ_DESCRIPTION ' +
          'SYSREQ_EDOC_TYPE_REQ_DESCRIPTION_LOCALIZE_ID ' +
          'SYSREQ_EDOC_TYPE_REQ_IS_LEADING ' +
          'SYSREQ_EDOC_TYPE_REQ_IS_REQUIRED ' +
          'SYSREQ_EDOC_TYPE_REQ_NUMBER ' +
          'SYSREQ_EDOC_TYPE_REQ_ON_CHANGE ' +
          'SYSREQ_EDOC_TYPE_REQ_ON_CHANGE_EXISTS ' +
          'SYSREQ_EDOC_TYPE_REQ_ON_SELECT ' +
          'SYSREQ_EDOC_TYPE_REQ_ON_SELECT_KIND ' +
          'SYSREQ_EDOC_TYPE_REQ_SECTION ' +
          'SYSREQ_EDOC_TYPE_VIEW_CARD ' +
          'SYSREQ_EDOC_TYPE_VIEW_CODE ' +
          'SYSREQ_EDOC_TYPE_VIEW_COMMENT ' +
          'SYSREQ_EDOC_TYPE_VIEW_IS_MAIN ' +
          'SYSREQ_EDOC_TYPE_VIEW_NAME ' +
          'SYSREQ_EDOC_TYPE_VIEW_NAME_LOCALIZE_ID ' +
          'SYSREQ_EDOC_VERSION_AUTHOR ' +
          'SYSREQ_EDOC_VERSION_CRC ' +
          'SYSREQ_EDOC_VERSION_DATA ' +
          'SYSREQ_EDOC_VERSION_EDITOR ' +
          'SYSREQ_EDOC_VERSION_EXPORT_DATE ' +
          'SYSREQ_EDOC_VERSION_EXPORTER ' +
          'SYSREQ_EDOC_VERSION_HIDDEN ' +
          'SYSREQ_EDOC_VERSION_LIFE_STAGE ' +
          'SYSREQ_EDOC_VERSION_MODIFIED ' +
          'SYSREQ_EDOC_VERSION_NOTE ' +
          'SYSREQ_EDOC_VERSION_SIGNATURE_TYPE ' +
          'SYSREQ_EDOC_VERSION_SIGNED ' +
          'SYSREQ_EDOC_VERSION_SIZE ' +
          'SYSREQ_EDOC_VERSION_SOURCE ' +
          'SYSREQ_EDOC_VERSION_TEXT_MODIFIED ' +
          'SYSREQ_EDOCKIND_DEFAULT_VERSION_STATE_CODE ' +
          'SYSREQ_FOLDER_KIND ' +
          'SYSREQ_FUNC_CATEGORY ' +
          'SYSREQ_FUNC_COMMENT ' +
          'SYSREQ_FUNC_GROUP ' +
          'SYSREQ_FUNC_GROUP_COMMENT ' +
          'SYSREQ_FUNC_GROUP_NUMBER ' +
          'SYSREQ_FUNC_HELP ' +
          'SYSREQ_FUNC_PARAM_DEF_VALUE ' +
          'SYSREQ_FUNC_PARAM_IDENT ' +
          'SYSREQ_FUNC_PARAM_NUMBER ' +
          'SYSREQ_FUNC_PARAM_TYPE ' +
          'SYSREQ_FUNC_TEXT ' +
          'SYSREQ_GROUP_CATEGORY ' +
          'SYSREQ_ID ' +
          'SYSREQ_LAST_UPDATE ' +
          'SYSREQ_LEADER_REFERENCE ' +
          'SYSREQ_LINE_NUMBER ' +
          'SYSREQ_MAIN_RECORD_ID ' +
          'SYSREQ_NAME ' +
          'SYSREQ_NAME_LOCALIZE_ID ' +
          'SYSREQ_NOTE ' +
          'SYSREQ_ORIGINAL_RECORD ' +
          'SYSREQ_OUR_FIRM ' +
          'SYSREQ_PROFILING_SETTINGS_BATCH_LOGING ' +
          'SYSREQ_PROFILING_SETTINGS_BATCH_SIZE ' +
          'SYSREQ_PROFILING_SETTINGS_PROFILING_ENABLED ' +
          'SYSREQ_PROFILING_SETTINGS_SQL_PROFILING_ENABLED ' +
          'SYSREQ_PROFILING_SETTINGS_START_LOGGED ' +
          'SYSREQ_RECORD_STATUS ' +
          'SYSREQ_REF_REQ_FIELD_NAME ' +
          'SYSREQ_REF_REQ_FORMAT ' +
          'SYSREQ_REF_REQ_GENERATED ' +
          'SYSREQ_REF_REQ_LENGTH ' +
          'SYSREQ_REF_REQ_PRECISION ' +
          'SYSREQ_REF_REQ_REFERENCE ' +
          'SYSREQ_REF_REQ_SECTION ' +
          'SYSREQ_REF_REQ_STORED ' +
          'SYSREQ_REF_REQ_TOKENS ' +
          'SYSREQ_REF_REQ_TYPE ' +
          'SYSREQ_REF_REQ_VIEW ' +
          'SYSREQ_REF_TYPE_ACT_CODE ' +
          'SYSREQ_REF_TYPE_ACT_DESCRIPTION ' +
          'SYSREQ_REF_TYPE_ACT_DESCRIPTION_LOCALIZE_ID ' +
          'SYSREQ_REF_TYPE_ACT_ON_EXECUTE ' +
          'SYSREQ_REF_TYPE_ACT_ON_EXECUTE_EXISTS ' +
          'SYSREQ_REF_TYPE_ACT_SECTION ' +
          'SYSREQ_REF_TYPE_ADD_PARAMS ' +
          'SYSREQ_REF_TYPE_COMMENT ' +
          'SYSREQ_REF_TYPE_COMMON_SETTINGS ' +
          'SYSREQ_REF_TYPE_DISPLAY_REQUISITE_NAME ' +
          'SYSREQ_REF_TYPE_EVENT_TEXT ' +
          'SYSREQ_REF_TYPE_MAIN_LEADING_REF ' +
          'SYSREQ_REF_TYPE_NAME_IN_SINGULAR ' +
          'SYSREQ_REF_TYPE_NAME_IN_SINGULAR_LOCALIZE_ID ' +
          'SYSREQ_REF_TYPE_NAME_LOCALIZE_ID ' +
          'SYSREQ_REF_TYPE_NUMERATION_METHOD ' +
          'SYSREQ_REF_TYPE_REQ_CODE ' +
          'SYSREQ_REF_TYPE_REQ_DESCRIPTION ' +
          'SYSREQ_REF_TYPE_REQ_DESCRIPTION_LOCALIZE_ID ' +
          'SYSREQ_REF_TYPE_REQ_IS_CONTROL ' +
          'SYSREQ_REF_TYPE_REQ_IS_FILTER ' +
          'SYSREQ_REF_TYPE_REQ_IS_LEADING ' +
          'SYSREQ_REF_TYPE_REQ_IS_REQUIRED ' +
          'SYSREQ_REF_TYPE_REQ_NUMBER ' +
          'SYSREQ_REF_TYPE_REQ_ON_CHANGE ' +
          'SYSREQ_REF_TYPE_REQ_ON_CHANGE_EXISTS ' +
          'SYSREQ_REF_TYPE_REQ_ON_SELECT ' +
          'SYSREQ_REF_TYPE_REQ_ON_SELECT_KIND ' +
          'SYSREQ_REF_TYPE_REQ_SECTION ' +
          'SYSREQ_REF_TYPE_VIEW_CARD ' +
          'SYSREQ_REF_TYPE_VIEW_CODE ' +
          'SYSREQ_REF_TYPE_VIEW_COMMENT ' +
          'SYSREQ_REF_TYPE_VIEW_IS_MAIN ' +
          'SYSREQ_REF_TYPE_VIEW_NAME ' +
          'SYSREQ_REF_TYPE_VIEW_NAME_LOCALIZE_ID ' +
          'SYSREQ_REFERENCE_TYPE_ID ' +
          'SYSREQ_STATE ' +
          'SYSREQ_STATЕ ' +
          'SYSREQ_SYSTEM_SETTINGS_VALUE ' +
          'SYSREQ_TYPE ' +
          'SYSREQ_UNIT ' +
          'SYSREQ_UNIT_ID ' +
          'SYSREQ_USER_GROUPS_GROUP_FULL_NAME ' +
          'SYSREQ_USER_GROUPS_GROUP_NAME ' +
          'SYSREQ_USER_GROUPS_GROUP_SERVER_NAME ' +
          'SYSREQ_USERS_ACCESS_RIGHTS ' +
          'SYSREQ_USERS_AUTHENTICATION ' +
          'SYSREQ_USERS_CATEGORY ' +
          'SYSREQ_USERS_COMPONENT ' +
          'SYSREQ_USERS_COMPONENT_USER_IS_PUBLIC ' +
          'SYSREQ_USERS_DOMAIN ' +
          'SYSREQ_USERS_FULL_USER_NAME ' +
          'SYSREQ_USERS_GROUP ' +
          'SYSREQ_USERS_IS_MAIN_SERVER ' +
          'SYSREQ_USERS_LOGIN ' +
          'SYSREQ_USERS_REFERENCE_USER_IS_PUBLIC ' +
          'SYSREQ_USERS_STATUS ' +
          'SYSREQ_USERS_USER_CERTIFICATE ' +
          'SYSREQ_USERS_USER_CERTIFICATE_INFO ' +
          'SYSREQ_USERS_USER_CERTIFICATE_PLUGIN_NAME ' +
          'SYSREQ_USERS_USER_CERTIFICATE_PLUGIN_VERSION ' +
          'SYSREQ_USERS_USER_CERTIFICATE_STATE ' +
          'SYSREQ_USERS_USER_CERTIFICATE_SUBJECT_NAME ' +
          'SYSREQ_USERS_USER_CERTIFICATE_THUMBPRINT ' +
          'SYSREQ_USERS_USER_DEFAULT_CERTIFICATE ' +
          'SYSREQ_USERS_USER_DESCRIPTION ' +
          'SYSREQ_USERS_USER_GLOBAL_NAME ' +
          'SYSREQ_USERS_USER_LOGIN ' +
          'SYSREQ_USERS_USER_MAIN_SERVER ' +
          'SYSREQ_USERS_USER_TYPE ' +
          'SYSREQ_WORK_RULES_FOLDER_ID ';

        // Result
        var result_constants = 'RESULT_VAR_NAME RESULT_VAR_NAME_ENG ';

        // Rule identification
        var rule_identification_constants =
          'AUTO_NUMERATION_RULE_ID ' +
          'CANT_CHANGE_ID_REQUISITE_RULE_ID ' +
          'CANT_CHANGE_OURFIRM_REQUISITE_RULE_ID ' +
          'CHECK_CHANGING_REFERENCE_RECORD_USE_RULE_ID ' +
          'CHECK_CODE_REQUISITE_RULE_ID ' +
          'CHECK_DELETING_REFERENCE_RECORD_USE_RULE_ID ' +
          'CHECK_FILTRATER_CHANGES_RULE_ID ' +
          'CHECK_RECORD_INTERVAL_RULE_ID ' +
          'CHECK_REFERENCE_INTERVAL_RULE_ID ' +
          'CHECK_REQUIRED_DATA_FULLNESS_RULE_ID ' +
          'CHECK_REQUIRED_REQUISITES_FULLNESS_RULE_ID ' +
          'MAKE_RECORD_UNRATIFIED_RULE_ID ' +
          'RESTORE_AUTO_NUMERATION_RULE_ID ' +
          'SET_FIRM_CONTEXT_FROM_RECORD_RULE_ID ' +
          'SET_FIRST_RECORD_IN_LIST_FORM_RULE_ID ' +
          'SET_IDSPS_VALUE_RULE_ID ' +
          'SET_NEXT_CODE_VALUE_RULE_ID ' +
          'SET_OURFIRM_BOUNDS_RULE_ID ' +
          'SET_OURFIRM_REQUISITE_RULE_ID ';

        // Script block properties
        var script_block_properties_constants =
          'SCRIPT_BLOCK_AFTER_FINISH_EVENT ' +
          'SCRIPT_BLOCK_BEFORE_START_EVENT ' +
          'SCRIPT_BLOCK_EXECUTION_RESULTS_PROPERTY ' +
          'SCRIPT_BLOCK_NAME_PROPERTY ' +
          'SCRIPT_BLOCK_SCRIPT_PROPERTY ';

        // Subtask block properties
        var subtask_block_properties_constants =
          'SUBTASK_BLOCK_ABORT_DEADLINE_PROPERTY ' +
          'SUBTASK_BLOCK_AFTER_FINISH_EVENT ' +
          'SUBTASK_BLOCK_ASSIGN_PARAMS_EVENT ' +
          'SUBTASK_BLOCK_ATTACHMENTS_PROPERTY ' +
          'SUBTASK_BLOCK_ATTACHMENTS_RIGHTS_GROUP_PROPERTY ' +
          'SUBTASK_BLOCK_ATTACHMENTS_RIGHTS_TYPE_PROPERTY ' +
          'SUBTASK_BLOCK_BEFORE_START_EVENT ' +
          'SUBTASK_BLOCK_CREATED_TASK_PROPERTY ' +
          'SUBTASK_BLOCK_CREATION_EVENT ' +
          'SUBTASK_BLOCK_DEADLINE_PROPERTY ' +
          'SUBTASK_BLOCK_IMPORTANCE_PROPERTY ' +
          'SUBTASK_BLOCK_INITIATOR_PROPERTY ' +
          'SUBTASK_BLOCK_IS_RELATIVE_ABORT_DEADLINE_PROPERTY ' +
          'SUBTASK_BLOCK_IS_RELATIVE_DEADLINE_PROPERTY ' +
          'SUBTASK_BLOCK_JOBS_TYPE_PROPERTY ' +
          'SUBTASK_BLOCK_NAME_PROPERTY ' +
          'SUBTASK_BLOCK_PARALLEL_ROUTE_PROPERTY ' +
          'SUBTASK_BLOCK_PERFORMERS_PROPERTY ' +
          'SUBTASK_BLOCK_RELATIVE_ABORT_DEADLINE_TYPE_PROPERTY ' +
          'SUBTASK_BLOCK_RELATIVE_DEADLINE_TYPE_PROPERTY ' +
          'SUBTASK_BLOCK_REQUIRE_SIGN_PROPERTY ' +
          'SUBTASK_BLOCK_STANDARD_ROUTE_PROPERTY ' +
          'SUBTASK_BLOCK_START_EVENT ' +
          'SUBTASK_BLOCK_STEP_CONTROL_PROPERTY ' +
          'SUBTASK_BLOCK_SUBJECT_PROPERTY ' +
          'SUBTASK_BLOCK_TASK_CONTROL_PROPERTY ' +
          'SUBTASK_BLOCK_TEXT_PROPERTY ' +
          'SUBTASK_BLOCK_UNLOCK_ATTACHMENTS_ON_STOP_PROPERTY ' +
          'SUBTASK_BLOCK_USE_STANDARD_ROUTE_PROPERTY ' +
          'SUBTASK_BLOCK_WAIT_FOR_TASK_COMPLETE_PROPERTY ';

        // System component
        var system_component_constants =
          'SYSCOMP_CONTROL_JOBS ' +
          'SYSCOMP_FOLDERS ' +
          'SYSCOMP_JOBS ' +
          'SYSCOMP_NOTICES ' +
          'SYSCOMP_TASKS ';

        // System dialogs
        var system_dialogs_constants =
          'SYSDLG_CREATE_EDOCUMENT ' +
          'SYSDLG_CREATE_EDOCUMENT_VERSION ' +
          'SYSDLG_CURRENT_PERIOD ' +
          'SYSDLG_EDIT_FUNCTION_HELP ' +
          'SYSDLG_EDOCUMENT_KINDS_FOR_TEMPLATE ' +
          'SYSDLG_EXPORT_MULTIPLE_EDOCUMENTS ' +
          'SYSDLG_EXPORT_SINGLE_EDOCUMENT ' +
          'SYSDLG_IMPORT_EDOCUMENT ' +
          'SYSDLG_MULTIPLE_SELECT ' +
          'SYSDLG_SETUP_ACCESS_RIGHTS ' +
          'SYSDLG_SETUP_DEFAULT_RIGHTS ' +
          'SYSDLG_SETUP_FILTER_CONDITION ' +
          'SYSDLG_SETUP_SIGN_RIGHTS ' +
          'SYSDLG_SETUP_TASK_OBSERVERS ' +
          'SYSDLG_SETUP_TASK_ROUTE ' +
          'SYSDLG_SETUP_USERS_LIST ' +
          'SYSDLG_SIGN_EDOCUMENT ' +
          'SYSDLG_SIGN_MULTIPLE_EDOCUMENTS ';

        // System reference names
        var system_reference_names_constants =
          'SYSREF_ACCESS_RIGHTS_TYPES ' +
          'SYSREF_ADMINISTRATION_HISTORY ' +
          'SYSREF_ALL_AVAILABLE_COMPONENTS ' +
          'SYSREF_ALL_AVAILABLE_PRIVILEGES ' +
          'SYSREF_ALL_REPLICATING_COMPONENTS ' +
          'SYSREF_AVAILABLE_DEVELOPERS_COMPONENTS ' +
          'SYSREF_CALENDAR_EVENTS ' +
          'SYSREF_COMPONENT_TOKEN_HISTORY ' +
          'SYSREF_COMPONENT_TOKENS ' +
          'SYSREF_COMPONENTS ' +
          'SYSREF_CONSTANTS ' +
          'SYSREF_DATA_RECEIVE_PROTOCOL ' +
          'SYSREF_DATA_SEND_PROTOCOL ' +
          'SYSREF_DIALOGS ' +
          'SYSREF_DIALOGS_REQUISITES ' +
          'SYSREF_EDITORS ' +
          'SYSREF_EDOC_CARDS ' +
          'SYSREF_EDOC_TYPES ' +
          'SYSREF_EDOCUMENT_CARD_REQUISITES ' +
          'SYSREF_EDOCUMENT_CARD_TYPES ' +
          'SYSREF_EDOCUMENT_CARD_TYPES_REFERENCE ' +
          'SYSREF_EDOCUMENT_CARDS ' +
          'SYSREF_EDOCUMENT_HISTORY ' +
          'SYSREF_EDOCUMENT_KINDS ' +
          'SYSREF_EDOCUMENT_REQUISITES ' +
          'SYSREF_EDOCUMENT_SIGNATURES ' +
          'SYSREF_EDOCUMENT_TEMPLATES ' +
          'SYSREF_EDOCUMENT_TEXT_STORAGES ' +
          'SYSREF_EDOCUMENT_VIEWS ' +
          'SYSREF_FILTERER_SETUP_CONFLICTS ' +
          'SYSREF_FILTRATER_SETTING_CONFLICTS ' +
          'SYSREF_FOLDER_HISTORY ' +
          'SYSREF_FOLDERS ' +
          'SYSREF_FUNCTION_GROUPS ' +
          'SYSREF_FUNCTION_PARAMS ' +
          'SYSREF_FUNCTIONS ' +
          'SYSREF_JOB_HISTORY ' +
          'SYSREF_LINKS ' +
          'SYSREF_LOCALIZATION_DICTIONARY ' +
          'SYSREF_LOCALIZATION_LANGUAGES ' +
          'SYSREF_MODULES ' +
          'SYSREF_PRIVILEGES ' +
          'SYSREF_RECORD_HISTORY ' +
          'SYSREF_REFERENCE_REQUISITES ' +
          'SYSREF_REFERENCE_TYPE_VIEWS ' +
          'SYSREF_REFERENCE_TYPES ' +
          'SYSREF_REFERENCES ' +
          'SYSREF_REFERENCES_REQUISITES ' +
          'SYSREF_REMOTE_SERVERS ' +
          'SYSREF_REPLICATION_SESSIONS_LOG ' +
          'SYSREF_REPLICATION_SESSIONS_PROTOCOL ' +
          'SYSREF_REPORTS ' +
          'SYSREF_ROLES ' +
          'SYSREF_ROUTE_BLOCK_GROUPS ' +
          'SYSREF_ROUTE_BLOCKS ' +
          'SYSREF_SCRIPTS ' +
          'SYSREF_SEARCHES ' +
          'SYSREF_SERVER_EVENTS ' +
          'SYSREF_SERVER_EVENTS_HISTORY ' +
          'SYSREF_STANDARD_ROUTE_GROUPS ' +
          'SYSREF_STANDARD_ROUTES ' +
          'SYSREF_STATUSES ' +
          'SYSREF_SYSTEM_SETTINGS ' +
          'SYSREF_TASK_HISTORY ' +
          'SYSREF_TASK_KIND_GROUPS ' +
          'SYSREF_TASK_KINDS ' +
          'SYSREF_TASK_RIGHTS ' +
          'SYSREF_TASK_SIGNATURES ' +
          'SYSREF_TASKS ' +
          'SYSREF_UNITS ' +
          'SYSREF_USER_GROUPS ' +
          'SYSREF_USER_GROUPS_REFERENCE ' +
          'SYSREF_USER_SUBSTITUTION ' +
          'SYSREF_USERS ' +
          'SYSREF_USERS_REFERENCE ' +
          'SYSREF_VIEWERS ' +
          'SYSREF_WORKING_TIME_CALENDARS ';

        // Table name
        var table_name_constants =
          'ACCESS_RIGHTS_TABLE_NAME ' +
          'EDMS_ACCESS_TABLE_NAME ' +
          'EDOC_TYPES_TABLE_NAME ';

        // Test
        var test_constants =
          'TEST_DEV_DB_NAME ' +
          'TEST_DEV_SYSTEM_CODE ' +
          'TEST_EDMS_DB_NAME ' +
          'TEST_EDMS_MAIN_CODE ' +
          'TEST_EDMS_MAIN_DB_NAME ' +
          'TEST_EDMS_SECOND_CODE ' +
          'TEST_EDMS_SECOND_DB_NAME ' +
          'TEST_EDMS_SYSTEM_CODE ' +
          'TEST_ISB5_MAIN_CODE ' +
          'TEST_ISB5_SECOND_CODE ' +
          'TEST_SQL_SERVER_2005_NAME ' +
          'TEST_SQL_SERVER_NAME ';

        // Using the dialog windows
        var using_the_dialog_windows_constants =
          'ATTENTION_CAPTION ' +
          'cbsCommandLinks ' +
          'cbsDefault ' +
          'CONFIRMATION_CAPTION ' +
          'ERROR_CAPTION ' +
          'INFORMATION_CAPTION ' +
          'mrCancel ' +
          'mrOk ';

        // Using the document
        var using_the_document_constants =
          'EDOC_VERSION_ACTIVE_STAGE_CODE ' +
          'EDOC_VERSION_DESIGN_STAGE_CODE ' +
          'EDOC_VERSION_OBSOLETE_STAGE_CODE ';

        // Using the EA and encryption
        var using_the_EA_and_encryption_constants =
          'cpDataEnciphermentEnabled ' +
          'cpDigitalSignatureEnabled ' +
          'cpID ' +
          'cpIssuer ' +
          'cpPluginVersion ' +
          'cpSerial ' +
          'cpSubjectName ' +
          'cpSubjSimpleName ' +
          'cpValidFromDate ' +
          'cpValidToDate ';

        // Using the ISBL-editor
        var using_the_ISBL_editor_constants =
          'ISBL_SYNTAX ' + 'NO_SYNTAX ' + 'XML_SYNTAX ';

        // Wait block properties
        var wait_block_properties_constants =
          'WAIT_BLOCK_AFTER_FINISH_EVENT ' +
          'WAIT_BLOCK_BEFORE_START_EVENT ' +
          'WAIT_BLOCK_DEADLINE_PROPERTY ' +
          'WAIT_BLOCK_IS_RELATIVE_DEADLINE_PROPERTY ' +
          'WAIT_BLOCK_NAME_PROPERTY ' +
          'WAIT_BLOCK_RELATIVE_DEADLINE_TYPE_PROPERTY ';

        // SYSRES Common
        var sysres_common_constants =
          'SYSRES_COMMON ' +
          'SYSRES_CONST ' +
          'SYSRES_MBFUNC ' +
          'SYSRES_SBDATA ' +
          'SYSRES_SBGUI ' +
          'SYSRES_SBINTF ' +
          'SYSRES_SBREFDSC ' +
          'SYSRES_SQLERRORS ' +
          'SYSRES_SYSCOMP ';

        // Константы ==> built_in
        var CONSTANTS =
          sysres_constants +
          base_constants +
          base_group_name_constants +
          decision_block_properties_constants +
          file_extension_constants +
          job_block_properties_constants +
          language_code_constants +
          launching_external_applications_constants +
          link_kind_constants +
          lock_type_constants +
          monitor_block_properties_constants +
          notice_block_properties_constants +
          object_events_constants +
          object_params_constants +
          other_constants +
          privileges_constants +
          pseudoreference_code_constants +
          requisite_ISBCertificateType_values_constants +
          requisite_ISBEDocStorageType_values_constants +
          requisite_compType2_values_constants +
          requisite_name_constants +
          result_constants +
          rule_identification_constants +
          script_block_properties_constants +
          subtask_block_properties_constants +
          system_component_constants +
          system_dialogs_constants +
          system_reference_names_constants +
          table_name_constants +
          test_constants +
          using_the_dialog_windows_constants +
          using_the_document_constants +
          using_the_EA_and_encryption_constants +
          using_the_ISBL_editor_constants +
          wait_block_properties_constants +
          sysres_common_constants;

        // enum TAccountType
        var TAccountType = 'atUser atGroup atRole ';

        // enum TActionEnabledMode
        var TActionEnabledMode =
          'aemEnabledAlways ' +
          'aemDisabledAlways ' +
          'aemEnabledOnBrowse ' +
          'aemEnabledOnEdit ' +
          'aemDisabledOnBrowseEmpty ';

        // enum TAddPosition
        var TAddPosition = 'apBegin apEnd ';

        // enum TAlignment
        var TAlignment = 'alLeft alRight ';

        // enum TAreaShowMode
        var TAreaShowMode =
          'asmNever ' +
          'asmNoButCustomize ' +
          'asmAsLastTime ' +
          'asmYesButCustomize ' +
          'asmAlways ';

        // enum TCertificateInvalidationReason
        var TCertificateInvalidationReason = 'cirCommon cirRevoked ';

        // enum TCertificateType
        var TCertificateType = 'ctSignature ctEncode ctSignatureEncode ';

        // enum TCheckListBoxItemState
        var TCheckListBoxItemState = 'clbUnchecked clbChecked clbGrayed ';

        // enum TCloseOnEsc
        var TCloseOnEsc = 'ceISB ceAlways ceNever ';

        // enum TCompType
        var TCompType =
          'ctDocument ' +
          'ctReference ' +
          'ctScript ' +
          'ctUnknown ' +
          'ctReport ' +
          'ctDialog ' +
          'ctFunction ' +
          'ctFolder ' +
          'ctEDocument ' +
          'ctTask ' +
          'ctJob ' +
          'ctNotice ' +
          'ctControlJob ';

        // enum TConditionFormat
        var TConditionFormat = 'cfInternal cfDisplay ';

        // enum TConnectionIntent
        var TConnectionIntent = 'ciUnspecified ciWrite ciRead ';

        // enum TContentKind
        var TContentKind =
          'ckFolder ' +
          'ckEDocument ' +
          'ckTask ' +
          'ckJob ' +
          'ckComponentToken ' +
          'ckAny ' +
          'ckReference ' +
          'ckScript ' +
          'ckReport ' +
          'ckDialog ';

        // enum TControlType
        var TControlType =
          'ctISBLEditor ' +
          'ctBevel ' +
          'ctButton ' +
          'ctCheckListBox ' +
          'ctComboBox ' +
          'ctComboEdit ' +
          'ctGrid ' +
          'ctDBCheckBox ' +
          'ctDBComboBox ' +
          'ctDBEdit ' +
          'ctDBEllipsis ' +
          'ctDBMemo ' +
          'ctDBNavigator ' +
          'ctDBRadioGroup ' +
          'ctDBStatusLabel ' +
          'ctEdit ' +
          'ctGroupBox ' +
          'ctInplaceHint ' +
          'ctMemo ' +
          'ctPanel ' +
          'ctListBox ' +
          'ctRadioButton ' +
          'ctRichEdit ' +
          'ctTabSheet ' +
          'ctWebBrowser ' +
          'ctImage ' +
          'ctHyperLink ' +
          'ctLabel ' +
          'ctDBMultiEllipsis ' +
          'ctRibbon ' +
          'ctRichView ' +
          'ctInnerPanel ' +
          'ctPanelGroup ' +
          'ctBitButton ';

        // enum TCriterionContentType
        var TCriterionContentType =
          'cctDate ' +
          'cctInteger ' +
          'cctNumeric ' +
          'cctPick ' +
          'cctReference ' +
          'cctString ' +
          'cctText ';

        // enum TCultureType
        var TCultureType = 'cltInternal cltPrimary cltGUI ';

        // enum TDataSetEventType
        var TDataSetEventType =
          'dseBeforeOpen ' +
          'dseAfterOpen ' +
          'dseBeforeClose ' +
          'dseAfterClose ' +
          'dseOnValidDelete ' +
          'dseBeforeDelete ' +
          'dseAfterDelete ' +
          'dseAfterDeleteOutOfTransaction ' +
          'dseOnDeleteError ' +
          'dseBeforeInsert ' +
          'dseAfterInsert ' +
          'dseOnValidUpdate ' +
          'dseBeforeUpdate ' +
          'dseOnUpdateRatifiedRecord ' +
          'dseAfterUpdate ' +
          'dseAfterUpdateOutOfTransaction ' +
          'dseOnUpdateError ' +
          'dseAfterScroll ' +
          'dseOnOpenRecord ' +
          'dseOnCloseRecord ' +
          'dseBeforeCancel ' +
          'dseAfterCancel ' +
          'dseOnUpdateDeadlockError ' +
          'dseBeforeDetailUpdate ' +
          'dseOnPrepareUpdate ' +
          'dseOnAnyRequisiteChange ';

        // enum TDataSetState
        var TDataSetState = 'dssEdit dssInsert dssBrowse dssInActive ';

        // enum TDateFormatType
        var TDateFormatType = 'dftDate dftShortDate dftDateTime dftTimeStamp ';

        // enum TDateOffsetType
        var TDateOffsetType = 'dotDays dotHours dotMinutes dotSeconds ';

        // enum TDateTimeKind
        var TDateTimeKind = 'dtkndLocal dtkndUTC ';

        // enum TDeaAccessRights
        var TDeaAccessRights = 'arNone arView arEdit arFull ';

        // enum TDocumentDefaultAction
        var TDocumentDefaultAction = 'ddaView ddaEdit ';

        // enum TEditMode
        var TEditMode =
          'emLock ' +
          'emEdit ' +
          'emSign ' +
          'emExportWithLock ' +
          'emImportWithUnlock ' +
          'emChangeVersionNote ' +
          'emOpenForModify ' +
          'emChangeLifeStage ' +
          'emDelete ' +
          'emCreateVersion ' +
          'emImport ' +
          'emUnlockExportedWithLock ' +
          'emStart ' +
          'emAbort ' +
          'emReInit ' +
          'emMarkAsReaded ' +
          'emMarkAsUnreaded ' +
          'emPerform ' +
          'emAccept ' +
          'emResume ' +
          'emChangeRights ' +
          'emEditRoute ' +
          'emEditObserver ' +
          'emRecoveryFromLocalCopy ' +
          'emChangeWorkAccessType ' +
          'emChangeEncodeTypeToCertificate ' +
          'emChangeEncodeTypeToPassword ' +
          'emChangeEncodeTypeToNone ' +
          'emChangeEncodeTypeToCertificatePassword ' +
          'emChangeStandardRoute ' +
          'emGetText ' +
          'emOpenForView ' +
          'emMoveToStorage ' +
          'emCreateObject ' +
          'emChangeVersionHidden ' +
          'emDeleteVersion ' +
          'emChangeLifeCycleStage ' +
          'emApprovingSign ' +
          'emExport ' +
          'emContinue ' +
          'emLockFromEdit ' +
          'emUnLockForEdit ' +
          'emLockForServer ' +
          'emUnlockFromServer ' +
          'emDelegateAccessRights ' +
          'emReEncode ';

        // enum TEditorCloseObservType
        var TEditorCloseObservType = 'ecotFile ecotProcess ';

        // enum TEdmsApplicationAction
        var TEdmsApplicationAction =
          'eaGet eaCopy eaCreate eaCreateStandardRoute ';

        // enum TEDocumentLockType
        var TEDocumentLockType = 'edltAll edltNothing edltQuery ';

        // enum TEDocumentStepShowMode
        var TEDocumentStepShowMode = 'essmText essmCard ';

        // enum TEDocumentStepVersionType
        var TEDocumentStepVersionType =
          'esvtLast esvtLastActive esvtSpecified ';

        // enum TEDocumentStorageFunction
        var TEDocumentStorageFunction = 'edsfExecutive edsfArchive ';

        // enum TEDocumentStorageType
        var TEDocumentStorageType = 'edstSQLServer edstFile ';

        // enum TEDocumentVersionSourceType
        var TEDocumentVersionSourceType =
          'edvstNone edvstEDocumentVersionCopy edvstFile edvstTemplate edvstScannedFile ';

        // enum TEDocumentVersionState
        var TEDocumentVersionState = 'vsDefault vsDesign vsActive vsObsolete ';

        // enum TEncodeType
        var TEncodeType =
          'etNone etCertificate etPassword etCertificatePassword ';

        // enum TExceptionCategory
        var TExceptionCategory = 'ecException ecWarning ecInformation ';

        // enum TExportedSignaturesType
        var TExportedSignaturesType = 'estAll estApprovingOnly ';

        // enum TExportedVersionType
        var TExportedVersionType = 'evtLast evtLastActive evtQuery ';

        // enum TFieldDataType
        var TFieldDataType =
          'fdtString ' +
          'fdtNumeric ' +
          'fdtInteger ' +
          'fdtDate ' +
          'fdtText ' +
          'fdtUnknown ' +
          'fdtWideString ' +
          'fdtLargeInteger ';

        // enum TFolderType
        var TFolderType =
          'ftInbox ' +
          'ftOutbox ' +
          'ftFavorites ' +
          'ftCommonFolder ' +
          'ftUserFolder ' +
          'ftComponents ' +
          'ftQuickLaunch ' +
          'ftShortcuts ' +
          'ftSearch ';

        // enum TGridRowHeight
        var TGridRowHeight = 'grhAuto ' + 'grhX1 ' + 'grhX2 ' + 'grhX3 ';

        // enum THyperlinkType
        var THyperlinkType = 'hltText ' + 'hltRTF ' + 'hltHTML ';

        // enum TImageFileFormat
        var TImageFileFormat =
          'iffBMP ' +
          'iffJPEG ' +
          'iffMultiPageTIFF ' +
          'iffSinglePageTIFF ' +
          'iffTIFF ' +
          'iffPNG ';

        // enum TImageMode
        var TImageMode = 'im8bGrayscale ' + 'im24bRGB ' + 'im1bMonochrome ';

        // enum TImageType
        var TImageType = 'itBMP ' + 'itJPEG ' + 'itWMF ' + 'itPNG ';

        // enum TInplaceHintKind
        var TInplaceHintKind =
          'ikhInformation ' + 'ikhWarning ' + 'ikhError ' + 'ikhNoIcon ';

        // enum TISBLContext
        var TISBLContext =
          'icUnknown ' +
          'icScript ' +
          'icFunction ' +
          'icIntegratedReport ' +
          'icAnalyticReport ' +
          'icDataSetEventHandler ' +
          'icActionHandler ' +
          'icFormEventHandler ' +
          'icLookUpEventHandler ' +
          'icRequisiteChangeEventHandler ' +
          'icBeforeSearchEventHandler ' +
          'icRoleCalculation ' +
          'icSelectRouteEventHandler ' +
          'icBlockPropertyCalculation ' +
          'icBlockQueryParamsEventHandler ' +
          'icChangeSearchResultEventHandler ' +
          'icBlockEventHandler ' +
          'icSubTaskInitEventHandler ' +
          'icEDocDataSetEventHandler ' +
          'icEDocLookUpEventHandler ' +
          'icEDocActionHandler ' +
          'icEDocFormEventHandler ' +
          'icEDocRequisiteChangeEventHandler ' +
          'icStructuredConversionRule ' +
          'icStructuredConversionEventBefore ' +
          'icStructuredConversionEventAfter ' +
          'icWizardEventHandler ' +
          'icWizardFinishEventHandler ' +
          'icWizardStepEventHandler ' +
          'icWizardStepFinishEventHandler ' +
          'icWizardActionEnableEventHandler ' +
          'icWizardActionExecuteEventHandler ' +
          'icCreateJobsHandler ' +
          'icCreateNoticesHandler ' +
          'icBeforeLookUpEventHandler ' +
          'icAfterLookUpEventHandler ' +
          'icTaskAbortEventHandler ' +
          'icWorkflowBlockActionHandler ' +
          'icDialogDataSetEventHandler ' +
          'icDialogActionHandler ' +
          'icDialogLookUpEventHandler ' +
          'icDialogRequisiteChangeEventHandler ' +
          'icDialogFormEventHandler ' +
          'icDialogValidCloseEventHandler ' +
          'icBlockFormEventHandler ' +
          'icTaskFormEventHandler ' +
          'icReferenceMethod ' +
          'icEDocMethod ' +
          'icDialogMethod ' +
          'icProcessMessageHandler ';

        // enum TItemShow
        var TItemShow = 'isShow ' + 'isHide ' + 'isByUserSettings ';

        // enum TJobKind
        var TJobKind = 'jkJob ' + 'jkNotice ' + 'jkControlJob ';

        // enum TJoinType
        var TJoinType =
          'jtInner ' + 'jtLeft ' + 'jtRight ' + 'jtFull ' + 'jtCross ';

        // enum TLabelPos
        var TLabelPos = 'lbpAbove ' + 'lbpBelow ' + 'lbpLeft ' + 'lbpRight ';

        // enum TLicensingType
        var TLicensingType = 'eltPerConnection ' + 'eltPerUser ';

        // enum TLifeCycleStageFontColor
        var TLifeCycleStageFontColor =
          'sfcUndefined ' +
          'sfcBlack ' +
          'sfcGreen ' +
          'sfcRed ' +
          'sfcBlue ' +
          'sfcOrange ' +
          'sfcLilac ';

        // enum TLifeCycleStageFontStyle
        var TLifeCycleStageFontStyle =
          'sfsItalic ' + 'sfsStrikeout ' + 'sfsNormal ';

        // enum TLockableDevelopmentComponentType
        var TLockableDevelopmentComponentType =
          'ldctStandardRoute ' +
          'ldctWizard ' +
          'ldctScript ' +
          'ldctFunction ' +
          'ldctRouteBlock ' +
          'ldctIntegratedReport ' +
          'ldctAnalyticReport ' +
          'ldctReferenceType ' +
          'ldctEDocumentType ' +
          'ldctDialog ' +
          'ldctServerEvents ';

        // enum TMaxRecordCountRestrictionType
        var TMaxRecordCountRestrictionType =
          'mrcrtNone ' + 'mrcrtUser ' + 'mrcrtMaximal ' + 'mrcrtCustom ';

        // enum TRangeValueType
        var TRangeValueType =
          'vtEqual ' + 'vtGreaterOrEqual ' + 'vtLessOrEqual ' + 'vtRange ';

        // enum TRelativeDate
        var TRelativeDate =
          'rdYesterday ' +
          'rdToday ' +
          'rdTomorrow ' +
          'rdThisWeek ' +
          'rdThisMonth ' +
          'rdThisYear ' +
          'rdNextMonth ' +
          'rdNextWeek ' +
          'rdLastWeek ' +
          'rdLastMonth ';

        // enum TReportDestination
        var TReportDestination = 'rdWindow ' + 'rdFile ' + 'rdPrinter ';

        // enum TReqDataType
        var TReqDataType =
          'rdtString ' +
          'rdtNumeric ' +
          'rdtInteger ' +
          'rdtDate ' +
          'rdtReference ' +
          'rdtAccount ' +
          'rdtText ' +
          'rdtPick ' +
          'rdtUnknown ' +
          'rdtLargeInteger ' +
          'rdtDocument ';

        // enum TRequisiteEventType
        var TRequisiteEventType = 'reOnChange ' + 'reOnChangeValues ';

        // enum TSBTimeType
        var TSBTimeType = 'ttGlobal ' + 'ttLocal ' + 'ttUser ' + 'ttSystem ';

        // enum TSearchShowMode
        var TSearchShowMode =
          'ssmBrowse ' + 'ssmSelect ' + 'ssmMultiSelect ' + 'ssmBrowseModal ';

        // enum TSelectMode
        var TSelectMode = 'smSelect ' + 'smLike ' + 'smCard ';

        // enum TSignatureType
        var TSignatureType = 'stNone ' + 'stAuthenticating ' + 'stApproving ';

        // enum TSignerContentType
        var TSignerContentType = 'sctString ' + 'sctStream ';

        // enum TStringsSortType
        var TStringsSortType = 'sstAnsiSort ' + 'sstNaturalSort ';

        // enum TStringValueType
        var TStringValueType = 'svtEqual ' + 'svtContain ';

        // enum TStructuredObjectAttributeType
        var TStructuredObjectAttributeType =
          'soatString ' +
          'soatNumeric ' +
          'soatInteger ' +
          'soatDatetime ' +
          'soatReferenceRecord ' +
          'soatText ' +
          'soatPick ' +
          'soatBoolean ' +
          'soatEDocument ' +
          'soatAccount ' +
          'soatIntegerCollection ' +
          'soatNumericCollection ' +
          'soatStringCollection ' +
          'soatPickCollection ' +
          'soatDatetimeCollection ' +
          'soatBooleanCollection ' +
          'soatReferenceRecordCollection ' +
          'soatEDocumentCollection ' +
          'soatAccountCollection ' +
          'soatContents ' +
          'soatUnknown ';

        // enum TTaskAbortReason
        var TTaskAbortReason =
          'tarAbortByUser ' + 'tarAbortByWorkflowException ';

        // enum TTextValueType
        var TTextValueType = 'tvtAllWords ' + 'tvtExactPhrase ' + 'tvtAnyWord ';

        // enum TUserObjectStatus
        var TUserObjectStatus =
          'usNone ' +
          'usCompleted ' +
          'usRedSquare ' +
          'usBlueSquare ' +
          'usYellowSquare ' +
          'usGreenSquare ' +
          'usOrangeSquare ' +
          'usPurpleSquare ' +
          'usFollowUp ';

        // enum TUserType
        var TUserType =
          'utUnknown ' +
          'utUser ' +
          'utDeveloper ' +
          'utAdministrator ' +
          'utSystemDeveloper ' +
          'utDisconnected ';

        // enum TValuesBuildType
        var TValuesBuildType =
          'btAnd ' + 'btDetailAnd ' + 'btOr ' + 'btNotOr ' + 'btOnly ';

        // enum TViewMode
        var TViewMode = 'vmView ' + 'vmSelect ' + 'vmNavigation ';

        // enum TViewSelectionMode
        var TViewSelectionMode =
          'vsmSingle ' +
          'vsmMultiple ' +
          'vsmMultipleCheck ' +
          'vsmNoSelection ';

        // enum TWizardActionType
        var TWizardActionType =
          'wfatPrevious ' + 'wfatNext ' + 'wfatCancel ' + 'wfatFinish ';

        // enum TWizardFormElementProperty
        var TWizardFormElementProperty =
          'wfepUndefined ' +
          'wfepText3 ' +
          'wfepText6 ' +
          'wfepText9 ' +
          'wfepSpinEdit ' +
          'wfepDropDown ' +
          'wfepRadioGroup ' +
          'wfepFlag ' +
          'wfepText12 ' +
          'wfepText15 ' +
          'wfepText18 ' +
          'wfepText21 ' +
          'wfepText24 ' +
          'wfepText27 ' +
          'wfepText30 ' +
          'wfepRadioGroupColumn1 ' +
          'wfepRadioGroupColumn2 ' +
          'wfepRadioGroupColumn3 ';

        // enum TWizardFormElementType
        var TWizardFormElementType =
          'wfetQueryParameter ' + 'wfetText ' + 'wfetDelimiter ' + 'wfetLabel ';

        // enum TWizardParamType
        var TWizardParamType =
          'wptString ' +
          'wptInteger ' +
          'wptNumeric ' +
          'wptBoolean ' +
          'wptDateTime ' +
          'wptPick ' +
          'wptText ' +
          'wptUser ' +
          'wptUserList ' +
          'wptEDocumentInfo ' +
          'wptEDocumentInfoList ' +
          'wptReferenceRecordInfo ' +
          'wptReferenceRecordInfoList ' +
          'wptFolderInfo ' +
          'wptTaskInfo ' +
          'wptContents ' +
          'wptFileName ' +
          'wptDate ';

        // enum TWizardStepResult
        var TWizardStepResult =
          'wsrComplete ' +
          'wsrGoNext ' +
          'wsrGoPrevious ' +
          'wsrCustom ' +
          'wsrCancel ' +
          'wsrGoFinal ';

        // enum TWizardStepType
        var TWizardStepType =
          'wstForm ' +
          'wstEDocument ' +
          'wstTaskCard ' +
          'wstReferenceRecordCard ' +
          'wstFinal ';

        // enum TWorkAccessType
        var TWorkAccessType = 'waAll ' + 'waPerformers ' + 'waManual ';

        // enum TWorkflowBlockType
        var TWorkflowBlockType =
          'wsbStart ' +
          'wsbFinish ' +
          'wsbNotice ' +
          'wsbStep ' +
          'wsbDecision ' +
          'wsbWait ' +
          'wsbMonitor ' +
          'wsbScript ' +
          'wsbConnector ' +
          'wsbSubTask ' +
          'wsbLifeCycleStage ' +
          'wsbPause ';

        // enum TWorkflowDataType
        var TWorkflowDataType =
          'wdtInteger ' +
          'wdtFloat ' +
          'wdtString ' +
          'wdtPick ' +
          'wdtDateTime ' +
          'wdtBoolean ' +
          'wdtTask ' +
          'wdtJob ' +
          'wdtFolder ' +
          'wdtEDocument ' +
          'wdtReferenceRecord ' +
          'wdtUser ' +
          'wdtGroup ' +
          'wdtRole ' +
          'wdtIntegerCollection ' +
          'wdtFloatCollection ' +
          'wdtStringCollection ' +
          'wdtPickCollection ' +
          'wdtDateTimeCollection ' +
          'wdtBooleanCollection ' +
          'wdtTaskCollection ' +
          'wdtJobCollection ' +
          'wdtFolderCollection ' +
          'wdtEDocumentCollection ' +
          'wdtReferenceRecordCollection ' +
          'wdtUserCollection ' +
          'wdtGroupCollection ' +
          'wdtRoleCollection ' +
          'wdtContents ' +
          'wdtUserList ' +
          'wdtSearchDescription ' +
          'wdtDeadLine ' +
          'wdtPickSet ' +
          'wdtAccountCollection ';

        // enum TWorkImportance
        var TWorkImportance = 'wiLow ' + 'wiNormal ' + 'wiHigh ';

        // enum TWorkRouteType
        var TWorkRouteType = 'wrtSoft ' + 'wrtHard ';

        // enum TWorkState
        var TWorkState =
          'wsInit ' +
          'wsRunning ' +
          'wsDone ' +
          'wsControlled ' +
          'wsAborted ' +
          'wsContinued ';

        // enum TWorkTextBuildingMode
        var TWorkTextBuildingMode =
          'wtmFull ' + 'wtmFromCurrent ' + 'wtmOnlyCurrent ';

        // Перечисления
        var ENUMS =
          TAccountType +
          TActionEnabledMode +
          TAddPosition +
          TAlignment +
          TAreaShowMode +
          TCertificateInvalidationReason +
          TCertificateType +
          TCheckListBoxItemState +
          TCloseOnEsc +
          TCompType +
          TConditionFormat +
          TConnectionIntent +
          TContentKind +
          TControlType +
          TCriterionContentType +
          TCultureType +
          TDataSetEventType +
          TDataSetState +
          TDateFormatType +
          TDateOffsetType +
          TDateTimeKind +
          TDeaAccessRights +
          TDocumentDefaultAction +
          TEditMode +
          TEditorCloseObservType +
          TEdmsApplicationAction +
          TEDocumentLockType +
          TEDocumentStepShowMode +
          TEDocumentStepVersionType +
          TEDocumentStorageFunction +
          TEDocumentStorageType +
          TEDocumentVersionSourceType +
          TEDocumentVersionState +
          TEncodeType +
          TExceptionCategory +
          TExportedSignaturesType +
          TExportedVersionType +
          TFieldDataType +
          TFolderType +
          TGridRowHeight +
          THyperlinkType +
          TImageFileFormat +
          TImageMode +
          TImageType +
          TInplaceHintKind +
          TISBLContext +
          TItemShow +
          TJobKind +
          TJoinType +
          TLabelPos +
          TLicensingType +
          TLifeCycleStageFontColor +
          TLifeCycleStageFontStyle +
          TLockableDevelopmentComponentType +
          TMaxRecordCountRestrictionType +
          TRangeValueType +
          TRelativeDate +
          TReportDestination +
          TReqDataType +
          TRequisiteEventType +
          TSBTimeType +
          TSearchShowMode +
          TSelectMode +
          TSignatureType +
          TSignerContentType +
          TStringsSortType +
          TStringValueType +
          TStructuredObjectAttributeType +
          TTaskAbortReason +
          TTextValueType +
          TUserObjectStatus +
          TUserType +
          TValuesBuildType +
          TViewMode +
          TViewSelectionMode +
          TWizardActionType +
          TWizardFormElementProperty +
          TWizardFormElementType +
          TWizardParamType +
          TWizardStepResult +
          TWizardStepType +
          TWorkAccessType +
          TWorkflowBlockType +
          TWorkflowDataType +
          TWorkImportance +
          TWorkRouteType +
          TWorkState +
          TWorkTextBuildingMode;

        // Системные функции ==> SYSFUNCTIONS
        var system_functions =
          'AddSubString ' +
          'AdjustLineBreaks ' +
          'AmountInWords ' +
          'Analysis ' +
          'ArrayDimCount ' +
          'ArrayHighBound ' +
          'ArrayLowBound ' +
          'ArrayOf ' +
          'ArrayReDim ' +
          'Assert ' +
          'Assigned ' +
          'BeginOfMonth ' +
          'BeginOfPeriod ' +
          'BuildProfilingOperationAnalysis ' +
          'CallProcedure ' +
          'CanReadFile ' +
          'CArrayElement ' +
          'CDataSetRequisite ' +
          'ChangeDate ' +
          'ChangeReferenceDataset ' +
          'Char ' +
          'CharPos ' +
          'CheckParam ' +
          'CheckParamValue ' +
          'CompareStrings ' +
          'ConstantExists ' +
          'ControlState ' +
          'ConvertDateStr ' +
          'Copy ' +
          'CopyFile ' +
          'CreateArray ' +
          'CreateCachedReference ' +
          'CreateConnection ' +
          'CreateDialog ' +
          'CreateDualListDialog ' +
          'CreateEditor ' +
          'CreateException ' +
          'CreateFile ' +
          'CreateFolderDialog ' +
          'CreateInputDialog ' +
          'CreateLinkFile ' +
          'CreateList ' +
          'CreateLock ' +
          'CreateMemoryDataSet ' +
          'CreateObject ' +
          'CreateOpenDialog ' +
          'CreateProgress ' +
          'CreateQuery ' +
          'CreateReference ' +
          'CreateReport ' +
          'CreateSaveDialog ' +
          'CreateScript ' +
          'CreateSQLPivotFunction ' +
          'CreateStringList ' +
          'CreateTreeListSelectDialog ' +
          'CSelectSQL ' +
          'CSQL ' +
          'CSubString ' +
          'CurrentUserID ' +
          'CurrentUserName ' +
          'CurrentVersion ' +
          'DataSetLocateEx ' +
          'DateDiff ' +
          'DateTimeDiff ' +
          'DateToStr ' +
          'DayOfWeek ' +
          'DeleteFile ' +
          'DirectoryExists ' +
          'DisableCheckAccessRights ' +
          'DisableCheckFullShowingRestriction ' +
          'DisableMassTaskSendingRestrictions ' +
          'DropTable ' +
          'DupeString ' +
          'EditText ' +
          'EnableCheckAccessRights ' +
          'EnableCheckFullShowingRestriction ' +
          'EnableMassTaskSendingRestrictions ' +
          'EndOfMonth ' +
          'EndOfPeriod ' +
          'ExceptionExists ' +
          'ExceptionsOff ' +
          'ExceptionsOn ' +
          'Execute ' +
          'ExecuteProcess ' +
          'Exit ' +
          'ExpandEnvironmentVariables ' +
          'ExtractFileDrive ' +
          'ExtractFileExt ' +
          'ExtractFileName ' +
          'ExtractFilePath ' +
          'ExtractParams ' +
          'FileExists ' +
          'FileSize ' +
          'FindFile ' +
          'FindSubString ' +
          'FirmContext ' +
          'ForceDirectories ' +
          'Format ' +
          'FormatDate ' +
          'FormatNumeric ' +
          'FormatSQLDate ' +
          'FormatString ' +
          'FreeException ' +
          'GetComponent ' +
          'GetComponentLaunchParam ' +
          'GetConstant ' +
          'GetLastException ' +
          'GetReferenceRecord ' +
          'GetRefTypeByRefID ' +
          'GetTableID ' +
          'GetTempFolder ' +
          'IfThen ' +
          'In ' +
          'IndexOf ' +
          'InputDialog ' +
          'InputDialogEx ' +
          'InteractiveMode ' +
          'IsFileLocked ' +
          'IsGraphicFile ' +
          'IsNumeric ' +
          'Length ' +
          'LoadString ' +
          'LoadStringFmt ' +
          'LocalTimeToUTC ' +
          'LowerCase ' +
          'Max ' +
          'MessageBox ' +
          'MessageBoxEx ' +
          'MimeDecodeBinary ' +
          'MimeDecodeString ' +
          'MimeEncodeBinary ' +
          'MimeEncodeString ' +
          'Min ' +
          'MoneyInWords ' +
          'MoveFile ' +
          'NewID ' +
          'Now ' +
          'OpenFile ' +
          'Ord ' +
          'Precision ' +
          'Raise ' +
          'ReadCertificateFromFile ' +
          'ReadFile ' +
          'ReferenceCodeByID ' +
          'ReferenceNumber ' +
          'ReferenceRequisiteMode ' +
          'ReferenceRequisiteValue ' +
          'RegionDateSettings ' +
          'RegionNumberSettings ' +
          'RegionTimeSettings ' +
          'RegRead ' +
          'RegWrite ' +
          'RenameFile ' +
          'Replace ' +
          'Round ' +
          'SelectServerCode ' +
          'SelectSQL ' +
          'ServerDateTime ' +
          'SetConstant ' +
          'SetManagedFolderFieldsState ' +
          'ShowConstantsInputDialog ' +
          'ShowMessage ' +
          'Sleep ' +
          'Split ' +
          'SQL ' +
          'SQL2XLSTAB ' +
          'SQLProfilingSendReport ' +
          'StrToDate ' +
          'SubString ' +
          'SubStringCount ' +
          'SystemSetting ' +
          'Time ' +
          'TimeDiff ' +
          'Today ' +
          'Transliterate ' +
          'Trim ' +
          'UpperCase ' +
          'UserStatus ' +
          'UTCToLocalTime ' +
          'ValidateXML ' +
          'VarIsClear ' +
          'VarIsEmpty ' +
          'VarIsNull ' +
          'WorkTimeDiff ' +
          'WriteFile ' +
          'WriteFileEx ' +
          'WriteObjectHistory ' +
          'Анализ ' +
          'БазаДанных ' +
          'БлокЕсть ' +
          'БлокЕстьРасш ' +
          'БлокИнфо ' +
          'БлокСнять ' +
          'БлокСнятьРасш ' +
          'БлокУстановить ' +
          'Ввод ' +
          'ВводМеню ' +
          'ВедС ' +
          'ВедСпр ' +
          'ВерхняяГраницаМассива ' +
          'ВнешПрогр ' +
          'Восст ' +
          'ВременнаяПапка ' +
          'Время ' +
          'ВыборSQL ' +
          'ВыбратьЗапись ' +
          'ВыделитьСтр ' +
          'Вызвать ' +
          'Выполнить ' +
          'ВыпПрогр ' +
          'ГрафическийФайл ' +
          'ГруппаДополнительно ' +
          'ДатаВремяСерв ' +
          'ДеньНедели ' +
          'ДиалогДаНет ' +
          'ДлинаСтр ' +
          'ДобПодстр ' +
          'ЕПусто ' +
          'ЕслиТо ' +
          'ЕЧисло ' +
          'ЗамПодстр ' +
          'ЗаписьСправочника ' +
          'ЗначПоляСпр ' +
          'ИДТипСпр ' +
          'ИзвлечьДиск ' +
          'ИзвлечьИмяФайла ' +
          'ИзвлечьПуть ' +
          'ИзвлечьРасширение ' +
          'ИзмДат ' +
          'ИзменитьРазмерМассива ' +
          'ИзмеренийМассива ' +
          'ИмяОрг ' +
          'ИмяПоляСпр ' +
          'Индекс ' +
          'ИндикаторЗакрыть ' +
          'ИндикаторОткрыть ' +
          'ИндикаторШаг ' +
          'ИнтерактивныйРежим ' +
          'ИтогТблСпр ' +
          'КодВидВедСпр ' +
          'КодВидСпрПоИД ' +
          'КодПоAnalit ' +
          'КодСимвола ' +
          'КодСпр ' +
          'КолПодстр ' +
          'КолПроп ' +
          'КонМес ' +
          'Конст ' +
          'КонстЕсть ' +
          'КонстЗнач ' +
          'КонТран ' +
          'КопироватьФайл ' +
          'КопияСтр ' +
          'КПериод ' +
          'КСтрТблСпр ' +
          'Макс ' +
          'МаксСтрТблСпр ' +
          'Массив ' +
          'Меню ' +
          'МенюРасш ' +
          'Мин ' +
          'НаборДанныхНайтиРасш ' +
          'НаимВидСпр ' +
          'НаимПоAnalit ' +
          'НаимСпр ' +
          'НастроитьПереводыСтрок ' +
          'НачМес ' +
          'НачТран ' +
          'НижняяГраницаМассива ' +
          'НомерСпр ' +
          'НПериод ' +
          'Окно ' +
          'Окр ' +
          'Окружение ' +
          'ОтлИнфДобавить ' +
          'ОтлИнфУдалить ' +
          'Отчет ' +
          'ОтчетАнал ' +
          'ОтчетИнт ' +
          'ПапкаСуществует ' +
          'Пауза ' +
          'ПВыборSQL ' +
          'ПереименоватьФайл ' +
          'Переменные ' +
          'ПереместитьФайл ' +
          'Подстр ' +
          'ПоискПодстр ' +
          'ПоискСтр ' +
          'ПолучитьИДТаблицы ' +
          'ПользовательДополнительно ' +
          'ПользовательИД ' +
          'ПользовательИмя ' +
          'ПользовательСтатус ' +
          'Прервать ' +
          'ПроверитьПараметр ' +
          'ПроверитьПараметрЗнач ' +
          'ПроверитьУсловие ' +
          'РазбСтр ' +
          'РазнВремя ' +
          'РазнДат ' +
          'РазнДатаВремя ' +
          'РазнРабВремя ' +
          'РегУстВрем ' +
          'РегУстДат ' +
          'РегУстЧсл ' +
          'РедТекст ' +
          'РеестрЗапись ' +
          'РеестрСписокИменПарам ' +
          'РеестрЧтение ' +
          'РеквСпр ' +
          'РеквСпрПр ' +
          'Сегодня ' +
          'Сейчас ' +
          'Сервер ' +
          'СерверПроцессИД ' +
          'СертификатФайлСчитать ' +
          'СжПроб ' +
          'Символ ' +
          'СистемаДиректумКод ' +
          'СистемаИнформация ' +
          'СистемаКод ' +
          'Содержит ' +
          'СоединениеЗакрыть ' +
          'СоединениеОткрыть ' +
          'СоздатьДиалог ' +
          'СоздатьДиалогВыбораИзДвухСписков ' +
          'СоздатьДиалогВыбораПапки ' +
          'СоздатьДиалогОткрытияФайла ' +
          'СоздатьДиалогСохраненияФайла ' +
          'СоздатьЗапрос ' +
          'СоздатьИндикатор ' +
          'СоздатьИсключение ' +
          'СоздатьКэшированныйСправочник ' +
          'СоздатьМассив ' +
          'СоздатьНаборДанных ' +
          'СоздатьОбъект ' +
          'СоздатьОтчет ' +
          'СоздатьПапку ' +
          'СоздатьРедактор ' +
          'СоздатьСоединение ' +
          'СоздатьСписок ' +
          'СоздатьСписокСтрок ' +
          'СоздатьСправочник ' +
          'СоздатьСценарий ' +
          'СоздСпр ' +
          'СостСпр ' +
          'Сохр ' +
          'СохрСпр ' +
          'СписокСистем ' +
          'Спр ' +
          'Справочник ' +
          'СпрБлокЕсть ' +
          'СпрБлокСнять ' +
          'СпрБлокСнятьРасш ' +
          'СпрБлокУстановить ' +
          'СпрИзмНабДан ' +
          'СпрКод ' +
          'СпрНомер ' +
          'СпрОбновить ' +
          'СпрОткрыть ' +
          'СпрОтменить ' +
          'СпрПарам ' +
          'СпрПолеЗнач ' +
          'СпрПолеИмя ' +
          'СпрРекв ' +
          'СпрРеквВведЗн ' +
          'СпрРеквНовые ' +
          'СпрРеквПр ' +
          'СпрРеквПредЗн ' +
          'СпрРеквРежим ' +
          'СпрРеквТипТекст ' +
          'СпрСоздать ' +
          'СпрСост ' +
          'СпрСохранить ' +
          'СпрТблИтог ' +
          'СпрТблСтр ' +
          'СпрТблСтрКол ' +
          'СпрТблСтрМакс ' +
          'СпрТблСтрМин ' +
          'СпрТблСтрПред ' +
          'СпрТблСтрСлед ' +
          'СпрТблСтрСозд ' +
          'СпрТблСтрУд ' +
          'СпрТекПредст ' +
          'СпрУдалить ' +
          'СравнитьСтр ' +
          'СтрВерхРегистр ' +
          'СтрНижнРегистр ' +
          'СтрТблСпр ' +
          'СумПроп ' +
          'Сценарий ' +
          'СценарийПарам ' +
          'ТекВерсия ' +
          'ТекОрг ' +
          'Точн ' +
          'Тран ' +
          'Транслитерация ' +
          'УдалитьТаблицу ' +
          'УдалитьФайл ' +
          'УдСпр ' +
          'УдСтрТблСпр ' +
          'Уст ' +
          'УстановкиКонстант ' +
          'ФайлАтрибутСчитать ' +
          'ФайлАтрибутУстановить ' +
          'ФайлВремя ' +
          'ФайлВремяУстановить ' +
          'ФайлВыбрать ' +
          'ФайлЗанят ' +
          'ФайлЗаписать ' +
          'ФайлИскать ' +
          'ФайлКопировать ' +
          'ФайлМожноЧитать ' +
          'ФайлОткрыть ' +
          'ФайлПереименовать ' +
          'ФайлПерекодировать ' +
          'ФайлПереместить ' +
          'ФайлПросмотреть ' +
          'ФайлРазмер ' +
          'ФайлСоздать ' +
          'ФайлСсылкаСоздать ' +
          'ФайлСуществует ' +
          'ФайлСчитать ' +
          'ФайлУдалить ' +
          'ФмтSQLДат ' +
          'ФмтДат ' +
          'ФмтСтр ' +
          'ФмтЧсл ' +
          'Формат ' +
          'ЦМассивЭлемент ' +
          'ЦНаборДанныхРеквизит ' +
          'ЦПодстр ';

        // Предопределенные переменные ==> built_in
        var predefined_variables =
          'AltState ' +
          'Application ' +
          'CallType ' +
          'ComponentTokens ' +
          'CreatedJobs ' +
          'CreatedNotices ' +
          'ControlState ' +
          'DialogResult ' +
          'Dialogs ' +
          'EDocuments ' +
          'EDocumentVersionSource ' +
          'Folders ' +
          'GlobalIDs ' +
          'Job ' +
          'Jobs ' +
          'InputValue ' +
          'LookUpReference ' +
          'LookUpRequisiteNames ' +
          'LookUpSearch ' +
          'Object ' +
          'ParentComponent ' +
          'Processes ' +
          'References ' +
          'Requisite ' +
          'ReportName ' +
          'Reports ' +
          'Result ' +
          'Scripts ' +
          'Searches ' +
          'SelectedAttachments ' +
          'SelectedItems ' +
          'SelectMode ' +
          'Sender ' +
          'ServerEvents ' +
          'ServiceFactory ' +
          'ShiftState ' +
          'SubTask ' +
          'SystemDialogs ' +
          'Tasks ' +
          'Wizard ' +
          'Wizards ' +
          'Work ' +
          'ВызовСпособ ' +
          'ИмяОтчета ' +
          'РеквЗнач ';

        // Интерфейсы ==> type
        var interfaces =
          'IApplication ' +
          'IAccessRights ' +
          'IAccountRepository ' +
          'IAccountSelectionRestrictions ' +
          'IAction ' +
          'IActionList ' +
          'IAdministrationHistoryDescription ' +
          'IAnchors ' +
          'IApplication ' +
          'IArchiveInfo ' +
          'IAttachment ' +
          'IAttachmentList ' +
          'ICheckListBox ' +
          'ICheckPointedList ' +
          'IColumn ' +
          'IComponent ' +
          'IComponentDescription ' +
          'IComponentToken ' +
          'IComponentTokenFactory ' +
          'IComponentTokenInfo ' +
          'ICompRecordInfo ' +
          'IConnection ' +
          'IContents ' +
          'IControl ' +
          'IControlJob ' +
          'IControlJobInfo ' +
          'IControlList ' +
          'ICrypto ' +
          'ICrypto2 ' +
          'ICustomJob ' +
          'ICustomJobInfo ' +
          'ICustomListBox ' +
          'ICustomObjectWizardStep ' +
          'ICustomWork ' +
          'ICustomWorkInfo ' +
          'IDataSet ' +
          'IDataSetAccessInfo ' +
          'IDataSigner ' +
          'IDateCriterion ' +
          'IDateRequisite ' +
          'IDateRequisiteDescription ' +
          'IDateValue ' +
          'IDeaAccessRights ' +
          'IDeaObjectInfo ' +
          'IDevelopmentComponentLock ' +
          'IDialog ' +
          'IDialogFactory ' +
          'IDialogPickRequisiteItems ' +
          'IDialogsFactory ' +
          'IDICSFactory ' +
          'IDocRequisite ' +
          'IDocumentInfo ' +
          'IDualListDialog ' +
          'IECertificate ' +
          'IECertificateInfo ' +
          'IECertificates ' +
          'IEditControl ' +
          'IEditorForm ' +
          'IEdmsExplorer ' +
          'IEdmsObject ' +
          'IEdmsObjectDescription ' +
          'IEdmsObjectFactory ' +
          'IEdmsObjectInfo ' +
          'IEDocument ' +
          'IEDocumentAccessRights ' +
          'IEDocumentDescription ' +
          'IEDocumentEditor ' +
          'IEDocumentFactory ' +
          'IEDocumentInfo ' +
          'IEDocumentStorage ' +
          'IEDocumentVersion ' +
          'IEDocumentVersionListDialog ' +
          'IEDocumentVersionSource ' +
          'IEDocumentWizardStep ' +
          'IEDocVerSignature ' +
          'IEDocVersionState ' +
          'IEnabledMode ' +
          'IEncodeProvider ' +
          'IEncrypter ' +
          'IEvent ' +
          'IEventList ' +
          'IException ' +
          'IExternalEvents ' +
          'IExternalHandler ' +
          'IFactory ' +
          'IField ' +
          'IFileDialog ' +
          'IFolder ' +
          'IFolderDescription ' +
          'IFolderDialog ' +
          'IFolderFactory ' +
          'IFolderInfo ' +
          'IForEach ' +
          'IForm ' +
          'IFormTitle ' +
          'IFormWizardStep ' +
          'IGlobalIDFactory ' +
          'IGlobalIDInfo ' +
          'IGrid ' +
          'IHasher ' +
          'IHistoryDescription ' +
          'IHyperLinkControl ' +
          'IImageButton ' +
          'IImageControl ' +
          'IInnerPanel ' +
          'IInplaceHint ' +
          'IIntegerCriterion ' +
          'IIntegerList ' +
          'IIntegerRequisite ' +
          'IIntegerValue ' +
          'IISBLEditorForm ' +
          'IJob ' +
          'IJobDescription ' +
          'IJobFactory ' +
          'IJobForm ' +
          'IJobInfo ' +
          'ILabelControl ' +
          'ILargeIntegerCriterion ' +
          'ILargeIntegerRequisite ' +
          'ILargeIntegerValue ' +
          'ILicenseInfo ' +
          'ILifeCycleStage ' +
          'IList ' +
          'IListBox ' +
          'ILocalIDInfo ' +
          'ILocalization ' +
          'ILock ' +
          'IMemoryDataSet ' +
          'IMessagingFactory ' +
          'IMetadataRepository ' +
          'INotice ' +
          'INoticeInfo ' +
          'INumericCriterion ' +
          'INumericRequisite ' +
          'INumericValue ' +
          'IObject ' +
          'IObjectDescription ' +
          'IObjectImporter ' +
          'IObjectInfo ' +
          'IObserver ' +
          'IPanelGroup ' +
          'IPickCriterion ' +
          'IPickProperty ' +
          'IPickRequisite ' +
          'IPickRequisiteDescription ' +
          'IPickRequisiteItem ' +
          'IPickRequisiteItems ' +
          'IPickValue ' +
          'IPrivilege ' +
          'IPrivilegeList ' +
          'IProcess ' +
          'IProcessFactory ' +
          'IProcessMessage ' +
          'IProgress ' +
          'IProperty ' +
          'IPropertyChangeEvent ' +
          'IQuery ' +
          'IReference ' +
          'IReferenceCriterion ' +
          'IReferenceEnabledMode ' +
          'IReferenceFactory ' +
          'IReferenceHistoryDescription ' +
          'IReferenceInfo ' +
          'IReferenceRecordCardWizardStep ' +
          'IReferenceRequisiteDescription ' +
          'IReferencesFactory ' +
          'IReferenceValue ' +
          'IRefRequisite ' +
          'IReport ' +
          'IReportFactory ' +
          'IRequisite ' +
          'IRequisiteDescription ' +
          'IRequisiteDescriptionList ' +
          'IRequisiteFactory ' +
          'IRichEdit ' +
          'IRouteStep ' +
          'IRule ' +
          'IRuleList ' +
          'ISchemeBlock ' +
          'IScript ' +
          'IScriptFactory ' +
          'ISearchCriteria ' +
          'ISearchCriterion ' +
          'ISearchDescription ' +
          'ISearchFactory ' +
          'ISearchFolderInfo ' +
          'ISearchForObjectDescription ' +
          'ISearchResultRestrictions ' +
          'ISecuredContext ' +
          'ISelectDialog ' +
          'IServerEvent ' +
          'IServerEventFactory ' +
          'IServiceDialog ' +
          'IServiceFactory ' +
          'ISignature ' +
          'ISignProvider ' +
          'ISignProvider2 ' +
          'ISignProvider3 ' +
          'ISimpleCriterion ' +
          'IStringCriterion ' +
          'IStringList ' +
          'IStringRequisite ' +
          'IStringRequisiteDescription ' +
          'IStringValue ' +
          'ISystemDialogsFactory ' +
          'ISystemInfo ' +
          'ITabSheet ' +
          'ITask ' +
          'ITaskAbortReasonInfo ' +
          'ITaskCardWizardStep ' +
          'ITaskDescription ' +
          'ITaskFactory ' +
          'ITaskInfo ' +
          'ITaskRoute ' +
          'ITextCriterion ' +
          'ITextRequisite ' +
          'ITextValue ' +
          'ITreeListSelectDialog ' +
          'IUser ' +
          'IUserList ' +
          'IValue ' +
          'IView ' +
          'IWebBrowserControl ' +
          'IWizard ' +
          'IWizardAction ' +
          'IWizardFactory ' +
          'IWizardFormElement ' +
          'IWizardParam ' +
          'IWizardPickParam ' +
          'IWizardReferenceParam ' +
          'IWizardStep ' +
          'IWorkAccessRights ' +
          'IWorkDescription ' +
          'IWorkflowAskableParam ' +
          'IWorkflowAskableParams ' +
          'IWorkflowBlock ' +
          'IWorkflowBlockResult ' +
          'IWorkflowEnabledMode ' +
          'IWorkflowParam ' +
          'IWorkflowPickParam ' +
          'IWorkflowReferenceParam ' +
          'IWorkState ' +
          'IWorkTreeCustomNode ' +
          'IWorkTreeJobNode ' +
          'IWorkTreeTaskNode ' +
          'IXMLEditorForm ' +
          'SBCrypto ';

        // built_in : встроенные или библиотечные объекты (константы, перечисления)
        var BUILTIN = CONSTANTS + ENUMS;

        // class: встроенные наборы значений, системные объекты, фабрики
        var CLASS = predefined_variables;

        // literal : примитивные типы
        var LITERAL = 'null true false nil ';

        // number : числа
        var NUMBERS = {
          className: 'number',
          begin: hljs.NUMBER_RE,
          relevance: 0
        };

        // string : строки
        var STRINGS = {
          className: 'string',
          variants: [{ begin: '"', end: '"' }, { begin: "'", end: "'" }]
        };

        // Токены
        var DOCTAGS = {
          className: 'doctag',
          begin: '\\b(?:TODO|DONE|BEGIN|END|STUB|CHG|FIXME|NOTE|BUG|XXX)\\b',
          relevance: 0
        };

        // Однострочный комментарий
        var ISBL_LINE_COMMENT_MODE = {
          className: 'comment',
          begin: '//',
          end: '$',
          relevance: 0,
          contains: [hljs.PHRASAL_WORDS_MODE, DOCTAGS]
        };

        // Многострочный комментарий
        var ISBL_BLOCK_COMMENT_MODE = {
          className: 'comment',
          begin: '/\\*',
          end: '\\*/',
          relevance: 0,
          contains: [hljs.PHRASAL_WORDS_MODE, DOCTAGS]
        };

        // comment : комментарии
        var COMMENTS = {
          variants: [ISBL_LINE_COMMENT_MODE, ISBL_BLOCK_COMMENT_MODE]
        };

        // keywords : ключевые слова
        var KEYWORDS = {
          keyword: KEYWORD,
          built_in: BUILTIN,
          class: CLASS,
          literal: LITERAL
        };

        // methods : методы
        var METHODS = {
          begin: '\\.\\s*' + hljs.UNDERSCORE_IDENT_RE,
          keywords: KEYWORDS,
          relevance: 0
        };

        // type : встроенные типы
        var TYPES = {
          className: 'type',
          begin: ':[ \\t]*(' + interfaces.trim().replace(/\s/g, '|') + ')',
          end: '[ \\t]*=',
          excludeEnd: true
        };

        // variables : переменные
        var VARIABLES = {
          className: 'variable',
          lexemes: UNDERSCORE_IDENT_RE,
          keywords: KEYWORDS,
          begin: UNDERSCORE_IDENT_RE,
          relevance: 0,
          containts: [TYPES, METHODS]
        };

        // Имена функций
        var FUNCTION_TITLE = FUNCTION_NAME_IDENT_RE + '\\(';

        var TITLE_MODE = {
          className: 'title',
          lexemes: UNDERSCORE_IDENT_RE,
          keywords: {
            built_in: system_functions
          },
          begin: FUNCTION_TITLE,
          end: '\\(',
          returnBegin: true,
          excludeEnd: true
        };

        // function : функции
        var FUNCTIONS = {
          className: 'function',
          begin: FUNCTION_TITLE,
          end: '\\)$',
          returnBegin: true,
          lexemes: UNDERSCORE_IDENT_RE,
          keywords: KEYWORDS,
          illegal: '[\\[\\]\\|\\$\\?%,~#@]',
          contains: [TITLE_MODE, METHODS, VARIABLES, STRINGS, NUMBERS, COMMENTS]
        };

        return {
          aliases: ['isbl'],
          case_insensitive: true,
          lexemes: UNDERSCORE_IDENT_RE,
          keywords: KEYWORDS,
          illegal: '\\$|\\?|%|,|;$|~|#|@|</',
          contains: [
            FUNCTIONS,
            TYPES,
            METHODS,
            VARIABLES,
            STRINGS,
            NUMBERS,
            COMMENTS
          ]
        };
      };

      /***/
    },
    /* 432 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var JAVA_IDENT_RE =
          '[\u00C0-\u02B8a-zA-Z_$][\u00C0-\u02B8a-zA-Z_$0-9]*';
        var GENERIC_IDENT_RE =
          JAVA_IDENT_RE +
          '(<' +
          JAVA_IDENT_RE +
          '(\\s*,\\s*' +
          JAVA_IDENT_RE +
          ')*>)?';
        var KEYWORDS =
          'false synchronized int abstract float private char boolean var static null if const ' +
          'for true while long strictfp finally protected import native final void ' +
          'enum else break transient catch instanceof byte super volatile case assert short ' +
          'package default double public try this switch continue throws protected public private ' +
          'module requires exports do';

        // https://docs.oracle.com/javase/7/docs/technotes/guides/language/underscores-literals.html
        var JAVA_NUMBER_RE =
          '\\b' +
          '(' +
          '0[bB]([01]+[01_]+[01]+|[01]+)' + // 0b...
          '|' +
          '0[xX]([a-fA-F0-9]+[a-fA-F0-9_]+[a-fA-F0-9]+|[a-fA-F0-9]+)' + // 0x...
          '|' +
          '(' +
          '([\\d]+[\\d_]+[\\d]+|[\\d]+)(\\.([\\d]+[\\d_]+[\\d]+|[\\d]+))?' +
          '|' +
          '\\.([\\d]+[\\d_]+[\\d]+|[\\d]+)' +
          ')' +
          '([eE][-+]?\\d+)?' + // octal, decimal, float
          ')' +
          '[lLfF]?';
        var JAVA_NUMBER_MODE = {
          className: 'number',
          begin: JAVA_NUMBER_RE,
          relevance: 0
        };

        return {
          aliases: ['jsp'],
          keywords: KEYWORDS,
          illegal: /<\/|#/,
          contains: [
            hljs.COMMENT('/\\*\\*', '\\*/', {
              relevance: 0,
              contains: [
                {
                  // eat up @'s in emails to prevent them to be recognized as doctags
                  begin: /\w+@/,
                  relevance: 0
                },
                {
                  className: 'doctag',
                  begin: '@[A-Za-z]+'
                }
              ]
            }),
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: 'class',
              beginKeywords: 'class interface',
              end: /[{;=]/,
              excludeEnd: true,
              keywords: 'class interface',
              illegal: /[:"\[\]]/,
              contains: [
                { beginKeywords: 'extends implements' },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            },
            {
              // Expression keywords prevent 'keyword Name(...)' from being
              // recognized as a function definition
              beginKeywords: 'new throw return else',
              relevance: 0
            },
            {
              className: 'function',
              begin:
                '(' +
                GENERIC_IDENT_RE +
                '\\s+)+' +
                hljs.UNDERSCORE_IDENT_RE +
                '\\s*\\(',
              returnBegin: true,
              end: /[{;=]/,
              excludeEnd: true,
              keywords: KEYWORDS,
              contains: [
                {
                  begin: hljs.UNDERSCORE_IDENT_RE + '\\s*\\(',
                  returnBegin: true,
                  relevance: 0,
                  contains: [hljs.UNDERSCORE_TITLE_MODE]
                },
                {
                  className: 'params',
                  begin: /\(/,
                  end: /\)/,
                  keywords: KEYWORDS,
                  relevance: 0,
                  contains: [
                    hljs.APOS_STRING_MODE,
                    hljs.QUOTE_STRING_MODE,
                    hljs.C_NUMBER_MODE,
                    hljs.C_BLOCK_COMMENT_MODE
                  ]
                },
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },
            JAVA_NUMBER_MODE,
            {
              className: 'meta',
              begin: '@[A-Za-z]+'
            }
          ]
        };
      };

      /***/
    },
    /* 433 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';
        var KEYWORDS = {
          keyword:
            'in of if for while finally var new function do return void else break catch ' +
            'instanceof with throw case default try this switch continue typeof delete ' +
            'let yield const export super debugger as async await static ' +
            // ECMAScript 6 modules import
            'import from as',
          literal: 'true false null undefined NaN Infinity',
          built_in:
            'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +
            'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +
            'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +
            'TypeError URIError Number Math Date String RegExp Array Float32Array ' +
            'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +
            'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +
            'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +
            'Promise'
        };
        var EXPRESSIONS;
        var NUMBER = {
          className: 'number',
          variants: [
            { begin: '\\b(0[bB][01]+)' },
            { begin: '\\b(0[oO][0-7]+)' },
            { begin: hljs.C_NUMBER_RE }
          ],
          relevance: 0
        };
        var SUBST = {
          className: 'subst',
          begin: '\\$\\{',
          end: '\\}',
          keywords: KEYWORDS,
          contains: [] // defined later
        };
        var TEMPLATE_STRING = {
          className: 'string',
          begin: '`',
          end: '`',
          contains: [hljs.BACKSLASH_ESCAPE, SUBST]
        };
        SUBST.contains = [
          hljs.APOS_STRING_MODE,
          hljs.QUOTE_STRING_MODE,
          TEMPLATE_STRING,
          NUMBER,
          hljs.REGEXP_MODE
        ];
        var PARAMS_CONTAINS = SUBST.contains.concat([
          hljs.C_BLOCK_COMMENT_MODE,
          hljs.C_LINE_COMMENT_MODE
        ]);

        return {
          aliases: ['js', 'jsx'],
          keywords: KEYWORDS,
          contains: [
            {
              className: 'meta',
              relevance: 10,
              begin: /^\s*['"]use (strict|asm)['"]/
            },
            {
              className: 'meta',
              begin: /^#!/,
              end: /$/
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            TEMPLATE_STRING,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            NUMBER,
            {
              // object attr container
              begin: /[{,]\s*/,
              relevance: 0,
              contains: [
                {
                  begin: IDENT_RE + '\\s*:',
                  returnBegin: true,
                  relevance: 0,
                  contains: [
                    { className: 'attr', begin: IDENT_RE, relevance: 0 }
                  ]
                }
              ]
            },
            {
              // "value" container
              begin:
                '(' + hljs.RE_STARTERS_RE + '|\\b(case|return|throw)\\b)\\s*',
              keywords: 'return throw case',
              contains: [
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                hljs.REGEXP_MODE,
                {
                  className: 'function',
                  begin: '(\\(.*?\\)|' + IDENT_RE + ')\\s*=>',
                  returnBegin: true,
                  end: '\\s*=>',
                  contains: [
                    {
                      className: 'params',
                      variants: [
                        {
                          begin: IDENT_RE
                        },
                        {
                          begin: /\(\s*\)/
                        },
                        {
                          begin: /\(/,
                          end: /\)/,
                          excludeBegin: true,
                          excludeEnd: true,
                          keywords: KEYWORDS,
                          contains: PARAMS_CONTAINS
                        }
                      ]
                    }
                  ]
                },
                {
                  // E4X / JSX
                  begin: /</,
                  end: /(\/\w+|\w+\/)>/,
                  subLanguage: 'xml',
                  contains: [
                    { begin: /<\w+\s*\/>/, skip: true },
                    {
                      begin: /<\w+/,
                      end: /(\/\w+|\w+\/)>/,
                      skip: true,
                      contains: [{ begin: /<\w+\s*\/>/, skip: true }, 'self']
                    }
                  ]
                }
              ],
              relevance: 0
            },
            {
              className: 'function',
              beginKeywords: 'function',
              end: /\{/,
              excludeEnd: true,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE }),
                {
                  className: 'params',
                  begin: /\(/,
                  end: /\)/,
                  excludeBegin: true,
                  excludeEnd: true,
                  contains: PARAMS_CONTAINS
                }
              ],
              illegal: /\[|%/
            },
            {
              begin: /\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`
            },
            hljs.METHOD_GUARD,
            {
              // ES6 class
              className: 'class',
              beginKeywords: 'class',
              end: /[{;=]/,
              excludeEnd: true,
              illegal: /[:"\[\]]/,
              contains: [
                { beginKeywords: 'extends' },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            },
            {
              beginKeywords: 'constructor',
              end: /\{/,
              excludeEnd: true
            }
          ],
          illegal: /#(?!!)/
        };
      };

      /***/
    },
    /* 434 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var PARAM = {
          begin: /[\w-]+ *=/,
          returnBegin: true,
          relevance: 0,
          contains: [{ className: 'attr', begin: /[\w-]+/ }]
        };
        var PARAMSBLOCK = {
          className: 'params',
          begin: /\(/,
          end: /\)/,
          contains: [PARAM],
          relevance: 0
        };
        var OPERATION = {
          className: 'function',
          begin: /:[\w\-.]+/,
          relevance: 0
        };
        var PATH = {
          className: 'string',
          begin: /\B(([\/.])[\w\-.\/=]+)+/
        };
        var COMMAND_PARAMS = {
          className: 'params',
          begin: /--[\w\-=\/]+/
        };
        return {
          aliases: ['wildfly-cli'],
          lexemes: '[a-z-]+',
          keywords: {
            keyword:
              'alias batch cd clear command connect connection-factory connection-info data-source deploy ' +
              'deployment-info deployment-overlay echo echo-dmr help history if jdbc-driver-info jms-queue|20 jms-topic|20 ls ' +
              'patch pwd quit read-attribute read-operation reload rollout-plan run-batch set shutdown try unalias ' +
              'undeploy unset version xa-data-source', // module
            literal: 'true false'
          },
          contains: [
            hljs.HASH_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            COMMAND_PARAMS,
            OPERATION,
            PATH,
            PARAMSBLOCK
          ]
        };
      };

      /***/
    },
    /* 435 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var LITERALS = { literal: 'true false null' };
        var TYPES = [hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE];
        var VALUE_CONTAINER = {
          end: ',',
          endsWithParent: true,
          excludeEnd: true,
          contains: TYPES,
          keywords: LITERALS
        };
        var OBJECT = {
          begin: '{',
          end: '}',
          contains: [
            {
              className: 'attr',
              begin: /"/,
              end: /"/,
              contains: [hljs.BACKSLASH_ESCAPE],
              illegal: '\\n'
            },
            hljs.inherit(VALUE_CONTAINER, { begin: /:/ })
          ],
          illegal: '\\S'
        };
        var ARRAY = {
          begin: '\\[',
          end: '\\]',
          contains: [hljs.inherit(VALUE_CONTAINER)], // inherit is a workaround for a bug that makes shared modes with endsWithParent compile only the ending of one of the parents
          illegal: '\\S'
        };
        TYPES.splice(TYPES.length, 0, OBJECT, ARRAY);
        return {
          contains: TYPES,
          keywords: LITERALS,
          illegal: '\\S'
        };
      };

      /***/
    },
    /* 436 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        // Since there are numerous special names in Julia, it is too much trouble
        // to maintain them by hand. Hence these names (i.e. keywords, literals and
        // built-ins) are automatically generated from Julia v0.6 itself through
        // the following scripts for each.

        var KEYWORDS = {
          // # keyword generator, multi-word keywords handled manually below
          // foreach(println, ["in", "isa", "where"])
          // for kw in Base.REPLCompletions.complete_keyword("")
          //     if !(contains(kw, " ") || kw == "struct")
          //         println(kw)
          //     end
          // end
          keyword:
            'in isa where ' +
            'baremodule begin break catch ccall const continue do else elseif end export false finally for function ' +
            'global if import importall let local macro module quote return true try using while ' +
            // legacy, to be deprecated in the next release
            'type immutable abstract bitstype typealias ',

          // # literal generator
          // println("true")
          // println("false")
          // for name in Base.REPLCompletions.completions("", 0)[1]
          //     try
          //         v = eval(Symbol(name))
          //         if !(v isa Function || v isa Type || v isa TypeVar || v isa Module || v isa Colon)
          //             println(name)
          //         end
          //     end
          // end
          literal:
            'true false ' +
            'ARGS C_NULL DevNull ENDIAN_BOM ENV I Inf Inf16 Inf32 Inf64 InsertionSort JULIA_HOME LOAD_PATH MergeSort ' +
            'NaN NaN16 NaN32 NaN64 PROGRAM_FILE QuickSort RoundDown RoundFromZero RoundNearest RoundNearestTiesAway ' +
            'RoundNearestTiesUp RoundToZero RoundUp STDERR STDIN STDOUT VERSION catalan e|0 eu|0 eulergamma golden im ' +
            'nothing pi γ π φ ',

          // # built_in generator:
          // for name in Base.REPLCompletions.completions("", 0)[1]
          //     try
          //         v = eval(Symbol(name))
          //         if v isa Type || v isa TypeVar
          //             println(name)
          //         end
          //     end
          // end
          built_in:
            'ANY AbstractArray AbstractChannel AbstractFloat AbstractMatrix AbstractRNG AbstractSerializer AbstractSet ' +
            'AbstractSparseArray AbstractSparseMatrix AbstractSparseVector AbstractString AbstractUnitRange AbstractVecOrMat ' +
            'AbstractVector Any ArgumentError Array AssertionError Associative Base64DecodePipe Base64EncodePipe Bidiagonal ' +
            'BigFloat BigInt BitArray BitMatrix BitVector Bool BoundsError BufferStream CachingPool CapturedException ' +
            'CartesianIndex CartesianRange Cchar Cdouble Cfloat Channel Char Cint Cintmax_t Clong Clonglong ClusterManager ' +
            'Cmd CodeInfo Colon Complex Complex128 Complex32 Complex64 CompositeException Condition ConjArray ConjMatrix ' +
            'ConjVector Cptrdiff_t Cshort Csize_t Cssize_t Cstring Cuchar Cuint Cuintmax_t Culong Culonglong Cushort Cwchar_t ' +
            'Cwstring DataType Date DateFormat DateTime DenseArray DenseMatrix DenseVecOrMat DenseVector Diagonal Dict ' +
            'DimensionMismatch Dims DirectIndexString Display DivideError DomainError EOFError EachLine Enum Enumerate ' +
            'ErrorException Exception ExponentialBackOff Expr Factorization FileMonitor Float16 Float32 Float64 Function ' +
            'Future GlobalRef GotoNode HTML Hermitian IO IOBuffer IOContext IOStream IPAddr IPv4 IPv6 IndexCartesian IndexLinear ' +
            'IndexStyle InexactError InitError Int Int128 Int16 Int32 Int64 Int8 IntSet Integer InterruptException ' +
            'InvalidStateException Irrational KeyError LabelNode LinSpace LineNumberNode LoadError LowerTriangular MIME Matrix ' +
            'MersenneTwister Method MethodError MethodTable Module NTuple NewvarNode NullException Nullable Number ObjectIdDict ' +
            'OrdinalRange OutOfMemoryError OverflowError Pair ParseError PartialQuickSort PermutedDimsArray Pipe ' +
            'PollingFileWatcher ProcessExitedException Ptr QuoteNode RandomDevice Range RangeIndex Rational RawFD ' +
            'ReadOnlyMemoryError Real ReentrantLock Ref Regex RegexMatch RemoteChannel RemoteException RevString RoundingMode ' +
            'RowVector SSAValue SegmentationFault SerializationState Set SharedArray SharedMatrix SharedVector Signed ' +
            'SimpleVector Slot SlotNumber SparseMatrixCSC SparseVector StackFrame StackOverflowError StackTrace StepRange ' +
            'StepRangeLen StridedArray StridedMatrix StridedVecOrMat StridedVector String SubArray SubString SymTridiagonal ' +
            'Symbol Symmetric SystemError TCPSocket Task Text TextDisplay Timer Tridiagonal Tuple Type TypeError TypeMapEntry ' +
            'TypeMapLevel TypeName TypeVar TypedSlot UDPSocket UInt UInt128 UInt16 UInt32 UInt64 UInt8 UndefRefError UndefVarError ' +
            'UnicodeError UniformScaling Union UnionAll UnitRange Unsigned UpperTriangular Val Vararg VecElement VecOrMat Vector ' +
            'VersionNumber Void WeakKeyDict WeakRef WorkerConfig WorkerPool '
        };

        // ref: http://julia.readthedocs.org/en/latest/manual/variables/#allowed-variable-names
        var VARIABLE_NAME_RE =
          '[A-Za-z_\\u00A1-\\uFFFF][A-Za-z_0-9\\u00A1-\\uFFFF]*';

        // placeholder for recursive self-reference
        var DEFAULT = {
          lexemes: VARIABLE_NAME_RE,
          keywords: KEYWORDS,
          illegal: /<\//
        };

        // ref: http://julia.readthedocs.org/en/latest/manual/integers-and-floating-point-numbers/
        var NUMBER = {
          className: 'number',
          // supported numeric literals:
          //  * binary literal (e.g. 0x10)
          //  * octal literal (e.g. 0o76543210)
          //  * hexadecimal literal (e.g. 0xfedcba876543210)
          //  * hexadecimal floating point literal (e.g. 0x1p0, 0x1.2p2)
          //  * decimal literal (e.g. 9876543210, 100_000_000)
          //  * floating pointe literal (e.g. 1.2, 1.2f, .2, 1., 1.2e10, 1.2e-10)
          begin: /(\b0x[\d_]*(\.[\d_]*)?|0x\.\d[\d_]*)p[-+]?\d+|\b0[box][a-fA-F0-9][a-fA-F0-9_]*|(\b\d[\d_]*(\.[\d_]*)?|\.\d[\d_]*)([eEfF][-+]?\d+)?/,
          relevance: 0
        };

        var CHAR = {
          className: 'string',
          begin: /'(.|\\[xXuU][a-zA-Z0-9]+)'/
        };

        var INTERPOLATION = {
          className: 'subst',
          begin: /\$\(/,
          end: /\)/,
          keywords: KEYWORDS
        };

        var INTERPOLATED_VARIABLE = {
          className: 'variable',
          begin: '\\$' + VARIABLE_NAME_RE
        };

        // TODO: neatly escape normal code in string literal
        var STRING = {
          className: 'string',
          contains: [
            hljs.BACKSLASH_ESCAPE,
            INTERPOLATION,
            INTERPOLATED_VARIABLE
          ],
          variants: [
            { begin: /\w*"""/, end: /"""\w*/, relevance: 10 },
            { begin: /\w*"/, end: /"\w*/ }
          ]
        };

        var COMMAND = {
          className: 'string',
          contains: [
            hljs.BACKSLASH_ESCAPE,
            INTERPOLATION,
            INTERPOLATED_VARIABLE
          ],
          begin: '`',
          end: '`'
        };

        var MACROCALL = {
          className: 'meta',
          begin: '@' + VARIABLE_NAME_RE
        };

        var COMMENT = {
          className: 'comment',
          variants: [
            { begin: '#=', end: '=#', relevance: 10 },
            { begin: '#', end: '$' }
          ]
        };

        DEFAULT.contains = [
          NUMBER,
          CHAR,
          STRING,
          COMMAND,
          MACROCALL,
          COMMENT,
          hljs.HASH_COMMENT_MODE,
          {
            className: 'keyword',
            begin: '\\b(((abstract|primitive)\\s+)type|(mutable\\s+)?struct)\\b'
          },
          { begin: /<:/ } // relevance booster
        ];
        INTERPOLATION.contains = DEFAULT.contains;

        return DEFAULT;
      };

      /***/
    },
    /* 437 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            {
              className: 'meta',
              begin: /^julia>/,
              relevance: 10,
              starts: {
                // end the highlighting if we are on a new line and the line does not have at
                // least six spaces in the beginning
                end: /^(?![ ]{6})/,
                subLanguage: 'julia'
              },
              // jldoctest Markdown blocks are used in the Julia manual and package docs indicate
              // code snippets that should be verified when the documentation is built. They can be
              // either REPL-like or script-like, but are usually REPL-like and therefore we apply
              // julia-repl highlighting to them. More information can be found in Documenter's
              // manual: https://juliadocs.github.io/Documenter.jl/latest/man/doctests.html
              aliases: ['jldoctest']
            }
          ]
        };
      };

      /***/
    },
    /* 438 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            'abstract as val var vararg get set class object open private protected public noinline ' +
            'crossinline dynamic final enum if else do while for when throw try catch finally ' +
            'import package is in fun override companion reified inline lateinit init ' +
            'interface annotation data sealed internal infix operator out by constructor super ' +
            'tailrec where const inner suspend typealias external expect actual ' +
            // to be deleted soon
            'trait volatile transient native default',
          built_in:
            'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',
          literal: 'true false null'
        };
        var KEYWORDS_WITH_LABEL = {
          className: 'keyword',
          begin: /\b(break|continue|return|this)\b/,
          starts: {
            contains: [
              {
                className: 'symbol',
                begin: /@\w+/
              }
            ]
          }
        };
        var LABEL = {
          className: 'symbol',
          begin: hljs.UNDERSCORE_IDENT_RE + '@'
        };

        // for string templates
        var SUBST = {
          className: 'subst',
          begin: '\\${',
          end: '}',
          contains: [hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE]
        };
        var VARIABLE = {
          className: 'variable',
          begin: '\\$' + hljs.UNDERSCORE_IDENT_RE
        };
        var STRING = {
          className: 'string',
          variants: [
            {
              begin: '"""',
              end: '"""',
              contains: [VARIABLE, SUBST]
            },
            // Can't use built-in modes easily, as we want to use STRING in the meta
            // context as 'meta-string' and there's no syntax to remove explicitly set
            // classNames in built-in modes.
            {
              begin: "'",
              end: "'",
              illegal: /\n/,
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              begin: '"',
              end: '"',
              illegal: /\n/,
              contains: [hljs.BACKSLASH_ESCAPE, VARIABLE, SUBST]
            }
          ]
        };

        var ANNOTATION_USE_SITE = {
          className: 'meta',
          begin:
            '@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\s*:(?:\\s*' +
            hljs.UNDERSCORE_IDENT_RE +
            ')?'
        };
        var ANNOTATION = {
          className: 'meta',
          begin: '@' + hljs.UNDERSCORE_IDENT_RE,
          contains: [
            {
              begin: /\(/,
              end: /\)/,
              contains: [hljs.inherit(STRING, { className: 'meta-string' })]
            }
          ]
        };

        // https://kotlinlang.org/docs/reference/whatsnew11.html#underscores-in-numeric-literals
        // According to the doc above, the number mode of kotlin is the same as java 8,
        // so the code below is copied from java.js
        var KOTLIN_NUMBER_RE =
          '\\b' +
          '(' +
          '0[bB]([01]+[01_]+[01]+|[01]+)' + // 0b...
          '|' +
          '0[xX]([a-fA-F0-9]+[a-fA-F0-9_]+[a-fA-F0-9]+|[a-fA-F0-9]+)' + // 0x...
          '|' +
          '(' +
          '([\\d]+[\\d_]+[\\d]+|[\\d]+)(\\.([\\d]+[\\d_]+[\\d]+|[\\d]+))?' +
          '|' +
          '\\.([\\d]+[\\d_]+[\\d]+|[\\d]+)' +
          ')' +
          '([eE][-+]?\\d+)?' + // octal, decimal, float
          ')' +
          '[lLfF]?';
        var KOTLIN_NUMBER_MODE = {
          className: 'number',
          begin: KOTLIN_NUMBER_RE,
          relevance: 0
        };

        return {
          aliases: ['kt'],
          keywords: KEYWORDS,
          contains: [
            hljs.COMMENT('/\\*\\*', '\\*/', {
              relevance: 0,
              contains: [
                {
                  className: 'doctag',
                  begin: '@[A-Za-z]+'
                }
              ]
            }),
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            KEYWORDS_WITH_LABEL,
            LABEL,
            ANNOTATION_USE_SITE,
            ANNOTATION,
            {
              className: 'function',
              beginKeywords: 'fun',
              end: '[(]|$',
              returnBegin: true,
              excludeEnd: true,
              keywords: KEYWORDS,
              illegal: /fun\s+(<.*>)?[^\s\(]+(\s+[^\s\(]+)\s*=/,
              relevance: 5,
              contains: [
                {
                  begin: hljs.UNDERSCORE_IDENT_RE + '\\s*\\(',
                  returnBegin: true,
                  relevance: 0,
                  contains: [hljs.UNDERSCORE_TITLE_MODE]
                },
                {
                  className: 'type',
                  begin: /</,
                  end: />/,
                  keywords: 'reified',
                  relevance: 0
                },
                {
                  className: 'params',
                  begin: /\(/,
                  end: /\)/,
                  endsParent: true,
                  keywords: KEYWORDS,
                  relevance: 0,
                  contains: [
                    {
                      begin: /:/,
                      end: /[=,\/]/,
                      endsWithParent: true,
                      contains: [
                        { className: 'type', begin: hljs.UNDERSCORE_IDENT_RE },
                        hljs.C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE
                      ],
                      relevance: 0
                    },
                    hljs.C_LINE_COMMENT_MODE,
                    hljs.C_BLOCK_COMMENT_MODE,
                    ANNOTATION_USE_SITE,
                    ANNOTATION,
                    STRING,
                    hljs.C_NUMBER_MODE
                  ]
                },
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },
            {
              className: 'class',
              beginKeywords: 'class interface trait',
              end: /[:\{(]|$/, // remove 'trait' when removed from KEYWORDS
              excludeEnd: true,
              illegal: 'extends implements',
              contains: [
                {
                  beginKeywords: 'public protected internal private constructor'
                },
                hljs.UNDERSCORE_TITLE_MODE,
                {
                  className: 'type',
                  begin: /</,
                  end: />/,
                  excludeBegin: true,
                  excludeEnd: true,
                  relevance: 0
                },
                {
                  className: 'type',
                  begin: /[,:]\s*/,
                  end: /[<\(,]|$/,
                  excludeBegin: true,
                  returnEnd: true
                },
                ANNOTATION_USE_SITE,
                ANNOTATION
              ]
            },
            STRING,
            {
              className: 'meta',
              begin: '^#!/usr/bin/env',
              end: '$',
              illegal: '\n'
            },
            KOTLIN_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 439 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var LASSO_IDENT_RE = '[a-zA-Z_][\\w.]*';
        var LASSO_ANGLE_RE = '<\\?(lasso(script)?|=)';
        var LASSO_CLOSE_RE = '\\]|\\?>';
        var LASSO_KEYWORDS = {
          literal:
            'true false none minimal full all void and or not ' +
            'bw nbw ew new cn ncn lt lte gt gte eq neq rx nrx ft',
          built_in:
            'array date decimal duration integer map pair string tag xml null ' +
            'boolean bytes keyword list locale queue set stack staticarray ' +
            'local var variable global data self inherited currentcapture givenblock',
          keyword:
            'cache database_names database_schemanames database_tablenames ' +
            'define_tag define_type email_batch encode_set html_comment handle ' +
            'handle_error header if inline iterate ljax_target link ' +
            'link_currentaction link_currentgroup link_currentrecord link_detail ' +
            'link_firstgroup link_firstrecord link_lastgroup link_lastrecord ' +
            'link_nextgroup link_nextrecord link_prevgroup link_prevrecord log ' +
            'loop namespace_using output_none portal private protect records ' +
            'referer referrer repeating resultset rows search_args ' +
            'search_arguments select sort_args sort_arguments thread_atomic ' +
            'value_list while abort case else fail_if fail_ifnot fail if_empty ' +
            'if_false if_null if_true loop_abort loop_continue loop_count params ' +
            'params_up return return_value run_children soap_definetag ' +
            'soap_lastrequest soap_lastresponse tag_name ascending average by ' +
            'define descending do equals frozen group handle_failure import in ' +
            'into join let match max min on order parent protected provide public ' +
            'require returnhome skip split_thread sum take thread to trait type ' +
            'where with yield yieldhome'
        };
        var HTML_COMMENT = hljs.COMMENT('<!--', '-->', {
          relevance: 0
        });
        var LASSO_NOPROCESS = {
          className: 'meta',
          begin: '\\[noprocess\\]',
          starts: {
            end: '\\[/noprocess\\]',
            returnEnd: true,
            contains: [HTML_COMMENT]
          }
        };
        var LASSO_START = {
          className: 'meta',
          begin: '\\[/noprocess|' + LASSO_ANGLE_RE
        };
        var LASSO_DATAMEMBER = {
          className: 'symbol',
          begin: "'" + LASSO_IDENT_RE + "'"
        };
        var LASSO_CODE = [
          hljs.C_LINE_COMMENT_MODE,
          hljs.C_BLOCK_COMMENT_MODE,
          hljs.inherit(hljs.C_NUMBER_MODE, {
            begin: hljs.C_NUMBER_RE + '|(-?infinity|NaN)\\b'
          }),
          hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null }),
          hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),
          {
            className: 'string',
            begin: '`',
            end: '`'
          },
          {
            // variables
            variants: [
              {
                begin: '[#$]' + LASSO_IDENT_RE
              },
              {
                begin: '#',
                end: '\\d+',
                illegal: '\\W'
              }
            ]
          },
          {
            className: 'type',
            begin: '::\\s*',
            end: LASSO_IDENT_RE,
            illegal: '\\W'
          },
          {
            className: 'params',
            variants: [
              {
                begin: '-(?!infinity)' + LASSO_IDENT_RE,
                relevance: 0
              },
              {
                begin: '(\\.\\.\\.)'
              }
            ]
          },
          {
            begin: /(->|\.)\s*/,
            relevance: 0,
            contains: [LASSO_DATAMEMBER]
          },
          {
            className: 'class',
            beginKeywords: 'define',
            returnEnd: true,
            end: '\\(|=>',
            contains: [
              hljs.inherit(hljs.TITLE_MODE, {
                begin: LASSO_IDENT_RE + '(=(?!>))?|[-+*/%](?!>)'
              })
            ]
          }
        ];
        return {
          aliases: ['ls', 'lassoscript'],
          case_insensitive: true,
          lexemes: LASSO_IDENT_RE + '|&[lg]t;',
          keywords: LASSO_KEYWORDS,
          contains: [
            {
              className: 'meta',
              begin: LASSO_CLOSE_RE,
              relevance: 0,
              starts: {
                // markup
                end: '\\[|' + LASSO_ANGLE_RE,
                returnEnd: true,
                relevance: 0,
                contains: [HTML_COMMENT]
              }
            },
            LASSO_NOPROCESS,
            LASSO_START,
            {
              className: 'meta',
              begin: '\\[no_square_brackets',
              starts: {
                end: '\\[/no_square_brackets\\]', // not implemented in the language
                lexemes: LASSO_IDENT_RE + '|&[lg]t;',
                keywords: LASSO_KEYWORDS,
                contains: [
                  {
                    className: 'meta',
                    begin: LASSO_CLOSE_RE,
                    relevance: 0,
                    starts: {
                      end: '\\[noprocess\\]|' + LASSO_ANGLE_RE,
                      returnEnd: true,
                      contains: [HTML_COMMENT]
                    }
                  },
                  LASSO_NOPROCESS,
                  LASSO_START
                ].concat(LASSO_CODE)
              }
            },
            {
              className: 'meta',
              begin: '\\[',
              relevance: 0
            },
            {
              className: 'meta',
              begin: '^#!',
              end: 'lasso9$',
              relevance: 10
            }
          ].concat(LASSO_CODE)
        };
      };

      /***/
    },
    /* 440 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            {
              className: 'attribute',
              begin: '^dn',
              end: ': ',
              excludeEnd: true,
              starts: { end: '$', relevance: 0 },
              relevance: 10
            },
            {
              className: 'attribute',
              begin: '^\\w',
              end: ': ',
              excludeEnd: true,
              starts: { end: '$', relevance: 0 }
            },
            {
              className: 'literal',
              begin: '^-',
              end: '$'
            },
            hljs.HASH_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 441 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            {
              className: 'function',
              begin: '#+' + '[A-Za-z_0-9]*' + '\\(',
              end: ' {',
              returnBegin: true,
              excludeEnd: true,
              contains: [
                {
                  className: 'keyword',
                  begin: '#+'
                },
                {
                  className: 'title',
                  begin: '[A-Za-z_][A-Za-z_0-9]*'
                },
                {
                  className: 'params',
                  begin: '\\(',
                  end: '\\)',
                  endsParent: true,
                  contains: [
                    {
                      className: 'string',
                      begin: '"',
                      end: '"'
                    },
                    {
                      className: 'variable',
                      begin: '[A-Za-z_][A-Za-z_0-9]*'
                    }
                  ]
                }
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 442 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENT_RE = '[\\w-]+'; // yes, Less identifiers may begin with a digit
        var INTERP_IDENT_RE = '(' + IDENT_RE + '|@{' + IDENT_RE + '})';

        /* Generic Modes */

        var RULES = [],
          VALUE = []; // forward def. for recursive modes

        var STRING_MODE = function(c) {
          return {
            // Less strings are not multiline (also include '~' for more consistent coloring of "escaped" strings)
            className: 'string',
            begin: '~?' + c + '.*?' + c
          };
        };

        var IDENT_MODE = function(name, begin, relevance) {
          return {
            className: name,
            begin: begin,
            relevance: relevance
          };
        };

        var PARENS_MODE = {
          // used only to properly balance nested parens inside mixin call, def. arg list
          begin: '\\(',
          end: '\\)',
          contains: VALUE,
          relevance: 0
        };

        // generic Less highlighter (used almost everywhere except selectors):
        VALUE.push(
          hljs.C_LINE_COMMENT_MODE,
          hljs.C_BLOCK_COMMENT_MODE,
          STRING_MODE("'"),
          STRING_MODE('"'),
          hljs.CSS_NUMBER_MODE, // fixme: it does not include dot for numbers like .5em :(
          {
            begin: '(url|data-uri)\\(',
            starts: { className: 'string', end: '[\\)\\n]', excludeEnd: true }
          },
          IDENT_MODE('number', '#[0-9A-Fa-f]+\\b'),
          PARENS_MODE,
          IDENT_MODE('variable', '@@?' + IDENT_RE, 10),
          IDENT_MODE('variable', '@{' + IDENT_RE + '}'),
          IDENT_MODE('built_in', '~?`[^`]*?`'), // inline javascript (or whatever host language) *multiline* string
          {
            // @media features (it’s here to not duplicate things in AT_RULE_MODE with extra PARENS_MODE overriding):
            className: 'attribute',
            begin: IDENT_RE + '\\s*:',
            end: ':',
            returnBegin: true,
            excludeEnd: true
          },
          {
            className: 'meta',
            begin: '!important'
          }
        );

        var VALUE_WITH_RULESETS = VALUE.concat({
          begin: '{',
          end: '}',
          contains: RULES
        });

        var MIXIN_GUARD_MODE = {
          beginKeywords: 'when',
          endsWithParent: true,
          contains: [{ beginKeywords: 'and not' }].concat(VALUE) // using this form to override VALUE’s 'function' match
        };

        /* Rule-Level Modes */

        var RULE_MODE = {
          begin: INTERP_IDENT_RE + '\\s*:',
          returnBegin: true,
          end: '[;}]',
          relevance: 0,
          contains: [
            {
              className: 'attribute',
              begin: INTERP_IDENT_RE,
              end: ':',
              excludeEnd: true,
              starts: {
                endsWithParent: true,
                illegal: '[<=$]',
                relevance: 0,
                contains: VALUE
              }
            }
          ]
        };

        var AT_RULE_MODE = {
          className: 'keyword',
          begin:
            '@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\b',
          starts: {
            end: '[;{}]',
            returnEnd: true,
            contains: VALUE,
            relevance: 0
          }
        };

        // variable definitions and calls
        var VAR_RULE_MODE = {
          className: 'variable',
          variants: [
            // using more strict pattern for higher relevance to increase chances of Less detection.
            // this is *the only* Less specific statement used in most of the sources, so...
            // (we’ll still often loose to the css-parser unless there's '//' comment,
            // simply because 1 variable just can't beat 99 properties :)
            { begin: '@' + IDENT_RE + '\\s*:', relevance: 15 },
            { begin: '@' + IDENT_RE }
          ],
          starts: {
            end: '[;}]',
            returnEnd: true,
            contains: VALUE_WITH_RULESETS
          }
        };

        var SELECTOR_MODE = {
          // first parse unambiguous selectors (i.e. those not starting with tag)
          // then fall into the scary lookahead-discriminator variant.
          // this mode also handles mixin definitions and calls
          variants: [
            {
              begin: '[\\.#:&\\[>]',
              end: '[;{}]' // mixin calls end with ';'
            },
            {
              begin: INTERP_IDENT_RE,
              end: '{'
            }
          ],
          returnBegin: true,
          returnEnd: true,
          illegal: '[<=\'$"]',
          relevance: 0,
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            MIXIN_GUARD_MODE,
            IDENT_MODE('keyword', 'all\\b'),
            IDENT_MODE('variable', '@{' + IDENT_RE + '}'), // otherwise it’s identified as tag
            IDENT_MODE('selector-tag', INTERP_IDENT_RE + '%?', 0), // '%' for more consistent coloring of @keyframes "tags"
            IDENT_MODE('selector-id', '#' + INTERP_IDENT_RE),
            IDENT_MODE('selector-class', '\\.' + INTERP_IDENT_RE, 0),
            IDENT_MODE('selector-tag', '&', 0),
            { className: 'selector-attr', begin: '\\[', end: '\\]' },
            {
              className: 'selector-pseudo',
              begin: /:(:)?[a-zA-Z0-9\_\-\+\(\)"'.]+/
            },
            { begin: '\\(', end: '\\)', contains: VALUE_WITH_RULESETS }, // argument list of parametric mixins
            { begin: '!important' } // eat !important after mixin call or it will be colored as tag
          ]
        };

        RULES.push(
          hljs.C_LINE_COMMENT_MODE,
          hljs.C_BLOCK_COMMENT_MODE,
          AT_RULE_MODE,
          VAR_RULE_MODE,
          RULE_MODE,
          SELECTOR_MODE
        );

        return {
          case_insensitive: true,
          illegal: '[=>\'/<($"]',
          contains: RULES
        };
      };

      /***/
    },
    /* 443 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var LISP_IDENT_RE =
          '[a-zA-Z_\\-\\+\\*\\/\\<\\=\\>\\&\\#][a-zA-Z0-9_\\-\\+\\*\\/\\<\\=\\>\\&\\#!]*';
        var MEC_RE = '\\|[^]*?\\|';
        var LISP_SIMPLE_NUMBER_RE =
          '(\\-|\\+)?\\d+(\\.\\d+|\\/\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\+|\\-)?\\d+)?';
        var SHEBANG = {
          className: 'meta',
          begin: '^#!',
          end: '$'
        };
        var LITERAL = {
          className: 'literal',
          begin: '\\b(t{1}|nil)\\b'
        };
        var NUMBER = {
          className: 'number',
          variants: [
            { begin: LISP_SIMPLE_NUMBER_RE, relevance: 0 },
            { begin: '#(b|B)[0-1]+(/[0-1]+)?' },
            { begin: '#(o|O)[0-7]+(/[0-7]+)?' },
            { begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?' },
            {
              begin:
                '#(c|C)\\(' +
                LISP_SIMPLE_NUMBER_RE +
                ' +' +
                LISP_SIMPLE_NUMBER_RE,
              end: '\\)'
            }
          ]
        };
        var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });
        var COMMENT = hljs.COMMENT(';', '$', {
          relevance: 0
        });
        var VARIABLE = {
          begin: '\\*',
          end: '\\*'
        };
        var KEYWORD = {
          className: 'symbol',
          begin: '[:&]' + LISP_IDENT_RE
        };
        var IDENT = {
          begin: LISP_IDENT_RE,
          relevance: 0
        };
        var MEC = {
          begin: MEC_RE
        };
        var QUOTED_LIST = {
          begin: '\\(',
          end: '\\)',
          contains: ['self', LITERAL, STRING, NUMBER, IDENT]
        };
        var QUOTED = {
          contains: [NUMBER, STRING, VARIABLE, KEYWORD, QUOTED_LIST, IDENT],
          variants: [
            {
              begin: "['`]\\(",
              end: '\\)'
            },
            {
              begin: '\\(quote ',
              end: '\\)',
              keywords: { name: 'quote' }
            },
            {
              begin: "'" + MEC_RE
            }
          ]
        };
        var QUOTED_ATOM = {
          variants: [
            { begin: "'" + LISP_IDENT_RE },
            { begin: "#'" + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*' }
          ]
        };
        var LIST = {
          begin: '\\(\\s*',
          end: '\\)'
        };
        var BODY = {
          endsWithParent: true,
          relevance: 0
        };
        LIST.contains = [
          {
            className: 'name',
            variants: [{ begin: LISP_IDENT_RE }, { begin: MEC_RE }]
          },
          BODY
        ];
        BODY.contains = [
          QUOTED,
          QUOTED_ATOM,
          LIST,
          LITERAL,
          NUMBER,
          STRING,
          COMMENT,
          VARIABLE,
          KEYWORD,
          MEC,
          IDENT
        ];

        return {
          illegal: /\S/,
          contains: [
            NUMBER,
            SHEBANG,
            LITERAL,
            STRING,
            COMMENT,
            QUOTED,
            QUOTED_ATOM,
            LIST,
            IDENT
          ]
        };
      };

      /***/
    },
    /* 444 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var VARIABLE = {
          begin: '\\b[gtps][A-Z]+[A-Za-z0-9_\\-]*\\b|\\$_[A-Z]+',
          relevance: 0
        };
        var COMMENT_MODES = [
          hljs.C_BLOCK_COMMENT_MODE,
          hljs.HASH_COMMENT_MODE,
          hljs.COMMENT('--', '$'),
          hljs.COMMENT('[^:]//', '$')
        ];
        var TITLE1 = hljs.inherit(hljs.TITLE_MODE, {
          variants: [
            { begin: '\\b_*rig[A-Z]+[A-Za-z0-9_\\-]*' },
            { begin: '\\b_[a-z0-9\\-]+' }
          ]
        });
        var TITLE2 = hljs.inherit(hljs.TITLE_MODE, {
          begin: '\\b([A-Za-z0-9_\\-]+)\\b'
        });
        return {
          case_insensitive: false,
          keywords: {
            keyword:
              '$_COOKIE $_FILES $_GET $_GET_BINARY $_GET_RAW $_POST $_POST_BINARY $_POST_RAW $_SESSION $_SERVER ' +
              'codepoint codepoints segment segments codeunit codeunits sentence sentences trueWord trueWords paragraph ' +
              'after byte bytes english the until http forever descending using line real8 with seventh ' +
              'for stdout finally element word words fourth before black ninth sixth characters chars stderr ' +
              'uInt1 uInt1s uInt2 uInt2s stdin string lines relative rel any fifth items from middle mid ' +
              'at else of catch then third it file milliseconds seconds second secs sec int1 int1s int4 ' +
              'int4s internet int2 int2s normal text item last long detailed effective uInt4 uInt4s repeat ' +
              'end repeat URL in try into switch to words https token binfile each tenth as ticks tick ' +
              'system real4 by dateItems without char character ascending eighth whole dateTime numeric short ' +
              'first ftp integer abbreviated abbr abbrev private case while if ' +
              'div mod wrap and or bitAnd bitNot bitOr bitXor among not in a an within ' +
              'contains ends with begins the keys of keys',
            literal:
              'SIX TEN FORMFEED NINE ZERO NONE SPACE FOUR FALSE COLON CRLF PI COMMA ENDOFFILE EOF EIGHT FIVE ' +
              'QUOTE EMPTY ONE TRUE RETURN CR LINEFEED RIGHT BACKSLASH NULL SEVEN TAB THREE TWO ' +
              'six ten formfeed nine zero none space four false colon crlf pi comma endoffile eof eight five ' +
              'quote empty one true return cr linefeed right backslash null seven tab three two ' +
              'RIVERSION RISTATE FILE_READ_MODE FILE_WRITE_MODE FILE_WRITE_MODE DIR_WRITE_MODE FILE_READ_UMASK ' +
              'FILE_WRITE_UMASK DIR_READ_UMASK DIR_WRITE_UMASK',
            built_in:
              'put abs acos aliasReference annuity arrayDecode arrayEncode asin atan atan2 average avg avgDev base64Decode ' +
              'base64Encode baseConvert binaryDecode binaryEncode byteOffset byteToNum cachedURL cachedURLs charToNum ' +
              'cipherNames codepointOffset codepointProperty codepointToNum codeunitOffset commandNames compound compress ' +
              'constantNames cos date dateFormat decompress directories ' +
              'diskSpace DNSServers exp exp1 exp2 exp10 extents files flushEvents folders format functionNames geometricMean global ' +
              'globals hasMemory harmonicMean hostAddress hostAddressToName hostName hostNameToAddress isNumber ISOToMac itemOffset ' +
              'keys len length libURLErrorData libUrlFormData libURLftpCommand libURLLastHTTPHeaders libURLLastRHHeaders ' +
              'libUrlMultipartFormAddPart libUrlMultipartFormData libURLVersion lineOffset ln ln1 localNames log log2 log10 ' +
              'longFilePath lower macToISO matchChunk matchText matrixMultiply max md5Digest median merge millisec ' +
              'millisecs millisecond milliseconds min monthNames nativeCharToNum normalizeText num number numToByte numToChar ' +
              'numToCodepoint numToNativeChar offset open openfiles openProcesses openProcessIDs openSockets ' +
              'paragraphOffset paramCount param params peerAddress pendingMessages platform popStdDev populationStandardDeviation ' +
              'populationVariance popVariance processID random randomBytes replaceText result revCreateXMLTree revCreateXMLTreeFromFile ' +
              'revCurrentRecord revCurrentRecordIsFirst revCurrentRecordIsLast revDatabaseColumnCount revDatabaseColumnIsNull ' +
              'revDatabaseColumnLengths revDatabaseColumnNames revDatabaseColumnNamed revDatabaseColumnNumbered ' +
              'revDatabaseColumnTypes revDatabaseConnectResult revDatabaseCursors revDatabaseID revDatabaseTableNames ' +
              'revDatabaseType revDataFromQuery revdb_closeCursor revdb_columnbynumber revdb_columncount revdb_columnisnull ' +
              'revdb_columnlengths revdb_columnnames revdb_columntypes revdb_commit revdb_connect revdb_connections ' +
              'revdb_connectionerr revdb_currentrecord revdb_cursorconnection revdb_cursorerr revdb_cursors revdb_dbtype ' +
              'revdb_disconnect revdb_execute revdb_iseof revdb_isbof revdb_movefirst revdb_movelast revdb_movenext ' +
              'revdb_moveprev revdb_query revdb_querylist revdb_recordcount revdb_rollback revdb_tablenames ' +
              'revGetDatabaseDriverPath revNumberOfRecords revOpenDatabase revOpenDatabases revQueryDatabase ' +
              'revQueryDatabaseBlob revQueryResult revQueryIsAtStart revQueryIsAtEnd revUnixFromMacPath revXMLAttribute ' +
              'revXMLAttributes revXMLAttributeValues revXMLChildContents revXMLChildNames revXMLCreateTreeFromFileWithNamespaces ' +
              'revXMLCreateTreeWithNamespaces revXMLDataFromXPathQuery revXMLEvaluateXPath revXMLFirstChild revXMLMatchingNode ' +
              'revXMLNextSibling revXMLNodeContents revXMLNumberOfChildren revXMLParent revXMLPreviousSibling ' +
              'revXMLRootNode revXMLRPC_CreateRequest revXMLRPC_Documents revXMLRPC_Error ' +
              'revXMLRPC_GetHost revXMLRPC_GetMethod revXMLRPC_GetParam revXMLText revXMLRPC_Execute ' +
              'revXMLRPC_GetParamCount revXMLRPC_GetParamNode revXMLRPC_GetParamType revXMLRPC_GetPath revXMLRPC_GetPort ' +
              'revXMLRPC_GetProtocol revXMLRPC_GetRequest revXMLRPC_GetResponse revXMLRPC_GetSocket revXMLTree ' +
              'revXMLTrees revXMLValidateDTD revZipDescribeItem revZipEnumerateItems revZipOpenArchives round sampVariance ' +
              'sec secs seconds sentenceOffset sha1Digest shell shortFilePath sin specialFolderPath sqrt standardDeviation statRound ' +
              'stdDev sum sysError systemVersion tan tempName textDecode textEncode tick ticks time to tokenOffset toLower toUpper ' +
              'transpose truewordOffset trunc uniDecode uniEncode upper URLDecode URLEncode URLStatus uuid value variableNames ' +
              'variance version waitDepth weekdayNames wordOffset xsltApplyStylesheet xsltApplyStylesheetFromFile xsltLoadStylesheet ' +
              'xsltLoadStylesheetFromFile add breakpoint cancel clear local variable file word line folder directory URL close socket process ' +
              'combine constant convert create new alias folder directory decrypt delete variable word line folder ' +
              'directory URL dispatch divide do encrypt filter get include intersect kill libURLDownloadToFile ' +
              'libURLFollowHttpRedirects libURLftpUpload libURLftpUploadFile libURLresetAll libUrlSetAuthCallback ' +
              'libURLSetCustomHTTPHeaders libUrlSetExpect100 libURLSetFTPListCommand libURLSetFTPMode libURLSetFTPStopTime ' +
              'libURLSetStatusCallback load multiply socket prepare process post seek rel relative read from process rename ' +
              'replace require resetAll resolve revAddXMLNode revAppendXML revCloseCursor revCloseDatabase revCommitDatabase ' +
              'revCopyFile revCopyFolder revCopyXMLNode revDeleteFolder revDeleteXMLNode revDeleteAllXMLTrees ' +
              'revDeleteXMLTree revExecuteSQL revGoURL revInsertXMLNode revMoveFolder revMoveToFirstRecord revMoveToLastRecord ' +
              'revMoveToNextRecord revMoveToPreviousRecord revMoveToRecord revMoveXMLNode revPutIntoXMLNode revRollBackDatabase ' +
              'revSetDatabaseDriverPath revSetXMLAttribute revXMLRPC_AddParam revXMLRPC_DeleteAllDocuments revXMLAddDTD ' +
              'revXMLRPC_Free revXMLRPC_FreeAll revXMLRPC_DeleteDocument revXMLRPC_DeleteParam revXMLRPC_SetHost ' +
              'revXMLRPC_SetMethod revXMLRPC_SetPort revXMLRPC_SetProtocol revXMLRPC_SetSocket revZipAddItemWithData ' +
              'revZipAddItemWithFile revZipAddUncompressedItemWithData revZipAddUncompressedItemWithFile revZipCancel ' +
              'revZipCloseArchive revZipDeleteItem revZipExtractItemToFile revZipExtractItemToVariable revZipSetProgressCallback ' +
              'revZipRenameItem revZipReplaceItemWithData revZipReplaceItemWithFile revZipOpenArchive send set sort split start stop ' +
              'subtract union unload wait write'
          },
          contains: [
            VARIABLE,
            {
              className: 'keyword',
              begin: '\\bend\\sif\\b'
            },
            {
              className: 'function',
              beginKeywords: 'function',
              end: '$',
              contains: [
                VARIABLE,
                TITLE2,
                hljs.APOS_STRING_MODE,
                hljs.QUOTE_STRING_MODE,
                hljs.BINARY_NUMBER_MODE,
                hljs.C_NUMBER_MODE,
                TITLE1
              ]
            },
            {
              className: 'function',
              begin: '\\bend\\s+',
              end: '$',
              keywords: 'end',
              contains: [TITLE2, TITLE1],
              relevance: 0
            },
            {
              beginKeywords: 'command on',
              end: '$',
              contains: [
                VARIABLE,
                TITLE2,
                hljs.APOS_STRING_MODE,
                hljs.QUOTE_STRING_MODE,
                hljs.BINARY_NUMBER_MODE,
                hljs.C_NUMBER_MODE,
                TITLE1
              ]
            },
            {
              className: 'meta',
              variants: [
                {
                  begin: '<\\?(rev|lc|livecode)',
                  relevance: 10
                },
                { begin: '<\\?' },
                { begin: '\\?>' }
              ]
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.BINARY_NUMBER_MODE,
            hljs.C_NUMBER_MODE,
            TITLE1
          ].concat(COMMENT_MODES),
          illegal: ';$|^\\[|^=|&|{'
        };
      };

      /***/
    },
    /* 445 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            // JS keywords
            'in if for while finally new do return else break catch instanceof throw try this ' +
            'switch continue typeof delete debugger case default function var with ' +
            // LiveScript keywords
            'then unless until loop of by when and or is isnt not it that otherwise from to til fallthrough super ' +
            'case default function var void const let enum export import native ' +
            '__hasProp __extends __slice __bind __indexOf',
          literal:
            // JS literals
            'true false null undefined ' +
            // LiveScript literals
            'yes no on off it that void',
          built_in: 'npm require console print module global window document'
        };
        var JS_IDENT_RE = '[A-Za-z$_](?:-[0-9A-Za-z$_]|[0-9A-Za-z$_])*';
        var TITLE = hljs.inherit(hljs.TITLE_MODE, { begin: JS_IDENT_RE });
        var SUBST = {
          className: 'subst',
          begin: /#\{/,
          end: /}/,
          keywords: KEYWORDS
        };
        var SUBST_SIMPLE = {
          className: 'subst',
          begin: /#[A-Za-z$_]/,
          end: /(?:\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,
          keywords: KEYWORDS
        };
        var EXPRESSIONS = [
          hljs.BINARY_NUMBER_MODE,
          {
            className: 'number',
            begin:
              '(\\b0[xX][a-fA-F0-9_]+)|(\\b\\d(\\d|_\\d)*(\\.(\\d(\\d|_\\d)*)?)?(_*[eE]([-+]\\d(_\\d|\\d)*)?)?[_a-z]*)',
            relevance: 0,
            starts: { end: '(\\s*/)?', relevance: 0 } // a number tries to eat the following slash to prevent treating it as a regexp
          },
          {
            className: 'string',
            variants: [
              {
                begin: /'''/,
                end: /'''/,
                contains: [hljs.BACKSLASH_ESCAPE]
              },
              {
                begin: /'/,
                end: /'/,
                contains: [hljs.BACKSLASH_ESCAPE]
              },
              {
                begin: /"""/,
                end: /"""/,
                contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]
              },
              {
                begin: /"/,
                end: /"/,
                contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]
              },
              {
                begin: /\\/,
                end: /(\s|$)/,
                excludeEnd: true
              }
            ]
          },
          {
            className: 'regexp',
            variants: [
              {
                begin: '//',
                end: '//[gim]*',
                contains: [SUBST, hljs.HASH_COMMENT_MODE]
              },
              {
                // regex can't start with space to parse x / 2 / 3 as two divisions
                // regex can't start with *, and it supports an "illegal" in the main mode
                begin: /\/(?![ *])(\\\/|.)*?\/[gim]*(?=\W|$)/
              }
            ]
          },
          {
            begin: '@' + JS_IDENT_RE
          },
          {
            begin: '``',
            end: '``',
            excludeBegin: true,
            excludeEnd: true,
            subLanguage: 'javascript'
          }
        ];
        SUBST.contains = EXPRESSIONS;

        var PARAMS = {
          className: 'params',
          begin: '\\(',
          returnBegin: true,
          /* We need another contained nameless mode to not have every nested
	    pair of parens to be called "params" */
          contains: [
            {
              begin: /\(/,
              end: /\)/,
              keywords: KEYWORDS,
              contains: ['self'].concat(EXPRESSIONS)
            }
          ]
        };

        return {
          aliases: ['ls'],
          keywords: KEYWORDS,
          illegal: /\/\*/,
          contains: EXPRESSIONS.concat([
            hljs.COMMENT('\\/\\*', '\\*\\/'),
            hljs.HASH_COMMENT_MODE,
            {
              className: 'function',
              contains: [TITLE, PARAMS],
              returnBegin: true,
              variants: [
                {
                  begin:
                    '(' +
                    JS_IDENT_RE +
                    '\\s*(?:=|:=)\\s*)?(\\(.*\\))?\\s*\\B\\->\\*?',
                  end: '\\->\\*?'
                },
                {
                  begin:
                    '(' +
                    JS_IDENT_RE +
                    '\\s*(?:=|:=)\\s*)?!?(\\(.*\\))?\\s*\\B[-~]{1,2}>\\*?',
                  end: '[-~]{1,2}>\\*?'
                },
                {
                  begin:
                    '(' +
                    JS_IDENT_RE +
                    '\\s*(?:=|:=)\\s*)?(\\(.*\\))?\\s*\\B!?[-~]{1,2}>\\*?',
                  end: '!?[-~]{1,2}>\\*?'
                }
              ]
            },
            {
              className: 'class',
              beginKeywords: 'class',
              end: '$',
              illegal: /[:="\[\]]/,
              contains: [
                {
                  beginKeywords: 'extends',
                  endsWithParent: true,
                  illegal: /[:="\[\]]/,
                  contains: [TITLE]
                },
                TITLE
              ]
            },
            {
              begin: JS_IDENT_RE + ':',
              end: ':',
              returnBegin: true,
              returnEnd: true,
              relevance: 0
            }
          ])
        };
      };

      /***/
    },
    /* 446 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var identifier = '([-a-zA-Z$._][\\w\\-$.]*)';
        return {
          //lexemes: '[.%]?' + hljs.IDENT_RE,
          keywords:
            'begin end true false declare define global ' +
            'constant private linker_private internal ' +
            'available_externally linkonce linkonce_odr weak ' +
            'weak_odr appending dllimport dllexport common ' +
            'default hidden protected extern_weak external ' +
            'thread_local zeroinitializer undef null to tail ' +
            'target triple datalayout volatile nuw nsw nnan ' +
            'ninf nsz arcp fast exact inbounds align ' +
            'addrspace section alias module asm sideeffect ' +
            'gc dbg linker_private_weak attributes blockaddress ' +
            'initialexec localdynamic localexec prefix unnamed_addr ' +
            'ccc fastcc coldcc x86_stdcallcc x86_fastcallcc ' +
            'arm_apcscc arm_aapcscc arm_aapcs_vfpcc ptx_device ' +
            'ptx_kernel intel_ocl_bicc msp430_intrcc spir_func ' +
            'spir_kernel x86_64_sysvcc x86_64_win64cc x86_thiscallcc ' +
            'cc c signext zeroext inreg sret nounwind ' +
            'noreturn noalias nocapture byval nest readnone ' +
            'readonly inlinehint noinline alwaysinline optsize ssp ' +
            'sspreq noredzone noimplicitfloat naked builtin cold ' +
            'nobuiltin noduplicate nonlazybind optnone returns_twice ' +
            'sanitize_address sanitize_memory sanitize_thread sspstrong ' +
            'uwtable returned type opaque eq ne slt sgt ' +
            'sle sge ult ugt ule uge oeq one olt ogt ' +
            'ole oge ord uno ueq une x acq_rel acquire ' +
            'alignstack atomic catch cleanup filter inteldialect ' +
            'max min monotonic nand personality release seq_cst ' +
            'singlethread umax umin unordered xchg add fadd ' +
            'sub fsub mul fmul udiv sdiv fdiv urem srem ' +
            'frem shl lshr ashr and or xor icmp fcmp ' +
            'phi call trunc zext sext fptrunc fpext uitofp ' +
            'sitofp fptoui fptosi inttoptr ptrtoint bitcast ' +
            'addrspacecast select va_arg ret br switch invoke ' +
            'unwind unreachable indirectbr landingpad resume ' +
            'malloc alloca free load store getelementptr ' +
            'extractelement insertelement shufflevector getresult ' +
            'extractvalue insertvalue atomicrmw cmpxchg fence ' +
            'argmemonly double',
          contains: [
            {
              className: 'keyword',
              begin: 'i\\d+'
            },
            hljs.COMMENT(';', '\\n', { relevance: 0 }),
            // Double quote string
            hljs.QUOTE_STRING_MODE,
            {
              className: 'string',
              variants: [
                // Double-quoted string
                { begin: '"', end: '[^\\\\]"' }
              ],
              relevance: 0
            },
            {
              className: 'title',
              variants: [
                { begin: '@' + identifier },
                { begin: '@\\d+' },
                { begin: '!' + identifier },
                { begin: '!\\d+' + identifier }
              ]
            },
            {
              className: 'symbol',
              variants: [
                { begin: '%' + identifier },
                { begin: '%\\d+' },
                { begin: '#\\d+' }
              ]
            },
            {
              className: 'number',
              variants: [
                { begin: '0[xX][a-fA-F0-9]+' },
                { begin: '-?\\d+(?:[.]\\d+)?(?:[eE][-+]?\\d+(?:[.]\\d+)?)?' }
              ],
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 447 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var LSL_STRING_ESCAPE_CHARS = {
          className: 'subst',
          begin: /\\[tn"\\]/
        };

        var LSL_STRINGS = {
          className: 'string',
          begin: '"',
          end: '"',
          contains: [LSL_STRING_ESCAPE_CHARS]
        };

        var LSL_NUMBERS = {
          className: 'number',
          begin: hljs.C_NUMBER_RE
        };

        var LSL_CONSTANTS = {
          className: 'literal',
          variants: [
            {
              begin: '\\b(?:PI|TWO_PI|PI_BY_TWO|DEG_TO_RAD|RAD_TO_DEG|SQRT2)\\b'
            },
            {
              begin:
                '\\b(?:XP_ERROR_(?:EXPERIENCES_DISABLED|EXPERIENCE_(?:DISABLED|SUSPENDED)|INVALID_(?:EXPERIENCE|PARAMETERS)|KEY_NOT_FOUND|MATURITY_EXCEEDED|NONE|NOT_(?:FOUND|PERMITTED(?:_LAND)?)|NO_EXPERIENCE|QUOTA_EXCEEDED|RETRY_UPDATE|STORAGE_EXCEPTION|STORE_DISABLED|THROTTLED|UNKNOWN_ERROR)|JSON_APPEND|STATUS_(?:PHYSICS|ROTATE_[XYZ]|PHANTOM|SANDBOX|BLOCK_GRAB(?:_OBJECT)?|(?:DIE|RETURN)_AT_EDGE|CAST_SHADOWS|OK|MALFORMED_PARAMS|TYPE_MISMATCH|BOUNDS_ERROR|NOT_(?:FOUND|SUPPORTED)|INTERNAL_ERROR|WHITELIST_FAILED)|AGENT(?:_(?:BY_(?:LEGACY_|USER)NAME|FLYING|ATTACHMENTS|SCRIPTED|MOUSELOOK|SITTING|ON_OBJECT|AWAY|WALKING|IN_AIR|TYPING|CROUCHING|BUSY|ALWAYS_RUN|AUTOPILOT|LIST_(?:PARCEL(?:_OWNER)?|REGION)))?|CAMERA_(?:PITCH|DISTANCE|BEHINDNESS_(?:ANGLE|LAG)|(?:FOCUS|POSITION)(?:_(?:THRESHOLD|LOCKED|LAG))?|FOCUS_OFFSET|ACTIVE)|ANIM_ON|LOOP|REVERSE|PING_PONG|SMOOTH|ROTATE|SCALE|ALL_SIDES|LINK_(?:ROOT|SET|ALL_(?:OTHERS|CHILDREN)|THIS)|ACTIVE|PASS(?:IVE|_(?:ALWAYS|IF_NOT_HANDLED|NEVER))|SCRIPTED|CONTROL_(?:FWD|BACK|(?:ROT_)?(?:LEFT|RIGHT)|UP|DOWN|(?:ML_)?LBUTTON)|PERMISSION_(?:RETURN_OBJECTS|DEBIT|OVERRIDE_ANIMATIONS|SILENT_ESTATE_MANAGEMENT|TAKE_CONTROLS|TRIGGER_ANIMATION|ATTACH|CHANGE_LINKS|(?:CONTROL|TRACK)_CAMERA|TELEPORT)|INVENTORY_(?:TEXTURE|SOUND|OBJECT|SCRIPT|LANDMARK|CLOTHING|NOTECARD|BODYPART|ANIMATION|GESTURE|ALL|NONE)|CHANGED_(?:INVENTORY|COLOR|SHAPE|SCALE|TEXTURE|LINK|ALLOWED_DROP|OWNER|REGION(?:_START)?|TELEPORT|MEDIA)|OBJECT_(?:CLICK_ACTION|HOVER_HEIGHT|LAST_OWNER_ID|(?:PHYSICS|SERVER|STREAMING)_COST|UNKNOWN_DETAIL|CHARACTER_TIME|PHANTOM|PHYSICS|TEMP_ON_REZ|NAME|DESC|POS|PRIM_(?:COUNT|EQUIVALENCE)|RETURN_(?:PARCEL(?:_OWNER)?|REGION)|REZZER_KEY|ROO?T|VELOCITY|OMEGA|OWNER|GROUP|CREATOR|ATTACHED_POINT|RENDER_WEIGHT|(?:BODY_SHAPE|PATHFINDING)_TYPE|(?:RUNNING|TOTAL)_SCRIPT_COUNT|TOTAL_INVENTORY_COUNT|SCRIPT_(?:MEMORY|TIME))|TYPE_(?:INTEGER|FLOAT|STRING|KEY|VECTOR|ROTATION|INVALID)|(?:DEBUG|PUBLIC)_CHANNEL|ATTACH_(?:AVATAR_CENTER|CHEST|HEAD|BACK|PELVIS|MOUTH|CHIN|NECK|NOSE|BELLY|[LR](?:SHOULDER|HAND|FOOT|EAR|EYE|[UL](?:ARM|LEG)|HIP)|(?:LEFT|RIGHT)_PEC|HUD_(?:CENTER_[12]|TOP_(?:RIGHT|CENTER|LEFT)|BOTTOM(?:_(?:RIGHT|LEFT))?)|[LR]HAND_RING1|TAIL_(?:BASE|TIP)|[LR]WING|FACE_(?:JAW|[LR]EAR|[LR]EYE|TOUNGE)|GROIN|HIND_[LR]FOOT)|LAND_(?:LEVEL|RAISE|LOWER|SMOOTH|NOISE|REVERT)|DATA_(?:ONLINE|NAME|BORN|SIM_(?:POS|STATUS|RATING)|PAYINFO)|PAYMENT_INFO_(?:ON_FILE|USED)|REMOTE_DATA_(?:CHANNEL|REQUEST|REPLY)|PSYS_(?:PART_(?:BF_(?:ZERO|ONE(?:_MINUS_(?:DEST_COLOR|SOURCE_(ALPHA|COLOR)))?|DEST_COLOR|SOURCE_(ALPHA|COLOR))|BLEND_FUNC_(DEST|SOURCE)|FLAGS|(?:START|END)_(?:COLOR|ALPHA|SCALE|GLOW)|MAX_AGE|(?:RIBBON|WIND|INTERP_(?:COLOR|SCALE)|BOUNCE|FOLLOW_(?:SRC|VELOCITY)|TARGET_(?:POS|LINEAR)|EMISSIVE)_MASK)|SRC_(?:MAX_AGE|PATTERN|ANGLE_(?:BEGIN|END)|BURST_(?:RATE|PART_COUNT|RADIUS|SPEED_(?:MIN|MAX))|ACCEL|TEXTURE|TARGET_KEY|OMEGA|PATTERN_(?:DROP|EXPLODE|ANGLE(?:_CONE(?:_EMPTY)?)?)))|VEHICLE_(?:REFERENCE_FRAME|TYPE_(?:NONE|SLED|CAR|BOAT|AIRPLANE|BALLOON)|(?:LINEAR|ANGULAR)_(?:FRICTION_TIMESCALE|MOTOR_DIRECTION)|LINEAR_MOTOR_OFFSET|HOVER_(?:HEIGHT|EFFICIENCY|TIMESCALE)|BUOYANCY|(?:LINEAR|ANGULAR)_(?:DEFLECTION_(?:EFFICIENCY|TIMESCALE)|MOTOR_(?:DECAY_)?TIMESCALE)|VERTICAL_ATTRACTION_(?:EFFICIENCY|TIMESCALE)|BANKING_(?:EFFICIENCY|MIX|TIMESCALE)|FLAG_(?:NO_DEFLECTION_UP|LIMIT_(?:ROLL_ONLY|MOTOR_UP)|HOVER_(?:(?:WATER|TERRAIN|UP)_ONLY|GLOBAL_HEIGHT)|MOUSELOOK_(?:STEER|BANK)|CAMERA_DECOUPLED))|PRIM_(?:ALPHA_MODE(?:_(?:BLEND|EMISSIVE|MASK|NONE))?|NORMAL|SPECULAR|TYPE(?:_(?:BOX|CYLINDER|PRISM|SPHERE|TORUS|TUBE|RING|SCULPT))?|HOLE_(?:DEFAULT|CIRCLE|SQUARE|TRIANGLE)|MATERIAL(?:_(?:STONE|METAL|GLASS|WOOD|FLESH|PLASTIC|RUBBER))?|SHINY_(?:NONE|LOW|MEDIUM|HIGH)|BUMP_(?:NONE|BRIGHT|DARK|WOOD|BARK|BRICKS|CHECKER|CONCRETE|TILE|STONE|DISKS|GRAVEL|BLOBS|SIDING|LARGETILE|STUCCO|SUCTION|WEAVE)|TEXGEN_(?:DEFAULT|PLANAR)|SCULPT_(?:TYPE_(?:SPHERE|TORUS|PLANE|CYLINDER|MASK)|FLAG_(?:MIRROR|INVERT))|PHYSICS(?:_(?:SHAPE_(?:CONVEX|NONE|PRIM|TYPE)))?|(?:POS|ROT)_LOCAL|SLICE|TEXT|FLEXIBLE|POINT_LIGHT|TEMP_ON_REZ|PHANTOM|POSITION|SIZE|ROTATION|TEXTURE|NAME|OMEGA|DESC|LINK_TARGET|COLOR|BUMP_SHINY|FULLBRIGHT|TEXGEN|GLOW|MEDIA_(?:ALT_IMAGE_ENABLE|CONTROLS|(?:CURRENT|HOME)_URL|AUTO_(?:LOOP|PLAY|SCALE|ZOOM)|FIRST_CLICK_INTERACT|(?:WIDTH|HEIGHT)_PIXELS|WHITELIST(?:_ENABLE)?|PERMS_(?:INTERACT|CONTROL)|PARAM_MAX|CONTROLS_(?:STANDARD|MINI)|PERM_(?:NONE|OWNER|GROUP|ANYONE)|MAX_(?:URL_LENGTH|WHITELIST_(?:SIZE|COUNT)|(?:WIDTH|HEIGHT)_PIXELS)))|MASK_(?:BASE|OWNER|GROUP|EVERYONE|NEXT)|PERM_(?:TRANSFER|MODIFY|COPY|MOVE|ALL)|PARCEL_(?:MEDIA_COMMAND_(?:STOP|PAUSE|PLAY|LOOP|TEXTURE|URL|TIME|AGENT|UNLOAD|AUTO_ALIGN|TYPE|SIZE|DESC|LOOP_SET)|FLAG_(?:ALLOW_(?:FLY|(?:GROUP_)?SCRIPTS|LANDMARK|TERRAFORM|DAMAGE|CREATE_(?:GROUP_)?OBJECTS)|USE_(?:ACCESS_(?:GROUP|LIST)|BAN_LIST|LAND_PASS_LIST)|LOCAL_SOUND_ONLY|RESTRICT_PUSHOBJECT|ALLOW_(?:GROUP|ALL)_OBJECT_ENTRY)|COUNT_(?:TOTAL|OWNER|GROUP|OTHER|SELECTED|TEMP)|DETAILS_(?:NAME|DESC|OWNER|GROUP|AREA|ID|SEE_AVATARS))|LIST_STAT_(?:MAX|MIN|MEAN|MEDIAN|STD_DEV|SUM(?:_SQUARES)?|NUM_COUNT|GEOMETRIC_MEAN|RANGE)|PAY_(?:HIDE|DEFAULT)|REGION_FLAG_(?:ALLOW_DAMAGE|FIXED_SUN|BLOCK_TERRAFORM|SANDBOX|DISABLE_(?:COLLISIONS|PHYSICS)|BLOCK_FLY|ALLOW_DIRECT_TELEPORT|RESTRICT_PUSHOBJECT)|HTTP_(?:METHOD|MIMETYPE|BODY_(?:MAXLENGTH|TRUNCATED)|CUSTOM_HEADER|PRAGMA_NO_CACHE|VERBOSE_THROTTLE|VERIFY_CERT)|STRING_(?:TRIM(?:_(?:HEAD|TAIL))?)|CLICK_ACTION_(?:NONE|TOUCH|SIT|BUY|PAY|OPEN(?:_MEDIA)?|PLAY|ZOOM)|TOUCH_INVALID_FACE|PROFILE_(?:NONE|SCRIPT_MEMORY)|RC_(?:DATA_FLAGS|DETECT_PHANTOM|GET_(?:LINK_NUM|NORMAL|ROOT_KEY)|MAX_HITS|REJECT_(?:TYPES|AGENTS|(?:NON)?PHYSICAL|LAND))|RCERR_(?:CAST_TIME_EXCEEDED|SIM_PERF_LOW|UNKNOWN)|ESTATE_ACCESS_(?:ALLOWED_(?:AGENT|GROUP)_(?:ADD|REMOVE)|BANNED_AGENT_(?:ADD|REMOVE))|DENSITY|FRICTION|RESTITUTION|GRAVITY_MULTIPLIER|KFM_(?:COMMAND|CMD_(?:PLAY|STOP|PAUSE)|MODE|FORWARD|LOOP|PING_PONG|REVERSE|DATA|ROTATION|TRANSLATION)|ERR_(?:GENERIC|PARCEL_PERMISSIONS|MALFORMED_PARAMS|RUNTIME_PERMISSIONS|THROTTLED)|CHARACTER_(?:CMD_(?:(?:SMOOTH_)?STOP|JUMP)|DESIRED_(?:TURN_)?SPEED|RADIUS|STAY_WITHIN_PARCEL|LENGTH|ORIENTATION|ACCOUNT_FOR_SKIPPED_FRAMES|AVOIDANCE_MODE|TYPE(?:_(?:[ABCD]|NONE))?|MAX_(?:DECEL|TURN_RADIUS|(?:ACCEL|SPEED)))|PURSUIT_(?:OFFSET|FUZZ_FACTOR|GOAL_TOLERANCE|INTERCEPT)|REQUIRE_LINE_OF_SIGHT|FORCE_DIRECT_PATH|VERTICAL|HORIZONTAL|AVOID_(?:CHARACTERS|DYNAMIC_OBSTACLES|NONE)|PU_(?:EVADE_(?:HIDDEN|SPOTTED)|FAILURE_(?:DYNAMIC_PATHFINDING_DISABLED|INVALID_(?:GOAL|START)|NO_(?:NAVMESH|VALID_DESTINATION)|OTHER|TARGET_GONE|(?:PARCEL_)?UNREACHABLE)|(?:GOAL|SLOWDOWN_DISTANCE)_REACHED)|TRAVERSAL_TYPE(?:_(?:FAST|NONE|SLOW))?|CONTENT_TYPE_(?:ATOM|FORM|HTML|JSON|LLSD|RSS|TEXT|XHTML|XML)|GCNP_(?:RADIUS|STATIC)|(?:PATROL|WANDER)_PAUSE_AT_WAYPOINTS|OPT_(?:AVATAR|CHARACTER|EXCLUSION_VOLUME|LEGACY_LINKSET|MATERIAL_VOLUME|OTHER|STATIC_OBSTACLE|WALKABLE)|SIM_STAT_PCT_CHARS_STEPPED)\\b'
            },
            {
              begin: '\\b(?:FALSE|TRUE)\\b'
            },
            {
              begin: '\\b(?:ZERO_ROTATION)\\b'
            },
            {
              begin:
                '\\b(?:EOF|JSON_(?:ARRAY|DELETE|FALSE|INVALID|NULL|NUMBER|OBJECT|STRING|TRUE)|NULL_KEY|TEXTURE_(?:BLANK|DEFAULT|MEDIA|PLYWOOD|TRANSPARENT)|URL_REQUEST_(?:GRANTED|DENIED))\\b'
            },
            {
              begin: '\\b(?:ZERO_VECTOR|TOUCH_INVALID_(?:TEXCOORD|VECTOR))\\b'
            }
          ]
        };

        var LSL_FUNCTIONS = {
          className: 'built_in',
          begin:
            '\\b(?:ll(?:AgentInExperience|(?:Create|DataSize|Delete|KeyCount|Keys|Read|Update)KeyValue|GetExperience(?:Details|ErrorMessage)|ReturnObjectsBy(?:ID|Owner)|Json(?:2List|[GS]etValue|ValueType)|Sin|Cos|Tan|Atan2|Sqrt|Pow|Abs|Fabs|Frand|Floor|Ceil|Round|Vec(?:Mag|Norm|Dist)|Rot(?:Between|2(?:Euler|Fwd|Left|Up))|(?:Euler|Axes)2Rot|Whisper|(?:Region|Owner)?Say|Shout|Listen(?:Control|Remove)?|Sensor(?:Repeat|Remove)?|Detected(?:Name|Key|Owner|Type|Pos|Vel|Grab|Rot|Group|LinkNumber)|Die|Ground|Wind|(?:[GS]et)(?:AnimationOverride|MemoryLimit|PrimMediaParams|ParcelMusicURL|Object(?:Desc|Name)|PhysicsMaterial|Status|Scale|Color|Alpha|Texture|Pos|Rot|Force|Torque)|ResetAnimationOverride|(?:Scale|Offset|Rotate)Texture|(?:Rot)?Target(?:Remove)?|(?:Stop)?MoveToTarget|Apply(?:Rotational)?Impulse|Set(?:KeyframedMotion|ContentType|RegionPos|(?:Angular)?Velocity|Buoyancy|HoverHeight|ForceAndTorque|TimerEvent|ScriptState|Damage|TextureAnim|Sound(?:Queueing|Radius)|Vehicle(?:Type|(?:Float|Vector|Rotation)Param)|(?:Touch|Sit)?Text|Camera(?:Eye|At)Offset|PrimitiveParams|ClickAction|Link(?:Alpha|Color|PrimitiveParams(?:Fast)?|Texture(?:Anim)?|Camera|Media)|RemoteScriptAccessPin|PayPrice|LocalRot)|ScaleByFactor|Get(?:(?:Max|Min)ScaleFactor|ClosestNavPoint|StaticPath|SimStats|Env|PrimitiveParams|Link(?:PrimitiveParams|Number(?:OfSides)?|Key|Name|Media)|HTTPHeader|FreeURLs|Object(?:Details|PermMask|PrimCount)|Parcel(?:MaxPrims|Details|Prim(?:Count|Owners))|Attached(?:List)?|(?:SPMax|Free|Used)Memory|Region(?:Name|TimeDilation|FPS|Corner|AgentCount)|Root(?:Position|Rotation)|UnixTime|(?:Parcel|Region)Flags|(?:Wall|GMT)clock|SimulatorHostname|BoundingBox|GeometricCenter|Creator|NumberOf(?:Prims|NotecardLines|Sides)|Animation(?:List)?|(?:Camera|Local)(?:Pos|Rot)|Vel|Accel|Omega|Time(?:stamp|OfDay)|(?:Object|CenterOf)?Mass|MassMKS|Energy|Owner|(?:Owner)?Key|SunDirection|Texture(?:Offset|Scale|Rot)|Inventory(?:Number|Name|Key|Type|Creator|PermMask)|Permissions(?:Key)?|StartParameter|List(?:Length|EntryType)|Date|Agent(?:Size|Info|Language|List)|LandOwnerAt|NotecardLine|Script(?:Name|State))|(?:Get|Reset|GetAndReset)Time|PlaySound(?:Slave)?|LoopSound(?:Master|Slave)?|(?:Trigger|Stop|Preload)Sound|(?:(?:Get|Delete)Sub|Insert)String|To(?:Upper|Lower)|Give(?:InventoryList|Money)|RezObject|(?:Stop)?LookAt|Sleep|CollisionFilter|(?:Take|Release)Controls|DetachFromAvatar|AttachToAvatar(?:Temp)?|InstantMessage|(?:GetNext)?Email|StopHover|MinEventDelay|RotLookAt|String(?:Length|Trim)|(?:Start|Stop)Animation|TargetOmega|Request(?:Experience)?Permissions|(?:Create|Break)Link|BreakAllLinks|(?:Give|Remove)Inventory|Water|PassTouches|Request(?:Agent|Inventory)Data|TeleportAgent(?:Home|GlobalCoords)?|ModifyLand|CollisionSound|ResetScript|MessageLinked|PushObject|PassCollisions|AxisAngle2Rot|Rot2(?:Axis|Angle)|A(?:cos|sin)|AngleBetween|AllowInventoryDrop|SubStringIndex|List2(?:CSV|Integer|Json|Float|String|Key|Vector|Rot|List(?:Strided)?)|DeleteSubList|List(?:Statistics|Sort|Randomize|(?:Insert|Find|Replace)List)|EdgeOfWorld|AdjustSoundVolume|Key2Name|TriggerSoundLimited|EjectFromLand|(?:CSV|ParseString)2List|OverMyLand|SameGroup|UnSit|Ground(?:Slope|Normal|Contour)|GroundRepel|(?:Set|Remove)VehicleFlags|(?:AvatarOn)?(?:Link)?SitTarget|Script(?:Danger|Profiler)|Dialog|VolumeDetect|ResetOtherScript|RemoteLoadScriptPin|(?:Open|Close)RemoteDataChannel|SendRemoteData|RemoteDataReply|(?:Integer|String)ToBase64|XorBase64|Log(?:10)?|Base64To(?:String|Integer)|ParseStringKeepNulls|RezAtRoot|RequestSimulatorData|ForceMouselook|(?:Load|Release|(?:E|Une)scape)URL|ParcelMedia(?:CommandList|Query)|ModPow|MapDestination|(?:RemoveFrom|AddTo|Reset)Land(?:Pass|Ban)List|(?:Set|Clear)CameraParams|HTTP(?:Request|Response)|TextBox|DetectedTouch(?:UV|Face|Pos|(?:N|Bin)ormal|ST)|(?:MD5|SHA1|DumpList2)String|Request(?:Secure)?URL|Clear(?:Prim|Link)Media|(?:Link)?ParticleSystem|(?:Get|Request)(?:Username|DisplayName)|RegionSayTo|CastRay|GenerateKey|TransferLindenDollars|ManageEstateAccess|(?:Create|Delete)Character|ExecCharacterCmd|Evade|FleeFrom|NavigateTo|PatrolPoints|Pursue|UpdateCharacter|WanderWithin))\\b'
        };

        return {
          illegal: ':',
          contains: [
            LSL_STRINGS,
            {
              className: 'comment',
              variants: [hljs.COMMENT('//', '$'), hljs.COMMENT('/\\*', '\\*/')]
            },
            LSL_NUMBERS,
            {
              className: 'section',
              variants: [
                {
                  begin: '\\b(?:state|default)\\b'
                },
                {
                  begin:
                    '\\b(?:state_(?:entry|exit)|touch(?:_(?:start|end))?|(?:land_)?collision(?:_(?:start|end))?|timer|listen|(?:no_)?sensor|control|(?:not_)?at_(?:rot_)?target|money|email|experience_permissions(?:_denied)?|run_time_permissions|changed|attach|dataserver|moving_(?:start|end)|link_message|(?:on|object)_rez|remote_data|http_re(?:sponse|quest)|path_update|transaction_result)\\b'
                }
              ]
            },
            LSL_FUNCTIONS,
            LSL_CONSTANTS,
            {
              className: 'type',
              begin:
                '\\b(?:integer|float|string|key|vector|quaternion|rotation|list)\\b'
            }
          ]
        };
      };

      /***/
    },
    /* 448 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var OPENING_LONG_BRACKET = '\\[=*\\[';
        var CLOSING_LONG_BRACKET = '\\]=*\\]';
        var LONG_BRACKETS = {
          begin: OPENING_LONG_BRACKET,
          end: CLOSING_LONG_BRACKET,
          contains: ['self']
        };
        var COMMENTS = [
          hljs.COMMENT('--(?!' + OPENING_LONG_BRACKET + ')', '$'),
          hljs.COMMENT('--' + OPENING_LONG_BRACKET, CLOSING_LONG_BRACKET, {
            contains: [LONG_BRACKETS],
            relevance: 10
          })
        ];
        return {
          lexemes: hljs.UNDERSCORE_IDENT_RE,
          keywords: {
            literal: 'true false nil',
            keyword:
              'and break do else elseif end for goto if in local not or repeat return then until while',
            built_in:
              //Metatags and globals:
              '_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len ' +
              '__gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert ' +
              //Standard methods and properties:
              'collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring' +
              'module next pairs pcall print rawequal rawget rawset require select setfenv' +
              'setmetatable tonumber tostring type unpack xpcall arg self' +
              //Library methods and properties (one line per library):
              'coroutine resume yield status wrap create running debug getupvalue ' +
              'debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv ' +
              'io lines write close flush open output type read stderr stdin input stdout popen tmpfile ' +
              'math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan ' +
              'os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall ' +
              'string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower ' +
              'table setn insert getn foreachi maxn foreach concat sort remove'
          },
          contains: COMMENTS.concat([
            {
              className: 'function',
              beginKeywords: 'function',
              end: '\\)',
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  begin: '([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*'
                }),
                {
                  className: 'params',
                  begin: '\\(',
                  endsWithParent: true,
                  contains: COMMENTS
                }
              ].concat(COMMENTS)
            },
            hljs.C_NUMBER_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: 'string',
              begin: OPENING_LONG_BRACKET,
              end: CLOSING_LONG_BRACKET,
              contains: [LONG_BRACKETS],
              relevance: 5
            }
          ])
        };
      };

      /***/
    },
    /* 449 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        /* Variables: simple (eg $(var)) and special (eg $@) */
        var VARIABLE = {
          className: 'variable',
          variants: [
            {
              begin: '\\$\\(' + hljs.UNDERSCORE_IDENT_RE + '\\)',
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              begin: /\$[@%<?\^\+\*]/
            }
          ]
        };
        /* Quoted string with variables inside */
        var QUOTE_STRING = {
          className: 'string',
          begin: /"/,
          end: /"/,
          contains: [hljs.BACKSLASH_ESCAPE, VARIABLE]
        };
        /* Function: $(func arg,...) */
        var FUNC = {
          className: 'variable',
          begin: /\$\([\w-]+\s/,
          end: /\)/,
          keywords: {
            built_in:
              'subst patsubst strip findstring filter filter-out sort ' +
              'word wordlist firstword lastword dir notdir suffix basename ' +
              'addsuffix addprefix join wildcard realpath abspath error warning ' +
              'shell origin flavor foreach if or and call eval file value'
          },
          contains: [VARIABLE]
        };
        /* Variable assignment */
        var VAR_ASSIG = {
          begin: '^' + hljs.UNDERSCORE_IDENT_RE + '\\s*[:+?]?=',
          illegal: '\\n',
          returnBegin: true,
          contains: [
            {
              begin: '^' + hljs.UNDERSCORE_IDENT_RE,
              end: '[:+?]?=',
              excludeEnd: true
            }
          ]
        };
        /* Meta targets (.PHONY) */
        var META = {
          className: 'meta',
          begin: /^\.PHONY:/,
          end: /$/,
          keywords: { 'meta-keyword': '.PHONY' },
          lexemes: /[\.\w]+/
        };
        /* Targets */
        var TARGET = {
          className: 'section',
          begin: /^[^\s]+:/,
          end: /$/,
          contains: [VARIABLE]
        };
        return {
          aliases: ['mk', 'mak'],
          keywords:
            'define endef undefine ifdef ifndef ifeq ifneq else endif ' +
            'include -include sinclude override export unexport private vpath',
          lexemes: /[\w-]+/,
          contains: [
            hljs.HASH_COMMENT_MODE,
            VARIABLE,
            QUOTE_STRING,
            FUNC,
            VAR_ASSIG,
            META,
            TARGET
          ]
        };
      };

      /***/
    },
    /* 450 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['mma'],
          lexemes: '(\\$|\\b)' + hljs.IDENT_RE + '\\b',
          keywords:
            'AbelianGroup Abort AbortKernels AbortProtect Above Abs Absolute AbsoluteCorrelation AbsoluteCorrelationFunction AbsoluteCurrentValue AbsoluteDashing AbsoluteFileName AbsoluteOptions AbsolutePointSize AbsoluteThickness AbsoluteTime AbsoluteTiming AccountingForm Accumulate Accuracy AccuracyGoal ActionDelay ActionMenu ActionMenuBox ActionMenuBoxOptions Active ActiveItem ActiveStyle AcyclicGraphQ AddOnHelpPath AddTo AdjacencyGraph AdjacencyList AdjacencyMatrix AdjustmentBox AdjustmentBoxOptions AdjustTimeSeriesForecast AffineTransform After AiryAi AiryAiPrime AiryAiZero AiryBi AiryBiPrime AiryBiZero AlgebraicIntegerQ AlgebraicNumber AlgebraicNumberDenominator AlgebraicNumberNorm AlgebraicNumberPolynomial AlgebraicNumberTrace AlgebraicRules AlgebraicRulesData Algebraics AlgebraicUnitQ Alignment AlignmentMarker AlignmentPoint All AllowedDimensions AllowGroupClose AllowInlineCells AllowKernelInitialization AllowReverseGroupClose AllowScriptLevelChange AlphaChannel AlternatingGroup AlternativeHypothesis Alternatives AmbientLight Analytic AnchoredSearch And AndersonDarlingTest AngerJ AngleBracket AngularGauge Animate AnimationCycleOffset AnimationCycleRepetitions AnimationDirection AnimationDisplayTime AnimationRate AnimationRepetitions AnimationRunning Animator AnimatorBox AnimatorBoxOptions AnimatorElements Annotation Annuity AnnuityDue Antialiasing Antisymmetric Apart ApartSquareFree Appearance AppearanceElements AppellF1 Append AppendTo Apply ArcCos ArcCosh ArcCot ArcCoth ArcCsc ArcCsch ArcSec ArcSech ArcSin ArcSinDistribution ArcSinh ArcTan ArcTanh Arg ArgMax ArgMin ArgumentCountQ ARIMAProcess ArithmeticGeometricMean ARMAProcess ARProcess Array ArrayComponents ArrayDepth ArrayFlatten ArrayPad ArrayPlot ArrayQ ArrayReshape ArrayRules Arrays Arrow Arrow3DBox ArrowBox Arrowheads AspectRatio AspectRatioFixed Assert Assuming Assumptions AstronomicalData Asynchronous AsynchronousTaskObject AsynchronousTasks AtomQ Attributes AugmentedSymmetricPolynomial AutoAction AutoDelete AutoEvaluateEvents AutoGeneratedPackage AutoIndent AutoIndentSpacings AutoItalicWords AutoloadPath AutoMatch Automatic AutomaticImageSize AutoMultiplicationSymbol AutoNumberFormatting AutoOpenNotebooks AutoOpenPalettes AutorunSequencing AutoScaling AutoScroll AutoSpacing AutoStyleOptions AutoStyleWords Axes AxesEdge AxesLabel AxesOrigin AxesStyle Axis ' +
            'BabyMonsterGroupB Back Background BackgroundTasksSettings Backslash Backsubstitution Backward Band BandpassFilter BandstopFilter BarabasiAlbertGraphDistribution BarChart BarChart3D BarLegend BarlowProschanImportance BarnesG BarOrigin BarSpacing BartlettHannWindow BartlettWindow BaseForm Baseline BaselinePosition BaseStyle BatesDistribution BattleLemarieWavelet Because BeckmannDistribution Beep Before Begin BeginDialogPacket BeginFrontEndInteractionPacket BeginPackage BellB BellY Below BenfordDistribution BeniniDistribution BenktanderGibratDistribution BenktanderWeibullDistribution BernoulliB BernoulliDistribution BernoulliGraphDistribution BernoulliProcess BernsteinBasis BesselFilterModel BesselI BesselJ BesselJZero BesselK BesselY BesselYZero Beta BetaBinomialDistribution BetaDistribution BetaNegativeBinomialDistribution BetaPrimeDistribution BetaRegularized BetweennessCentrality BezierCurve BezierCurve3DBox BezierCurve3DBoxOptions BezierCurveBox BezierCurveBoxOptions BezierFunction BilateralFilter Binarize BinaryFormat BinaryImageQ BinaryRead BinaryReadList BinaryWrite BinCounts BinLists Binomial BinomialDistribution BinomialProcess BinormalDistribution BiorthogonalSplineWavelet BipartiteGraphQ BirnbaumImportance BirnbaumSaundersDistribution BitAnd BitClear BitGet BitLength BitNot BitOr BitSet BitShiftLeft BitShiftRight BitXor Black BlackmanHarrisWindow BlackmanNuttallWindow BlackmanWindow Blank BlankForm BlankNullSequence BlankSequence Blend Block BlockRandom BlomqvistBeta BlomqvistBetaTest Blue Blur BodePlot BohmanWindow Bold Bookmarks Boole BooleanConsecutiveFunction BooleanConvert BooleanCountingFunction BooleanFunction BooleanGraph BooleanMaxterms BooleanMinimize BooleanMinterms Booleans BooleanTable BooleanVariables BorderDimensions BorelTannerDistribution Bottom BottomHatTransform BoundaryStyle Bounds Box BoxBaselineShift BoxData BoxDimensions Boxed Boxes BoxForm BoxFormFormatTypes BoxFrame BoxID BoxMargins BoxMatrix BoxRatios BoxRotation BoxRotationPoint BoxStyle BoxWhiskerChart Bra BracketingBar BraKet BrayCurtisDistance BreadthFirstScan Break Brown BrownForsytheTest BrownianBridgeProcess BrowserCategory BSplineBasis BSplineCurve BSplineCurve3DBox BSplineCurveBox BSplineCurveBoxOptions BSplineFunction BSplineSurface BSplineSurface3DBox BubbleChart BubbleChart3D BubbleScale BubbleSizes BulletGauge BusinessDayQ ButterflyGraph ButterworthFilterModel Button ButtonBar ButtonBox ButtonBoxOptions ButtonCell ButtonContents ButtonData ButtonEvaluator ButtonExpandable ButtonFrame ButtonFunction ButtonMargins ButtonMinHeight ButtonNote ButtonNotebook ButtonSource ButtonStyle ButtonStyleMenuListing Byte ByteCount ByteOrdering ' +
            'C CachedValue CacheGraphics CalendarData CalendarType CallPacket CanberraDistance Cancel CancelButton CandlestickChart Cap CapForm CapitalDifferentialD CardinalBSplineBasis CarmichaelLambda Cases Cashflow Casoratian Catalan CatalanNumber Catch CauchyDistribution CauchyWindow CayleyGraph CDF CDFDeploy CDFInformation CDFWavelet Ceiling Cell CellAutoOverwrite CellBaseline CellBoundingBox CellBracketOptions CellChangeTimes CellContents CellContext CellDingbat CellDynamicExpression CellEditDuplicate CellElementsBoundingBox CellElementSpacings CellEpilog CellEvaluationDuplicate CellEvaluationFunction CellEventActions CellFrame CellFrameColor CellFrameLabelMargins CellFrameLabels CellFrameMargins CellGroup CellGroupData CellGrouping CellGroupingRules CellHorizontalScrolling CellID CellLabel CellLabelAutoDelete CellLabelMargins CellLabelPositioning CellMargins CellObject CellOpen CellPrint CellProlog Cells CellSize CellStyle CellTags CellularAutomaton CensoredDistribution Censoring Center CenterDot CentralMoment CentralMomentGeneratingFunction CForm ChampernowneNumber ChanVeseBinarize Character CharacterEncoding CharacterEncodingsPath CharacteristicFunction CharacteristicPolynomial CharacterRange Characters ChartBaseStyle ChartElementData ChartElementDataFunction ChartElementFunction ChartElements ChartLabels ChartLayout ChartLegends ChartStyle Chebyshev1FilterModel Chebyshev2FilterModel ChebyshevDistance ChebyshevT ChebyshevU Check CheckAbort CheckAll Checkbox CheckboxBar CheckboxBox CheckboxBoxOptions ChemicalData ChessboardDistance ChiDistribution ChineseRemainder ChiSquareDistribution ChoiceButtons ChoiceDialog CholeskyDecomposition Chop Circle CircleBox CircleDot CircleMinus CirclePlus CircleTimes CirculantGraph CityData Clear ClearAll ClearAttributes ClearSystemCache ClebschGordan ClickPane Clip ClipboardNotebook ClipFill ClippingStyle ClipPlanes ClipRange Clock ClockGauge ClockwiseContourIntegral Close Closed CloseKernels ClosenessCentrality Closing ClosingAutoSave ClosingEvent ClusteringComponents CMYKColor Coarse Coefficient CoefficientArrays CoefficientDomain CoefficientList CoefficientRules CoifletWavelet Collect Colon ColonForm ColorCombine ColorConvert ColorData ColorDataFunction ColorFunction ColorFunctionScaling Colorize ColorNegate ColorOutput ColorProfileData ColorQuantize ColorReplace ColorRules ColorSelectorSettings ColorSeparate ColorSetter ColorSetterBox ColorSetterBoxOptions ColorSlider ColorSpace Column ColumnAlignments ColumnBackgrounds ColumnForm ColumnLines ColumnsEqual ColumnSpacings ColumnWidths CommonDefaultFormatTypes Commonest CommonestFilter CommonUnits CommunityBoundaryStyle CommunityGraphPlot CommunityLabels CommunityRegionStyle CompatibleUnitQ CompilationOptions CompilationTarget Compile Compiled CompiledFunction Complement CompleteGraph CompleteGraphQ CompleteKaryTree CompletionsListPacket Complex Complexes ComplexExpand ComplexInfinity ComplexityFunction ComponentMeasurements ' +
            'ComponentwiseContextMenu Compose ComposeList ComposeSeries Composition CompoundExpression CompoundPoissonDistribution CompoundPoissonProcess CompoundRenewalProcess Compress CompressedData Condition ConditionalExpression Conditioned Cone ConeBox ConfidenceLevel ConfidenceRange ConfidenceTransform ConfigurationPath Congruent Conjugate ConjugateTranspose Conjunction Connect ConnectedComponents ConnectedGraphQ ConnesWindow ConoverTest ConsoleMessage ConsoleMessagePacket ConsolePrint Constant ConstantArray Constants ConstrainedMax ConstrainedMin ContentPadding ContentsBoundingBox ContentSelectable ContentSize Context ContextMenu Contexts ContextToFilename ContextToFileName Continuation Continue ContinuedFraction ContinuedFractionK ContinuousAction ContinuousMarkovProcess ContinuousTimeModelQ ContinuousWaveletData ContinuousWaveletTransform ContourDetect ContourGraphics ContourIntegral ContourLabels ContourLines ContourPlot ContourPlot3D Contours ContourShading ContourSmoothing ContourStyle ContraharmonicMean Control ControlActive ControlAlignment ControllabilityGramian ControllabilityMatrix ControllableDecomposition ControllableModelQ ControllerDuration ControllerInformation ControllerInformationData ControllerLinking ControllerManipulate ControllerMethod ControllerPath ControllerState ControlPlacement ControlsRendering ControlType Convergents ConversionOptions ConversionRules ConvertToBitmapPacket ConvertToPostScript ConvertToPostScriptPacket Convolve ConwayGroupCo1 ConwayGroupCo2 ConwayGroupCo3 CoordinateChartData CoordinatesToolOptions CoordinateTransform CoordinateTransformData CoprimeQ Coproduct CopulaDistribution Copyable CopyDirectory CopyFile CopyTag CopyToClipboard CornerFilter CornerNeighbors Correlation CorrelationDistance CorrelationFunction CorrelationTest Cos Cosh CoshIntegral CosineDistance CosineWindow CosIntegral Cot Coth Count CounterAssignments CounterBox CounterBoxOptions CounterClockwiseContourIntegral CounterEvaluator CounterFunction CounterIncrements CounterStyle CounterStyleMenuListing CountRoots CountryData Covariance CovarianceEstimatorFunction CovarianceFunction CoxianDistribution CoxIngersollRossProcess CoxModel CoxModelFit CramerVonMisesTest CreateArchive CreateDialog CreateDirectory CreateDocument CreateIntermediateDirectories CreatePalette CreatePalettePacket CreateScheduledTask CreateTemporary CreateWindow CriticalityFailureImportance CriticalitySuccessImportance CriticalSection Cross CrossingDetect CrossMatrix Csc Csch CubeRoot Cubics Cuboid CuboidBox Cumulant CumulantGeneratingFunction Cup CupCap Curl CurlyDoubleQuote CurlyQuote CurrentImage CurrentlySpeakingPacket CurrentValue CurvatureFlowFilter CurveClosed Cyan CycleGraph CycleIndexPolynomial Cycles CyclicGroup Cyclotomic Cylinder CylinderBox CylindricalDecomposition ' +
            'D DagumDistribution DamerauLevenshteinDistance DampingFactor Darker Dashed Dashing DataCompression DataDistribution DataRange DataReversed Date DateDelimiters DateDifference DateFunction DateList DateListLogPlot DateListPlot DatePattern DatePlus DateRange DateString DateTicksFormat DaubechiesWavelet DavisDistribution DawsonF DayCount DayCountConvention DayMatchQ DayName DayPlus DayRange DayRound DeBruijnGraph Debug DebugTag Decimal DeclareKnownSymbols DeclarePackage Decompose Decrement DedekindEta Default DefaultAxesStyle DefaultBaseStyle DefaultBoxStyle DefaultButton DefaultColor DefaultControlPlacement DefaultDuplicateCellStyle DefaultDuration DefaultElement DefaultFaceGridsStyle DefaultFieldHintStyle DefaultFont DefaultFontProperties DefaultFormatType DefaultFormatTypeForStyle DefaultFrameStyle DefaultFrameTicksStyle DefaultGridLinesStyle DefaultInlineFormatType DefaultInputFormatType DefaultLabelStyle DefaultMenuStyle DefaultNaturalLanguage DefaultNewCellStyle DefaultNewInlineCellStyle DefaultNotebook DefaultOptions DefaultOutputFormatType DefaultStyle DefaultStyleDefinitions DefaultTextFormatType DefaultTextInlineFormatType DefaultTicksStyle DefaultTooltipStyle DefaultValues Defer DefineExternal DefineInputStreamMethod DefineOutputStreamMethod Definition Degree DegreeCentrality DegreeGraphDistribution DegreeLexicographic DegreeReverseLexicographic Deinitialization Del Deletable Delete DeleteBorderComponents DeleteCases DeleteContents DeleteDirectory DeleteDuplicates DeleteFile DeleteSmallComponents DeleteWithContents DeletionWarning Delimiter DelimiterFlashTime DelimiterMatching Delimiters Denominator DensityGraphics DensityHistogram DensityPlot DependentVariables Deploy Deployed Depth DepthFirstScan Derivative DerivativeFilter DescriptorStateSpace DesignMatrix Det DGaussianWavelet DiacriticalPositioning Diagonal DiagonalMatrix Dialog DialogIndent DialogInput DialogLevel DialogNotebook DialogProlog DialogReturn DialogSymbols Diamond DiamondMatrix DiceDissimilarity DictionaryLookup DifferenceDelta DifferenceOrder DifferenceRoot DifferenceRootReduce Differences DifferentialD DifferentialRoot DifferentialRootReduce DifferentiatorFilter DigitBlock DigitBlockMinimum DigitCharacter DigitCount DigitQ DihedralGroup Dilation Dimensions DiracComb DiracDelta DirectedEdge DirectedEdges DirectedGraph DirectedGraphQ DirectedInfinity Direction Directive Directory DirectoryName DirectoryQ DirectoryStack DirichletCharacter DirichletConvolve DirichletDistribution DirichletL DirichletTransform DirichletWindow DisableConsolePrintPacket DiscreteChirpZTransform DiscreteConvolve DiscreteDelta DiscreteHadamardTransform DiscreteIndicator DiscreteLQEstimatorGains DiscreteLQRegulatorGains DiscreteLyapunovSolve DiscreteMarkovProcess DiscretePlot DiscretePlot3D DiscreteRatio DiscreteRiccatiSolve DiscreteShift DiscreteTimeModelQ DiscreteUniformDistribution DiscreteVariables DiscreteWaveletData DiscreteWaveletPacketTransform ' +
            'DiscreteWaveletTransform Discriminant Disjunction Disk DiskBox DiskMatrix Dispatch DispersionEstimatorFunction Display DisplayAllSteps DisplayEndPacket DisplayFlushImagePacket DisplayForm DisplayFunction DisplayPacket DisplayRules DisplaySetSizePacket DisplayString DisplayTemporary DisplayWith DisplayWithRef DisplayWithVariable DistanceFunction DistanceTransform Distribute Distributed DistributedContexts DistributeDefinitions DistributionChart DistributionDomain DistributionFitTest DistributionParameterAssumptions DistributionParameterQ Dithering Div Divergence Divide DivideBy Dividers Divisible Divisors DivisorSigma DivisorSum DMSList DMSString Do DockedCells DocumentNotebook DominantColors DOSTextFormat Dot DotDashed DotEqual Dotted DoubleBracketingBar DoubleContourIntegral DoubleDownArrow DoubleLeftArrow DoubleLeftRightArrow DoubleLeftTee DoubleLongLeftArrow DoubleLongLeftRightArrow DoubleLongRightArrow DoubleRightArrow DoubleRightTee DoubleUpArrow DoubleUpDownArrow DoubleVerticalBar DoublyInfinite Down DownArrow DownArrowBar DownArrowUpArrow DownLeftRightVector DownLeftTeeVector DownLeftVector DownLeftVectorBar DownRightTeeVector DownRightVector DownRightVectorBar Downsample DownTee DownTeeArrow DownValues DragAndDrop DrawEdges DrawFrontFaces DrawHighlighted Drop DSolve Dt DualLinearProgramming DualSystemsModel DumpGet DumpSave DuplicateFreeQ Dynamic DynamicBox DynamicBoxOptions DynamicEvaluationTimeout DynamicLocation DynamicModule DynamicModuleBox DynamicModuleBoxOptions DynamicModuleParent DynamicModuleValues DynamicName DynamicNamespace DynamicReference DynamicSetting DynamicUpdating DynamicWrapper DynamicWrapperBox DynamicWrapperBoxOptions ' +
            'E EccentricityCentrality EdgeAdd EdgeBetweennessCentrality EdgeCapacity EdgeCapForm EdgeColor EdgeConnectivity EdgeCost EdgeCount EdgeCoverQ EdgeDashing EdgeDelete EdgeDetect EdgeForm EdgeIndex EdgeJoinForm EdgeLabeling EdgeLabels EdgeLabelStyle EdgeList EdgeOpacity EdgeQ EdgeRenderingFunction EdgeRules EdgeShapeFunction EdgeStyle EdgeThickness EdgeWeight Editable EditButtonSettings EditCellTagsSettings EditDistance EffectiveInterest Eigensystem Eigenvalues EigenvectorCentrality Eigenvectors Element ElementData Eliminate EliminationOrder EllipticE EllipticExp EllipticExpPrime EllipticF EllipticFilterModel EllipticK EllipticLog EllipticNomeQ EllipticPi EllipticReducedHalfPeriods EllipticTheta EllipticThetaPrime EmitSound EmphasizeSyntaxErrors EmpiricalDistribution Empty EmptyGraphQ EnableConsolePrintPacket Enabled Encode End EndAdd EndDialogPacket EndFrontEndInteractionPacket EndOfFile EndOfLine EndOfString EndPackage EngineeringForm Enter EnterExpressionPacket EnterTextPacket Entropy EntropyFilter Environment Epilog Equal EqualColumns EqualRows EqualTilde EquatedTo Equilibrium EquirippleFilterKernel Equivalent Erf Erfc Erfi ErlangB ErlangC ErlangDistribution Erosion ErrorBox ErrorBoxOptions ErrorNorm ErrorPacket ErrorsDialogSettings EstimatedDistribution EstimatedProcess EstimatorGains EstimatorRegulator EuclideanDistance EulerE EulerGamma EulerianGraphQ EulerPhi Evaluatable Evaluate Evaluated EvaluatePacket EvaluationCell EvaluationCompletionAction EvaluationElements EvaluationMode EvaluationMonitor EvaluationNotebook EvaluationObject EvaluationOrder Evaluator EvaluatorNames EvenQ EventData EventEvaluator EventHandler EventHandlerTag EventLabels ExactBlackmanWindow ExactNumberQ ExactRootIsolation ExampleData Except ExcludedForms ExcludePods Exclusions ExclusionsStyle Exists Exit ExitDialog Exp Expand ExpandAll ExpandDenominator ExpandFileName ExpandNumerator Expectation ExpectationE ExpectedValue ExpGammaDistribution ExpIntegralE ExpIntegralEi Exponent ExponentFunction ExponentialDistribution ExponentialFamily ExponentialGeneratingFunction ExponentialMovingAverage ExponentialPowerDistribution ExponentPosition ExponentStep Export ExportAutoReplacements ExportPacket ExportString Expression ExpressionCell ExpressionPacket ExpToTrig ExtendedGCD Extension ExtentElementFunction ExtentMarkers ExtentSize ExternalCall ExternalDataCharacterEncoding Extract ExtractArchive ExtremeValueDistribution ' +
            'FaceForm FaceGrids FaceGridsStyle Factor FactorComplete Factorial Factorial2 FactorialMoment FactorialMomentGeneratingFunction FactorialPower FactorInteger FactorList FactorSquareFree FactorSquareFreeList FactorTerms FactorTermsList Fail FailureDistribution False FARIMAProcess FEDisableConsolePrintPacket FeedbackSector FeedbackSectorStyle FeedbackType FEEnableConsolePrintPacket Fibonacci FieldHint FieldHintStyle FieldMasked FieldSize File FileBaseName FileByteCount FileDate FileExistsQ FileExtension FileFormat FileHash FileInformation FileName FileNameDepth FileNameDialogSettings FileNameDrop FileNameJoin FileNames FileNameSetter FileNameSplit FileNameTake FilePrint FileType FilledCurve FilledCurveBox Filling FillingStyle FillingTransform FilterRules FinancialBond FinancialData FinancialDerivative FinancialIndicator Find FindArgMax FindArgMin FindClique FindClusters FindCurvePath FindDistributionParameters FindDivisions FindEdgeCover FindEdgeCut FindEulerianCycle FindFaces FindFile FindFit FindGeneratingFunction FindGeoLocation FindGeometricTransform FindGraphCommunities FindGraphIsomorphism FindGraphPartition FindHamiltonianCycle FindIndependentEdgeSet FindIndependentVertexSet FindInstance FindIntegerNullVector FindKClan FindKClique FindKClub FindKPlex FindLibrary FindLinearRecurrence FindList FindMaximum FindMaximumFlow FindMaxValue FindMinimum FindMinimumCostFlow FindMinimumCut FindMinValue FindPermutation FindPostmanTour FindProcessParameters FindRoot FindSequenceFunction FindSettings FindShortestPath FindShortestTour FindThreshold FindVertexCover FindVertexCut Fine FinishDynamic FiniteAbelianGroupCount FiniteGroupCount FiniteGroupData First FirstPassageTimeDistribution FischerGroupFi22 FischerGroupFi23 FischerGroupFi24Prime FisherHypergeometricDistribution FisherRatioTest FisherZDistribution Fit FitAll FittedModel FixedPoint FixedPointList FlashSelection Flat Flatten FlattenAt FlatTopWindow FlipView Floor FlushPrintOutputPacket Fold FoldList Font FontColor FontFamily FontForm FontName FontOpacity FontPostScriptName FontProperties FontReencoding FontSize FontSlant FontSubstitutions FontTracking FontVariations FontWeight For ForAll Format FormatRules FormatType FormatTypeAutoConvert FormatValues FormBox FormBoxOptions FortranForm Forward ForwardBackward Fourier FourierCoefficient FourierCosCoefficient FourierCosSeries FourierCosTransform FourierDCT FourierDCTFilter FourierDCTMatrix FourierDST FourierDSTMatrix FourierMatrix FourierParameters FourierSequenceTransform FourierSeries FourierSinCoefficient FourierSinSeries FourierSinTransform FourierTransform FourierTrigSeries FractionalBrownianMotionProcess FractionalPart FractionBox FractionBoxOptions FractionLine Frame FrameBox FrameBoxOptions Framed FrameInset FrameLabel Frameless FrameMargins FrameStyle FrameTicks FrameTicksStyle FRatioDistribution FrechetDistribution FreeQ FrequencySamplingFilterKernel FresnelC FresnelS Friday FrobeniusNumber FrobeniusSolve ' +
            'FromCharacterCode FromCoefficientRules FromContinuedFraction FromDate FromDigits FromDMS Front FrontEndDynamicExpression FrontEndEventActions FrontEndExecute FrontEndObject FrontEndResource FrontEndResourceString FrontEndStackSize FrontEndToken FrontEndTokenExecute FrontEndValueCache FrontEndVersion FrontFaceColor FrontFaceOpacity Full FullAxes FullDefinition FullForm FullGraphics FullOptions FullSimplify Function FunctionExpand FunctionInterpolation FunctionSpace FussellVeselyImportance ' +
            'GaborFilter GaborMatrix GaborWavelet GainMargins GainPhaseMargins Gamma GammaDistribution GammaRegularized GapPenalty Gather GatherBy GaugeFaceElementFunction GaugeFaceStyle GaugeFrameElementFunction GaugeFrameSize GaugeFrameStyle GaugeLabels GaugeMarkers GaugeStyle GaussianFilter GaussianIntegers GaussianMatrix GaussianWindow GCD GegenbauerC General GeneralizedLinearModelFit GenerateConditions GeneratedCell GeneratedParameters GeneratingFunction Generic GenericCylindricalDecomposition GenomeData GenomeLookup GeodesicClosing GeodesicDilation GeodesicErosion GeodesicOpening GeoDestination GeodesyData GeoDirection GeoDistance GeoGridPosition GeometricBrownianMotionProcess GeometricDistribution GeometricMean GeometricMeanFilter GeometricTransformation GeometricTransformation3DBox GeometricTransformation3DBoxOptions GeometricTransformationBox GeometricTransformationBoxOptions GeoPosition GeoPositionENU GeoPositionXYZ GeoProjectionData GestureHandler GestureHandlerTag Get GetBoundingBoxSizePacket GetContext GetEnvironment GetFileName GetFrontEndOptionsDataPacket GetLinebreakInformationPacket GetMenusPacket GetPageBreakInformationPacket Glaisher GlobalClusteringCoefficient GlobalPreferences GlobalSession Glow GoldenRatio GompertzMakehamDistribution GoodmanKruskalGamma GoodmanKruskalGammaTest Goto Grad Gradient GradientFilter GradientOrientationFilter Graph GraphAssortativity GraphCenter GraphComplement GraphData GraphDensity GraphDiameter GraphDifference GraphDisjointUnion ' +
            'GraphDistance GraphDistanceMatrix GraphElementData GraphEmbedding GraphHighlight GraphHighlightStyle GraphHub Graphics Graphics3D Graphics3DBox Graphics3DBoxOptions GraphicsArray GraphicsBaseline GraphicsBox GraphicsBoxOptions GraphicsColor GraphicsColumn GraphicsComplex GraphicsComplex3DBox GraphicsComplex3DBoxOptions GraphicsComplexBox GraphicsComplexBoxOptions GraphicsContents GraphicsData GraphicsGrid GraphicsGridBox GraphicsGroup GraphicsGroup3DBox GraphicsGroup3DBoxOptions GraphicsGroupBox GraphicsGroupBoxOptions GraphicsGrouping GraphicsHighlightColor GraphicsRow GraphicsSpacing GraphicsStyle GraphIntersection GraphLayout GraphLinkEfficiency GraphPeriphery GraphPlot GraphPlot3D GraphPower GraphPropertyDistribution GraphQ GraphRadius GraphReciprocity GraphRoot GraphStyle GraphUnion Gray GrayLevel GreatCircleDistance Greater GreaterEqual GreaterEqualLess GreaterFullEqual GreaterGreater GreaterLess GreaterSlantEqual GreaterTilde Green Grid GridBaseline GridBox GridBoxAlignment GridBoxBackground GridBoxDividers GridBoxFrame GridBoxItemSize GridBoxItemStyle GridBoxOptions GridBoxSpacings GridCreationSettings GridDefaultElement GridElementStyleOptions GridFrame GridFrameMargins GridGraph GridLines GridLinesStyle GroebnerBasis GroupActionBase GroupCentralizer GroupElementFromWord GroupElementPosition GroupElementQ GroupElements GroupElementToWord GroupGenerators GroupMultiplicationTable GroupOrbits GroupOrder GroupPageBreakWithin GroupSetwiseStabilizer GroupStabilizer GroupStabilizerChain Gudermannian GumbelDistribution ' +
            'HaarWavelet HadamardMatrix HalfNormalDistribution HamiltonianGraphQ HammingDistance HammingWindow HankelH1 HankelH2 HankelMatrix HannPoissonWindow HannWindow HaradaNortonGroupHN HararyGraph HarmonicMean HarmonicMeanFilter HarmonicNumber Hash HashTable Haversine HazardFunction Head HeadCompose Heads HeavisideLambda HeavisidePi HeavisideTheta HeldGroupHe HeldPart HelpBrowserLookup HelpBrowserNotebook HelpBrowserSettings HermiteDecomposition HermiteH HermitianMatrixQ HessenbergDecomposition Hessian HexadecimalCharacter Hexahedron HexahedronBox HexahedronBoxOptions HiddenSurface HighlightGraph HighlightImage HighpassFilter HigmanSimsGroupHS HilbertFilter HilbertMatrix Histogram Histogram3D HistogramDistribution HistogramList HistogramTransform HistogramTransformInterpolation HitMissTransform HITSCentrality HodgeDual HoeffdingD HoeffdingDTest Hold HoldAll HoldAllComplete HoldComplete HoldFirst HoldForm HoldPattern HoldRest HolidayCalendar HomeDirectory HomePage Horizontal HorizontalForm HorizontalGauge HorizontalScrollPosition HornerForm HotellingTSquareDistribution HoytDistribution HTMLSave Hue HumpDownHump HumpEqual HurwitzLerchPhi HurwitzZeta HyperbolicDistribution HypercubeGraph HyperexponentialDistribution Hyperfactorial Hypergeometric0F1 Hypergeometric0F1Regularized Hypergeometric1F1 Hypergeometric1F1Regularized Hypergeometric2F1 Hypergeometric2F1Regularized HypergeometricDistribution HypergeometricPFQ HypergeometricPFQRegularized HypergeometricU Hyperlink HyperlinkCreationSettings Hyphenation HyphenationOptions HypoexponentialDistribution HypothesisTestData ' +
            'I Identity IdentityMatrix If IgnoreCase Im Image Image3D Image3DSlices ImageAccumulate ImageAdd ImageAdjust ImageAlign ImageApply ImageAspectRatio ImageAssemble ImageCache ImageCacheValid ImageCapture ImageChannels ImageClip ImageColorSpace ImageCompose ImageConvolve ImageCooccurrence ImageCorners ImageCorrelate ImageCorrespondingPoints ImageCrop ImageData ImageDataPacket ImageDeconvolve ImageDemosaic ImageDifference ImageDimensions ImageDistance ImageEffect ImageFeatureTrack ImageFileApply ImageFileFilter ImageFileScan ImageFilter ImageForestingComponents ImageForwardTransformation ImageHistogram ImageKeypoints ImageLevels ImageLines ImageMargins ImageMarkers ImageMeasurements ImageMultiply ImageOffset ImagePad ImagePadding ImagePartition ImagePeriodogram ImagePerspectiveTransformation ImageQ ImageRangeCache ImageReflect ImageRegion ImageResize ImageResolution ImageRotate ImageRotated ImageScaled ImageScan ImageSize ImageSizeAction ImageSizeCache ImageSizeMultipliers ImageSizeRaw ImageSubtract ImageTake ImageTransformation ImageTrim ImageType ImageValue ImageValuePositions Implies Import ImportAutoReplacements ImportString ImprovementImportance In IncidenceGraph IncidenceList IncidenceMatrix IncludeConstantBasis IncludeFileExtension IncludePods IncludeSingularTerm Increment Indent IndentingNewlineSpacings IndentMaxFraction IndependenceTest IndependentEdgeSetQ IndependentUnit IndependentVertexSetQ Indeterminate IndexCreationOptions Indexed IndexGraph IndexTag Inequality InexactNumberQ InexactNumbers Infinity Infix Information Inherited InheritScope Initialization InitializationCell InitializationCellEvaluation InitializationCellWarning InlineCounterAssignments InlineCounterIncrements InlineRules Inner Inpaint Input InputAliases InputAssumptions InputAutoReplacements InputField InputFieldBox InputFieldBoxOptions InputForm InputGrouping InputNamePacket InputNotebook InputPacket InputSettings InputStream InputString InputStringPacket InputToBoxFormPacket Insert InsertionPointObject InsertResults Inset Inset3DBox Inset3DBoxOptions InsetBox InsetBoxOptions Install InstallService InString Integer IntegerDigits IntegerExponent IntegerLength IntegerPart IntegerPartitions IntegerQ Integers IntegerString Integral Integrate Interactive InteractiveTradingChart Interlaced Interleaving InternallyBalancedDecomposition InterpolatingFunction InterpolatingPolynomial Interpolation InterpolationOrder InterpolationPoints InterpolationPrecision Interpretation InterpretationBox InterpretationBoxOptions InterpretationFunction ' +
            'InterpretTemplate InterquartileRange Interrupt InterruptSettings Intersection Interval IntervalIntersection IntervalMemberQ IntervalUnion Inverse InverseBetaRegularized InverseCDF InverseChiSquareDistribution InverseContinuousWaveletTransform InverseDistanceTransform InverseEllipticNomeQ InverseErf InverseErfc InverseFourier InverseFourierCosTransform InverseFourierSequenceTransform InverseFourierSinTransform InverseFourierTransform InverseFunction InverseFunctions InverseGammaDistribution InverseGammaRegularized InverseGaussianDistribution InverseGudermannian InverseHaversine InverseJacobiCD InverseJacobiCN InverseJacobiCS InverseJacobiDC InverseJacobiDN InverseJacobiDS InverseJacobiNC InverseJacobiND InverseJacobiNS InverseJacobiSC InverseJacobiSD InverseJacobiSN InverseLaplaceTransform InversePermutation InverseRadon InverseSeries InverseSurvivalFunction InverseWaveletTransform InverseWeierstrassP InverseZTransform Invisible InvisibleApplication InvisibleTimes IrreduciblePolynomialQ IsolatingInterval IsomorphicGraphQ IsotopeData Italic Item ItemBox ItemBoxOptions ItemSize ItemStyle ItoProcess ' +
            'JaccardDissimilarity JacobiAmplitude Jacobian JacobiCD JacobiCN JacobiCS JacobiDC JacobiDN JacobiDS JacobiNC JacobiND JacobiNS JacobiP JacobiSC JacobiSD JacobiSN JacobiSymbol JacobiZeta JankoGroupJ1 JankoGroupJ2 JankoGroupJ3 JankoGroupJ4 JarqueBeraALMTest JohnsonDistribution Join Joined JoinedCurve JoinedCurveBox JoinForm JordanDecomposition JordanModelDecomposition ' +
            'K KagiChart KaiserBesselWindow KaiserWindow KalmanEstimator KalmanFilter KarhunenLoeveDecomposition KaryTree KatzCentrality KCoreComponents KDistribution KelvinBei KelvinBer KelvinKei KelvinKer KendallTau KendallTauTest KernelExecute KernelMixtureDistribution KernelObject Kernels Ket Khinchin KirchhoffGraph KirchhoffMatrix KleinInvariantJ KnightTourGraph KnotData KnownUnitQ KolmogorovSmirnovTest KroneckerDelta KroneckerModelDecomposition KroneckerProduct KroneckerSymbol KuiperTest KumaraswamyDistribution Kurtosis KuwaharaFilter ' +
            'Label Labeled LabeledSlider LabelingFunction LabelStyle LaguerreL LambdaComponents LambertW LanczosWindow LandauDistribution Language LanguageCategory LaplaceDistribution LaplaceTransform Laplacian LaplacianFilter LaplacianGaussianFilter Large Larger Last Latitude LatitudeLongitude LatticeData LatticeReduce Launch LaunchKernels LayeredGraphPlot LayerSizeFunction LayoutInformation LCM LeafCount LeapYearQ LeastSquares LeastSquaresFilterKernel Left LeftArrow LeftArrowBar LeftArrowRightArrow LeftDownTeeVector LeftDownVector LeftDownVectorBar LeftRightArrow LeftRightVector LeftTee LeftTeeArrow LeftTeeVector LeftTriangle LeftTriangleBar LeftTriangleEqual LeftUpDownVector LeftUpTeeVector LeftUpVector LeftUpVectorBar LeftVector LeftVectorBar LegendAppearance Legended LegendFunction LegendLabel LegendLayout LegendMargins LegendMarkers LegendMarkerSize LegendreP LegendreQ LegendreType Length LengthWhile LerchPhi Less LessEqual LessEqualGreater LessFullEqual LessGreater LessLess LessSlantEqual LessTilde LetterCharacter LetterQ Level LeveneTest LeviCivitaTensor LevyDistribution Lexicographic LibraryFunction LibraryFunctionError LibraryFunctionInformation LibraryFunctionLoad LibraryFunctionUnload LibraryLoad LibraryUnload LicenseID LiftingFilterData LiftingWaveletTransform LightBlue LightBrown LightCyan Lighter LightGray LightGreen Lighting LightingAngle LightMagenta LightOrange LightPink LightPurple LightRed LightSources LightYellow Likelihood Limit LimitsPositioning LimitsPositioningTokens LindleyDistribution Line Line3DBox LinearFilter LinearFractionalTransform LinearModelFit LinearOffsetFunction LinearProgramming LinearRecurrence LinearSolve LinearSolveFunction LineBox LineBreak LinebreakAdjustments LineBreakChart LineBreakWithin LineColor LineForm LineGraph LineIndent LineIndentMaxFraction LineIntegralConvolutionPlot LineIntegralConvolutionScale LineLegend LineOpacity LineSpacing LineWrapParts LinkActivate LinkClose LinkConnect LinkConnectedQ LinkCreate LinkError LinkFlush LinkFunction LinkHost LinkInterrupt LinkLaunch LinkMode LinkObject LinkOpen LinkOptions LinkPatterns LinkProtocol LinkRead LinkReadHeld LinkReadyQ Links LinkWrite LinkWriteHeld LiouvilleLambda List Listable ListAnimate ListContourPlot ListContourPlot3D ListConvolve ListCorrelate ListCurvePathPlot ListDeconvolve ListDensityPlot Listen ListFourierSequenceTransform ListInterpolation ListLineIntegralConvolutionPlot ListLinePlot ListLogLinearPlot ListLogLogPlot ListLogPlot ListPicker ListPickerBox ListPickerBoxBackground ListPickerBoxOptions ListPlay ListPlot ListPlot3D ListPointPlot3D ListPolarPlot ListQ ListStreamDensityPlot ListStreamPlot ListSurfacePlot3D ListVectorDensityPlot ListVectorPlot ListVectorPlot3D ListZTransform Literal LiteralSearch LocalClusteringCoefficient LocalizeVariables LocationEquivalenceTest LocationTest Locator LocatorAutoCreate LocatorBox LocatorBoxOptions LocatorCentering LocatorPane LocatorPaneBox LocatorPaneBoxOptions ' +
            'LocatorRegion Locked Log Log10 Log2 LogBarnesG LogGamma LogGammaDistribution LogicalExpand LogIntegral LogisticDistribution LogitModelFit LogLikelihood LogLinearPlot LogLogisticDistribution LogLogPlot LogMultinormalDistribution LogNormalDistribution LogPlot LogRankTest LogSeriesDistribution LongEqual Longest LongestAscendingSequence LongestCommonSequence LongestCommonSequencePositions LongestCommonSubsequence LongestCommonSubsequencePositions LongestMatch LongForm Longitude LongLeftArrow LongLeftRightArrow LongRightArrow Loopback LoopFreeGraphQ LowerCaseQ LowerLeftArrow LowerRightArrow LowerTriangularize LowpassFilter LQEstimatorGains LQGRegulator LQOutputRegulatorGains LQRegulatorGains LUBackSubstitution LucasL LuccioSamiComponents LUDecomposition LyapunovSolve LyonsGroupLy ' +
            'MachineID MachineName MachineNumberQ MachinePrecision MacintoshSystemPageSetup Magenta Magnification Magnify MainSolve MaintainDynamicCaches Majority MakeBoxes MakeExpression MakeRules MangoldtLambda ManhattanDistance Manipulate Manipulator MannWhitneyTest MantissaExponent Manual Map MapAll MapAt MapIndexed MAProcess MapThread MarcumQ MardiaCombinedTest MardiaKurtosisTest MardiaSkewnessTest MarginalDistribution MarkovProcessProperties Masking MatchingDissimilarity MatchLocalNameQ MatchLocalNames MatchQ Material MathematicaNotation MathieuC MathieuCharacteristicA MathieuCharacteristicB MathieuCharacteristicExponent MathieuCPrime MathieuGroupM11 MathieuGroupM12 MathieuGroupM22 MathieuGroupM23 MathieuGroupM24 MathieuS MathieuSPrime MathMLForm MathMLText Matrices MatrixExp MatrixForm MatrixFunction MatrixLog MatrixPlot MatrixPower MatrixQ MatrixRank Max MaxBend MaxDetect MaxExtraBandwidths MaxExtraConditions MaxFeatures MaxFilter Maximize MaxIterations MaxMemoryUsed MaxMixtureKernels MaxPlotPoints MaxPoints MaxRecursion MaxStableDistribution MaxStepFraction MaxSteps MaxStepSize MaxValue MaxwellDistribution McLaughlinGroupMcL Mean MeanClusteringCoefficient MeanDegreeConnectivity MeanDeviation MeanFilter MeanGraphDistance MeanNeighborDegree MeanShift MeanShiftFilter Median MedianDeviation MedianFilter Medium MeijerG MeixnerDistribution MemberQ MemoryConstrained MemoryInUse Menu MenuAppearance MenuCommandKey MenuEvaluator MenuItem MenuPacket MenuSortingValue MenuStyle MenuView MergeDifferences Mesh MeshFunctions MeshRange MeshShading MeshStyle Message MessageDialog MessageList MessageName MessageOptions MessagePacket Messages MessagesNotebook MetaCharacters MetaInformation Method MethodOptions MexicanHatWavelet MeyerWavelet Min MinDetect MinFilter MinimalPolynomial MinimalStateSpaceModel Minimize Minors MinRecursion MinSize MinStableDistribution Minus MinusPlus MinValue Missing MissingDataMethod MittagLefflerE MixedRadix MixedRadixQuantity MixtureDistribution Mod Modal Mode Modular ModularLambda Module Modulus MoebiusMu Moment Momentary MomentConvert MomentEvaluate MomentGeneratingFunction Monday Monitor MonomialList MonomialOrder MonsterGroupM MorletWavelet MorphologicalBinarize MorphologicalBranchPoints MorphologicalComponents MorphologicalEulerNumber MorphologicalGraph MorphologicalPerimeter MorphologicalTransform Most MouseAnnotation MouseAppearance MouseAppearanceTag MouseButtons Mouseover MousePointerNote MousePosition MovingAverage MovingMedian MoyalDistribution MultiedgeStyle MultilaunchWarning MultiLetterItalics MultiLetterStyle MultilineFunction Multinomial MultinomialDistribution MultinormalDistribution MultiplicativeOrder Multiplicity Multiselection MultivariateHypergeometricDistribution MultivariatePoissonDistribution MultivariateTDistribution ' +
            'N NakagamiDistribution NameQ Names NamespaceBox Nand NArgMax NArgMin NBernoulliB NCache NDSolve NDSolveValue Nearest NearestFunction NeedCurrentFrontEndPackagePacket NeedCurrentFrontEndSymbolsPacket NeedlemanWunschSimilarity Needs Negative NegativeBinomialDistribution NegativeMultinomialDistribution NeighborhoodGraph Nest NestedGreaterGreater NestedLessLess NestedScriptRules NestList NestWhile NestWhileList NevilleThetaC NevilleThetaD NevilleThetaN NevilleThetaS NewPrimitiveStyle NExpectation Next NextPrime NHoldAll NHoldFirst NHoldRest NicholsGridLines NicholsPlot NIntegrate NMaximize NMaxValue NMinimize NMinValue NominalVariables NonAssociative NoncentralBetaDistribution NoncentralChiSquareDistribution NoncentralFRatioDistribution NoncentralStudentTDistribution NonCommutativeMultiply NonConstants None NonlinearModelFit NonlocalMeansFilter NonNegative NonPositive Nor NorlundB Norm Normal NormalDistribution NormalGrouping Normalize NormalizedSquaredEuclideanDistance NormalsFunction NormFunction Not NotCongruent NotCupCap NotDoubleVerticalBar Notebook NotebookApply NotebookAutoSave NotebookClose NotebookConvertSettings NotebookCreate NotebookCreateReturnObject NotebookDefault NotebookDelete NotebookDirectory NotebookDynamicExpression NotebookEvaluate NotebookEventActions NotebookFileName NotebookFind NotebookFindReturnObject NotebookGet NotebookGetLayoutInformationPacket NotebookGetMisspellingsPacket NotebookInformation NotebookInterfaceObject NotebookLocate NotebookObject NotebookOpen NotebookOpenReturnObject NotebookPath NotebookPrint NotebookPut NotebookPutReturnObject NotebookRead NotebookResetGeneratedCells Notebooks NotebookSave NotebookSaveAs NotebookSelection NotebookSetupLayoutInformationPacket NotebooksMenu NotebookWrite NotElement NotEqualTilde NotExists NotGreater NotGreaterEqual NotGreaterFullEqual NotGreaterGreater NotGreaterLess NotGreaterSlantEqual NotGreaterTilde NotHumpDownHump NotHumpEqual NotLeftTriangle NotLeftTriangleBar NotLeftTriangleEqual NotLess NotLessEqual NotLessFullEqual NotLessGreater NotLessLess NotLessSlantEqual NotLessTilde NotNestedGreaterGreater NotNestedLessLess NotPrecedes NotPrecedesEqual NotPrecedesSlantEqual NotPrecedesTilde NotReverseElement NotRightTriangle NotRightTriangleBar NotRightTriangleEqual NotSquareSubset NotSquareSubsetEqual NotSquareSuperset NotSquareSupersetEqual NotSubset NotSubsetEqual NotSucceeds NotSucceedsEqual NotSucceedsSlantEqual NotSucceedsTilde NotSuperset NotSupersetEqual NotTilde NotTildeEqual NotTildeFullEqual NotTildeTilde NotVerticalBar NProbability NProduct NProductFactors NRoots NSolve NSum NSumTerms Null NullRecords NullSpace NullWords Number NumberFieldClassNumber NumberFieldDiscriminant NumberFieldFundamentalUnits NumberFieldIntegralBasis NumberFieldNormRepresentatives NumberFieldRegulator NumberFieldRootsOfUnity NumberFieldSignature NumberForm NumberFormat NumberMarks NumberMultiplier NumberPadding NumberPoint NumberQ NumberSeparator ' +
            'NumberSigns NumberString Numerator NumericFunction NumericQ NuttallWindow NValues NyquistGridLines NyquistPlot ' +
            'O ObservabilityGramian ObservabilityMatrix ObservableDecomposition ObservableModelQ OddQ Off Offset OLEData On ONanGroupON OneIdentity Opacity Open OpenAppend Opener OpenerBox OpenerBoxOptions OpenerView OpenFunctionInspectorPacket Opening OpenRead OpenSpecialOptions OpenTemporary OpenWrite Operate OperatingSystem OptimumFlowData Optional OptionInspectorSettings OptionQ Options OptionsPacket OptionsPattern OptionValue OptionValueBox OptionValueBoxOptions Or Orange Order OrderDistribution OrderedQ Ordering Orderless OrnsteinUhlenbeckProcess Orthogonalize Out Outer OutputAutoOverwrite OutputControllabilityMatrix OutputControllableModelQ OutputForm OutputFormData OutputGrouping OutputMathEditExpression OutputNamePacket OutputResponse OutputSizeLimit OutputStream Over OverBar OverDot Overflow OverHat Overlaps Overlay OverlayBox OverlayBoxOptions Overscript OverscriptBox OverscriptBoxOptions OverTilde OverVector OwenT OwnValues ' +
            'PackingMethod PaddedForm Padding PadeApproximant PadLeft PadRight PageBreakAbove PageBreakBelow PageBreakWithin PageFooterLines PageFooters PageHeaderLines PageHeaders PageHeight PageRankCentrality PageWidth PairedBarChart PairedHistogram PairedSmoothHistogram PairedTTest PairedZTest PaletteNotebook PalettePath Pane PaneBox PaneBoxOptions Panel PanelBox PanelBoxOptions Paneled PaneSelector PaneSelectorBox PaneSelectorBoxOptions PaperWidth ParabolicCylinderD ParagraphIndent ParagraphSpacing ParallelArray ParallelCombine ParallelDo ParallelEvaluate Parallelization Parallelize ParallelMap ParallelNeeds ParallelProduct ParallelSubmit ParallelSum ParallelTable ParallelTry Parameter ParameterEstimator ParameterMixtureDistribution ParameterVariables ParametricFunction ParametricNDSolve ParametricNDSolveValue ParametricPlot ParametricPlot3D ParentConnect ParentDirectory ParentForm Parenthesize ParentList ParetoDistribution Part PartialCorrelationFunction PartialD ParticleData Partition PartitionsP PartitionsQ ParzenWindow PascalDistribution PassEventsDown PassEventsUp Paste PasteBoxFormInlineCells PasteButton Path PathGraph PathGraphQ Pattern PatternSequence PatternTest PauliMatrix PaulWavelet Pause PausedTime PDF PearsonChiSquareTest PearsonCorrelationTest PearsonDistribution PerformanceGoal PeriodicInterpolation Periodogram PeriodogramArray PermutationCycles PermutationCyclesQ PermutationGroup PermutationLength PermutationList PermutationListQ PermutationMax PermutationMin PermutationOrder PermutationPower PermutationProduct PermutationReplace Permutations PermutationSupport Permute PeronaMalikFilter Perpendicular PERTDistribution PetersenGraph PhaseMargins Pi Pick PIDData PIDDerivativeFilter PIDFeedforward PIDTune Piecewise PiecewiseExpand PieChart PieChart3D PillaiTrace PillaiTraceTest Pink Pivoting PixelConstrained PixelValue PixelValuePositions Placed Placeholder PlaceholderReplace Plain PlanarGraphQ Play PlayRange Plot Plot3D Plot3Matrix PlotDivision PlotJoined PlotLabel PlotLayout PlotLegends PlotMarkers PlotPoints PlotRange PlotRangeClipping PlotRangePadding PlotRegion PlotStyle Plus PlusMinus Pochhammer PodStates PodWidth Point Point3DBox PointBox PointFigureChart PointForm PointLegend PointSize PoissonConsulDistribution PoissonDistribution PoissonProcess PoissonWindow PolarAxes PolarAxesOrigin PolarGridLines PolarPlot PolarTicks PoleZeroMarkers PolyaAeppliDistribution PolyGamma Polygon Polygon3DBox Polygon3DBoxOptions PolygonBox PolygonBoxOptions PolygonHoleScale PolygonIntersections PolygonScale PolyhedronData PolyLog PolynomialExtendedGCD PolynomialForm PolynomialGCD PolynomialLCM PolynomialMod PolynomialQ PolynomialQuotient PolynomialQuotientRemainder PolynomialReduce PolynomialRemainder Polynomials PopupMenu PopupMenuBox PopupMenuBoxOptions PopupView PopupWindow Position Positive PositiveDefiniteMatrixQ PossibleZeroQ Postfix PostScript Power PowerDistribution PowerExpand PowerMod PowerModList ' +
            'PowerSpectralDensity PowersRepresentations PowerSymmetricPolynomial Precedence PrecedenceForm Precedes PrecedesEqual PrecedesSlantEqual PrecedesTilde Precision PrecisionGoal PreDecrement PredictionRoot PreemptProtect PreferencesPath Prefix PreIncrement Prepend PrependTo PreserveImageOptions Previous PriceGraphDistribution PrimaryPlaceholder Prime PrimeNu PrimeOmega PrimePi PrimePowerQ PrimeQ Primes PrimeZetaP PrimitiveRoot PrincipalComponents PrincipalValue Print PrintAction PrintForm PrintingCopies PrintingOptions PrintingPageRange PrintingStartingPageNumber PrintingStyleEnvironment PrintPrecision PrintTemporary Prism PrismBox PrismBoxOptions PrivateCellOptions PrivateEvaluationOptions PrivateFontOptions PrivateFrontEndOptions PrivateNotebookOptions PrivatePaths Probability ProbabilityDistribution ProbabilityPlot ProbabilityPr ProbabilityScalePlot ProbitModelFit ProcessEstimator ProcessParameterAssumptions ProcessParameterQ ProcessStateDomain ProcessTimeDomain Product ProductDistribution ProductLog ProgressIndicator ProgressIndicatorBox ProgressIndicatorBoxOptions Projection Prolog PromptForm Properties Property PropertyList PropertyValue Proportion Proportional Protect Protected ProteinData Pruning PseudoInverse Purple Put PutAppend Pyramid PyramidBox PyramidBoxOptions ' +
            'QBinomial QFactorial QGamma QHypergeometricPFQ QPochhammer QPolyGamma QRDecomposition QuadraticIrrationalQ Quantile QuantilePlot Quantity QuantityForm QuantityMagnitude QuantityQ QuantityUnit Quartics QuartileDeviation Quartiles QuartileSkewness QueueingNetworkProcess QueueingProcess QueueProperties Quiet Quit Quotient QuotientRemainder ' +
            'RadialityCentrality RadicalBox RadicalBoxOptions RadioButton RadioButtonBar RadioButtonBox RadioButtonBoxOptions Radon RamanujanTau RamanujanTauL RamanujanTauTheta RamanujanTauZ Random RandomChoice RandomComplex RandomFunction RandomGraph RandomImage RandomInteger RandomPermutation RandomPrime RandomReal RandomSample RandomSeed RandomVariate RandomWalkProcess Range RangeFilter RangeSpecification RankedMax RankedMin Raster Raster3D Raster3DBox Raster3DBoxOptions RasterArray RasterBox RasterBoxOptions Rasterize RasterSize Rational RationalFunctions Rationalize Rationals Ratios Raw RawArray RawBoxes RawData RawMedium RayleighDistribution Re Read ReadList ReadProtected Real RealBlockDiagonalForm RealDigits RealExponent Reals Reap Record RecordLists RecordSeparators Rectangle RectangleBox RectangleBoxOptions RectangleChart RectangleChart3D RecurrenceFilter RecurrenceTable RecurringDigitsForm Red Reduce RefBox ReferenceLineStyle ReferenceMarkers ReferenceMarkerStyle Refine ReflectionMatrix ReflectionTransform Refresh RefreshRate RegionBinarize RegionFunction RegionPlot RegionPlot3D RegularExpression Regularization Reinstall Release ReleaseHold ReliabilityDistribution ReliefImage ReliefPlot Remove RemoveAlphaChannel RemoveAsynchronousTask Removed RemoveInputStreamMethod RemoveOutputStreamMethod RemoveProperty RemoveScheduledTask RenameDirectory RenameFile RenderAll RenderingOptions RenewalProcess RenkoChart Repeated RepeatedNull RepeatedString Replace ReplaceAll ReplaceHeldPart ReplaceImageValue ReplaceList ReplacePart ReplacePixelValue ReplaceRepeated Resampling Rescale RescalingTransform ResetDirectory ResetMenusPacket ResetScheduledTask Residue Resolve Rest Resultant ResumePacket Return ReturnExpressionPacket ReturnInputFormPacket ReturnPacket ReturnTextPacket Reverse ReverseBiorthogonalSplineWavelet ReverseElement ReverseEquilibrium ReverseGraph ReverseUpEquilibrium RevolutionAxis RevolutionPlot3D RGBColor RiccatiSolve RiceDistribution RidgeFilter RiemannR RiemannSiegelTheta RiemannSiegelZ Riffle Right RightArrow RightArrowBar RightArrowLeftArrow RightCosetRepresentative RightDownTeeVector RightDownVector RightDownVectorBar RightTee RightTeeArrow RightTeeVector RightTriangle RightTriangleBar RightTriangleEqual RightUpDownVector RightUpTeeVector RightUpVector RightUpVectorBar RightVector RightVectorBar RiskAchievementImportance RiskReductionImportance RogersTanimotoDissimilarity Root RootApproximant RootIntervals RootLocusPlot RootMeanSquare RootOfUnityQ RootReduce Roots RootSum Rotate RotateLabel RotateLeft RotateRight RotationAction RotationBox RotationBoxOptions RotationMatrix RotationTransform Round RoundImplies RoundingRadius Row RowAlignments RowBackgrounds RowBox RowHeights RowLines RowMinHeight RowReduce RowsEqual RowSpacings RSolve RudvalisGroupRu Rule RuleCondition RuleDelayed RuleForm RulerUnits Run RunScheduledTask RunThrough RuntimeAttributes RuntimeOptions RussellRaoDissimilarity ' +
            'SameQ SameTest SampleDepth SampledSoundFunction SampledSoundList SampleRate SamplingPeriod SARIMAProcess SARMAProcess SatisfiabilityCount SatisfiabilityInstances SatisfiableQ Saturday Save Saveable SaveAutoDelete SaveDefinitions SawtoothWave Scale Scaled ScaleDivisions ScaledMousePosition ScaleOrigin ScalePadding ScaleRanges ScaleRangeStyle ScalingFunctions ScalingMatrix ScalingTransform Scan ScheduledTaskActiveQ ScheduledTaskData ScheduledTaskObject ScheduledTasks SchurDecomposition ScientificForm ScreenRectangle ScreenStyleEnvironment ScriptBaselineShifts ScriptLevel ScriptMinSize ScriptRules ScriptSizeMultipliers Scrollbars ScrollingOptions ScrollPosition Sec Sech SechDistribution SectionGrouping SectorChart SectorChart3D SectorOrigin SectorSpacing SeedRandom Select Selectable SelectComponents SelectedCells SelectedNotebook Selection SelectionAnimate SelectionCell SelectionCellCreateCell SelectionCellDefaultStyle SelectionCellParentStyle SelectionCreateCell SelectionDebuggerTag SelectionDuplicateCell SelectionEvaluate SelectionEvaluateCreateCell SelectionMove SelectionPlaceholder SelectionSetStyle SelectWithContents SelfLoops SelfLoopStyle SemialgebraicComponentInstances SendMail Sequence SequenceAlignment SequenceForm SequenceHold SequenceLimit Series SeriesCoefficient SeriesData SessionTime Set SetAccuracy SetAlphaChannel SetAttributes Setbacks SetBoxFormNamesPacket SetDelayed SetDirectory SetEnvironment SetEvaluationNotebook SetFileDate SetFileLoadingContext SetNotebookStatusLine SetOptions SetOptionsPacket SetPrecision SetProperty SetSelectedNotebook SetSharedFunction SetSharedVariable SetSpeechParametersPacket SetStreamPosition SetSystemOptions Setter SetterBar SetterBox SetterBoxOptions Setting SetValue Shading Shallow ShannonWavelet ShapiroWilkTest Share Sharpen ShearingMatrix ShearingTransform ShenCastanMatrix Short ShortDownArrow Shortest ShortestMatch ShortestPathFunction ShortLeftArrow ShortRightArrow ShortUpArrow Show ShowAutoStyles ShowCellBracket ShowCellLabel ShowCellTags ShowClosedCellArea ShowContents ShowControls ShowCursorTracker ShowGroupOpenCloseIcon ShowGroupOpener ShowInvisibleCharacters ShowPageBreaks ShowPredictiveInterface ShowSelection ShowShortBoxForm ShowSpecialCharacters ShowStringCharacters ShowSyntaxStyles ShrinkingDelay ShrinkWrapBoundingBox SiegelTheta SiegelTukeyTest Sign Signature SignedRankTest SignificanceLevel SignPadding SignTest SimilarityRules SimpleGraph SimpleGraphQ Simplify Sin Sinc SinghMaddalaDistribution SingleEvaluation SingleLetterItalics SingleLetterStyle SingularValueDecomposition SingularValueList SingularValuePlot SingularValues Sinh SinhIntegral SinIntegral SixJSymbol Skeleton SkeletonTransform SkellamDistribution Skewness SkewNormalDistribution Skip SliceDistribution Slider Slider2D Slider2DBox Slider2DBoxOptions SliderBox SliderBoxOptions SlideView Slot SlotSequence Small SmallCircle Smaller SmithDelayCompensator SmithWatermanSimilarity ' +
            'SmoothDensityHistogram SmoothHistogram SmoothHistogram3D SmoothKernelDistribution SocialMediaData Socket SokalSneathDissimilarity Solve SolveAlways SolveDelayed Sort SortBy Sound SoundAndGraphics SoundNote SoundVolume Sow Space SpaceForm Spacer Spacings Span SpanAdjustments SpanCharacterRounding SpanFromAbove SpanFromBoth SpanFromLeft SpanLineThickness SpanMaxSize SpanMinSize SpanningCharacters SpanSymmetric SparseArray SpatialGraphDistribution Speak SpeakTextPacket SpearmanRankTest SpearmanRho Spectrogram SpectrogramArray Specularity SpellingCorrection SpellingDictionaries SpellingDictionariesPath SpellingOptions SpellingSuggestionsPacket Sphere SphereBox SphericalBesselJ SphericalBesselY SphericalHankelH1 SphericalHankelH2 SphericalHarmonicY SphericalPlot3D SphericalRegion SpheroidalEigenvalue SpheroidalJoiningFactor SpheroidalPS SpheroidalPSPrime SpheroidalQS SpheroidalQSPrime SpheroidalRadialFactor SpheroidalS1 SpheroidalS1Prime SpheroidalS2 SpheroidalS2Prime Splice SplicedDistribution SplineClosed SplineDegree SplineKnots SplineWeights Split SplitBy SpokenString Sqrt SqrtBox SqrtBoxOptions Square SquaredEuclideanDistance SquareFreeQ SquareIntersection SquaresR SquareSubset SquareSubsetEqual SquareSuperset SquareSupersetEqual SquareUnion SquareWave StabilityMargins StabilityMarginsStyle StableDistribution Stack StackBegin StackComplete StackInhibit StandardDeviation StandardDeviationFilter StandardForm Standardize StandbyDistribution Star StarGraph StartAsynchronousTask StartingStepSize StartOfLine StartOfString StartScheduledTask StartupSound StateDimensions StateFeedbackGains StateOutputEstimator StateResponse StateSpaceModel StateSpaceRealization StateSpaceTransform StationaryDistribution StationaryWaveletPacketTransform StationaryWaveletTransform StatusArea StatusCentrality StepMonitor StieltjesGamma StirlingS1 StirlingS2 StopAsynchronousTask StopScheduledTask StrataVariables StratonovichProcess StreamColorFunction StreamColorFunctionScaling StreamDensityPlot StreamPlot StreamPoints StreamPosition Streams StreamScale StreamStyle String StringBreak StringByteCount StringCases StringCount StringDrop StringExpression StringForm StringFormat StringFreeQ StringInsert StringJoin StringLength StringMatchQ StringPosition StringQ StringReplace StringReplaceList StringReplacePart StringReverse StringRotateLeft StringRotateRight StringSkeleton StringSplit StringTake StringToStream StringTrim StripBoxes StripOnInput StripWrapperBoxes StrokeForm StructuralImportance StructuredArray StructuredSelection StruveH StruveL Stub StudentTDistribution Style StyleBox StyleBoxAutoDelete StyleBoxOptions StyleData StyleDefinitions StyleForm StyleKeyMapping StyleMenuListing StyleNameDialogSettings StyleNames StylePrint StyleSheetPath Subfactorial Subgraph SubMinus SubPlus SubresultantPolynomialRemainders ' +
            'SubresultantPolynomials Subresultants Subscript SubscriptBox SubscriptBoxOptions Subscripted Subset SubsetEqual Subsets SubStar Subsuperscript SubsuperscriptBox SubsuperscriptBoxOptions Subtract SubtractFrom SubValues Succeeds SucceedsEqual SucceedsSlantEqual SucceedsTilde SuchThat Sum SumConvergence Sunday SuperDagger SuperMinus SuperPlus Superscript SuperscriptBox SuperscriptBoxOptions Superset SupersetEqual SuperStar Surd SurdForm SurfaceColor SurfaceGraphics SurvivalDistribution SurvivalFunction SurvivalModel SurvivalModelFit SuspendPacket SuzukiDistribution SuzukiGroupSuz SwatchLegend Switch Symbol SymbolName SymletWavelet Symmetric SymmetricGroup SymmetricMatrixQ SymmetricPolynomial SymmetricReduction Symmetrize SymmetrizedArray SymmetrizedArrayRules SymmetrizedDependentComponents SymmetrizedIndependentComponents SymmetrizedReplacePart SynchronousInitialization SynchronousUpdating Syntax SyntaxForm SyntaxInformation SyntaxLength SyntaxPacket SyntaxQ SystemDialogInput SystemException SystemHelpPath SystemInformation SystemInformationData SystemOpen SystemOptions SystemsModelDelay SystemsModelDelayApproximate SystemsModelDelete SystemsModelDimensions SystemsModelExtract SystemsModelFeedbackConnect SystemsModelLabels SystemsModelOrder SystemsModelParallelConnect SystemsModelSeriesConnect SystemsModelStateFeedbackConnect SystemStub ' +
            'Tab TabFilling Table TableAlignments TableDepth TableDirections TableForm TableHeadings TableSpacing TableView TableViewBox TabSpacings TabView TabViewBox TabViewBoxOptions TagBox TagBoxNote TagBoxOptions TaggingRules TagSet TagSetDelayed TagStyle TagUnset Take TakeWhile Tally Tan Tanh TargetFunctions TargetUnits TautologyQ TelegraphProcess TemplateBox TemplateBoxOptions TemplateSlotSequence TemporalData Temporary TemporaryVariable TensorContract TensorDimensions TensorExpand TensorProduct TensorQ TensorRank TensorReduce TensorSymmetry TensorTranspose TensorWedge Tetrahedron TetrahedronBox TetrahedronBoxOptions TeXForm TeXSave Text Text3DBox Text3DBoxOptions TextAlignment TextBand TextBoundingBox TextBox TextCell TextClipboardType TextData TextForm TextJustification TextLine TextPacket TextParagraph TextRecognize TextRendering TextStyle Texture TextureCoordinateFunction TextureCoordinateScaling Therefore ThermometerGauge Thick Thickness Thin Thinning ThisLink ThompsonGroupTh Thread ThreeJSymbol Threshold Through Throw Thumbnail Thursday Ticks TicksStyle Tilde TildeEqual TildeFullEqual TildeTilde TimeConstrained TimeConstraint Times TimesBy TimeSeriesForecast TimeSeriesInvertibility TimeUsed TimeValue TimeZone Timing Tiny TitleGrouping TitsGroupT ToBoxes ToCharacterCode ToColor ToContinuousTimeModel ToDate ToDiscreteTimeModel ToeplitzMatrix ToExpression ToFileName Together Toggle ToggleFalse Toggler TogglerBar TogglerBox TogglerBoxOptions ToHeldExpression ToInvertibleTimeSeries TokenWords Tolerance ToLowerCase ToNumberField TooBig Tooltip TooltipBox TooltipBoxOptions TooltipDelay TooltipStyle Top TopHatTransform TopologicalSort ToRadicals ToRules ToString Total TotalHeight TotalVariationFilter TotalWidth TouchscreenAutoZoom TouchscreenControlPlacement ToUpperCase Tr Trace TraceAbove TraceAction TraceBackward TraceDepth TraceDialog TraceForward TraceInternal TraceLevel TraceOff TraceOn TraceOriginal TracePrint TraceScan TrackedSymbols TradingChart TraditionalForm TraditionalFunctionNotation TraditionalNotation TraditionalOrder TransferFunctionCancel TransferFunctionExpand TransferFunctionFactor TransferFunctionModel TransferFunctionPoles TransferFunctionTransform TransferFunctionZeros TransformationFunction TransformationFunctions TransformationMatrix TransformedDistribution TransformedField Translate TranslationTransform TransparentColor Transpose TreeForm TreeGraph TreeGraphQ TreePlot TrendStyle TriangleWave TriangularDistribution Trig TrigExpand TrigFactor TrigFactorList Trigger TrigReduce TrigToExp TrimmedMean True TrueQ TruncatedDistribution TsallisQExponentialDistribution TsallisQGaussianDistribution TTest Tube TubeBezierCurveBox TubeBezierCurveBoxOptions TubeBox TubeBSplineCurveBox TubeBSplineCurveBoxOptions Tuesday TukeyLambdaDistribution TukeyWindow Tuples TuranGraph TuringMachine ' +
            'Transparent ' +
            'UnateQ Uncompress Undefined UnderBar Underflow Underlined Underoverscript UnderoverscriptBox UnderoverscriptBoxOptions Underscript UnderscriptBox UnderscriptBoxOptions UndirectedEdge UndirectedGraph UndirectedGraphQ UndocumentedTestFEParserPacket UndocumentedTestGetSelectionPacket Unequal Unevaluated UniformDistribution UniformGraphDistribution UniformSumDistribution Uninstall Union UnionPlus Unique UnitBox UnitConvert UnitDimensions Unitize UnitRootTest UnitSimplify UnitStep UnitTriangle UnitVector Unprotect UnsameQ UnsavedVariables Unset UnsetShared UntrackedVariables Up UpArrow UpArrowBar UpArrowDownArrow Update UpdateDynamicObjects UpdateDynamicObjectsSynchronous UpdateInterval UpDownArrow UpEquilibrium UpperCaseQ UpperLeftArrow UpperRightArrow UpperTriangularize Upsample UpSet UpSetDelayed UpTee UpTeeArrow UpValues URL URLFetch URLFetchAsynchronous URLSave URLSaveAsynchronous UseGraphicsRange Using UsingFrontEnd ' +
            'V2Get ValidationLength Value ValueBox ValueBoxOptions ValueForm ValueQ ValuesData Variables Variance VarianceEquivalenceTest VarianceEstimatorFunction VarianceGammaDistribution VarianceTest VectorAngle VectorColorFunction VectorColorFunctionScaling VectorDensityPlot VectorGlyphData VectorPlot VectorPlot3D VectorPoints VectorQ Vectors VectorScale VectorStyle Vee Verbatim Verbose VerboseConvertToPostScriptPacket VerifyConvergence VerifySolutions VerifyTestAssumptions Version VersionNumber VertexAdd VertexCapacity VertexColors VertexComponent VertexConnectivity VertexCoordinateRules VertexCoordinates VertexCorrelationSimilarity VertexCosineSimilarity VertexCount VertexCoverQ VertexDataCoordinates VertexDegree VertexDelete VertexDiceSimilarity VertexEccentricity VertexInComponent VertexInDegree VertexIndex VertexJaccardSimilarity VertexLabeling VertexLabels VertexLabelStyle VertexList VertexNormals VertexOutComponent VertexOutDegree VertexQ VertexRenderingFunction VertexReplace VertexShape VertexShapeFunction VertexSize VertexStyle VertexTextureCoordinates VertexWeight Vertical VerticalBar VerticalForm VerticalGauge VerticalSeparator VerticalSlider VerticalTilde ViewAngle ViewCenter ViewMatrix ViewPoint ViewPointSelectorSettings ViewPort ViewRange ViewVector ViewVertical VirtualGroupData Visible VisibleCell VoigtDistribution VonMisesDistribution ' +
            'WaitAll WaitAsynchronousTask WaitNext WaitUntil WakebyDistribution WalleniusHypergeometricDistribution WaringYuleDistribution WatershedComponents WatsonUSquareTest WattsStrogatzGraphDistribution WaveletBestBasis WaveletFilterCoefficients WaveletImagePlot WaveletListPlot WaveletMapIndexed WaveletMatrixPlot WaveletPhi WaveletPsi WaveletScale WaveletScalogram WaveletThreshold WeaklyConnectedComponents WeaklyConnectedGraphQ WeakStationarity WeatherData WeberE Wedge Wednesday WeibullDistribution WeierstrassHalfPeriods WeierstrassInvariants WeierstrassP WeierstrassPPrime WeierstrassSigma WeierstrassZeta WeightedAdjacencyGraph WeightedAdjacencyMatrix WeightedData WeightedGraphQ Weights WelchWindow WheelGraph WhenEvent Which While White Whitespace WhitespaceCharacter WhittakerM WhittakerW WienerFilter WienerProcess WignerD WignerSemicircleDistribution WilksW WilksWTest WindowClickSelect WindowElements WindowFloating WindowFrame WindowFrameElements WindowMargins WindowMovable WindowOpacity WindowSelected WindowSize WindowStatusArea WindowTitle WindowToolbars WindowWidth With WolframAlpha WolframAlphaDate WolframAlphaQuantity WolframAlphaResult Word WordBoundary WordCharacter WordData WordSearch WordSeparators WorkingPrecision Write WriteString Wronskian ' +
            'XMLElement XMLObject Xnor Xor ' +
            'Yellow YuleDissimilarity ' +
            'ZernikeR ZeroSymmetric ZeroTest ZeroWidthTimes Zeta ZetaZero ZipfDistribution ZTest ZTransform ' +
            '$Aborted $ActivationGroupID $ActivationKey $ActivationUserRegistered $AddOnsDirectory $AssertFunction $Assumptions $AsynchronousTask $BaseDirectory $BatchInput $BatchOutput $BoxForms $ByteOrdering $Canceled $CharacterEncoding $CharacterEncodings $CommandLine $CompilationTarget $ConditionHold $ConfiguredKernels $Context $ContextPath $ControlActiveSetting $CreationDate $CurrentLink $DateStringFormat $DefaultFont $DefaultFrontEnd $DefaultImagingDevice $DefaultPath $Display $DisplayFunction $DistributedContexts $DynamicEvaluation $Echo $Epilog $ExportFormats $Failed $FinancialDataSource $FormatType $FrontEnd $FrontEndSession $GeoLocation $HistoryLength $HomeDirectory $HTTPCookies $IgnoreEOF $ImagingDevices $ImportFormats $InitialDirectory $Input $InputFileName $InputStreamMethods $Inspector $InstallationDate $InstallationDirectory $InterfaceEnvironment $IterationLimit $KernelCount $KernelID $Language $LaunchDirectory $LibraryPath $LicenseExpirationDate $LicenseID $LicenseProcesses $LicenseServer $LicenseSubprocesses $LicenseType $Line $Linked $LinkSupported $LoadedFiles $MachineAddresses $MachineDomain $MachineDomains $MachineEpsilon $MachineID $MachineName $MachinePrecision $MachineType $MaxExtraPrecision $MaxLicenseProcesses $MaxLicenseSubprocesses $MaxMachineNumber $MaxNumber $MaxPiecewiseCases $MaxPrecision $MaxRootDegree $MessageGroups $MessageList $MessagePrePrint $Messages $MinMachineNumber $MinNumber $MinorReleaseNumber $MinPrecision $ModuleNumber $NetworkLicense $NewMessage $NewSymbol $Notebooks $NumberMarks $Off $OperatingSystem $Output $OutputForms $OutputSizeLimit $OutputStreamMethods $Packages $ParentLink $ParentProcessID $PasswordFile $PatchLevelID $Path $PathnameSeparator $PerformanceGoal $PipeSupported $Post $Pre $PreferencesDirectory $PrePrint $PreRead $PrintForms $PrintLiteral $ProcessID $ProcessorCount $ProcessorType $ProductInformation $ProgramName $RandomState $RecursionLimit $ReleaseNumber $RootDirectory $ScheduledTask $ScriptCommandLine $SessionID $SetParentLink $SharedFunctions $SharedVariables $SoundDisplay $SoundDisplayFunction $SuppressInputFormHeads $SynchronousEvaluation $SyntaxHandler $System $SystemCharacterEncoding $SystemID $SystemWordLength $TemporaryDirectory $TemporaryPrefix $TextStyle $TimedOut $TimeUnit $TimeZone $TopDirectory $TraceOff $TraceOn $TracePattern $TracePostAction $TracePreAction $Urgent $UserAddOnsDirectory $UserBaseDirectory $UserDocumentsDirectory $UserName $Version $VersionNumber',
          contains: [
            {
              className: 'comment',
              begin: /\(\*/,
              end: /\*\)/
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE,
            {
              begin: /\{/,
              end: /\}/,
              illegal: /:/
            }
          ]
        };
      };

      /***/
    },
    /* 451 */
    /***/ function(module, exports) {
      module.exports /*
	  Formal syntax is not published, helpful link:
	  https://github.com/kornilova-l/matlab-IntelliJ-plugin/blob/master/src/main/grammar/Matlab.bnf
	*/ = function(
        hljs
      ) {
        var TRANSPOSE_RE = "('|\\.')+";
        var TRANSPOSE = {
          relevance: 0,
          contains: [{ begin: TRANSPOSE_RE }]
        };

        return {
          keywords: {
            keyword:
              'break case catch classdef continue else elseif end enumerated events for function ' +
              'global if methods otherwise parfor persistent properties return spmd switch try while',
            built_in:
              'sin sind sinh asin asind asinh cos cosd cosh acos acosd acosh tan tand tanh atan ' +
              'atand atan2 atanh sec secd sech asec asecd asech csc cscd csch acsc acscd acsch cot ' +
              'cotd coth acot acotd acoth hypot exp expm1 log log1p log10 log2 pow2 realpow reallog ' +
              'realsqrt sqrt nthroot nextpow2 abs angle complex conj imag real unwrap isreal ' +
              'cplxpair fix floor ceil round mod rem sign airy besselj bessely besselh besseli ' +
              'besselk beta betainc betaln ellipj ellipke erf erfc erfcx erfinv expint gamma ' +
              'gammainc gammaln psi legendre cross dot factor isprime primes gcd lcm rat rats perms ' +
              'nchoosek factorial cart2sph cart2pol pol2cart sph2cart hsv2rgb rgb2hsv zeros ones ' +
              'eye repmat rand randn linspace logspace freqspace meshgrid accumarray size length ' +
              'ndims numel disp isempty isequal isequalwithequalnans cat reshape diag blkdiag tril ' +
              'triu fliplr flipud flipdim rot90 find sub2ind ind2sub bsxfun ndgrid permute ipermute ' +
              'shiftdim circshift squeeze isscalar isvector ans eps realmax realmin pi i inf nan ' +
              'isnan isinf isfinite j why compan gallery hadamard hankel hilb invhilb magic pascal ' +
              'rosser toeplitz vander wilkinson max min nanmax nanmin mean nanmean type table ' +
              'readtable writetable sortrows sort figure plot plot3 scatter scatter3 cellfun ' +
              'legend intersect ismember procrustes hold num2cell '
          },
          illegal: '(//|"|#|/\\*|\\s+/\\w+)',
          contains: [
            {
              className: 'function',
              beginKeywords: 'function',
              end: '$',
              contains: [
                hljs.UNDERSCORE_TITLE_MODE,
                {
                  className: 'params',
                  variants: [
                    { begin: '\\(', end: '\\)' },
                    { begin: '\\[', end: '\\]' }
                  ]
                }
              ]
            },
            {
              className: 'built_in',
              begin: /true|false/,
              relevance: 0,
              starts: TRANSPOSE
            },
            {
              begin: '[a-zA-Z][a-zA-Z_0-9]*' + TRANSPOSE_RE,
              relevance: 0
            },
            {
              className: 'number',
              begin: hljs.C_NUMBER_RE,
              relevance: 0,
              starts: TRANSPOSE
            },
            {
              className: 'string',
              begin: "'",
              end: "'",
              contains: [hljs.BACKSLASH_ESCAPE, { begin: "''" }]
            },
            {
              begin: /\]|}|\)/,
              relevance: 0,
              starts: TRANSPOSE
            },
            {
              className: 'string',
              begin: '"',
              end: '"',
              contains: [hljs.BACKSLASH_ESCAPE, { begin: '""' }],
              starts: TRANSPOSE
            },
            hljs.COMMENT('^\\s*\\%\\{\\s*$', '^\\s*\\%\\}\\s*$'),
            hljs.COMMENT('\\%', '$')
          ]
        };
      };

      /***/
    },
    /* 452 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS =
          'if then else elseif for thru do while unless step in and or not';
        var LITERALS =
          'true false unknown inf minf ind und %e %i %pi %phi %gamma';
        var BUILTIN_FUNCTIONS =
          ' abasep abs absint absolute_real_time acos acosh acot acoth acsc acsch activate' +
          ' addcol add_edge add_edges addmatrices addrow add_vertex add_vertices adjacency_matrix' +
          ' adjoin adjoint af agd airy airy_ai airy_bi airy_dai airy_dbi algsys alg_type' +
          ' alias allroots alphacharp alphanumericp amortization %and annuity_fv' +
          ' annuity_pv antid antidiff AntiDifference append appendfile apply apply1 apply2' +
          ' applyb1 apropos args arit_amortization arithmetic arithsum array arrayapply' +
          ' arrayinfo arraymake arraysetapply ascii asec asech asin asinh askinteger' +
          ' asksign assoc assoc_legendre_p assoc_legendre_q assume assume_external_byte_order' +
          ' asympa at atan atan2 atanh atensimp atom atvalue augcoefmatrix augmented_lagrangian_method' +
          ' av average_degree backtrace bars barsplot barsplot_description base64 base64_decode' +
          ' bashindices batch batchload bc2 bdvac belln benefit_cost bern bernpoly bernstein_approx' +
          ' bernstein_expand bernstein_poly bessel bessel_i bessel_j bessel_k bessel_simplify' +
          ' bessel_y beta beta_incomplete beta_incomplete_generalized beta_incomplete_regularized' +
          ' bezout bfallroots bffac bf_find_root bf_fmin_cobyla bfhzeta bfloat bfloatp' +
          ' bfpsi bfpsi0 bfzeta biconnected_components bimetric binomial bipartition' +
          ' block blockmatrixp bode_gain bode_phase bothcoef box boxplot boxplot_description' +
          ' break bug_report build_info|10 buildq build_sample burn cabs canform canten' +
          ' cardinality carg cartan cartesian_product catch cauchy_matrix cbffac cdf_bernoulli' +
          ' cdf_beta cdf_binomial cdf_cauchy cdf_chi2 cdf_continuous_uniform cdf_discrete_uniform' +
          ' cdf_exp cdf_f cdf_gamma cdf_general_finite_discrete cdf_geometric cdf_gumbel' +
          ' cdf_hypergeometric cdf_laplace cdf_logistic cdf_lognormal cdf_negative_binomial' +
          ' cdf_noncentral_chi2 cdf_noncentral_student_t cdf_normal cdf_pareto cdf_poisson' +
          ' cdf_rank_sum cdf_rayleigh cdf_signed_rank cdf_student_t cdf_weibull cdisplay' +
          ' ceiling central_moment cequal cequalignore cf cfdisrep cfexpand cgeodesic' +
          ' cgreaterp cgreaterpignore changename changevar chaosgame charat charfun charfun2' +
          ' charlist charp charpoly chdir chebyshev_t chebyshev_u checkdiv check_overlaps' +
          ' chinese cholesky christof chromatic_index chromatic_number cint circulant_graph' +
          ' clear_edge_weight clear_rules clear_vertex_label clebsch_gordan clebsch_graph' +
          ' clessp clesspignore close closefile cmetric coeff coefmatrix cograd col collapse' +
          ' collectterms columnop columnspace columnswap columnvector combination combine' +
          ' comp2pui compare compfile compile compile_file complement_graph complete_bipartite_graph' +
          ' complete_graph complex_number_p components compose_functions concan concat' +
          ' conjugate conmetderiv connected_components connect_vertices cons constant' +
          ' constantp constituent constvalue cont2part content continuous_freq contortion' +
          ' contour_plot contract contract_edge contragrad contrib_ode convert coord' +
          ' copy copy_file copy_graph copylist copymatrix cor cos cosh cot coth cov cov1' +
          ' covdiff covect covers crc24sum create_graph create_list csc csch csetup cspline' +
          ' ctaylor ct_coordsys ctransform ctranspose cube_graph cuboctahedron_graph' +
          ' cunlisp cv cycle_digraph cycle_graph cylindrical days360 dblint deactivate' +
          ' declare declare_constvalue declare_dimensions declare_fundamental_dimensions' +
          ' declare_fundamental_units declare_qty declare_translated declare_unit_conversion' +
          ' declare_units declare_weights decsym defcon define define_alt_display define_variable' +
          ' defint defmatch defrule defstruct deftaylor degree_sequence del delete deleten' +
          ' delta demo demoivre denom depends derivdegree derivlist describe desolve' +
          ' determinant dfloat dgauss_a dgauss_b dgeev dgemm dgeqrf dgesv dgesvd diag' +
          ' diagmatrix diag_matrix diagmatrixp diameter diff digitcharp dimacs_export' +
          ' dimacs_import dimension dimensionless dimensions dimensions_as_list direct' +
          ' directory discrete_freq disjoin disjointp disolate disp dispcon dispform' +
          ' dispfun dispJordan display disprule dispterms distrib divide divisors divsum' +
          ' dkummer_m dkummer_u dlange dodecahedron_graph dotproduct dotsimp dpart' +
          ' draw draw2d draw3d drawdf draw_file draw_graph dscalar echelon edge_coloring' +
          ' edge_connectivity edges eigens_by_jacobi eigenvalues eigenvectors eighth' +
          ' einstein eivals eivects elapsed_real_time elapsed_run_time ele2comp ele2polynome' +
          ' ele2pui elem elementp elevation_grid elim elim_allbut eliminate eliminate_using' +
          ' ellipse elliptic_e elliptic_ec elliptic_eu elliptic_f elliptic_kc elliptic_pi' +
          ' ematrix empty_graph emptyp endcons entermatrix entertensor entier equal equalp' +
          ' equiv_classes erf erfc erf_generalized erfi errcatch error errormsg errors' +
          ' euler ev eval_string evenp every evolution evolution2d evundiff example exp' +
          ' expand expandwrt expandwrt_factored expint expintegral_chi expintegral_ci' +
          ' expintegral_e expintegral_e1 expintegral_ei expintegral_e_simplify expintegral_li' +
          ' expintegral_shi expintegral_si explicit explose exponentialize express expt' +
          ' exsec extdiff extract_linear_equations extremal_subset ezgcd %f f90 facsum' +
          ' factcomb factor factorfacsum factorial factorout factorsum facts fast_central_elements' +
          ' fast_linsolve fasttimes featurep fernfale fft fib fibtophi fifth filename_merge' +
          ' file_search file_type fillarray findde find_root find_root_abs find_root_error' +
          ' find_root_rel first fix flatten flength float floatnump floor flower_snark' +
          ' flush flush1deriv flushd flushnd flush_output fmin_cobyla forget fortran' +
          ' fourcos fourexpand fourier fourier_elim fourint fourintcos fourintsin foursimp' +
          ' foursin fourth fposition frame_bracket freeof freshline fresnel_c fresnel_s' +
          ' from_adjacency_matrix frucht_graph full_listify fullmap fullmapl fullratsimp' +
          ' fullratsubst fullsetify funcsolve fundamental_dimensions fundamental_units' +
          ' fundef funmake funp fv g0 g1 gamma gamma_greek gamma_incomplete gamma_incomplete_generalized' +
          ' gamma_incomplete_regularized gauss gauss_a gauss_b gaussprob gcd gcdex gcdivide' +
          ' gcfac gcfactor gd generalized_lambert_w genfact gen_laguerre genmatrix gensym' +
          ' geo_amortization geo_annuity_fv geo_annuity_pv geomap geometric geometric_mean' +
          ' geosum get getcurrentdirectory get_edge_weight getenv get_lu_factors get_output_stream_string' +
          ' get_pixel get_plot_option get_tex_environment get_tex_environment_default' +
          ' get_vertex_label gfactor gfactorsum ggf girth global_variances gn gnuplot_close' +
          ' gnuplot_replot gnuplot_reset gnuplot_restart gnuplot_start go Gosper GosperSum' +
          ' gr2d gr3d gradef gramschmidt graph6_decode graph6_encode graph6_export graph6_import' +
          ' graph_center graph_charpoly graph_eigenvalues graph_flow graph_order graph_periphery' +
          ' graph_product graph_size graph_union great_rhombicosidodecahedron_graph great_rhombicuboctahedron_graph' +
          ' grid_graph grind grobner_basis grotzch_graph hamilton_cycle hamilton_path' +
          ' hankel hankel_1 hankel_2 harmonic harmonic_mean hav heawood_graph hermite' +
          ' hessian hgfred hilbertmap hilbert_matrix hipow histogram histogram_description' +
          ' hodge horner hypergeometric i0 i1 %ibes ic1 ic2 ic_convert ichr1 ichr2 icosahedron_graph' +
          ' icosidodecahedron_graph icurvature ident identfor identity idiff idim idummy' +
          ' ieqn %if ifactors iframes ifs igcdex igeodesic_coords ilt image imagpart' +
          ' imetric implicit implicit_derivative implicit_plot indexed_tensor indices' +
          ' induced_subgraph inferencep inference_result infix info_display init_atensor' +
          ' init_ctensor in_neighbors innerproduct inpart inprod inrt integerp integer_partitions' +
          ' integrate intersect intersection intervalp intopois intosum invariant1 invariant2' +
          ' inverse_fft inverse_jacobi_cd inverse_jacobi_cn inverse_jacobi_cs inverse_jacobi_dc' +
          ' inverse_jacobi_dn inverse_jacobi_ds inverse_jacobi_nc inverse_jacobi_nd inverse_jacobi_ns' +
          ' inverse_jacobi_sc inverse_jacobi_sd inverse_jacobi_sn invert invert_by_adjoint' +
          ' invert_by_lu inv_mod irr is is_biconnected is_bipartite is_connected is_digraph' +
          ' is_edge_in_graph is_graph is_graph_or_digraph ishow is_isomorphic isolate' +
          ' isomorphism is_planar isqrt isreal_p is_sconnected is_tree is_vertex_in_graph' +
          ' items_inference %j j0 j1 jacobi jacobian jacobi_cd jacobi_cn jacobi_cs jacobi_dc' +
          ' jacobi_dn jacobi_ds jacobi_nc jacobi_nd jacobi_ns jacobi_p jacobi_sc jacobi_sd' +
          ' jacobi_sn JF jn join jordan julia julia_set julia_sin %k kdels kdelta kill' +
          ' killcontext kostka kron_delta kronecker_product kummer_m kummer_u kurtosis' +
          ' kurtosis_bernoulli kurtosis_beta kurtosis_binomial kurtosis_chi2 kurtosis_continuous_uniform' +
          ' kurtosis_discrete_uniform kurtosis_exp kurtosis_f kurtosis_gamma kurtosis_general_finite_discrete' +
          ' kurtosis_geometric kurtosis_gumbel kurtosis_hypergeometric kurtosis_laplace' +
          ' kurtosis_logistic kurtosis_lognormal kurtosis_negative_binomial kurtosis_noncentral_chi2' +
          ' kurtosis_noncentral_student_t kurtosis_normal kurtosis_pareto kurtosis_poisson' +
          ' kurtosis_rayleigh kurtosis_student_t kurtosis_weibull label labels lagrange' +
          ' laguerre lambda lambert_w laplace laplacian_matrix last lbfgs lc2kdt lcharp' +
          ' lc_l lcm lc_u ldefint ldisp ldisplay legendre_p legendre_q leinstein length' +
          ' let letrules letsimp levi_civita lfreeof lgtreillis lhs li liediff limit' +
          ' Lindstedt linear linearinterpol linear_program linear_regression line_graph' +
          ' linsolve listarray list_correlations listify list_matrix_entries list_nc_monomials' +
          ' listoftens listofvars listp lmax lmin load loadfile local locate_matrix_entry' +
          ' log logcontract log_gamma lopow lorentz_gauge lowercasep lpart lratsubst' +
          ' lreduce lriemann lsquares_estimates lsquares_estimates_approximate lsquares_estimates_exact' +
          ' lsquares_mse lsquares_residual_mse lsquares_residuals lsum ltreillis lu_backsub' +
          ' lucas lu_factor %m macroexpand macroexpand1 make_array makebox makefact makegamma' +
          ' make_graph make_level_picture makelist makeOrders make_poly_continent make_poly_country' +
          ' make_polygon make_random_state make_rgb_picture makeset make_string_input_stream' +
          ' make_string_output_stream make_transform mandelbrot mandelbrot_set map mapatom' +
          ' maplist matchdeclare matchfix mat_cond mat_fullunblocker mat_function mathml_display' +
          ' mat_norm matrix matrixmap matrixp matrix_size mattrace mat_trace mat_unblocker' +
          ' max max_clique max_degree max_flow maximize_lp max_independent_set max_matching' +
          ' maybe md5sum mean mean_bernoulli mean_beta mean_binomial mean_chi2 mean_continuous_uniform' +
          ' mean_deviation mean_discrete_uniform mean_exp mean_f mean_gamma mean_general_finite_discrete' +
          ' mean_geometric mean_gumbel mean_hypergeometric mean_laplace mean_logistic' +
          ' mean_lognormal mean_negative_binomial mean_noncentral_chi2 mean_noncentral_student_t' +
          ' mean_normal mean_pareto mean_poisson mean_rayleigh mean_student_t mean_weibull' +
          ' median median_deviation member mesh metricexpandall mgf1_sha1 min min_degree' +
          ' min_edge_cut minfactorial minimalPoly minimize_lp minimum_spanning_tree minor' +
          ' minpack_lsquares minpack_solve min_vertex_cover min_vertex_cut mkdir mnewton' +
          ' mod mode_declare mode_identity ModeMatrix moebius mon2schur mono monomial_dimensions' +
          ' multibernstein_poly multi_display_for_texinfo multi_elem multinomial multinomial_coeff' +
          ' multi_orbit multiplot_mode multi_pui multsym multthru mycielski_graph nary' +
          ' natural_unit nc_degree ncexpt ncharpoly negative_picture neighbors new newcontext' +
          ' newdet new_graph newline newton new_variable next_prime nicedummies niceindices' +
          ' ninth nofix nonarray noncentral_moment nonmetricity nonnegintegerp nonscalarp' +
          ' nonzeroandfreeof notequal nounify nptetrad npv nroots nterms ntermst' +
          ' nthroot nullity nullspace num numbered_boundaries numberp number_to_octets' +
          ' num_distinct_partitions numerval numfactor num_partitions nusum nzeta nzetai' +
          ' nzetar octets_to_number octets_to_oid odd_girth oddp ode2 ode_check odelin' +
          ' oid_to_octets op opena opena_binary openr openr_binary openw openw_binary' +
          ' operatorp opsubst optimize %or orbit orbits ordergreat ordergreatp orderless' +
          ' orderlessp orthogonal_complement orthopoly_recur orthopoly_weight outermap' +
          ' out_neighbors outofpois pade parabolic_cylinder_d parametric parametric_surface' +
          ' parg parGosper parse_string parse_timedate part part2cont partfrac partition' +
          ' partition_set partpol path_digraph path_graph pathname_directory pathname_name' +
          ' pathname_type pdf_bernoulli pdf_beta pdf_binomial pdf_cauchy pdf_chi2 pdf_continuous_uniform' +
          ' pdf_discrete_uniform pdf_exp pdf_f pdf_gamma pdf_general_finite_discrete' +
          ' pdf_geometric pdf_gumbel pdf_hypergeometric pdf_laplace pdf_logistic pdf_lognormal' +
          ' pdf_negative_binomial pdf_noncentral_chi2 pdf_noncentral_student_t pdf_normal' +
          ' pdf_pareto pdf_poisson pdf_rank_sum pdf_rayleigh pdf_signed_rank pdf_student_t' +
          ' pdf_weibull pearson_skewness permanent permut permutation permutations petersen_graph' +
          ' petrov pickapart picture_equalp picturep piechart piechart_description planar_embedding' +
          ' playback plog plot2d plot3d plotdf ploteq plsquares pochhammer points poisdiff' +
          ' poisexpt poisint poismap poisplus poissimp poissubst poistimes poistrim polar' +
          ' polarform polartorect polar_to_xy poly_add poly_buchberger poly_buchberger_criterion' +
          ' poly_colon_ideal poly_content polydecomp poly_depends_p poly_elimination_ideal' +
          ' poly_exact_divide poly_expand poly_expt poly_gcd polygon poly_grobner poly_grobner_equal' +
          ' poly_grobner_member poly_grobner_subsetp poly_ideal_intersection poly_ideal_polysaturation' +
          ' poly_ideal_polysaturation1 poly_ideal_saturation poly_ideal_saturation1 poly_lcm' +
          ' poly_minimization polymod poly_multiply polynome2ele polynomialp poly_normal_form' +
          ' poly_normalize poly_normalize_list poly_polysaturation_extension poly_primitive_part' +
          ' poly_pseudo_divide poly_reduced_grobner poly_reduction poly_saturation_extension' +
          ' poly_s_polynomial poly_subtract polytocompanion pop postfix potential power_mod' +
          ' powerseries powerset prefix prev_prime primep primes principal_components' +
          ' print printf printfile print_graph printpois printprops prodrac product properties' +
          ' propvars psi psubst ptriangularize pui pui2comp pui2ele pui2polynome pui_direct' +
          ' puireduc push put pv qput qrange qty quad_control quad_qag quad_qagi quad_qagp' +
          ' quad_qags quad_qawc quad_qawf quad_qawo quad_qaws quadrilateral quantile' +
          ' quantile_bernoulli quantile_beta quantile_binomial quantile_cauchy quantile_chi2' +
          ' quantile_continuous_uniform quantile_discrete_uniform quantile_exp quantile_f' +
          ' quantile_gamma quantile_general_finite_discrete quantile_geometric quantile_gumbel' +
          ' quantile_hypergeometric quantile_laplace quantile_logistic quantile_lognormal' +
          ' quantile_negative_binomial quantile_noncentral_chi2 quantile_noncentral_student_t' +
          ' quantile_normal quantile_pareto quantile_poisson quantile_rayleigh quantile_student_t' +
          ' quantile_weibull quartile_skewness quit qunit quotient racah_v racah_w radcan' +
          ' radius random random_bernoulli random_beta random_binomial random_bipartite_graph' +
          ' random_cauchy random_chi2 random_continuous_uniform random_digraph random_discrete_uniform' +
          ' random_exp random_f random_gamma random_general_finite_discrete random_geometric' +
          ' random_graph random_graph1 random_gumbel random_hypergeometric random_laplace' +
          ' random_logistic random_lognormal random_negative_binomial random_network' +
          ' random_noncentral_chi2 random_noncentral_student_t random_normal random_pareto' +
          ' random_permutation random_poisson random_rayleigh random_regular_graph random_student_t' +
          ' random_tournament random_tree random_weibull range rank rat ratcoef ratdenom' +
          ' ratdiff ratdisrep ratexpand ratinterpol rational rationalize ratnumer ratnump' +
          ' ratp ratsimp ratsubst ratvars ratweight read read_array read_binary_array' +
          ' read_binary_list read_binary_matrix readbyte readchar read_hashed_array readline' +
          ' read_list read_matrix read_nested_list readonly read_xpm real_imagpart_to_conjugate' +
          ' realpart realroots rearray rectangle rectform rectform_log_if_constant recttopolar' +
          ' rediff reduce_consts reduce_order region region_boundaries region_boundaries_plus' +
          ' rem remainder remarray rembox remcomps remcon remcoord remfun remfunction' +
          ' remlet remove remove_constvalue remove_dimensions remove_edge remove_fundamental_dimensions' +
          ' remove_fundamental_units remove_plot_option remove_vertex rempart remrule' +
          ' remsym remvalue rename rename_file reset reset_displays residue resolvante' +
          ' resolvante_alternee1 resolvante_bipartite resolvante_diedrale resolvante_klein' +
          ' resolvante_klein3 resolvante_produit_sym resolvante_unitaire resolvante_vierer' +
          ' rest resultant return reveal reverse revert revert2 rgb2level rhs ricci riemann' +
          ' rinvariant risch rk rmdir rncombine romberg room rootscontract round row' +
          ' rowop rowswap rreduce run_testsuite %s save saving scalarp scaled_bessel_i' +
          ' scaled_bessel_i0 scaled_bessel_i1 scalefactors scanmap scatterplot scatterplot_description' +
          ' scene schur2comp sconcat scopy scsimp scurvature sdowncase sec sech second' +
          ' sequal sequalignore set_alt_display setdifference set_draw_defaults set_edge_weight' +
          ' setelmx setequalp setify setp set_partitions set_plot_option set_prompt set_random_state' +
          ' set_tex_environment set_tex_environment_default setunits setup_autoload set_up_dot_simplifications' +
          ' set_vertex_label seventh sexplode sf sha1sum sha256sum shortest_path shortest_weighted_path' +
          ' show showcomps showratvars sierpinskiale sierpinskimap sign signum similaritytransform' +
          ' simp_inequality simplify_sum simplode simpmetderiv simtran sin sinh sinsert' +
          ' sinvertcase sixth skewness skewness_bernoulli skewness_beta skewness_binomial' +
          ' skewness_chi2 skewness_continuous_uniform skewness_discrete_uniform skewness_exp' +
          ' skewness_f skewness_gamma skewness_general_finite_discrete skewness_geometric' +
          ' skewness_gumbel skewness_hypergeometric skewness_laplace skewness_logistic' +
          ' skewness_lognormal skewness_negative_binomial skewness_noncentral_chi2 skewness_noncentral_student_t' +
          ' skewness_normal skewness_pareto skewness_poisson skewness_rayleigh skewness_student_t' +
          ' skewness_weibull slength smake small_rhombicosidodecahedron_graph small_rhombicuboctahedron_graph' +
          ' smax smin smismatch snowmap snub_cube_graph snub_dodecahedron_graph solve' +
          ' solve_rec solve_rec_rat some somrac sort sparse6_decode sparse6_encode sparse6_export' +
          ' sparse6_import specint spherical spherical_bessel_j spherical_bessel_y spherical_hankel1' +
          ' spherical_hankel2 spherical_harmonic spherical_to_xyz splice split sposition' +
          ' sprint sqfr sqrt sqrtdenest sremove sremovefirst sreverse ssearch ssort sstatus' +
          ' ssubst ssubstfirst staircase standardize standardize_inverse_trig starplot' +
          ' starplot_description status std std1 std_bernoulli std_beta std_binomial' +
          ' std_chi2 std_continuous_uniform std_discrete_uniform std_exp std_f std_gamma' +
          ' std_general_finite_discrete std_geometric std_gumbel std_hypergeometric std_laplace' +
          ' std_logistic std_lognormal std_negative_binomial std_noncentral_chi2 std_noncentral_student_t' +
          ' std_normal std_pareto std_poisson std_rayleigh std_student_t std_weibull' +
          ' stemplot stirling stirling1 stirling2 strim striml strimr string stringout' +
          ' stringp strong_components struve_h struve_l sublis sublist sublist_indices' +
          ' submatrix subsample subset subsetp subst substinpart subst_parallel substpart' +
          ' substring subvar subvarp sum sumcontract summand_to_rec supcase supcontext' +
          ' symbolp symmdifference symmetricp system take_channel take_inference tan' +
          ' tanh taylor taylorinfo taylorp taylor_simplifier taytorat tcl_output tcontract' +
          ' tellrat tellsimp tellsimpafter tentex tenth test_mean test_means_difference' +
          ' test_normality test_proportion test_proportions_difference test_rank_sum' +
          ' test_sign test_signed_rank test_variance test_variance_ratio tex tex1 tex_display' +
          ' texput %th third throw time timedate timer timer_info tldefint tlimit todd_coxeter' +
          ' toeplitz tokens to_lisp topological_sort to_poly to_poly_solve totaldisrep' +
          ' totalfourier totient tpartpol trace tracematrix trace_options transform_sample' +
          ' translate translate_file transpose treefale tree_reduce treillis treinat' +
          ' triangle triangularize trigexpand trigrat trigreduce trigsimp trunc truncate' +
          ' truncated_cube_graph truncated_dodecahedron_graph truncated_icosahedron_graph' +
          ' truncated_tetrahedron_graph tr_warnings_get tube tutte_graph ueivects uforget' +
          ' ultraspherical underlying_graph undiff union unique uniteigenvectors unitp' +
          ' units unit_step unitvector unorder unsum untellrat untimer' +
          ' untrace uppercasep uricci uriemann uvect vandermonde_matrix var var1 var_bernoulli' +
          ' var_beta var_binomial var_chi2 var_continuous_uniform var_discrete_uniform' +
          ' var_exp var_f var_gamma var_general_finite_discrete var_geometric var_gumbel' +
          ' var_hypergeometric var_laplace var_logistic var_lognormal var_negative_binomial' +
          ' var_noncentral_chi2 var_noncentral_student_t var_normal var_pareto var_poisson' +
          ' var_rayleigh var_student_t var_weibull vector vectorpotential vectorsimp' +
          ' verbify vers vertex_coloring vertex_connectivity vertex_degree vertex_distance' +
          ' vertex_eccentricity vertex_in_degree vertex_out_degree vertices vertices_to_cycle' +
          ' vertices_to_path %w weyl wheel_graph wiener_index wigner_3j wigner_6j' +
          ' wigner_9j with_stdout write_binary_data writebyte write_data writefile wronskian' +
          ' xreduce xthru %y Zeilberger zeroequiv zerofor zeromatrix zeromatrixp zeta' +
          ' zgeev zheev zlange zn_add_table zn_carmichael_lambda zn_characteristic_factors' +
          ' zn_determinant zn_factor_generators zn_invert_by_lu zn_log zn_mult_table' +
          ' absboxchar activecontexts adapt_depth additive adim aform algebraic' +
          ' algepsilon algexact aliases allbut all_dotsimp_denoms allocation allsym alphabetic' +
          ' animation antisymmetric arrays askexp assume_pos assume_pos_pred assumescalar' +
          ' asymbol atomgrad atrig1 axes axis_3d axis_bottom axis_left axis_right axis_top' +
          ' azimuth background background_color backsubst berlefact bernstein_explicit' +
          ' besselexpand beta_args_sum_to_integer beta_expand bftorat bftrunc bindtest' +
          ' border boundaries_array box boxchar breakup %c capping cauchysum cbrange' +
          ' cbtics center cflength cframe_flag cnonmet_flag color color_bar color_bar_tics' +
          ' colorbox columns commutative complex cone context contexts contour contour_levels' +
          ' cosnpiflag ctaypov ctaypt ctayswitch ctayvar ct_coords ctorsion_flag ctrgsimp' +
          ' cube current_let_rule_package cylinder data_file_name debugmode decreasing' +
          ' default_let_rule_package delay dependencies derivabbrev derivsubst detout' +
          ' diagmetric diff dim dimensions dispflag display2d|10 display_format_internal' +
          ' distribute_over doallmxops domain domxexpt domxmxops domxnctimes dontfactor' +
          ' doscmxops doscmxplus dot0nscsimp dot0simp dot1simp dotassoc dotconstrules' +
          ' dotdistrib dotexptsimp dotident dotscrules draw_graph_program draw_realpart' +
          ' edge_color edge_coloring edge_partition edge_type edge_width %edispflag' +
          ' elevation %emode endphi endtheta engineering_format_floats enhanced3d %enumer' +
          ' epsilon_lp erfflag erf_representation errormsg error_size error_syms error_type' +
          ' %e_to_numlog eval even evenfun evflag evfun ev_point expandwrt_denom expintexpand' +
          ' expintrep expon expop exptdispflag exptisolate exptsubst facexpand facsum_combine' +
          ' factlim factorflag factorial_expand factors_only fb feature features' +
          ' file_name file_output_append file_search_demo file_search_lisp file_search_maxima|10' +
          ' file_search_tests file_search_usage file_type_lisp file_type_maxima|10 fill_color' +
          ' fill_density filled_func fixed_vertices flipflag float2bf font font_size' +
          ' fortindent fortspaces fpprec fpprintprec functions gamma_expand gammalim' +
          ' gdet genindex gensumnum GGFCFMAX GGFINFINITY globalsolve gnuplot_command' +
          ' gnuplot_curve_styles gnuplot_curve_titles gnuplot_default_term_command gnuplot_dumb_term_command' +
          ' gnuplot_file_args gnuplot_file_name gnuplot_out_file gnuplot_pdf_term_command' +
          ' gnuplot_pm3d gnuplot_png_term_command gnuplot_postamble gnuplot_preamble' +
          ' gnuplot_ps_term_command gnuplot_svg_term_command gnuplot_term gnuplot_view_args' +
          ' Gosper_in_Zeilberger gradefs grid grid2d grind halfangles head_angle head_both' +
          ' head_length head_type height hypergeometric_representation %iargs ibase' +
          ' icc1 icc2 icounter idummyx ieqnprint ifb ifc1 ifc2 ifg ifgi ifr iframe_bracket_form' +
          ' ifri igeowedge_flag ikt1 ikt2 imaginary inchar increasing infeval' +
          ' infinity inflag infolists inm inmc1 inmc2 intanalysis integer integervalued' +
          ' integrate_use_rootsof integration_constant integration_constant_counter interpolate_color' +
          ' intfaclim ip_grid ip_grid_in irrational isolate_wrt_times iterations itr' +
          ' julia_parameter %k1 %k2 keepfloat key key_pos kinvariant kt label label_alignment' +
          ' label_orientation labels lassociative lbfgs_ncorrections lbfgs_nfeval_max' +
          ' leftjust legend letrat let_rule_packages lfg lg lhospitallim limsubst linear' +
          ' linear_solver linechar linel|10 linenum line_type linewidth line_width linsolve_params' +
          ' linsolvewarn lispdisp listarith listconstvars listdummyvars lmxchar load_pathname' +
          ' loadprint logabs logarc logcb logconcoeffp logexpand lognegint logsimp logx' +
          ' logx_secondary logy logy_secondary logz lriem m1pbranch macroexpansion macros' +
          ' mainvar manual_demo maperror mapprint matrix_element_add matrix_element_mult' +
          ' matrix_element_transpose maxapplydepth maxapplyheight maxima_tempdir|10 maxima_userdir|10' +
          ' maxnegex MAX_ORD maxposex maxpsifracdenom maxpsifracnum maxpsinegint maxpsiposint' +
          ' maxtayorder mesh_lines_color method mod_big_prime mode_check_errorp' +
          ' mode_checkp mode_check_warnp mod_test mod_threshold modular_linear_solver' +
          ' modulus multiplicative multiplicities myoptions nary negdistrib negsumdispflag' +
          ' newline newtonepsilon newtonmaxiter nextlayerfactor niceindicespref nm nmc' +
          ' noeval nolabels nonegative_lp noninteger nonscalar noun noundisp nouns np' +
          ' npi nticks ntrig numer numer_pbranch obase odd oddfun opacity opproperties' +
          ' opsubst optimprefix optionset orientation origin orthopoly_returns_intervals' +
          ' outative outchar packagefile palette partswitch pdf_file pfeformat phiresolution' +
          ' %piargs piece pivot_count_sx pivot_max_sx plot_format plot_options plot_realpart' +
          ' png_file pochhammer_max_index points pointsize point_size points_joined point_type' +
          ' poislim poisson poly_coefficient_ring poly_elimination_order polyfactor poly_grobner_algorithm' +
          ' poly_grobner_debug poly_monomial_order poly_primary_elimination_order poly_return_term_list' +
          ' poly_secondary_elimination_order poly_top_reduction_only posfun position' +
          ' powerdisp pred prederror primep_number_of_tests product_use_gamma program' +
          ' programmode promote_float_to_bigfloat prompt proportional_axes props psexpand' +
          ' ps_file radexpand radius radsubstflag rassociative ratalgdenom ratchristof' +
          ' ratdenomdivide rateinstein ratepsilon ratfac rational ratmx ratprint ratriemann' +
          ' ratsimpexpons ratvarswitch ratweights ratweyl ratwtlvl real realonly redraw' +
          ' refcheck resolution restart resultant ric riem rmxchar %rnum_list rombergabs' +
          ' rombergit rombergmin rombergtol rootsconmode rootsepsilon run_viewer same_xy' +
          ' same_xyz savedef savefactors scalar scalarmatrixp scale scale_lp setcheck' +
          ' setcheckbreak setval show_edge_color show_edges show_edge_type show_edge_width' +
          ' show_id show_label showtime show_vertex_color show_vertex_size show_vertex_type' +
          ' show_vertices show_weight simp simplified_output simplify_products simpproduct' +
          ' simpsum sinnpiflag solvedecomposes solveexplicit solvefactors solvenullwarn' +
          ' solveradcan solvetrigwarn space sparse sphere spring_embedding_depth sqrtdispflag' +
          ' stardisp startphi starttheta stats_numer stringdisp structures style sublis_apply_lambda' +
          ' subnumsimp sumexpand sumsplitfact surface surface_hide svg_file symmetric' +
          ' tab taylordepth taylor_logexpand taylor_order_coefficients taylor_truncate_polynomials' +
          ' tensorkill terminal testsuite_files thetaresolution timer_devalue title tlimswitch' +
          ' tr track transcompile transform transform_xy translate_fast_arrays transparent' +
          ' transrun tr_array_as_ref tr_bound_function_applyp tr_file_tty_messagesp tr_float_can_branch_complex' +
          ' tr_function_call_default trigexpandplus trigexpandtimes triginverses trigsign' +
          ' trivial_solutions tr_numer tr_optimize_max_loop tr_semicompile tr_state_vars' +
          ' tr_warn_bad_function_calls tr_warn_fexpr tr_warn_meval tr_warn_mode' +
          ' tr_warn_undeclared tr_warn_undefined_variable tstep ttyoff tube_extremes' +
          ' ufg ug %unitexpand unit_vectors uric uriem use_fast_arrays user_preamble' +
          ' usersetunits values vect_cross verbose vertex_color vertex_coloring vertex_partition' +
          ' vertex_size vertex_type view warnings weyl width windowname windowtitle wired_surface' +
          ' wireframe xaxis xaxis_color xaxis_secondary xaxis_type xaxis_width xlabel' +
          ' xlabel_secondary xlength xrange xrange_secondary xtics xtics_axis xtics_rotate' +
          ' xtics_rotate_secondary xtics_secondary xtics_secondary_axis xu_grid x_voxel' +
          ' xy_file xyplane xy_scale yaxis yaxis_color yaxis_secondary yaxis_type yaxis_width' +
          ' ylabel ylabel_secondary ylength yrange yrange_secondary ytics ytics_axis' +
          ' ytics_rotate ytics_rotate_secondary ytics_secondary ytics_secondary_axis' +
          ' yv_grid y_voxel yx_ratio zaxis zaxis_color zaxis_type zaxis_width zeroa zerob' +
          ' zerobern zeta%pi zlabel zlabel_rotate zlength zmin zn_primroot_limit zn_primroot_pretest';
        var SYMBOLS = '_ __ %|0 %%|0';

        return {
          lexemes: '[A-Za-z_%][0-9A-Za-z_%]*',
          keywords: {
            keyword: KEYWORDS,
            literal: LITERALS,
            built_in: BUILTIN_FUNCTIONS,
            symbol: SYMBOLS
          },
          contains: [
            {
              className: 'comment',
              begin: '/\\*',
              end: '\\*/',
              contains: ['self']
            },
            hljs.QUOTE_STRING_MODE,
            {
              className: 'number',
              relevance: 0,
              variants: [
                {
                  // float number w/ exponent
                  // hmm, I wonder if we ought to include other exponent markers?
                  begin: '\\b(\\d+|\\d+\\.|\\.\\d+|\\d+\\.\\d+)[Ee][-+]?\\d+\\b'
                },
                {
                  // bigfloat number
                  begin:
                    '\\b(\\d+|\\d+\\.|\\.\\d+|\\d+\\.\\d+)[Bb][-+]?\\d+\\b',
                  relevance: 10
                },
                {
                  // float number w/out exponent
                  // Doesn't seem to recognize floats which start with '.'
                  begin: '\\b(\\.\\d+|\\d+\\.\\d+)\\b'
                },
                {
                  // integer in base up to 36
                  // Doesn't seem to recognize integers which end with '.'
                  begin: '\\b(\\d+|0[0-9A-Za-z]+)\\.?\\b'
                }
              ]
            }
          ],
          illegal: /@/
        };
      };

      /***/
    },
    /* 453 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords:
            'int float string vector matrix if else switch case default while do for in break ' +
            'continue global proc return about abs addAttr addAttributeEditorNodeHelp addDynamic ' +
            'addNewShelfTab addPP addPanelCategory addPrefixToName advanceToNextDrivenKey ' +
            'affectedNet affects aimConstraint air alias aliasAttr align alignCtx alignCurve ' +
            'alignSurface allViewFit ambientLight angle angleBetween animCone animCurveEditor ' +
            'animDisplay animView annotate appendStringArray applicationName applyAttrPreset ' +
            'applyTake arcLenDimContext arcLengthDimension arclen arrayMapper art3dPaintCtx ' +
            'artAttrCtx artAttrPaintVertexCtx artAttrSkinPaintCtx artAttrTool artBuildPaintMenu ' +
            'artFluidAttrCtx artPuttyCtx artSelectCtx artSetPaintCtx artUserPaintCtx assignCommand ' +
            'assignInputDevice assignViewportFactories attachCurve attachDeviceAttr attachSurface ' +
            'attrColorSliderGrp attrCompatibility attrControlGrp attrEnumOptionMenu ' +
            'attrEnumOptionMenuGrp attrFieldGrp attrFieldSliderGrp attrNavigationControlGrp ' +
            'attrPresetEditWin attributeExists attributeInfo attributeMenu attributeQuery ' +
            'autoKeyframe autoPlace bakeClip bakeFluidShading bakePartialHistory bakeResults ' +
            'bakeSimulation basename basenameEx batchRender bessel bevel bevelPlus binMembership ' +
            'bindSkin blend2 blendShape blendShapeEditor blendShapePanel blendTwoAttr blindDataType ' +
            'boneLattice boundary boxDollyCtx boxZoomCtx bufferCurve buildBookmarkMenu ' +
            'buildKeyframeMenu button buttonManip CBG cacheFile cacheFileCombine cacheFileMerge ' +
            'cacheFileTrack camera cameraView canCreateManip canvas capitalizeString catch ' +
            'catchQuiet ceil changeSubdivComponentDisplayLevel changeSubdivRegion channelBox ' +
            'character characterMap characterOutlineEditor characterize chdir checkBox checkBoxGrp ' +
            'checkDefaultRenderGlobals choice circle circularFillet clamp clear clearCache clip ' +
            'clipEditor clipEditorCurrentTimeCtx clipSchedule clipSchedulerOutliner clipTrimBefore ' +
            'closeCurve closeSurface cluster cmdFileOutput cmdScrollFieldExecuter ' +
            'cmdScrollFieldReporter cmdShell coarsenSubdivSelectionList collision color ' +
            'colorAtPoint colorEditor colorIndex colorIndexSliderGrp colorSliderButtonGrp ' +
            'colorSliderGrp columnLayout commandEcho commandLine commandPort compactHairSystem ' +
            'componentEditor compositingInterop computePolysetVolume condition cone confirmDialog ' +
            'connectAttr connectControl connectDynamic connectJoint connectionInfo constrain ' +
            'constrainValue constructionHistory container containsMultibyte contextInfo control ' +
            'convertFromOldLayers convertIffToPsd convertLightmap convertSolidTx convertTessellation ' +
            'convertUnit copyArray copyFlexor copyKey copySkinWeights cos cpButton cpCache ' +
            'cpClothSet cpCollision cpConstraint cpConvClothToMesh cpForces cpGetSolverAttr cpPanel ' +
            'cpProperty cpRigidCollisionFilter cpSeam cpSetEdit cpSetSolverAttr cpSolver ' +
            'cpSolverTypes cpTool cpUpdateClothUVs createDisplayLayer createDrawCtx createEditor ' +
            'createLayeredPsdFile createMotionField createNewShelf createNode createRenderLayer ' +
            'createSubdivRegion cross crossProduct ctxAbort ctxCompletion ctxEditMode ctxTraverse ' +
            'currentCtx currentTime currentTimeCtx currentUnit curve curveAddPtCtx ' +
            'curveCVCtx curveEPCtx curveEditorCtx curveIntersect curveMoveEPCtx curveOnSurface ' +
            'curveSketchCtx cutKey cycleCheck cylinder dagPose date defaultLightListCheckBox ' +
            'defaultNavigation defineDataServer defineVirtualDevice deformer deg_to_rad delete ' +
            'deleteAttr deleteShadingGroupsAndMaterials deleteShelfTab deleteUI deleteUnusedBrushes ' +
            'delrandstr detachCurve detachDeviceAttr detachSurface deviceEditor devicePanel dgInfo ' +
            'dgdirty dgeval dgtimer dimWhen directKeyCtx directionalLight dirmap dirname disable ' +
            'disconnectAttr disconnectJoint diskCache displacementToPoly displayAffected ' +
            'displayColor displayCull displayLevelOfDetail displayPref displayRGBColor ' +
            'displaySmoothness displayStats displayString displaySurface distanceDimContext ' +
            'distanceDimension doBlur dolly dollyCtx dopeSheetEditor dot dotProduct ' +
            'doubleProfileBirailSurface drag dragAttrContext draggerContext dropoffLocator ' +
            'duplicate duplicateCurve duplicateSurface dynCache dynControl dynExport dynExpression ' +
            'dynGlobals dynPaintEditor dynParticleCtx dynPref dynRelEdPanel dynRelEditor ' +
            'dynamicLoad editAttrLimits editDisplayLayerGlobals editDisplayLayerMembers ' +
            'editRenderLayerAdjustment editRenderLayerGlobals editRenderLayerMembers editor ' +
            'editorTemplate effector emit emitter enableDevice encodeString endString endsWith env ' +
            'equivalent equivalentTol erf error eval evalDeferred evalEcho event ' +
            'exactWorldBoundingBox exclusiveLightCheckBox exec executeForEachObject exists exp ' +
            'expression expressionEditorListen extendCurve extendSurface extrude fcheck fclose feof ' +
            'fflush fgetline fgetword file fileBrowserDialog fileDialog fileExtension fileInfo ' +
            'filetest filletCurve filter filterCurve filterExpand filterStudioImport ' +
            'findAllIntersections findAnimCurves findKeyframe findMenuItem findRelatedSkinCluster ' +
            'finder firstParentOf fitBspline flexor floatEq floatField floatFieldGrp floatScrollBar ' +
            'floatSlider floatSlider2 floatSliderButtonGrp floatSliderGrp floor flow fluidCacheInfo ' +
            'fluidEmitter fluidVoxelInfo flushUndo fmod fontDialog fopen formLayout format fprint ' +
            'frameLayout fread freeFormFillet frewind fromNativePath fwrite gamma gauss ' +
            'geometryConstraint getApplicationVersionAsFloat getAttr getClassification ' +
            'getDefaultBrush getFileList getFluidAttr getInputDeviceRange getMayaPanelTypes ' +
            'getModifiers getPanel getParticleAttr getPluginResource getenv getpid glRender ' +
            'glRenderEditor globalStitch gmatch goal gotoBindPose grabColor gradientControl ' +
            'gradientControlNoAttr graphDollyCtx graphSelectContext graphTrackCtx gravity grid ' +
            'gridLayout group groupObjectsByName HfAddAttractorToAS HfAssignAS HfBuildEqualMap ' +
            'HfBuildFurFiles HfBuildFurImages HfCancelAFR HfConnectASToHF HfCreateAttractor ' +
            'HfDeleteAS HfEditAS HfPerformCreateAS HfRemoveAttractorFromAS HfSelectAttached ' +
            'HfSelectAttractors HfUnAssignAS hardenPointCurve hardware hardwareRenderPanel ' +
            'headsUpDisplay headsUpMessage help helpLine hermite hide hilite hitTest hotBox hotkey ' +
            'hotkeyCheck hsv_to_rgb hudButton hudSlider hudSliderButton hwReflectionMap hwRender ' +
            'hwRenderLoad hyperGraph hyperPanel hyperShade hypot iconTextButton iconTextCheckBox ' +
            'iconTextRadioButton iconTextRadioCollection iconTextScrollList iconTextStaticLabel ' +
            'ikHandle ikHandleCtx ikHandleDisplayScale ikSolver ikSplineHandleCtx ikSystem ' +
            'ikSystemInfo ikfkDisplayMethod illustratorCurves image imfPlugins inheritTransform ' +
            'insertJoint insertJointCtx insertKeyCtx insertKnotCurve insertKnotSurface instance ' +
            'instanceable instancer intField intFieldGrp intScrollBar intSlider intSliderGrp ' +
            'interToUI internalVar intersect iprEngine isAnimCurve isConnected isDirty isParentOf ' +
            'isSameObject isTrue isValidObjectName isValidString isValidUiName isolateSelect ' +
            'itemFilter itemFilterAttr itemFilterRender itemFilterType joint jointCluster jointCtx ' +
            'jointDisplayScale jointLattice keyTangent keyframe keyframeOutliner ' +
            'keyframeRegionCurrentTimeCtx keyframeRegionDirectKeyCtx keyframeRegionDollyCtx ' +
            'keyframeRegionInsertKeyCtx keyframeRegionMoveKeyCtx keyframeRegionScaleKeyCtx ' +
            'keyframeRegionSelectKeyCtx keyframeRegionSetKeyCtx keyframeRegionTrackCtx ' +
            'keyframeStats lassoContext lattice latticeDeformKeyCtx launch launchImageEditor ' +
            'layerButton layeredShaderPort layeredTexturePort layout layoutDialog lightList ' +
            'lightListEditor lightListPanel lightlink lineIntersection linearPrecision linstep ' +
            'listAnimatable listAttr listCameras listConnections listDeviceAttachments listHistory ' +
            'listInputDeviceAxes listInputDeviceButtons listInputDevices listMenuAnnotation ' +
            'listNodeTypes listPanelCategories listRelatives listSets listTransforms ' +
            'listUnselected listerEditor loadFluid loadNewShelf loadPlugin ' +
            'loadPluginLanguageResources loadPrefObjects localizedPanelLabel lockNode loft log ' +
            'longNameOf lookThru ls lsThroughFilter lsType lsUI Mayatomr mag makeIdentity makeLive ' +
            'makePaintable makeRoll makeSingleSurface makeTubeOn makebot manipMoveContext ' +
            'manipMoveLimitsCtx manipOptions manipRotateContext manipRotateLimitsCtx ' +
            'manipScaleContext manipScaleLimitsCtx marker match max memory menu menuBarLayout ' +
            'menuEditor menuItem menuItemToShelf menuSet menuSetPref messageLine min minimizeApp ' +
            'mirrorJoint modelCurrentTimeCtx modelEditor modelPanel mouse movIn movOut move ' +
            'moveIKtoFK moveKeyCtx moveVertexAlongDirection multiProfileBirailSurface mute ' +
            'nParticle nameCommand nameField namespace namespaceInfo newPanelItems newton nodeCast ' +
            'nodeIconButton nodeOutliner nodePreset nodeType noise nonLinear normalConstraint ' +
            'normalize nurbsBoolean nurbsCopyUVSet nurbsCube nurbsEditUV nurbsPlane nurbsSelect ' +
            'nurbsSquare nurbsToPoly nurbsToPolygonsPref nurbsToSubdiv nurbsToSubdivPref ' +
            'nurbsUVSet nurbsViewDirectionVector objExists objectCenter objectLayer objectType ' +
            'objectTypeUI obsoleteProc oceanNurbsPreviewPlane offsetCurve offsetCurveOnSurface ' +
            'offsetSurface openGLExtension openMayaPref optionMenu optionMenuGrp optionVar orbit ' +
            'orbitCtx orientConstraint outlinerEditor outlinerPanel overrideModifier ' +
            'paintEffectsDisplay pairBlend palettePort paneLayout panel panelConfiguration ' +
            'panelHistory paramDimContext paramDimension paramLocator parent parentConstraint ' +
            'particle particleExists particleInstancer particleRenderInfo partition pasteKey ' +
            'pathAnimation pause pclose percent performanceOptions pfxstrokes pickWalk picture ' +
            'pixelMove planarSrf plane play playbackOptions playblast plugAttr plugNode pluginInfo ' +
            'pluginResourceUtil pointConstraint pointCurveConstraint pointLight pointMatrixMult ' +
            'pointOnCurve pointOnSurface pointPosition poleVectorConstraint polyAppend ' +
            'polyAppendFacetCtx polyAppendVertex polyAutoProjection polyAverageNormal ' +
            'polyAverageVertex polyBevel polyBlendColor polyBlindData polyBoolOp polyBridgeEdge ' +
            'polyCacheMonitor polyCheck polyChipOff polyClipboard polyCloseBorder polyCollapseEdge ' +
            'polyCollapseFacet polyColorBlindData polyColorDel polyColorPerVertex polyColorSet ' +
            'polyCompare polyCone polyCopyUV polyCrease polyCreaseCtx polyCreateFacet ' +
            'polyCreateFacetCtx polyCube polyCut polyCutCtx polyCylinder polyCylindricalProjection ' +
            'polyDelEdge polyDelFacet polyDelVertex polyDuplicateAndConnect polyDuplicateEdge ' +
            'polyEditUV polyEditUVShell polyEvaluate polyExtrudeEdge polyExtrudeFacet ' +
            'polyExtrudeVertex polyFlipEdge polyFlipUV polyForceUV polyGeoSampler polyHelix ' +
            'polyInfo polyInstallAction polyLayoutUV polyListComponentConversion polyMapCut ' +
            'polyMapDel polyMapSew polyMapSewMove polyMergeEdge polyMergeEdgeCtx polyMergeFacet ' +
            'polyMergeFacetCtx polyMergeUV polyMergeVertex polyMirrorFace polyMoveEdge ' +
            'polyMoveFacet polyMoveFacetUV polyMoveUV polyMoveVertex polyNormal polyNormalPerVertex ' +
            'polyNormalizeUV polyOptUvs polyOptions polyOutput polyPipe polyPlanarProjection ' +
            'polyPlane polyPlatonicSolid polyPoke polyPrimitive polyPrism polyProjection ' +
            'polyPyramid polyQuad polyQueryBlindData polyReduce polySelect polySelectConstraint ' +
            'polySelectConstraintMonitor polySelectCtx polySelectEditCtx polySeparate ' +
            'polySetToFaceNormal polySewEdge polyShortestPathCtx polySmooth polySoftEdge ' +
            'polySphere polySphericalProjection polySplit polySplitCtx polySplitEdge polySplitRing ' +
            'polySplitVertex polyStraightenUVBorder polySubdivideEdge polySubdivideFacet ' +
            'polyToSubdiv polyTorus polyTransfer polyTriangulate polyUVSet polyUnite polyWedgeFace ' +
            'popen popupMenu pose pow preloadRefEd print progressBar progressWindow projFileViewer ' +
            'projectCurve projectTangent projectionContext projectionManip promptDialog propModCtx ' +
            'propMove psdChannelOutliner psdEditTextureFile psdExport psdTextureFile putenv pwd ' +
            'python querySubdiv quit rad_to_deg radial radioButton radioButtonGrp radioCollection ' +
            'radioMenuItemCollection rampColorPort rand randomizeFollicles randstate rangeControl ' +
            'readTake rebuildCurve rebuildSurface recordAttr recordDevice redo reference ' +
            'referenceEdit referenceQuery refineSubdivSelectionList refresh refreshAE ' +
            'registerPluginResource rehash reloadImage removeJoint removeMultiInstance ' +
            'removePanelCategory rename renameAttr renameSelectionList renameUI render ' +
            'renderGlobalsNode renderInfo renderLayerButton renderLayerParent ' +
            'renderLayerPostProcess renderLayerUnparent renderManip renderPartition ' +
            'renderQualityNode renderSettings renderThumbnailUpdate renderWindowEditor ' +
            'renderWindowSelectContext renderer reorder reorderDeformers requires reroot ' +
            'resampleFluid resetAE resetPfxToPolyCamera resetTool resolutionNode retarget ' +
            'reverseCurve reverseSurface revolve rgb_to_hsv rigidBody rigidSolver roll rollCtx ' +
            'rootOf rot rotate rotationInterpolation roundConstantRadius rowColumnLayout rowLayout ' +
            'runTimeCommand runup sampleImage saveAllShelves saveAttrPreset saveFluid saveImage ' +
            'saveInitialState saveMenu savePrefObjects savePrefs saveShelf saveToolSettings scale ' +
            'scaleBrushBrightness scaleComponents scaleConstraint scaleKey scaleKeyCtx sceneEditor ' +
            'sceneUIReplacement scmh scriptCtx scriptEditorInfo scriptJob scriptNode scriptTable ' +
            'scriptToShelf scriptedPanel scriptedPanelType scrollField scrollLayout sculpt ' +
            'searchPathArray seed selLoadSettings select selectContext selectCurveCV selectKey ' +
            'selectKeyCtx selectKeyframeRegionCtx selectMode selectPref selectPriority selectType ' +
            'selectedNodes selectionConnection separator setAttr setAttrEnumResource ' +
            'setAttrMapping setAttrNiceNameResource setConstraintRestPosition ' +
            'setDefaultShadingGroup setDrivenKeyframe setDynamic setEditCtx setEditor setFluidAttr ' +
            'setFocus setInfinity setInputDeviceMapping setKeyCtx setKeyPath setKeyframe ' +
            'setKeyframeBlendshapeTargetWts setMenuMode setNodeNiceNameResource setNodeTypeFlag ' +
            'setParent setParticleAttr setPfxToPolyCamera setPluginResource setProject ' +
            'setStampDensity setStartupMessage setState setToolTo setUITemplate setXformManip sets ' +
            'shadingConnection shadingGeometryRelCtx shadingLightRelCtx shadingNetworkCompare ' +
            'shadingNode shapeCompare shelfButton shelfLayout shelfTabLayout shellField ' +
            'shortNameOf showHelp showHidden showManipCtx showSelectionInTitle ' +
            'showShadingGroupAttrEditor showWindow sign simplify sin singleProfileBirailSurface ' +
            'size sizeBytes skinCluster skinPercent smoothCurve smoothTangentSurface smoothstep ' +
            'snap2to2 snapKey snapMode snapTogetherCtx snapshot soft softMod softModCtx sort sound ' +
            'soundControl source spaceLocator sphere sphrand spotLight spotLightPreviewPort ' +
            'spreadSheetEditor spring sqrt squareSurface srtContext stackTrace startString ' +
            'startsWith stitchAndExplodeShell stitchSurface stitchSurfacePoints strcmp ' +
            'stringArrayCatenate stringArrayContains stringArrayCount stringArrayInsertAtIndex ' +
            'stringArrayIntersector stringArrayRemove stringArrayRemoveAtIndex ' +
            'stringArrayRemoveDuplicates stringArrayRemoveExact stringArrayToString ' +
            'stringToStringArray strip stripPrefixFromName stroke subdAutoProjection ' +
            'subdCleanTopology subdCollapse subdDuplicateAndConnect subdEditUV ' +
            'subdListComponentConversion subdMapCut subdMapSewMove subdMatchTopology subdMirror ' +
            'subdToBlind subdToPoly subdTransferUVsToCache subdiv subdivCrease ' +
            'subdivDisplaySmoothness substitute substituteAllString substituteGeometry substring ' +
            'surface surfaceSampler surfaceShaderList swatchDisplayPort switchTable symbolButton ' +
            'symbolCheckBox sysFile system tabLayout tan tangentConstraint texLatticeDeformContext ' +
            'texManipContext texMoveContext texMoveUVShellContext texRotateContext texScaleContext ' +
            'texSelectContext texSelectShortestPathCtx texSmudgeUVContext texWinToolCtx text ' +
            'textCurves textField textFieldButtonGrp textFieldGrp textManip textScrollList ' +
            'textToShelf textureDisplacePlane textureHairColor texturePlacementContext ' +
            'textureWindow threadCount threePointArcCtx timeControl timePort timerX toNativePath ' +
            'toggle toggleAxis toggleWindowVisibility tokenize tokenizeList tolerance tolower ' +
            'toolButton toolCollection toolDropped toolHasOptions toolPropertyWindow torus toupper ' +
            'trace track trackCtx transferAttributes transformCompare transformLimits translator ' +
            'trim trunc truncateFluidCache truncateHairCache tumble tumbleCtx turbulence ' +
            'twoPointArcCtx uiRes uiTemplate unassignInputDevice undo undoInfo ungroup uniform unit ' +
            'unloadPlugin untangleUV untitledFileName untrim upAxis updateAE userCtx uvLink ' +
            'uvSnapshot validateShelfName vectorize view2dToolCtx viewCamera viewClipPlane ' +
            'viewFit viewHeadOn viewLookAt viewManip viewPlace viewSet visor volumeAxis vortex ' +
            'waitCursor warning webBrowser webBrowserPrefs whatIs window windowPref wire ' +
            'wireContext workspace wrinkle wrinkleContext writeTake xbmLangPathList xform',
          illegal: '</',
          contains: [
            hljs.C_NUMBER_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: 'string',
              begin: '`',
              end: '`',
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              // eats variables
              begin: '[\\$\\%\\@](\\^\\w\\b|#\\w+|[^\\s\\w{]|{\\w+}|\\w+)'
            },
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 454 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            'module use_module import_module include_module end_module initialise ' +
            'mutable initialize finalize finalise interface implementation pred ' +
            'mode func type inst solver any_pred any_func is semidet det nondet ' +
            'multi erroneous failure cc_nondet cc_multi typeclass instance where ' +
            'pragma promise external trace atomic or_else require_complete_switch ' +
            'require_det require_semidet require_multi require_nondet ' +
            'require_cc_multi require_cc_nondet require_erroneous require_failure',
          meta:
            // pragma
            'inline no_inline type_spec source_file fact_table obsolete memo ' +
            'loop_check minimal_model terminates does_not_terminate ' +
            'check_termination promise_equivalent_clauses ' +
            // preprocessor
            'foreign_proc foreign_decl foreign_code foreign_type ' +
            'foreign_import_module foreign_export_enum foreign_export ' +
            'foreign_enum may_call_mercury will_not_call_mercury thread_safe ' +
            'not_thread_safe maybe_thread_safe promise_pure promise_semipure ' +
            'tabled_for_io local untrailed trailed attach_to_io_state ' +
            'can_pass_as_mercury_type stable will_not_throw_exception ' +
            'may_modify_trail will_not_modify_trail may_duplicate ' +
            'may_not_duplicate affects_liveness does_not_affect_liveness ' +
            'doesnt_affect_liveness no_sharing unknown_sharing sharing',
          built_in:
            'some all not if then else true fail false try catch catch_any ' +
            'semidet_true semidet_false semidet_fail impure_true impure semipure'
        };

        var COMMENT = hljs.COMMENT('%', '$');

        var NUMCODE = {
          className: 'number',
          begin: "0'.\\|0[box][0-9a-fA-F]*"
        };

        var ATOM = hljs.inherit(hljs.APOS_STRING_MODE, { relevance: 0 });
        var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { relevance: 0 });
        var STRING_FMT = {
          className: 'subst',
          begin:
            '\\\\[abfnrtv]\\|\\\\x[0-9a-fA-F]*\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]',
          relevance: 0
        };
        STRING.contains.push(STRING_FMT);

        var IMPLICATION = {
          className: 'built_in',
          variants: [
            { begin: '<=>' },
            { begin: '<=', relevance: 0 },
            { begin: '=>', relevance: 0 },
            { begin: '/\\\\' },
            { begin: '\\\\/' }
          ]
        };

        var HEAD_BODY_CONJUNCTION = {
          className: 'built_in',
          variants: [{ begin: ':-\\|-->' }, { begin: '=', relevance: 0 }]
        };

        return {
          aliases: ['m', 'moo'],
          keywords: KEYWORDS,
          contains: [
            IMPLICATION,
            HEAD_BODY_CONJUNCTION,
            COMMENT,
            hljs.C_BLOCK_COMMENT_MODE,
            NUMCODE,
            hljs.NUMBER_MODE,
            ATOM,
            STRING,
            { begin: /:-/ } // relevance booster
          ]
        };
      };

      /***/
    },
    /* 455 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        //local labels: %?[FB]?[AT]?\d{1,2}\w+
        return {
          case_insensitive: true,
          aliases: ['mips'],
          lexemes: '\\.?' + hljs.IDENT_RE,
          keywords: {
            meta:
              //GNU preprocs
              '.2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .ltorg ',
            built_in:
              '$0 $1 $2 $3 $4 $5 $6 $7 $8 $9 $10 $11 $12 $13 $14 $15 ' + // integer registers
              '$16 $17 $18 $19 $20 $21 $22 $23 $24 $25 $26 $27 $28 $29 $30 $31 ' + // integer registers
              'zero at v0 v1 a0 a1 a2 a3 a4 a5 a6 a7 ' + // integer register aliases
              't0 t1 t2 t3 t4 t5 t6 t7 t8 t9 s0 s1 s2 s3 s4 s5 s6 s7 s8 ' + // integer register aliases
              'k0 k1 gp sp fp ra ' + // integer register aliases
              '$f0 $f1 $f2 $f2 $f4 $f5 $f6 $f7 $f8 $f9 $f10 $f11 $f12 $f13 $f14 $f15 ' + // floating-point registers
              '$f16 $f17 $f18 $f19 $f20 $f21 $f22 $f23 $f24 $f25 $f26 $f27 $f28 $f29 $f30 $f31 ' + // floating-point registers
              'Context Random EntryLo0 EntryLo1 Context PageMask Wired EntryHi ' + // Coprocessor 0 registers
              'HWREna BadVAddr Count Compare SR IntCtl SRSCtl SRSMap Cause EPC PRId ' + // Coprocessor 0 registers
              'EBase Config Config1 Config2 Config3 LLAddr Debug DEPC DESAVE CacheErr ' + // Coprocessor 0 registers
              'ECC ErrorEPC TagLo DataLo TagHi DataHi WatchLo WatchHi PerfCtl PerfCnt ' // Coprocessor 0 registers
          },
          contains: [
            {
              className: 'keyword',
              begin:
                '\\b(' + //mnemonics
                // 32-bit integer instructions
                'addi?u?|andi?|b(al)?|beql?|bgez(al)?l?|bgtzl?|blezl?|bltz(al)?l?|' +
                'bnel?|cl[oz]|divu?|ext|ins|j(al)?|jalr(.hb)?|jr(.hb)?|lbu?|lhu?|' +
                'll|lui|lw[lr]?|maddu?|mfhi|mflo|movn|movz|move|msubu?|mthi|mtlo|mul|' +
                'multu?|nop|nor|ori?|rotrv?|sb|sc|se[bh]|sh|sllv?|slti?u?|srav?|' +
                'srlv?|subu?|sw[lr]?|xori?|wsbh|' +
                // floating-point instructions
                'abs.[sd]|add.[sd]|alnv.ps|bc1[ft]l?|' +
                'c.(s?f|un|u?eq|[ou]lt|[ou]le|ngle?|seq|l[et]|ng[et]).[sd]|' +
                '(ceil|floor|round|trunc).[lw].[sd]|cfc1|cvt.d.[lsw]|' +
                'cvt.l.[dsw]|cvt.ps.s|cvt.s.[dlw]|cvt.s.p[lu]|cvt.w.[dls]|' +
                'div.[ds]|ldx?c1|luxc1|lwx?c1|madd.[sd]|mfc1|mov[fntz]?.[ds]|' +
                'msub.[sd]|mth?c1|mul.[ds]|neg.[ds]|nmadd.[ds]|nmsub.[ds]|' +
                'p[lu][lu].ps|recip.fmt|r?sqrt.[ds]|sdx?c1|sub.[ds]|suxc1|' +
                'swx?c1|' +
                // system control instructions
                'break|cache|d?eret|[de]i|ehb|mfc0|mtc0|pause|prefx?|rdhwr|' +
                'rdpgpr|sdbbp|ssnop|synci?|syscall|teqi?|tgei?u?|tlb(p|r|w[ir])|' +
                'tlti?u?|tnei?|wait|wrpgpr' +
                ')',
              end: '\\s'
            },
            hljs.COMMENT('[;#]', '$'),
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: 'string',
              begin: "'",
              end: "[^\\\\]'",
              relevance: 0
            },
            {
              className: 'title',
              begin: '\\|',
              end: '\\|',
              illegal: '\\n',
              relevance: 0
            },
            {
              className: 'number',
              variants: [
                { begin: '0x[0-9a-f]+' }, //hex
                { begin: '\\b-?\\d+' } //bare number
              ],
              relevance: 0
            },
            {
              className: 'symbol',
              variants: [
                { begin: '^\\s*[a-z_\\.\\$][a-z0-9_\\.\\$]+:' }, //GNU MIPS syntax
                { begin: '^\\s*[0-9]+:' }, // numbered local labels
                { begin: '[0-9]+[bf]' } // number local label reference (backwards, forwards)
              ],
              relevance: 0
            }
          ],
          illegal: '/'
        };
      };

      /***/
    },
    /* 456 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords:
            'environ vocabularies notations constructors definitions ' +
            'registrations theorems schemes requirements begin end definition ' +
            'registration cluster existence pred func defpred deffunc theorem ' +
            'proof let take assume then thus hence ex for st holds consider ' +
            'reconsider such that and in provided of as from be being by means ' +
            'equals implies iff redefine define now not or attr is mode ' +
            'suppose per cases set thesis contradiction scheme reserve struct ' +
            'correctness compatibility coherence symmetry assymetry ' +
            'reflexivity irreflexivity connectedness uniqueness commutativity ' +
            'idempotence involutiveness projectivity',
          contains: [hljs.COMMENT('::', '$')]
        };
      };

      /***/
    },
    /* 457 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var PERL_KEYWORDS =
          'getpwent getservent quotemeta msgrcv scalar kill dbmclose undef lc ' +
          'ma syswrite tr send umask sysopen shmwrite vec qx utime local oct semctl localtime ' +
          'readpipe do return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir qq' +
          'fileno qw endprotoent wait sethostent bless s|0 opendir continue each sleep endgrent ' +
          'shutdown dump chomp connect getsockname die socketpair close flock exists index shmget' +
          'sub for endpwent redo lstat msgctl setpgrp abs exit select print ref gethostbyaddr ' +
          'unshift fcntl syscall goto getnetbyaddr join gmtime symlink semget splice x|0 ' +
          'getpeername recv log setsockopt cos last reverse gethostbyname getgrnam study formline ' +
          'endhostent times chop length gethostent getnetent pack getprotoent getservbyname rand ' +
          'mkdir pos chmod y|0 substr endnetent printf next open msgsnd readdir use unlink ' +
          'getsockopt getpriority rindex wantarray hex system getservbyport endservent int chr ' +
          'untie rmdir prototype tell listen fork shmread ucfirst setprotoent else sysseek link ' +
          'getgrgid shmctl waitpid unpack getnetbyname reset chdir grep split require caller ' +
          'lcfirst until warn while values shift telldir getpwuid my getprotobynumber delete and ' +
          'sort uc defined srand accept package seekdir getprotobyname semop our rename seek if q|0 ' +
          'chroot sysread setpwent no crypt getc chown sqrt write setnetent setpriority foreach ' +
          'tie sin msgget map stat getlogin unless elsif truncate exec keys glob tied closedir' +
          'ioctl socket readlink eval xor readline binmode setservent eof ord bind alarm pipe ' +
          'atan2 getgrent exp time push setgrent gt lt or ne m|0 break given say state when';
        var SUBST = {
          className: 'subst',
          begin: '[$@]\\{',
          end: '\\}',
          keywords: PERL_KEYWORDS
        };
        var METHOD = {
          begin: '->{',
          end: '}'
          // contains defined later
        };
        var VAR = {
          variants: [
            { begin: /\$\d/ },
            { begin: /[\$%@](\^\w\b|#\w+(::\w+)*|{\w+}|\w+(::\w*)*)/ },
            { begin: /[\$%@][^\s\w{]/, relevance: 0 }
          ]
        };
        var STRING_CONTAINS = [hljs.BACKSLASH_ESCAPE, SUBST, VAR];
        var PERL_DEFAULT_CONTAINS = [
          VAR,
          hljs.HASH_COMMENT_MODE,
          hljs.COMMENT('^\\=\\w', '\\=cut', {
            endsWithParent: true
          }),
          METHOD,
          {
            className: 'string',
            contains: STRING_CONTAINS,
            variants: [
              {
                begin: 'q[qwxr]?\\s*\\(',
                end: '\\)',
                relevance: 5
              },
              {
                begin: 'q[qwxr]?\\s*\\[',
                end: '\\]',
                relevance: 5
              },
              {
                begin: 'q[qwxr]?\\s*\\{',
                end: '\\}',
                relevance: 5
              },
              {
                begin: 'q[qwxr]?\\s*\\|',
                end: '\\|',
                relevance: 5
              },
              {
                begin: 'q[qwxr]?\\s*\\<',
                end: '\\>',
                relevance: 5
              },
              {
                begin: 'qw\\s+q',
                end: 'q',
                relevance: 5
              },
              {
                begin: "'",
                end: "'",
                contains: [hljs.BACKSLASH_ESCAPE]
              },
              {
                begin: '"',
                end: '"'
              },
              {
                begin: '`',
                end: '`',
                contains: [hljs.BACKSLASH_ESCAPE]
              },
              {
                begin: '{\\w+}',
                contains: [],
                relevance: 0
              },
              {
                begin: '-?\\w+\\s*\\=\\>',
                contains: [],
                relevance: 0
              }
            ]
          },
          {
            className: 'number',
            begin:
              '(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b',
            relevance: 0
          },
          {
            // regexp container
            begin:
              '(\\/\\/|' +
              hljs.RE_STARTERS_RE +
              '|\\b(split|return|print|reverse|grep)\\b)\\s*',
            keywords: 'split return print reverse grep',
            relevance: 0,
            contains: [
              hljs.HASH_COMMENT_MODE,
              {
                className: 'regexp',
                begin: '(s|tr|y)/(\\\\.|[^/])*/(\\\\.|[^/])*/[a-z]*',
                relevance: 10
              },
              {
                className: 'regexp',
                begin: '(m|qr)?/',
                end: '/[a-z]*',
                contains: [hljs.BACKSLASH_ESCAPE],
                relevance: 0 // allows empty "//" which is a common comment delimiter in other languages
              }
            ]
          },
          {
            className: 'function',
            beginKeywords: 'sub',
            end: '(\\s*\\(.*?\\))?[;{]',
            excludeEnd: true,
            relevance: 5,
            contains: [hljs.TITLE_MODE]
          },
          {
            begin: '-\\w\\b',
            relevance: 0
          },
          {
            begin: '^__DATA__$',
            end: '^__END__$',
            subLanguage: 'mojolicious',
            contains: [
              {
                begin: '^@@.*',
                end: '$',
                className: 'comment'
              }
            ]
          }
        ];
        SUBST.contains = PERL_DEFAULT_CONTAINS;
        METHOD.contains = PERL_DEFAULT_CONTAINS;

        return {
          aliases: ['pl', 'pm'],
          lexemes: /[\w\.]+/,
          keywords: PERL_KEYWORDS,
          contains: PERL_DEFAULT_CONTAINS
        };
      };

      /***/
    },
    /* 458 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          subLanguage: 'xml',
          contains: [
            {
              className: 'meta',
              begin: '^__(END|DATA)__$'
            },
            // mojolicious line
            {
              begin: '^\\s*%{1,2}={0,2}',
              end: '$',
              subLanguage: 'perl'
            },
            // mojolicious block
            {
              begin: '<%{1,2}={0,2}',
              end: '={0,1}%>',
              subLanguage: 'perl',
              excludeBegin: true,
              excludeEnd: true
            }
          ]
        };
      };

      /***/
    },
    /* 459 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var NUMBER = {
          className: 'number',
          relevance: 0,
          variants: [
            {
              begin: '[$][a-fA-F0-9]+'
            },
            hljs.NUMBER_MODE
          ]
        };

        return {
          case_insensitive: true,
          keywords: {
            keyword:
              'public private property continue exit extern new try catch ' +
              'eachin not abstract final select case default const local global field ' +
              'end if then else elseif endif while wend repeat until forever for ' +
              'to step next return module inline throw import',

            built_in:
              'DebugLog DebugStop Error Print ACos ACosr ASin ASinr ATan ATan2 ATan2r ATanr Abs Abs Ceil ' +
              'Clamp Clamp Cos Cosr Exp Floor Log Max Max Min Min Pow Sgn Sgn Sin Sinr Sqrt Tan Tanr Seed PI HALFPI TWOPI',

            literal: 'true false null and or shl shr mod'
          },
          illegal: /\/\*/,
          contains: [
            hljs.COMMENT('#rem', '#end'),
            hljs.COMMENT("'", '$', {
              relevance: 0
            }),
            {
              className: 'function',
              beginKeywords: 'function method',
              end: '[(=:]|$',
              illegal: /\n/,
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            {
              className: 'class',
              beginKeywords: 'class interface',
              end: '$',
              contains: [
                {
                  beginKeywords: 'extends implements'
                },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            },
            {
              className: 'built_in',
              begin: '\\b(self|super)\\b'
            },
            {
              className: 'meta',
              begin: '\\s*#',
              end: '$',
              keywords: { 'meta-keyword': 'if else elseif endif end then' }
            },
            {
              className: 'meta',
              begin: '^\\s*strict\\b'
            },
            {
              beginKeywords: 'alias',
              end: '=',
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            hljs.QUOTE_STRING_MODE,
            NUMBER
          ]
        };
      };

      /***/
    },
    /* 460 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            // Moonscript keywords
            'if then not for in while do return else elseif break continue switch and or ' +
            'unless when class extends super local import export from using',
          literal: 'true false nil',
          built_in:
            '_G _VERSION assert collectgarbage dofile error getfenv getmetatable ipairs load ' +
            'loadfile loadstring module next pairs pcall print rawequal rawget rawset require ' +
            'select setfenv setmetatable tonumber tostring type unpack xpcall coroutine debug ' +
            'io math os package string table'
        };
        var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';
        var SUBST = {
          className: 'subst',
          begin: /#\{/,
          end: /}/,
          keywords: KEYWORDS
        };
        var EXPRESSIONS = [
          hljs.inherit(hljs.C_NUMBER_MODE, {
            starts: { end: '(\\s*/)?', relevance: 0 }
          }), // a number tries to eat the following slash to prevent treating it as a regexp
          {
            className: 'string',
            variants: [
              {
                begin: /'/,
                end: /'/,
                contains: [hljs.BACKSLASH_ESCAPE]
              },
              {
                begin: /"/,
                end: /"/,
                contains: [hljs.BACKSLASH_ESCAPE, SUBST]
              }
            ]
          },
          {
            className: 'built_in',
            begin: '@__' + hljs.IDENT_RE
          },
          {
            begin: '@' + hljs.IDENT_RE // relevance booster on par with CoffeeScript
          },
          {
            begin: hljs.IDENT_RE + '\\\\' + hljs.IDENT_RE // inst\method
          }
        ];
        SUBST.contains = EXPRESSIONS;

        var TITLE = hljs.inherit(hljs.TITLE_MODE, { begin: JS_IDENT_RE });
        var PARAMS_RE = '(\\(.*\\))?\\s*\\B[-=]>';
        var PARAMS = {
          className: 'params',
          begin: '\\([^\\(]',
          returnBegin: true,
          /* We need another contained nameless mode to not have every nested
	    pair of parens to be called "params" */
          contains: [
            {
              begin: /\(/,
              end: /\)/,
              keywords: KEYWORDS,
              contains: ['self'].concat(EXPRESSIONS)
            }
          ]
        };

        return {
          aliases: ['moon'],
          keywords: KEYWORDS,
          illegal: /\/\*/,
          contains: EXPRESSIONS.concat([
            hljs.COMMENT('--', '$'),
            {
              className: 'function', // function: -> =>
              begin: '^\\s*' + JS_IDENT_RE + '\\s*=\\s*' + PARAMS_RE,
              end: '[-=]>',
              returnBegin: true,
              contains: [TITLE, PARAMS]
            },
            {
              begin: /[\(,:=]\s*/, // anonymous function start
              relevance: 0,
              contains: [
                {
                  className: 'function',
                  begin: PARAMS_RE,
                  end: '[-=]>',
                  returnBegin: true,
                  contains: [PARAMS]
                }
              ]
            },
            {
              className: 'class',
              beginKeywords: 'class',
              end: '$',
              illegal: /[:="\[\]]/,
              contains: [
                {
                  beginKeywords: 'extends',
                  endsWithParent: true,
                  illegal: /[:="\[\]]/,
                  contains: [TITLE]
                },
                TITLE
              ]
            },
            {
              className: 'name', // table
              begin: JS_IDENT_RE + ':',
              end: ':',
              returnBegin: true,
              returnEnd: true,
              relevance: 0
            }
          ])
        };
      };

      /***/
    },
    /* 461 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          case_insensitive: true,
          contains: [
            {
              beginKeywords:
                'build create index delete drop explain infer|10 insert merge prepare select update upsert|10',
              end: /;/,
              endsWithParent: true,
              keywords: {
                // Taken from http://developer.couchbase.com/documentation/server/current/n1ql/n1ql-language-reference/reservedwords.html
                keyword:
                  'all alter analyze and any array as asc begin between binary boolean break bucket build by call ' +
                  'case cast cluster collate collection commit connect continue correlate cover create database ' +
                  'dataset datastore declare decrement delete derived desc describe distinct do drop each element ' +
                  'else end every except exclude execute exists explain fetch first flatten for force from ' +
                  'function grant group gsi having if ignore ilike in include increment index infer inline inner ' +
                  'insert intersect into is join key keys keyspace known last left let letting like limit lsm map ' +
                  'mapping matched materialized merge minus namespace nest not number object offset on ' +
                  'option or order outer over parse partition password path pool prepare primary private privilege ' +
                  'procedure public raw realm reduce rename return returning revoke right role rollback satisfies ' +
                  'schema select self semi set show some start statistics string system then to transaction trigger ' +
                  'truncate under union unique unknown unnest unset update upsert use user using validate value ' +
                  'valued values via view when where while with within work xor',
                // Taken from http://developer.couchbase.com/documentation/server/4.5/n1ql/n1ql-language-reference/literals.html
                literal: 'true false null missing|5',
                // Taken from http://developer.couchbase.com/documentation/server/4.5/n1ql/n1ql-language-reference/functions.html
                built_in:
                  'array_agg array_append array_concat array_contains array_count array_distinct array_ifnull array_length ' +
                  'array_max array_min array_position array_prepend array_put array_range array_remove array_repeat array_replace ' +
                  'array_reverse array_sort array_sum avg count max min sum greatest least ifmissing ifmissingornull ifnull ' +
                  'missingif nullif ifinf ifnan ifnanorinf naninf neginfif posinfif clock_millis clock_str date_add_millis ' +
                  'date_add_str date_diff_millis date_diff_str date_part_millis date_part_str date_trunc_millis date_trunc_str ' +
                  'duration_to_str millis str_to_millis millis_to_str millis_to_utc millis_to_zone_name now_millis now_str ' +
                  'str_to_duration str_to_utc str_to_zone_name decode_json encode_json encoded_size poly_length base64 base64_encode ' +
                  'base64_decode meta uuid abs acos asin atan atan2 ceil cos degrees e exp ln log floor pi power radians random ' +
                  'round sign sin sqrt tan trunc object_length object_names object_pairs object_inner_pairs object_values ' +
                  'object_inner_values object_add object_put object_remove object_unwrap regexp_contains regexp_like regexp_position ' +
                  'regexp_replace contains initcap length lower ltrim position repeat replace rtrim split substr title trim upper ' +
                  'isarray isatom isboolean isnumber isobject isstring type toarray toatom toboolean tonumber toobject tostring'
              },
              contains: [
                {
                  className: 'string',
                  begin: "'",
                  end: "'",
                  contains: [hljs.BACKSLASH_ESCAPE],
                  relevance: 0
                },
                {
                  className: 'string',
                  begin: '"',
                  end: '"',
                  contains: [hljs.BACKSLASH_ESCAPE],
                  relevance: 0
                },
                {
                  className: 'symbol',
                  begin: '`',
                  end: '`',
                  contains: [hljs.BACKSLASH_ESCAPE],
                  relevance: 2
                },
                hljs.C_NUMBER_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },
            hljs.C_BLOCK_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 462 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var VAR = {
          className: 'variable',
          variants: [
            { begin: /\$\d+/ },
            { begin: /\$\{/, end: /}/ },
            { begin: '[\\$\\@]' + hljs.UNDERSCORE_IDENT_RE }
          ]
        };
        var DEFAULT = {
          endsWithParent: true,
          lexemes: '[a-z/_]+',
          keywords: {
            literal:
              'on off yes no true false none blocked debug info notice warn error crit ' +
              'select break last permanent redirect kqueue rtsig epoll poll /dev/poll'
          },
          relevance: 0,
          illegal: '=>',
          contains: [
            hljs.HASH_COMMENT_MODE,
            {
              className: 'string',
              contains: [hljs.BACKSLASH_ESCAPE, VAR],
              variants: [{ begin: /"/, end: /"/ }, { begin: /'/, end: /'/ }]
            },
            // this swallows entire URLs to avoid detecting numbers within
            {
              begin: '([a-z]+):/',
              end: '\\s',
              endsWithParent: true,
              excludeEnd: true,
              contains: [VAR]
            },
            {
              className: 'regexp',
              contains: [hljs.BACKSLASH_ESCAPE, VAR],
              variants: [
                { begin: '\\s\\^', end: '\\s|{|;', returnEnd: true },
                // regexp locations (~, ~*)
                { begin: '~\\*?\\s+', end: '\\s|{|;', returnEnd: true },
                // *.example.com
                { begin: '\\*(\\.[a-z\\-]+)+' },
                // sub.example.*
                { begin: '([a-z\\-]+\\.)+\\*' }
              ]
            },
            // IP
            {
              className: 'number',
              begin:
                '\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b'
            },
            // units
            {
              className: 'number',
              begin: '\\b\\d+[kKmMgGdshdwy]*\\b',
              relevance: 0
            },
            VAR
          ]
        };

        return {
          aliases: ['nginxconf'],
          contains: [
            hljs.HASH_COMMENT_MODE,
            {
              begin: hljs.UNDERSCORE_IDENT_RE + '\\s+{',
              returnBegin: true,
              end: '{',
              contains: [
                {
                  className: 'section',
                  begin: hljs.UNDERSCORE_IDENT_RE
                }
              ],
              relevance: 0
            },
            {
              begin: hljs.UNDERSCORE_IDENT_RE + '\\s',
              end: ';|{',
              returnBegin: true,
              contains: [
                {
                  className: 'attribute',
                  begin: hljs.UNDERSCORE_IDENT_RE,
                  starts: DEFAULT
                }
              ],
              relevance: 0
            }
          ],
          illegal: '[^\\s\\}]'
        };
      };

      /***/
    },
    /* 463 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['nim'],
          keywords: {
            keyword:
              'addr and as asm bind block break case cast const continue converter ' +
              'discard distinct div do elif else end enum except export finally ' +
              'for from generic if import in include interface is isnot iterator ' +
              'let macro method mixin mod nil not notin object of or out proc ptr ' +
              'raise ref return shl shr static template try tuple type using var ' +
              'when while with without xor yield',
            literal: 'shared guarded stdin stdout stderr result true false',
            built_in:
              'int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 float ' +
              'float32 float64 bool char string cstring pointer expr stmt void ' +
              'auto any range array openarray varargs seq set clong culong cchar ' +
              'cschar cshort cint csize clonglong cfloat cdouble clongdouble ' +
              'cuchar cushort cuint culonglong cstringarray semistatic'
          },
          contains: [
            {
              className: 'meta', // Actually pragma
              begin: /{\./,
              end: /\.}/,
              relevance: 10
            },
            {
              className: 'string',
              begin: /[a-zA-Z]\w*"/,
              end: /"/,
              contains: [{ begin: /""/ }]
            },
            {
              className: 'string',
              begin: /([a-zA-Z]\w*)?"""/,
              end: /"""/
            },
            hljs.QUOTE_STRING_MODE,
            {
              className: 'type',
              begin: /\b[A-Z]\w+\b/,
              relevance: 0
            },
            {
              className: 'number',
              relevance: 0,
              variants: [
                {
                  begin: /\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/
                },
                { begin: /\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/ },
                { begin: /\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/ },
                { begin: /\b(\d[_\d]*)('?[iIuUfF](8|16|32|64))?/ }
              ]
            },
            hljs.HASH_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 464 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var NIX_KEYWORDS = {
          keyword: 'rec with let in inherit assert if else then',
          literal: 'true false or and null',
          built_in:
            'import abort baseNameOf dirOf isNull builtins map removeAttrs throw ' +
            'toString derivation'
        };
        var ANTIQUOTE = {
          className: 'subst',
          begin: /\$\{/,
          end: /}/,
          keywords: NIX_KEYWORDS
        };
        var ATTRS = {
          begin: /[a-zA-Z0-9-_]+(\s*=)/,
          returnBegin: true,
          relevance: 0,
          contains: [
            {
              className: 'attr',
              begin: /\S+/
            }
          ]
        };
        var STRING = {
          className: 'string',
          contains: [ANTIQUOTE],
          variants: [{ begin: "''", end: "''" }, { begin: '"', end: '"' }]
        };
        var EXPRESSIONS = [
          hljs.NUMBER_MODE,
          hljs.HASH_COMMENT_MODE,
          hljs.C_BLOCK_COMMENT_MODE,
          STRING,
          ATTRS
        ];
        ANTIQUOTE.contains = EXPRESSIONS;
        return {
          aliases: ['nixos'],
          keywords: NIX_KEYWORDS,
          contains: EXPRESSIONS
        };
      };

      /***/
    },
    /* 465 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var CONSTANTS = {
          className: 'variable',
          begin: /\$(ADMINTOOLS|APPDATA|CDBURN_AREA|CMDLINE|COMMONFILES32|COMMONFILES64|COMMONFILES|COOKIES|DESKTOP|DOCUMENTS|EXEDIR|EXEFILE|EXEPATH|FAVORITES|FONTS|HISTORY|HWNDPARENT|INSTDIR|INTERNET_CACHE|LANGUAGE|LOCALAPPDATA|MUSIC|NETHOOD|OUTDIR|PICTURES|PLUGINSDIR|PRINTHOOD|PROFILE|PROGRAMFILES32|PROGRAMFILES64|PROGRAMFILES|QUICKLAUNCH|RECENT|RESOURCES_LOCALIZED|RESOURCES|SENDTO|SMPROGRAMS|SMSTARTUP|STARTMENU|SYSDIR|TEMP|TEMPLATES|VIDEOS|WINDIR)/
        };

        var DEFINES = {
          // ${defines}
          className: 'variable',
          begin: /\$+{[\w\.:-]+}/
        };

        var VARIABLES = {
          // $variables
          className: 'variable',
          begin: /\$+\w+/,
          illegal: /\(\){}/
        };

        var LANGUAGES = {
          // $(language_strings)
          className: 'variable',
          begin: /\$+\([\w\^\.:-]+\)/
        };

        var PARAMETERS = {
          // command parameters
          className: 'params',
          begin:
            '(ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HKCR|HKCU|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM|HKPD|HKU|IDABORT|IDCANCEL|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)'
        };

        var COMPILER = {
          // !compiler_flags
          className: 'keyword',
          begin: /\!(addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|searchparse|searchreplace|system|tempfile|undef|verbose|warning)/
        };

        var METACHARS = {
          // $\n, $\r, $\t, $$
          className: 'meta',
          begin: /\$(\\[nrt]|\$)/
        };

        var PLUGINS = {
          // plug::ins
          className: 'class',
          begin: /\w+\:\:\w+/
        };

        var STRING = {
          className: 'string',
          variants: [
            {
              begin: '"',
              end: '"'
            },
            {
              begin: "'",
              end: "'"
            },
            {
              begin: '`',
              end: '`'
            }
          ],
          illegal: /\n/,
          contains: [METACHARS, CONSTANTS, DEFINES, VARIABLES, LANGUAGES]
        };

        return {
          case_insensitive: false,
          keywords: {
            keyword:
              'Abort AddBrandingImage AddSize AllowRootDirInstall AllowSkipFiles AutoCloseWindow BGFont BGGradient BrandingText BringToFront Call CallInstDLL Caption ChangeUI CheckBitmap ClearErrors CompletedText ComponentText CopyFiles CRCCheck CreateDirectory CreateFont CreateShortCut Delete DeleteINISec DeleteINIStr DeleteRegKey DeleteRegValue DetailPrint DetailsButtonText DirText DirVar DirVerify EnableWindow EnumRegKey EnumRegValue Exch Exec ExecShell ExecShellWait ExecWait ExpandEnvStrings File FileBufSize FileClose FileErrorText FileOpen FileRead FileReadByte FileReadUTF16LE FileReadWord FileSeek FileWrite FileWriteByte FileWriteUTF16LE FileWriteWord FindClose FindFirst FindNext FindWindow FlushINI FunctionEnd GetCurInstType GetCurrentAddress GetDlgItem GetDLLVersion GetDLLVersionLocal GetErrorLevel GetFileTime GetFileTimeLocal GetFullPathName GetFunctionAddress GetInstDirError GetLabelAddress GetTempFileName Goto HideWindow Icon IfAbort IfErrors IfFileExists IfRebootFlag IfSilent InitPluginsDir InstallButtonText InstallColors InstallDir InstallDirRegKey InstProgressFlags InstType InstTypeGetText InstTypeSetText Int64Cmp Int64CmpU Int64Fmt IntCmp IntCmpU IntFmt IntOp IntPtrCmp IntPtrCmpU IntPtrOp IsWindow LangString LicenseBkColor LicenseData LicenseForceSelection LicenseLangString LicenseText LoadLanguageFile LockWindow LogSet LogText ManifestDPIAware ManifestSupportedOS MessageBox MiscButtonText Name Nop OutFile Page PageCallbacks PageExEnd Pop Push Quit ReadEnvStr ReadINIStr ReadRegDWORD ReadRegStr Reboot RegDLL Rename RequestExecutionLevel ReserveFile Return RMDir SearchPath SectionEnd SectionGetFlags SectionGetInstTypes SectionGetSize SectionGetText SectionGroupEnd SectionIn SectionSetFlags SectionSetInstTypes SectionSetSize SectionSetText SendMessage SetAutoClose SetBrandingImage SetCompress SetCompressor SetCompressorDictSize SetCtlColors SetCurInstType SetDatablockOptimize SetDateSave SetDetailsPrint SetDetailsView SetErrorLevel SetErrors SetFileAttributes SetFont SetOutPath SetOverwrite SetRebootFlag SetRegView SetShellVarContext SetSilent ShowInstDetails ShowUninstDetails ShowWindow SilentInstall SilentUnInstall Sleep SpaceTexts StrCmp StrCmpS StrCpy StrLen SubCaption Unicode UninstallButtonText UninstallCaption UninstallIcon UninstallSubCaption UninstallText UninstPage UnRegDLL Var VIAddVersionKey VIFileVersion VIProductVersion WindowIcon WriteINIStr WriteRegBin WriteRegDWORD WriteRegExpandStr WriteRegMultiStr WriteRegNone WriteRegStr WriteUninstaller XPStyle',
            literal:
              'admin all auto both bottom bzip2 colored components current custom directory false force hide highest ifdiff ifnewer instfiles lastused leave left license listonly lzma nevershow none normal notset off on open print right show silent silentlog smooth textonly top true try un.components un.custom un.directory un.instfiles un.license uninstConfirm user Win10 Win7 Win8 WinVista zlib'
          },
          contains: [
            hljs.HASH_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.COMMENT(';', '$', {
              relevance: 0
            }),
            {
              className: 'function',
              beginKeywords: 'Function PageEx Section SectionGroup',
              end: '$'
            },
            STRING,
            COMPILER,
            DEFINES,
            VARIABLES,
            LANGUAGES,
            PARAMETERS,
            PLUGINS,
            hljs.NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 466 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var API_CLASS = {
          className: 'built_in',
          begin:
            '\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\w+'
        };
        var OBJC_KEYWORDS = {
          keyword:
            'int float while char export sizeof typedef const struct for union ' +
            'unsigned long volatile static bool mutable if do return goto void ' +
            'enum else break extern asm case short default double register explicit ' +
            'signed typename this switch continue wchar_t inline readonly assign ' +
            'readwrite self @synchronized id typeof ' +
            'nonatomic super unichar IBOutlet IBAction strong weak copy ' +
            'in out inout bycopy byref oneway __strong __weak __block __autoreleasing ' +
            '@private @protected @public @try @property @end @throw @catch @finally ' +
            '@autoreleasepool @synthesize @dynamic @selector @optional @required ' +
            '@encode @package @import @defs @compatibility_alias ' +
            '__bridge __bridge_transfer __bridge_retained __bridge_retain ' +
            '__covariant __contravariant __kindof ' +
            '_Nonnull _Nullable _Null_unspecified ' +
            '__FUNCTION__ __PRETTY_FUNCTION__ __attribute__ ' +
            'getter setter retain unsafe_unretained ' +
            'nonnull nullable null_unspecified null_resettable class instancetype ' +
            'NS_DESIGNATED_INITIALIZER NS_UNAVAILABLE NS_REQUIRES_SUPER ' +
            'NS_RETURNS_INNER_POINTER NS_INLINE NS_AVAILABLE NS_DEPRECATED ' +
            'NS_ENUM NS_OPTIONS NS_SWIFT_UNAVAILABLE ' +
            'NS_ASSUME_NONNULL_BEGIN NS_ASSUME_NONNULL_END ' +
            'NS_REFINED_FOR_SWIFT NS_SWIFT_NAME NS_SWIFT_NOTHROW ' +
            'NS_DURING NS_HANDLER NS_ENDHANDLER NS_VALUERETURN NS_VOIDRETURN',
          literal: 'false true FALSE TRUE nil YES NO NULL',
          built_in:
            'BOOL dispatch_once_t dispatch_queue_t dispatch_sync dispatch_async dispatch_once'
        };
        var LEXEMES = /[a-zA-Z@][a-zA-Z0-9_]*/;
        var CLASS_KEYWORDS = '@interface @class @protocol @implementation';
        return {
          aliases: ['mm', 'objc', 'obj-c'],
          keywords: OBJC_KEYWORDS,
          lexemes: LEXEMES,
          illegal: '</',
          contains: [
            API_CLASS,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.C_NUMBER_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: 'string',
              variants: [
                {
                  begin: '@"',
                  end: '"',
                  illegal: '\\n',
                  contains: [hljs.BACKSLASH_ESCAPE]
                },
                {
                  begin: "'",
                  end: "[^\\\\]'",
                  illegal: "[^\\\\][^']"
                }
              ]
            },
            {
              className: 'meta',
              begin: '#',
              end: '$',
              contains: [
                {
                  className: 'meta-string',
                  variants: [{ begin: '"', end: '"' }, { begin: '<', end: '>' }]
                }
              ]
            },
            {
              className: 'class',
              begin: '(' + CLASS_KEYWORDS.split(' ').join('|') + ')\\b',
              end: '({|$)',
              excludeEnd: true,
              keywords: CLASS_KEYWORDS,
              lexemes: LEXEMES,
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            {
              begin: '\\.' + hljs.UNDERSCORE_IDENT_RE,
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 467 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        /* missing support for heredoc-like string (OCaml 4.0.2+) */
        return {
          aliases: ['ml'],
          keywords: {
            keyword:
              'and as assert asr begin class constraint do done downto else end ' +
              'exception external for fun function functor if in include ' +
              'inherit! inherit initializer land lazy let lor lsl lsr lxor match method!|10 method ' +
              'mod module mutable new object of open! open or private rec sig struct ' +
              'then to try type val! val virtual when while with ' +
              /* camlp4 */
              'parser value',
            built_in:
              /* built-in types */
              'array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 string unit ' +
              /* (some) types in Pervasives */
              'in_channel out_channel ref',
            literal: 'true false'
          },
          illegal: /\/\/|>>/,
          lexemes: '[a-z_]\\w*!?',
          contains: [
            {
              className: 'literal',
              begin: '\\[(\\|\\|)?\\]|\\(\\)',
              relevance: 0
            },
            hljs.COMMENT('\\(\\*', '\\*\\)', {
              contains: ['self']
            }),
            {
              /* type variable */
              className: 'symbol',
              begin: "'[A-Za-z_](?!')[\\w']*"
              /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */
            },
            {
              /* polymorphic variant */
              className: 'type',
              begin: "`[A-Z][\\w']*"
            },
            {
              /* module or constructor */
              className: 'type',
              begin: "\\b[A-Z][\\w']*",
              relevance: 0
            },
            {
              /* don't color identifiers, but safely catch all identifiers with '*/
              begin: "[a-z_]\\w*'[\\w']*",
              relevance: 0
            },
            hljs.inherit(hljs.APOS_STRING_MODE, {
              className: 'string',
              relevance: 0
            }),
            hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),
            {
              className: 'number',
              begin:
                '\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +
                '0[oO][0-7_]+[Lln]?|' +
                '0[bB][01_]+[Lln]?|' +
                '[0-9][0-9_]*([Lln]|(\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',
              relevance: 0
            },
            {
              begin: /[-=]>/ // relevance booster
            }
          ]
        };
      };

      /***/
    },
    /* 468 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var SPECIAL_VARS = {
            className: 'keyword',
            begin: '\\$(f[asn]|t|vp[rtd]|children)'
          },
          LITERALS = {
            className: 'literal',
            begin: 'false|true|PI|undef'
          },
          NUMBERS = {
            className: 'number',
            begin: '\\b\\d+(\\.\\d+)?(e-?\\d+)?', //adds 1e5, 1e-10
            relevance: 0
          },
          STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),
          PREPRO = {
            className: 'meta',
            keywords: { 'meta-keyword': 'include use' },
            begin: 'include|use <',
            end: '>'
          },
          PARAMS = {
            className: 'params',
            begin: '\\(',
            end: '\\)',
            contains: ['self', NUMBERS, STRING, SPECIAL_VARS, LITERALS]
          },
          MODIFIERS = {
            begin: '[*!#%]',
            relevance: 0
          },
          FUNCTIONS = {
            className: 'function',
            beginKeywords: 'module function',
            end: '\\=|\\{',
            contains: [PARAMS, hljs.UNDERSCORE_TITLE_MODE]
          };

        return {
          aliases: ['scad'],
          keywords: {
            keyword:
              'function module include use for intersection_for if else \\%',
            literal: 'false true PI undef',
            built_in:
              'circle square polygon text sphere cube cylinder polyhedron translate rotate scale resize mirror multmatrix color offset hull minkowski union difference intersection abs sign sin cos tan acos asin atan atan2 floor round ceil ln log pow sqrt exp rands min max concat lookup str chr search version version_num norm cross parent_module echo import import_dxf dxf_linear_extrude linear_extrude rotate_extrude surface projection render children dxf_cross dxf_dim let assign'
          },
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            NUMBERS,
            PREPRO,
            STRING,
            SPECIAL_VARS,
            MODIFIERS,
            FUNCTIONS
          ]
        };
      };

      /***/
    },
    /* 469 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var OXYGENE_KEYWORDS =
          'abstract add and array as asc aspect assembly async begin break block by case class concat const copy constructor continue ' +
          'create default delegate desc distinct div do downto dynamic each else empty end ensure enum equals event except exit extension external false ' +
          'final finalize finalizer finally flags for forward from function future global group has if implementation implements implies in index inherited ' +
          'inline interface into invariants is iterator join locked locking loop matching method mod module namespace nested new nil not notify nullable of ' +
          'old on operator or order out override parallel params partial pinned private procedure property protected public queryable raise read readonly ' +
          'record reintroduce remove repeat require result reverse sealed select self sequence set shl shr skip static step soft take then to true try tuple ' +
          'type union unit unsafe until uses using var virtual raises volatile where while with write xor yield await mapped deprecated stdcall cdecl pascal ' +
          'register safecall overload library platform reference packed strict published autoreleasepool selector strong weak unretained';
        var CURLY_COMMENT = hljs.COMMENT('{', '}', {
          relevance: 0
        });
        var PAREN_COMMENT = hljs.COMMENT('\\(\\*', '\\*\\)', {
          relevance: 10
        });
        var STRING = {
          className: 'string',
          begin: "'",
          end: "'",
          contains: [{ begin: "''" }]
        };
        var CHAR_STRING = {
          className: 'string',
          begin: '(#\\d+)+'
        };
        var FUNCTION = {
          className: 'function',
          beginKeywords: 'function constructor destructor procedure method',
          end: '[:;]',
          keywords:
            'function constructor|10 destructor|10 procedure|10 method|10',
          contains: [
            hljs.TITLE_MODE,
            {
              className: 'params',
              begin: '\\(',
              end: '\\)',
              keywords: OXYGENE_KEYWORDS,
              contains: [STRING, CHAR_STRING]
            },
            CURLY_COMMENT,
            PAREN_COMMENT
          ]
        };
        return {
          case_insensitive: true,
          lexemes: /\.?\w+/,
          keywords: OXYGENE_KEYWORDS,
          illegal: '("|\\$[G-Zg-z]|\\/\\*|</|=>|->)',
          contains: [
            CURLY_COMMENT,
            PAREN_COMMENT,
            hljs.C_LINE_COMMENT_MODE,
            STRING,
            CHAR_STRING,
            hljs.NUMBER_MODE,
            FUNCTION,
            {
              className: 'class',
              begin: '=\\bclass\\b',
              end: 'end;',
              keywords: OXYGENE_KEYWORDS,
              contains: [
                STRING,
                CHAR_STRING,
                CURLY_COMMENT,
                PAREN_COMMENT,
                hljs.C_LINE_COMMENT_MODE,
                FUNCTION
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 470 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var CURLY_SUBCOMMENT = hljs.COMMENT('{', '}', {
          contains: ['self']
        });
        return {
          subLanguage: 'xml',
          relevance: 0,
          contains: [
            hljs.COMMENT('^#', '$'),
            hljs.COMMENT('\\^rem{', '}', {
              relevance: 10,
              contains: [CURLY_SUBCOMMENT]
            }),
            {
              className: 'meta',
              begin: '^@(?:BASE|USE|CLASS|OPTIONS)$',
              relevance: 10
            },
            {
              className: 'title',
              begin: '@[\\w\\-]+\\[[\\w^;\\-]*\\](?:\\[[\\w^;\\-]*\\])?(?:.*)$'
            },
            {
              className: 'variable',
              begin: '\\$\\{?[\\w\\-\\.\\:]+\\}?'
            },
            {
              className: 'keyword',
              begin: '\\^[\\w\\-\\.\\:]+'
            },
            {
              className: 'number',
              begin: '\\^#[0-9a-fA-F]+'
            },
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 471 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var MACRO = {
          className: 'variable',
          begin: /\$[\w\d#@][\w\d_]*/
        };
        var TABLE = {
          className: 'variable',
          begin: /<(?!\/)/,
          end: />/
        };
        var QUOTE_STRING = {
          className: 'string',
          begin: /"/,
          end: /"/
        };

        return {
          aliases: ['pf.conf'],
          lexemes: /[a-z0-9_<>-]+/,
          keywords: {
            /* block match pass are "actions" in pf.conf(5), the rest are
	                 * lexically similar top-level commands.
	                 */
            built_in: 'block match pass load anchor|5 antispoof|10 set table',
            keyword:
              'in out log quick on rdomain inet inet6 proto from port os to route' +
              'allow-opts divert-packet divert-reply divert-to flags group icmp-type' +
              'icmp6-type label once probability recieved-on rtable prio queue' +
              'tos tag tagged user keep fragment for os drop' +
              'af-to|10 binat-to|10 nat-to|10 rdr-to|10 bitmask least-stats random round-robin' +
              'source-hash static-port' +
              'dup-to reply-to route-to' +
              'parent bandwidth default min max qlimit' +
              'block-policy debug fingerprints hostid limit loginterface optimization' +
              'reassemble ruleset-optimization basic none profile skip state-defaults' +
              'state-policy timeout' +
              'const counters persist' +
              'no modulate synproxy state|5 floating if-bound no-sync pflow|10 sloppy' +
              'source-track global rule max-src-nodes max-src-states max-src-conn' +
              'max-src-conn-rate overload flush' +
              'scrub|5 max-mss min-ttl no-df|10 random-id',
            literal: 'all any no-route self urpf-failed egress|5 unknown'
          },
          contains: [
            hljs.HASH_COMMENT_MODE,
            hljs.NUMBER_MODE,
            hljs.QUOTE_STRING_MODE,
            MACRO,
            TABLE
          ]
        };
      };

      /***/
    },
    /* 472 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var COMMENT_MODE = hljs.COMMENT('--', '$');
        var UNQUOTED_IDENT = '[a-zA-Z_][a-zA-Z_0-9$]*';
        var DOLLAR_STRING = '\\$([a-zA-Z_]?|[a-zA-Z_][a-zA-Z_0-9]*)\\$';
        var LABEL = '<<\\s*' + UNQUOTED_IDENT + '\\s*>>';

        var SQL_KW =
          // https://www.postgresql.org/docs/11/static/sql-keywords-appendix.html
          // https://www.postgresql.org/docs/11/static/sql-commands.html
          // SQL commands (starting words)
          'ABORT ALTER ANALYZE BEGIN CALL CHECKPOINT|10 CLOSE CLUSTER COMMENT COMMIT COPY CREATE DEALLOCATE DECLARE ' +
          'DELETE DISCARD DO DROP END EXECUTE EXPLAIN FETCH GRANT IMPORT INSERT LISTEN LOAD LOCK MOVE NOTIFY ' +
          'PREPARE REASSIGN|10 REFRESH REINDEX RELEASE RESET REVOKE ROLLBACK SAVEPOINT SECURITY SELECT SET SHOW ' +
          'START TRUNCATE UNLISTEN|10 UPDATE VACUUM|10 VALUES ' +
          // SQL commands (others)
          'AGGREGATE COLLATION CONVERSION|10 DATABASE DEFAULT PRIVILEGES DOMAIN TRIGGER EXTENSION FOREIGN ' +
          'WRAPPER|10 TABLE FUNCTION GROUP LANGUAGE LARGE OBJECT MATERIALIZED VIEW OPERATOR CLASS ' +
          'FAMILY POLICY PUBLICATION|10 ROLE RULE SCHEMA SEQUENCE SERVER STATISTICS SUBSCRIPTION SYSTEM ' +
          'TABLESPACE CONFIGURATION DICTIONARY PARSER TEMPLATE TYPE USER MAPPING PREPARED ACCESS ' +
          'METHOD CAST AS TRANSFORM TRANSACTION OWNED TO INTO SESSION AUTHORIZATION ' +
          'INDEX PROCEDURE ASSERTION ' +
          // additional reserved key words
          'ALL ANALYSE AND ANY ARRAY ASC ASYMMETRIC|10 BOTH CASE CHECK ' +
          'COLLATE COLUMN CONCURRENTLY|10 CONSTRAINT CROSS ' +
          'DEFERRABLE RANGE ' +
          'DESC DISTINCT ELSE EXCEPT FOR FREEZE|10 FROM FULL HAVING ' +
          'ILIKE IN INITIALLY INNER INTERSECT IS ISNULL JOIN LATERAL LEADING LIKE LIMIT ' +
          'NATURAL NOT NOTNULL NULL OFFSET ON ONLY OR ORDER OUTER OVERLAPS PLACING PRIMARY ' +
          'REFERENCES RETURNING SIMILAR SOME SYMMETRIC TABLESAMPLE THEN ' +
          'TRAILING UNION UNIQUE USING VARIADIC|10 VERBOSE WHEN WHERE WINDOW WITH ' +
          // some of non-reserved (which are used in clauses or as PL/pgSQL keyword)
          'BY RETURNS INOUT OUT SETOF|10 IF STRICT CURRENT CONTINUE OWNER LOCATION OVER PARTITION WITHIN ' +
          'BETWEEN ESCAPE EXTERNAL INVOKER DEFINER WORK RENAME VERSION CONNECTION CONNECT ' +
          'TABLES TEMP TEMPORARY FUNCTIONS SEQUENCES TYPES SCHEMAS OPTION CASCADE RESTRICT ADD ADMIN ' +
          'EXISTS VALID VALIDATE ENABLE DISABLE REPLICA|10 ALWAYS PASSING COLUMNS PATH ' +
          'REF VALUE OVERRIDING IMMUTABLE STABLE VOLATILE BEFORE AFTER EACH ROW PROCEDURAL ' +
          'ROUTINE NO HANDLER VALIDATOR OPTIONS STORAGE OIDS|10 WITHOUT INHERIT DEPENDS CALLED ' +
          'INPUT LEAKPROOF|10 COST ROWS NOWAIT SEARCH UNTIL ENCRYPTED|10 PASSWORD CONFLICT|10 ' +
          'INSTEAD INHERITS CHARACTERISTICS WRITE CURSOR ALSO STATEMENT SHARE EXCLUSIVE INLINE ' +
          'ISOLATION REPEATABLE READ COMMITTED SERIALIZABLE UNCOMMITTED LOCAL GLOBAL SQL PROCEDURES ' +
          'RECURSIVE SNAPSHOT ROLLUP CUBE TRUSTED|10 INCLUDE FOLLOWING PRECEDING UNBOUNDED RANGE GROUPS ' +
          'UNENCRYPTED|10 SYSID FORMAT DELIMITER HEADER QUOTE ENCODING FILTER OFF ' +
          // some parameters of VACUUM/ANALYZE/EXPLAIN
          'FORCE_QUOTE FORCE_NOT_NULL FORCE_NULL COSTS BUFFERS TIMING SUMMARY DISABLE_PAGE_SKIPPING ' +
          //
          'RESTART CYCLE GENERATED IDENTITY DEFERRED IMMEDIATE LEVEL LOGGED UNLOGGED ' +
          'OF NOTHING NONE EXCLUDE ATTRIBUTE ' +
          // from GRANT (not keywords actually)
          'USAGE ROUTINES ' +
          // actually literals, but look better this way (due to IS TRUE, IS FALSE, ISNULL etc)
          'TRUE FALSE NAN INFINITY ';

        var ROLE_ATTRS = // only those not in keywrods already
          'SUPERUSER NOSUPERUSER CREATEDB NOCREATEDB CREATEROLE NOCREATEROLE INHERIT NOINHERIT ' +
          'LOGIN NOLOGIN REPLICATION NOREPLICATION BYPASSRLS NOBYPASSRLS ';

        var PLPGSQL_KW =
          'ALIAS BEGIN CONSTANT DECLARE END EXCEPTION RETURN PERFORM|10 RAISE GET DIAGNOSTICS ' +
          'STACKED|10 FOREACH LOOP ELSIF EXIT WHILE REVERSE SLICE DEBUG LOG INFO NOTICE WARNING ASSERT ' +
          'OPEN ';

        var TYPES =
          // https://www.postgresql.org/docs/11/static/datatype.html
          'BIGINT INT8 BIGSERIAL SERIAL8 BIT VARYING VARBIT BOOLEAN BOOL BOX BYTEA CHARACTER CHAR VARCHAR ' +
          'CIDR CIRCLE DATE DOUBLE PRECISION FLOAT8 FLOAT INET INTEGER INT INT4 INTERVAL JSON JSONB LINE LSEG|10 ' +
          'MACADDR MACADDR8 MONEY NUMERIC DEC DECIMAL PATH POINT POLYGON REAL FLOAT4 SMALLINT INT2 ' +
          'SMALLSERIAL|10 SERIAL2|10 SERIAL|10 SERIAL4|10 TEXT TIME ZONE TIMETZ|10 TIMESTAMP TIMESTAMPTZ|10 TSQUERY|10 TSVECTOR|10 ' +
          'TXID_SNAPSHOT|10 UUID XML NATIONAL NCHAR ' +
          'INT4RANGE|10 INT8RANGE|10 NUMRANGE|10 TSRANGE|10 TSTZRANGE|10 DATERANGE|10 ' +
          // pseudotypes
          'ANYELEMENT ANYARRAY ANYNONARRAY ANYENUM ANYRANGE CSTRING INTERNAL ' +
          'RECORD PG_DDL_COMMAND VOID UNKNOWN OPAQUE REFCURSOR ' +
          // spec. type
          'NAME ' +
          // OID-types
          'OID REGPROC|10 REGPROCEDURE|10 REGOPER|10 REGOPERATOR|10 REGCLASS|10 REGTYPE|10 REGROLE|10 ' +
          'REGNAMESPACE|10 REGCONFIG|10 REGDICTIONARY|10 '; // +
        // some types from standard extensions
        ('HSTORE|10 LO LTREE|10 ');

        var TYPES_RE = TYPES.trim()
          .split(' ')
          .map(function(val) {
            return val.split('|')[0];
          })
          .join('|');

        var SQL_BI =
          'CURRENT_TIME CURRENT_TIMESTAMP CURRENT_USER CURRENT_CATALOG|10 CURRENT_DATE LOCALTIME LOCALTIMESTAMP ' +
          'CURRENT_ROLE|10 CURRENT_SCHEMA|10 SESSION_USER PUBLIC ';

        var PLPGSQL_BI =
          'FOUND NEW OLD TG_NAME|10 TG_WHEN|10 TG_LEVEL|10 TG_OP|10 TG_RELID|10 TG_RELNAME|10 ' +
          'TG_TABLE_NAME|10 TG_TABLE_SCHEMA|10 TG_NARGS|10 TG_ARGV|10 TG_EVENT|10 TG_TAG|10 ' +
          // get diagnostics
          'ROW_COUNT RESULT_OID|10 PG_CONTEXT|10 RETURNED_SQLSTATE COLUMN_NAME CONSTRAINT_NAME ' +
          'PG_DATATYPE_NAME|10 MESSAGE_TEXT TABLE_NAME SCHEMA_NAME PG_EXCEPTION_DETAIL|10 ' +
          'PG_EXCEPTION_HINT|10 PG_EXCEPTION_CONTEXT|10 ';

        var PLPGSQL_EXCEPTIONS =
          // exceptions https://www.postgresql.org/docs/current/static/errcodes-appendix.html
          'SQLSTATE SQLERRM|10 ' +
          'SUCCESSFUL_COMPLETION WARNING DYNAMIC_RESULT_SETS_RETURNED IMPLICIT_ZERO_BIT_PADDING ' +
          'NULL_VALUE_ELIMINATED_IN_SET_FUNCTION PRIVILEGE_NOT_GRANTED PRIVILEGE_NOT_REVOKED ' +
          'STRING_DATA_RIGHT_TRUNCATION DEPRECATED_FEATURE NO_DATA NO_ADDITIONAL_DYNAMIC_RESULT_SETS_RETURNED ' +
          'SQL_STATEMENT_NOT_YET_COMPLETE CONNECTION_EXCEPTION CONNECTION_DOES_NOT_EXIST CONNECTION_FAILURE ' +
          'SQLCLIENT_UNABLE_TO_ESTABLISH_SQLCONNECTION SQLSERVER_REJECTED_ESTABLISHMENT_OF_SQLCONNECTION ' +
          'TRANSACTION_RESOLUTION_UNKNOWN PROTOCOL_VIOLATION TRIGGERED_ACTION_EXCEPTION FEATURE_NOT_SUPPORTED ' +
          'INVALID_TRANSACTION_INITIATION LOCATOR_EXCEPTION INVALID_LOCATOR_SPECIFICATION INVALID_GRANTOR ' +
          'INVALID_GRANT_OPERATION INVALID_ROLE_SPECIFICATION DIAGNOSTICS_EXCEPTION ' +
          'STACKED_DIAGNOSTICS_ACCESSED_WITHOUT_ACTIVE_HANDLER CASE_NOT_FOUND CARDINALITY_VIOLATION ' +
          'DATA_EXCEPTION ARRAY_SUBSCRIPT_ERROR CHARACTER_NOT_IN_REPERTOIRE DATETIME_FIELD_OVERFLOW ' +
          'DIVISION_BY_ZERO ERROR_IN_ASSIGNMENT ESCAPE_CHARACTER_CONFLICT INDICATOR_OVERFLOW ' +
          'INTERVAL_FIELD_OVERFLOW INVALID_ARGUMENT_FOR_LOGARITHM INVALID_ARGUMENT_FOR_NTILE_FUNCTION ' +
          'INVALID_ARGUMENT_FOR_NTH_VALUE_FUNCTION INVALID_ARGUMENT_FOR_POWER_FUNCTION ' +
          'INVALID_ARGUMENT_FOR_WIDTH_BUCKET_FUNCTION INVALID_CHARACTER_VALUE_FOR_CAST ' +
          'INVALID_DATETIME_FORMAT INVALID_ESCAPE_CHARACTER INVALID_ESCAPE_OCTET INVALID_ESCAPE_SEQUENCE ' +
          'NONSTANDARD_USE_OF_ESCAPE_CHARACTER INVALID_INDICATOR_PARAMETER_VALUE INVALID_PARAMETER_VALUE ' +
          'INVALID_REGULAR_EXPRESSION INVALID_ROW_COUNT_IN_LIMIT_CLAUSE ' +
          'INVALID_ROW_COUNT_IN_RESULT_OFFSET_CLAUSE INVALID_TABLESAMPLE_ARGUMENT INVALID_TABLESAMPLE_REPEAT ' +
          'INVALID_TIME_ZONE_DISPLACEMENT_VALUE INVALID_USE_OF_ESCAPE_CHARACTER MOST_SPECIFIC_TYPE_MISMATCH ' +
          'NULL_VALUE_NOT_ALLOWED NULL_VALUE_NO_INDICATOR_PARAMETER NUMERIC_VALUE_OUT_OF_RANGE ' +
          'SEQUENCE_GENERATOR_LIMIT_EXCEEDED STRING_DATA_LENGTH_MISMATCH STRING_DATA_RIGHT_TRUNCATION ' +
          'SUBSTRING_ERROR TRIM_ERROR UNTERMINATED_C_STRING ZERO_LENGTH_CHARACTER_STRING ' +
          'FLOATING_POINT_EXCEPTION INVALID_TEXT_REPRESENTATION INVALID_BINARY_REPRESENTATION ' +
          'BAD_COPY_FILE_FORMAT UNTRANSLATABLE_CHARACTER NOT_AN_XML_DOCUMENT INVALID_XML_DOCUMENT ' +
          'INVALID_XML_CONTENT INVALID_XML_COMMENT INVALID_XML_PROCESSING_INSTRUCTION ' +
          'INTEGRITY_CONSTRAINT_VIOLATION RESTRICT_VIOLATION NOT_NULL_VIOLATION FOREIGN_KEY_VIOLATION ' +
          'UNIQUE_VIOLATION CHECK_VIOLATION EXCLUSION_VIOLATION INVALID_CURSOR_STATE ' +
          'INVALID_TRANSACTION_STATE ACTIVE_SQL_TRANSACTION BRANCH_TRANSACTION_ALREADY_ACTIVE ' +
          'HELD_CURSOR_REQUIRES_SAME_ISOLATION_LEVEL INAPPROPRIATE_ACCESS_MODE_FOR_BRANCH_TRANSACTION ' +
          'INAPPROPRIATE_ISOLATION_LEVEL_FOR_BRANCH_TRANSACTION ' +
          'NO_ACTIVE_SQL_TRANSACTION_FOR_BRANCH_TRANSACTION READ_ONLY_SQL_TRANSACTION ' +
          'SCHEMA_AND_DATA_STATEMENT_MIXING_NOT_SUPPORTED NO_ACTIVE_SQL_TRANSACTION ' +
          'IN_FAILED_SQL_TRANSACTION IDLE_IN_TRANSACTION_SESSION_TIMEOUT INVALID_SQL_STATEMENT_NAME ' +
          'TRIGGERED_DATA_CHANGE_VIOLATION INVALID_AUTHORIZATION_SPECIFICATION INVALID_PASSWORD ' +
          'DEPENDENT_PRIVILEGE_DESCRIPTORS_STILL_EXIST DEPENDENT_OBJECTS_STILL_EXIST ' +
          'INVALID_TRANSACTION_TERMINATION SQL_ROUTINE_EXCEPTION FUNCTION_EXECUTED_NO_RETURN_STATEMENT ' +
          'MODIFYING_SQL_DATA_NOT_PERMITTED PROHIBITED_SQL_STATEMENT_ATTEMPTED ' +
          'READING_SQL_DATA_NOT_PERMITTED INVALID_CURSOR_NAME EXTERNAL_ROUTINE_EXCEPTION ' +
          'CONTAINING_SQL_NOT_PERMITTED MODIFYING_SQL_DATA_NOT_PERMITTED ' +
          'PROHIBITED_SQL_STATEMENT_ATTEMPTED READING_SQL_DATA_NOT_PERMITTED ' +
          'EXTERNAL_ROUTINE_INVOCATION_EXCEPTION INVALID_SQLSTATE_RETURNED NULL_VALUE_NOT_ALLOWED ' +
          'TRIGGER_PROTOCOL_VIOLATED SRF_PROTOCOL_VIOLATED EVENT_TRIGGER_PROTOCOL_VIOLATED ' +
          'SAVEPOINT_EXCEPTION INVALID_SAVEPOINT_SPECIFICATION INVALID_CATALOG_NAME ' +
          'INVALID_SCHEMA_NAME TRANSACTION_ROLLBACK TRANSACTION_INTEGRITY_CONSTRAINT_VIOLATION ' +
          'SERIALIZATION_FAILURE STATEMENT_COMPLETION_UNKNOWN DEADLOCK_DETECTED ' +
          'SYNTAX_ERROR_OR_ACCESS_RULE_VIOLATION SYNTAX_ERROR INSUFFICIENT_PRIVILEGE CANNOT_COERCE ' +
          'GROUPING_ERROR WINDOWING_ERROR INVALID_RECURSION INVALID_FOREIGN_KEY INVALID_NAME ' +
          'NAME_TOO_LONG RESERVED_NAME DATATYPE_MISMATCH INDETERMINATE_DATATYPE COLLATION_MISMATCH ' +
          'INDETERMINATE_COLLATION WRONG_OBJECT_TYPE GENERATED_ALWAYS UNDEFINED_COLUMN ' +
          'UNDEFINED_FUNCTION UNDEFINED_TABLE UNDEFINED_PARAMETER UNDEFINED_OBJECT ' +
          'DUPLICATE_COLUMN DUPLICATE_CURSOR DUPLICATE_DATABASE DUPLICATE_FUNCTION ' +
          'DUPLICATE_PREPARED_STATEMENT DUPLICATE_SCHEMA DUPLICATE_TABLE DUPLICATE_ALIAS ' +
          'DUPLICATE_OBJECT AMBIGUOUS_COLUMN AMBIGUOUS_FUNCTION AMBIGUOUS_PARAMETER AMBIGUOUS_ALIAS ' +
          'INVALID_COLUMN_REFERENCE INVALID_COLUMN_DEFINITION INVALID_CURSOR_DEFINITION ' +
          'INVALID_DATABASE_DEFINITION INVALID_FUNCTION_DEFINITION ' +
          'INVALID_PREPARED_STATEMENT_DEFINITION INVALID_SCHEMA_DEFINITION INVALID_TABLE_DEFINITION ' +
          'INVALID_OBJECT_DEFINITION WITH_CHECK_OPTION_VIOLATION INSUFFICIENT_RESOURCES DISK_FULL ' +
          'OUT_OF_MEMORY TOO_MANY_CONNECTIONS CONFIGURATION_LIMIT_EXCEEDED PROGRAM_LIMIT_EXCEEDED ' +
          'STATEMENT_TOO_COMPLEX TOO_MANY_COLUMNS TOO_MANY_ARGUMENTS OBJECT_NOT_IN_PREREQUISITE_STATE ' +
          'OBJECT_IN_USE CANT_CHANGE_RUNTIME_PARAM LOCK_NOT_AVAILABLE OPERATOR_INTERVENTION ' +
          'QUERY_CANCELED ADMIN_SHUTDOWN CRASH_SHUTDOWN CANNOT_CONNECT_NOW DATABASE_DROPPED ' +
          'SYSTEM_ERROR IO_ERROR UNDEFINED_FILE DUPLICATE_FILE SNAPSHOT_TOO_OLD CONFIG_FILE_ERROR ' +
          'LOCK_FILE_EXISTS FDW_ERROR FDW_COLUMN_NAME_NOT_FOUND FDW_DYNAMIC_PARAMETER_VALUE_NEEDED ' +
          'FDW_FUNCTION_SEQUENCE_ERROR FDW_INCONSISTENT_DESCRIPTOR_INFORMATION ' +
          'FDW_INVALID_ATTRIBUTE_VALUE FDW_INVALID_COLUMN_NAME FDW_INVALID_COLUMN_NUMBER ' +
          'FDW_INVALID_DATA_TYPE FDW_INVALID_DATA_TYPE_DESCRIPTORS ' +
          'FDW_INVALID_DESCRIPTOR_FIELD_IDENTIFIER FDW_INVALID_HANDLE FDW_INVALID_OPTION_INDEX ' +
          'FDW_INVALID_OPTION_NAME FDW_INVALID_STRING_LENGTH_OR_BUFFER_LENGTH ' +
          'FDW_INVALID_STRING_FORMAT FDW_INVALID_USE_OF_NULL_POINTER FDW_TOO_MANY_HANDLES ' +
          'FDW_OUT_OF_MEMORY FDW_NO_SCHEMAS FDW_OPTION_NAME_NOT_FOUND FDW_REPLY_HANDLE ' +
          'FDW_SCHEMA_NOT_FOUND FDW_TABLE_NOT_FOUND FDW_UNABLE_TO_CREATE_EXECUTION ' +
          'FDW_UNABLE_TO_CREATE_REPLY FDW_UNABLE_TO_ESTABLISH_CONNECTION PLPGSQL_ERROR ' +
          'RAISE_EXCEPTION NO_DATA_FOUND TOO_MANY_ROWS ASSERT_FAILURE INTERNAL_ERROR DATA_CORRUPTED ' +
          'INDEX_CORRUPTED ';

        var FUNCTIONS =
          // https://www.postgresql.org/docs/11/static/functions-aggregate.html
          'ARRAY_AGG AVG BIT_AND BIT_OR BOOL_AND BOOL_OR COUNT EVERY JSON_AGG JSONB_AGG JSON_OBJECT_AGG ' +
          'JSONB_OBJECT_AGG MAX MIN MODE STRING_AGG SUM XMLAGG ' +
          'CORR COVAR_POP COVAR_SAMP REGR_AVGX REGR_AVGY REGR_COUNT REGR_INTERCEPT REGR_R2 REGR_SLOPE ' +
          'REGR_SXX REGR_SXY REGR_SYY STDDEV STDDEV_POP STDDEV_SAMP VARIANCE VAR_POP VAR_SAMP ' +
          'PERCENTILE_CONT PERCENTILE_DISC ' +
          // https://www.postgresql.org/docs/11/static/functions-window.html
          'ROW_NUMBER RANK DENSE_RANK PERCENT_RANK CUME_DIST NTILE LAG LEAD FIRST_VALUE LAST_VALUE NTH_VALUE ' +
          // https://www.postgresql.org/docs/11/static/functions-comparison.html
          'NUM_NONNULLS NUM_NULLS ' +
          // https://www.postgresql.org/docs/11/static/functions-math.html
          'ABS CBRT CEIL CEILING DEGREES DIV EXP FLOOR LN LOG MOD PI POWER RADIANS ROUND SCALE SIGN SQRT ' +
          'TRUNC WIDTH_BUCKET ' +
          'RANDOM SETSEED ' +
          'ACOS ACOSD ASIN ASIND ATAN ATAND ATAN2 ATAN2D COS COSD COT COTD SIN SIND TAN TAND ' +
          // https://www.postgresql.org/docs/11/static/functions-string.html
          'BIT_LENGTH CHAR_LENGTH CHARACTER_LENGTH LOWER OCTET_LENGTH OVERLAY POSITION SUBSTRING TREAT TRIM UPPER ' +
          'ASCII BTRIM CHR CONCAT CONCAT_WS CONVERT CONVERT_FROM CONVERT_TO DECODE ENCODE INITCAP' +
          'LEFT LENGTH LPAD LTRIM MD5 PARSE_IDENT PG_CLIENT_ENCODING QUOTE_IDENT|10 QUOTE_LITERAL|10 ' +
          'QUOTE_NULLABLE|10 REGEXP_MATCH REGEXP_MATCHES REGEXP_REPLACE REGEXP_SPLIT_TO_ARRAY ' +
          'REGEXP_SPLIT_TO_TABLE REPEAT REPLACE REVERSE RIGHT RPAD RTRIM SPLIT_PART STRPOS SUBSTR ' +
          'TO_ASCII TO_HEX TRANSLATE ' +
          // https://www.postgresql.org/docs/11/static/functions-binarystring.html
          'OCTET_LENGTH GET_BIT GET_BYTE SET_BIT SET_BYTE ' +
          // https://www.postgresql.org/docs/11/static/functions-formatting.html
          'TO_CHAR TO_DATE TO_NUMBER TO_TIMESTAMP ' +
          // https://www.postgresql.org/docs/11/static/functions-datetime.html
          'AGE CLOCK_TIMESTAMP|10 DATE_PART DATE_TRUNC ISFINITE JUSTIFY_DAYS JUSTIFY_HOURS JUSTIFY_INTERVAL ' +
          'MAKE_DATE MAKE_INTERVAL|10 MAKE_TIME MAKE_TIMESTAMP|10 MAKE_TIMESTAMPTZ|10 NOW STATEMENT_TIMESTAMP|10 ' +
          'TIMEOFDAY TRANSACTION_TIMESTAMP|10 ' +
          // https://www.postgresql.org/docs/11/static/functions-enum.html
          'ENUM_FIRST ENUM_LAST ENUM_RANGE ' +
          // https://www.postgresql.org/docs/11/static/functions-geometry.html
          'AREA CENTER DIAMETER HEIGHT ISCLOSED ISOPEN NPOINTS PCLOSE POPEN RADIUS WIDTH ' +
          'BOX BOUND_BOX CIRCLE LINE LSEG PATH POLYGON ' +
          // https://www.postgresql.org/docs/11/static/functions-net.html
          'ABBREV BROADCAST HOST HOSTMASK MASKLEN NETMASK NETWORK SET_MASKLEN TEXT INET_SAME_FAMILY' +
          'INET_MERGE MACADDR8_SET7BIT ' +
          // https://www.postgresql.org/docs/11/static/functions-textsearch.html
          'ARRAY_TO_TSVECTOR GET_CURRENT_TS_CONFIG NUMNODE PLAINTO_TSQUERY PHRASETO_TSQUERY WEBSEARCH_TO_TSQUERY ' +
          'QUERYTREE SETWEIGHT STRIP TO_TSQUERY TO_TSVECTOR JSON_TO_TSVECTOR JSONB_TO_TSVECTOR TS_DELETE ' +
          'TS_FILTER TS_HEADLINE TS_RANK TS_RANK_CD TS_REWRITE TSQUERY_PHRASE TSVECTOR_TO_ARRAY ' +
          'TSVECTOR_UPDATE_TRIGGER TSVECTOR_UPDATE_TRIGGER_COLUMN ' +
          // https://www.postgresql.org/docs/11/static/functions-xml.html
          'XMLCOMMENT XMLCONCAT XMLELEMENT XMLFOREST XMLPI XMLROOT ' +
          'XMLEXISTS XML_IS_WELL_FORMED XML_IS_WELL_FORMED_DOCUMENT XML_IS_WELL_FORMED_CONTENT ' +
          'XPATH XPATH_EXISTS XMLTABLE XMLNAMESPACES ' +
          'TABLE_TO_XML TABLE_TO_XMLSCHEMA TABLE_TO_XML_AND_XMLSCHEMA ' +
          'QUERY_TO_XML QUERY_TO_XMLSCHEMA QUERY_TO_XML_AND_XMLSCHEMA ' +
          'CURSOR_TO_XML CURSOR_TO_XMLSCHEMA ' +
          'SCHEMA_TO_XML SCHEMA_TO_XMLSCHEMA SCHEMA_TO_XML_AND_XMLSCHEMA ' +
          'DATABASE_TO_XML DATABASE_TO_XMLSCHEMA DATABASE_TO_XML_AND_XMLSCHEMA ' +
          'XMLATTRIBUTES ' +
          // https://www.postgresql.org/docs/11/static/functions-json.html
          'TO_JSON TO_JSONB ARRAY_TO_JSON ROW_TO_JSON JSON_BUILD_ARRAY JSONB_BUILD_ARRAY JSON_BUILD_OBJECT ' +
          'JSONB_BUILD_OBJECT JSON_OBJECT JSONB_OBJECT JSON_ARRAY_LENGTH JSONB_ARRAY_LENGTH JSON_EACH ' +
          'JSONB_EACH JSON_EACH_TEXT JSONB_EACH_TEXT JSON_EXTRACT_PATH JSONB_EXTRACT_PATH ' +
          'JSON_OBJECT_KEYS JSONB_OBJECT_KEYS JSON_POPULATE_RECORD JSONB_POPULATE_RECORD JSON_POPULATE_RECORDSET ' +
          'JSONB_POPULATE_RECORDSET JSON_ARRAY_ELEMENTS JSONB_ARRAY_ELEMENTS JSON_ARRAY_ELEMENTS_TEXT ' +
          'JSONB_ARRAY_ELEMENTS_TEXT JSON_TYPEOF JSONB_TYPEOF JSON_TO_RECORD JSONB_TO_RECORD JSON_TO_RECORDSET ' +
          'JSONB_TO_RECORDSET JSON_STRIP_NULLS JSONB_STRIP_NULLS JSONB_SET JSONB_INSERT JSONB_PRETTY ' +
          // https://www.postgresql.org/docs/11/static/functions-sequence.html
          'CURRVAL LASTVAL NEXTVAL SETVAL ' +
          // https://www.postgresql.org/docs/11/static/functions-conditional.html
          'COALESCE NULLIF GREATEST LEAST ' +
          // https://www.postgresql.org/docs/11/static/functions-array.html
          'ARRAY_APPEND ARRAY_CAT ARRAY_NDIMS ARRAY_DIMS ARRAY_FILL ARRAY_LENGTH ARRAY_LOWER ARRAY_POSITION ' +
          'ARRAY_POSITIONS ARRAY_PREPEND ARRAY_REMOVE ARRAY_REPLACE ARRAY_TO_STRING ARRAY_UPPER CARDINALITY ' +
          'STRING_TO_ARRAY UNNEST ' +
          // https://www.postgresql.org/docs/11/static/functions-range.html
          'ISEMPTY LOWER_INC UPPER_INC LOWER_INF UPPER_INF RANGE_MERGE ' +
          // https://www.postgresql.org/docs/11/static/functions-srf.html
          'GENERATE_SERIES GENERATE_SUBSCRIPTS ' +
          // https://www.postgresql.org/docs/11/static/functions-info.html
          'CURRENT_DATABASE CURRENT_QUERY CURRENT_SCHEMA|10 CURRENT_SCHEMAS|10 INET_CLIENT_ADDR INET_CLIENT_PORT ' +
          'INET_SERVER_ADDR INET_SERVER_PORT ROW_SECURITY_ACTIVE FORMAT_TYPE ' +
          'TO_REGCLASS TO_REGPROC TO_REGPROCEDURE TO_REGOPER TO_REGOPERATOR TO_REGTYPE TO_REGNAMESPACE TO_REGROLE ' +
          'COL_DESCRIPTION OBJ_DESCRIPTION SHOBJ_DESCRIPTION ' +
          'TXID_CURRENT TXID_CURRENT_IF_ASSIGNED TXID_CURRENT_SNAPSHOT TXID_SNAPSHOT_XIP TXID_SNAPSHOT_XMAX ' +
          'TXID_SNAPSHOT_XMIN TXID_VISIBLE_IN_SNAPSHOT TXID_STATUS ' +
          // https://www.postgresql.org/docs/11/static/functions-admin.html
          'CURRENT_SETTING SET_CONFIG BRIN_SUMMARIZE_NEW_VALUES BRIN_SUMMARIZE_RANGE BRIN_DESUMMARIZE_RANGE ' +
          'GIN_CLEAN_PENDING_LIST ' +
          // https://www.postgresql.org/docs/11/static/functions-trigger.html
          'SUPPRESS_REDUNDANT_UPDATES_TRIGGER ' +
          // ihttps://www.postgresql.org/docs/devel/static/lo-funcs.html
          'LO_FROM_BYTEA LO_PUT LO_GET LO_CREAT LO_CREATE LO_UNLINK LO_IMPORT LO_EXPORT LOREAD LOWRITE ' +
          //
          'GROUPING CAST ';

        var FUNCTIONS_RE = FUNCTIONS.trim()
          .split(' ')
          .map(function(val) {
            return val.split('|')[0];
          })
          .join('|');

        return {
          aliases: ['postgres', 'postgresql'],
          case_insensitive: true,
          keywords: {
            keyword: SQL_KW + PLPGSQL_KW + ROLE_ATTRS,
            built_in: SQL_BI + PLPGSQL_BI + PLPGSQL_EXCEPTIONS
          },
          // Forbid some cunstructs from other languages to improve autodetect. In fact
          // "[a-z]:" is legal (as part of array slice), but improbabal.
          illegal: /:==|\W\s*\(\*|(^|\s)\$[a-z]|{{|[a-z]:\s*$|\.\.\.|TO:|DO:/,
          contains: [
            // special handling of some words, which are reserved only in some contexts
            {
              className: 'keyword',
              variants: [
                { begin: /\bTEXT\s*SEARCH\b/ },
                { begin: /\b(PRIMARY|FOREIGN|FOR(\s+NO)?)\s+KEY\b/ },
                { begin: /\bPARALLEL\s+(UNSAFE|RESTRICTED|SAFE)\b/ },
                { begin: /\bSTORAGE\s+(PLAIN|EXTERNAL|EXTENDED|MAIN)\b/ },
                { begin: /\bMATCH\s+(FULL|PARTIAL|SIMPLE)\b/ },
                { begin: /\bNULLS\s+(FIRST|LAST)\b/ },
                { begin: /\bEVENT\s+TRIGGER\b/ },
                { begin: /\b(MAPPING|OR)\s+REPLACE\b/ },
                { begin: /\b(FROM|TO)\s+(PROGRAM|STDIN|STDOUT)\b/ },
                { begin: /\b(SHARE|EXCLUSIVE)\s+MODE\b/ },
                { begin: /\b(LEFT|RIGHT)\s+(OUTER\s+)?JOIN\b/ },
                {
                  begin: /\b(FETCH|MOVE)\s+(NEXT|PRIOR|FIRST|LAST|ABSOLUTE|RELATIVE|FORWARD|BACKWARD)\b/
                },
                { begin: /\bPRESERVE\s+ROWS\b/ },
                { begin: /\bDISCARD\s+PLANS\b/ },
                { begin: /\bREFERENCING\s+(OLD|NEW)\b/ },
                { begin: /\bSKIP\s+LOCKED\b/ },
                { begin: /\bGROUPING\s+SETS\b/ },
                {
                  begin: /\b(BINARY|INSENSITIVE|SCROLL|NO\s+SCROLL)\s+(CURSOR|FOR)\b/
                },
                { begin: /\b(WITH|WITHOUT)\s+HOLD\b/ },
                { begin: /\bWITH\s+(CASCADED|LOCAL)\s+CHECK\s+OPTION\b/ },
                { begin: /\bEXCLUDE\s+(TIES|NO\s+OTHERS)\b/ },
                { begin: /\bFORMAT\s+(TEXT|XML|JSON|YAML)\b/ },
                { begin: /\bSET\s+((SESSION|LOCAL)\s+)?NAMES\b/ },
                { begin: /\bIS\s+(NOT\s+)?UNKNOWN\b/ },
                { begin: /\bSECURITY\s+LABEL\b/ },
                { begin: /\bSTANDALONE\s+(YES|NO|NO\s+VALUE)\b/ },
                { begin: /\bWITH\s+(NO\s+)?DATA\b/ },
                { begin: /\b(FOREIGN|SET)\s+DATA\b/ },
                { begin: /\bSET\s+(CATALOG|CONSTRAINTS)\b/ },
                { begin: /\b(WITH|FOR)\s+ORDINALITY\b/ },
                { begin: /\bIS\s+(NOT\s+)?DOCUMENT\b/ },
                { begin: /\bXML\s+OPTION\s+(DOCUMENT|CONTENT)\b/ },
                { begin: /\b(STRIP|PRESERVE)\s+WHITESPACE\b/ },
                { begin: /\bNO\s+(ACTION|MAXVALUE|MINVALUE)\b/ },
                { begin: /\bPARTITION\s+BY\s+(RANGE|LIST|HASH)\b/ },
                { begin: /\bAT\s+TIME\s+ZONE\b/ },
                { begin: /\bGRANTED\s+BY\b/ },
                { begin: /\bRETURN\s+(QUERY|NEXT)\b/ },
                { begin: /\b(ATTACH|DETACH)\s+PARTITION\b/ },
                { begin: /\bFORCE\s+ROW\s+LEVEL\s+SECURITY\b/ },
                {
                  begin: /\b(INCLUDING|EXCLUDING)\s+(COMMENTS|CONSTRAINTS|DEFAULTS|IDENTITY|INDEXES|STATISTICS|STORAGE|ALL)\b/
                },
                {
                  begin: /\bAS\s+(ASSIGNMENT|IMPLICIT|PERMISSIVE|RESTRICTIVE|ENUM|RANGE)\b/
                }
              ]
            },
            // functions named as keywords, followed by '('
            {
              begin: /\b(FORMAT|FAMILY|VERSION)\s*\(/
              //keywords: { built_in: 'FORMAT FAMILY VERSION' }
            },
            // INCLUDE ( ... ) in index_parameters in CREATE TABLE
            {
              begin: /\bINCLUDE\s*\(/,
              keywords: 'INCLUDE'
            },
            // not highlight RANGE if not in frame_clause (not 100% correct, but seems satisfactory)
            {
              begin: /\bRANGE(?!\s*(BETWEEN|UNBOUNDED|CURRENT|[-0-9]+))/
            },
            // disable highlighting in commands CREATE AGGREGATE/COLLATION/DATABASE/OPERTOR/TEXT SEARCH .../TYPE
            // and in PL/pgSQL RAISE ... USING
            {
              begin: /\b(VERSION|OWNER|TEMPLATE|TABLESPACE|CONNECTION\s+LIMIT|PROCEDURE|RESTRICT|JOIN|PARSER|COPY|START|END|COLLATION|INPUT|ANALYZE|STORAGE|LIKE|DEFAULT|DELIMITER|ENCODING|COLUMN|CONSTRAINT|TABLE|SCHEMA)\s*=/
            },
            // PG_smth; HAS_some_PRIVILEGE
            {
              //className: 'built_in',
              begin: /\b(PG_\w+?|HAS_[A-Z_]+_PRIVILEGE)\b/,
              relevance: 10
            },
            // extract
            {
              begin: /\bEXTRACT\s*\(/,
              end: /\bFROM\b/,
              returnEnd: true,
              keywords: {
                //built_in: 'EXTRACT',
                type:
                  'CENTURY DAY DECADE DOW DOY EPOCH HOUR ISODOW ISOYEAR MICROSECONDS ' +
                  'MILLENNIUM MILLISECONDS MINUTE MONTH QUARTER SECOND TIMEZONE TIMEZONE_HOUR ' +
                  'TIMEZONE_MINUTE WEEK YEAR'
              }
            },
            // xmlelement, xmlpi - special NAME
            {
              begin: /\b(XMLELEMENT|XMLPI)\s*\(\s*NAME/,
              keywords: {
                //built_in: 'XMLELEMENT XMLPI',
                keyword: 'NAME'
              }
            },
            // xmlparse, xmlserialize
            {
              begin: /\b(XMLPARSE|XMLSERIALIZE)\s*\(\s*(DOCUMENT|CONTENT)/,
              keywords: {
                //built_in: 'XMLPARSE XMLSERIALIZE',
                keyword: 'DOCUMENT CONTENT'
              }
            },
            // Sequences. We actually skip everything between CACHE|INCREMENT|MAXVALUE|MINVALUE and
            // nearest following numeric constant. Without with trick we find a lot of "keywords"
            // in 'avrasm' autodetection test...
            {
              beginKeywords: 'CACHE INCREMENT MAXVALUE MINVALUE',
              end: hljs.C_NUMBER_RE,
              returnEnd: true,
              keywords: 'BY CACHE INCREMENT MAXVALUE MINVALUE'
            },
            // WITH|WITHOUT TIME ZONE as part of datatype
            {
              className: 'type',
              begin: /\b(WITH|WITHOUT)\s+TIME\s+ZONE\b/
            },
            // INTERVAL optional fields
            {
              className: 'type',
              begin: /\bINTERVAL\s+(YEAR|MONTH|DAY|HOUR|MINUTE|SECOND)(\s+TO\s+(MONTH|HOUR|MINUTE|SECOND))?\b/
            },
            // Pseudo-types which allowed only as return type
            {
              begin: /\bRETURNS\s+(LANGUAGE_HANDLER|TRIGGER|EVENT_TRIGGER|FDW_HANDLER|INDEX_AM_HANDLER|TSM_HANDLER)\b/,
              keywords: {
                keyword: 'RETURNS',
                type:
                  'LANGUAGE_HANDLER TRIGGER EVENT_TRIGGER FDW_HANDLER INDEX_AM_HANDLER TSM_HANDLER'
              }
            },
            // Known functions - only when followed by '('
            {
              begin: '\\b(' + FUNCTIONS_RE + ')\\s*\\('
              //keywords: { built_in: FUNCTIONS }
            },
            // Types
            {
              begin: '\\.(' + TYPES_RE + ')\\b' // prevent highlight as type, say, 'oid' in 'pgclass.oid'
            },
            {
              begin: '\\b(' + TYPES_RE + ')\\s+PATH\\b', // in XMLTABLE
              keywords: {
                keyword: 'PATH', // hopefully no one would use PATH type in XMLTABLE...
                type: TYPES.replace('PATH ', '')
              }
            },
            {
              className: 'type',
              begin: '\\b(' + TYPES_RE + ')\\b'
            },
            // Strings, see https://www.postgresql.org/docs/11/static/sql-syntax-lexical.html#SQL-SYNTAX-CONSTANTS
            {
              className: 'string',
              begin: "'",
              end: "'",
              contains: [{ begin: "''" }]
            },
            {
              className: 'string',
              begin: "(e|E|u&|U&)'",
              end: "'",
              contains: [{ begin: '\\\\.' }],
              relevance: 10
            },
            {
              begin: DOLLAR_STRING,
              endSameAsBegin: true,
              contains: [
                {
                  // actually we want them all except SQL; listed are those with known implementations
                  // and XML + JSON just in case
                  subLanguage: [
                    'pgsql',
                    'perl',
                    'python',
                    'tcl',
                    'r',
                    'lua',
                    'java',
                    'php',
                    'ruby',
                    'bash',
                    'scheme',
                    'xml',
                    'json'
                  ],
                  endsWithParent: true
                }
              ]
            },
            // identifiers in quotes
            {
              begin: '"',
              end: '"',
              contains: [{ begin: '""' }]
            },
            // numbers
            hljs.C_NUMBER_MODE,
            // comments
            hljs.C_BLOCK_COMMENT_MODE,
            COMMENT_MODE,
            // PL/pgSQL staff
            // %ROWTYPE, %TYPE, $n
            {
              className: 'meta',
              variants: [
                { begin: '%(ROW)?TYPE', relevance: 10 }, // %TYPE, %ROWTYPE
                { begin: '\\$\\d+' }, // $n
                { begin: '^#\\w', end: '$' } // #compiler option
              ]
            },
            // <<labeles>>
            {
              className: 'symbol',
              begin: LABEL,
              relevance: 10
            }
          ]
        };
      };

      /***/
    },
    /* 473 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var VARIABLE = {
          begin: '\\$+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*'
        };
        var PREPROCESSOR = {
          className: 'meta',
          begin: /<\?(php)?|\?>/
        };
        var STRING = {
          className: 'string',
          contains: [hljs.BACKSLASH_ESCAPE, PREPROCESSOR],
          variants: [
            {
              begin: 'b"',
              end: '"'
            },
            {
              begin: "b'",
              end: "'"
            },
            hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null }),
            hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null })
          ]
        };
        var NUMBER = {
          variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]
        };
        return {
          aliases: ['php', 'php3', 'php4', 'php5', 'php6', 'php7'],
          case_insensitive: true,
          keywords:
            'and include_once list abstract global private echo interface as static endswitch ' +
            'array null if endwhile or const for endforeach self var while isset public ' +
            'protected exit foreach throw elseif include __FILE__ empty require_once do xor ' +
            'return parent clone use __CLASS__ __LINE__ else break print eval new ' +
            'catch __METHOD__ case exception default die require __FUNCTION__ ' +
            'enddeclare final try switch continue endfor endif declare unset true false ' +
            'trait goto instanceof insteadof __DIR__ __NAMESPACE__ ' +
            'yield finally',
          contains: [
            hljs.HASH_COMMENT_MODE,
            hljs.COMMENT('//', '$', { contains: [PREPROCESSOR] }),
            hljs.COMMENT('/\\*', '\\*/', {
              contains: [
                {
                  className: 'doctag',
                  begin: '@[A-Za-z]+'
                }
              ]
            }),
            hljs.COMMENT('__halt_compiler.+?;', false, {
              endsWithParent: true,
              keywords: '__halt_compiler',
              lexemes: hljs.UNDERSCORE_IDENT_RE
            }),
            {
              className: 'string',
              begin: /<<<['"]?\w+['"]?$/,
              end: /^\w+;?$/,
              contains: [
                hljs.BACKSLASH_ESCAPE,
                {
                  className: 'subst',
                  variants: [{ begin: /\$\w+/ }, { begin: /\{\$/, end: /\}/ }]
                }
              ]
            },
            PREPROCESSOR,
            {
              className: 'keyword',
              begin: /\$this\b/
            },
            VARIABLE,
            {
              // swallow composed identifiers to avoid parsing them as keywords
              begin: /(::|->)+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/
            },
            {
              className: 'function',
              beginKeywords: 'function',
              end: /[;{]/,
              excludeEnd: true,
              illegal: '\\$|\\[|%',
              contains: [
                hljs.UNDERSCORE_TITLE_MODE,
                {
                  className: 'params',
                  begin: '\\(',
                  end: '\\)',
                  contains: [
                    'self',
                    VARIABLE,
                    hljs.C_BLOCK_COMMENT_MODE,
                    STRING,
                    NUMBER
                  ]
                }
              ]
            },
            {
              className: 'class',
              beginKeywords: 'class interface',
              end: '{',
              excludeEnd: true,
              illegal: /[:\(\$"]/,
              contains: [
                { beginKeywords: 'extends implements' },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            },
            {
              beginKeywords: 'namespace',
              end: ';',
              illegal: /[\.']/,
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            {
              beginKeywords: 'use',
              end: ';',
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            {
              begin: '=>' // No markup, just a relevance booster
            },
            STRING,
            NUMBER
          ]
        };
      };

      /***/
    },
    /* 474 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          disableAutodetect: true
        };
      };

      /***/
    },
    /* 475 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            'actor addressof and as be break class compile_error compile_intrinsic' +
            'consume continue delegate digestof do else elseif embed end error' +
            'for fun if ifdef in interface is isnt lambda let match new not object' +
            'or primitive recover repeat return struct then trait try type until ' +
            'use var where while with xor',
          meta: 'iso val tag trn box ref',
          literal: 'this false true'
        };

        var TRIPLE_QUOTE_STRING_MODE = {
          className: 'string',
          begin: '"""',
          end: '"""',
          relevance: 10
        };

        var QUOTE_STRING_MODE = {
          className: 'string',
          begin: '"',
          end: '"',
          contains: [hljs.BACKSLASH_ESCAPE]
        };

        var SINGLE_QUOTE_CHAR_MODE = {
          className: 'string',
          begin: "'",
          end: "'",
          contains: [hljs.BACKSLASH_ESCAPE],
          relevance: 0
        };

        var TYPE_NAME = {
          className: 'type',
          begin: '\\b_?[A-Z][\\w]*',
          relevance: 0
        };

        var PRIMED_NAME = {
          begin: hljs.IDENT_RE + "'",
          relevance: 0
        };

        var CLASS = {
          className: 'class',
          beginKeywords: 'class actor',
          end: '$',
          contains: [hljs.TITLE_MODE, hljs.C_LINE_COMMENT_MODE]
        };

        var FUNCTION = {
          className: 'function',
          beginKeywords: 'new fun',
          end: '=>',
          contains: [
            hljs.TITLE_MODE,
            {
              begin: /\(/,
              end: /\)/,
              contains: [
                TYPE_NAME,
                PRIMED_NAME,
                hljs.C_NUMBER_MODE,
                hljs.C_BLOCK_COMMENT_MODE
              ]
            },
            {
              begin: /:/,
              endsWithParent: true,
              contains: [TYPE_NAME]
            },
            hljs.C_LINE_COMMENT_MODE
          ]
        };

        return {
          keywords: KEYWORDS,
          contains: [
            CLASS,
            FUNCTION,
            TYPE_NAME,
            TRIPLE_QUOTE_STRING_MODE,
            QUOTE_STRING_MODE,
            SINGLE_QUOTE_CHAR_MODE,
            PRIMED_NAME,
            hljs.C_NUMBER_MODE,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 476 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var BACKTICK_ESCAPE = {
          begin: '`[\\s\\S]',
          relevance: 0
        };
        var VAR = {
          className: 'variable',
          variants: [{ begin: /\$[\w\d][\w\d_:]*/ }]
        };
        var LITERAL = {
          className: 'literal',
          begin: /\$(null|true|false)\b/
        };
        var QUOTE_STRING = {
          className: 'string',
          variants: [{ begin: /"/, end: /"/ }, { begin: /@"/, end: /^"@/ }],
          contains: [
            BACKTICK_ESCAPE,
            VAR,
            {
              className: 'variable',
              begin: /\$[A-z]/,
              end: /[^A-z]/
            }
          ]
        };
        var APOS_STRING = {
          className: 'string',
          variants: [{ begin: /'/, end: /'/ }, { begin: /@'/, end: /^'@/ }]
        };

        var PS_HELPTAGS = {
          className: 'doctag',
          variants: [
            /* no paramater help tags */

            {
              begin: /\.(synopsis|description|example|inputs|outputs|notes|link|component|role|functionality)/
            },
            /* one parameter help tags */
            {
              begin: /\.(parameter|forwardhelptargetname|forwardhelpcategory|remotehelprunspace|externalhelp)\s+\S+/
            }
          ]
        };
        var PS_COMMENT = hljs.inherit(hljs.COMMENT(null, null), {
          variants: [
            /* single-line comment */
            { begin: /#/, end: /$/ },
            /* multi-line comment */
            { begin: /<#/, end: /#>/ }
          ],
          contains: [PS_HELPTAGS]
        });

        return {
          aliases: ['ps'],
          lexemes: /-?[A-z\.\-]+/,
          case_insensitive: true,
          keywords: {
            keyword:
              'if else foreach return function do while until elseif begin for trap data dynamicparam end break throw param continue finally in switch exit filter try process catch',
            built_in:
              'Add-Computer Add-Content Add-History Add-JobTrigger Add-Member Add-PSSnapin Add-Type Checkpoint-Computer Clear-Content Clear-EventLog Clear-History Clear-Host Clear-Item Clear-ItemProperty Clear-Variable Compare-Object Complete-Transaction Connect-PSSession Connect-WSMan Convert-Path ConvertFrom-Csv ConvertFrom-Json ConvertFrom-SecureString ConvertFrom-StringData ConvertTo-Csv ConvertTo-Html ConvertTo-Json ConvertTo-SecureString ConvertTo-Xml Copy-Item Copy-ItemProperty Debug-Process Disable-ComputerRestore Disable-JobTrigger Disable-PSBreakpoint Disable-PSRemoting Disable-PSSessionConfiguration Disable-WSManCredSSP Disconnect-PSSession Disconnect-WSMan Disable-ScheduledJob Enable-ComputerRestore Enable-JobTrigger Enable-PSBreakpoint Enable-PSRemoting Enable-PSSessionConfiguration Enable-ScheduledJob Enable-WSManCredSSP Enter-PSSession Exit-PSSession Export-Alias Export-Clixml Export-Console Export-Counter Export-Csv Export-FormatData Export-ModuleMember Export-PSSession ForEach-Object Format-Custom Format-List Format-Table Format-Wide Get-Acl Get-Alias Get-AuthenticodeSignature Get-ChildItem Get-Command Get-ComputerRestorePoint Get-Content Get-ControlPanelItem Get-Counter Get-Credential Get-Culture Get-Date Get-Event Get-EventLog Get-EventSubscriber Get-ExecutionPolicy Get-FormatData Get-Host Get-HotFix Get-Help Get-History Get-IseSnippet Get-Item Get-ItemProperty Get-Job Get-JobTrigger Get-Location Get-Member Get-Module Get-PfxCertificate Get-Process Get-PSBreakpoint Get-PSCallStack Get-PSDrive Get-PSProvider Get-PSSession Get-PSSessionConfiguration Get-PSSnapin Get-Random Get-ScheduledJob Get-ScheduledJobOption Get-Service Get-TraceSource Get-Transaction Get-TypeData Get-UICulture Get-Unique Get-Variable Get-Verb Get-WinEvent Get-WmiObject Get-WSManCredSSP Get-WSManInstance Group-Object Import-Alias Import-Clixml Import-Counter Import-Csv Import-IseSnippet Import-LocalizedData Import-PSSession Import-Module Invoke-AsWorkflow Invoke-Command Invoke-Expression Invoke-History Invoke-Item Invoke-RestMethod Invoke-WebRequest Invoke-WmiMethod Invoke-WSManAction Join-Path Limit-EventLog Measure-Command Measure-Object Move-Item Move-ItemProperty New-Alias New-Event New-EventLog New-IseSnippet New-Item New-ItemProperty New-JobTrigger New-Object New-Module New-ModuleManifest New-PSDrive New-PSSession New-PSSessionConfigurationFile New-PSSessionOption New-PSTransportOption New-PSWorkflowExecutionOption New-PSWorkflowSession New-ScheduledJobOption New-Service New-TimeSpan New-Variable New-WebServiceProxy New-WinEvent New-WSManInstance New-WSManSessionOption Out-Default Out-File Out-GridView Out-Host Out-Null Out-Printer Out-String Pop-Location Push-Location Read-Host Receive-Job Register-EngineEvent Register-ObjectEvent Register-PSSessionConfiguration Register-ScheduledJob Register-WmiEvent Remove-Computer Remove-Event Remove-EventLog Remove-Item Remove-ItemProperty Remove-Job Remove-JobTrigger Remove-Module Remove-PSBreakpoint Remove-PSDrive Remove-PSSession Remove-PSSnapin Remove-TypeData Remove-Variable Remove-WmiObject Remove-WSManInstance Rename-Computer Rename-Item Rename-ItemProperty Reset-ComputerMachinePassword Resolve-Path Restart-Computer Restart-Service Restore-Computer Resume-Job Resume-Service Save-Help Select-Object Select-String Select-Xml Send-MailMessage Set-Acl Set-Alias Set-AuthenticodeSignature Set-Content Set-Date Set-ExecutionPolicy Set-Item Set-ItemProperty Set-JobTrigger Set-Location Set-PSBreakpoint Set-PSDebug Set-PSSessionConfiguration Set-ScheduledJob Set-ScheduledJobOption Set-Service Set-StrictMode Set-TraceSource Set-Variable Set-WmiInstance Set-WSManInstance Set-WSManQuickConfig Show-Command Show-ControlPanelItem Show-EventLog Sort-Object Split-Path Start-Job Start-Process Start-Service Start-Sleep Start-Transaction Start-Transcript Stop-Computer Stop-Job Stop-Process Stop-Service Stop-Transcript Suspend-Job Suspend-Service Tee-Object Test-ComputerSecureChannel Test-Connection Test-ModuleManifest Test-Path Test-PSSessionConfigurationFile Trace-Command Unblock-File Undo-Transaction Unregister-Event Unregister-PSSessionConfiguration Unregister-ScheduledJob Update-FormatData Update-Help Update-List Update-TypeData Use-Transaction Wait-Event Wait-Job Wait-Process Where-Object Write-Debug Write-Error Write-EventLog Write-Host Write-Output Write-Progress Write-Verbose Write-Warning Add-MDTPersistentDrive Disable-MDTMonitorService Enable-MDTMonitorService Get-MDTDeploymentShareStatistics Get-MDTMonitorData Get-MDTOperatingSystemCatalog Get-MDTPersistentDrive Import-MDTApplication Import-MDTDriver Import-MDTOperatingSystem Import-MDTPackage Import-MDTTaskSequence New-MDTDatabase Remove-MDTMonitorData Remove-MDTPersistentDrive Restore-MDTPersistentDrive Set-MDTMonitorData Test-MDTDeploymentShare Test-MDTMonitorData Update-MDTDatabaseSchema Update-MDTDeploymentShare Update-MDTLinkedDS Update-MDTMedia Update-MDTMedia Add-VamtProductKey Export-VamtData Find-VamtManagedMachine Get-VamtConfirmationId Get-VamtProduct Get-VamtProductKey Import-VamtData Initialize-VamtData Install-VamtConfirmationId Install-VamtProductActivation Install-VamtProductKey Update-VamtProduct',
            nomarkup:
              '-ne -eq -lt -gt -ge -le -not -like -notlike -match -notmatch -contains -notcontains -in -notin -replace'
          },
          contains: [
            BACKTICK_ESCAPE,
            hljs.NUMBER_MODE,
            QUOTE_STRING,
            APOS_STRING,
            LITERAL,
            VAR,
            PS_COMMENT
          ]
        };
      };

      /***/
    },
    /* 477 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            keyword:
              'BufferedReader PVector PFont PImage PGraphics HashMap boolean byte char color ' +
              'double float int long String Array FloatDict FloatList IntDict IntList JSONArray JSONObject ' +
              'Object StringDict StringList Table TableRow XML ' +
              // Java keywords
              'false synchronized int abstract float private char boolean static null if const ' +
              'for true while long throw strictfp finally protected import native final return void ' +
              'enum else break transient new catch instanceof byte super volatile case assert short ' +
              'package default double public try this switch continue throws protected public private',
            literal: 'P2D P3D HALF_PI PI QUARTER_PI TAU TWO_PI',
            title: 'setup draw',
            built_in:
              'displayHeight displayWidth mouseY mouseX mousePressed pmouseX pmouseY key ' +
              'keyCode pixels focused frameCount frameRate height width ' +
              'size createGraphics beginDraw createShape loadShape PShape arc ellipse line point ' +
              'quad rect triangle bezier bezierDetail bezierPoint bezierTangent curve curveDetail curvePoint ' +
              'curveTangent curveTightness shape shapeMode beginContour beginShape bezierVertex curveVertex ' +
              'endContour endShape quadraticVertex vertex ellipseMode noSmooth rectMode smooth strokeCap ' +
              'strokeJoin strokeWeight mouseClicked mouseDragged mouseMoved mousePressed mouseReleased ' +
              'mouseWheel keyPressed keyPressedkeyReleased keyTyped print println save saveFrame day hour ' +
              'millis minute month second year background clear colorMode fill noFill noStroke stroke alpha ' +
              'blue brightness color green hue lerpColor red saturation modelX modelY modelZ screenX screenY ' +
              'screenZ ambient emissive shininess specular add createImage beginCamera camera endCamera frustum ' +
              'ortho perspective printCamera printProjection cursor frameRate noCursor exit loop noLoop popStyle ' +
              'pushStyle redraw binary boolean byte char float hex int str unbinary unhex join match matchAll nf ' +
              'nfc nfp nfs split splitTokens trim append arrayCopy concat expand reverse shorten sort splice subset ' +
              'box sphere sphereDetail createInput createReader loadBytes loadJSONArray loadJSONObject loadStrings ' +
              'loadTable loadXML open parseXML saveTable selectFolder selectInput beginRaw beginRecord createOutput ' +
              'createWriter endRaw endRecord PrintWritersaveBytes saveJSONArray saveJSONObject saveStream saveStrings ' +
              'saveXML selectOutput popMatrix printMatrix pushMatrix resetMatrix rotate rotateX rotateY rotateZ scale ' +
              'shearX shearY translate ambientLight directionalLight lightFalloff lights lightSpecular noLights normal ' +
              'pointLight spotLight image imageMode loadImage noTint requestImage tint texture textureMode textureWrap ' +
              'blend copy filter get loadPixels set updatePixels blendMode loadShader PShaderresetShader shader createFont ' +
              'loadFont text textFont textAlign textLeading textMode textSize textWidth textAscent textDescent abs ceil ' +
              'constrain dist exp floor lerp log mag map max min norm pow round sq sqrt acos asin atan atan2 cos degrees ' +
              'radians sin tan noise noiseDetail noiseSeed random randomGaussian randomSeed'
          },
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 478 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            hljs.C_NUMBER_MODE,
            {
              begin: '[a-zA-Z_][\\da-zA-Z_]+\\.[\\da-zA-Z_]{1,3}',
              end: ':',
              excludeEnd: true
            },
            {
              begin: '(ncalls|tottime|cumtime)',
              end: '$',
              keywords: 'ncalls tottime|10 cumtime|10 filename',
              relevance: 10
            },
            {
              begin: 'function calls',
              end: '$',
              contains: [hljs.C_NUMBER_MODE],
              relevance: 10
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: 'string',
              begin: '\\(',
              end: '\\)$',
              excludeBegin: true,
              excludeEnd: true,
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 479 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var ATOM = {
          begin: /[a-z][A-Za-z0-9_]*/,
          relevance: 0
        };

        var VAR = {
          className: 'symbol',
          variants: [
            { begin: /[A-Z][a-zA-Z0-9_]*/ },
            { begin: /_[A-Za-z0-9_]*/ }
          ],
          relevance: 0
        };

        var PARENTED = {
          begin: /\(/,
          end: /\)/,
          relevance: 0
        };

        var LIST = {
          begin: /\[/,
          end: /\]/
        };

        var LINE_COMMENT = {
          className: 'comment',
          begin: /%/,
          end: /$/,
          contains: [hljs.PHRASAL_WORDS_MODE]
        };

        var BACKTICK_STRING = {
          className: 'string',
          begin: /`/,
          end: /`/,
          contains: [hljs.BACKSLASH_ESCAPE]
        };

        var CHAR_CODE = {
          className: 'string', // 0'a etc.
          begin: /0\'(\\\'|.)/
        };

        var SPACE_CODE = {
          className: 'string',
          begin: /0\'\\s/ // 0'\s
        };

        var PRED_OP = {
          // relevance booster
          begin: /:-/
        };

        var inner = [
          ATOM,
          VAR,
          PARENTED,
          PRED_OP,
          LIST,
          LINE_COMMENT,
          hljs.C_BLOCK_COMMENT_MODE,
          hljs.QUOTE_STRING_MODE,
          hljs.APOS_STRING_MODE,
          BACKTICK_STRING,
          CHAR_CODE,
          SPACE_CODE,
          hljs.C_NUMBER_MODE
        ];

        PARENTED.contains = inner;
        LIST.contains = inner;

        return {
          contains: inner.concat([
            { begin: /\.$/ } // relevance booster
          ])
        };
      };

      /***/
    },
    /* 480 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        // whitespaces: space, tab, formfeed
        var WS0 = '[ \\t\\f]*';
        var WS1 = '[ \\t\\f]+';
        // delimiter
        var DELIM = '(' + WS0 + '[:=]' + WS0 + '|' + WS1 + ')';
        var KEY_ALPHANUM = '([^\\\\\\W:= \\t\\f\\n]|\\\\.)+';
        var KEY_OTHER = '([^\\\\:= \\t\\f\\n]|\\\\.)+';

        var DELIM_AND_VALUE = {
          // skip DELIM
          end: DELIM,
          relevance: 0,
          starts: {
            // value: everything until end of line (again, taking into account backslashes)
            className: 'string',
            end: /$/,
            relevance: 0,
            contains: [{ begin: '\\\\\\n' }]
          }
        };

        return {
          case_insensitive: true,
          illegal: /\S/,
          contains: [
            hljs.COMMENT('^\\s*[!#]', '$'),
            // key: everything until whitespace or = or : (taking into account backslashes)
            // case of a "normal" key
            {
              begin: KEY_ALPHANUM + DELIM,
              returnBegin: true,
              contains: [
                {
                  className: 'attr',
                  begin: KEY_ALPHANUM,
                  endsParent: true,
                  relevance: 0
                }
              ],
              starts: DELIM_AND_VALUE
            },
            // case of key containing non-alphanumeric chars => relevance = 0
            {
              begin: KEY_OTHER + DELIM,
              returnBegin: true,
              relevance: 0,
              contains: [
                {
                  className: 'meta',
                  begin: KEY_OTHER,
                  endsParent: true,
                  relevance: 0
                }
              ],
              starts: DELIM_AND_VALUE
            },
            // case of an empty key
            {
              className: 'attr',
              relevance: 0,
              begin: KEY_OTHER + WS0 + '$'
            }
          ]
        };
      };

      /***/
    },
    /* 481 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            keyword:
              'package import option optional required repeated group oneof',
            built_in:
              'double float int32 int64 uint32 uint64 sint32 sint64 ' +
              'fixed32 fixed64 sfixed32 sfixed64 bool string bytes',
            literal: 'true false'
          },
          contains: [
            hljs.QUOTE_STRING_MODE,
            hljs.NUMBER_MODE,
            hljs.C_LINE_COMMENT_MODE,
            {
              className: 'class',
              beginKeywords: 'message enum service',
              end: /\{/,
              illegal: /\n/,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  starts: { endsWithParent: true, excludeEnd: true } // hack: eating everything after the first title
                })
              ]
            },
            {
              className: 'function',
              beginKeywords: 'rpc',
              end: /;/,
              excludeEnd: true,
              keywords: 'rpc returns'
            },
            {
              begin: /^\s*[A-Z_]+/,
              end: /\s*=/,
              excludeEnd: true
            }
          ]
        };
      };

      /***/
    },
    /* 482 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var PUPPET_KEYWORDS = {
          keyword:
            /* language keywords */
            'and case default else elsif false if in import enherits node or true undef unless main settings $string ',
          literal:
            /* metaparameters */
            'alias audit before loglevel noop require subscribe tag ' +
            /* normal attributes */
            'owner ensure group mode name|0 changes context force incl lens load_path onlyif provider returns root show_diff type_check ' +
            'en_address ip_address realname command environment hour monute month monthday special target weekday ' +
            'creates cwd ogoutput refresh refreshonly tries try_sleep umask backup checksum content ctime force ignore ' +
            'links mtime purge recurse recurselimit replace selinux_ignore_defaults selrange selrole seltype seluser source ' +
            'souirce_permissions sourceselect validate_cmd validate_replacement allowdupe attribute_membership auth_membership forcelocal gid ' +
            'ia_load_module members system host_aliases ip allowed_trunk_vlans description device_url duplex encapsulation etherchannel ' +
            'native_vlan speed principals allow_root auth_class auth_type authenticate_user k_of_n mechanisms rule session_owner shared options ' +
            'device fstype enable hasrestart directory present absent link atboot blockdevice device dump pass remounts poller_tag use ' +
            'message withpath adminfile allow_virtual allowcdrom category configfiles flavor install_options instance package_settings platform ' +
            'responsefile status uninstall_options vendor unless_system_user unless_uid binary control flags hasstatus manifest pattern restart running ' +
            'start stop allowdupe auths expiry gid groups home iterations key_membership keys managehome membership password password_max_age ' +
            'password_min_age profile_membership profiles project purge_ssh_keys role_membership roles salt shell uid baseurl cost descr enabled ' +
            'enablegroups exclude failovermethod gpgcheck gpgkey http_caching include includepkgs keepalive metadata_expire metalink mirrorlist ' +
            'priority protect proxy proxy_password proxy_username repo_gpgcheck s3_enabled skip_if_unavailable sslcacert sslclientcert sslclientkey ' +
            'sslverify mounted',
          built_in:
            /* core facts */
            'architecture augeasversion blockdevices boardmanufacturer boardproductname boardserialnumber cfkey dhcp_servers ' +
            'domain ec2_ ec2_userdata facterversion filesystems ldom fqdn gid hardwareisa hardwaremodel hostname id|0 interfaces ' +
            'ipaddress ipaddress_ ipaddress6 ipaddress6_ iphostnumber is_virtual kernel kernelmajversion kernelrelease kernelversion ' +
            'kernelrelease kernelversion lsbdistcodename lsbdistdescription lsbdistid lsbdistrelease lsbmajdistrelease lsbminordistrelease ' +
            'lsbrelease macaddress macaddress_ macosx_buildversion macosx_productname macosx_productversion macosx_productverson_major ' +
            'macosx_productversion_minor manufacturer memoryfree memorysize netmask metmask_ network_ operatingsystem operatingsystemmajrelease ' +
            'operatingsystemrelease osfamily partitions path physicalprocessorcount processor processorcount productname ps puppetversion ' +
            'rubysitedir rubyversion selinux selinux_config_mode selinux_config_policy selinux_current_mode selinux_current_mode selinux_enforced ' +
            'selinux_policyversion serialnumber sp_ sshdsakey sshecdsakey sshrsakey swapencrypted swapfree swapsize timezone type uniqueid uptime ' +
            'uptime_days uptime_hours uptime_seconds uuid virtual vlans xendomains zfs_version zonenae zones zpool_version'
        };

        var COMMENT = hljs.COMMENT('#', '$');

        var IDENT_RE = '([A-Za-z_]|::)(\\w|::)*';

        var TITLE = hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE });

        var VARIABLE = { className: 'variable', begin: '\\$' + IDENT_RE };

        var STRING = {
          className: 'string',
          contains: [hljs.BACKSLASH_ESCAPE, VARIABLE],
          variants: [{ begin: /'/, end: /'/ }, { begin: /"/, end: /"/ }]
        };

        return {
          aliases: ['pp'],
          contains: [
            COMMENT,
            VARIABLE,
            STRING,
            {
              beginKeywords: 'class',
              end: '\\{|;',
              illegal: /=/,
              contains: [TITLE, COMMENT]
            },
            {
              beginKeywords: 'define',
              end: /\{/,
              contains: [
                {
                  className: 'section',
                  begin: hljs.IDENT_RE,
                  endsParent: true
                }
              ]
            },
            {
              begin: hljs.IDENT_RE + '\\s+\\{',
              returnBegin: true,
              end: /\S/,
              contains: [
                {
                  className: 'keyword',
                  begin: hljs.IDENT_RE
                },
                {
                  begin: /\{/,
                  end: /\}/,
                  keywords: PUPPET_KEYWORDS,
                  relevance: 0,
                  contains: [
                    STRING,
                    COMMENT,
                    {
                      begin: '[a-zA-Z_]+\\s*=>',
                      returnBegin: true,
                      end: '=>',
                      contains: [
                        {
                          className: 'attr',
                          begin: hljs.IDENT_RE
                        }
                      ]
                    },
                    {
                      className: 'number',
                      begin:
                        '(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b',
                      relevance: 0
                    },
                    VARIABLE
                  ]
                }
              ],
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 483 */
    /***/ function(module, exports) {
      module.exports = function(hljs) { // Base deafult colors in PB IDE: background: #FFFFDF; foreground: #000000;
        var STRINGS = {
          // PB IDE color: #0080FF (Azure Radiance)
          className: 'string',
          begin: '(~)?"',
          end: '"',
          illegal: '\\n'
        };
        var CONSTANTS = {
          // PB IDE color: #924B72 (Cannon Pink)
          //  "#" + a letter or underscore + letters, digits or underscores + (optional) "$"
          className: 'symbol',
          begin: '#[a-zA-Z_]\\w*\\$?'
        };

        return {
          aliases: ['pb', 'pbi'],
          // PB IDE color: #006666 (Blue Stone) + Bold
          keywords:
            // The following keywords list was taken and adapted from GuShH's PureBasic language file for GeSHi...
            'And As Break CallDebugger Case CompilerCase CompilerDefault CompilerElse CompilerEndIf CompilerEndSelect ' +
            'CompilerError CompilerIf CompilerSelect Continue Data DataSection EndDataSection Debug DebugLevel ' +
            'Default Define Dim DisableASM DisableDebugger DisableExplicit Else ElseIf EnableASM ' +
            'EnableDebugger EnableExplicit End EndEnumeration EndIf EndImport EndInterface EndMacro EndProcedure ' +
            'EndSelect EndStructure EndStructureUnion EndWith Enumeration Extends FakeReturn For Next ForEach ' +
            'ForEver Global Gosub Goto If Import ImportC IncludeBinary IncludeFile IncludePath Interface Macro ' +
            'NewList Not Or ProcedureReturn Protected Prototype ' +
            'PrototypeC Read ReDim Repeat Until Restore Return Select Shared Static Step Structure StructureUnion ' +
            'Swap To Wend While With XIncludeFile XOr ' +
            'Procedure ProcedureC ProcedureCDLL ProcedureDLL Declare DeclareC DeclareCDLL DeclareDLL',
          contains: [
            // COMMENTS | PB IDE color: #00AAAA (Persian Green)
            hljs.COMMENT(';', '$', { relevance: 0 }),

            {
              // PROCEDURES DEFINITIONS
              className: 'function',
              begin: '\\b(Procedure|Declare)(C|CDLL|DLL)?\\b',
              end: '\\(',
              excludeEnd: true,
              returnBegin: true,
              contains: [
                {
                  // PROCEDURE KEYWORDS | PB IDE color: #006666 (Blue Stone) + Bold
                  className: 'keyword',
                  begin: '(Procedure|Declare)(C|CDLL|DLL)?',
                  excludeEnd: true
                },
                {
                  // PROCEDURE RETURN TYPE SETTING | PB IDE color: #000000 (Black)
                  className: 'type',
                  begin: '\\.\\w*'
                  // end: ' ',
                },
                hljs.UNDERSCORE_TITLE_MODE // PROCEDURE NAME | PB IDE color: #006666 (Blue Stone)
              ]
            },
            STRINGS,
            CONSTANTS
          ]
        };
      };

      /***/
    },
    /* 484 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            'and elif is global as in if from raise for except finally print import pass return ' +
            'exec else break not with class assert yield try while continue del or def lambda ' +
            'async await nonlocal|10 None True False',
          built_in: 'Ellipsis NotImplemented'
        };
        var PROMPT = {
          className: 'meta',
          begin: /^(>>>|\.\.\.) /
        };
        var SUBST = {
          className: 'subst',
          begin: /\{/,
          end: /\}/,
          keywords: KEYWORDS,
          illegal: /#/
        };
        var STRING = {
          className: 'string',
          contains: [hljs.BACKSLASH_ESCAPE],
          variants: [
            {
              begin: /(u|b)?r?'''/,
              end: /'''/,
              contains: [hljs.BACKSLASH_ESCAPE, PROMPT],
              relevance: 10
            },
            {
              begin: /(u|b)?r?"""/,
              end: /"""/,
              contains: [hljs.BACKSLASH_ESCAPE, PROMPT],
              relevance: 10
            },
            {
              begin: /(fr|rf|f)'''/,
              end: /'''/,
              contains: [hljs.BACKSLASH_ESCAPE, PROMPT, SUBST]
            },
            {
              begin: /(fr|rf|f)"""/,
              end: /"""/,
              contains: [hljs.BACKSLASH_ESCAPE, PROMPT, SUBST]
            },
            {
              begin: /(u|r|ur)'/,
              end: /'/,
              relevance: 10
            },
            {
              begin: /(u|r|ur)"/,
              end: /"/,
              relevance: 10
            },
            {
              begin: /(b|br)'/,
              end: /'/
            },
            {
              begin: /(b|br)"/,
              end: /"/
            },
            {
              begin: /(fr|rf|f)'/,
              end: /'/,
              contains: [hljs.BACKSLASH_ESCAPE, SUBST]
            },
            {
              begin: /(fr|rf|f)"/,
              end: /"/,
              contains: [hljs.BACKSLASH_ESCAPE, SUBST]
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE
          ]
        };
        var NUMBER = {
          className: 'number',
          relevance: 0,
          variants: [
            { begin: hljs.BINARY_NUMBER_RE + '[lLjJ]?' },
            { begin: '\\b(0o[0-7]+)[lLjJ]?' },
            { begin: hljs.C_NUMBER_RE + '[lLjJ]?' }
          ]
        };
        var PARAMS = {
          className: 'params',
          begin: /\(/,
          end: /\)/,
          contains: ['self', PROMPT, NUMBER, STRING]
        };
        SUBST.contains = [STRING, NUMBER, PROMPT];
        return {
          aliases: ['py', 'gyp'],
          keywords: KEYWORDS,
          illegal: /(<\/|->|\?)|=>/,
          contains: [
            PROMPT,
            NUMBER,
            STRING,
            hljs.HASH_COMMENT_MODE,
            {
              variants: [
                { className: 'function', beginKeywords: 'def' },
                { className: 'class', beginKeywords: 'class' }
              ],
              end: /:/,
              illegal: /[${=;\n,]/,
              contains: [
                hljs.UNDERSCORE_TITLE_MODE,
                PARAMS,
                {
                  begin: /->/,
                  endsWithParent: true,
                  keywords: 'None'
                }
              ]
            },
            {
              className: 'meta',
              begin: /^[\t ]*@/,
              end: /$/
            },
            {
              begin: /\b(print|exec)\(/ // don’t highlight keywords-turned-functions in Python 3
            }
          ]
        };
      };

      /***/
    },
    /* 485 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var Q_KEYWORDS = {
          keyword: 'do while select delete by update from',
          literal: '0b 1b',
          built_in:
            'neg not null string reciprocal floor ceiling signum mod xbar xlog and or each scan over prior mmu lsq inv md5 ltime gtime count first var dev med cov cor all any rand sums prds mins maxs fills deltas ratios avgs differ prev next rank reverse iasc idesc asc desc msum mcount mavg mdev xrank mmin mmax xprev rotate distinct group where flip type key til get value attr cut set upsert raze union inter except cross sv vs sublist enlist read0 read1 hopen hclose hdel hsym hcount peach system ltrim rtrim trim lower upper ssr view tables views cols xcols keys xkey xcol xasc xdesc fkeys meta lj aj aj0 ij pj asof uj ww wj wj1 fby xgroup ungroup ej save load rsave rload show csv parse eval min max avg wavg wsum sin cos tan sum',
          type:
            '`float `double int `timestamp `timespan `datetime `time `boolean `symbol `char `byte `short `long `real `month `date `minute `second `guid'
        };
        return {
          aliases: ['k', 'kdb'],
          keywords: Q_KEYWORDS,
          lexemes: /(`?)[A-Za-z0-9_]+\b/,
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 486 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS = {
          keyword:
            'in of on if for while finally var new function do return void else break catch ' +
            'instanceof with throw case default try this switch continue typeof delete ' +
            'let yield const export super debugger as async await import',
          literal: 'true false null undefined NaN Infinity',
          built_in:
            'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +
            'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +
            'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +
            'TypeError URIError Number Math Date String RegExp Array Float32Array ' +
            'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +
            'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +
            'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +
            'Behavior bool color coordinate date double enumeration font geocircle georectangle ' +
            'geoshape int list matrix4x4 parent point quaternion real rect ' +
            'size string url variant vector2d vector3d vector4d' +
            'Promise'
        };

        var QML_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9\\._]*';

        // Isolate property statements. Ends at a :, =, ;, ,, a comment or end of line.
        // Use property class.
        var PROPERTY = {
          className: 'keyword',
          begin: '\\bproperty\\b',
          starts: {
            className: 'string',
            end: '(:|=|;|,|//|/\\*|$)',
            returnEnd: true
          }
        };

        // Isolate signal statements. Ends at a ) a comment or end of line.
        // Use property class.
        var SIGNAL = {
          className: 'keyword',
          begin: '\\bsignal\\b',
          starts: {
            className: 'string',
            end: '(\\(|:|=|;|,|//|/\\*|$)',
            returnEnd: true
          }
        };

        // id: is special in QML. When we see id: we want to mark the id: as attribute and
        // emphasize the token following.
        var ID_ID = {
          className: 'attribute',
          begin: '\\bid\\s*:',
          starts: {
            className: 'string',
            end: QML_IDENT_RE,
            returnEnd: false
          }
        };

        // Find QML object attribute. An attribute is a QML identifier followed by :.
        // Unfortunately it's hard to know where it ends, as it may contain scalars,
        // objects, object definitions, or javascript. The true end is either when the parent
        // ends or the next attribute is detected.
        var QML_ATTRIBUTE = {
          begin: QML_IDENT_RE + '\\s*:',
          returnBegin: true,
          contains: [
            {
              className: 'attribute',
              begin: QML_IDENT_RE,
              end: '\\s*:',
              excludeEnd: true,
              relevance: 0
            }
          ],
          relevance: 0
        };

        // Find QML object. A QML object is a QML identifier followed by { and ends at the matching }.
        // All we really care about is finding IDENT followed by { and just mark up the IDENT and ignore the {.
        var QML_OBJECT = {
          begin: QML_IDENT_RE + '\\s*{',
          end: '{',
          returnBegin: true,
          relevance: 0,
          contains: [hljs.inherit(hljs.TITLE_MODE, { begin: QML_IDENT_RE })]
        };

        return {
          aliases: ['qt'],
          case_insensitive: false,
          keywords: KEYWORDS,
          contains: [
            {
              className: 'meta',
              begin: /^\s*['"]use (strict|asm)['"]/
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              // template string
              className: 'string',
              begin: '`',
              end: '`',
              contains: [
                hljs.BACKSLASH_ESCAPE,
                {
                  className: 'subst',
                  begin: '\\$\\{',
                  end: '\\}'
                }
              ]
            },
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: 'number',
              variants: [
                { begin: '\\b(0[bB][01]+)' },
                { begin: '\\b(0[oO][0-7]+)' },
                { begin: hljs.C_NUMBER_RE }
              ],
              relevance: 0
            },
            {
              // "value" container
              begin:
                '(' + hljs.RE_STARTERS_RE + '|\\b(case|return|throw)\\b)\\s*',
              keywords: 'return throw case',
              contains: [
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                hljs.REGEXP_MODE,
                {
                  // E4X / JSX
                  begin: /</,
                  end: />\s*[);\]]/,
                  relevance: 0,
                  subLanguage: 'xml'
                }
              ],
              relevance: 0
            },
            SIGNAL,
            PROPERTY,
            {
              className: 'function',
              beginKeywords: 'function',
              end: /\{/,
              excludeEnd: true,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  begin: /[A-Za-z$_][0-9A-Za-z$_]*/
                }),
                {
                  className: 'params',
                  begin: /\(/,
                  end: /\)/,
                  excludeBegin: true,
                  excludeEnd: true,
                  contains: [
                    hljs.C_LINE_COMMENT_MODE,
                    hljs.C_BLOCK_COMMENT_MODE
                  ]
                }
              ],
              illegal: /\[|%/
            },
            {
              begin: '\\.' + hljs.IDENT_RE,
              relevance: 0 // hack: prevents detection of keywords after dots
            },
            ID_ID,
            QML_ATTRIBUTE,
            QML_OBJECT
          ],
          illegal: /#/
        };
      };

      /***/
    },
    /* 487 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENT_RE = '([a-zA-Z]|\\.[a-zA-Z.])[a-zA-Z0-9._]*';

        return {
          contains: [
            hljs.HASH_COMMENT_MODE,
            {
              begin: IDENT_RE,
              lexemes: IDENT_RE,
              keywords: {
                keyword:
                  'function if in break next repeat else for return switch while try tryCatch ' +
                  'stop warning require library attach detach source setMethod setGeneric ' +
                  'setGroupGeneric setClass ...',
                literal:
                  'NULL NA TRUE FALSE T F Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 ' +
                  'NA_complex_|10'
              },
              relevance: 0
            },
            {
              // hex value
              className: 'number',
              begin: '0[xX][0-9a-fA-F]+[Li]?\\b',
              relevance: 0
            },
            {
              // explicit integer
              className: 'number',
              begin: '\\d+(?:[eE][+\\-]?\\d*)?L\\b',
              relevance: 0
            },
            {
              // number with trailing decimal
              className: 'number',
              begin: '\\d+\\.(?!\\d)(?:i\\b)?',
              relevance: 0
            },
            {
              // number
              className: 'number',
              begin: '\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d*)?i?\\b',
              relevance: 0
            },
            {
              // number with leading decimal
              className: 'number',
              begin: '\\.\\d+(?:[eE][+\\-]?\\d*)?i?\\b',
              relevance: 0
            },

            {
              // escaped identifier
              begin: '`',
              end: '`',
              relevance: 0
            },

            {
              className: 'string',
              contains: [hljs.BACKSLASH_ESCAPE],
              variants: [{ begin: '"', end: '"' }, { begin: "'", end: "'" }]
            }
          ]
        };
      };

      /***/
    },
    /* 488 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        function orReValues(ops) {
          return ops
            .map(function(op) {
              return op
                .split('')
                .map(function(char) {
                  return '\\' + char;
                })
                .join('');
            })
            .join('|');
        }

        var RE_IDENT = '~?[a-z$_][0-9a-zA-Z$_]*';
        var RE_MODULE_IDENT = '`?[A-Z$_][0-9a-zA-Z$_]*';

        var RE_PARAM_TYPEPARAM = "'?[a-z$_][0-9a-z$_]*";
        var RE_PARAM_TYPE =
          's*:s*[a-z$_][0-9a-z$_]*((s*(' +
          RE_PARAM_TYPEPARAM +
          's*(,' +
          RE_PARAM_TYPEPARAM +
          ')*)?s*))?';
        var RE_PARAM =
          RE_IDENT + '(' + RE_PARAM_TYPE + ')?(' + RE_PARAM_TYPE + ')?';
        var RE_OPERATOR =
          '(' +
          orReValues([
            '||',
            '&&',
            '++',
            '**',
            '+.',
            '*',
            '/',
            '*.',
            '/.',
            '...',
            '|>'
          ]) +
          '|==|===)';
        var RE_OPERATOR_SPACED = '\\s+' + RE_OPERATOR + '\\s+';

        var KEYWORDS = {
          keyword:
            'and as asr assert begin class constraint do done downto else end exception external' +
            'for fun function functor if in include inherit initializer' +
            'land lazy let lor lsl lsr lxor match method mod module mutable new nonrec' +
            'object of open or private rec sig struct then to try type val virtual when while with',
          built_in:
            'array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 ref string unit ',
          literal: 'true false'
        };

        var RE_NUMBER =
          '\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +
          '0[oO][0-7_]+[Lln]?|' +
          '0[bB][01_]+[Lln]?|' +
          '[0-9][0-9_]*([Lln]|(\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)';

        var NUMBER_MODE = {
          className: 'number',
          relevance: 0,
          variants: [
            {
              begin: RE_NUMBER
            },
            {
              begin: '\\(\\-' + RE_NUMBER + '\\)'
            }
          ]
        };

        var OPERATOR_MODE = {
          className: 'operator',
          relevance: 0,
          begin: RE_OPERATOR
        };
        var LIST_CONTENTS_MODES = [
          {
            className: 'identifier',
            relevance: 0,
            begin: RE_IDENT
          },
          OPERATOR_MODE,
          NUMBER_MODE
        ];

        var MODULE_ACCESS_CONTENTS = [
          hljs.QUOTE_STRING_MODE,
          OPERATOR_MODE,
          {
            className: 'module',
            begin: '\\b' + RE_MODULE_IDENT,
            returnBegin: true,
            end: '.',
            contains: [
              {
                className: 'identifier',
                begin: RE_MODULE_IDENT,
                relevance: 0
              }
            ]
          }
        ];

        var PARAMS_CONTENTS = [
          {
            className: 'module',
            begin: '\\b' + RE_MODULE_IDENT,
            returnBegin: true,
            end: '.',
            relevance: 0,
            contains: [
              {
                className: 'identifier',
                begin: RE_MODULE_IDENT,
                relevance: 0
              }
            ]
          }
        ];

        var PARAMS_MODE = {
          begin: RE_IDENT,
          end: '(,|\\n|\\))',
          relevance: 0,
          contains: [
            OPERATOR_MODE,
            {
              className: 'typing',
              begin: ':',
              end: '(,|\\n)',
              returnBegin: true,
              relevance: 0,
              contains: PARAMS_CONTENTS
            }
          ]
        };

        var FUNCTION_BLOCK_MODE = {
          className: 'function',
          relevance: 0,
          keywords: KEYWORDS,
          variants: [
            {
              begin: '\\s(\\(\\.?.*?\\)|' + RE_IDENT + ')\\s*=>',
              end: '\\s*=>',
              returnBegin: true,
              relevance: 0,
              contains: [
                {
                  className: 'params',
                  variants: [
                    {
                      begin: RE_IDENT
                    },
                    {
                      begin: RE_PARAM
                    },
                    {
                      begin: /\(\s*\)/
                    }
                  ]
                }
              ]
            },
            {
              begin: '\\s\\(\\.?[^;\\|]*\\)\\s*=>',
              end: '\\s=>',
              returnBegin: true,
              relevance: 0,
              contains: [
                {
                  className: 'params',
                  relevance: 0,
                  variants: [PARAMS_MODE]
                }
              ]
            },
            {
              begin: '\\(\\.\\s' + RE_IDENT + '\\)\\s*=>'
            }
          ]
        };
        MODULE_ACCESS_CONTENTS.push(FUNCTION_BLOCK_MODE);

        var CONSTRUCTOR_MODE = {
          className: 'constructor',
          begin: RE_MODULE_IDENT + '\\(',
          end: '\\)',
          illegal: '\\n',
          keywords: KEYWORDS,
          contains: [
            hljs.QUOTE_STRING_MODE,
            OPERATOR_MODE,
            {
              className: 'params',
              begin: '\\b' + RE_IDENT
            }
          ]
        };

        var PATTERN_MATCH_BLOCK_MODE = {
          className: 'pattern-match',
          begin: '\\|',
          returnBegin: true,
          keywords: KEYWORDS,
          end: '=>',
          relevance: 0,
          contains: [
            CONSTRUCTOR_MODE,
            OPERATOR_MODE,
            {
              relevance: 0,
              className: 'constructor',
              begin: RE_MODULE_IDENT
            }
          ]
        };

        var MODULE_ACCESS_MODE = {
          className: 'module-access',
          keywords: KEYWORDS,
          returnBegin: true,
          variants: [
            {
              begin: '\\b(' + RE_MODULE_IDENT + '\\.)+' + RE_IDENT
            },
            {
              begin: '\\b(' + RE_MODULE_IDENT + '\\.)+\\(',
              end: '\\)',
              returnBegin: true,
              contains: [
                FUNCTION_BLOCK_MODE,
                {
                  begin: '\\(',
                  end: '\\)',
                  skip: true
                }
              ].concat(MODULE_ACCESS_CONTENTS)
            },
            {
              begin: '\\b(' + RE_MODULE_IDENT + '\\.)+{',
              end: '}'
            }
          ],
          contains: MODULE_ACCESS_CONTENTS
        };

        PARAMS_CONTENTS.push(MODULE_ACCESS_MODE);

        return {
          aliases: ['re'],
          keywords: KEYWORDS,
          illegal: '(:\\-|:=|\\${|\\+=)',
          contains: [
            hljs.COMMENT('/\\*', '\\*/', { illegal: '^(\\#,\\/\\/)' }),
            {
              className: 'character',
              begin: "'(\\\\[^']+|[^'])'",
              illegal: '\\n',
              relevance: 0
            },
            hljs.QUOTE_STRING_MODE,
            {
              className: 'literal',
              begin: '\\(\\)',
              relevance: 0
            },
            {
              className: 'literal',
              begin: '\\[\\|',
              end: '\\|\\]',
              relevance: 0,
              contains: LIST_CONTENTS_MODES
            },
            {
              className: 'literal',
              begin: '\\[',
              end: '\\]',
              relevance: 0,
              contains: LIST_CONTENTS_MODES
            },
            CONSTRUCTOR_MODE,
            {
              className: 'operator',
              begin: RE_OPERATOR_SPACED,
              illegal: '\\-\\->',
              relevance: 0
            },
            NUMBER_MODE,
            hljs.C_LINE_COMMENT_MODE,
            PATTERN_MATCH_BLOCK_MODE,
            FUNCTION_BLOCK_MODE,
            {
              className: 'module-def',
              begin:
                '\\bmodule\\s+' +
                RE_IDENT +
                '\\s+' +
                RE_MODULE_IDENT +
                '\\s+=\\s+{',
              end: '}',
              returnBegin: true,
              keywords: KEYWORDS,
              relevance: 0,
              contains: [
                {
                  className: 'module',
                  relevance: 0,
                  begin: RE_MODULE_IDENT
                },
                {
                  begin: '{',
                  end: '}',
                  skip: true
                }
              ].concat(MODULE_ACCESS_CONTENTS)
            },
            MODULE_ACCESS_MODE
          ]
        };
      };

      /***/
    },
    /* 489 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords:
            'ArchiveRecord AreaLightSource Atmosphere Attribute AttributeBegin AttributeEnd Basis ' +
            'Begin Blobby Bound Clipping ClippingPlane Color ColorSamples ConcatTransform Cone ' +
            'CoordinateSystem CoordSysTransform CropWindow Curves Cylinder DepthOfField Detail ' +
            'DetailRange Disk Displacement Display End ErrorHandler Exposure Exterior Format ' +
            'FrameAspectRatio FrameBegin FrameEnd GeneralPolygon GeometricApproximation Geometry ' +
            'Hider Hyperboloid Identity Illuminate Imager Interior LightSource ' +
            'MakeCubeFaceEnvironment MakeLatLongEnvironment MakeShadow MakeTexture Matte ' +
            'MotionBegin MotionEnd NuPatch ObjectBegin ObjectEnd ObjectInstance Opacity Option ' +
            'Orientation Paraboloid Patch PatchMesh Perspective PixelFilter PixelSamples ' +
            'PixelVariance Points PointsGeneralPolygons PointsPolygons Polygon Procedural Projection ' +
            'Quantize ReadArchive RelativeDetail ReverseOrientation Rotate Scale ScreenWindow ' +
            'ShadingInterpolation ShadingRate Shutter Sides Skew SolidBegin SolidEnd Sphere ' +
            'SubdivisionMesh Surface TextureCoordinates Torus Transform TransformBegin TransformEnd ' +
            'TransformPoints Translate TrimCurve WorldBegin WorldEnd',
          illegal: '</',
          contains: [
            hljs.HASH_COMMENT_MODE,
            hljs.C_NUMBER_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE
          ]
        };
      };

      /***/
    },
    /* 490 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENTIFIER = '[a-zA-Z-_][^\\n{]+\\{';

        var PROPERTY = {
          className: 'attribute',
          begin: /[a-zA-Z-_]+/,
          end: /\s*:/,
          excludeEnd: true,
          starts: {
            end: ';',
            relevance: 0,
            contains: [
              {
                className: 'variable',
                begin: /\.[a-zA-Z-_]+/
              },
              {
                className: 'keyword',
                begin: /\(optional\)/
              }
            ]
          }
        };

        return {
          aliases: ['graph', 'instances'],
          case_insensitive: true,
          keywords: 'import',
          contains: [
            // Facet sections
            {
              begin: '^facet ' + IDENTIFIER,
              end: '}',
              keywords: 'facet',
              contains: [PROPERTY, hljs.HASH_COMMENT_MODE]
            },

            // Instance sections
            {
              begin: '^\\s*instance of ' + IDENTIFIER,
              end: '}',
              keywords:
                'name count channels instance-data instance-state instance of',
              illegal: /\S/,
              contains: ['self', PROPERTY, hljs.HASH_COMMENT_MODE]
            },

            // Component sections
            {
              begin: '^' + IDENTIFIER,
              end: '}',
              contains: [PROPERTY, hljs.HASH_COMMENT_MODE]
            },

            // Comments
            hljs.HASH_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 491 */
    /***/ function(module, exports) {
      module.exports = // Colors from RouterOS terminal:
        //   green        - #0E9A00
        //   teal         - #0C9A9A
        //   purple       - #99069A
        //   light-brown  - #9A9900

        function(hljs) {
          var STATEMENTS =
            'foreach do while for if from to step else on-error and or not in';

          // Global commands: Every global command should start with ":" token, otherwise it will be treated as variable.
          var GLOBAL_COMMANDS =
            'global local beep delay put len typeof pick log time set find environment terminal error execute parse resolve toarray tobool toid toip toip6 tonum tostr totime';

          // Common commands: Following commands available from most sub-menus:
          var COMMON_COMMANDS =
            'add remove enable disable set get print export edit find run debug error info warning';

          var LITERALS = 'true false yes no nothing nil null';

          var OBJECTS =
            'traffic-flow traffic-generator firewall scheduler aaa accounting address-list address align area bandwidth-server bfd bgp bridge client clock community config connection console customer default dhcp-client dhcp-server discovery dns e-mail ethernet filter firewall firmware gps graphing group hardware health hotspot identity igmp-proxy incoming instance interface ip ipsec ipv6 irq l2tp-server lcd ldp logging mac-server mac-winbox mangle manual mirror mme mpls nat nd neighbor network note ntp ospf ospf-v3 ovpn-server page peer pim ping policy pool port ppp pppoe-client pptp-server prefix profile proposal proxy queue radius resource rip ripng route routing screen script security-profiles server service service-port settings shares smb sms sniffer snmp snooper socks sstp-server system tool tracking type upgrade upnp user-manager users user vlan secret vrrp watchdog web-access wireless pptp pppoe lan wan layer7-protocol lease simple raw';

          // print parameters
          // Several parameters are available for print command:
          // ToDo: var PARAMETERS_PRINT = 'append as-value brief detail count-only file follow follow-only from interval terse value-list without-paging where info';
          // ToDo: var OPERATORS = '&& and ! not || or in ~ ^ & << >> + - * /';
          // ToDo: var TYPES = 'num number bool boolean str string ip ip6-prefix id time array';
          // ToDo: The following tokens serve as delimiters in the grammar: ()  []  {}  :   ;   $   /

          var VAR_PREFIX = 'global local set for foreach';

          var VAR = {
            className: 'variable',
            variants: [{ begin: /\$[\w\d#@][\w\d_]*/ }, { begin: /\$\{(.*?)}/ }]
          };

          var QUOTE_STRING = {
            className: 'string',
            begin: /"/,
            end: /"/,
            contains: [
              hljs.BACKSLASH_ESCAPE,
              VAR,
              {
                className: 'variable',
                begin: /\$\(/,
                end: /\)/,
                contains: [hljs.BACKSLASH_ESCAPE]
              }
            ]
          };

          var APOS_STRING = {
            className: 'string',
            begin: /'/,
            end: /'/
          };

          var IPADDR =
            '((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]).){3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\b';
          var IPADDR_wBITMASK = IPADDR + '/(3[0-2]|[1-2][0-9]|\\d)';
          //////////////////////////////////////////////////////////////////////
          return {
            aliases: ['routeros', 'mikrotik'],
            case_insensitive: true,
            lexemes: /:?[\w-]+/,
            keywords: {
              literal: LITERALS,
              keyword:
                STATEMENTS +
                ' :' +
                STATEMENTS.split(' ').join(' :') +
                ' :' +
                GLOBAL_COMMANDS.split(' ').join(' :')
            },
            contains: [
              {
                // недопустимые конструкции
                variants: [
                  { begin: /^@/, end: /$/ }, // dns
                  { begin: /\/\*/, end: /\*\// }, // -- comment
                  { begin: /%%/, end: /$/ }, // -- comment
                  { begin: /^'/, end: /$/ }, // Monkey one line comment
                  { begin: /^\s*\/[\w-]+=/, end: /$/ }, // jboss-cli
                  { begin: /\/\//, end: /$/ }, // Stan comment
                  { begin: /^\[\</, end: /\>\]$/ }, // F# class declaration?
                  { begin: /<\//, end: />/ }, // HTML tags
                  { begin: /^facet /, end: /\}/ }, // roboconf - лютый костыль )))
                  { begin: '^1\\.\\.(\\d+)$', end: /$/ } // tap
                ],
                illegal: /./
              },
              hljs.COMMENT('^#', '$'),
              QUOTE_STRING,
              APOS_STRING,
              VAR,
              {
                // attribute=value
                begin: /[\w-]+\=([^\s\{\}\[\]\(\)]+)/,
                relevance: 0,
                returnBegin: true,
                contains: [
                  {
                    className: 'attribute',
                    begin: /[^=]+/
                  },
                  {
                    begin: /=/,
                    endsWithParent: true,
                    relevance: 0,
                    contains: [
                      QUOTE_STRING,
                      APOS_STRING,
                      VAR,
                      {
                        className: 'literal',
                        begin: '\\b(' + LITERALS.split(' ').join('|') + ')\\b'
                      },
                      /*{
	                // IPv4 addresses and subnets
	                className: 'number',
	                variants: [
	                  {begin: IPADDR_wBITMASK+'(,'+IPADDR_wBITMASK+')*'}, //192.168.0.0/24,1.2.3.0/24
	                  {begin: IPADDR+'-'+IPADDR},       // 192.168.0.1-192.168.0.3
	                  {begin: IPADDR+'(,'+IPADDR+')*'}, // 192.168.0.1,192.168.0.34,192.168.24.1,192.168.0.1
	                ]
	              }, // */
                      /*{
	                // MAC addresses and DHCP Client IDs
	                className: 'number',
	                begin: /\b(1:)?([0-9A-Fa-f]{1,2}[:-]){5}([0-9A-Fa-f]){1,2}\b/,
	              }, //*/
                      {
                        // Не форматировать не классифицированные значения. Необходимо для исключения подсветки значений как built_in.
                        // className: 'number',
                        begin: /("[^"]*"|[^\s\{\}\[\]]+)/
                      } //*/
                    ]
                  } //*/
                ]
              }, //*/
              {
                // HEX values
                className: 'number',
                begin: /\*[0-9a-fA-F]+/
              }, //*/

              {
                begin:
                  '\\b(' +
                  COMMON_COMMANDS.split(' ').join('|') +
                  ')([\\s[(]|])',
                returnBegin: true,
                contains: [
                  {
                    className: 'builtin-name', //'function',
                    begin: /\w+/
                  }
                ]
              },

              {
                className: 'built_in',
                variants: [
                  {
                    begin:
                      '(\\.\\./|/|\\s)((' +
                      OBJECTS.split(' ').join('|') +
                      ');?\\s)+',
                    relevance: 10
                  },
                  { begin: /\.\./ }
                ]
              } //*/
            ]
          };
        };

      /***/
    },
    /* 492 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            keyword:
              'float color point normal vector matrix while for if do return else break extern continue',
            built_in:
              'abs acos ambient area asin atan atmosphere attribute calculatenormal ceil cellnoise ' +
              'clamp comp concat cos degrees depth Deriv diffuse distance Du Dv environment exp ' +
              'faceforward filterstep floor format fresnel incident length lightsource log match ' +
              'max min mod noise normalize ntransform opposite option phong pnoise pow printf ' +
              'ptlined radians random reflect refract renderinfo round setcomp setxcomp setycomp ' +
              'setzcomp shadow sign sin smoothstep specular specularbrdf spline sqrt step tan ' +
              'texture textureinfo trace transform vtransform xcomp ycomp zcomp'
          },
          illegal: '</',
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.APOS_STRING_MODE,
            hljs.C_NUMBER_MODE,
            {
              className: 'meta',
              begin: '#',
              end: '$'
            },
            {
              className: 'class',
              beginKeywords: 'surface displacement light volume imager',
              end: '\\('
            },
            {
              beginKeywords: 'illuminate illuminance gather',
              end: '\\('
            }
          ]
        };
      };

      /***/
    },
    /* 493 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            keyword:
              'BILL_PERIOD BILL_START BILL_STOP RS_EFFECTIVE_START RS_EFFECTIVE_STOP RS_JURIS_CODE RS_OPCO_CODE ' +
              'INTDADDATTRIBUTE|5 INTDADDVMSG|5 INTDBLOCKOP|5 INTDBLOCKOPNA|5 INTDCLOSE|5 INTDCOUNT|5 ' +
              'INTDCOUNTSTATUSCODE|5 INTDCREATEMASK|5 INTDCREATEDAYMASK|5 INTDCREATEFACTORMASK|5 ' +
              'INTDCREATEHANDLE|5 INTDCREATEOVERRIDEDAYMASK|5 INTDCREATEOVERRIDEMASK|5 ' +
              'INTDCREATESTATUSCODEMASK|5 INTDCREATETOUPERIOD|5 INTDDELETE|5 INTDDIPTEST|5 INTDEXPORT|5 ' +
              'INTDGETERRORCODE|5 INTDGETERRORMESSAGE|5 INTDISEQUAL|5 INTDJOIN|5 INTDLOAD|5 INTDLOADACTUALCUT|5 ' +
              'INTDLOADDATES|5 INTDLOADHIST|5 INTDLOADLIST|5 INTDLOADLISTDATES|5 INTDLOADLISTENERGY|5 ' +
              'INTDLOADLISTHIST|5 INTDLOADRELATEDCHANNEL|5 INTDLOADSP|5 INTDLOADSTAGING|5 INTDLOADUOM|5 ' +
              'INTDLOADUOMDATES|5 INTDLOADUOMHIST|5 INTDLOADVERSION|5 INTDOPEN|5 INTDREADFIRST|5 INTDREADNEXT|5 ' +
              'INTDRECCOUNT|5 INTDRELEASE|5 INTDREPLACE|5 INTDROLLAVG|5 INTDROLLPEAK|5 INTDSCALAROP|5 INTDSCALE|5 ' +
              'INTDSETATTRIBUTE|5 INTDSETDSTPARTICIPANT|5 INTDSETSTRING|5 INTDSETVALUE|5 INTDSETVALUESTATUS|5 ' +
              'INTDSHIFTSTARTTIME|5 INTDSMOOTH|5 INTDSORT|5 INTDSPIKETEST|5 INTDSUBSET|5 INTDTOU|5 ' +
              'INTDTOURELEASE|5 INTDTOUVALUE|5 INTDUPDATESTATS|5 INTDVALUE|5 STDEV INTDDELETEEX|5 ' +
              'INTDLOADEXACTUAL|5 INTDLOADEXCUT|5 INTDLOADEXDATES|5 INTDLOADEX|5 INTDLOADEXRELATEDCHANNEL|5 ' +
              'INTDSAVEEX|5 MVLOAD|5 MVLOADACCT|5 MVLOADACCTDATES|5 MVLOADACCTHIST|5 MVLOADDATES|5 MVLOADHIST|5 ' +
              'MVLOADLIST|5 MVLOADLISTDATES|5 MVLOADLISTHIST|5 IF FOR NEXT DONE SELECT END CALL ABORT CLEAR CHANNEL FACTOR LIST NUMBER ' +
              'OVERRIDE SET WEEK DISTRIBUTIONNODE ELSE WHEN THEN OTHERWISE IENUM CSV INCLUDE LEAVE RIDER SAVE DELETE ' +
              'NOVALUE SECTION WARN SAVE_UPDATE DETERMINANT LABEL REPORT REVENUE EACH ' +
              'IN FROM TOTAL CHARGE BLOCK AND OR CSV_FILE RATE_CODE AUXILIARY_DEMAND ' +
              'UIDACCOUNT RS BILL_PERIOD_SELECT HOURS_PER_MONTH INTD_ERROR_STOP SEASON_SCHEDULE_NAME ' +
              'ACCOUNTFACTOR ARRAYUPPERBOUND CALLSTOREDPROC GETADOCONNECTION GETCONNECT GETDATASOURCE ' +
              'GETQUALIFIER GETUSERID HASVALUE LISTCOUNT LISTOP LISTUPDATE LISTVALUE PRORATEFACTOR RSPRORATE ' +
              'SETBINPATH SETDBMONITOR WQ_OPEN BILLINGHOURS DATE DATEFROMFLOAT DATETIMEFROMSTRING ' +
              'DATETIMETOSTRING DATETOFLOAT DAY DAYDIFF DAYNAME DBDATETIME HOUR MINUTE MONTH MONTHDIFF ' +
              'MONTHHOURS MONTHNAME ROUNDDATE SAMEWEEKDAYLASTYEAR SECOND WEEKDAY WEEKDIFF YEAR YEARDAY ' +
              'YEARSTR COMPSUM HISTCOUNT HISTMAX HISTMIN HISTMINNZ HISTVALUE MAXNRANGE MAXRANGE MINRANGE ' +
              'COMPIKVA COMPKVA COMPKVARFROMKQKW COMPLF IDATTR FLAG LF2KW LF2KWH MAXKW POWERFACTOR ' +
              'READING2USAGE AVGSEASON MAXSEASON MONTHLYMERGE SEASONVALUE SUMSEASON ACCTREADDATES ' +
              'ACCTTABLELOAD CONFIGADD CONFIGGET CREATEOBJECT CREATEREPORT EMAILCLIENT EXPBLKMDMUSAGE ' +
              'EXPMDMUSAGE EXPORT_USAGE FACTORINEFFECT GETUSERSPECIFIEDSTOP INEFFECT ISHOLIDAY RUNRATE ' +
              'SAVE_PROFILE SETREPORTTITLE USEREXIT WATFORRUNRATE TO TABLE ACOS ASIN ATAN ATAN2 BITAND CEIL ' +
              'COS COSECANT COSH COTANGENT DIVQUOT DIVREM EXP FABS FLOOR FMOD FREPM FREXPN LOG LOG10 MAX MAXN ' +
              'MIN MINNZ MODF POW ROUND ROUND2VALUE ROUNDINT SECANT SIN SINH SQROOT TAN TANH FLOAT2STRING ' +
              'FLOAT2STRINGNC INSTR LEFT LEN LTRIM MID RIGHT RTRIM STRING STRINGNC TOLOWER TOUPPER TRIM ' +
              'NUMDAYS READ_DATE STAGING',
            built_in:
              'IDENTIFIER OPTIONS XML_ELEMENT XML_OP XML_ELEMENT_OF DOMDOCCREATE DOMDOCLOADFILE DOMDOCLOADXML ' +
              'DOMDOCSAVEFILE DOMDOCGETROOT DOMDOCADDPI DOMNODEGETNAME DOMNODEGETTYPE DOMNODEGETVALUE DOMNODEGETCHILDCT ' +
              'DOMNODEGETFIRSTCHILD DOMNODEGETSIBLING DOMNODECREATECHILDELEMENT DOMNODESETATTRIBUTE ' +
              'DOMNODEGETCHILDELEMENTCT DOMNODEGETFIRSTCHILDELEMENT DOMNODEGETSIBLINGELEMENT DOMNODEGETATTRIBUTECT ' +
              'DOMNODEGETATTRIBUTEI DOMNODEGETATTRIBUTEBYNAME DOMNODEGETBYNAME'
          },
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE,
            {
              className: 'literal',
              variants: [
                { begin: '#\\s+[a-zA-Z\\ \\.]*', relevance: 0 }, // looks like #-comment
                { begin: '#[a-zA-Z\\ \\.]+' }
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 494 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var NUM_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))?';
        var KEYWORDS =
          'alignof as be box break const continue crate do else enum extern ' +
          'false fn for if impl in let loop match mod mut offsetof once priv ' +
          'proc pub pure ref return self Self sizeof static struct super trait true ' +
          'type typeof unsafe unsized use virtual while where yield move default';
        var BUILTINS =
          // functions
          'drop ' +
          // types
          'i8 i16 i32 i64 i128 isize ' +
          'u8 u16 u32 u64 u128 usize ' +
          'f32 f64 ' +
          'str char bool ' +
          'Box Option Result String Vec ' +
          // traits
          'Copy Send Sized Sync Drop Fn FnMut FnOnce ToOwned Clone Debug ' +
          'PartialEq PartialOrd Eq Ord AsRef AsMut Into From Default Iterator ' +
          'Extend IntoIterator DoubleEndedIterator ExactSizeIterator ' +
          'SliceConcatExt ToString ' +
          // macros
          'assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! ' +
          'debug_assert! debug_assert_eq! env! panic! file! format! format_args! ' +
          'include_bin! include_str! line! local_data_key! module_path! ' +
          'option_env! print! println! select! stringify! try! unimplemented! ' +
          'unreachable! vec! write! writeln! macro_rules! assert_ne! debug_assert_ne!';
        return {
          aliases: ['rs'],
          keywords: {
            keyword: KEYWORDS,
            literal: 'true false Some None Ok Err',
            built_in: BUILTINS
          },
          lexemes: hljs.IDENT_RE + '!?',
          illegal: '</',
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.COMMENT('/\\*', '\\*/', { contains: ['self'] }),
            hljs.inherit(hljs.QUOTE_STRING_MODE, {
              begin: /b?"/,
              illegal: null
            }),
            {
              className: 'string',
              variants: [
                { begin: /r(#*)"(.|\n)*?"\1(?!#)/ },
                { begin: /b?'\\?(x\w{2}|u\w{4}|U\w{8}|.)'/ }
              ]
            },
            {
              className: 'symbol',
              begin: /'[a-zA-Z_][a-zA-Z0-9_]*/
            },
            {
              className: 'number',
              variants: [
                { begin: '\\b0b([01_]+)' + NUM_SUFFIX },
                { begin: '\\b0o([0-7_]+)' + NUM_SUFFIX },
                { begin: '\\b0x([A-Fa-f0-9_]+)' + NUM_SUFFIX },
                {
                  begin:
                    '\\b(\\d[\\d_]*(\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)' +
                    NUM_SUFFIX
                }
              ],
              relevance: 0
            },
            {
              className: 'function',
              beginKeywords: 'fn',
              end: '(\\(|<)',
              excludeEnd: true,
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            {
              className: 'meta',
              begin: '#\\!?\\[',
              end: '\\]',
              contains: [
                {
                  className: 'meta-string',
                  begin: /"/,
                  end: /"/
                }
              ]
            },
            {
              className: 'class',
              beginKeywords: 'type',
              end: ';',
              contains: [
                hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, { endsParent: true })
              ],
              illegal: '\\S'
            },
            {
              className: 'class',
              beginKeywords: 'trait enum struct union',
              end: '{',
              contains: [
                hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, { endsParent: true })
              ],
              illegal: '[\\w\\d]'
            },
            {
              begin: hljs.IDENT_RE + '::',
              keywords: { built_in: BUILTINS }
            },
            {
              begin: '->'
            }
          ]
        };
      };

      /***/
    },
    /* 495 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        // Data step and PROC SQL statements
        var SAS_KEYWORDS =
          '' +
          'do if then else end until while ' +
          '' +
          'abort array attrib by call cards cards4 catname continue ' +
          'datalines datalines4 delete delim delimiter display dm drop ' +
          'endsas error file filename footnote format goto in infile ' +
          'informat input keep label leave length libname link list ' +
          'lostcard merge missing modify options output out page put ' +
          'redirect remove rename replace retain return select set skip ' +
          'startsas stop title update waitsas where window x systask ' +
          '' +
          'add and alter as cascade check create delete describe ' +
          'distinct drop foreign from group having index insert into in ' +
          'key like message modify msgtype not null on or order primary ' +
          'references reset restrict select set table unique update ' +
          'validate view where';

        // Built-in SAS functions
        var SAS_FUN =
          '' +
          'abs|addr|airy|arcos|arsin|atan|attrc|attrn|band|' +
          'betainv|blshift|bnot|bor|brshift|bxor|byte|cdf|ceil|' +
          'cexist|cinv|close|cnonct|collate|compbl|compound|' +
          'compress|cos|cosh|css|curobs|cv|daccdb|daccdbsl|' +
          'daccsl|daccsyd|dacctab|dairy|date|datejul|datepart|' +
          'datetime|day|dclose|depdb|depdbsl|depdbsl|depsl|' +
          'depsl|depsyd|depsyd|deptab|deptab|dequote|dhms|dif|' +
          'digamma|dim|dinfo|dnum|dopen|doptname|doptnum|dread|' +
          'dropnote|dsname|erf|erfc|exist|exp|fappend|fclose|' +
          'fcol|fdelete|fetch|fetchobs|fexist|fget|fileexist|' +
          'filename|fileref|finfo|finv|fipname|fipnamel|' +
          'fipstate|floor|fnonct|fnote|fopen|foptname|foptnum|' +
          'fpoint|fpos|fput|fread|frewind|frlen|fsep|fuzz|' +
          'fwrite|gaminv|gamma|getoption|getvarc|getvarn|hbound|' +
          'hms|hosthelp|hour|ibessel|index|indexc|indexw|input|' +
          'inputc|inputn|int|intck|intnx|intrr|irr|jbessel|' +
          'juldate|kurtosis|lag|lbound|left|length|lgamma|' +
          'libname|libref|log|log10|log2|logpdf|logpmf|logsdf|' +
          'lowcase|max|mdy|mean|min|minute|mod|month|mopen|' +
          'mort|n|netpv|nmiss|normal|note|npv|open|ordinal|' +
          'pathname|pdf|peek|peekc|pmf|point|poisson|poke|' +
          'probbeta|probbnml|probchi|probf|probgam|probhypr|' +
          'probit|probnegb|probnorm|probt|put|putc|putn|qtr|' +
          'quote|ranbin|rancau|ranexp|rangam|range|rank|rannor|' +
          'ranpoi|rantbl|rantri|ranuni|repeat|resolve|reverse|' +
          'rewind|right|round|saving|scan|sdf|second|sign|' +
          'sin|sinh|skewness|soundex|spedis|sqrt|std|stderr|' +
          'stfips|stname|stnamel|substr|sum|symget|sysget|' +
          'sysmsg|sysprod|sysrc|system|tan|tanh|time|timepart|' +
          'tinv|tnonct|today|translate|tranwrd|trigamma|' +
          'trim|trimn|trunc|uniform|upcase|uss|var|varfmt|' +
          'varinfmt|varlabel|varlen|varname|varnum|varray|' +
          'varrayx|vartype|verify|vformat|vformatd|vformatdx|' +
          'vformatn|vformatnx|vformatw|vformatwx|vformatx|' +
          'vinarray|vinarrayx|vinformat|vinformatd|vinformatdx|' +
          'vinformatn|vinformatnx|vinformatw|vinformatwx|' +
          'vinformatx|vlabel|vlabelx|vlength|vlengthx|vname|' +
          'vnamex|vtype|vtypex|weekday|year|yyq|zipfips|zipname|' +
          'zipnamel|zipstate';

        // Built-in macro functions
        var SAS_MACRO_FUN =
          'bquote|nrbquote|cmpres|qcmpres|compstor|' +
          'datatyp|display|do|else|end|eval|global|goto|' +
          'if|index|input|keydef|label|left|length|let|' +
          'local|lowcase|macro|mend|nrbquote|nrquote|' +
          'nrstr|put|qcmpres|qleft|qlowcase|qscan|' +
          'qsubstr|qsysfunc|qtrim|quote|qupcase|scan|str|' +
          'substr|superq|syscall|sysevalf|sysexec|sysfunc|' +
          'sysget|syslput|sysprod|sysrc|sysrput|then|to|' +
          'trim|unquote|until|upcase|verify|while|window';

        return {
          aliases: ['sas', 'SAS'],
          case_insensitive: true, // SAS is case-insensitive
          keywords: {
            literal:
              'null missing _all_ _automatic_ _character_ _infile_ ' +
              '_n_ _name_ _null_ _numeric_ _user_ _webout_',
            meta: SAS_KEYWORDS
          },
          contains: [
            {
              // Distinct highlight for proc <proc>, data, run, quit
              className: 'keyword',
              begin: /^\s*(proc [\w\d_]+|data|run|quit)[\s\;]/
            },
            {
              // Macro variables
              className: 'variable',
              begin: /\&[a-zA-Z_\&][a-zA-Z0-9_]*\.?/
            },
            {
              // Special emphasis for datalines|cards
              className: 'emphasis',
              begin: /^\s*datalines|cards.*;/,
              end: /^\s*;\s*$/
            },
            {
              // Built-in macro variables take precedence
              className: 'built_in',
              begin: '%(' + SAS_MACRO_FUN + ')'
            },
            {
              // User-defined macro functions highlighted after
              className: 'name',
              begin: /%[a-zA-Z_][a-zA-Z_0-9]*/
            },
            {
              className: 'meta',
              begin: '[^%](' + SAS_FUN + ')[(]'
            },
            {
              className: 'string',
              variants: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE]
            },
            hljs.COMMENT('\\*', ';'),
            hljs.C_BLOCK_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 496 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var ANNOTATION = { className: 'meta', begin: '@[A-Za-z]+' };

        // used in strings for escaping/interpolation/substitution
        var SUBST = {
          className: 'subst',
          variants: [{ begin: '\\$[A-Za-z0-9_]+' }, { begin: '\\${', end: '}' }]
        };

        var STRING = {
          className: 'string',
          variants: [
            {
              begin: '"',
              end: '"',
              illegal: '\\n',
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              begin: '"""',
              end: '"""',
              relevance: 10
            },
            {
              begin: '[a-z]+"',
              end: '"',
              illegal: '\\n',
              contains: [hljs.BACKSLASH_ESCAPE, SUBST]
            },
            {
              className: 'string',
              begin: '[a-z]+"""',
              end: '"""',
              contains: [SUBST],
              relevance: 10
            }
          ]
        };

        var SYMBOL = {
          className: 'symbol',
          begin: "'\\w[\\w\\d_]*(?!')"
        };

        var TYPE = {
          className: 'type',
          begin: '\\b[A-Z][A-Za-z0-9_]*',
          relevance: 0
        };

        var NAME = {
          className: 'title',
          begin: /[^0-9\n\t "'(),.`{}\[\]:;][^\n\t "'(),.`{}\[\]:;]+|[^0-9\n\t "'(),.`{}\[\]:;=]/,
          relevance: 0
        };

        var CLASS = {
          className: 'class',
          beginKeywords: 'class object trait type',
          end: /[:={\[\n;]/,
          excludeEnd: true,
          contains: [
            {
              beginKeywords: 'extends with',
              relevance: 10
            },
            {
              begin: /\[/,
              end: /\]/,
              excludeBegin: true,
              excludeEnd: true,
              relevance: 0,
              contains: [TYPE]
            },
            {
              className: 'params',
              begin: /\(/,
              end: /\)/,
              excludeBegin: true,
              excludeEnd: true,
              relevance: 0,
              contains: [TYPE]
            },
            NAME
          ]
        };

        var METHOD = {
          className: 'function',
          beginKeywords: 'def',
          end: /[:={\[(\n;]/,
          excludeEnd: true,
          contains: [NAME]
        };

        return {
          keywords: {
            literal: 'true false null',
            keyword:
              'type yield lazy override def with val var sealed abstract private trait object if forSome for while throw finally protected extends import final return else break new catch super class case package default try this match continue throws implicit'
          },
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            STRING,
            SYMBOL,
            TYPE,
            METHOD,
            CLASS,
            hljs.C_NUMBER_MODE,
            ANNOTATION
          ]
        };
      };

      /***/
    },
    /* 497 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var SCHEME_IDENT_RE = '[^\\(\\)\\[\\]\\{\\}",\'`;#|\\\\\\s]+';
        var SCHEME_SIMPLE_NUMBER_RE = '(\\-|\\+)?\\d+([./]\\d+)?';
        var SCHEME_COMPLEX_NUMBER_RE =
          SCHEME_SIMPLE_NUMBER_RE + '[+\\-]' + SCHEME_SIMPLE_NUMBER_RE + 'i';
        var BUILTINS = {
          'builtin-name':
            'case-lambda call/cc class define-class exit-handler field import ' +
            'inherit init-field interface let*-values let-values let/ec mixin ' +
            'opt-lambda override protect provide public rename require ' +
            'require-for-syntax syntax syntax-case syntax-error unit/sig unless ' +
            'when with-syntax and begin call-with-current-continuation ' +
            'call-with-input-file call-with-output-file case cond define ' +
            'define-syntax delay do dynamic-wind else for-each if lambda let let* ' +
            "let-syntax letrec letrec-syntax map or syntax-rules ' * + , ,@ - ... / " +
            '; < <= = => > >= ` abs acos angle append apply asin assoc assq assv atan ' +
            'boolean? caar cadr call-with-input-file call-with-output-file ' +
            'call-with-values car cdddar cddddr cdr ceiling char->integer ' +
            'char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? ' +
            'char-downcase char-lower-case? char-numeric? char-ready? char-upcase ' +
            'char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? ' +
            'char? close-input-port close-output-port complex? cons cos ' +
            'current-input-port current-output-port denominator display eof-object? ' +
            'eq? equal? eqv? eval even? exact->inexact exact? exp expt floor ' +
            'force gcd imag-part inexact->exact inexact? input-port? integer->char ' +
            'integer? interaction-environment lcm length list list->string ' +
            'list->vector list-ref list-tail list? load log magnitude make-polar ' +
            'make-rectangular make-string make-vector max member memq memv min ' +
            'modulo negative? newline not null-environment null? number->string ' +
            'number? numerator odd? open-input-file open-output-file output-port? ' +
            'pair? peek-char port? positive? procedure? quasiquote quote quotient ' +
            'rational? rationalize read read-char real-part real? remainder reverse ' +
            'round scheme-report-environment set! set-car! set-cdr! sin sqrt string ' +
            'string->list string->number string->symbol string-append string-ci<=? ' +
            'string-ci<? string-ci=? string-ci>=? string-ci>? string-copy ' +
            'string-fill! string-length string-ref string-set! string<=? string<? ' +
            'string=? string>=? string>? string? substring symbol->string symbol? ' +
            'tan transcript-off transcript-on truncate values vector ' +
            'vector->list vector-fill! vector-length vector-ref vector-set! ' +
            'with-input-from-file with-output-to-file write write-char zero?'
        };

        var SHEBANG = {
          className: 'meta',
          begin: '^#!',
          end: '$'
        };

        var LITERAL = {
          className: 'literal',
          begin: '(#t|#f|#\\\\' + SCHEME_IDENT_RE + '|#\\\\.)'
        };

        var NUMBER = {
          className: 'number',
          variants: [
            { begin: SCHEME_SIMPLE_NUMBER_RE, relevance: 0 },
            { begin: SCHEME_COMPLEX_NUMBER_RE, relevance: 0 },
            { begin: '#b[0-1]+(/[0-1]+)?' },
            { begin: '#o[0-7]+(/[0-7]+)?' },
            { begin: '#x[0-9a-f]+(/[0-9a-f]+)?' }
          ]
        };

        var STRING = hljs.QUOTE_STRING_MODE;

        var REGULAR_EXPRESSION = {
          className: 'regexp',
          begin: '#[pr]x"',
          end: '[^\\\\]"'
        };

        var COMMENT_MODES = [
          hljs.COMMENT(';', '$', {
            relevance: 0
          }),
          hljs.COMMENT('#\\|', '\\|#')
        ];

        var IDENT = {
          begin: SCHEME_IDENT_RE,
          relevance: 0
        };

        var QUOTED_IDENT = {
          className: 'symbol',
          begin: "'" + SCHEME_IDENT_RE
        };

        var BODY = {
          endsWithParent: true,
          relevance: 0
        };

        var QUOTED_LIST = {
          variants: [{ begin: /'/ }, { begin: '`' }],
          contains: [
            {
              begin: '\\(',
              end: '\\)',
              contains: ['self', LITERAL, STRING, NUMBER, IDENT, QUOTED_IDENT]
            }
          ]
        };

        var NAME = {
          className: 'name',
          begin: SCHEME_IDENT_RE,
          lexemes: SCHEME_IDENT_RE,
          keywords: BUILTINS
        };

        var LAMBDA = {
          begin: /lambda/,
          endsWithParent: true,
          returnBegin: true,
          contains: [
            NAME,
            {
              begin: /\(/,
              end: /\)/,
              endsParent: true,
              contains: [IDENT]
            }
          ]
        };

        var LIST = {
          variants: [
            { begin: '\\(', end: '\\)' },
            { begin: '\\[', end: '\\]' }
          ],
          contains: [LAMBDA, NAME, BODY]
        };

        BODY.contains = [
          LITERAL,
          NUMBER,
          STRING,
          IDENT,
          QUOTED_IDENT,
          QUOTED_LIST,
          LIST
        ].concat(COMMENT_MODES);

        return {
          illegal: /\S/,
          contains: [
            SHEBANG,
            NUMBER,
            STRING,
            QUOTED_IDENT,
            QUOTED_LIST,
            LIST
          ].concat(COMMENT_MODES)
        };
      };

      /***/
    },
    /* 498 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var COMMON_CONTAINS = [
          hljs.C_NUMBER_MODE,
          {
            className: 'string',
            begin: '\'|"',
            end: '\'|"',
            contains: [hljs.BACKSLASH_ESCAPE, { begin: "''" }]
          }
        ];

        return {
          aliases: ['sci'],
          lexemes: /%?\w+/,
          keywords: {
            keyword:
              'abort break case clear catch continue do elseif else endfunction end for function ' +
              'global if pause return resume select try then while',
            literal: '%f %F %t %T %pi %eps %inf %nan %e %i %z %s',
            // Scilab has more than 2000 functions. Just list the most commons
            built_in:
              'abs and acos asin atan ceil cd chdir clearglobal cosh cos cumprod deff disp error ' +
              'exec execstr exists exp eye gettext floor fprintf fread fsolve imag isdef isempty ' +
              'isinfisnan isvector lasterror length load linspace list listfiles log10 log2 log ' +
              'max min msprintf mclose mopen ones or pathconvert poly printf prod pwd rand real ' +
              'round sinh sin size gsort sprintf sqrt strcat strcmps tring sum system tanh tan ' +
              'type typename warning zeros matrix'
          },
          illegal: '("|#|/\\*|\\s+/\\w+)',
          contains: [
            {
              className: 'function',
              beginKeywords: 'function',
              end: '$',
              contains: [
                hljs.UNDERSCORE_TITLE_MODE,
                {
                  className: 'params',
                  begin: '\\(',
                  end: '\\)'
                }
              ]
            },
            {
              begin: "[a-zA-Z_][a-zA-Z_0-9]*('+[\\.']*|[\\.']+)",
              end: '',
              relevance: 0
            },
            {
              begin: '\\[',
              end: "\\]'*[\\.']*",
              relevance: 0,
              contains: COMMON_CONTAINS
            },
            hljs.COMMENT('//', '$')
          ].concat(COMMON_CONTAINS)
        };
      };

      /***/
    },
    /* 499 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';
        var VARIABLE = {
          className: 'variable',
          begin: '(\\$' + IDENT_RE + ')\\b'
        };
        var HEXCOLOR = {
          className: 'number',
          begin: '#[0-9A-Fa-f]+'
        };
        var DEF_INTERNALS = {
          className: 'attribute',
          begin: '[A-Z\\_\\.\\-]+',
          end: ':',
          excludeEnd: true,
          illegal: '[^\\s]',
          starts: {
            endsWithParent: true,
            excludeEnd: true,
            contains: [
              HEXCOLOR,
              hljs.CSS_NUMBER_MODE,
              hljs.QUOTE_STRING_MODE,
              hljs.APOS_STRING_MODE,
              hljs.C_BLOCK_COMMENT_MODE,
              {
                className: 'meta',
                begin: '!important'
              }
            ]
          }
        };
        return {
          case_insensitive: true,
          illegal: "[=/|']",
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: 'selector-id',
              begin: '\\#[A-Za-z0-9_-]+',
              relevance: 0
            },
            {
              className: 'selector-class',
              begin: '\\.[A-Za-z0-9_-]+',
              relevance: 0
            },
            {
              className: 'selector-attr',
              begin: '\\[',
              end: '\\]',
              illegal: '$'
            },
            {
              className: 'selector-tag', // begin: IDENT_RE, end: '[,|\\s]'
              begin:
                '\\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|map|mark|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|rp|rt|ruby|samp|script|section|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\\b',
              relevance: 0
            },
            {
              begin:
                ':(visited|valid|root|right|required|read-write|read-only|out-range|optional|only-of-type|only-child|nth-of-type|nth-last-of-type|nth-last-child|nth-child|not|link|left|last-of-type|last-child|lang|invalid|indeterminate|in-range|hover|focus|first-of-type|first-line|first-letter|first-child|first|enabled|empty|disabled|default|checked|before|after|active)'
            },
            {
              begin:
                '::(after|before|choices|first-letter|first-line|repeat-index|repeat-item|selection|value)'
            },
            VARIABLE,
            {
              className: 'attribute',
              begin:
                '\\b(z-index|word-wrap|word-spacing|word-break|width|widows|white-space|visibility|vertical-align|unicode-bidi|transition-timing-function|transition-property|transition-duration|transition-delay|transition|transform-style|transform-origin|transform|top|text-underline-position|text-transform|text-shadow|text-rendering|text-overflow|text-indent|text-decoration-style|text-decoration-line|text-decoration-color|text-decoration|text-align-last|text-align|tab-size|table-layout|right|resize|quotes|position|pointer-events|perspective-origin|perspective|page-break-inside|page-break-before|page-break-after|padding-top|padding-right|padding-left|padding-bottom|padding|overflow-y|overflow-x|overflow-wrap|overflow|outline-width|outline-style|outline-offset|outline-color|outline|orphans|order|opacity|object-position|object-fit|normal|none|nav-up|nav-right|nav-left|nav-index|nav-down|min-width|min-height|max-width|max-height|mask|marks|margin-top|margin-right|margin-left|margin-bottom|margin|list-style-type|list-style-position|list-style-image|list-style|line-height|letter-spacing|left|justify-content|initial|inherit|ime-mode|image-orientation|image-resolution|image-rendering|icon|hyphens|height|font-weight|font-variant-ligatures|font-variant|font-style|font-stretch|font-size-adjust|font-size|font-language-override|font-kerning|font-feature-settings|font-family|font|float|flex-wrap|flex-shrink|flex-grow|flex-flow|flex-direction|flex-basis|flex|filter|empty-cells|display|direction|cursor|counter-reset|counter-increment|content|column-width|column-span|column-rule-width|column-rule-style|column-rule-color|column-rule|column-gap|column-fill|column-count|columns|color|clip-path|clip|clear|caption-side|break-inside|break-before|break-after|box-sizing|box-shadow|box-decoration-break|bottom|border-width|border-top-width|border-top-style|border-top-right-radius|border-top-left-radius|border-top-color|border-top|border-style|border-spacing|border-right-width|border-right-style|border-right-color|border-right|border-radius|border-left-width|border-left-style|border-left-color|border-left|border-image-width|border-image-source|border-image-slice|border-image-repeat|border-image-outset|border-image|border-color|border-collapse|border-bottom-width|border-bottom-style|border-bottom-right-radius|border-bottom-left-radius|border-bottom-color|border-bottom|border|background-size|background-repeat|background-position|background-origin|background-image|background-color|background-clip|background-attachment|background-blend-mode|background|backface-visibility|auto|animation-timing-function|animation-play-state|animation-name|animation-iteration-count|animation-fill-mode|animation-duration|animation-direction|animation-delay|animation|align-self|align-items|align-content)\\b',
              illegal: '[^\\s]'
            },
            {
              begin:
                '\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\b'
            },
            {
              begin: ':',
              end: ';',
              contains: [
                VARIABLE,
                HEXCOLOR,
                hljs.CSS_NUMBER_MODE,
                hljs.QUOTE_STRING_MODE,
                hljs.APOS_STRING_MODE,
                {
                  className: 'meta',
                  begin: '!important'
                }
              ]
            },
            {
              begin: '@',
              end: '[{;]',
              keywords:
                'mixin include extend for if else each while charset import debug media page content font-face namespace warn',
              contains: [
                VARIABLE,
                hljs.QUOTE_STRING_MODE,
                hljs.APOS_STRING_MODE,
                HEXCOLOR,
                hljs.CSS_NUMBER_MODE,
                {
                  begin: '\\s[A-Za-z0-9_.-]+',
                  relevance: 0
                }
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 500 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['console'],
          contains: [
            {
              className: 'meta',
              begin: '^\\s{0,3}[\\w\\d\\[\\]()@-]*[>%$#]',
              starts: {
                end: '$',
                subLanguage: 'bash'
              }
            }
          ]
        };
      };

      /***/
    },
    /* 501 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var smali_instr_low_prio = [
          'add',
          'and',
          'cmp',
          'cmpg',
          'cmpl',
          'const',
          'div',
          'double',
          'float',
          'goto',
          'if',
          'int',
          'long',
          'move',
          'mul',
          'neg',
          'new',
          'nop',
          'not',
          'or',
          'rem',
          'return',
          'shl',
          'shr',
          'sput',
          'sub',
          'throw',
          'ushr',
          'xor'
        ];
        var smali_instr_high_prio = [
          'aget',
          'aput',
          'array',
          'check',
          'execute',
          'fill',
          'filled',
          'goto/16',
          'goto/32',
          'iget',
          'instance',
          'invoke',
          'iput',
          'monitor',
          'packed',
          'sget',
          'sparse'
        ];
        var smali_keywords = [
          'transient',
          'constructor',
          'abstract',
          'final',
          'synthetic',
          'public',
          'private',
          'protected',
          'static',
          'bridge',
          'system'
        ];
        return {
          aliases: ['smali'],
          contains: [
            {
              className: 'string',
              begin: '"',
              end: '"',
              relevance: 0
            },
            hljs.COMMENT('#', '$', {
              relevance: 0
            }),
            {
              className: 'keyword',
              variants: [
                { begin: '\\s*\\.end\\s[a-zA-Z0-9]*' },
                { begin: '^[ ]*\\.[a-zA-Z]*', relevance: 0 },
                { begin: '\\s:[a-zA-Z_0-9]*', relevance: 0 },
                { begin: '\\s(' + smali_keywords.join('|') + ')' }
              ]
            },
            {
              className: 'built_in',
              variants: [
                {
                  begin: '\\s(' + smali_instr_low_prio.join('|') + ')\\s'
                },
                {
                  begin:
                    '\\s(' +
                    smali_instr_low_prio.join('|') +
                    ')((\\-|/)[a-zA-Z0-9]+)+\\s',
                  relevance: 10
                },
                {
                  begin:
                    '\\s(' +
                    smali_instr_high_prio.join('|') +
                    ')((\\-|/)[a-zA-Z0-9]+)*\\s',
                  relevance: 10
                }
              ]
            },
            {
              className: 'class',
              begin: 'L[^(;:\n]*;',
              relevance: 0
            },
            {
              begin: '[vp][0-9]+'
            }
          ]
        };
      };

      /***/
    },
    /* 502 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var VAR_IDENT_RE = '[a-z][a-zA-Z0-9_]*';
        var CHAR = {
          className: 'string',
          begin: '\\$.{1}'
        };
        var SYMBOL = {
          className: 'symbol',
          begin: '#' + hljs.UNDERSCORE_IDENT_RE
        };
        return {
          aliases: ['st'],
          keywords: 'self super nil true false thisContext', // only 6
          contains: [
            hljs.COMMENT('"', '"'),
            hljs.APOS_STRING_MODE,
            {
              className: 'type',
              begin: '\\b[A-Z][A-Za-z0-9_]*',
              relevance: 0
            },
            {
              begin: VAR_IDENT_RE + ':',
              relevance: 0
            },
            hljs.C_NUMBER_MODE,
            SYMBOL,
            CHAR,
            {
              // This looks more complicated than needed to avoid combinatorial
              // explosion under V8. It effectively means `| var1 var2 ... |` with
              // whitespace adjacent to `|` being optional.
              begin:
                '\\|[ ]*' + VAR_IDENT_RE + '([ ]+' + VAR_IDENT_RE + ')*[ ]*\\|',
              returnBegin: true,
              end: /\|/,
              illegal: /\S/,
              contains: [{ begin: '(\\|[ ]*)?' + VAR_IDENT_RE }]
            },
            {
              begin: '\\#\\(',
              end: '\\)',
              contains: [
                hljs.APOS_STRING_MODE,
                CHAR,
                hljs.C_NUMBER_MODE,
                SYMBOL
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 503 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['ml'],
          keywords: {
            keyword:
              /* according to Definition of Standard ML 97  */
              'abstype and andalso as case datatype do else end eqtype ' +
              'exception fn fun functor handle if in include infix infixr ' +
              'let local nonfix of op open orelse raise rec sharing sig ' +
              'signature struct structure then type val with withtype where while',
            built_in:
              /* built-in types according to basis library */
              'array bool char exn int list option order real ref string substring vector unit word',
            literal: 'true false NONE SOME LESS EQUAL GREATER nil'
          },
          illegal: /\/\/|>>/,
          lexemes: '[a-z_]\\w*!?',
          contains: [
            {
              className: 'literal',
              begin: /\[(\|\|)?\]|\(\)/,
              relevance: 0
            },
            hljs.COMMENT('\\(\\*', '\\*\\)', {
              contains: ['self']
            }),
            {
              /* type variable */
              className: 'symbol',
              begin: "'[A-Za-z_](?!')[\\w']*"
              /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */
            },
            {
              /* polymorphic variant */
              className: 'type',
              begin: "`[A-Z][\\w']*"
            },
            {
              /* module or constructor */
              className: 'type',
              begin: "\\b[A-Z][\\w']*",
              relevance: 0
            },
            {
              /* don't color identifiers, but safely catch all identifiers with '*/
              begin: "[a-z_]\\w*'[\\w']*"
            },
            hljs.inherit(hljs.APOS_STRING_MODE, {
              className: 'string',
              relevance: 0
            }),
            hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),
            {
              className: 'number',
              begin:
                '\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +
                '0[oO][0-7_]+[Lln]?|' +
                '0[bB][01_]+[Lln]?|' +
                '[0-9][0-9_]*([Lln]|(\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',
              relevance: 0
            },
            {
              begin: /[-=]>/ // relevance booster
            }
          ]
        };
      };

      /***/
    },
    /* 504 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var CPP = hljs.getLanguage('cpp').exports;

        // In SQF, a variable start with _
        var VARIABLE = {
          className: 'variable',
          begin: /\b_+[a-zA-Z_]\w*/
        };

        // In SQF, a function should fit myTag_fnc_myFunction pattern
        // https://community.bistudio.com/wiki/Functions_Library_(Arma_3)#Adding_a_Function
        var FUNCTION = {
          className: 'title',
          begin: /[a-zA-Z][a-zA-Z0-9]+_fnc_\w*/
        };

        // In SQF strings, quotes matching the start are escaped by adding a consecutive.
        // Example of single escaped quotes: " "" " and  ' '' '.
        var STRINGS = {
          className: 'string',
          variants: [
            {
              begin: '"',
              end: '"',
              contains: [{ begin: '""', relevance: 0 }]
            },
            {
              begin: "'",
              end: "'",
              contains: [{ begin: "''", relevance: 0 }]
            }
          ]
        };

        return {
          aliases: ['sqf'],
          case_insensitive: true,
          keywords: {
            keyword:
              'case catch default do else exit exitWith for forEach from if ' +
              'private switch then throw to try waitUntil while with',
            built_in:
              'abs accTime acos action actionIDs actionKeys actionKeysImages actionKeysNames ' +
              'actionKeysNamesArray actionName actionParams activateAddons activatedAddons activateKey ' +
              'add3DENConnection add3DENEventHandler add3DENLayer addAction addBackpack addBackpackCargo ' +
              'addBackpackCargoGlobal addBackpackGlobal addCamShake addCuratorAddons addCuratorCameraArea ' +
              'addCuratorEditableObjects addCuratorEditingArea addCuratorPoints addEditorObject addEventHandler ' +
              'addForce addGoggles addGroupIcon addHandgunItem addHeadgear addItem addItemCargo ' +
              'addItemCargoGlobal addItemPool addItemToBackpack addItemToUniform addItemToVest addLiveStats ' +
              'addMagazine addMagazineAmmoCargo addMagazineCargo addMagazineCargoGlobal addMagazineGlobal ' +
              'addMagazinePool addMagazines addMagazineTurret addMenu addMenuItem addMissionEventHandler ' +
              'addMPEventHandler addMusicEventHandler addOwnedMine addPlayerScores addPrimaryWeaponItem ' +
              'addPublicVariableEventHandler addRating addResources addScore addScoreSide addSecondaryWeaponItem ' +
              'addSwitchableUnit addTeamMember addToRemainsCollector addTorque addUniform addVehicle addVest ' +
              'addWaypoint addWeapon addWeaponCargo addWeaponCargoGlobal addWeaponGlobal addWeaponItem ' +
              'addWeaponPool addWeaponTurret admin agent agents AGLToASL aimedAtTarget aimPos airDensityRTD ' +
              'airplaneThrottle airportSide AISFinishHeal alive all3DENEntities allAirports allControls ' +
              'allCurators allCutLayers allDead allDeadMen allDisplays allGroups allMapMarkers allMines ' +
              'allMissionObjects allow3DMode allowCrewInImmobile allowCuratorLogicIgnoreAreas allowDamage ' +
              'allowDammage allowFileOperations allowFleeing allowGetIn allowSprint allPlayers allSimpleObjects ' +
              'allSites allTurrets allUnits allUnitsUAV allVariables ammo ammoOnPylon and animate animateBay ' +
              'animateDoor animatePylon animateSource animationNames animationPhase animationSourcePhase ' +
              'animationState append apply armoryPoints arrayIntersect asin ASLToAGL ASLToATL assert ' +
              'assignAsCargo assignAsCargoIndex assignAsCommander assignAsDriver assignAsGunner assignAsTurret ' +
              'assignCurator assignedCargo assignedCommander assignedDriver assignedGunner assignedItems ' +
              'assignedTarget assignedTeam assignedVehicle assignedVehicleRole assignItem assignTeam ' +
              'assignToAirport atan atan2 atg ATLToASL attachedObject attachedObjects attachedTo attachObject ' +
              'attachTo attackEnabled backpack backpackCargo backpackContainer backpackItems backpackMagazines ' +
              'backpackSpaceFor behaviour benchmark binocular boundingBox boundingBoxReal boundingCenter ' +
              'breakOut breakTo briefingName buildingExit buildingPos buttonAction buttonSetAction cadetMode ' +
              'call callExtension camCommand camCommit camCommitPrepared camCommitted camConstuctionSetParams ' +
              'camCreate camDestroy cameraEffect cameraEffectEnableHUD cameraInterest cameraOn cameraView ' +
              'campaignConfigFile camPreload camPreloaded camPrepareBank camPrepareDir camPrepareDive ' +
              'camPrepareFocus camPrepareFov camPrepareFovRange camPreparePos camPrepareRelPos camPrepareTarget ' +
              'camSetBank camSetDir camSetDive camSetFocus camSetFov camSetFovRange camSetPos camSetRelPos ' +
              'camSetTarget camTarget camUseNVG canAdd canAddItemToBackpack canAddItemToUniform canAddItemToVest ' +
              'cancelSimpleTaskDestination canFire canMove canSlingLoad canStand canSuspend ' +
              'canTriggerDynamicSimulation canUnloadInCombat canVehicleCargo captive captiveNum cbChecked ' +
              'cbSetChecked ceil channelEnabled cheatsEnabled checkAIFeature checkVisibility className ' +
              'clearAllItemsFromBackpack clearBackpackCargo clearBackpackCargoGlobal clearGroupIcons ' +
              'clearItemCargo clearItemCargoGlobal clearItemPool clearMagazineCargo clearMagazineCargoGlobal ' +
              'clearMagazinePool clearOverlay clearRadio clearWeaponCargo clearWeaponCargoGlobal clearWeaponPool ' +
              'clientOwner closeDialog closeDisplay closeOverlay collapseObjectTree collect3DENHistory ' +
              'collectiveRTD combatMode commandArtilleryFire commandChat commander commandFire commandFollow ' +
              'commandFSM commandGetOut commandingMenu commandMove commandRadio commandStop ' +
              'commandSuppressiveFire commandTarget commandWatch comment commitOverlay compile compileFinal ' +
              'completedFSM composeText configClasses configFile configHierarchy configName configProperties ' +
              'configSourceAddonList configSourceMod configSourceModList confirmSensorTarget ' +
              'connectTerminalToUAV controlsGroupCtrl copyFromClipboard copyToClipboard copyWaypoints cos count ' +
              'countEnemy countFriendly countSide countType countUnknown create3DENComposition create3DENEntity ' +
              'createAgent createCenter createDialog createDiaryLink createDiaryRecord createDiarySubject ' +
              'createDisplay createGearDialog createGroup createGuardedPoint createLocation createMarker ' +
              'createMarkerLocal createMenu createMine createMissionDisplay createMPCampaignDisplay ' +
              'createSimpleObject createSimpleTask createSite createSoundSource createTask createTeam ' +
              'createTrigger createUnit createVehicle createVehicleCrew createVehicleLocal crew ctAddHeader ' +
              'ctAddRow ctClear ctCurSel ctData ctFindHeaderRows ctFindRowHeader ctHeaderControls ctHeaderCount ' +
              'ctRemoveHeaders ctRemoveRows ctrlActivate ctrlAddEventHandler ctrlAngle ctrlAutoScrollDelay ' +
              'ctrlAutoScrollRewind ctrlAutoScrollSpeed ctrlChecked ctrlClassName ctrlCommit ctrlCommitted ' +
              'ctrlCreate ctrlDelete ctrlEnable ctrlEnabled ctrlFade ctrlHTMLLoaded ctrlIDC ctrlIDD ' +
              'ctrlMapAnimAdd ctrlMapAnimClear ctrlMapAnimCommit ctrlMapAnimDone ctrlMapCursor ctrlMapMouseOver ' +
              'ctrlMapScale ctrlMapScreenToWorld ctrlMapWorldToScreen ctrlModel ctrlModelDirAndUp ctrlModelScale ' +
              'ctrlParent ctrlParentControlsGroup ctrlPosition ctrlRemoveAllEventHandlers ctrlRemoveEventHandler ' +
              'ctrlScale ctrlSetActiveColor ctrlSetAngle ctrlSetAutoScrollDelay ctrlSetAutoScrollRewind ' +
              'ctrlSetAutoScrollSpeed ctrlSetBackgroundColor ctrlSetChecked ctrlSetEventHandler ctrlSetFade ' +
              'ctrlSetFocus ctrlSetFont ctrlSetFontH1 ctrlSetFontH1B ctrlSetFontH2 ctrlSetFontH2B ctrlSetFontH3 ' +
              'ctrlSetFontH3B ctrlSetFontH4 ctrlSetFontH4B ctrlSetFontH5 ctrlSetFontH5B ctrlSetFontH6 ' +
              'ctrlSetFontH6B ctrlSetFontHeight ctrlSetFontHeightH1 ctrlSetFontHeightH2 ctrlSetFontHeightH3 ' +
              'ctrlSetFontHeightH4 ctrlSetFontHeightH5 ctrlSetFontHeightH6 ctrlSetFontHeightSecondary ' +
              'ctrlSetFontP ctrlSetFontPB ctrlSetFontSecondary ctrlSetForegroundColor ctrlSetModel ' +
              'ctrlSetModelDirAndUp ctrlSetModelScale ctrlSetPixelPrecision ctrlSetPosition ctrlSetScale ' +
              'ctrlSetStructuredText ctrlSetText ctrlSetTextColor ctrlSetTooltip ctrlSetTooltipColorBox ' +
              'ctrlSetTooltipColorShade ctrlSetTooltipColorText ctrlShow ctrlShown ctrlText ctrlTextHeight ' +
              'ctrlTextWidth ctrlType ctrlVisible ctRowControls ctRowCount ctSetCurSel ctSetData ' +
              'ctSetHeaderTemplate ctSetRowTemplate ctSetValue ctValue curatorAddons curatorCamera ' +
              'curatorCameraArea curatorCameraAreaCeiling curatorCoef curatorEditableObjects curatorEditingArea ' +
              'curatorEditingAreaType curatorMouseOver curatorPoints curatorRegisteredObjects curatorSelected ' +
              'curatorWaypointCost current3DENOperation currentChannel currentCommand currentMagazine ' +
              'currentMagazineDetail currentMagazineDetailTurret currentMagazineTurret currentMuzzle ' +
              'currentNamespace currentTask currentTasks currentThrowable currentVisionMode currentWaypoint ' +
              'currentWeapon currentWeaponMode currentWeaponTurret currentZeroing cursorObject cursorTarget ' +
              'customChat customRadio cutFadeOut cutObj cutRsc cutText damage date dateToNumber daytime ' +
              'deActivateKey debriefingText debugFSM debugLog deg delete3DENEntities deleteAt deleteCenter ' +
              'deleteCollection deleteEditorObject deleteGroup deleteGroupWhenEmpty deleteIdentity ' +
              'deleteLocation deleteMarker deleteMarkerLocal deleteRange deleteResources deleteSite deleteStatus ' +
              'deleteTeam deleteVehicle deleteVehicleCrew deleteWaypoint detach detectedMines ' +
              'diag_activeMissionFSMs diag_activeScripts diag_activeSQFScripts diag_activeSQSScripts ' +
              'diag_captureFrame diag_captureFrameToFile diag_captureSlowFrame diag_codePerformance ' +
              'diag_drawMode diag_enable diag_enabled diag_fps diag_fpsMin diag_frameNo diag_lightNewLoad ' +
              'diag_list diag_log diag_logSlowFrame diag_mergeConfigFile diag_recordTurretLimits ' +
              'diag_setLightNew diag_tickTime diag_toggle dialog diarySubjectExists didJIP didJIPOwner ' +
              'difficulty difficultyEnabled difficultyEnabledRTD difficultyOption direction directSay disableAI ' +
              'disableCollisionWith disableConversation disableDebriefingStats disableMapIndicators ' +
              'disableNVGEquipment disableRemoteSensors disableSerialization disableTIEquipment ' +
              'disableUAVConnectability disableUserInput displayAddEventHandler displayCtrl displayParent ' +
              'displayRemoveAllEventHandlers displayRemoveEventHandler displaySetEventHandler dissolveTeam ' +
              'distance distance2D distanceSqr distributionRegion do3DENAction doArtilleryFire doFire doFollow ' +
              'doFSM doGetOut doMove doorPhase doStop doSuppressiveFire doTarget doWatch drawArrow drawEllipse ' +
              'drawIcon drawIcon3D drawLine drawLine3D drawLink drawLocation drawPolygon drawRectangle ' +
              'drawTriangle driver drop dynamicSimulationDistance dynamicSimulationDistanceCoef ' +
              'dynamicSimulationEnabled dynamicSimulationSystemEnabled echo edit3DENMissionAttributes editObject ' +
              'editorSetEventHandler effectiveCommander emptyPositions enableAI enableAIFeature ' +
              'enableAimPrecision enableAttack enableAudioFeature enableAutoStartUpRTD enableAutoTrimRTD ' +
              'enableCamShake enableCaustics enableChannel enableCollisionWith enableCopilot ' +
              'enableDebriefingStats enableDiagLegend enableDynamicSimulation enableDynamicSimulationSystem ' +
              'enableEndDialog enableEngineArtillery enableEnvironment enableFatigue enableGunLights ' +
              'enableInfoPanelComponent enableIRLasers enableMimics enablePersonTurret enableRadio enableReload ' +
              'enableRopeAttach enableSatNormalOnDetail enableSaving enableSentences enableSimulation ' +
              'enableSimulationGlobal enableStamina enableTeamSwitch enableTraffic enableUAVConnectability ' +
              'enableUAVWaypoints enableVehicleCargo enableVehicleSensor enableWeaponDisassembly ' +
              'endLoadingScreen endMission engineOn enginesIsOnRTD enginesRpmRTD enginesTorqueRTD entities ' +
              'environmentEnabled estimatedEndServerTime estimatedTimeLeft evalObjectArgument everyBackpack ' +
              'everyContainer exec execEditorScript execFSM execVM exp expectedDestination exportJIPMessages ' +
              'eyeDirection eyePos face faction fadeMusic fadeRadio fadeSound fadeSpeech failMission ' +
              'fillWeaponsFromPool find findCover findDisplay findEditorObject findEmptyPosition ' +
              'findEmptyPositionReady findIf findNearestEnemy finishMissionInit finite fire fireAtTarget ' +
              'firstBackpack flag flagAnimationPhase flagOwner flagSide flagTexture fleeing floor flyInHeight ' +
              'flyInHeightASL fog fogForecast fogParams forceAddUniform forcedMap forceEnd forceFlagTexture ' +
              'forceFollowRoad forceMap forceRespawn forceSpeed forceWalk forceWeaponFire forceWeatherChange ' +
              'forEachMember forEachMemberAgent forEachMemberTeam forgetTarget format formation ' +
              'formationDirection formationLeader formationMembers formationPosition formationTask formatText ' +
              'formLeader freeLook fromEditor fuel fullCrew gearIDCAmmoCount gearSlotAmmoCount gearSlotData ' +
              'get3DENActionState get3DENAttribute get3DENCamera get3DENConnections get3DENEntity ' +
              'get3DENEntityID get3DENGrid get3DENIconsVisible get3DENLayerEntities get3DENLinesVisible ' +
              'get3DENMissionAttribute get3DENMouseOver get3DENSelected getAimingCoef getAllEnvSoundControllers ' +
              'getAllHitPointsDamage getAllOwnedMines getAllSoundControllers getAmmoCargo getAnimAimPrecision ' +
              'getAnimSpeedCoef getArray getArtilleryAmmo getArtilleryComputerSettings getArtilleryETA ' +
              'getAssignedCuratorLogic getAssignedCuratorUnit getBackpackCargo getBleedingRemaining ' +
              'getBurningValue getCameraViewDirection getCargoIndex getCenterOfMass getClientState ' +
              'getClientStateNumber getCompatiblePylonMagazines getConnectedUAV getContainerMaxLoad ' +
              'getCursorObjectParams getCustomAimCoef getDammage getDescription getDir getDirVisual ' +
              'getDLCAssetsUsage getDLCAssetsUsageByName getDLCs getEditorCamera getEditorMode ' +
              'getEditorObjectScope getElevationOffset getEnvSoundController getFatigue getForcedFlagTexture ' +
              'getFriend getFSMVariable getFuelCargo getGroupIcon getGroupIconParams getGroupIcons getHideFrom ' +
              'getHit getHitIndex getHitPointDamage getItemCargo getMagazineCargo getMarkerColor getMarkerPos ' +
              'getMarkerSize getMarkerType getMass getMissionConfig getMissionConfigValue getMissionDLCs ' +
              'getMissionLayerEntities getModelInfo getMousePosition getMusicPlayedTime getNumber ' +
              'getObjectArgument getObjectChildren getObjectDLC getObjectMaterials getObjectProxy ' +
              'getObjectTextures getObjectType getObjectViewDistance getOxygenRemaining getPersonUsedDLCs ' +
              'getPilotCameraDirection getPilotCameraPosition getPilotCameraRotation getPilotCameraTarget ' +
              'getPlateNumber getPlayerChannel getPlayerScores getPlayerUID getPos getPosASL getPosASLVisual ' +
              'getPosASLW getPosATL getPosATLVisual getPosVisual getPosWorld getPylonMagazines getRelDir ' +
              'getRelPos getRemoteSensorsDisabled getRepairCargo getResolution getShadowDistance getShotParents ' +
              'getSlingLoad getSoundController getSoundControllerResult getSpeed getStamina getStatValue ' +
              'getSuppression getTerrainGrid getTerrainHeightASL getText getTotalDLCUsageTime getUnitLoadout ' +
              'getUnitTrait getUserMFDText getUserMFDvalue getVariable getVehicleCargo getWeaponCargo ' +
              'getWeaponSway getWingsOrientationRTD getWingsPositionRTD getWPPos glanceAt globalChat globalRadio ' +
              'goggles goto group groupChat groupFromNetId groupIconSelectable groupIconsVisible groupId ' +
              'groupOwner groupRadio groupSelectedUnits groupSelectUnit gunner gusts halt handgunItems ' +
              'handgunMagazine handgunWeapon handsHit hasInterface hasPilotCamera hasWeapon hcAllGroups ' +
              'hcGroupParams hcLeader hcRemoveAllGroups hcRemoveGroup hcSelected hcSelectGroup hcSetGroup ' +
              'hcShowBar hcShownBar headgear hideBody hideObject hideObjectGlobal hideSelection hint hintC ' +
              'hintCadet hintSilent hmd hostMission htmlLoad HUDMovementLevels humidity image importAllGroups ' +
              'importance in inArea inAreaArray incapacitatedState inflame inflamed infoPanel ' +
              'infoPanelComponentEnabled infoPanelComponents infoPanels inGameUISetEventHandler inheritsFrom ' +
              'initAmbientLife inPolygon inputAction inRangeOfArtillery insertEditorObject intersect is3DEN ' +
              'is3DENMultiplayer isAbleToBreathe isAgent isArray isAutoHoverOn isAutonomous isAutotest ' +
              'isBleeding isBurning isClass isCollisionLightOn isCopilotEnabled isDamageAllowed isDedicated ' +
              'isDLCAvailable isEngineOn isEqualTo isEqualType isEqualTypeAll isEqualTypeAny isEqualTypeArray ' +
              'isEqualTypeParams isFilePatchingEnabled isFlashlightOn isFlatEmpty isForcedWalk isFormationLeader ' +
              'isGroupDeletedWhenEmpty isHidden isInRemainsCollector isInstructorFigureEnabled isIRLaserOn ' +
              'isKeyActive isKindOf isLaserOn isLightOn isLocalized isManualFire isMarkedForCollection ' +
              'isMultiplayer isMultiplayerSolo isNil isNull isNumber isObjectHidden isObjectRTD isOnRoad ' +
              'isPipEnabled isPlayer isRealTime isRemoteExecuted isRemoteExecutedJIP isServer isShowing3DIcons ' +
              'isSimpleObject isSprintAllowed isStaminaEnabled isSteamMission isStreamFriendlyUIEnabled isText ' +
              'isTouchingGround isTurnedOut isTutHintsEnabled isUAVConnectable isUAVConnected isUIContext ' +
              'isUniformAllowed isVehicleCargo isVehicleRadarOn isVehicleSensorEnabled isWalking ' +
              'isWeaponDeployed isWeaponRested itemCargo items itemsWithMagazines join joinAs joinAsSilent ' +
              'joinSilent joinString kbAddDatabase kbAddDatabaseTargets kbAddTopic kbHasTopic kbReact ' +
              'kbRemoveTopic kbTell kbWasSaid keyImage keyName knowsAbout land landAt landResult language ' +
              'laserTarget lbAdd lbClear lbColor lbColorRight lbCurSel lbData lbDelete lbIsSelected lbPicture ' +
              'lbPictureRight lbSelection lbSetColor lbSetColorRight lbSetCurSel lbSetData lbSetPicture ' +
              'lbSetPictureColor lbSetPictureColorDisabled lbSetPictureColorSelected lbSetPictureRight ' +
              'lbSetPictureRightColor lbSetPictureRightColorDisabled lbSetPictureRightColorSelected ' +
              'lbSetSelectColor lbSetSelectColorRight lbSetSelected lbSetText lbSetTextRight lbSetTooltip ' +
              'lbSetValue lbSize lbSort lbSortByValue lbText lbTextRight lbValue leader leaderboardDeInit ' +
              'leaderboardGetRows leaderboardInit leaderboardRequestRowsFriends leaderboardsRequestUploadScore ' +
              'leaderboardsRequestUploadScoreKeepBest leaderboardState leaveVehicle libraryCredits ' +
              'libraryDisclaimers lifeState lightAttachObject lightDetachObject lightIsOn lightnings limitSpeed ' +
              'linearConversion lineIntersects lineIntersectsObjs lineIntersectsSurfaces lineIntersectsWith ' +
              'linkItem list listObjects listRemoteTargets listVehicleSensors ln lnbAddArray lnbAddColumn ' +
              'lnbAddRow lnbClear lnbColor lnbCurSelRow lnbData lnbDeleteColumn lnbDeleteRow ' +
              'lnbGetColumnsPosition lnbPicture lnbSetColor lnbSetColumnsPos lnbSetCurSelRow lnbSetData ' +
              'lnbSetPicture lnbSetText lnbSetValue lnbSize lnbSort lnbSortByValue lnbText lnbValue load loadAbs ' +
              'loadBackpack loadFile loadGame loadIdentity loadMagazine loadOverlay loadStatus loadUniform ' +
              'loadVest local localize locationPosition lock lockCameraTo lockCargo lockDriver locked ' +
              'lockedCargo lockedDriver lockedTurret lockIdentity lockTurret lockWP log logEntities logNetwork ' +
              'logNetworkTerminate lookAt lookAtPos magazineCargo magazines magazinesAllTurrets magazinesAmmo ' +
              'magazinesAmmoCargo magazinesAmmoFull magazinesDetail magazinesDetailBackpack ' +
              'magazinesDetailUniform magazinesDetailVest magazinesTurret magazineTurretAmmo mapAnimAdd ' +
              'mapAnimClear mapAnimCommit mapAnimDone mapCenterOnCamera mapGridPosition markAsFinishedOnSteam ' +
              'markerAlpha markerBrush markerColor markerDir markerPos markerShape markerSize markerText ' +
              'markerType max members menuAction menuAdd menuChecked menuClear menuCollapse menuData menuDelete ' +
              'menuEnable menuEnabled menuExpand menuHover menuPicture menuSetAction menuSetCheck menuSetData ' +
              'menuSetPicture menuSetValue menuShortcut menuShortcutText menuSize menuSort menuText menuURL ' +
              'menuValue min mineActive mineDetectedBy missionConfigFile missionDifficulty missionName ' +
              'missionNamespace missionStart missionVersion mod modelToWorld modelToWorldVisual ' +
              'modelToWorldVisualWorld modelToWorldWorld modParams moonIntensity moonPhase morale move ' +
              'move3DENCamera moveInAny moveInCargo moveInCommander moveInDriver moveInGunner moveInTurret ' +
              'moveObjectToEnd moveOut moveTime moveTo moveToCompleted moveToFailed musicVolume name nameSound ' +
              'nearEntities nearestBuilding nearestLocation nearestLocations nearestLocationWithDubbing ' +
              'nearestObject nearestObjects nearestTerrainObjects nearObjects nearObjectsReady nearRoads ' +
              'nearSupplies nearTargets needReload netId netObjNull newOverlay nextMenuItemIndex ' +
              'nextWeatherChange nMenuItems not numberOfEnginesRTD numberToDate objectCurators objectFromNetId ' +
              'objectParent objStatus onBriefingGroup onBriefingNotes onBriefingPlan onBriefingTeamSwitch ' +
              'onCommandModeChanged onDoubleClick onEachFrame onGroupIconClick onGroupIconOverEnter ' +
              'onGroupIconOverLeave onHCGroupSelectionChanged onMapSingleClick onPlayerConnected ' +
              'onPlayerDisconnected onPreloadFinished onPreloadStarted onShowNewObject onTeamSwitch ' +
              'openCuratorInterface openDLCPage openMap openSteamApp openYoutubeVideo or orderGetIn overcast ' +
              'overcastForecast owner param params parseNumber parseSimpleArray parseText parsingNamespace ' +
              'particlesQuality pickWeaponPool pitch pixelGrid pixelGridBase pixelGridNoUIScale pixelH pixelW ' +
              'playableSlotsNumber playableUnits playAction playActionNow player playerRespawnTime playerSide ' +
              'playersNumber playGesture playMission playMove playMoveNow playMusic playScriptedMission ' +
              'playSound playSound3D position positionCameraToWorld posScreenToWorld posWorldToScreen ' +
              'ppEffectAdjust ppEffectCommit ppEffectCommitted ppEffectCreate ppEffectDestroy ppEffectEnable ' +
              'ppEffectEnabled ppEffectForceInNVG precision preloadCamera preloadObject preloadSound ' +
              'preloadTitleObj preloadTitleRsc preprocessFile preprocessFileLineNumbers primaryWeapon ' +
              'primaryWeaponItems primaryWeaponMagazine priority processDiaryLink productVersion profileName ' +
              'profileNamespace profileNameSteam progressLoadingScreen progressPosition progressSetPosition ' +
              'publicVariable publicVariableClient publicVariableServer pushBack pushBackUnique putWeaponPool ' +
              'queryItemsPool queryMagazinePool queryWeaponPool rad radioChannelAdd radioChannelCreate ' +
              'radioChannelRemove radioChannelSetCallSign radioChannelSetLabel radioVolume rain rainbow random ' +
              'rank rankId rating rectangular registeredTasks registerTask reload reloadEnabled remoteControl ' +
              'remoteExec remoteExecCall remoteExecutedOwner remove3DENConnection remove3DENEventHandler ' +
              'remove3DENLayer removeAction removeAll3DENEventHandlers removeAllActions removeAllAssignedItems ' +
              'removeAllContainers removeAllCuratorAddons removeAllCuratorCameraAreas ' +
              'removeAllCuratorEditingAreas removeAllEventHandlers removeAllHandgunItems removeAllItems ' +
              'removeAllItemsWithMagazines removeAllMissionEventHandlers removeAllMPEventHandlers ' +
              'removeAllMusicEventHandlers removeAllOwnedMines removeAllPrimaryWeaponItems removeAllWeapons ' +
              'removeBackpack removeBackpackGlobal removeCuratorAddons removeCuratorCameraArea ' +
              'removeCuratorEditableObjects removeCuratorEditingArea removeDrawIcon removeDrawLinks ' +
              'removeEventHandler removeFromRemainsCollector removeGoggles removeGroupIcon removeHandgunItem ' +
              'removeHeadgear removeItem removeItemFromBackpack removeItemFromUniform removeItemFromVest ' +
              'removeItems removeMagazine removeMagazineGlobal removeMagazines removeMagazinesTurret ' +
              'removeMagazineTurret removeMenuItem removeMissionEventHandler removeMPEventHandler ' +
              'removeMusicEventHandler removeOwnedMine removePrimaryWeaponItem removeSecondaryWeaponItem ' +
              'removeSimpleTask removeSwitchableUnit removeTeamMember removeUniform removeVest removeWeapon ' +
              'removeWeaponAttachmentCargo removeWeaponCargo removeWeaponGlobal removeWeaponTurret ' +
              'reportRemoteTarget requiredVersion resetCamShake resetSubgroupDirection resize resources ' +
              'respawnVehicle restartEditorCamera reveal revealMine reverse reversedMouseY roadAt ' +
              'roadsConnectedTo roleDescription ropeAttachedObjects ropeAttachedTo ropeAttachEnabled ' +
              'ropeAttachTo ropeCreate ropeCut ropeDestroy ropeDetach ropeEndPosition ropeLength ropes ' +
              'ropeUnwind ropeUnwound rotorsForcesRTD rotorsRpmRTD round runInitScript safeZoneH safeZoneW ' +
              'safeZoneWAbs safeZoneX safeZoneXAbs safeZoneY save3DENInventory saveGame saveIdentity ' +
              'saveJoysticks saveOverlay saveProfileNamespace saveStatus saveVar savingEnabled say say2D say3D ' +
              'scopeName score scoreSide screenshot screenToWorld scriptDone scriptName scudState ' +
              'secondaryWeapon secondaryWeaponItems secondaryWeaponMagazine select selectBestPlaces ' +
              'selectDiarySubject selectedEditorObjects selectEditorObject selectionNames selectionPosition ' +
              'selectLeader selectMax selectMin selectNoPlayer selectPlayer selectRandom selectRandomWeighted ' +
              'selectWeapon selectWeaponTurret sendAUMessage sendSimpleCommand sendTask sendTaskResult ' +
              'sendUDPMessage serverCommand serverCommandAvailable serverCommandExecutable serverName serverTime ' +
              'set set3DENAttribute set3DENAttributes set3DENGrid set3DENIconsVisible set3DENLayer ' +
              'set3DENLinesVisible set3DENLogicType set3DENMissionAttribute set3DENMissionAttributes ' +
              'set3DENModelsVisible set3DENObjectType set3DENSelected setAccTime setActualCollectiveRTD ' +
              'setAirplaneThrottle setAirportSide setAmmo setAmmoCargo setAmmoOnPylon setAnimSpeedCoef ' +
              'setAperture setApertureNew setArmoryPoints setAttributes setAutonomous setBehaviour ' +
              'setBleedingRemaining setBrakesRTD setCameraInterest setCamShakeDefParams setCamShakeParams ' +
              'setCamUseTI setCaptive setCenterOfMass setCollisionLight setCombatMode setCompassOscillation ' +
              'setConvoySeparation setCuratorCameraAreaCeiling setCuratorCoef setCuratorEditingAreaType ' +
              'setCuratorWaypointCost setCurrentChannel setCurrentTask setCurrentWaypoint setCustomAimCoef ' +
              'setCustomWeightRTD setDamage setDammage setDate setDebriefingText setDefaultCamera setDestination ' +
              'setDetailMapBlendPars setDir setDirection setDrawIcon setDriveOnPath setDropInterval ' +
              'setDynamicSimulationDistance setDynamicSimulationDistanceCoef setEditorMode setEditorObjectScope ' +
              'setEffectCondition setEngineRPMRTD setFace setFaceAnimation setFatigue setFeatureType ' +
              'setFlagAnimationPhase setFlagOwner setFlagSide setFlagTexture setFog setFormation ' +
              'setFormationTask setFormDir setFriend setFromEditor setFSMVariable setFuel setFuelCargo ' +
              'setGroupIcon setGroupIconParams setGroupIconsSelectable setGroupIconsVisible setGroupId ' +
              'setGroupIdGlobal setGroupOwner setGusts setHideBehind setHit setHitIndex setHitPointDamage ' +
              'setHorizonParallaxCoef setHUDMovementLevels setIdentity setImportance setInfoPanel setLeader ' +
              'setLightAmbient setLightAttenuation setLightBrightness setLightColor setLightDayLight ' +
              'setLightFlareMaxDistance setLightFlareSize setLightIntensity setLightnings setLightUseFlare ' +
              'setLocalWindParams setMagazineTurretAmmo setMarkerAlpha setMarkerAlphaLocal setMarkerBrush ' +
              'setMarkerBrushLocal setMarkerColor setMarkerColorLocal setMarkerDir setMarkerDirLocal ' +
              'setMarkerPos setMarkerPosLocal setMarkerShape setMarkerShapeLocal setMarkerSize ' +
              'setMarkerSizeLocal setMarkerText setMarkerTextLocal setMarkerType setMarkerTypeLocal setMass ' +
              'setMimic setMousePosition setMusicEffect setMusicEventHandler setName setNameSound ' +
              'setObjectArguments setObjectMaterial setObjectMaterialGlobal setObjectProxy setObjectTexture ' +
              'setObjectTextureGlobal setObjectViewDistance setOvercast setOwner setOxygenRemaining ' +
              'setParticleCircle setParticleClass setParticleFire setParticleParams setParticleRandom ' +
              'setPilotCameraDirection setPilotCameraRotation setPilotCameraTarget setPilotLight setPiPEffect ' +
              'setPitch setPlateNumber setPlayable setPlayerRespawnTime setPos setPosASL setPosASL2 setPosASLW ' +
              'setPosATL setPosition setPosWorld setPylonLoadOut setPylonsPriority setRadioMsg setRain ' +
              'setRainbow setRandomLip setRank setRectangular setRepairCargo setRotorBrakeRTD setShadowDistance ' +
              'setShotParents setSide setSimpleTaskAlwaysVisible setSimpleTaskCustomData ' +
              'setSimpleTaskDescription setSimpleTaskDestination setSimpleTaskTarget setSimpleTaskType ' +
              'setSimulWeatherLayers setSize setSkill setSlingLoad setSoundEffect setSpeaker setSpeech ' +
              'setSpeedMode setStamina setStaminaScheme setStatValue setSuppression setSystemOfUnits ' +
              'setTargetAge setTaskMarkerOffset setTaskResult setTaskState setTerrainGrid setText ' +
              'setTimeMultiplier setTitleEffect setTrafficDensity setTrafficDistance setTrafficGap ' +
              'setTrafficSpeed setTriggerActivation setTriggerArea setTriggerStatements setTriggerText ' +
              'setTriggerTimeout setTriggerType setType setUnconscious setUnitAbility setUnitLoadout setUnitPos ' +
              'setUnitPosWeak setUnitRank setUnitRecoilCoefficient setUnitTrait setUnloadInCombat ' +
              'setUserActionText setUserMFDText setUserMFDvalue setVariable setVectorDir setVectorDirAndUp ' +
              'setVectorUp setVehicleAmmo setVehicleAmmoDef setVehicleArmor setVehicleCargo setVehicleId ' +
              'setVehicleLock setVehiclePosition setVehicleRadar setVehicleReceiveRemoteTargets ' +
              'setVehicleReportOwnPosition setVehicleReportRemoteTargets setVehicleTIPars setVehicleVarName ' +
              'setVelocity setVelocityModelSpace setVelocityTransformation setViewDistance ' +
              'setVisibleIfTreeCollapsed setWantedRPMRTD setWaves setWaypointBehaviour setWaypointCombatMode ' +
              'setWaypointCompletionRadius setWaypointDescription setWaypointForceBehaviour setWaypointFormation ' +
              'setWaypointHousePosition setWaypointLoiterRadius setWaypointLoiterType setWaypointName ' +
              'setWaypointPosition setWaypointScript setWaypointSpeed setWaypointStatements setWaypointTimeout ' +
              'setWaypointType setWaypointVisible setWeaponReloadingTime setWind setWindDir setWindForce ' +
              'setWindStr setWingForceScaleRTD setWPPos show3DIcons showChat showCinemaBorder showCommandingMenu ' +
              'showCompass showCuratorCompass showGPS showHUD showLegend showMap shownArtilleryComputer ' +
              'shownChat shownCompass shownCuratorCompass showNewEditorObject shownGPS shownHUD shownMap ' +
              'shownPad shownRadio shownScoretable shownUAVFeed shownWarrant shownWatch showPad showRadio ' +
              'showScoretable showSubtitles showUAVFeed showWarrant showWatch showWaypoint showWaypoints side ' +
              'sideChat sideEnemy sideFriendly sideRadio simpleTasks simulationEnabled simulCloudDensity ' +
              'simulCloudOcclusion simulInClouds simulWeatherSync sin size sizeOf skill skillFinal skipTime ' +
              'sleep sliderPosition sliderRange sliderSetPosition sliderSetRange sliderSetSpeed sliderSpeed ' +
              'slingLoadAssistantShown soldierMagazines someAmmo sort soundVolume spawn speaker speed speedMode ' +
              'splitString sqrt squadParams stance startLoadingScreen step stop stopEngineRTD stopped str ' +
              'sunOrMoon supportInfo suppressFor surfaceIsWater surfaceNormal surfaceType swimInDepth ' +
              'switchableUnits switchAction switchCamera switchGesture switchLight switchMove ' +
              'synchronizedObjects synchronizedTriggers synchronizedWaypoints synchronizeObjectsAdd ' +
              'synchronizeObjectsRemove synchronizeTrigger synchronizeWaypoint systemChat systemOfUnits tan ' +
              'targetKnowledge targets targetsAggregate targetsQuery taskAlwaysVisible taskChildren ' +
              'taskCompleted taskCustomData taskDescription taskDestination taskHint taskMarkerOffset taskParent ' +
              'taskResult taskState taskType teamMember teamName teams teamSwitch teamSwitchEnabled teamType ' +
              'terminate terrainIntersect terrainIntersectASL terrainIntersectAtASL text textLog textLogFormat ' +
              'tg time timeMultiplier titleCut titleFadeOut titleObj titleRsc titleText toArray toFixed toLower ' +
              'toString toUpper triggerActivated triggerActivation triggerArea triggerAttachedVehicle ' +
              'triggerAttachObject triggerAttachVehicle triggerDynamicSimulation triggerStatements triggerText ' +
              'triggerTimeout triggerTimeoutCurrent triggerType turretLocal turretOwner turretUnit tvAdd tvClear ' +
              'tvCollapse tvCollapseAll tvCount tvCurSel tvData tvDelete tvExpand tvExpandAll tvPicture ' +
              'tvSetColor tvSetCurSel tvSetData tvSetPicture tvSetPictureColor tvSetPictureColorDisabled ' +
              'tvSetPictureColorSelected tvSetPictureRight tvSetPictureRightColor tvSetPictureRightColorDisabled ' +
              'tvSetPictureRightColorSelected tvSetText tvSetTooltip tvSetValue tvSort tvSortByValue tvText ' +
              'tvTooltip tvValue type typeName typeOf UAVControl uiNamespace uiSleep unassignCurator ' +
              'unassignItem unassignTeam unassignVehicle underwater uniform uniformContainer uniformItems ' +
              'uniformMagazines unitAddons unitAimPosition unitAimPositionVisual unitBackpack unitIsUAV unitPos ' +
              'unitReady unitRecoilCoefficient units unitsBelowHeight unlinkItem unlockAchievement ' +
              'unregisterTask updateDrawIcon updateMenuItem updateObjectTree useAISteeringComponent ' +
              'useAudioTimeForMoves userInputDisabled vectorAdd vectorCos vectorCrossProduct vectorDiff ' +
              'vectorDir vectorDirVisual vectorDistance vectorDistanceSqr vectorDotProduct vectorFromTo ' +
              'vectorMagnitude vectorMagnitudeSqr vectorModelToWorld vectorModelToWorldVisual vectorMultiply ' +
              'vectorNormalized vectorUp vectorUpVisual vectorWorldToModel vectorWorldToModelVisual vehicle ' +
              'vehicleCargoEnabled vehicleChat vehicleRadio vehicleReceiveRemoteTargets vehicleReportOwnPosition ' +
              'vehicleReportRemoteTargets vehicles vehicleVarName velocity velocityModelSpace verifySignature ' +
              'vest vestContainer vestItems vestMagazines viewDistance visibleCompass visibleGPS visibleMap ' +
              'visiblePosition visiblePositionASL visibleScoretable visibleWatch waves waypointAttachedObject ' +
              'waypointAttachedVehicle waypointAttachObject waypointAttachVehicle waypointBehaviour ' +
              'waypointCombatMode waypointCompletionRadius waypointDescription waypointForceBehaviour ' +
              'waypointFormation waypointHousePosition waypointLoiterRadius waypointLoiterType waypointName ' +
              'waypointPosition waypoints waypointScript waypointsEnabledUAV waypointShow waypointSpeed ' +
              'waypointStatements waypointTimeout waypointTimeoutCurrent waypointType waypointVisible ' +
              'weaponAccessories weaponAccessoriesCargo weaponCargo weaponDirection weaponInertia weaponLowered ' +
              'weapons weaponsItems weaponsItemsCargo weaponState weaponsTurret weightRTD WFSideText wind ',
            literal:
              'blufor civilian configNull controlNull displayNull east endl false grpNull independent lineBreak ' +
              'locationNull nil objNull opfor pi resistance scriptNull sideAmbientLife sideEmpty sideLogic ' +
              'sideUnknown taskNull teamMemberNull true west'
          },
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.NUMBER_MODE,
            VARIABLE,
            FUNCTION,
            STRINGS,
            CPP.preprocessor
          ],
          illegal: /#|^\$ /
        };
      };

      /***/
    },
    /* 505 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var COMMENT_MODE = hljs.COMMENT('--', '$');
        return {
          case_insensitive: true,
          illegal: /[<>{}*]/,
          contains: [
            {
              beginKeywords:
                'begin end start commit rollback savepoint lock alter create drop rename call ' +
                'delete do handler insert load replace select truncate update set show pragma grant ' +
                'merge describe use explain help declare prepare execute deallocate release ' +
                'unlock purge reset change stop analyze cache flush optimize repair kill ' +
                'install uninstall checksum restore check backup revoke comment with',
              end: /;/,
              endsWithParent: true,
              lexemes: /[\w\.]+/,
              keywords: {
                keyword:
                  'as abort abs absolute acc acce accep accept access accessed accessible account acos action activate add ' +
                  'addtime admin administer advanced advise aes_decrypt aes_encrypt after agent aggregate ali alia alias ' +
                  'allocate allow alter always analyze ancillary and any anydata anydataset anyschema anytype apply ' +
                  'archive archived archivelog are as asc ascii asin assembly assertion associate asynchronous at atan ' +
                  'atn2 attr attri attrib attribu attribut attribute attributes audit authenticated authentication authid ' +
                  'authors auto autoallocate autodblink autoextend automatic availability avg backup badfile basicfile ' +
                  'before begin beginning benchmark between bfile bfile_base big bigfile bin binary_double binary_float ' +
                  'binlog bit_and bit_count bit_length bit_or bit_xor bitmap blob_base block blocksize body both bound ' +
                  'buffer_cache buffer_pool build bulk by byte byteordermark bytes cache caching call calling cancel ' +
                  'capacity cascade cascaded case cast catalog category ceil ceiling chain change changed char_base ' +
                  'char_length character_length characters characterset charindex charset charsetform charsetid check ' +
                  'checksum checksum_agg child choose chr chunk class cleanup clear client clob clob_base clone close ' +
                  'cluster_id cluster_probability cluster_set clustering coalesce coercibility col collate collation ' +
                  'collect colu colum column column_value columns columns_updated comment commit compact compatibility ' +
                  'compiled complete composite_limit compound compress compute concat concat_ws concurrent confirm conn ' +
                  'connec connect connect_by_iscycle connect_by_isleaf connect_by_root connect_time connection ' +
                  'consider consistent constant constraint constraints constructor container content contents context ' +
                  'contributors controlfile conv convert convert_tz corr corr_k corr_s corresponding corruption cos cost ' +
                  'count count_big counted covar_pop covar_samp cpu_per_call cpu_per_session crc32 create creation ' +
                  'critical cross cube cume_dist curdate current current_date current_time current_timestamp current_user ' +
                  'cursor curtime customdatum cycle data database databases datafile datafiles datalength date_add ' +
                  'date_cache date_format date_sub dateadd datediff datefromparts datename datepart datetime2fromparts ' +
                  'day day_to_second dayname dayofmonth dayofweek dayofyear days db_role_change dbtimezone ddl deallocate ' +
                  'declare decode decompose decrement decrypt deduplicate def defa defau defaul default defaults ' +
                  'deferred defi defin define degrees delayed delegate delete delete_all delimited demand dense_rank ' +
                  'depth dequeue des_decrypt des_encrypt des_key_file desc descr descri describ describe descriptor ' +
                  'deterministic diagnostics difference dimension direct_load directory disable disable_all ' +
                  'disallow disassociate discardfile disconnect diskgroup distinct distinctrow distribute distributed div ' +
                  'do document domain dotnet double downgrade drop dumpfile duplicate duration each edition editionable ' +
                  'editions element ellipsis else elsif elt empty enable enable_all enclosed encode encoding encrypt ' +
                  'end end-exec endian enforced engine engines enqueue enterprise entityescaping eomonth error errors ' +
                  'escaped evalname evaluate event eventdata events except exception exceptions exchange exclude excluding ' +
                  'execu execut execute exempt exists exit exp expire explain export export_set extended extent external ' +
                  'external_1 external_2 externally extract failed failed_login_attempts failover failure far fast ' +
                  'feature_set feature_value fetch field fields file file_name_convert filesystem_like_logging final ' +
                  'finish first first_value fixed flash_cache flashback floor flush following follows for forall force foreign ' +
                  'form forma format found found_rows freelist freelists freepools fresh from from_base64 from_days ' +
                  'ftp full function general generated get get_format get_lock getdate getutcdate global global_name ' +
                  'globally go goto grant grants greatest group group_concat group_id grouping grouping_id groups ' +
                  'gtid_subtract guarantee guard handler hash hashkeys having hea head headi headin heading heap help hex ' +
                  'hierarchy high high_priority hosts hour http id ident_current ident_incr ident_seed identified ' +
                  'identity idle_time if ifnull ignore iif ilike ilm immediate import in include including increment ' +
                  'index indexes indexing indextype indicator indices inet6_aton inet6_ntoa inet_aton inet_ntoa infile ' +
                  'initial initialized initially initrans inmemory inner innodb input insert install instance instantiable ' +
                  'instr interface interleaved intersect into invalidate invisible is is_free_lock is_ipv4 is_ipv4_compat ' +
                  'is_not is_not_null is_used_lock isdate isnull isolation iterate java join json json_exists ' +
                  'keep keep_duplicates key keys kill language large last last_day last_insert_id last_value lax lcase ' +
                  'lead leading least leaves left len lenght length less level levels library like like2 like4 likec limit ' +
                  'lines link list listagg little ln load load_file lob lobs local localtime localtimestamp locate ' +
                  'locator lock locked log log10 log2 logfile logfiles logging logical logical_reads_per_call ' +
                  'logoff logon logs long loop low low_priority lower lpad lrtrim ltrim main make_set makedate maketime ' +
                  'managed management manual map mapping mask master master_pos_wait match matched materialized max ' +
                  'maxextents maximize maxinstances maxlen maxlogfiles maxloghistory maxlogmembers maxsize maxtrans ' +
                  'md5 measures median medium member memcompress memory merge microsecond mid migration min minextents ' +
                  'minimum mining minus minute minvalue missing mod mode model modification modify module monitoring month ' +
                  'months mount move movement multiset mutex name name_const names nan national native natural nav nchar ' +
                  'nclob nested never new newline next nextval no no_write_to_binlog noarchivelog noaudit nobadfile ' +
                  'nocheck nocompress nocopy nocycle nodelay nodiscardfile noentityescaping noguarantee nokeep nologfile ' +
                  'nomapping nomaxvalue nominimize nominvalue nomonitoring none noneditionable nonschema noorder ' +
                  'nopr nopro noprom nopromp noprompt norely noresetlogs noreverse normal norowdependencies noschemacheck ' +
                  'noswitch not nothing notice notnull notrim novalidate now nowait nth_value nullif nulls num numb numbe ' +
                  'nvarchar nvarchar2 object ocicoll ocidate ocidatetime ociduration ociinterval ociloblocator ocinumber ' +
                  'ociref ocirefcursor ocirowid ocistring ocitype oct octet_length of off offline offset oid oidindex old ' +
                  'on online only opaque open operations operator optimal optimize option optionally or oracle oracle_date ' +
                  'oradata ord ordaudio orddicom orddoc order ordimage ordinality ordvideo organization orlany orlvary ' +
                  'out outer outfile outline output over overflow overriding package pad parallel parallel_enable ' +
                  'parameters parent parse partial partition partitions pascal passing password password_grace_time ' +
                  'password_lock_time password_reuse_max password_reuse_time password_verify_function patch path patindex ' +
                  'pctincrease pctthreshold pctused pctversion percent percent_rank percentile_cont percentile_disc ' +
                  'performance period period_add period_diff permanent physical pi pipe pipelined pivot pluggable plugin ' +
                  'policy position post_transaction pow power pragma prebuilt precedes preceding precision prediction ' +
                  'prediction_cost prediction_details prediction_probability prediction_set prepare present preserve ' +
                  'prior priority private private_sga privileges procedural procedure procedure_analyze processlist ' +
                  'profiles project prompt protection public publishingservername purge quarter query quick quiesce quota ' +
                  'quotename radians raise rand range rank raw read reads readsize rebuild record records ' +
                  'recover recovery recursive recycle redo reduced ref reference referenced references referencing refresh ' +
                  'regexp_like register regr_avgx regr_avgy regr_count regr_intercept regr_r2 regr_slope regr_sxx regr_sxy ' +
                  'reject rekey relational relative relaylog release release_lock relies_on relocate rely rem remainder rename ' +
                  'repair repeat replace replicate replication required reset resetlogs resize resource respect restore ' +
                  'restricted result result_cache resumable resume retention return returning returns reuse reverse revoke ' +
                  'right rlike role roles rollback rolling rollup round row row_count rowdependencies rowid rownum rows ' +
                  'rtrim rules safe salt sample save savepoint sb1 sb2 sb4 scan schema schemacheck scn scope scroll ' +
                  'sdo_georaster sdo_topo_geometry search sec_to_time second section securefile security seed segment select ' +
                  'self sequence sequential serializable server servererror session session_user sessions_per_user set ' +
                  'sets settings sha sha1 sha2 share shared shared_pool short show shrink shutdown si_averagecolor ' +
                  'si_colorhistogram si_featurelist si_positionalcolor si_stillimage si_texture siblings sid sign sin ' +
                  'size size_t sizes skip slave sleep smalldatetimefromparts smallfile snapshot some soname sort soundex ' +
                  'source space sparse spfile split sql sql_big_result sql_buffer_result sql_cache sql_calc_found_rows ' +
                  'sql_small_result sql_variant_property sqlcode sqldata sqlerror sqlname sqlstate sqrt square standalone ' +
                  'standby start starting startup statement static statistics stats_binomial_test stats_crosstab ' +
                  'stats_ks_test stats_mode stats_mw_test stats_one_way_anova stats_t_test_ stats_t_test_indep ' +
                  'stats_t_test_one stats_t_test_paired stats_wsr_test status std stddev stddev_pop stddev_samp stdev ' +
                  'stop storage store stored str str_to_date straight_join strcmp strict string struct stuff style subdate ' +
                  'subpartition subpartitions substitutable substr substring subtime subtring_index subtype success sum ' +
                  'suspend switch switchoffset switchover sync synchronous synonym sys sys_xmlagg sysasm sysaux sysdate ' +
                  'sysdatetimeoffset sysdba sysoper system system_user sysutcdatetime table tables tablespace tan tdo ' +
                  'template temporary terminated tertiary_weights test than then thread through tier ties time time_format ' +
                  'time_zone timediff timefromparts timeout timestamp timestampadd timestampdiff timezone_abbr ' +
                  'timezone_minute timezone_region to to_base64 to_date to_days to_seconds todatetimeoffset trace tracking ' +
                  'transaction transactional translate translation treat trigger trigger_nestlevel triggers trim truncate ' +
                  'try_cast try_convert try_parse type ub1 ub2 ub4 ucase unarchived unbounded uncompress ' +
                  'under undo unhex unicode uniform uninstall union unique unix_timestamp unknown unlimited unlock unnest unpivot ' +
                  'unrecoverable unsafe unsigned until untrusted unusable unused update updated upgrade upped upper upsert ' +
                  'url urowid usable usage use use_stored_outlines user user_data user_resources users using utc_date ' +
                  'utc_timestamp uuid uuid_short validate validate_password_strength validation valist value values var ' +
                  'var_samp varcharc vari varia variab variabl variable variables variance varp varraw varrawc varray ' +
                  'verify version versions view virtual visible void wait wallet warning warnings week weekday weekofyear ' +
                  'wellformed when whene whenev wheneve whenever where while whitespace with within without work wrapped ' +
                  'xdb xml xmlagg xmlattributes xmlcast xmlcolattval xmlelement xmlexists xmlforest xmlindex xmlnamespaces ' +
                  'xmlpi xmlquery xmlroot xmlschema xmlserialize xmltable xmltype xor year year_to_month years yearweek',
                literal: 'true false null unknown',
                built_in:
                  'array bigint binary bit blob bool boolean char character date dec decimal float int int8 integer interval number ' +
                  'numeric real record serial serial8 smallint text time timestamp varchar varying void'
              },
              contains: [
                {
                  className: 'string',
                  begin: "'",
                  end: "'",
                  contains: [hljs.BACKSLASH_ESCAPE, { begin: "''" }]
                },
                {
                  className: 'string',
                  begin: '"',
                  end: '"',
                  contains: [hljs.BACKSLASH_ESCAPE, { begin: '""' }]
                },
                {
                  className: 'string',
                  begin: '`',
                  end: '`',
                  contains: [hljs.BACKSLASH_ESCAPE]
                },
                hljs.C_NUMBER_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                COMMENT_MODE,
                hljs.HASH_COMMENT_MODE
              ]
            },
            hljs.C_BLOCK_COMMENT_MODE,
            COMMENT_MODE,
            hljs.HASH_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 506 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          contains: [
            hljs.HASH_COMMENT_MODE,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              begin: hljs.UNDERSCORE_IDENT_RE,
              lexemes: hljs.UNDERSCORE_IDENT_RE,
              keywords: {
                // Stan's keywords
                name: 'for in while repeat until if then else',
                // Stan's probablity distributions (less beta and gamma, as commonly
                // used for parameter names). So far, _log and _rng variants are not
                // included
                symbol:
                  'bernoulli bernoulli_logit binomial binomial_logit ' +
                  'beta_binomial hypergeometric categorical categorical_logit ' +
                  'ordered_logistic neg_binomial neg_binomial_2 ' +
                  'neg_binomial_2_log poisson poisson_log multinomial normal ' +
                  'exp_mod_normal skew_normal student_t cauchy double_exponential ' +
                  'logistic gumbel lognormal chi_square inv_chi_square ' +
                  'scaled_inv_chi_square exponential inv_gamma weibull frechet ' +
                  'rayleigh wiener pareto pareto_type_2 von_mises uniform ' +
                  'multi_normal multi_normal_prec multi_normal_cholesky multi_gp ' +
                  'multi_gp_cholesky multi_student_t gaussian_dlm_obs dirichlet ' +
                  'lkj_corr lkj_corr_cholesky wishart inv_wishart',
                // Stan's data types
                'selector-tag':
                  'int real vector simplex unit_vector ordered positive_ordered ' +
                  'row_vector matrix cholesky_factor_corr cholesky_factor_cov ' +
                  'corr_matrix cov_matrix',
                // Stan's model blocks
                title:
                  'functions model data parameters quantities transformed ' +
                  'generated',
                literal: 'true false'
              },
              relevance: 0
            },
            // The below is all taken from the R language definition
            {
              // hex value
              className: 'number',
              begin: '0[xX][0-9a-fA-F]+[Li]?\\b',
              relevance: 0
            },
            {
              // hex value
              className: 'number',
              begin: '0[xX][0-9a-fA-F]+[Li]?\\b',
              relevance: 0
            },
            {
              // explicit integer
              className: 'number',
              begin: '\\d+(?:[eE][+\\-]?\\d*)?L\\b',
              relevance: 0
            },
            {
              // number with trailing decimal
              className: 'number',
              begin: '\\d+\\.(?!\\d)(?:i\\b)?',
              relevance: 0
            },
            {
              // number
              className: 'number',
              begin: '\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d*)?i?\\b',
              relevance: 0
            },
            {
              // number with leading decimal
              className: 'number',
              begin: '\\.\\d+(?:[eE][+\\-]?\\d*)?i?\\b',
              relevance: 0
            }
          ]
        };
      };

      /***/
    },
    /* 507 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['do', 'ado'],
          case_insensitive: true,
          keywords:
            'if else in foreach for forv forva forval forvalu forvalue forvalues by bys bysort xi quietly qui capture about ac ac_7 acprplot acprplot_7 adjust ado adopath adoupdate alpha ameans an ano anov anova anova_estat anova_terms anovadef aorder ap app appe appen append arch arch_dr arch_estat arch_p archlm areg areg_p args arima arima_dr arima_estat arima_p as asmprobit asmprobit_estat asmprobit_lf asmprobit_mfx__dlg asmprobit_p ass asse asser assert avplot avplot_7 avplots avplots_7 bcskew0 bgodfrey binreg bip0_lf biplot bipp_lf bipr_lf bipr_p biprobit bitest bitesti bitowt blogit bmemsize boot bootsamp bootstrap bootstrap_8 boxco_l boxco_p boxcox boxcox_6 boxcox_p bprobit br break brier bro brow brows browse brr brrstat bs bs_7 bsampl_w bsample bsample_7 bsqreg bstat bstat_7 bstat_8 bstrap bstrap_7 ca ca_estat ca_p cabiplot camat canon canon_8 canon_8_p canon_estat canon_p cap caprojection capt captu captur capture cat cc cchart cchart_7 cci cd censobs_table centile cf char chdir checkdlgfiles checkestimationsample checkhlpfiles checksum chelp ci cii cl class classutil clear cli clis clist clo clog clog_lf clog_p clogi clogi_sw clogit clogit_lf clogit_p clogitp clogl_sw cloglog clonevar clslistarray cluster cluster_measures cluster_stop cluster_tree cluster_tree_8 clustermat cmdlog cnr cnre cnreg cnreg_p cnreg_sw cnsreg codebook collaps4 collapse colormult_nb colormult_nw compare compress conf confi confir confirm conren cons const constr constra constrai constrain constraint continue contract copy copyright copysource cor corc corr corr2data corr_anti corr_kmo corr_smc corre correl correla correlat correlate corrgram cou coun count cox cox_p cox_sw coxbase coxhaz coxvar cprplot cprplot_7 crc cret cretu cretur creturn cross cs cscript cscript_log csi ct ct_is ctset ctst_5 ctst_st cttost cumsp cumsp_7 cumul cusum cusum_7 cutil d|0 datasig datasign datasigna datasignat datasignatu datasignatur datasignature datetof db dbeta de dec deco decod decode deff des desc descr descri describ describe destring dfbeta dfgls dfuller di di_g dir dirstats dis discard disp disp_res disp_s displ displa display distinct do doe doed doedi doedit dotplot dotplot_7 dprobit drawnorm drop ds ds_util dstdize duplicates durbina dwstat dydx e|0 ed edi edit egen eivreg emdef en enc enco encod encode eq erase ereg ereg_lf ereg_p ereg_sw ereghet ereghet_glf ereghet_glf_sh ereghet_gp ereghet_ilf ereghet_ilf_sh ereghet_ip eret eretu eretur ereturn err erro error est est_cfexist est_cfname est_clickable est_expand est_hold est_table est_unhold est_unholdok estat estat_default estat_summ estat_vce_only esti estimates etodow etof etomdy ex exi exit expand expandcl fac fact facto factor factor_estat factor_p factor_pca_rotated factor_rotate factormat fcast fcast_compute fcast_graph fdades fdadesc fdadescr fdadescri fdadescrib fdadescribe fdasav fdasave fdause fh_st file open file read file close file filefilter fillin find_hlp_file findfile findit findit_7 fit fl fli flis flist for5_0 form forma format fpredict frac_154 frac_adj frac_chk frac_cox frac_ddp frac_dis frac_dv frac_in frac_mun frac_pp frac_pq frac_pv frac_wgt frac_xo fracgen fracplot fracplot_7 fracpoly fracpred fron_ex fron_hn fron_p fron_tn fron_tn2 frontier ftodate ftoe ftomdy ftowdate g|0 gamhet_glf gamhet_gp gamhet_ilf gamhet_ip gamma gamma_d2 gamma_p gamma_sw gammahet gdi_hexagon gdi_spokes ge gen gene gener genera generat generate genrank genstd genvmean gettoken gl gladder gladder_7 glim_l01 glim_l02 glim_l03 glim_l04 glim_l05 glim_l06 glim_l07 glim_l08 glim_l09 glim_l10 glim_l11 glim_l12 glim_lf glim_mu glim_nw1 glim_nw2 glim_nw3 glim_p glim_v1 glim_v2 glim_v3 glim_v4 glim_v5 glim_v6 glim_v7 glm glm_6 glm_p glm_sw glmpred glo glob globa global glogit glogit_8 glogit_p gmeans gnbre_lf gnbreg gnbreg_5 gnbreg_p gomp_lf gompe_sw gomper_p gompertz gompertzhet gomphet_glf gomphet_glf_sh gomphet_gp gomphet_ilf gomphet_ilf_sh gomphet_ip gphdot gphpen gphprint gprefs gprobi_p gprobit gprobit_8 gr gr7 gr_copy gr_current gr_db gr_describe gr_dir gr_draw gr_draw_replay gr_drop gr_edit gr_editviewopts gr_example gr_example2 gr_export gr_print gr_qscheme gr_query gr_read gr_rename gr_replay gr_save gr_set gr_setscheme gr_table gr_undo gr_use graph graph7 grebar greigen greigen_7 greigen_8 grmeanby grmeanby_7 gs_fileinfo gs_filetype gs_graphinfo gs_stat gsort gwood h|0 hadimvo hareg hausman haver he heck_d2 heckma_p heckman heckp_lf heckpr_p heckprob hel help hereg hetpr_lf hetpr_p hetprob hettest hexdump hilite hist hist_7 histogram hlogit hlu hmeans hotel hotelling hprobit hreg hsearch icd9 icd9_ff icd9p iis impute imtest inbase include inf infi infil infile infix inp inpu input ins insheet insp inspe inspec inspect integ inten intreg intreg_7 intreg_p intrg2_ll intrg_ll intrg_ll2 ipolate iqreg ir irf irf_create irfm iri is_svy is_svysum isid istdize ivprob_1_lf ivprob_lf ivprobit ivprobit_p ivreg ivreg_footnote ivtob_1_lf ivtob_lf ivtobit ivtobit_p jackknife jacknife jknife jknife_6 jknife_8 jkstat joinby kalarma1 kap kap_3 kapmeier kappa kapwgt kdensity kdensity_7 keep ksm ksmirnov ktau kwallis l|0 la lab labe label labelbook ladder levels levelsof leverage lfit lfit_p li lincom line linktest lis list lloghet_glf lloghet_glf_sh lloghet_gp lloghet_ilf lloghet_ilf_sh lloghet_ip llogi_sw llogis_p llogist llogistic llogistichet lnorm_lf lnorm_sw lnorma_p lnormal lnormalhet lnormhet_glf lnormhet_glf_sh lnormhet_gp lnormhet_ilf lnormhet_ilf_sh lnormhet_ip lnskew0 loadingplot loc loca local log logi logis_lf logistic logistic_p logit logit_estat logit_p loglogs logrank loneway lookfor lookup lowess lowess_7 lpredict lrecomp lroc lroc_7 lrtest ls lsens lsens_7 lsens_x lstat ltable ltable_7 ltriang lv lvr2plot lvr2plot_7 m|0 ma mac macr macro makecns man manova manova_estat manova_p manovatest mantel mark markin markout marksample mat mat_capp mat_order mat_put_rr mat_rapp mata mata_clear mata_describe mata_drop mata_matdescribe mata_matsave mata_matuse mata_memory mata_mlib mata_mosave mata_rename mata_which matalabel matcproc matlist matname matr matri matrix matrix_input__dlg matstrik mcc mcci md0_ md1_ md1debug_ md2_ md2debug_ mds mds_estat mds_p mdsconfig mdslong mdsmat mdsshepard mdytoe mdytof me_derd mean means median memory memsize meqparse mer merg merge mfp mfx mhelp mhodds minbound mixed_ll mixed_ll_reparm mkassert mkdir mkmat mkspline ml ml_5 ml_adjs ml_bhhhs ml_c_d ml_check ml_clear ml_cnt ml_debug ml_defd ml_e0 ml_e0_bfgs ml_e0_cycle ml_e0_dfp ml_e0i ml_e1 ml_e1_bfgs ml_e1_bhhh ml_e1_cycle ml_e1_dfp ml_e2 ml_e2_cycle ml_ebfg0 ml_ebfr0 ml_ebfr1 ml_ebh0q ml_ebhh0 ml_ebhr0 ml_ebr0i ml_ecr0i ml_edfp0 ml_edfr0 ml_edfr1 ml_edr0i ml_eds ml_eer0i ml_egr0i ml_elf ml_elf_bfgs ml_elf_bhhh ml_elf_cycle ml_elf_dfp ml_elfi ml_elfs ml_enr0i ml_enrr0 ml_erdu0 ml_erdu0_bfgs ml_erdu0_bhhh ml_erdu0_bhhhq ml_erdu0_cycle ml_erdu0_dfp ml_erdu0_nrbfgs ml_exde ml_footnote ml_geqnr ml_grad0 ml_graph ml_hbhhh ml_hd0 ml_hold ml_init ml_inv ml_log ml_max ml_mlout ml_mlout_8 ml_model ml_nb0 ml_opt ml_p ml_plot ml_query ml_rdgrd ml_repor ml_s_e ml_score ml_searc ml_technique ml_unhold mleval mlf_ mlmatbysum mlmatsum mlog mlogi mlogit mlogit_footnote mlogit_p mlopts mlsum mlvecsum mnl0_ mor more mov move mprobit mprobit_lf mprobit_p mrdu0_ mrdu1_ mvdecode mvencode mvreg mvreg_estat n|0 nbreg nbreg_al nbreg_lf nbreg_p nbreg_sw nestreg net newey newey_7 newey_p news nl nl_7 nl_9 nl_9_p nl_p nl_p_7 nlcom nlcom_p nlexp2 nlexp2_7 nlexp2a nlexp2a_7 nlexp3 nlexp3_7 nlgom3 nlgom3_7 nlgom4 nlgom4_7 nlinit nllog3 nllog3_7 nllog4 nllog4_7 nlog_rd nlogit nlogit_p nlogitgen nlogittree nlpred no nobreak noi nois noisi noisil noisily note notes notes_dlg nptrend numlabel numlist odbc old_ver olo olog ologi ologi_sw ologit ologit_p ologitp on one onew onewa oneway op_colnm op_comp op_diff op_inv op_str opr opro oprob oprob_sw oprobi oprobi_p oprobit oprobitp opts_exclusive order orthog orthpoly ou out outf outfi outfil outfile outs outsh outshe outshee outsheet ovtest pac pac_7 palette parse parse_dissim pause pca pca_8 pca_display pca_estat pca_p pca_rotate pcamat pchart pchart_7 pchi pchi_7 pcorr pctile pentium pergram pergram_7 permute permute_8 personal peto_st pkcollapse pkcross pkequiv pkexamine pkexamine_7 pkshape pksumm pksumm_7 pl plo plot plugin pnorm pnorm_7 poisgof poiss_lf poiss_sw poisso_p poisson poisson_estat post postclose postfile postutil pperron pr prais prais_e prais_e2 prais_p predict predictnl preserve print pro prob probi probit probit_estat probit_p proc_time procoverlay procrustes procrustes_estat procrustes_p profiler prog progr progra program prop proportion prtest prtesti pwcorr pwd q\\s qby qbys qchi qchi_7 qladder qladder_7 qnorm qnorm_7 qqplot qqplot_7 qreg qreg_c qreg_p qreg_sw qu quadchk quantile quantile_7 que quer query range ranksum ratio rchart rchart_7 rcof recast reclink recode reg reg3 reg3_p regdw regr regre regre_p2 regres regres_p regress regress_estat regriv_p remap ren rena renam rename renpfix repeat replace report reshape restore ret retu retur return rm rmdir robvar roccomp roccomp_7 roccomp_8 rocf_lf rocfit rocfit_8 rocgold rocplot rocplot_7 roctab roctab_7 rolling rologit rologit_p rot rota rotat rotate rotatemat rreg rreg_p ru run runtest rvfplot rvfplot_7 rvpplot rvpplot_7 sa safesum sample sampsi sav save savedresults saveold sc sca scal scala scalar scatter scm_mine sco scob_lf scob_p scobi_sw scobit scor score scoreplot scoreplot_help scree screeplot screeplot_help sdtest sdtesti se search separate seperate serrbar serrbar_7 serset set set_defaults sfrancia sh she shel shell shewhart shewhart_7 signestimationsample signrank signtest simul simul_7 simulate simulate_8 sktest sleep slogit slogit_d2 slogit_p smooth snapspan so sor sort spearman spikeplot spikeplot_7 spikeplt spline_x split sqreg sqreg_p sret sretu sretur sreturn ssc st st_ct st_hc st_hcd st_hcd_sh st_is st_issys st_note st_promo st_set st_show st_smpl st_subid stack statsby statsby_8 stbase stci stci_7 stcox stcox_estat stcox_fr stcox_fr_ll stcox_p stcox_sw stcoxkm stcoxkm_7 stcstat stcurv stcurve stcurve_7 stdes stem stepwise stereg stfill stgen stir stjoin stmc stmh stphplot stphplot_7 stphtest stphtest_7 stptime strate strate_7 streg streg_sw streset sts sts_7 stset stsplit stsum sttocc sttoct stvary stweib su suest suest_8 sum summ summa summar summari summariz summarize sunflower sureg survcurv survsum svar svar_p svmat svy svy_disp svy_dreg svy_est svy_est_7 svy_estat svy_get svy_gnbreg_p svy_head svy_header svy_heckman_p svy_heckprob_p svy_intreg_p svy_ivreg_p svy_logistic_p svy_logit_p svy_mlogit_p svy_nbreg_p svy_ologit_p svy_oprobit_p svy_poisson_p svy_probit_p svy_regress_p svy_sub svy_sub_7 svy_x svy_x_7 svy_x_p svydes svydes_8 svygen svygnbreg svyheckman svyheckprob svyintreg svyintreg_7 svyintrg svyivreg svylc svylog_p svylogit svymarkout svymarkout_8 svymean svymlog svymlogit svynbreg svyolog svyologit svyoprob svyoprobit svyopts svypois svypois_7 svypoisson svyprobit svyprobt svyprop svyprop_7 svyratio svyreg svyreg_p svyregress svyset svyset_7 svyset_8 svytab svytab_7 svytest svytotal sw sw_8 swcnreg swcox swereg swilk swlogis swlogit swologit swoprbt swpois swprobit swqreg swtobit swweib symmetry symmi symplot symplot_7 syntax sysdescribe sysdir sysuse szroeter ta tab tab1 tab2 tab_or tabd tabdi tabdis tabdisp tabi table tabodds tabodds_7 tabstat tabu tabul tabula tabulat tabulate te tempfile tempname tempvar tes test testnl testparm teststd tetrachoric time_it timer tis tob tobi tobit tobit_p tobit_sw token tokeni tokeniz tokenize tostring total translate translator transmap treat_ll treatr_p treatreg trim trnb_cons trnb_mean trpoiss_d2 trunc_ll truncr_p truncreg tsappend tset tsfill tsline tsline_ex tsreport tsrevar tsrline tsset tssmooth tsunab ttest ttesti tut_chk tut_wait tutorial tw tware_st two twoway twoway__fpfit_serset twoway__function_gen twoway__histogram_gen twoway__ipoint_serset twoway__ipoints_serset twoway__kdensity_gen twoway__lfit_serset twoway__normgen_gen twoway__pci_serset twoway__qfit_serset twoway__scatteri_serset twoway__sunflower_gen twoway_ksm_serset ty typ type typeof u|0 unab unabbrev unabcmd update us use uselabel var var_mkcompanion var_p varbasic varfcast vargranger varirf varirf_add varirf_cgraph varirf_create varirf_ctable varirf_describe varirf_dir varirf_drop varirf_erase varirf_graph varirf_ograph varirf_rename varirf_set varirf_table varlist varlmar varnorm varsoc varstable varstable_w varstable_w2 varwle vce vec vec_fevd vec_mkphi vec_p vec_p_w vecirf_create veclmar veclmar_w vecnorm vecnorm_w vecrank vecstable verinst vers versi versio version view viewsource vif vwls wdatetof webdescribe webseek webuse weib1_lf weib2_lf weib_lf weib_lf0 weibhet_glf weibhet_glf_sh weibhet_glfa weibhet_glfa_sh weibhet_gp weibhet_ilf weibhet_ilf_sh weibhet_ilfa weibhet_ilfa_sh weibhet_ip weibu_sw weibul_p weibull weibull_c weibull_s weibullhet wh whelp whi which whil while wilc_st wilcoxon win wind windo window winexec wntestb wntestb_7 wntestq xchart xchart_7 xcorr xcorr_7 xi xi_6 xmlsav xmlsave xmluse xpose xsh xshe xshel xshell xt_iis xt_tis xtab_p xtabond xtbin_p xtclog xtcloglog xtcloglog_8 xtcloglog_d2 xtcloglog_pa_p xtcloglog_re_p xtcnt_p xtcorr xtdata xtdes xtfront_p xtfrontier xtgee xtgee_elink xtgee_estat xtgee_makeivar xtgee_p xtgee_plink xtgls xtgls_p xthaus xthausman xtht_p xthtaylor xtile xtint_p xtintreg xtintreg_8 xtintreg_d2 xtintreg_p xtivp_1 xtivp_2 xtivreg xtline xtline_ex xtlogit xtlogit_8 xtlogit_d2 xtlogit_fe_p xtlogit_pa_p xtlogit_re_p xtmixed xtmixed_estat xtmixed_p xtnb_fe xtnb_lf xtnbreg xtnbreg_pa_p xtnbreg_refe_p xtpcse xtpcse_p xtpois xtpoisson xtpoisson_d2 xtpoisson_pa_p xtpoisson_refe_p xtpred xtprobit xtprobit_8 xtprobit_d2 xtprobit_re_p xtps_fe xtps_lf xtps_ren xtps_ren_8 xtrar_p xtrc xtrc_p xtrchh xtrefe_p xtreg xtreg_be xtreg_fe xtreg_ml xtreg_pa_p xtreg_re xtregar xtrere_p xtset xtsf_ll xtsf_llti xtsum xttab xttest0 xttobit xttobit_8 xttobit_p xttrans yx yxview__barlike_draw yxview_area_draw yxview_bar_draw yxview_dot_draw yxview_dropline_draw yxview_function_draw yxview_iarrow_draw yxview_ilabels_draw yxview_normal_draw yxview_pcarrow_draw yxview_pcbarrow_draw yxview_pccapsym_draw yxview_pcscatter_draw yxview_pcspike_draw yxview_rarea_draw yxview_rbar_draw yxview_rbarm_draw yxview_rcap_draw yxview_rcapsym_draw yxview_rconnected_draw yxview_rline_draw yxview_rscatter_draw yxview_rspike_draw yxview_spike_draw yxview_sunflower_draw zap_s zinb zinb_llf zinb_plf zip zip_llf zip_p zip_plf zt_ct_5 zt_hc_5 zt_hcd_5 zt_is_5 zt_iss_5 zt_sho_5 zt_smp_5 ztbase_5 ztcox_5 ztdes_5 ztereg_5 ztfill_5 ztgen_5 ztir_5 ztjoin_5 ztnb ztnb_p ztp ztp_p zts_5 ztset_5 ztspli_5 ztsum_5 zttoct_5 ztvary_5 ztweib_5',
          contains: [
            {
              className: 'symbol',
              begin: /`[a-zA-Z0-9_]+'/
            },
            {
              className: 'variable',
              begin: /\$\{?[a-zA-Z0-9_]+\}?/
            },
            {
              className: 'string',
              variants: [{ begin: '`"[^\r\n]*?"\'' }, { begin: '"[^\r\n"]*"' }]
            },

            {
              className: 'built_in',
              variants: [
                {
                  begin:
                    '\\b(abs|acos|asin|atan|atan2|atanh|ceil|cloglog|comb|cos|digamma|exp|floor|invcloglog|invlogit|ln|lnfact|lnfactorial|lngamma|log|log10|max|min|mod|reldif|round|sign|sin|sqrt|sum|tan|tanh|trigamma|trunc|betaden|Binomial|binorm|binormal|chi2|chi2tail|dgammapda|dgammapdada|dgammapdadx|dgammapdx|dgammapdxdx|F|Fden|Ftail|gammaden|gammap|ibeta|invbinomial|invchi2|invchi2tail|invF|invFtail|invgammap|invibeta|invnchi2|invnFtail|invnibeta|invnorm|invnormal|invttail|nbetaden|nchi2|nFden|nFtail|nibeta|norm|normal|normalden|normd|npnchi2|tden|ttail|uniform|abbrev|char|index|indexnot|length|lower|ltrim|match|plural|proper|real|regexm|regexr|regexs|reverse|rtrim|string|strlen|strlower|strltrim|strmatch|strofreal|strpos|strproper|strreverse|strrtrim|strtrim|strupper|subinstr|subinword|substr|trim|upper|word|wordcount|_caller|autocode|byteorder|chop|clip|cond|e|epsdouble|epsfloat|group|inlist|inrange|irecode|matrix|maxbyte|maxdouble|maxfloat|maxint|maxlong|mi|minbyte|mindouble|minfloat|minint|minlong|missing|r|recode|replay|return|s|scalar|d|date|day|dow|doy|halfyear|mdy|month|quarter|week|year|d|daily|dofd|dofh|dofm|dofq|dofw|dofy|h|halfyearly|hofd|m|mofd|monthly|q|qofd|quarterly|tin|twithin|w|weekly|wofd|y|yearly|yh|ym|yofd|yq|yw|cholesky|colnumb|colsof|corr|det|diag|diag0cnt|el|get|hadamard|I|inv|invsym|issym|issymmetric|J|matmissing|matuniform|mreldif|nullmat|rownumb|rowsof|sweep|syminv|trace|vec|vecdiag)(?=\\(|$)'
                }
              ]
            },

            hljs.COMMENT('^[ \t]*\\*.*$', false),
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE
          ]
        };
      };

      /***/
    },
    /* 508 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var STEP21_IDENT_RE = '[A-Z_][A-Z0-9_.]*';
        var STEP21_KEYWORDS = {
          keyword: 'HEADER ENDSEC DATA'
        };
        var STEP21_START = {
          className: 'meta',
          begin: 'ISO-10303-21;',
          relevance: 10
        };
        var STEP21_CLOSE = {
          className: 'meta',
          begin: 'END-ISO-10303-21;',
          relevance: 10
        };

        return {
          aliases: ['p21', 'step', 'stp'],
          case_insensitive: true, // STEP 21 is case insensitive in theory, in practice all non-comments are capitalized.
          lexemes: STEP21_IDENT_RE,
          keywords: STEP21_KEYWORDS,
          contains: [
            STEP21_START,
            STEP21_CLOSE,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.COMMENT('/\\*\\*!', '\\*/'),
            hljs.C_NUMBER_MODE,
            hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null }),
            hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),
            {
              className: 'string',
              begin: "'",
              end: "'"
            },
            {
              className: 'symbol',
              variants: [
                {
                  begin: '#',
                  end: '\\d+',
                  illegal: '\\W'
                }
              ]
            }
          ]
        };
      };

      /***/
    },
    /* 509 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var VARIABLE = {
          className: 'variable',
          begin: '\\$' + hljs.IDENT_RE
        };

        var HEX_COLOR = {
          className: 'number',
          begin: '#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})'
        };

        var AT_KEYWORDS = [
          'charset',
          'css',
          'debug',
          'extend',
          'font-face',
          'for',
          'import',
          'include',
          'media',
          'mixin',
          'page',
          'warn',
          'while'
        ];

        var PSEUDO_SELECTORS = [
          'after',
          'before',
          'first-letter',
          'first-line',
          'active',
          'first-child',
          'focus',
          'hover',
          'lang',
          'link',
          'visited'
        ];

        var TAGS = [
          'a',
          'abbr',
          'address',
          'article',
          'aside',
          'audio',
          'b',
          'blockquote',
          'body',
          'button',
          'canvas',
          'caption',
          'cite',
          'code',
          'dd',
          'del',
          'details',
          'dfn',
          'div',
          'dl',
          'dt',
          'em',
          'fieldset',
          'figcaption',
          'figure',
          'footer',
          'form',
          'h1',
          'h2',
          'h3',
          'h4',
          'h5',
          'h6',
          'header',
          'hgroup',
          'html',
          'i',
          'iframe',
          'img',
          'input',
          'ins',
          'kbd',
          'label',
          'legend',
          'li',
          'mark',
          'menu',
          'nav',
          'object',
          'ol',
          'p',
          'q',
          'quote',
          'samp',
          'section',
          'span',
          'strong',
          'summary',
          'sup',
          'table',
          'tbody',
          'td',
          'textarea',
          'tfoot',
          'th',
          'thead',
          'time',
          'tr',
          'ul',
          'var',
          'video'
        ];

        var TAG_END = '[\\.\\s\\n\\[\\:,]';

        var ATTRIBUTES = [
          'align-content',
          'align-items',
          'align-self',
          'animation',
          'animation-delay',
          'animation-direction',
          'animation-duration',
          'animation-fill-mode',
          'animation-iteration-count',
          'animation-name',
          'animation-play-state',
          'animation-timing-function',
          'auto',
          'backface-visibility',
          'background',
          'background-attachment',
          'background-clip',
          'background-color',
          'background-image',
          'background-origin',
          'background-position',
          'background-repeat',
          'background-size',
          'border',
          'border-bottom',
          'border-bottom-color',
          'border-bottom-left-radius',
          'border-bottom-right-radius',
          'border-bottom-style',
          'border-bottom-width',
          'border-collapse',
          'border-color',
          'border-image',
          'border-image-outset',
          'border-image-repeat',
          'border-image-slice',
          'border-image-source',
          'border-image-width',
          'border-left',
          'border-left-color',
          'border-left-style',
          'border-left-width',
          'border-radius',
          'border-right',
          'border-right-color',
          'border-right-style',
          'border-right-width',
          'border-spacing',
          'border-style',
          'border-top',
          'border-top-color',
          'border-top-left-radius',
          'border-top-right-radius',
          'border-top-style',
          'border-top-width',
          'border-width',
          'bottom',
          'box-decoration-break',
          'box-shadow',
          'box-sizing',
          'break-after',
          'break-before',
          'break-inside',
          'caption-side',
          'clear',
          'clip',
          'clip-path',
          'color',
          'column-count',
          'column-fill',
          'column-gap',
          'column-rule',
          'column-rule-color',
          'column-rule-style',
          'column-rule-width',
          'column-span',
          'column-width',
          'columns',
          'content',
          'counter-increment',
          'counter-reset',
          'cursor',
          'direction',
          'display',
          'empty-cells',
          'filter',
          'flex',
          'flex-basis',
          'flex-direction',
          'flex-flow',
          'flex-grow',
          'flex-shrink',
          'flex-wrap',
          'float',
          'font',
          'font-family',
          'font-feature-settings',
          'font-kerning',
          'font-language-override',
          'font-size',
          'font-size-adjust',
          'font-stretch',
          'font-style',
          'font-variant',
          'font-variant-ligatures',
          'font-weight',
          'height',
          'hyphens',
          'icon',
          'image-orientation',
          'image-rendering',
          'image-resolution',
          'ime-mode',
          'inherit',
          'initial',
          'justify-content',
          'left',
          'letter-spacing',
          'line-height',
          'list-style',
          'list-style-image',
          'list-style-position',
          'list-style-type',
          'margin',
          'margin-bottom',
          'margin-left',
          'margin-right',
          'margin-top',
          'marks',
          'mask',
          'max-height',
          'max-width',
          'min-height',
          'min-width',
          'nav-down',
          'nav-index',
          'nav-left',
          'nav-right',
          'nav-up',
          'none',
          'normal',
          'object-fit',
          'object-position',
          'opacity',
          'order',
          'orphans',
          'outline',
          'outline-color',
          'outline-offset',
          'outline-style',
          'outline-width',
          'overflow',
          'overflow-wrap',
          'overflow-x',
          'overflow-y',
          'padding',
          'padding-bottom',
          'padding-left',
          'padding-right',
          'padding-top',
          'page-break-after',
          'page-break-before',
          'page-break-inside',
          'perspective',
          'perspective-origin',
          'pointer-events',
          'position',
          'quotes',
          'resize',
          'right',
          'tab-size',
          'table-layout',
          'text-align',
          'text-align-last',
          'text-decoration',
          'text-decoration-color',
          'text-decoration-line',
          'text-decoration-style',
          'text-indent',
          'text-overflow',
          'text-rendering',
          'text-shadow',
          'text-transform',
          'text-underline-position',
          'top',
          'transform',
          'transform-origin',
          'transform-style',
          'transition',
          'transition-delay',
          'transition-duration',
          'transition-property',
          'transition-timing-function',
          'unicode-bidi',
          'vertical-align',
          'visibility',
          'white-space',
          'widows',
          'width',
          'word-break',
          'word-spacing',
          'word-wrap',
          'z-index'
        ];

        // illegals
        var ILLEGAL = [
          '\\?',
          '(\\bReturn\\b)', // monkey
          '(\\bEnd\\b)', // monkey
          '(\\bend\\b)', // vbscript
          '(\\bdef\\b)', // gradle
          ';', // a whole lot of languages
          '#\\s', // markdown
          '\\*\\s', // markdown
          '===\\s', // markdown
          '\\|',
          '%' // prolog
        ];

        return {
          aliases: ['styl'],
          case_insensitive: false,
          keywords: 'if else for in',
          illegal: '(' + ILLEGAL.join('|') + ')',
          contains: [
            // strings
            hljs.QUOTE_STRING_MODE,
            hljs.APOS_STRING_MODE,

            // comments
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,

            // hex colors
            HEX_COLOR,

            // class tag
            {
              begin: '\\.[a-zA-Z][a-zA-Z0-9_-]*' + TAG_END,
              returnBegin: true,
              contains: [
                {
                  className: 'selector-class',
                  begin: '\\.[a-zA-Z][a-zA-Z0-9_-]*'
                }
              ]
            },

            // id tag
            {
              begin: '\\#[a-zA-Z][a-zA-Z0-9_-]*' + TAG_END,
              returnBegin: true,
              contains: [
                { className: 'selector-id', begin: '\\#[a-zA-Z][a-zA-Z0-9_-]*' }
              ]
            },

            // tags
            {
              begin: '\\b(' + TAGS.join('|') + ')' + TAG_END,
              returnBegin: true,
              contains: [
                {
                  className: 'selector-tag',
                  begin: '\\b[a-zA-Z][a-zA-Z0-9_-]*'
                }
              ]
            },

            // psuedo selectors
            {
              begin: '&?:?:\\b(' + PSEUDO_SELECTORS.join('|') + ')' + TAG_END
            },

            // @ keywords
            {
              begin: '@(' + AT_KEYWORDS.join('|') + ')\\b'
            },

            // variables
            VARIABLE,

            // dimension
            hljs.CSS_NUMBER_MODE,

            // number
            hljs.NUMBER_MODE,

            // functions
            //  - only from beginning of line + whitespace
            {
              className: 'function',
              begin: '^[a-zA-Z][a-zA-Z0-9_-]*\\(.*\\)',
              illegal: '[\\n]',
              returnBegin: true,
              contains: [
                { className: 'title', begin: '\\b[a-zA-Z][a-zA-Z0-9_-]*' },
                {
                  className: 'params',
                  begin: /\(/,
                  end: /\)/,
                  contains: [
                    HEX_COLOR,
                    VARIABLE,
                    hljs.APOS_STRING_MODE,
                    hljs.CSS_NUMBER_MODE,
                    hljs.NUMBER_MODE,
                    hljs.QUOTE_STRING_MODE
                  ]
                }
              ]
            },

            // attributes
            //  - only from beginning of line + whitespace
            //  - must have whitespace after it
            {
              className: 'attribute',
              begin: '\\b(' + ATTRIBUTES.reverse().join('|') + ')\\b',
              starts: {
                // value container
                end: /;|$/,
                contains: [
                  HEX_COLOR,
                  VARIABLE,
                  hljs.APOS_STRING_MODE,
                  hljs.QUOTE_STRING_MODE,
                  hljs.CSS_NUMBER_MODE,
                  hljs.NUMBER_MODE,
                  hljs.C_BLOCK_COMMENT_MODE
                ],
                illegal: /\./,
                relevance: 0
              }
            }
          ]
        };
      };

      /***/
    },
    /* 510 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var DETAILS = {
          className: 'string',
          begin: '\\[\n(multipart)?',
          end: '\\]\n'
        };
        var TIME = {
          className: 'string',
          begin: '\\d{4}-\\d{2}-\\d{2}(\\s+)\\d{2}:\\d{2}:\\d{2}.\\d+Z'
        };
        var PROGRESSVALUE = {
          className: 'string',
          begin: '(\\+|-)\\d+'
        };
        var KEYWORDS = {
          className: 'keyword',
          relevance: 10,
          variants: [
            {
              begin:
                '^(test|testing|success|successful|failure|error|skip|xfail|uxsuccess)(:?)\\s+(test)?'
            },
            { begin: '^progress(:?)(\\s+)?(pop|push)?' },
            { begin: '^tags:' },
            { begin: '^time:' }
          ]
        };
        return {
          case_insensitive: true,
          contains: [DETAILS, TIME, PROGRESSVALUE, KEYWORDS]
        };
      };

      /***/
    },
    /* 511 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var SWIFT_KEYWORDS = {
          keyword:
            '#available #colorLiteral #column #else #elseif #endif #file ' +
            '#fileLiteral #function #if #imageLiteral #line #selector #sourceLocation ' +
            '_ __COLUMN__ __FILE__ __FUNCTION__ __LINE__ Any as as! as? associatedtype ' +
            'associativity break case catch class continue convenience default defer deinit didSet do ' +
            'dynamic dynamicType else enum extension fallthrough false fileprivate final for func ' +
            'get guard if import in indirect infix init inout internal is lazy left let ' +
            'mutating nil none nonmutating open operator optional override postfix precedence ' +
            'prefix private protocol Protocol public repeat required rethrows return ' +
            'right self Self set static struct subscript super switch throw throws true ' +
            'try try! try? Type typealias unowned var weak where while willSet',
          literal: 'true false nil',
          built_in:
            'abs advance alignof alignofValue anyGenerator assert assertionFailure ' +
            'bridgeFromObjectiveC bridgeFromObjectiveCUnconditional bridgeToObjectiveC ' +
            'bridgeToObjectiveCUnconditional c contains count countElements countLeadingZeros ' +
            'debugPrint debugPrintln distance dropFirst dropLast dump encodeBitsAsWords ' +
            'enumerate equal fatalError filter find getBridgedObjectiveCType getVaList ' +
            'indices insertionSort isBridgedToObjectiveC isBridgedVerbatimToObjectiveC ' +
            'isUniquelyReferenced isUniquelyReferencedNonObjC join lazy lexicographicalCompare ' +
            'map max maxElement min minElement numericCast overlaps partition posix ' +
            'precondition preconditionFailure print println quickSort readLine reduce reflect ' +
            'reinterpretCast reverse roundUpToAlignment sizeof sizeofValue sort split ' +
            'startsWith stride strideof strideofValue swap toString transcode ' +
            'underestimateCount unsafeAddressOf unsafeBitCast unsafeDowncast unsafeUnwrap ' +
            'unsafeReflect withExtendedLifetime withObjectAtPlusZero withUnsafePointer ' +
            'withUnsafePointerToObject withUnsafeMutablePointer withUnsafeMutablePointers ' +
            'withUnsafePointer withUnsafePointers withVaList zip'
        };

        var TYPE = {
          className: 'type',
          begin: "\\b[A-Z][\\w\u00C0-\u02B8']*",
          relevance: 0
        };
        var BLOCK_COMMENT = hljs.COMMENT('/\\*', '\\*/', {
          contains: ['self']
        });
        var SUBST = {
          className: 'subst',
          begin: /\\\(/,
          end: '\\)',
          keywords: SWIFT_KEYWORDS,
          contains: [] // assigned later
        };
        var STRING = {
          className: 'string',
          contains: [hljs.BACKSLASH_ESCAPE, SUBST],
          variants: [{ begin: /"""/, end: /"""/ }, { begin: /"/, end: /"/ }]
        };
        var NUMBERS = {
          className: 'number',
          begin:
            '\\b([\\d_]+(\\.[\\deE_]+)?|0x[a-fA-F0-9_]+(\\.[a-fA-F0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b',
          relevance: 0
        };
        SUBST.contains = [NUMBERS];

        return {
          keywords: SWIFT_KEYWORDS,
          contains: [
            STRING,
            hljs.C_LINE_COMMENT_MODE,
            BLOCK_COMMENT,
            TYPE,
            NUMBERS,
            {
              className: 'function',
              beginKeywords: 'func',
              end: '{',
              excludeEnd: true,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  begin: /[A-Za-z$_][0-9A-Za-z$_]*/
                }),
                {
                  begin: /</,
                  end: />/
                },
                {
                  className: 'params',
                  begin: /\(/,
                  end: /\)/,
                  endsParent: true,
                  keywords: SWIFT_KEYWORDS,
                  contains: [
                    'self',
                    NUMBERS,
                    STRING,
                    hljs.C_BLOCK_COMMENT_MODE,
                    { begin: ':' } // relevance booster
                  ],
                  illegal: /["']/
                }
              ],
              illegal: /\[|%/
            },
            {
              className: 'class',
              beginKeywords: 'struct protocol class extension enum',
              keywords: SWIFT_KEYWORDS,
              end: '\\{',
              excludeEnd: true,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  begin: /[A-Za-z$_][\u00C0-\u02B80-9A-Za-z$_]*/
                })
              ]
            },
            {
              className: 'meta', // @attributes
              begin:
                '(@discardableResult|@warn_unused_result|@exported|@lazy|@noescape|' +
                '@NSCopying|@NSManaged|@objc|@objcMembers|@convention|@required|' +
                '@noreturn|@IBAction|@IBDesignable|@IBInspectable|@IBOutlet|' +
                '@infix|@prefix|@postfix|@autoclosure|@testable|@available|' +
                '@nonobjc|@NSApplicationMain|@UIApplicationMain)'
            },
            {
              beginKeywords: 'import',
              end: /$/,
              contains: [hljs.C_LINE_COMMENT_MODE, BLOCK_COMMENT]
            }
          ]
        };
      };

      /***/
    },
    /* 512 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var COMMENT = {
          className: 'comment',
          begin: /\$noop\(/,
          end: /\)/,
          contains: [
            {
              begin: /\(/,
              end: /\)/,
              contains: [
                'self',
                {
                  begin: /\\./
                }
              ]
            }
          ],
          relevance: 10
        };

        var FUNCTION = {
          className: 'keyword',
          begin: /\$(?!noop)[a-zA-Z][_a-zA-Z0-9]*/,
          end: /\(/,
          excludeEnd: true
        };

        var VARIABLE = {
          className: 'variable',
          begin: /%[_a-zA-Z0-9:]*/,
          end: '%'
        };

        var ESCAPE_SEQUENCE = {
          className: 'symbol',
          begin: /\\./
        };

        return {
          contains: [COMMENT, FUNCTION, VARIABLE, ESCAPE_SEQUENCE]
        };
      };

      /***/
    },
    /* 513 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var LITERALS = 'true false yes no null';

        var keyPrefix = '^[ \\-]*';
        var keyName = '[a-zA-Z_][\\w\\-]*';
        var KEY = {
          className: 'attr',
          variants: [
            { begin: keyPrefix + keyName + ':' },
            { begin: keyPrefix + '"' + keyName + '"' + ':' },
            { begin: keyPrefix + "'" + keyName + "'" + ':' }
          ]
        };

        var TEMPLATE_VARIABLES = {
          className: 'template-variable',
          variants: [
            { begin: '{{', end: '}}' }, // jinja templates Ansible
            { begin: '%{', end: '}' } // Ruby i18n
          ]
        };
        var STRING = {
          className: 'string',
          relevance: 0,
          variants: [
            { begin: /'/, end: /'/ },
            { begin: /"/, end: /"/ },
            { begin: /\S+/ }
          ],
          contains: [hljs.BACKSLASH_ESCAPE, TEMPLATE_VARIABLES]
        };

        return {
          case_insensitive: true,
          aliases: ['yml', 'YAML', 'yaml'],
          contains: [
            KEY,
            {
              className: 'meta',
              begin: '^---s*$',
              relevance: 10
            },
            {
              // multi line string
              className: 'string',
              begin: '[\\|>] *$',
              returnEnd: true,
              contains: STRING.contains,
              // very simple termination: next hash key
              end: KEY.variants[0].begin
            },
            {
              // Ruby/Rails erb
              begin: '<%[%=-]?',
              end: '[%-]?%>',
              subLanguage: 'ruby',
              excludeBegin: true,
              excludeEnd: true,
              relevance: 0
            },
            {
              // local tags
              className: 'type',
              begin: '!' + hljs.UNDERSCORE_IDENT_RE
            },
            {
              // data type
              className: 'type',
              begin: '!!' + hljs.UNDERSCORE_IDENT_RE
            },
            {
              // fragment id &ref
              className: 'meta',
              begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$'
            },
            {
              // fragment reference *ref
              className: 'meta',
              begin: '\\*' + hljs.UNDERSCORE_IDENT_RE + '$'
            },
            {
              // array listing
              className: 'bullet',
              begin: '^ *-',
              relevance: 0
            },
            hljs.HASH_COMMENT_MODE,
            {
              beginKeywords: LITERALS,
              keywords: { literal: LITERALS }
            },
            hljs.C_NUMBER_MODE,
            STRING
          ]
        };
      };

      /***/
    },
    /* 514 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          case_insensitive: true,
          contains: [
            hljs.HASH_COMMENT_MODE,
            // version of format and total amount of testcases
            {
              className: 'meta',
              variants: [
                { begin: '^TAP version (\\d+)$' },
                { begin: '^1\\.\\.(\\d+)$' }
              ]
            },
            // YAML block
            {
              begin: '(s+)?---$',
              end: '\\.\\.\\.$',
              subLanguage: 'yaml',
              relevance: 0
            },
            // testcase number
            {
              className: 'number',
              begin: ' (\\d+) '
            },
            // testcase status and description
            {
              className: 'symbol',
              variants: [{ begin: '^ok' }, { begin: '^not ok' }]
            }
          ]
        };
      };

      /***/
    },
    /* 515 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['tk'],
          keywords:
            'after append apply array auto_execok auto_import auto_load auto_mkindex ' +
            'auto_mkindex_old auto_qualify auto_reset bgerror binary break catch cd chan clock ' +
            'close concat continue dde dict encoding eof error eval exec exit expr fblocked ' +
            'fconfigure fcopy file fileevent filename flush for foreach format gets glob global ' +
            'history http if incr info interp join lappend|10 lassign|10 lindex|10 linsert|10 list ' +
            'llength|10 load lrange|10 lrepeat|10 lreplace|10 lreverse|10 lsearch|10 lset|10 lsort|10 ' +
            'mathfunc mathop memory msgcat namespace open package parray pid pkg::create pkg_mkIndex ' +
            'platform platform::shell proc puts pwd read refchan regexp registry regsub|10 rename ' +
            'return safe scan seek set socket source split string subst switch tcl_endOfWord ' +
            'tcl_findLibrary tcl_startOfNextWord tcl_startOfPreviousWord tcl_wordBreakAfter ' +
            'tcl_wordBreakBefore tcltest tclvars tell time tm trace unknown unload unset update ' +
            'uplevel upvar variable vwait while',
          contains: [
            hljs.COMMENT(';[ \\t]*#', '$'),
            hljs.COMMENT('^[ \\t]*#', '$'),
            {
              beginKeywords: 'proc',
              end: '[\\{]',
              excludeEnd: true,
              contains: [
                {
                  className: 'title',
                  begin: '[ \\t\\n\\r]+(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',
                  end: '[ \\t\\n\\r]',
                  endsWithParent: true,
                  excludeEnd: true
                }
              ]
            },
            {
              excludeEnd: true,
              variants: [
                {
                  begin:
                    '\\$(\\{)?(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*\\(([a-zA-Z0-9_])*\\)',
                  end: '[^a-zA-Z0-9_\\}\\$]'
                },
                {
                  begin: '\\$(\\{)?(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',
                  end: '(\\))?[^a-zA-Z0-9_\\}\\$]'
                }
              ]
            },
            {
              className: 'string',
              contains: [hljs.BACKSLASH_ESCAPE],
              variants: [
                hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null }),
                hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null })
              ]
            },
            {
              className: 'number',
              variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]
            }
          ]
        };
      };

      /***/
    },
    /* 516 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var COMMAND = {
          className: 'tag',
          begin: /\\/,
          relevance: 0,
          contains: [
            {
              className: 'name',
              variants: [
                { begin: /[a-zA-Zа-яА-я]+[*]?/ },
                { begin: /[^a-zA-Zа-яА-я0-9]/ }
              ],
              starts: {
                endsWithParent: true,
                relevance: 0,
                contains: [
                  {
                    className: 'string', // because it looks like attributes in HTML tags
                    variants: [
                      { begin: /\[/, end: /\]/ },
                      { begin: /\{/, end: /\}/ }
                    ]
                  },
                  {
                    begin: /\s*=\s*/,
                    endsWithParent: true,
                    relevance: 0,
                    contains: [
                      {
                        className: 'number',
                        begin: /-?\d*\.?\d+(pt|pc|mm|cm|in|dd|cc|ex|em)?/
                      }
                    ]
                  }
                ]
              }
            }
          ]
        };

        return {
          contains: [
            COMMAND,
            {
              className: 'formula',
              contains: [COMMAND],
              relevance: 0,
              variants: [
                { begin: /\$\$/, end: /\$\$/ },
                { begin: /\$/, end: /\$/ }
              ]
            },
            hljs.COMMENT('%', '$', {
              relevance: 0
            })
          ]
        };
      };

      /***/
    },
    /* 517 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var BUILT_IN_TYPES = 'bool byte i16 i32 i64 double string binary';
        return {
          keywords: {
            keyword:
              'namespace const typedef struct enum service exception void oneway set list map required optional',
            built_in: BUILT_IN_TYPES,
            literal: 'true false'
          },
          contains: [
            hljs.QUOTE_STRING_MODE,
            hljs.NUMBER_MODE,
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: 'class',
              beginKeywords: 'struct enum service exception',
              end: /\{/,
              illegal: /\n/,
              contains: [
                hljs.inherit(hljs.TITLE_MODE, {
                  starts: { endsWithParent: true, excludeEnd: true } // hack: eating everything after the first title
                })
              ]
            },
            {
              begin: '\\b(set|list|map)\\s*<',
              end: '>',
              keywords: BUILT_IN_TYPES,
              contains: ['self']
            }
          ]
        };
      };

      /***/
    },
    /* 518 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var TPID = {
          className: 'number',
          begin: '[1-9][0-9]*' /* no leading zeros */,
          relevance: 0
        };
        var TPLABEL = {
          className: 'symbol',
          begin: ':[^\\]]+'
        };
        var TPDATA = {
          className: 'built_in',
          begin:
            '(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|\
	    TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\[',
          end: '\\]',
          contains: ['self', TPID, TPLABEL]
        };
        var TPIO = {
          className: 'built_in',
          begin: '(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\[',
          end: '\\]',
          contains: [
            'self',
            TPID,
            hljs.QUOTE_STRING_MODE /* for pos section at bottom */,
            TPLABEL
          ]
        };

        return {
          keywords: {
            keyword:
              'ABORT ACC ADJUST AND AP_LD BREAK CALL CNT COL CONDITION CONFIG DA DB ' +
              'DIV DETECT ELSE END ENDFOR ERR_NUM ERROR_PROG FINE FOR GP GUARD INC ' +
              'IF JMP LINEAR_MAX_SPEED LOCK MOD MONITOR OFFSET Offset OR OVERRIDE ' +
              'PAUSE PREG PTH RT_LD RUN SELECT SKIP Skip TA TB TO TOOL_OFFSET ' +
              'Tool_Offset UF UT UFRAME_NUM UTOOL_NUM UNLOCK WAIT X Y Z W P R STRLEN ' +
              'SUBSTR FINDSTR VOFFSET PROG ATTR MN POS',
            literal:
              'ON OFF max_speed LPOS JPOS ENABLE DISABLE START STOP RESET'
          },
          contains: [
            TPDATA,
            TPIO,
            {
              className: 'keyword',
              begin: '/(PROG|ATTR|MN|POS|END)\\b'
            },
            {
              /* this is for cases like ,CALL */
              className: 'keyword',
              begin: '(CALL|RUN|POINT_LOGIC|LBL)\\b'
            },
            {
              /* this is for cases like CNT100 where the default lexemes do not
	         * separate the keyword and the number */
              className: 'keyword',
              begin: '\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)'
            },
            {
              /* to catch numbers that do not have a word boundary on the left */
              className: 'number',
              begin:
                '\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\b',
              relevance: 0
            },
            hljs.COMMENT('//', '[;$]'),
            hljs.COMMENT('!', '[;$]'),
            hljs.COMMENT('--eg:', '$'),
            hljs.QUOTE_STRING_MODE,
            {
              className: 'string',
              begin: "'",
              end: "'"
            },
            hljs.C_NUMBER_MODE,
            {
              className: 'variable',
              begin: '\\$[A-Za-z0-9_]+'
            }
          ]
        };
      };

      /***/
    },
    /* 519 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var PARAMS = {
          className: 'params',
          begin: '\\(',
          end: '\\)'
        };

        var FUNCTION_NAMES =
          'attribute block constant cycle date dump include ' +
          'max min parent random range source template_from_string';

        var FUNCTIONS = {
          beginKeywords: FUNCTION_NAMES,
          keywords: { name: FUNCTION_NAMES },
          relevance: 0,
          contains: [PARAMS]
        };

        var FILTER = {
          begin: /\|[A-Za-z_]+:?/,
          keywords:
            'abs batch capitalize convert_encoding date date_modify default ' +
            'escape first format join json_encode keys last length lower ' +
            'merge nl2br number_format raw replace reverse round slice sort split ' +
            'striptags title trim upper url_encode',
          contains: [FUNCTIONS]
        };

        var TAGS =
          'autoescape block do embed extends filter flush for ' +
          'if import include macro sandbox set spaceless use verbatim';

        TAGS =
          TAGS +
          ' ' +
          TAGS.split(' ')
            .map(function(t) {
              return 'end' + t;
            })
            .join(' ');

        return {
          aliases: ['craftcms'],
          case_insensitive: true,
          subLanguage: 'xml',
          contains: [
            hljs.COMMENT(/\{#/, /#}/),
            {
              className: 'template-tag',
              begin: /\{%/,
              end: /%}/,
              contains: [
                {
                  className: 'name',
                  begin: /\w+/,
                  keywords: TAGS,
                  starts: {
                    endsWithParent: true,
                    contains: [FILTER, FUNCTIONS],
                    relevance: 0
                  }
                }
              ]
            },
            {
              className: 'template-variable',
              begin: /\{\{/,
              end: /}}/,
              contains: ['self', FILTER, FUNCTIONS]
            }
          ]
        };
      };

      /***/
    },
    /* 520 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';
        var KEYWORDS = {
          keyword:
            'in if for while finally var new function do return void else break catch ' +
            'instanceof with throw case default try this switch continue typeof delete ' +
            'let yield const class public private protected get set super ' +
            'static implements enum export import declare type namespace abstract ' +
            'as from extends async await',
          literal: 'true false null undefined NaN Infinity',
          built_in:
            'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +
            'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +
            'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +
            'TypeError URIError Number Math Date String RegExp Array Float32Array ' +
            'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +
            'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +
            'module console window document any number boolean string void Promise'
        };

        var DECORATOR = {
          className: 'meta',
          begin: '@' + JS_IDENT_RE
        };

        var ARGS = {
          begin: '\\(',
          end: /\)/,
          keywords: KEYWORDS,
          contains: [
            'self',
            hljs.QUOTE_STRING_MODE,
            hljs.APOS_STRING_MODE,
            hljs.NUMBER_MODE
          ]
        };

        var PARAMS = {
          className: 'params',
          begin: /\(/,
          end: /\)/,
          excludeBegin: true,
          excludeEnd: true,
          keywords: KEYWORDS,
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            DECORATOR,
            ARGS
          ]
        };

        return {
          aliases: ['ts'],
          keywords: KEYWORDS,
          contains: [
            {
              className: 'meta',
              begin: /^\s*['"]use strict['"]/
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              // template string
              className: 'string',
              begin: '`',
              end: '`',
              contains: [
                hljs.BACKSLASH_ESCAPE,
                {
                  className: 'subst',
                  begin: '\\$\\{',
                  end: '\\}'
                }
              ]
            },
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: 'number',
              variants: [
                { begin: '\\b(0[bB][01]+)' },
                { begin: '\\b(0[oO][0-7]+)' },
                { begin: hljs.C_NUMBER_RE }
              ],
              relevance: 0
            },
            {
              // "value" container
              begin:
                '(' + hljs.RE_STARTERS_RE + '|\\b(case|return|throw)\\b)\\s*',
              keywords: 'return throw case',
              contains: [
                hljs.C_LINE_COMMENT_MODE,
                hljs.C_BLOCK_COMMENT_MODE,
                hljs.REGEXP_MODE,
                {
                  className: 'function',
                  begin: '(\\(.*?\\)|' + hljs.IDENT_RE + ')\\s*=>',
                  returnBegin: true,
                  end: '\\s*=>',
                  contains: [
                    {
                      className: 'params',
                      variants: [
                        {
                          begin: hljs.IDENT_RE
                        },
                        {
                          begin: /\(\s*\)/
                        },
                        {
                          begin: /\(/,
                          end: /\)/,
                          excludeBegin: true,
                          excludeEnd: true,
                          keywords: KEYWORDS,
                          contains: [
                            'self',
                            hljs.C_LINE_COMMENT_MODE,
                            hljs.C_BLOCK_COMMENT_MODE
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              relevance: 0
            },
            {
              className: 'function',
              begin: 'function',
              end: /[\{;]/,
              excludeEnd: true,
              keywords: KEYWORDS,
              contains: [
                'self',
                hljs.inherit(hljs.TITLE_MODE, { begin: JS_IDENT_RE }),
                PARAMS
              ],
              illegal: /%/,
              relevance: 0 // () => {} is more typical in TypeScript
            },
            {
              beginKeywords: 'constructor',
              end: /\{/,
              excludeEnd: true,
              contains: ['self', PARAMS]
            },
            {
              // prevent references like module.id from being higlighted as module definitions
              begin: /module\./,
              keywords: { built_in: 'module' },
              relevance: 0
            },
            {
              beginKeywords: 'module',
              end: /\{/,
              excludeEnd: true
            },
            {
              beginKeywords: 'interface',
              end: /\{/,
              excludeEnd: true,
              keywords: 'interface extends'
            },
            {
              begin: /\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`
            },
            {
              begin: '\\.' + hljs.IDENT_RE,
              relevance: 0 // hack: prevents detection of keywords after dots
            },
            DECORATOR,
            ARGS
          ]
        };
      };

      /***/
    },
    /* 521 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          keywords: {
            keyword:
              // Value types
              'char uchar unichar int uint long ulong short ushort int8 int16 int32 int64 uint8 ' +
              'uint16 uint32 uint64 float double bool struct enum string void ' +
              // Reference types
              'weak unowned owned ' +
              // Modifiers
              'async signal static abstract interface override virtual delegate ' +
              // Control Structures
              'if while do for foreach else switch case break default return try catch ' +
              // Visibility
              'public private protected internal ' +
              // Other
              'using new this get set const stdout stdin stderr var',
            built_in: 'DBus GLib CCode Gee Object Gtk Posix',
            literal: 'false true null'
          },
          contains: [
            {
              className: 'class',
              beginKeywords: 'class interface namespace',
              end: '{',
              excludeEnd: true,
              illegal: '[^,:\\n\\s\\.]',
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              className: 'string',
              begin: '"""',
              end: '"""',
              relevance: 5
            },
            hljs.APOS_STRING_MODE,
            hljs.QUOTE_STRING_MODE,
            hljs.C_NUMBER_MODE,
            {
              className: 'meta',
              begin: '^#',
              end: '$',
              relevance: 2
            }
          ]
        };
      };

      /***/
    },
    /* 522 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['vb'],
          case_insensitive: true,
          keywords: {
            keyword:
              'addhandler addressof alias and andalso aggregate ansi as assembly auto binary by byref byval ' /* a-b */ +
              'call case catch class compare const continue custom declare default delegate dim distinct do ' /* c-d */ +
              'each equals else elseif end enum erase error event exit explicit finally for friend from function ' /* e-f */ +
              'get global goto group handles if implements imports in inherits interface into is isfalse isnot istrue ' /* g-i */ +
              'join key let lib like loop me mid mod module mustinherit mustoverride mybase myclass ' /* j-m */ +
              'namespace narrowing new next not notinheritable notoverridable ' /* n */ +
              'of off on operator option optional or order orelse overloads overridable overrides ' /* o */ +
              'paramarray partial preserve private property protected public ' /* p */ +
              'raiseevent readonly redim rem removehandler resume return ' /* r */ +
              'select set shadows shared skip static step stop structure strict sub synclock ' /* s */ +
              'take text then throw to try unicode until using when where while widening with withevents writeonly xor' /* t-x */,
            built_in:
              'boolean byte cbool cbyte cchar cdate cdec cdbl char cint clng cobj csbyte cshort csng cstr ctype ' /* b-c */ +
              'date decimal directcast double gettype getxmlnamespace iif integer long object ' /* d-o */ +
              'sbyte short single string trycast typeof uinteger ulong ushort' /* s-u */,
            literal: 'true false nothing'
          },
          illegal:
            '//|{|}|endif|gosub|variant|wend|^\\$ ' /* reserved deprecated keywords */,
          contains: [
            hljs.inherit(hljs.QUOTE_STRING_MODE, {
              contains: [{ begin: '""' }]
            }),
            hljs.COMMENT("'", '$', {
              returnBegin: true,
              contains: [
                {
                  className: 'doctag',
                  begin: "'''|<!--|-->",
                  contains: [hljs.PHRASAL_WORDS_MODE]
                },
                {
                  className: 'doctag',
                  begin: '</?',
                  end: '>',
                  contains: [hljs.PHRASAL_WORDS_MODE]
                }
              ]
            }),
            hljs.C_NUMBER_MODE,
            {
              className: 'meta',
              begin: '#',
              end: '$',
              keywords: {
                'meta-keyword': 'if else elseif end region externalsource'
              }
            }
          ]
        };
      };

      /***/
    },
    /* 523 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          aliases: ['vbs'],
          case_insensitive: true,
          keywords: {
            keyword:
              'call class const dim do loop erase execute executeglobal exit for each next function ' +
              'if then else on error option explicit new private property let get public randomize ' +
              'redim rem select case set stop sub while wend with end to elseif is or xor and not ' +
              'class_initialize class_terminate default preserve in me byval byref step resume goto',
            built_in:
              'lcase month vartype instrrev ubound setlocale getobject rgb getref string ' +
              'weekdayname rnd dateadd monthname now day minute isarray cbool round formatcurrency ' +
              'conversions csng timevalue second year space abs clng timeserial fixs len asc ' +
              'isempty maths dateserial atn timer isobject filter weekday datevalue ccur isdate ' +
              'instr datediff formatdatetime replace isnull right sgn array snumeric log cdbl hex ' +
              'chr lbound msgbox ucase getlocale cos cdate cbyte rtrim join hour oct typename trim ' +
              'strcomp int createobject loadpicture tan formatnumber mid scriptenginebuildversion ' +
              'scriptengine split scriptengineminorversion cint sin datepart ltrim sqr ' +
              'scriptenginemajorversion time derived eval date formatpercent exp inputbox left ascw ' +
              'chrw regexp server response request cstr err',
            literal: 'true false null nothing empty'
          },
          illegal: '//',
          contains: [
            hljs.inherit(hljs.QUOTE_STRING_MODE, {
              contains: [{ begin: '""' }]
            }),
            hljs.COMMENT(/'/, /$/, {
              relevance: 0
            }),
            hljs.C_NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 524 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          subLanguage: 'xml',
          contains: [
            {
              begin: '<%',
              end: '%>',
              subLanguage: 'vbscript'
            }
          ]
        };
      };

      /***/
    },
    /* 525 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var SV_KEYWORDS = {
          keyword:
            'accept_on alias always always_comb always_ff always_latch and assert assign ' +
            'assume automatic before begin bind bins binsof bit break buf|0 bufif0 bufif1 ' +
            'byte case casex casez cell chandle checker class clocking cmos config const ' +
            'constraint context continue cover covergroup coverpoint cross deassign default ' +
            'defparam design disable dist do edge else end endcase endchecker endclass ' +
            'endclocking endconfig endfunction endgenerate endgroup endinterface endmodule ' +
            'endpackage endprimitive endprogram endproperty endspecify endsequence endtable ' +
            'endtask enum event eventually expect export extends extern final first_match for ' +
            'force foreach forever fork forkjoin function generate|5 genvar global highz0 highz1 ' +
            'if iff ifnone ignore_bins illegal_bins implements implies import incdir include ' +
            'initial inout input inside instance int integer interconnect interface intersect ' +
            'join join_any join_none large let liblist library local localparam logic longint ' +
            'macromodule matches medium modport module nand negedge nettype new nexttime nmos ' +
            'nor noshowcancelled not notif0 notif1 or output package packed parameter pmos ' +
            'posedge primitive priority program property protected pull0 pull1 pulldown pullup ' +
            'pulsestyle_ondetect pulsestyle_onevent pure rand randc randcase randsequence rcmos ' +
            'real realtime ref reg reject_on release repeat restrict return rnmos rpmos rtran ' +
            'rtranif0 rtranif1 s_always s_eventually s_nexttime s_until s_until_with scalared ' +
            'sequence shortint shortreal showcancelled signed small soft solve specify specparam ' +
            'static string strong strong0 strong1 struct super supply0 supply1 sync_accept_on ' +
            'sync_reject_on table tagged task this throughout time timeprecision timeunit tran ' +
            'tranif0 tranif1 tri tri0 tri1 triand trior trireg type typedef union unique unique0 ' +
            'unsigned until until_with untyped use uwire var vectored virtual void wait wait_order ' +
            'wand weak weak0 weak1 while wildcard wire with within wor xnor xor',
          literal: 'null',
          built_in:
            '$finish $stop $exit $fatal $error $warning $info $realtime $time $printtimescale ' +
            '$bitstoreal $bitstoshortreal $itor $signed $cast $bits $stime $timeformat ' +
            '$realtobits $shortrealtobits $rtoi $unsigned $asserton $assertkill $assertpasson ' +
            '$assertfailon $assertnonvacuouson $assertoff $assertcontrol $assertpassoff ' +
            '$assertfailoff $assertvacuousoff $isunbounded $sampled $fell $changed $past_gclk ' +
            '$fell_gclk $changed_gclk $rising_gclk $steady_gclk $coverage_control ' +
            '$coverage_get $coverage_save $set_coverage_db_name $rose $stable $past ' +
            '$rose_gclk $stable_gclk $future_gclk $falling_gclk $changing_gclk $display ' +
            '$coverage_get_max $coverage_merge $get_coverage $load_coverage_db $typename ' +
            '$unpacked_dimensions $left $low $increment $clog2 $ln $log10 $exp $sqrt $pow ' +
            '$floor $ceil $sin $cos $tan $countbits $onehot $isunknown $fatal $warning ' +
            '$dimensions $right $high $size $asin $acos $atan $atan2 $hypot $sinh $cosh ' +
            '$tanh $asinh $acosh $atanh $countones $onehot0 $error $info $random ' +
            '$dist_chi_square $dist_erlang $dist_exponential $dist_normal $dist_poisson ' +
            '$dist_t $dist_uniform $q_initialize $q_remove $q_exam $async$and$array ' +
            '$async$nand$array $async$or$array $async$nor$array $sync$and$array ' +
            '$sync$nand$array $sync$or$array $sync$nor$array $q_add $q_full $psprintf ' +
            '$async$and$plane $async$nand$plane $async$or$plane $async$nor$plane ' +
            '$sync$and$plane $sync$nand$plane $sync$or$plane $sync$nor$plane $system ' +
            '$display $displayb $displayh $displayo $strobe $strobeb $strobeh $strobeo ' +
            '$write $readmemb $readmemh $writememh $value$plusargs ' +
            '$dumpvars $dumpon $dumplimit $dumpports $dumpportson $dumpportslimit ' +
            '$writeb $writeh $writeo $monitor $monitorb $monitorh $monitoro $writememb ' +
            '$dumpfile $dumpoff $dumpall $dumpflush $dumpportsoff $dumpportsall ' +
            '$dumpportsflush $fclose $fdisplay $fdisplayb $fdisplayh $fdisplayo ' +
            '$fstrobe $fstrobeb $fstrobeh $fstrobeo $swrite $swriteb $swriteh ' +
            '$swriteo $fscanf $fread $fseek $fflush $feof $fopen $fwrite $fwriteb ' +
            '$fwriteh $fwriteo $fmonitor $fmonitorb $fmonitorh $fmonitoro $sformat ' +
            '$sformatf $fgetc $ungetc $fgets $sscanf $rewind $ftell $ferror'
        };
        return {
          aliases: ['v', 'sv', 'svh'],
          case_insensitive: false,
          keywords: SV_KEYWORDS,
          lexemes: /[\w\$]+/,
          contains: [
            hljs.C_BLOCK_COMMENT_MODE,
            hljs.C_LINE_COMMENT_MODE,
            hljs.QUOTE_STRING_MODE,
            {
              className: 'number',
              contains: [hljs.BACKSLASH_ESCAPE],
              variants: [
                { begin: "\\b((\\d+'(b|h|o|d|B|H|O|D))[0-9xzXZa-fA-F_]+)" },
                { begin: "\\B(('(b|h|o|d|B|H|O|D))[0-9xzXZa-fA-F_]+)" },
                { begin: '\\b([0-9_])+', relevance: 0 }
              ]
            },
            /* parameters to instances */
            {
              className: 'variable',
              variants: [
                { begin: '#\\((?!parameter).+\\)' },
                { begin: '\\.\\w+', relevance: 0 }
              ]
            },
            {
              className: 'meta',
              begin: '`',
              end: '$',
              keywords: {
                'meta-keyword':
                  'define __FILE__ ' +
                  '__LINE__ begin_keywords celldefine default_nettype define ' +
                  'else elsif end_keywords endcelldefine endif ifdef ifndef ' +
                  'include line nounconnected_drive pragma resetall timescale ' +
                  'unconnected_drive undef undefineall'
              },
              relevance: 0
            }
          ]
        }; // return
      };

      /***/
    },
    /* 526 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        // Regular expression for VHDL numeric literals.

        // Decimal literal:
        var INTEGER_RE = '\\d(_|\\d)*';
        var EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;
        var DECIMAL_LITERAL_RE =
          INTEGER_RE + '(\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?';
        // Based literal:
        var BASED_INTEGER_RE = '\\w+';
        var BASED_LITERAL_RE =
          INTEGER_RE +
          '#' +
          BASED_INTEGER_RE +
          '(\\.' +
          BASED_INTEGER_RE +
          ')?' +
          '#' +
          '(' +
          EXPONENT_RE +
          ')?';

        var NUMBER_RE =
          '\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';

        return {
          case_insensitive: true,
          keywords: {
            keyword:
              'abs access after alias all and architecture array assert assume assume_guarantee attribute ' +
              'begin block body buffer bus case component configuration constant context cover disconnect ' +
              'downto default else elsif end entity exit fairness file for force function generate ' +
              'generic group guarded if impure in inertial inout is label library linkage literal ' +
              'loop map mod nand new next nor not null of on open or others out package parameter port ' +
              'postponed procedure process property protected pure range record register reject ' +
              'release rem report restrict restrict_guarantee return rol ror select sequence ' +
              'severity shared signal sla sll sra srl strong subtype then to transport type ' +
              'unaffected units until use variable view vmode vprop vunit wait when while with xnor xor',
            built_in:
              'boolean bit character ' +
              'integer time delay_length natural positive ' +
              'string bit_vector file_open_kind file_open_status ' +
              'std_logic std_logic_vector unsigned signed boolean_vector integer_vector ' +
              'std_ulogic std_ulogic_vector unresolved_unsigned u_unsigned unresolved_signed u_signed ' +
              'real_vector time_vector',
            literal:
              'false true note warning error failure ' + 'line text side width' // severity_level // textio
          },
          illegal: '{',
          contains: [
            hljs.C_BLOCK_COMMENT_MODE, // VHDL-2008 block commenting.
            hljs.COMMENT('--', '$'),
            hljs.QUOTE_STRING_MODE,
            {
              className: 'number',
              begin: NUMBER_RE,
              relevance: 0
            },
            {
              className: 'string',
              begin: "'(U|X|0|1|Z|W|L|H|-)'",
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              className: 'symbol',
              begin: "'[A-Za-z](_?[A-Za-z0-9])*",
              contains: [hljs.BACKSLASH_ESCAPE]
            }
          ]
        };
      };

      /***/
    },
    /* 527 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          lexemes: /[!#@\w]+/,
          keywords: {
            keyword:
              // express version except: ! & * < = > !! # @ @@
              'N|0 P|0 X|0 a|0 ab abc abo al am an|0 ar arga argd arge argdo argg argl argu as au aug aun b|0 bN ba bad bd be bel bf bl bm bn bo bp br brea breaka breakd breakl bro bufdo buffers bun bw c|0 cN cNf ca cabc caddb cad caddf cal cat cb cc ccl cd ce cex cf cfir cgetb cgete cg changes chd che checkt cl cla clo cm cmapc cme cn cnew cnf cno cnorea cnoreme co col colo com comc comp con conf cope ' +
              'cp cpf cq cr cs cst cu cuna cunme cw delm deb debugg delc delf dif diffg diffo diffp diffpu diffs diffthis dig di dl dell dj dli do doautoa dp dr ds dsp e|0 ea ec echoe echoh echom echon el elsei em en endfo endf endt endw ene ex exe exi exu f|0 files filet fin fina fini fir fix fo foldc foldd folddoc foldo for fu go gr grepa gu gv ha helpf helpg helpt hi hid his ia iabc if ij il im imapc ' +
              'ime ino inorea inoreme int is isp iu iuna iunme j|0 ju k|0 keepa kee keepj lN lNf l|0 lad laddb laddf la lan lat lb lc lch lcl lcs le lefta let lex lf lfir lgetb lgete lg lgr lgrepa lh ll lla lli lmak lm lmapc lne lnew lnf ln loadk lo loc lockv lol lope lp lpf lr ls lt lu lua luad luaf lv lvimgrepa lw m|0 ma mak map mapc marks mat me menut mes mk mks mksp mkv mkvie mod mz mzf nbc nb nbs new nm nmapc nme nn nnoreme noa no noh norea noreme norm nu nun nunme ol o|0 om omapc ome on ono onoreme opt ou ounme ow p|0 ' +
              'profd prof pro promptr pc ped pe perld po popu pp pre prev ps pt ptN ptf ptj ptl ptn ptp ptr pts pu pw py3 python3 py3d py3f py pyd pyf quita qa rec red redi redr redraws reg res ret retu rew ri rightb rub rubyd rubyf rund ru rv sN san sa sal sav sb sbN sba sbf sbl sbm sbn sbp sbr scrip scripte scs se setf setg setl sf sfir sh sim sig sil sl sla sm smap smapc sme sn sni sno snor snoreme sor ' +
              'so spelld spe spelli spellr spellu spellw sp spr sre st sta startg startr star stopi stj sts sun sunm sunme sus sv sw sy synti sync tN tabN tabc tabdo tabe tabf tabfir tabl tabm tabnew ' +
              'tabn tabo tabp tabr tabs tab ta tags tc tcld tclf te tf th tj tl tm tn to tp tr try ts tu u|0 undoj undol una unh unl unlo unm unme uns up ve verb vert vim vimgrepa vi viu vie vm vmapc vme vne vn vnoreme vs vu vunme windo w|0 wN wa wh wi winc winp wn wp wq wqa ws wu wv x|0 xa xmapc xm xme xn xnoreme xu xunme y|0 z|0 ~ ' +
              // full version
              'Next Print append abbreviate abclear aboveleft all amenu anoremenu args argadd argdelete argedit argglobal arglocal argument ascii autocmd augroup aunmenu buffer bNext ball badd bdelete behave belowright bfirst blast bmodified bnext botright bprevious brewind break breakadd breakdel breaklist browse bunload ' +
              'bwipeout change cNext cNfile cabbrev cabclear caddbuffer caddexpr caddfile call catch cbuffer cclose center cexpr cfile cfirst cgetbuffer cgetexpr cgetfile chdir checkpath checktime clist clast close cmap cmapclear cmenu cnext cnewer cnfile cnoremap cnoreabbrev cnoremenu copy colder colorscheme command comclear compiler continue confirm copen cprevious cpfile cquit crewind cscope cstag cunmap ' +
              'cunabbrev cunmenu cwindow delete delmarks debug debuggreedy delcommand delfunction diffupdate diffget diffoff diffpatch diffput diffsplit digraphs display deletel djump dlist doautocmd doautoall deletep drop dsearch dsplit edit earlier echo echoerr echohl echomsg else elseif emenu endif endfor ' +
              'endfunction endtry endwhile enew execute exit exusage file filetype find finally finish first fixdel fold foldclose folddoopen folddoclosed foldopen function global goto grep grepadd gui gvim hardcopy help helpfind helpgrep helptags highlight hide history insert iabbrev iabclear ijump ilist imap ' +
              'imapclear imenu inoremap inoreabbrev inoremenu intro isearch isplit iunmap iunabbrev iunmenu join jumps keepalt keepmarks keepjumps lNext lNfile list laddexpr laddbuffer laddfile last language later lbuffer lcd lchdir lclose lcscope left leftabove lexpr lfile lfirst lgetbuffer lgetexpr lgetfile lgrep lgrepadd lhelpgrep llast llist lmake lmap lmapclear lnext lnewer lnfile lnoremap loadkeymap loadview ' +
              'lockmarks lockvar lolder lopen lprevious lpfile lrewind ltag lunmap luado luafile lvimgrep lvimgrepadd lwindow move mark make mapclear match menu menutranslate messages mkexrc mksession mkspell mkvimrc mkview mode mzscheme mzfile nbclose nbkey nbsart next nmap nmapclear nmenu nnoremap ' +
              'nnoremenu noautocmd noremap nohlsearch noreabbrev noremenu normal number nunmap nunmenu oldfiles open omap omapclear omenu only onoremap onoremenu options ounmap ounmenu ownsyntax print profdel profile promptfind promptrepl pclose pedit perl perldo pop popup ppop preserve previous psearch ptag ptNext ' +
              'ptfirst ptjump ptlast ptnext ptprevious ptrewind ptselect put pwd py3do py3file python pydo pyfile quit quitall qall read recover redo redir redraw redrawstatus registers resize retab return rewind right rightbelow ruby rubydo rubyfile rundo runtime rviminfo substitute sNext sandbox sargument sall saveas sbuffer sbNext sball sbfirst sblast sbmodified sbnext sbprevious sbrewind scriptnames scriptencoding ' +
              'scscope set setfiletype setglobal setlocal sfind sfirst shell simalt sign silent sleep slast smagic smapclear smenu snext sniff snomagic snoremap snoremenu sort source spelldump spellgood spellinfo spellrepall spellundo spellwrong split sprevious srewind stop stag startgreplace startreplace ' +
              'startinsert stopinsert stjump stselect sunhide sunmap sunmenu suspend sview swapname syntax syntime syncbind tNext tabNext tabclose tabedit tabfind tabfirst tablast tabmove tabnext tabonly tabprevious tabrewind tag tcl tcldo tclfile tearoff tfirst throw tjump tlast tmenu tnext topleft tprevious ' +
              'trewind tselect tunmenu undo undojoin undolist unabbreviate unhide unlet unlockvar unmap unmenu unsilent update vglobal version verbose vertical vimgrep vimgrepadd visual viusage view vmap vmapclear vmenu vnew ' +
              'vnoremap vnoremenu vsplit vunmap vunmenu write wNext wall while winsize wincmd winpos wnext wprevious wqall wsverb wundo wviminfo xit xall xmapclear xmap xmenu xnoremap xnoremenu xunmap xunmenu yank',
            //built in func
            built_in:
              'synIDtrans atan2 range matcharg did_filetype asin feedkeys xor argv ' +
              'complete_check add getwinposx getqflist getwinposy screencol ' +
              'clearmatches empty extend getcmdpos mzeval garbagecollect setreg ' +
              'ceil sqrt diff_hlID inputsecret get getfperm getpid filewritable ' +
              'shiftwidth max sinh isdirectory synID system inputrestore winline ' +
              'atan visualmode inputlist tabpagewinnr round getregtype mapcheck ' +
              'hasmapto histdel argidx findfile sha256 exists toupper getcmdline ' +
              'taglist string getmatches bufnr strftime winwidth bufexists ' +
              'strtrans tabpagebuflist setcmdpos remote_read printf setloclist ' +
              'getpos getline bufwinnr float2nr len getcmdtype diff_filler luaeval ' +
              'resolve libcallnr foldclosedend reverse filter has_key bufname ' +
              'str2float strlen setline getcharmod setbufvar index searchpos ' +
              'shellescape undofile foldclosed setqflist buflisted strchars str2nr ' +
              'virtcol floor remove undotree remote_expr winheight gettabwinvar ' +
              'reltime cursor tabpagenr finddir localtime acos getloclist search ' +
              'tanh matchend rename gettabvar strdisplaywidth type abs py3eval ' +
              'setwinvar tolower wildmenumode log10 spellsuggest bufloaded ' +
              'synconcealed nextnonblank server2client complete settabwinvar ' +
              'executable input wincol setmatches getftype hlID inputsave ' +
              'searchpair or screenrow line settabvar histadd deepcopy strpart ' +
              'remote_peek and eval getftime submatch screenchar winsaveview ' +
              'matchadd mkdir screenattr getfontname libcall reltimestr getfsize ' +
              'winnr invert pow getbufline byte2line soundfold repeat fnameescape ' +
              'tagfiles sin strwidth spellbadword trunc maparg log lispindent ' +
              'hostname setpos globpath remote_foreground getchar synIDattr ' +
              'fnamemodify cscope_connection stridx winbufnr indent min ' +
              'complete_add nr2char searchpairpos inputdialog values matchlist ' +
              'items hlexists strridx browsedir expand fmod pathshorten line2byte ' +
              'argc count getwinvar glob foldtextresult getreg foreground cosh ' +
              'matchdelete has char2nr simplify histget searchdecl iconv ' +
              'winrestcmd pumvisible writefile foldlevel haslocaldir keys cos ' +
              'matchstr foldtext histnr tan tempname getcwd byteidx getbufvar ' +
              'islocked escape eventhandler remote_send serverlist winrestview ' +
              'synstack pyeval prevnonblank readfile cindent filereadable changenr ' +
              'exp'
          },
          illegal: /;/,
          contains: [
            hljs.NUMBER_MODE,
            {
              className: 'string',
              begin: "'",
              end: "'",
              illegal: '\\n'
            },

            /*
	      A double quote can start either a string or a line comment. Strings are
	      ended before the end of a line by another double quote and can contain
	      escaped double-quotes and post-escaped line breaks.

	      Also, any double quote at the beginning of a line is a comment but we
	      don't handle that properly at the moment: any double quote inside will
	      turn them into a string. Handling it properly will require a smarter
	      parser.
	      */
            {
              className: 'string',
              begin: /"(\\"|\n\\|[^"\n])*"/
            },
            hljs.COMMENT('"', '$'),

            {
              className: 'variable',
              begin: /[bwtglsav]:[\w\d_]*/
            },
            {
              className: 'function',
              beginKeywords: 'function function!',
              end: '$',
              relevance: 0,
              contains: [
                hljs.TITLE_MODE,
                {
                  className: 'params',
                  begin: '\\(',
                  end: '\\)'
                }
              ]
            },
            {
              className: 'symbol',
              begin: /<[\w-]+>/
            }
          ]
        };
      };

      /***/
    },
    /* 528 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        return {
          case_insensitive: true,
          lexemes: '[.%]?' + hljs.IDENT_RE,
          keywords: {
            keyword:
              'lock rep repe repz repne repnz xaquire xrelease bnd nobnd ' +
              'aaa aad aam aas adc add and arpl bb0_reset bb1_reset bound bsf bsr bswap bt btc btr bts call cbw cdq cdqe clc cld cli clts cmc cmp cmpsb cmpsd cmpsq cmpsw cmpxchg cmpxchg486 cmpxchg8b cmpxchg16b cpuid cpu_read cpu_write cqo cwd cwde daa das dec div dmint emms enter equ f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcmovb fcmovbe fcmove fcmovnb fcmovnbe fcmovne fcmovnu fcmovu fcom fcomi fcomip fcomp fcompp fcos fdecstp fdisi fdiv fdivp fdivr fdivrp femms feni ffree ffreep fiadd ficom ficomp fidiv fidivr fild fimul fincstp finit fist fistp fisttp fisub fisubr fld fld1 fldcw fldenv fldl2e fldl2t fldlg2 fldln2 fldpi fldz fmul fmulp fnclex fndisi fneni fninit fnop fnsave fnstcw fnstenv fnstsw fpatan fprem fprem1 fptan frndint frstor fsave fscale fsetpm fsin fsincos fsqrt fst fstcw fstenv fstp fstsw fsub fsubp fsubr fsubrp ftst fucom fucomi fucomip fucomp fucompp fxam fxch fxtract fyl2x fyl2xp1 hlt ibts icebp idiv imul in inc incbin insb insd insw int int01 int1 int03 int3 into invd invpcid invlpg invlpga iret iretd iretq iretw jcxz jecxz jrcxz jmp jmpe lahf lar lds lea leave les lfence lfs lgdt lgs lidt lldt lmsw loadall loadall286 lodsb lodsd lodsq lodsw loop loope loopne loopnz loopz lsl lss ltr mfence monitor mov movd movq movsb movsd movsq movsw movsx movsxd movzx mul mwait neg nop not or out outsb outsd outsw packssdw packsswb packuswb paddb paddd paddsb paddsiw paddsw paddusb paddusw paddw pand pandn pause paveb pavgusb pcmpeqb pcmpeqd pcmpeqw pcmpgtb pcmpgtd pcmpgtw pdistib pf2id pfacc pfadd pfcmpeq pfcmpge pfcmpgt pfmax pfmin pfmul pfrcp pfrcpit1 pfrcpit2 pfrsqit1 pfrsqrt pfsub pfsubr pi2fd pmachriw pmaddwd pmagw pmulhriw pmulhrwa pmulhrwc pmulhw pmullw pmvgezb pmvlzb pmvnzb pmvzb pop popa popad popaw popf popfd popfq popfw por prefetch prefetchw pslld psllq psllw psrad psraw psrld psrlq psrlw psubb psubd psubsb psubsiw psubsw psubusb psubusw psubw punpckhbw punpckhdq punpckhwd punpcklbw punpckldq punpcklwd push pusha pushad pushaw pushf pushfd pushfq pushfw pxor rcl rcr rdshr rdmsr rdpmc rdtsc rdtscp ret retf retn rol ror rdm rsdc rsldt rsm rsts sahf sal salc sar sbb scasb scasd scasq scasw sfence sgdt shl shld shr shrd sidt sldt skinit smi smint smintold smsw stc std sti stosb stosd stosq stosw str sub svdc svldt svts swapgs syscall sysenter sysexit sysret test ud0 ud1 ud2b ud2 ud2a umov verr verw fwait wbinvd wrshr wrmsr xadd xbts xchg xlatb xlat xor cmove cmovz cmovne cmovnz cmova cmovnbe cmovae cmovnb cmovb cmovnae cmovbe cmovna cmovg cmovnle cmovge cmovnl cmovl cmovnge cmovle cmovng cmovc cmovnc cmovo cmovno cmovs cmovns cmovp cmovpe cmovnp cmovpo je jz jne jnz ja jnbe jae jnb jb jnae jbe jna jg jnle jge jnl jl jnge jle jng jc jnc jo jno js jns jpo jnp jpe jp sete setz setne setnz seta setnbe setae setnb setnc setb setnae setcset setbe setna setg setnle setge setnl setl setnge setle setng sets setns seto setno setpe setp setpo setnp addps addss andnps andps cmpeqps cmpeqss cmpleps cmpless cmpltps cmpltss cmpneqps cmpneqss cmpnleps cmpnless cmpnltps cmpnltss cmpordps cmpordss cmpunordps cmpunordss cmpps cmpss comiss cvtpi2ps cvtps2pi cvtsi2ss cvtss2si cvttps2pi cvttss2si divps divss ldmxcsr maxps maxss minps minss movaps movhps movlhps movlps movhlps movmskps movntps movss movups mulps mulss orps rcpps rcpss rsqrtps rsqrtss shufps sqrtps sqrtss stmxcsr subps subss ucomiss unpckhps unpcklps xorps fxrstor fxrstor64 fxsave fxsave64 xgetbv xsetbv xsave xsave64 xsaveopt xsaveopt64 xrstor xrstor64 prefetchnta prefetcht0 prefetcht1 prefetcht2 maskmovq movntq pavgb pavgw pextrw pinsrw pmaxsw pmaxub pminsw pminub pmovmskb pmulhuw psadbw pshufw pf2iw pfnacc pfpnacc pi2fw pswapd maskmovdqu clflush movntdq movnti movntpd movdqa movdqu movdq2q movq2dq paddq pmuludq pshufd pshufhw pshuflw pslldq psrldq psubq punpckhqdq punpcklqdq addpd addsd andnpd andpd cmpeqpd cmpeqsd cmplepd cmplesd cmpltpd cmpltsd cmpneqpd cmpneqsd cmpnlepd cmpnlesd cmpnltpd cmpnltsd cmpordpd cmpordsd cmpunordpd cmpunordsd cmppd comisd cvtdq2pd cvtdq2ps cvtpd2dq cvtpd2pi cvtpd2ps cvtpi2pd cvtps2dq cvtps2pd cvtsd2si cvtsd2ss cvtsi2sd cvtss2sd cvttpd2pi cvttpd2dq cvttps2dq cvttsd2si divpd divsd maxpd maxsd minpd minsd movapd movhpd movlpd movmskpd movupd mulpd mulsd orpd shufpd sqrtpd sqrtsd subpd subsd ucomisd unpckhpd unpcklpd xorpd addsubpd addsubps haddpd haddps hsubpd hsubps lddqu movddup movshdup movsldup clgi stgi vmcall vmclear vmfunc vmlaunch vmload vmmcall vmptrld vmptrst vmread vmresume vmrun vmsave vmwrite vmxoff vmxon invept invvpid pabsb pabsw pabsd palignr phaddw phaddd phaddsw phsubw phsubd phsubsw pmaddubsw pmulhrsw pshufb psignb psignw psignd extrq insertq movntsd movntss lzcnt blendpd blendps blendvpd blendvps dppd dpps extractps insertps movntdqa mpsadbw packusdw pblendvb pblendw pcmpeqq pextrb pextrd pextrq phminposuw pinsrb pinsrd pinsrq pmaxsb pmaxsd pmaxud pmaxuw pminsb pminsd pminud pminuw pmovsxbw pmovsxbd pmovsxbq pmovsxwd pmovsxwq pmovsxdq pmovzxbw pmovzxbd pmovzxbq pmovzxwd pmovzxwq pmovzxdq pmuldq pmulld ptest roundpd roundps roundsd roundss crc32 pcmpestri pcmpestrm pcmpistri pcmpistrm pcmpgtq popcnt getsec pfrcpv pfrsqrtv movbe aesenc aesenclast aesdec aesdeclast aesimc aeskeygenassist vaesenc vaesenclast vaesdec vaesdeclast vaesimc vaeskeygenassist vaddpd vaddps vaddsd vaddss vaddsubpd vaddsubps vandpd vandps vandnpd vandnps vblendpd vblendps vblendvpd vblendvps vbroadcastss vbroadcastsd vbroadcastf128 vcmpeq_ospd vcmpeqpd vcmplt_ospd vcmpltpd vcmple_ospd vcmplepd vcmpunord_qpd vcmpunordpd vcmpneq_uqpd vcmpneqpd vcmpnlt_uspd vcmpnltpd vcmpnle_uspd vcmpnlepd vcmpord_qpd vcmpordpd vcmpeq_uqpd vcmpnge_uspd vcmpngepd vcmpngt_uspd vcmpngtpd vcmpfalse_oqpd vcmpfalsepd vcmpneq_oqpd vcmpge_ospd vcmpgepd vcmpgt_ospd vcmpgtpd vcmptrue_uqpd vcmptruepd vcmplt_oqpd vcmple_oqpd vcmpunord_spd vcmpneq_uspd vcmpnlt_uqpd vcmpnle_uqpd vcmpord_spd vcmpeq_uspd vcmpnge_uqpd vcmpngt_uqpd vcmpfalse_ospd vcmpneq_ospd vcmpge_oqpd vcmpgt_oqpd vcmptrue_uspd vcmppd vcmpeq_osps vcmpeqps vcmplt_osps vcmpltps vcmple_osps vcmpleps vcmpunord_qps vcmpunordps vcmpneq_uqps vcmpneqps vcmpnlt_usps vcmpnltps vcmpnle_usps vcmpnleps vcmpord_qps vcmpordps vcmpeq_uqps vcmpnge_usps vcmpngeps vcmpngt_usps vcmpngtps vcmpfalse_oqps vcmpfalseps vcmpneq_oqps vcmpge_osps vcmpgeps vcmpgt_osps vcmpgtps vcmptrue_uqps vcmptrueps vcmplt_oqps vcmple_oqps vcmpunord_sps vcmpneq_usps vcmpnlt_uqps vcmpnle_uqps vcmpord_sps vcmpeq_usps vcmpnge_uqps vcmpngt_uqps vcmpfalse_osps vcmpneq_osps vcmpge_oqps vcmpgt_oqps vcmptrue_usps vcmpps vcmpeq_ossd vcmpeqsd vcmplt_ossd vcmpltsd vcmple_ossd vcmplesd vcmpunord_qsd vcmpunordsd vcmpneq_uqsd vcmpneqsd vcmpnlt_ussd vcmpnltsd vcmpnle_ussd vcmpnlesd vcmpord_qsd vcmpordsd vcmpeq_uqsd vcmpnge_ussd vcmpngesd vcmpngt_ussd vcmpngtsd vcmpfalse_oqsd vcmpfalsesd vcmpneq_oqsd vcmpge_ossd vcmpgesd vcmpgt_ossd vcmpgtsd vcmptrue_uqsd vcmptruesd vcmplt_oqsd vcmple_oqsd vcmpunord_ssd vcmpneq_ussd vcmpnlt_uqsd vcmpnle_uqsd vcmpord_ssd vcmpeq_ussd vcmpnge_uqsd vcmpngt_uqsd vcmpfalse_ossd vcmpneq_ossd vcmpge_oqsd vcmpgt_oqsd vcmptrue_ussd vcmpsd vcmpeq_osss vcmpeqss vcmplt_osss vcmpltss vcmple_osss vcmpless vcmpunord_qss vcmpunordss vcmpneq_uqss vcmpneqss vcmpnlt_usss vcmpnltss vcmpnle_usss vcmpnless vcmpord_qss vcmpordss vcmpeq_uqss vcmpnge_usss vcmpngess vcmpngt_usss vcmpngtss vcmpfalse_oqss vcmpfalsess vcmpneq_oqss vcmpge_osss vcmpgess vcmpgt_osss vcmpgtss vcmptrue_uqss vcmptruess vcmplt_oqss vcmple_oqss vcmpunord_sss vcmpneq_usss vcmpnlt_uqss vcmpnle_uqss vcmpord_sss vcmpeq_usss vcmpnge_uqss vcmpngt_uqss vcmpfalse_osss vcmpneq_osss vcmpge_oqss vcmpgt_oqss vcmptrue_usss vcmpss vcomisd vcomiss vcvtdq2pd vcvtdq2ps vcvtpd2dq vcvtpd2ps vcvtps2dq vcvtps2pd vcvtsd2si vcvtsd2ss vcvtsi2sd vcvtsi2ss vcvtss2sd vcvtss2si vcvttpd2dq vcvttps2dq vcvttsd2si vcvttss2si vdivpd vdivps vdivsd vdivss vdppd vdpps vextractf128 vextractps vhaddpd vhaddps vhsubpd vhsubps vinsertf128 vinsertps vlddqu vldqqu vldmxcsr vmaskmovdqu vmaskmovps vmaskmovpd vmaxpd vmaxps vmaxsd vmaxss vminpd vminps vminsd vminss vmovapd vmovaps vmovd vmovq vmovddup vmovdqa vmovqqa vmovdqu vmovqqu vmovhlps vmovhpd vmovhps vmovlhps vmovlpd vmovlps vmovmskpd vmovmskps vmovntdq vmovntqq vmovntdqa vmovntpd vmovntps vmovsd vmovshdup vmovsldup vmovss vmovupd vmovups vmpsadbw vmulpd vmulps vmulsd vmulss vorpd vorps vpabsb vpabsw vpabsd vpacksswb vpackssdw vpackuswb vpackusdw vpaddb vpaddw vpaddd vpaddq vpaddsb vpaddsw vpaddusb vpaddusw vpalignr vpand vpandn vpavgb vpavgw vpblendvb vpblendw vpcmpestri vpcmpestrm vpcmpistri vpcmpistrm vpcmpeqb vpcmpeqw vpcmpeqd vpcmpeqq vpcmpgtb vpcmpgtw vpcmpgtd vpcmpgtq vpermilpd vpermilps vperm2f128 vpextrb vpextrw vpextrd vpextrq vphaddw vphaddd vphaddsw vphminposuw vphsubw vphsubd vphsubsw vpinsrb vpinsrw vpinsrd vpinsrq vpmaddwd vpmaddubsw vpmaxsb vpmaxsw vpmaxsd vpmaxub vpmaxuw vpmaxud vpminsb vpminsw vpminsd vpminub vpminuw vpminud vpmovmskb vpmovsxbw vpmovsxbd vpmovsxbq vpmovsxwd vpmovsxwq vpmovsxdq vpmovzxbw vpmovzxbd vpmovzxbq vpmovzxwd vpmovzxwq vpmovzxdq vpmulhuw vpmulhrsw vpmulhw vpmullw vpmulld vpmuludq vpmuldq vpor vpsadbw vpshufb vpshufd vpshufhw vpshuflw vpsignb vpsignw vpsignd vpslldq vpsrldq vpsllw vpslld vpsllq vpsraw vpsrad vpsrlw vpsrld vpsrlq vptest vpsubb vpsubw vpsubd vpsubq vpsubsb vpsubsw vpsubusb vpsubusw vpunpckhbw vpunpckhwd vpunpckhdq vpunpckhqdq vpunpcklbw vpunpcklwd vpunpckldq vpunpcklqdq vpxor vrcpps vrcpss vrsqrtps vrsqrtss vroundpd vroundps vroundsd vroundss vshufpd vshufps vsqrtpd vsqrtps vsqrtsd vsqrtss vstmxcsr vsubpd vsubps vsubsd vsubss vtestps vtestpd vucomisd vucomiss vunpckhpd vunpckhps vunpcklpd vunpcklps vxorpd vxorps vzeroall vzeroupper pclmullqlqdq pclmulhqlqdq pclmullqhqdq pclmulhqhqdq pclmulqdq vpclmullqlqdq vpclmulhqlqdq vpclmullqhqdq vpclmulhqhqdq vpclmulqdq vfmadd132ps vfmadd132pd vfmadd312ps vfmadd312pd vfmadd213ps vfmadd213pd vfmadd123ps vfmadd123pd vfmadd231ps vfmadd231pd vfmadd321ps vfmadd321pd vfmaddsub132ps vfmaddsub132pd vfmaddsub312ps vfmaddsub312pd vfmaddsub213ps vfmaddsub213pd vfmaddsub123ps vfmaddsub123pd vfmaddsub231ps vfmaddsub231pd vfmaddsub321ps vfmaddsub321pd vfmsub132ps vfmsub132pd vfmsub312ps vfmsub312pd vfmsub213ps vfmsub213pd vfmsub123ps vfmsub123pd vfmsub231ps vfmsub231pd vfmsub321ps vfmsub321pd vfmsubadd132ps vfmsubadd132pd vfmsubadd312ps vfmsubadd312pd vfmsubadd213ps vfmsubadd213pd vfmsubadd123ps vfmsubadd123pd vfmsubadd231ps vfmsubadd231pd vfmsubadd321ps vfmsubadd321pd vfnmadd132ps vfnmadd132pd vfnmadd312ps vfnmadd312pd vfnmadd213ps vfnmadd213pd vfnmadd123ps vfnmadd123pd vfnmadd231ps vfnmadd231pd vfnmadd321ps vfnmadd321pd vfnmsub132ps vfnmsub132pd vfnmsub312ps vfnmsub312pd vfnmsub213ps vfnmsub213pd vfnmsub123ps vfnmsub123pd vfnmsub231ps vfnmsub231pd vfnmsub321ps vfnmsub321pd vfmadd132ss vfmadd132sd vfmadd312ss vfmadd312sd vfmadd213ss vfmadd213sd vfmadd123ss vfmadd123sd vfmadd231ss vfmadd231sd vfmadd321ss vfmadd321sd vfmsub132ss vfmsub132sd vfmsub312ss vfmsub312sd vfmsub213ss vfmsub213sd vfmsub123ss vfmsub123sd vfmsub231ss vfmsub231sd vfmsub321ss vfmsub321sd vfnmadd132ss vfnmadd132sd vfnmadd312ss vfnmadd312sd vfnmadd213ss vfnmadd213sd vfnmadd123ss vfnmadd123sd vfnmadd231ss vfnmadd231sd vfnmadd321ss vfnmadd321sd vfnmsub132ss vfnmsub132sd vfnmsub312ss vfnmsub312sd vfnmsub213ss vfnmsub213sd vfnmsub123ss vfnmsub123sd vfnmsub231ss vfnmsub231sd vfnmsub321ss vfnmsub321sd rdfsbase rdgsbase rdrand wrfsbase wrgsbase vcvtph2ps vcvtps2ph adcx adox rdseed clac stac xstore xcryptecb xcryptcbc xcryptctr xcryptcfb xcryptofb montmul xsha1 xsha256 llwpcb slwpcb lwpval lwpins vfmaddpd vfmaddps vfmaddsd vfmaddss vfmaddsubpd vfmaddsubps vfmsubaddpd vfmsubaddps vfmsubpd vfmsubps vfmsubsd vfmsubss vfnmaddpd vfnmaddps vfnmaddsd vfnmaddss vfnmsubpd vfnmsubps vfnmsubsd vfnmsubss vfrczpd vfrczps vfrczsd vfrczss vpcmov vpcomb vpcomd vpcomq vpcomub vpcomud vpcomuq vpcomuw vpcomw vphaddbd vphaddbq vphaddbw vphadddq vphaddubd vphaddubq vphaddubw vphaddudq vphadduwd vphadduwq vphaddwd vphaddwq vphsubbw vphsubdq vphsubwd vpmacsdd vpmacsdqh vpmacsdql vpmacssdd vpmacssdqh vpmacssdql vpmacsswd vpmacssww vpmacswd vpmacsww vpmadcsswd vpmadcswd vpperm vprotb vprotd vprotq vprotw vpshab vpshad vpshaq vpshaw vpshlb vpshld vpshlq vpshlw vbroadcasti128 vpblendd vpbroadcastb vpbroadcastw vpbroadcastd vpbroadcastq vpermd vpermpd vpermps vpermq vperm2i128 vextracti128 vinserti128 vpmaskmovd vpmaskmovq vpsllvd vpsllvq vpsravd vpsrlvd vpsrlvq vgatherdpd vgatherqpd vgatherdps vgatherqps vpgatherdd vpgatherqd vpgatherdq vpgatherqq xabort xbegin xend xtest andn bextr blci blcic blsi blsic blcfill blsfill blcmsk blsmsk blsr blcs bzhi mulx pdep pext rorx sarx shlx shrx tzcnt tzmsk t1mskc valignd valignq vblendmpd vblendmps vbroadcastf32x4 vbroadcastf64x4 vbroadcasti32x4 vbroadcasti64x4 vcompresspd vcompressps vcvtpd2udq vcvtps2udq vcvtsd2usi vcvtss2usi vcvttpd2udq vcvttps2udq vcvttsd2usi vcvttss2usi vcvtudq2pd vcvtudq2ps vcvtusi2sd vcvtusi2ss vexpandpd vexpandps vextractf32x4 vextractf64x4 vextracti32x4 vextracti64x4 vfixupimmpd vfixupimmps vfixupimmsd vfixupimmss vgetexppd vgetexpps vgetexpsd vgetexpss vgetmantpd vgetmantps vgetmantsd vgetmantss vinsertf32x4 vinsertf64x4 vinserti32x4 vinserti64x4 vmovdqa32 vmovdqa64 vmovdqu32 vmovdqu64 vpabsq vpandd vpandnd vpandnq vpandq vpblendmd vpblendmq vpcmpltd vpcmpled vpcmpneqd vpcmpnltd vpcmpnled vpcmpd vpcmpltq vpcmpleq vpcmpneqq vpcmpnltq vpcmpnleq vpcmpq vpcmpequd vpcmpltud vpcmpleud vpcmpnequd vpcmpnltud vpcmpnleud vpcmpud vpcmpequq vpcmpltuq vpcmpleuq vpcmpnequq vpcmpnltuq vpcmpnleuq vpcmpuq vpcompressd vpcompressq vpermi2d vpermi2pd vpermi2ps vpermi2q vpermt2d vpermt2pd vpermt2ps vpermt2q vpexpandd vpexpandq vpmaxsq vpmaxuq vpminsq vpminuq vpmovdb vpmovdw vpmovqb vpmovqd vpmovqw vpmovsdb vpmovsdw vpmovsqb vpmovsqd vpmovsqw vpmovusdb vpmovusdw vpmovusqb vpmovusqd vpmovusqw vpord vporq vprold vprolq vprolvd vprolvq vprord vprorq vprorvd vprorvq vpscatterdd vpscatterdq vpscatterqd vpscatterqq vpsraq vpsravq vpternlogd vpternlogq vptestmd vptestmq vptestnmd vptestnmq vpxord vpxorq vrcp14pd vrcp14ps vrcp14sd vrcp14ss vrndscalepd vrndscaleps vrndscalesd vrndscaless vrsqrt14pd vrsqrt14ps vrsqrt14sd vrsqrt14ss vscalefpd vscalefps vscalefsd vscalefss vscatterdpd vscatterdps vscatterqpd vscatterqps vshuff32x4 vshuff64x2 vshufi32x4 vshufi64x2 kandnw kandw kmovw knotw kortestw korw kshiftlw kshiftrw kunpckbw kxnorw kxorw vpbroadcastmb2q vpbroadcastmw2d vpconflictd vpconflictq vplzcntd vplzcntq vexp2pd vexp2ps vrcp28pd vrcp28ps vrcp28sd vrcp28ss vrsqrt28pd vrsqrt28ps vrsqrt28sd vrsqrt28ss vgatherpf0dpd vgatherpf0dps vgatherpf0qpd vgatherpf0qps vgatherpf1dpd vgatherpf1dps vgatherpf1qpd vgatherpf1qps vscatterpf0dpd vscatterpf0dps vscatterpf0qpd vscatterpf0qps vscatterpf1dpd vscatterpf1dps vscatterpf1qpd vscatterpf1qps prefetchwt1 bndmk bndcl bndcu bndcn bndmov bndldx bndstx sha1rnds4 sha1nexte sha1msg1 sha1msg2 sha256rnds2 sha256msg1 sha256msg2 hint_nop0 hint_nop1 hint_nop2 hint_nop3 hint_nop4 hint_nop5 hint_nop6 hint_nop7 hint_nop8 hint_nop9 hint_nop10 hint_nop11 hint_nop12 hint_nop13 hint_nop14 hint_nop15 hint_nop16 hint_nop17 hint_nop18 hint_nop19 hint_nop20 hint_nop21 hint_nop22 hint_nop23 hint_nop24 hint_nop25 hint_nop26 hint_nop27 hint_nop28 hint_nop29 hint_nop30 hint_nop31 hint_nop32 hint_nop33 hint_nop34 hint_nop35 hint_nop36 hint_nop37 hint_nop38 hint_nop39 hint_nop40 hint_nop41 hint_nop42 hint_nop43 hint_nop44 hint_nop45 hint_nop46 hint_nop47 hint_nop48 hint_nop49 hint_nop50 hint_nop51 hint_nop52 hint_nop53 hint_nop54 hint_nop55 hint_nop56 hint_nop57 hint_nop58 hint_nop59 hint_nop60 hint_nop61 hint_nop62 hint_nop63',
            built_in:
              // Instruction pointer
              'ip eip rip ' +
              // 8-bit registers
              'al ah bl bh cl ch dl dh sil dil bpl spl r8b r9b r10b r11b r12b r13b r14b r15b ' +
              // 16-bit registers
              'ax bx cx dx si di bp sp r8w r9w r10w r11w r12w r13w r14w r15w ' +
              // 32-bit registers
              'eax ebx ecx edx esi edi ebp esp eip r8d r9d r10d r11d r12d r13d r14d r15d ' +
              // 64-bit registers
              'rax rbx rcx rdx rsi rdi rbp rsp r8 r9 r10 r11 r12 r13 r14 r15 ' +
              // Segment registers
              'cs ds es fs gs ss ' +
              // Floating point stack registers
              'st st0 st1 st2 st3 st4 st5 st6 st7 ' +
              // MMX Registers
              'mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7 ' +
              // SSE registers
              'xmm0  xmm1  xmm2  xmm3  xmm4  xmm5  xmm6  xmm7  xmm8  xmm9 xmm10  xmm11 xmm12 xmm13 xmm14 xmm15 ' +
              'xmm16 xmm17 xmm18 xmm19 xmm20 xmm21 xmm22 xmm23 xmm24 xmm25 xmm26 xmm27 xmm28 xmm29 xmm30 xmm31 ' +
              // AVX registers
              'ymm0  ymm1  ymm2  ymm3  ymm4  ymm5  ymm6  ymm7  ymm8  ymm9 ymm10  ymm11 ymm12 ymm13 ymm14 ymm15 ' +
              'ymm16 ymm17 ymm18 ymm19 ymm20 ymm21 ymm22 ymm23 ymm24 ymm25 ymm26 ymm27 ymm28 ymm29 ymm30 ymm31 ' +
              // AVX-512F registers
              'zmm0  zmm1  zmm2  zmm3  zmm4  zmm5  zmm6  zmm7  zmm8  zmm9 zmm10  zmm11 zmm12 zmm13 zmm14 zmm15 ' +
              'zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 ' +
              // AVX-512F mask registers
              'k0 k1 k2 k3 k4 k5 k6 k7 ' +
              // Bound (MPX) register
              'bnd0 bnd1 bnd2 bnd3 ' +
              // Special register
              'cr0 cr1 cr2 cr3 cr4 cr8 dr0 dr1 dr2 dr3 dr8 tr3 tr4 tr5 tr6 tr7 ' +
              // NASM altreg package
              'r0 r1 r2 r3 r4 r5 r6 r7 r0b r1b r2b r3b r4b r5b r6b r7b ' +
              'r0w r1w r2w r3w r4w r5w r6w r7w r0d r1d r2d r3d r4d r5d r6d r7d ' +
              'r0h r1h r2h r3h ' +
              'r0l r1l r2l r3l r4l r5l r6l r7l r8l r9l r10l r11l r12l r13l r14l r15l ' +
              'db dw dd dq dt ddq do dy dz ' +
              'resb resw resd resq rest resdq reso resy resz ' +
              'incbin equ times ' +
              'byte word dword qword nosplit rel abs seg wrt strict near far a32 ptr',

            meta:
              '%define %xdefine %+ %undef %defstr %deftok %assign %strcat %strlen %substr %rotate %elif %else %endif ' +
              '%if %ifmacro %ifctx %ifidn %ifidni %ifid %ifnum %ifstr %iftoken %ifempty %ifenv %error %warning %fatal %rep ' +
              '%endrep %include %push %pop %repl %pathsearch %depend %use %arg %stacksize %local %line %comment %endcomment ' +
              '.nolist ' +
              '__FILE__ __LINE__ __SECT__  __BITS__ __OUTPUT_FORMAT__ __DATE__ __TIME__ __DATE_NUM__ __TIME_NUM__ ' +
              '__UTC_DATE__ __UTC_TIME__ __UTC_DATE_NUM__ __UTC_TIME_NUM__  __PASS__ struc endstruc istruc at iend ' +
              'align alignb sectalign daz nodaz up down zero default option assume public ' +
              'bits use16 use32 use64 default section segment absolute extern global common cpu float ' +
              '__utf16__ __utf16le__ __utf16be__ __utf32__ __utf32le__ __utf32be__ ' +
              '__float8__ __float16__ __float32__ __float64__ __float80m__ __float80e__ __float128l__ __float128h__ ' +
              '__Infinity__ __QNaN__ __SNaN__ Inf NaN QNaN SNaN float8 float16 float32 float64 float80m float80e ' +
              'float128l float128h __FLOAT_DAZ__ __FLOAT_ROUND__ __FLOAT__'
          },
          contains: [
            hljs.COMMENT(';', '$', {
              relevance: 0
            }),
            {
              className: 'number',
              variants: [
                // Float number and x87 BCD
                {
                  begin:
                    '\\b(?:([0-9][0-9_]*)?\\.[0-9_]*(?:[eE][+-]?[0-9_]+)?|' +
                    '(0[Xx])?[0-9][0-9_]*\\.?[0-9_]*(?:[pP](?:[+-]?[0-9_]+)?)?)\\b',
                  relevance: 0
                },

                // Hex number in $
                { begin: '\\$[0-9][0-9A-Fa-f]*', relevance: 0 },

                // Number in H,D,T,Q,O,B,Y suffix
                {
                  begin:
                    '\\b(?:[0-9A-Fa-f][0-9A-Fa-f_]*[Hh]|[0-9][0-9_]*[DdTt]?|[0-7][0-7_]*[QqOo]|[0-1][0-1_]*[BbYy])\\b'
                },

                // Number in X,D,T,Q,O,B,Y prefix
                {
                  begin:
                    '\\b(?:0[Xx][0-9A-Fa-f_]+|0[DdTt][0-9_]+|0[QqOo][0-7_]+|0[BbYy][0-1_]+)\\b'
                }
              ]
            },
            // Double quote string
            hljs.QUOTE_STRING_MODE,
            {
              className: 'string',
              variants: [
                // Single-quoted string
                { begin: "'", end: "[^\\\\]'" },
                // Backquoted string
                { begin: '`', end: '[^\\\\]`' }
              ],
              relevance: 0
            },
            {
              className: 'symbol',
              variants: [
                // Global label and local label
                { begin: '^\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\s+label)' },
                // Macro-local label
                { begin: '^\\s*%%[A-Za-z0-9_$#@~.?]*:' }
              ],
              relevance: 0
            },
            // Macro parameter
            {
              className: 'subst',
              begin: '%[0-9]+',
              relevance: 0
            },
            // Macro parameter
            {
              className: 'subst',
              begin: '%!S+',
              relevance: 0
            },
            {
              className: 'meta',
              begin: /^\s*\.[\w_-]+/
            }
          ]
        };
      };

      /***/
    },
    /* 529 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var BUILTIN_MODULES =
          'ObjectLoader Animate MovieCredits Slides Filters Shading Materials LensFlare Mapping VLCAudioVideo ' +
          'StereoDecoder PointCloud NetworkAccess RemoteControl RegExp ChromaKey Snowfall NodeJS Speech Charts';

        var XL_KEYWORDS = {
          keyword:
            'if then else do while until for loop import with is as where when by data constant ' +
            'integer real text name boolean symbol infix prefix postfix block tree',
          literal: 'true false nil',
          built_in:
            'in mod rem and or xor not abs sign floor ceil sqrt sin cos tan asin ' +
            'acos atan exp expm1 log log2 log10 log1p pi at text_length text_range ' +
            'text_find text_replace contains page slide basic_slide title_slide ' +
            'title subtitle fade_in fade_out fade_at clear_color color line_color ' +
            'line_width texture_wrap texture_transform texture scale_?x scale_?y ' +
            'scale_?z? translate_?x translate_?y translate_?z? rotate_?x rotate_?y ' +
            'rotate_?z? rectangle circle ellipse sphere path line_to move_to ' +
            'quad_to curve_to theme background contents locally time mouse_?x ' +
            'mouse_?y mouse_buttons ' +
            BUILTIN_MODULES
        };

        var DOUBLE_QUOTE_TEXT = {
          className: 'string',
          begin: '"',
          end: '"',
          illegal: '\\n'
        };
        var SINGLE_QUOTE_TEXT = {
          className: 'string',
          begin: "'",
          end: "'",
          illegal: '\\n'
        };
        var LONG_TEXT = {
          className: 'string',
          begin: '<<',
          end: '>>'
        };
        var BASED_NUMBER = {
          className: 'number',
          begin: '[0-9]+#[0-9A-Z_]+(\\.[0-9-A-Z_]+)?#?([Ee][+-]?[0-9]+)?'
        };
        var IMPORT = {
          beginKeywords: 'import',
          end: '$',
          keywords: XL_KEYWORDS,
          contains: [DOUBLE_QUOTE_TEXT]
        };
        var FUNCTION_DEFINITION = {
          className: 'function',
          begin: /[a-z][^\n]*->/,
          returnBegin: true,
          end: /->/,
          contains: [
            hljs.inherit(hljs.TITLE_MODE, {
              starts: {
                endsWithParent: true,
                keywords: XL_KEYWORDS
              }
            })
          ]
        };
        return {
          aliases: ['tao'],
          lexemes: /[a-zA-Z][a-zA-Z0-9_?]*/,
          keywords: XL_KEYWORDS,
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            DOUBLE_QUOTE_TEXT,
            SINGLE_QUOTE_TEXT,
            LONG_TEXT,
            FUNCTION_DEFINITION,
            IMPORT,
            BASED_NUMBER,
            hljs.NUMBER_MODE
          ]
        };
      };

      /***/
    },
    /* 530 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var KEYWORDS =
          'for let if while then else return where group by xquery encoding version' +
          'module namespace boundary-space preserve strip default collation base-uri ordering' +
          'copy-namespaces order declare import schema namespace function option in allowing empty' +
          'at tumbling window sliding window start when only end when previous next stable ascending' +
          'descending empty greatest least some every satisfies switch case typeswitch try catch and' +
          'or to union intersect instance of treat as castable cast map array delete insert into' +
          'replace value rename copy modify update';
        var LITERAL =
          'false true xs:string xs:integer element item xs:date xs:datetime xs:float xs:double xs:decimal QName xs:anyURI xs:long xs:int xs:short xs:byte attribute';
        var VAR = {
          begin: /\$[a-zA-Z0-9\-]+/
        };

        var NUMBER = {
          className: 'number',
          begin:
            '(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b',
          relevance: 0
        };

        var STRING = {
          className: 'string',
          variants: [
            { begin: /"/, end: /"/, contains: [{ begin: /""/, relevance: 0 }] },
            { begin: /'/, end: /'/, contains: [{ begin: /''/, relevance: 0 }] }
          ]
        };

        var ANNOTATION = {
          className: 'meta',
          begin: '%\\w+'
        };

        var COMMENT = {
          className: 'comment',
          begin: '\\(:',
          end: ':\\)',
          relevance: 10,
          contains: [
            {
              className: 'doctag',
              begin: '@\\w+'
            }
          ]
        };

        var METHOD = {
          begin: '{',
          end: '}'
        };

        var CONTAINS = [VAR, STRING, NUMBER, COMMENT, ANNOTATION, METHOD];
        METHOD.contains = CONTAINS;

        return {
          aliases: ['xpath', 'xq'],
          case_insensitive: false,
          lexemes: /[a-zA-Z\$][a-zA-Z0-9_:\-]*/,
          illegal: /(proc)|(abstract)|(extends)|(until)|(#)/,
          keywords: {
            keyword: KEYWORDS,
            literal: LITERAL
          },
          contains: CONTAINS
        };
      };

      /***/
    },
    /* 531 */
    /***/ function(module, exports) {
      module.exports = function(hljs) {
        var STRING = {
          className: 'string',
          contains: [hljs.BACKSLASH_ESCAPE],
          variants: [
            {
              begin: 'b"',
              end: '"'
            },
            {
              begin: "b'",
              end: "'"
            },
            hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null }),
            hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null })
          ]
        };
        var NUMBER = {
          variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]
        };
        return {
          aliases: ['zep'],
          case_insensitive: true,
          keywords:
            'and include_once list abstract global private echo interface as static endswitch ' +
            'array null if endwhile or const for endforeach self var let while isset public ' +
            'protected exit foreach throw elseif include __FILE__ empty require_once do xor ' +
            'return parent clone use __CLASS__ __LINE__ else break print eval new ' +
            'catch __METHOD__ case exception default die require __FUNCTION__ ' +
            'enddeclare final try switch continue endfor endif declare unset true false ' +
            'trait goto instanceof insteadof __DIR__ __NAMESPACE__ ' +
            'yield finally int uint long ulong char uchar double float bool boolean string' +
            'likely unlikely',
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.HASH_COMMENT_MODE,
            hljs.COMMENT('/\\*', '\\*/', {
              contains: [
                {
                  className: 'doctag',
                  begin: '@[A-Za-z]+'
                }
              ]
            }),
            hljs.COMMENT('__halt_compiler.+?;', false, {
              endsWithParent: true,
              keywords: '__halt_compiler',
              lexemes: hljs.UNDERSCORE_IDENT_RE
            }),
            {
              className: 'string',
              begin: '<<<[\'"]?\\w+[\'"]?$',
              end: '^\\w+;',
              contains: [hljs.BACKSLASH_ESCAPE]
            },
            {
              // swallow composed identifiers to avoid parsing them as keywords
              begin: /(::|->)+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/
            },
            {
              className: 'function',
              beginKeywords: 'function',
              end: /[;{]/,
              excludeEnd: true,
              illegal: '\\$|\\[|%',
              contains: [
                hljs.UNDERSCORE_TITLE_MODE,
                {
                  className: 'params',
                  begin: '\\(',
                  end: '\\)',
                  contains: ['self', hljs.C_BLOCK_COMMENT_MODE, STRING, NUMBER]
                }
              ]
            },
            {
              className: 'class',
              beginKeywords: 'class interface',
              end: '{',
              excludeEnd: true,
              illegal: /[:\(\$"]/,
              contains: [
                { beginKeywords: 'extends implements' },
                hljs.UNDERSCORE_TITLE_MODE
              ]
            },
            {
              beginKeywords: 'namespace',
              end: ';',
              illegal: /[\.']/,
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            {
              beginKeywords: 'use',
              end: ';',
              contains: [hljs.UNDERSCORE_TITLE_MODE]
            },
            {
              begin: '=>' // No markup, just a relevance booster
            },
            STRING,
            NUMBER
          ]
        };
      };

      /***/
    },
    /* 532 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Default = (function(_React$Component) {
        _inherits(Default, _React$Component);

        function Default(props) {
          _classCallCheck(this, Default);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        Default.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange
              })
            )
          );
        };

        return Default;
      })(_react2.default.Component);

      exports.default = Default;

      /***/
    },
    /* 533 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.getDefaultLocale = exports.setDefaultLocale = exports.registerLocale = exports.CalendarContainer = undefined;

      var _createClass = (function() {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _calendar_container = __webpack_require__(534);

      Object.defineProperty(exports, 'CalendarContainer', {
        enumerable: true,
        get: function get() {
          return _interopRequireDefault(_calendar_container).default;
        }
      });

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _calendar = __webpack_require__(538);

      var _calendar2 = _interopRequireDefault(_calendar);

      var _popper_component = __webpack_require__(635);

      var _popper_component2 = _interopRequireDefault(_popper_component);

      var _classnames2 = __webpack_require__(541);

      var _classnames3 = _interopRequireDefault(_classnames2);

      var _date_utils = __webpack_require__(542);

      var _reactOnclickoutside = __webpack_require__(625);

      var _reactOnclickoutside2 = _interopRequireDefault(_reactOnclickoutside);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      exports.registerLocale = _date_utils.registerLocale;
      exports.setDefaultLocale = _date_utils.setDefaultLocale;
      exports.getDefaultLocale = _date_utils.getDefaultLocale;

      var outsideClickIgnoreClass = 'react-datepicker-ignore-onclickoutside';
      var WrappedCalendar = (0, _reactOnclickoutside2.default)(
        _calendar2.default
      );

      // Compares dates year+month combinations
      function hasPreSelectionChanged(date1, date2) {
        if (date1 && date2) {
          return (
            (0, _date_utils.getMonth)(date1) !==
              (0, _date_utils.getMonth)(date2) ||
            (0, _date_utils.getYear)(date1) !== (0, _date_utils.getYear)(date2)
          );
        }

        return date1 !== date2;
      }

      function hasSelectionChanged(date1, date2) {
        if (date1 && date2) {
          return !(0, _date_utils.isEqual)(date1, date2);
        }

        return false;
      }

      /**
       * General datepicker component.
       */
      var INPUT_ERR_1 = 'Date input not valid.';

      var DatePicker = (function(_React$Component) {
        _inherits(DatePicker, _React$Component);

        _createClass(DatePicker, null, [
          {
            key: 'defaultProps',
            get: function get() {
              return {
                allowSameDay: false,
                dateFormat: 'MM/dd/yyyy',
                dateFormatCalendar: 'LLLL yyyy',
                onChange: function onChange() {},

                disabled: false,
                disabledKeyboardNavigation: false,
                dropdownMode: 'scroll',
                onFocus: function onFocus() {},
                onBlur: function onBlur() {},
                onKeyDown: function onKeyDown() {},
                onInputClick: function onInputClick() {},
                onSelect: function onSelect() {},
                onClickOutside: function onClickOutside() {},
                onMonthChange: function onMonthChange() {},

                preventOpenOnFocus: false,
                onYearChange: function onYearChange() {},
                onInputError: function onInputError() {},

                monthsShown: 1,
                readOnly: false,
                withPortal: false,
                shouldCloseOnSelect: true,
                showTimeSelect: false,
                timeIntervals: 30,
                timeCaption: 'Time',
                previousMonthButtonLabel: 'Previous Month',
                nextMonthButtonLabel: 'Next month',
                renderDayContents: function renderDayContents(date) {
                  return date;
                }
              };
            }
          }
        ]);

        function DatePicker(props) {
          _classCallCheck(this, DatePicker);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.getPreSelection = function() {
            return _this.props.openToDate
              ? _this.props.openToDate
              : _this.props.selectsEnd && _this.props.startDate
                ? _this.props.startDate
                : _this.props.selectsStart && _this.props.endDate
                  ? _this.props.endDate
                  : (0, _date_utils.newDate)();
          };

          _this.calcInitialState = function() {
            var defaultPreSelection = _this.getPreSelection();
            var minDate = (0, _date_utils.getEffectiveMinDate)(_this.props);
            var maxDate = (0, _date_utils.getEffectiveMaxDate)(_this.props);
            var boundedPreSelection =
              minDate && (0, _date_utils.isBefore)(defaultPreSelection, minDate)
                ? minDate
                : maxDate &&
                  (0, _date_utils.isAfter)(defaultPreSelection, maxDate)
                  ? maxDate
                  : defaultPreSelection;
            return {
              open: _this.props.startOpen || false,
              preventFocus: false,
              preSelection: _this.props.selected
                ? _this.props.selected
                : boundedPreSelection,
              // transforming highlighted days (perhaps nested array)
              // to flat Map for faster access in day.jsx
              highlightDates: (0, _date_utils.getHightLightDaysMap)(
                _this.props.highlightDates
              ),
              focused: false
            };
          };

          _this.clearPreventFocusTimeout = function() {
            if (_this.preventFocusTimeout) {
              clearTimeout(_this.preventFocusTimeout);
            }
          };

          _this.setFocus = function() {
            if (_this.input && _this.input.focus) {
              _this.input.focus();
            }
          };

          _this.setBlur = function() {
            if (_this.input && _this.input.blur) {
              _this.input.blur();
            }

            if (_this.props.onBlur) {
              _this.props.onBlur();
            }

            _this.cancelFocusInput();
          };

          _this.setOpen = function(open) {
            var skipSetBlur =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : false;

            _this.setState(
              {
                open: open,
                preSelection:
                  open && _this.state.open
                    ? _this.state.preSelection
                    : _this.calcInitialState().preSelection,
                lastPreSelectChange: PRESELECT_CHANGE_VIA_NAVIGATE
              },
              function() {
                if (!open) {
                  _this.setState(
                    function(prev) {
                      return {
                        focused: skipSetBlur ? prev.focused : false
                      };
                    },
                    function() {
                      !skipSetBlur && _this.setBlur();

                      _this.setState({ inputValue: null });
                    }
                  );
                }
              }
            );
          };

          _this.inputOk = function() {
            return (0, _date_utils.isDate)(_this.state.preSelection);
          };

          _this.isCalendarOpen = function() {
            return _this.props.open === undefined
              ? _this.state.open &&
                  !_this.props.disabled &&
                  !_this.props.readOnly
              : _this.props.open;
          };

          _this.handleFocus = function(event) {
            if (!_this.state.preventFocus) {
              _this.props.onFocus(event);
              if (!_this.props.preventOpenOnFocus && !_this.props.readOnly) {
                _this.setOpen(true);
              }
            }
            _this.setState({ focused: true });
          };

          _this.cancelFocusInput = function() {
            clearTimeout(_this.inputFocusTimeout);
            _this.inputFocusTimeout = null;
          };

          _this.deferFocusInput = function() {
            _this.cancelFocusInput();
            _this.inputFocusTimeout = setTimeout(function() {
              return _this.setFocus();
            }, 1);
          };

          _this.handleDropdownFocus = function() {
            _this.cancelFocusInput();
          };

          _this.handleBlur = function(event) {
            if (_this.state.open && !_this.props.withPortal) {
              _this.deferFocusInput();
            } else {
              _this.props.onBlur(event);
            }
            _this.setState({ focused: false });
          };

          _this.handleCalendarClickOutside = function(event) {
            if (!_this.props.inline) {
              _this.setOpen(false);
            }
            _this.props.onClickOutside(event);
            if (_this.props.withPortal) {
              event.preventDefault();
            }
          };

          _this.handleChange = function() {
            for (
              var _len = arguments.length, allArgs = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              allArgs[_key] = arguments[_key];
            }

            var event = allArgs[0];
            if (_this.props.onChangeRaw) {
              _this.props.onChangeRaw.apply(_this, allArgs);
              if (
                typeof event.isDefaultPrevented !== 'function' ||
                event.isDefaultPrevented()
              ) {
                return;
              }
            }
            _this.setState({
              inputValue: event.target.value,
              lastPreSelectChange: PRESELECT_CHANGE_VIA_INPUT
            });
            var date = (0, _date_utils.parseDate)(
              event.target.value,
              _this.props.dateFormat,
              _this.props.locale
            );
            if (date || !event.target.value) {
              _this.setSelected(date, event, true);
            }
          };

          _this.handleSelect = function(date, event) {
            // Preventing onFocus event to fix issue
            // https://github.com/Hacker0x01/react-datepicker/issues/628
            _this.setState({ preventFocus: true }, function() {
              _this.preventFocusTimeout = setTimeout(function() {
                return _this.setState({ preventFocus: false });
              }, 50);
              return _this.preventFocusTimeout;
            });
            _this.setSelected(date, event);
            if (
              !_this.props.shouldCloseOnSelect ||
              _this.props.showTimeSelect
            ) {
              _this.setPreSelection(date);
            } else if (!_this.props.inline) {
              _this.setOpen(false);
            }
          };

          _this.setSelected = function(date, event, keepInput) {
            var changedDate = date;

            if (
              changedDate !== null &&
              (0, _date_utils.isDayDisabled)(changedDate, _this.props)
            ) {
              if ((0, _date_utils.isOutOfBounds)(changedDate, _this.props)) {
                _this.props.onChange(date, event);
                _this.props.onSelect(changedDate, event);
              }

              return;
            }

            if (
              !(0, _date_utils.isSameDay)(_this.props.selected, changedDate) ||
              _this.props.allowSameDay
            ) {
              if (changedDate !== null) {
                if (_this.props.selected) {
                  var selected = _this.props.selected;
                  if (keepInput)
                    selected = (0, _date_utils.newDate)(changedDate);
                  changedDate = (0, _date_utils.setTime)(changedDate, {
                    hour: (0, _date_utils.getHours)(selected),
                    minute: (0, _date_utils.getMinutes)(selected),
                    second: (0, _date_utils.getSeconds)(selected)
                  });
                }
                if (!_this.props.inline) {
                  _this.setState({
                    preSelection: changedDate
                  });
                }
              }
              _this.props.onChange(changedDate, event);
            }

            _this.props.onSelect(changedDate, event);

            if (!keepInput) {
              _this.setState({ inputValue: null });
            }
          };

          _this.setPreSelection = function(date) {
            var isDateRangePresent =
              typeof _this.props.minDate !== 'undefined' &&
              typeof _this.props.maxDate !== 'undefined';
            var isValidDateSelection =
              isDateRangePresent && date
                ? (0, _date_utils.isDayInRange)(
                    date,
                    _this.props.minDate,
                    _this.props.maxDate
                  )
                : true;
            if (isValidDateSelection) {
              _this.setState({
                preSelection: date
              });
            }
          };

          _this.handleTimeChange = function(time) {
            var selected = _this.props.selected
              ? _this.props.selected
              : _this.getPreSelection();
            var changedDate = (0, _date_utils.setTime)(selected, {
              hour: (0, _date_utils.getHours)(time),
              minute: (0, _date_utils.getMinutes)(time)
            });

            _this.setState({
              preSelection: changedDate
            });

            _this.props.onChange(changedDate);
            if (_this.props.shouldCloseOnSelect) {
              _this.setOpen(false);
            }
            _this.setState({ inputValue: null });
          };

          _this.onInputClick = function() {
            if (!_this.props.disabled && !_this.props.readOnly) {
              _this.setOpen(true);
            }

            _this.props.onInputClick();
          };

          _this.onInputKeyDown = function(event) {
            _this.props.onKeyDown(event);
            var eventKey = event.key;
            if (
              !_this.state.open &&
              !_this.props.inline &&
              !_this.props.preventOpenOnFocus
            ) {
              if (eventKey === 'ArrowDown' || eventKey === 'ArrowUp') {
                _this.onInputClick();
              }
              return;
            }
            var copy = (0, _date_utils.newDate)(_this.state.preSelection);
            if (eventKey === 'Enter') {
              event.preventDefault();
              if (
                _this.inputOk() &&
                _this.state.lastPreSelectChange ===
                  PRESELECT_CHANGE_VIA_NAVIGATE
              ) {
                _this.handleSelect(copy, event);
                !_this.props.shouldCloseOnSelect && _this.setPreSelection(copy);
              } else {
                _this.setOpen(false);
              }
            } else if (eventKey === 'Escape') {
              event.preventDefault();

              _this.setOpen(false);
              if (!_this.inputOk()) {
                _this.props.onInputError({ code: 1, msg: INPUT_ERR_1 });
              }
            } else if (eventKey === 'Tab') {
              _this.setOpen(false, true);
            } else if (!_this.props.disabledKeyboardNavigation) {
              var newSelection = void 0;
              switch (eventKey) {
                case 'ArrowLeft':
                  newSelection = (0, _date_utils.subDays)(copy, 1);
                  break;
                case 'ArrowRight':
                  newSelection = (0, _date_utils.addDays)(copy, 1);
                  break;
                case 'ArrowUp':
                  newSelection = (0, _date_utils.subWeeks)(copy, 1);
                  break;
                case 'ArrowDown':
                  newSelection = (0, _date_utils.addWeeks)(copy, 1);
                  break;
                case 'PageUp':
                  newSelection = (0, _date_utils.subMonths)(copy, 1);
                  break;
                case 'PageDown':
                  newSelection = (0, _date_utils.addMonths)(copy, 1);
                  break;
                case 'Home':
                  newSelection = (0, _date_utils.subYears)(copy, 1);
                  break;
                case 'End':
                  newSelection = (0, _date_utils.addYears)(copy, 1);
                  break;
              }
              if (!newSelection) {
                if (_this.props.onInputError) {
                  _this.props.onInputError({ code: 1, msg: INPUT_ERR_1 });
                }
                return; // Let the input component handle this keydown
              }
              event.preventDefault();
              _this.setState({
                lastPreSelectChange: PRESELECT_CHANGE_VIA_NAVIGATE
              });
              if (_this.props.adjustDateOnChange) {
                _this.setSelected(newSelection);
              }
              _this.setPreSelection(newSelection);
            }
          };

          _this.onClearClick = function(event) {
            if (event) {
              if (event.preventDefault) {
                event.preventDefault();
              }
            }
            _this.props.onChange(null, event);
            _this.setState({ inputValue: null });
          };

          _this.clear = function() {
            _this.onClearClick();
          };

          _this.renderCalendar = function() {
            if (!_this.props.inline && !_this.isCalendarOpen()) {
              return null;
            }
            return _react2.default.createElement(
              WrappedCalendar,
              {
                ref: function ref(elem) {
                  _this.calendar = elem;
                },
                locale: _this.props.locale,
                adjustDateOnChange: _this.props.adjustDateOnChange,
                setOpen: _this.setOpen,
                shouldCloseOnSelect: _this.props.shouldCloseOnSelect,
                dateFormat: _this.props.dateFormatCalendar,
                useWeekdaysShort: _this.props.useWeekdaysShort,
                formatWeekDay: _this.props.formatWeekDay,
                dropdownMode: _this.props.dropdownMode,
                selected: _this.props.selected,
                preSelection: _this.state.preSelection,
                onSelect: _this.handleSelect,
                onWeekSelect: _this.props.onWeekSelect,
                openToDate: _this.props.openToDate,
                minDate: _this.props.minDate,
                maxDate: _this.props.maxDate,
                selectsStart: _this.props.selectsStart,
                selectsEnd: _this.props.selectsEnd,
                startDate: _this.props.startDate,
                endDate: _this.props.endDate,
                excludeDates: _this.props.excludeDates,
                filterDate: _this.props.filterDate,
                onClickOutside: _this.handleCalendarClickOutside,
                formatWeekNumber: _this.props.formatWeekNumber,
                highlightDates: _this.state.highlightDates,
                includeDates: _this.props.includeDates,
                includeTimes: _this.props.includeTimes,
                injectTimes: _this.props.injectTimes,
                inline: _this.props.inline,
                peekNextMonth: _this.props.peekNextMonth,
                showMonthDropdown: _this.props.showMonthDropdown,
                useShortMonthInDropdown: _this.props.useShortMonthInDropdown,
                showMonthYearDropdown: _this.props.showMonthYearDropdown,
                showWeekNumbers: _this.props.showWeekNumbers,
                showYearDropdown: _this.props.showYearDropdown,
                withPortal: _this.props.withPortal,
                forceShowMonthNavigation: _this.props.forceShowMonthNavigation,
                showDisabledMonthNavigation:
                  _this.props.showDisabledMonthNavigation,
                scrollableYearDropdown: _this.props.scrollableYearDropdown,
                scrollableMonthYearDropdown:
                  _this.props.scrollableMonthYearDropdown,
                todayButton: _this.props.todayButton,
                weekLabel: _this.props.weekLabel,
                outsideClickIgnoreClass: outsideClickIgnoreClass,
                fixedHeight: _this.props.fixedHeight,
                monthsShown: _this.props.monthsShown,
                onDropdownFocus: _this.handleDropdownFocus,
                onMonthChange: _this.props.onMonthChange,
                onYearChange: _this.props.onYearChange,
                dayClassName: _this.props.dayClassName,
                showTimeSelect: _this.props.showTimeSelect,
                showTimeSelectOnly: _this.props.showTimeSelectOnly,
                onTimeChange: _this.handleTimeChange,
                timeFormat: _this.props.timeFormat,
                timeIntervals: _this.props.timeIntervals,
                minTime: _this.props.minTime,
                maxTime: _this.props.maxTime,
                excludeTimes: _this.props.excludeTimes,
                timeCaption: _this.props.timeCaption,
                className: _this.props.calendarClassName,
                container: _this.props.calendarContainer,
                yearDropdownItemNumber: _this.props.yearDropdownItemNumber,
                previousMonthButtonLabel: _this.props.previousMonthButtonLabel,
                nextMonthButtonLabel: _this.props.nextMonthButtonLabel,
                disabledKeyboardNavigation:
                  _this.props.disabledKeyboardNavigation,
                renderCustomHeader: _this.props.renderCustomHeader,
                popperProps: _this.props.popperProps,
                renderDayContents: _this.props.renderDayContents
              },
              _this.props.children
            );
          };

          _this.renderDateInput = function() {
            var _classnames, _React$cloneElement;

            var className = (0, _classnames3.default)(
              _this.props.className,
              ((_classnames = {}),
              (_classnames[outsideClickIgnoreClass] = _this.state.open),
              _classnames)
            );

            var customInput =
              _this.props.customInput ||
              _react2.default.createElement('input', { type: 'text' });
            var customInputRef = _this.props.customInputRef || 'ref';
            var inputValue =
              typeof _this.props.value === 'string'
                ? _this.props.value
                : typeof _this.state.inputValue === 'string'
                  ? _this.state.inputValue
                  : (0, _date_utils.safeDateFormat)(
                      _this.props.selected,
                      _this.props
                    );

            return _react2.default.cloneElement(
              customInput,
              ((_React$cloneElement = {}),
              (_React$cloneElement[customInputRef] = function(input) {
                _this.input = input;
              }),
              (_React$cloneElement.value = inputValue),
              (_React$cloneElement.onBlur = _this.handleBlur),
              (_React$cloneElement.onChange = _this.handleChange),
              (_React$cloneElement.onClick = _this.onInputClick),
              (_React$cloneElement.onFocus = _this.handleFocus),
              (_React$cloneElement.onKeyDown = _this.onInputKeyDown),
              (_React$cloneElement.id = _this.props.id),
              (_React$cloneElement.name = _this.props.name),
              (_React$cloneElement.autoFocus = _this.props.autoFocus),
              (_React$cloneElement.placeholder = _this.props.placeholderText),
              (_React$cloneElement.disabled = _this.props.disabled),
              (_React$cloneElement.autoComplete = _this.props.autoComplete),
              (_React$cloneElement.className = className),
              (_React$cloneElement.title = _this.props.title),
              (_React$cloneElement.readOnly = _this.props.readOnly),
              (_React$cloneElement.required = _this.props.required),
              (_React$cloneElement.tabIndex = _this.props.tabIndex),
              _React$cloneElement)
            );
          };

          _this.renderClearButton = function() {
            if (_this.props.isClearable && _this.props.selected != null) {
              return _react2.default.createElement('button', {
                type: 'button',
                className: 'react-datepicker__close-icon',
                onClick: _this.onClearClick,
                title: _this.props.clearButtonTitle,
                tabIndex: -1
              });
            } else {
              return null;
            }
          };

          _this.state = _this.calcInitialState();
          return _this;
        }

        DatePicker.prototype.componentDidUpdate = function componentDidUpdate(
          prevProps,
          prevState
        ) {
          if (
            prevProps.inline &&
            hasPreSelectionChanged(prevProps.selected, this.props.selected)
          ) {
            this.setPreSelection(this.props.selected);
          }
          if (prevProps.highlightDates !== this.props.highlightDates) {
            this.setState({
              highlightDates: (0, _date_utils.getHightLightDaysMap)(
                this.props.highlightDates
              )
            });
          }
          if (
            !prevState.focused &&
            hasSelectionChanged(prevProps.selected, this.props.selected)
          ) {
            this.setState({ inputValue: null });
          }
        };

        DatePicker.prototype.componentWillUnmount = function componentWillUnmount() {
          this.clearPreventFocusTimeout();
        };

        DatePicker.prototype.render = function render() {
          var calendar = this.renderCalendar();

          if (this.props.inline && !this.props.withPortal) {
            return calendar;
          }

          if (this.props.withPortal) {
            return _react2.default.createElement(
              'div',
              null,
              !this.props.inline
                ? _react2.default.createElement(
                    'div',
                    { className: 'react-datepicker__input-container' },
                    this.renderDateInput(),
                    this.renderClearButton()
                  )
                : null,
              this.state.open || this.props.inline
                ? _react2.default.createElement(
                    'div',
                    { className: 'react-datepicker__portal' },
                    calendar
                  )
                : null
            );
          }

          return _react2.default.createElement(_popper_component2.default, {
            className: this.props.popperClassName,
            hidePopper: !this.isCalendarOpen(),
            popperModifiers: this.props.popperModifiers,
            targetComponent: _react2.default.createElement(
              'div',
              { className: 'react-datepicker__input-container' },
              this.renderDateInput(),
              this.renderClearButton()
            ),
            popperContainer: this.props.popperContainer,
            popperComponent: calendar,
            popperPlacement: this.props.popperPlacement,
            popperProps: this.props.popperProps
          });
        };

        return DatePicker;
      })(_react2.default.Component);

      DatePicker.propTypes = {
        adjustDateOnChange: _propTypes2.default.bool,
        allowSameDay: _propTypes2.default.bool,
        autoComplete: _propTypes2.default.string,
        autoFocus: _propTypes2.default.bool,
        calendarClassName: _propTypes2.default.string,
        calendarContainer: _propTypes2.default.func,
        children: _propTypes2.default.node,
        className: _propTypes2.default.string,
        customInput: _propTypes2.default.element,
        customInputRef: _propTypes2.default.string,
        // eslint-disable-next-line react/no-unused-prop-types
        dateFormat: _propTypes2.default.oneOfType([
          _propTypes2.default.string,
          _propTypes2.default.array
        ]),
        dateFormatCalendar: _propTypes2.default.string,
        dayClassName: _propTypes2.default.func,
        disabled: _propTypes2.default.bool,
        disabledKeyboardNavigation: _propTypes2.default.bool,
        dropdownMode: _propTypes2.default.oneOf(['scroll', 'select'])
          .isRequired,
        endDate: _propTypes2.default.instanceOf(Date),
        excludeDates: _propTypes2.default.array,
        filterDate: _propTypes2.default.func,
        fixedHeight: _propTypes2.default.bool,
        formatWeekNumber: _propTypes2.default.func,
        highlightDates: _propTypes2.default.array,
        id: _propTypes2.default.string,
        includeDates: _propTypes2.default.array,
        includeTimes: _propTypes2.default.array,
        injectTimes: _propTypes2.default.array,
        inline: _propTypes2.default.bool,
        isClearable: _propTypes2.default.bool,
        locale: _propTypes2.default.string,
        maxDate: _propTypes2.default.instanceOf(Date),
        minDate: _propTypes2.default.instanceOf(Date),
        monthsShown: _propTypes2.default.number,
        name: _propTypes2.default.string,
        onBlur: _propTypes2.default.func,
        onChange: _propTypes2.default.func.isRequired,
        onSelect: _propTypes2.default.func,
        onWeekSelect: _propTypes2.default.func,
        onClickOutside: _propTypes2.default.func,
        onChangeRaw: _propTypes2.default.func,
        onFocus: _propTypes2.default.func,
        onInputClick: _propTypes2.default.func,
        onKeyDown: _propTypes2.default.func,
        onMonthChange: _propTypes2.default.func,
        onYearChange: _propTypes2.default.func,
        onInputError: _propTypes2.default.func,
        open: _propTypes2.default.bool,
        openToDate: _propTypes2.default.instanceOf(Date),
        peekNextMonth: _propTypes2.default.bool,
        placeholderText: _propTypes2.default.string,
        popperContainer: _propTypes2.default.func,
        popperClassName: _propTypes2.default.string, // <PopperComponent/> props
        popperModifiers: _propTypes2.default.object, // <PopperComponent/> props
        popperPlacement: _propTypes2.default.oneOf(
          _popper_component.popperPlacementPositions
        ), // <PopperComponent/> props
        popperProps: _propTypes2.default.object,
        preventOpenOnFocus: _propTypes2.default.bool,
        readOnly: _propTypes2.default.bool,
        required: _propTypes2.default.bool,
        scrollableYearDropdown: _propTypes2.default.bool,
        scrollableMonthYearDropdown: _propTypes2.default.bool,
        selected: _propTypes2.default.instanceOf(Date),
        selectsEnd: _propTypes2.default.bool,
        selectsStart: _propTypes2.default.bool,
        showMonthDropdown: _propTypes2.default.bool,
        showMonthYearDropdown: _propTypes2.default.bool,
        showWeekNumbers: _propTypes2.default.bool,
        showYearDropdown: _propTypes2.default.bool,
        forceShowMonthNavigation: _propTypes2.default.bool,
        showDisabledMonthNavigation: _propTypes2.default.bool,
        startDate: _propTypes2.default.instanceOf(Date),
        startOpen: _propTypes2.default.bool,
        tabIndex: _propTypes2.default.number,
        timeCaption: _propTypes2.default.string,
        title: _propTypes2.default.string,
        todayButton: _propTypes2.default.node,
        useWeekdaysShort: _propTypes2.default.bool,
        formatWeekDay: _propTypes2.default.func,
        value: _propTypes2.default.string,
        weekLabel: _propTypes2.default.string,
        withPortal: _propTypes2.default.bool,
        yearDropdownItemNumber: _propTypes2.default.number,
        shouldCloseOnSelect: _propTypes2.default.bool,
        showTimeSelect: _propTypes2.default.bool,
        showTimeSelectOnly: _propTypes2.default.bool,
        timeFormat: _propTypes2.default.string,
        timeIntervals: _propTypes2.default.number,
        minTime: _propTypes2.default.instanceOf(Date),
        maxTime: _propTypes2.default.instanceOf(Date),
        excludeTimes: _propTypes2.default.array,
        useShortMonthInDropdown: _propTypes2.default.bool,
        clearButtonTitle: _propTypes2.default.string,
        previousMonthButtonLabel: _propTypes2.default.string,
        nextMonthButtonLabel: _propTypes2.default.string,
        renderCustomHeader: _propTypes2.default.func,
        renderDayContents: _propTypes2.default.func
      };
      exports.default = DatePicker;

      var PRESELECT_CHANGE_VIA_INPUT = 'input';
      var PRESELECT_CHANGE_VIA_NAVIGATE = 'navigate';

      /***/
    },
    /* 534 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      exports.default = CalendarContainer;

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function CalendarContainer(_ref) {
        var className = _ref.className,
          children = _ref.children,
          _ref$arrowProps = _ref.arrowProps,
          arrowProps = _ref$arrowProps === undefined ? {} : _ref$arrowProps;

        return _react2.default.createElement(
          'div',
          { className: className },
          _react2.default.createElement(
            'div',
            _extends({ className: 'react-datepicker__triangle' }, arrowProps)
          ),
          children
        );
      }

      CalendarContainer.propTypes = {
        className: _propTypes2.default.string,
        children: _propTypes2.default.node,
        arrowProps: _propTypes2.default.object // react-popper arrow props
      };

      /***/
    },
    /* 535 */
    /***/ function(module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      if (undefined !== 'production') {
        var REACT_ELEMENT_TYPE =
          (typeof Symbol === 'function' &&
            Symbol.for &&
            Symbol.for('react.element')) ||
          0xeac7;

        var isValidElement = function(object) {
          return (
            typeof object === 'object' &&
            object !== null &&
            object.$$typeof === REACT_ELEMENT_TYPE
          );
        };

        // By explicitly using `prop-types` you are opting into new development behavior.
        // http://fb.me/prop-types-in-prod
        var throwOnDirectAccess = true;
        module.exports = __webpack_require__(536)(
          isValidElement,
          throwOnDirectAccess
        );
      } else {
        // By explicitly using `prop-types` you are opting into new production behavior.
        // http://fb.me/prop-types-in-prod
        module.exports = __webpack_require__(537)();
      }

      /***/
    },
    /* 536 */
    /***/ function(module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      'use strict';

      var assign = __webpack_require__(330);

      var ReactPropTypesSecret = __webpack_require__(333);
      var checkPropTypes = __webpack_require__(332);

      var printWarning = function() {};

      if (undefined !== 'production') {
        printWarning = function(text) {
          var message = 'Warning: ' + text;
          if (typeof console !== 'undefined') {
            console.error(message);
          }
          try {
            // --- Welcome to debugging React ---
            // This error was thrown as a convenience so that you can use this stack
            // to find the callsite that caused this warning to fire.
            throw new Error(message);
          } catch (x) {}
        };
      }

      function emptyFunctionThatReturnsNull() {
        return null;
      }

      module.exports = function(isValidElement, throwOnDirectAccess) {
        /* global Symbol */
        var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

        /**
         * Returns the iterator method function contained on the iterable object.
         *
         * Be sure to invoke the function with the iterable as context:
         *
         *     var iteratorFn = getIteratorFn(myIterable);
         *     if (iteratorFn) {
         *       var iterator = iteratorFn.call(myIterable);
         *       ...
         *     }
         *
         * @param {?object} maybeIterable
         * @return {?function}
         */
        function getIteratorFn(maybeIterable) {
          var iteratorFn =
            maybeIterable &&
            ((ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||
              maybeIterable[FAUX_ITERATOR_SYMBOL]);
          if (typeof iteratorFn === 'function') {
            return iteratorFn;
          }
        }

        /**
         * Collection of methods that allow declaration and validation of props that are
         * supplied to React components. Example usage:
         *
         *   var Props = require('ReactPropTypes');
         *   var MyArticle = React.createClass({
         *     propTypes: {
         *       // An optional string prop named "description".
         *       description: Props.string,
         *
         *       // A required enum prop named "category".
         *       category: Props.oneOf(['News','Photos']).isRequired,
         *
         *       // A prop named "dialog" that requires an instance of Dialog.
         *       dialog: Props.instanceOf(Dialog).isRequired
         *     },
         *     render: function() { ... }
         *   });
         *
         * A more formal specification of how these methods are used:
         *
         *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
         *   decl := ReactPropTypes.{type}(.isRequired)?
         *
         * Each and every declaration produces a function with the same signature. This
         * allows the creation of custom validation functions. For example:
         *
         *  var MyLink = React.createClass({
         *    propTypes: {
         *      // An optional string or URI prop named "href".
         *      href: function(props, propName, componentName) {
         *        var propValue = props[propName];
         *        if (propValue != null && typeof propValue !== 'string' &&
         *            !(propValue instanceof URI)) {
         *          return new Error(
         *            'Expected a string or an URI for ' + propName + ' in ' +
         *            componentName
         *          );
         *        }
         *      }
         *    },
         *    render: function() {...}
         *  });
         *
         * @internal
         */

        var ANONYMOUS = '<<anonymous>>';

        // Important!
        // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
        var ReactPropTypes = {
          array: createPrimitiveTypeChecker('array'),
          bool: createPrimitiveTypeChecker('boolean'),
          func: createPrimitiveTypeChecker('function'),
          number: createPrimitiveTypeChecker('number'),
          object: createPrimitiveTypeChecker('object'),
          string: createPrimitiveTypeChecker('string'),
          symbol: createPrimitiveTypeChecker('symbol'),

          any: createAnyTypeChecker(),
          arrayOf: createArrayOfTypeChecker,
          element: createElementTypeChecker(),
          instanceOf: createInstanceTypeChecker,
          node: createNodeChecker(),
          objectOf: createObjectOfTypeChecker,
          oneOf: createEnumTypeChecker,
          oneOfType: createUnionTypeChecker,
          shape: createShapeTypeChecker,
          exact: createStrictShapeTypeChecker
        };

        /**
         * inlined Object.is polyfill to avoid requiring consumers ship their own
         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
         */
        /*eslint-disable no-self-compare*/
        function is(x, y) {
          // SameValue algorithm
          if (x === y) {
            // Steps 1-5, 7-10
            // Steps 6.b-6.e: +0 != -0
            return x !== 0 || 1 / x === 1 / y;
          } else {
            // Step 6.a: NaN == NaN
            return x !== x && y !== y;
          }
        }
        /*eslint-enable no-self-compare*/

        /**
         * We use an Error-like object for backward compatibility as people may call
         * PropTypes directly and inspect their output. However, we don't use real
         * Errors anymore. We don't inspect their stack anyway, and creating them
         * is prohibitively expensive if they are created too often, such as what
         * happens in oneOfType() for any type before the one that matched.
         */
        function PropTypeError(message) {
          this.message = message;
          this.stack = '';
        }
        // Make `instanceof Error` still work for returned errors.
        PropTypeError.prototype = Error.prototype;

        function createChainableTypeChecker(validate) {
          if (undefined !== 'production') {
            var manualPropTypeCallCache = {};
            var manualPropTypeWarningCount = 0;
          }
          function checkType(
            isRequired,
            props,
            propName,
            componentName,
            location,
            propFullName,
            secret
          ) {
            componentName = componentName || ANONYMOUS;
            propFullName = propFullName || propName;

            if (secret !== ReactPropTypesSecret) {
              if (throwOnDirectAccess) {
                // New behavior only for users of `prop-types` package
                var err = new Error(
                  'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
                    'Use `PropTypes.checkPropTypes()` to call them. ' +
                    'Read more at http://fb.me/use-check-prop-types'
                );
                err.name = 'Invariant Violation';
                throw err;
              } else if (
                undefined !== 'production' &&
                typeof console !== 'undefined'
              ) {
                // Old behavior for people using React.PropTypes
                var cacheKey = componentName + ':' + propName;
                if (
                  !manualPropTypeCallCache[cacheKey] &&
                  // Avoid spamming the console because they are often not actionable except for lib authors
                  manualPropTypeWarningCount < 3
                ) {
                  printWarning(
                    'You are manually calling a React.PropTypes validation ' +
                      'function for the `' +
                      propFullName +
                      '` prop on `' +
                      componentName +
                      '`. This is deprecated ' +
                      'and will throw in the standalone `prop-types` package. ' +
                      'You may be seeing this warning due to a third-party PropTypes ' +
                      'library. See https://fb.me/react-warning-dont-call-proptypes ' +
                      'for details.'
                  );
                  manualPropTypeCallCache[cacheKey] = true;
                  manualPropTypeWarningCount++;
                }
              }
            }
            if (props[propName] == null) {
              if (isRequired) {
                if (props[propName] === null) {
                  return new PropTypeError(
                    'The ' +
                      location +
                      ' `' +
                      propFullName +
                      '` is marked as required ' +
                      ('in `' + componentName + '`, but its value is `null`.')
                  );
                }
                return new PropTypeError(
                  'The ' +
                    location +
                    ' `' +
                    propFullName +
                    '` is marked as required in ' +
                    ('`' + componentName + '`, but its value is `undefined`.')
                );
              }
              return null;
            } else {
              return validate(
                props,
                propName,
                componentName,
                location,
                propFullName
              );
            }
          }

          var chainedCheckType = checkType.bind(null, false);
          chainedCheckType.isRequired = checkType.bind(null, true);

          return chainedCheckType;
        }

        function createPrimitiveTypeChecker(expectedType) {
          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName,
            secret
          ) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== expectedType) {
              // `propValue` being instance of, say, date/regexp, pass the 'object'
              // check, but we can offer a more precise error message here rather than
              // 'of type `object`'.
              var preciseType = getPreciseType(propValue);

              return new PropTypeError(
                'Invalid ' +
                  location +
                  ' `' +
                  propFullName +
                  '` of type ' +
                  ('`' +
                    preciseType +
                    '` supplied to `' +
                    componentName +
                    '`, expected ') +
                  ('`' + expectedType + '`.')
              );
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createAnyTypeChecker() {
          return createChainableTypeChecker(emptyFunctionThatReturnsNull);
        }

        function createArrayOfTypeChecker(typeChecker) {
          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            if (typeof typeChecker !== 'function') {
              return new PropTypeError(
                'Property `' +
                  propFullName +
                  '` of component `' +
                  componentName +
                  '` has invalid PropType notation inside arrayOf.'
              );
            }
            var propValue = props[propName];
            if (!Array.isArray(propValue)) {
              var propType = getPropType(propValue);
              return new PropTypeError(
                'Invalid ' +
                  location +
                  ' `' +
                  propFullName +
                  '` of type ' +
                  ('`' +
                    propType +
                    '` supplied to `' +
                    componentName +
                    '`, expected an array.')
              );
            }
            for (var i = 0; i < propValue.length; i++) {
              var error = typeChecker(
                propValue,
                i,
                componentName,
                location,
                propFullName + '[' + i + ']',
                ReactPropTypesSecret
              );
              if (error instanceof Error) {
                return error;
              }
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createElementTypeChecker() {
          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            var propValue = props[propName];
            if (!isValidElement(propValue)) {
              var propType = getPropType(propValue);
              return new PropTypeError(
                'Invalid ' +
                  location +
                  ' `' +
                  propFullName +
                  '` of type ' +
                  ('`' +
                    propType +
                    '` supplied to `' +
                    componentName +
                    '`, expected a single ReactElement.')
              );
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createInstanceTypeChecker(expectedClass) {
          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            if (!(props[propName] instanceof expectedClass)) {
              var expectedClassName = expectedClass.name || ANONYMOUS;
              var actualClassName = getClassName(props[propName]);
              return new PropTypeError(
                'Invalid ' +
                  location +
                  ' `' +
                  propFullName +
                  '` of type ' +
                  ('`' +
                    actualClassName +
                    '` supplied to `' +
                    componentName +
                    '`, expected ') +
                  ('instance of `' + expectedClassName + '`.')
              );
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createEnumTypeChecker(expectedValues) {
          if (!Array.isArray(expectedValues)) {
            undefined !== 'production'
              ? printWarning(
                  'Invalid argument supplied to oneOf, expected an instance of array.'
                )
              : void 0;
            return emptyFunctionThatReturnsNull;
          }

          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            var propValue = props[propName];
            for (var i = 0; i < expectedValues.length; i++) {
              if (is(propValue, expectedValues[i])) {
                return null;
              }
            }

            var valuesString = JSON.stringify(expectedValues);
            return new PropTypeError(
              'Invalid ' +
                location +
                ' `' +
                propFullName +
                '` of value `' +
                propValue +
                '` ' +
                ('supplied to `' +
                  componentName +
                  '`, expected one of ' +
                  valuesString +
                  '.')
            );
          }
          return createChainableTypeChecker(validate);
        }

        function createObjectOfTypeChecker(typeChecker) {
          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            if (typeof typeChecker !== 'function') {
              return new PropTypeError(
                'Property `' +
                  propFullName +
                  '` of component `' +
                  componentName +
                  '` has invalid PropType notation inside objectOf.'
              );
            }
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') {
              return new PropTypeError(
                'Invalid ' +
                  location +
                  ' `' +
                  propFullName +
                  '` of type ' +
                  ('`' +
                    propType +
                    '` supplied to `' +
                    componentName +
                    '`, expected an object.')
              );
            }
            for (var key in propValue) {
              if (propValue.hasOwnProperty(key)) {
                var error = typeChecker(
                  propValue,
                  key,
                  componentName,
                  location,
                  propFullName + '.' + key,
                  ReactPropTypesSecret
                );
                if (error instanceof Error) {
                  return error;
                }
              }
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createUnionTypeChecker(arrayOfTypeCheckers) {
          if (!Array.isArray(arrayOfTypeCheckers)) {
            undefined !== 'production'
              ? printWarning(
                  'Invalid argument supplied to oneOfType, expected an instance of array.'
                )
              : void 0;
            return emptyFunctionThatReturnsNull;
          }

          for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
            var checker = arrayOfTypeCheckers[i];
            if (typeof checker !== 'function') {
              printWarning(
                'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
                  'received ' +
                  getPostfixForTypeWarning(checker) +
                  ' at index ' +
                  i +
                  '.'
              );
              return emptyFunctionThatReturnsNull;
            }
          }

          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
              var checker = arrayOfTypeCheckers[i];
              if (
                checker(
                  props,
                  propName,
                  componentName,
                  location,
                  propFullName,
                  ReactPropTypesSecret
                ) == null
              ) {
                return null;
              }
            }

            return new PropTypeError(
              'Invalid ' +
                location +
                ' `' +
                propFullName +
                '` supplied to ' +
                ('`' + componentName + '`.')
            );
          }
          return createChainableTypeChecker(validate);
        }

        function createNodeChecker() {
          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            if (!isNode(props[propName])) {
              return new PropTypeError(
                'Invalid ' +
                  location +
                  ' `' +
                  propFullName +
                  '` supplied to ' +
                  ('`' + componentName + '`, expected a ReactNode.')
              );
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createShapeTypeChecker(shapeTypes) {
          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') {
              return new PropTypeError(
                'Invalid ' +
                  location +
                  ' `' +
                  propFullName +
                  '` of type `' +
                  propType +
                  '` ' +
                  ('supplied to `' + componentName + '`, expected `object`.')
              );
            }
            for (var key in shapeTypes) {
              var checker = shapeTypes[key];
              if (!checker) {
                continue;
              }
              var error = checker(
                propValue,
                key,
                componentName,
                location,
                propFullName + '.' + key,
                ReactPropTypesSecret
              );
              if (error) {
                return error;
              }
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createStrictShapeTypeChecker(shapeTypes) {
          function validate(
            props,
            propName,
            componentName,
            location,
            propFullName
          ) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') {
              return new PropTypeError(
                'Invalid ' +
                  location +
                  ' `' +
                  propFullName +
                  '` of type `' +
                  propType +
                  '` ' +
                  ('supplied to `' + componentName + '`, expected `object`.')
              );
            }
            // We need to check all keys in case some are required but missing from
            // props.
            var allKeys = assign({}, props[propName], shapeTypes);
            for (var key in allKeys) {
              var checker = shapeTypes[key];
              if (!checker) {
                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` key `' +
                    key +
                    '` supplied to `' +
                    componentName +
                    '`.' +
                    '\nBad object: ' +
                    JSON.stringify(props[propName], null, '  ') +
                    '\nValid keys: ' +
                    JSON.stringify(Object.keys(shapeTypes), null, '  ')
                );
              }
              var error = checker(
                propValue,
                key,
                componentName,
                location,
                propFullName + '.' + key,
                ReactPropTypesSecret
              );
              if (error) {
                return error;
              }
            }
            return null;
          }

          return createChainableTypeChecker(validate);
        }

        function isNode(propValue) {
          switch (typeof propValue) {
            case 'number':
            case 'string':
            case 'undefined':
              return true;
            case 'boolean':
              return !propValue;
            case 'object':
              if (Array.isArray(propValue)) {
                return propValue.every(isNode);
              }
              if (propValue === null || isValidElement(propValue)) {
                return true;
              }

              var iteratorFn = getIteratorFn(propValue);
              if (iteratorFn) {
                var iterator = iteratorFn.call(propValue);
                var step;
                if (iteratorFn !== propValue.entries) {
                  while (!(step = iterator.next()).done) {
                    if (!isNode(step.value)) {
                      return false;
                    }
                  }
                } else {
                  // Iterator will provide entry [k,v] tuples rather than values.
                  while (!(step = iterator.next()).done) {
                    var entry = step.value;
                    if (entry) {
                      if (!isNode(entry[1])) {
                        return false;
                      }
                    }
                  }
                }
              } else {
                return false;
              }

              return true;
            default:
              return false;
          }
        }

        function isSymbol(propType, propValue) {
          // Native Symbol.
          if (propType === 'symbol') {
            return true;
          }

          // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
          if (propValue['@@toStringTag'] === 'Symbol') {
            return true;
          }

          // Fallback for non-spec compliant Symbols which are polyfilled.
          if (typeof Symbol === 'function' && propValue instanceof Symbol) {
            return true;
          }

          return false;
        }

        // Equivalent of `typeof` but with special handling for array and regexp.
        function getPropType(propValue) {
          var propType = typeof propValue;
          if (Array.isArray(propValue)) {
            return 'array';
          }
          if (propValue instanceof RegExp) {
            // Old webkits (at least until Android 4.0) return 'function' rather than
            // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
            // passes PropTypes.object.
            return 'object';
          }
          if (isSymbol(propType, propValue)) {
            return 'symbol';
          }
          return propType;
        }

        // This handles more types than `getPropType`. Only used for error messages.
        // See `createPrimitiveTypeChecker`.
        function getPreciseType(propValue) {
          if (typeof propValue === 'undefined' || propValue === null) {
            return '' + propValue;
          }
          var propType = getPropType(propValue);
          if (propType === 'object') {
            if (propValue instanceof Date) {
              return 'date';
            } else if (propValue instanceof RegExp) {
              return 'regexp';
            }
          }
          return propType;
        }

        // Returns a string that is postfixed to a warning about an invalid type.
        // For example, "undefined" or "of type array"
        function getPostfixForTypeWarning(value) {
          var type = getPreciseType(value);
          switch (type) {
            case 'array':
            case 'object':
              return 'an ' + type;
            case 'boolean':
            case 'date':
            case 'regexp':
              return 'a ' + type;
            default:
              return type;
          }
        }

        // Returns class name of the object, if any.
        function getClassName(propValue) {
          if (!propValue.constructor || !propValue.constructor.name) {
            return ANONYMOUS;
          }
          return propValue.constructor.name;
        }

        ReactPropTypes.checkPropTypes = checkPropTypes;
        ReactPropTypes.PropTypes = ReactPropTypes;

        return ReactPropTypes;
      };

      /***/
    },
    /* 537 */
    /***/ function(module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       */

      'use strict';

      var ReactPropTypesSecret = __webpack_require__(333);

      function emptyFunction() {}

      module.exports = function() {
        function shim(
          props,
          propName,
          componentName,
          location,
          propFullName,
          secret
        ) {
          if (secret === ReactPropTypesSecret) {
            // It is still safe when called from React.
            return;
          }
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
              'Use PropTypes.checkPropTypes() to call them. ' +
              'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        }
        shim.isRequired = shim;
        function getShim() {
          return shim;
        }
        // Important!
        // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
        var ReactPropTypes = {
          array: shim,
          bool: shim,
          func: shim,
          number: shim,
          object: shim,
          string: shim,
          symbol: shim,

          any: shim,
          arrayOf: getShim,
          element: shim,
          instanceOf: getShim,
          node: shim,
          objectOf: getShim,
          oneOf: getShim,
          oneOfType: getShim,
          shape: getShim,
          exact: getShim
        };

        ReactPropTypes.checkPropTypes = emptyFunction;
        ReactPropTypes.PropTypes = ReactPropTypes;

        return ReactPropTypes;
      };

      /***/
    },
    /* 538 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function() {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _year_dropdown = __webpack_require__(539);

      var _year_dropdown2 = _interopRequireDefault(_year_dropdown);

      var _month_dropdown = __webpack_require__(626);

      var _month_dropdown2 = _interopRequireDefault(_month_dropdown);

      var _month_year_dropdown = __webpack_require__(628);

      var _month_year_dropdown2 = _interopRequireDefault(_month_year_dropdown);

      var _month = __webpack_require__(630);

      var _month2 = _interopRequireDefault(_month);

      var _time = __webpack_require__(634);

      var _time2 = _interopRequireDefault(_time);

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _classnames = __webpack_require__(541);

      var _classnames2 = _interopRequireDefault(_classnames);

      var _calendar_container = __webpack_require__(534);

      var _calendar_container2 = _interopRequireDefault(_calendar_container);

      var _date_utils = __webpack_require__(542);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var DROPDOWN_FOCUS_CLASSNAMES = [
        'react-datepicker__year-select',
        'react-datepicker__month-select',
        'react-datepicker__month-year-select'
      ];

      var isDropdownSelect = function isDropdownSelect() {
        var element =
          arguments.length > 0 && arguments[0] !== undefined
            ? arguments[0]
            : {};

        var classNames = (element.className || '').split(/\s+/);
        return DROPDOWN_FOCUS_CLASSNAMES.some(function(testClassname) {
          return classNames.indexOf(testClassname) >= 0;
        });
      };

      var Calendar = (function(_React$Component) {
        _inherits(Calendar, _React$Component);

        _createClass(Calendar, null, [
          {
            key: 'defaultProps',
            get: function get() {
              return {
                onDropdownFocus: function onDropdownFocus() {},
                monthsShown: 1,
                forceShowMonthNavigation: false,
                timeCaption: 'Time'
              };
            }
          }
        ]);

        function Calendar(props) {
          _classCallCheck(this, Calendar);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleClickOutside = function(event) {
            _this.props.onClickOutside(event);
          };

          _this.handleDropdownFocus = function(event) {
            if (isDropdownSelect(event.target)) {
              _this.props.onDropdownFocus();
            }
          };

          _this.getDateInView = function() {
            var _this$props = _this.props,
              preSelection = _this$props.preSelection,
              selected = _this$props.selected,
              openToDate = _this$props.openToDate;

            var minDate = (0, _date_utils.getEffectiveMinDate)(_this.props);
            var maxDate = (0, _date_utils.getEffectiveMaxDate)(_this.props);
            var current = (0, _date_utils.newDate)();
            var initialDate = openToDate || selected || preSelection;
            if (initialDate) {
              return initialDate;
            } else {
              if (minDate && (0, _date_utils.isBefore)(current, minDate)) {
                return minDate;
              } else if (
                maxDate &&
                (0, _date_utils.isAfter)(current, maxDate)
              ) {
                return maxDate;
              }
            }
            return current;
          };

          _this.increaseMonth = function() {
            _this.setState(
              {
                date: (0, _date_utils.addMonths)(_this.state.date, 1)
              },
              function() {
                return _this.handleMonthChange(_this.state.date);
              }
            );
          };

          _this.decreaseMonth = function() {
            _this.setState(
              {
                date: (0, _date_utils.subMonths)(_this.state.date, 1)
              },
              function() {
                return _this.handleMonthChange(_this.state.date);
              }
            );
          };

          _this.handleDayClick = function(day, event) {
            return _this.props.onSelect(day, event);
          };

          _this.handleDayMouseEnter = function(day) {
            return _this.setState({ selectingDate: day });
          };

          _this.handleMonthMouseLeave = function() {
            return _this.setState({ selectingDate: null });
          };

          _this.handleYearChange = function(date) {
            if (_this.props.onYearChange) {
              _this.props.onYearChange(date);
            }
          };

          _this.handleMonthChange = function(date) {
            if (_this.props.onMonthChange) {
              _this.props.onMonthChange(date);
            }
            if (_this.props.adjustDateOnChange) {
              if (_this.props.onSelect) {
                _this.props.onSelect(date);
              }
              if (_this.props.setOpen) {
                _this.props.setOpen(true);
              }
            }
          };

          _this.handleMonthYearChange = function(date) {
            _this.handleYearChange(date);
            _this.handleMonthChange(date);
          };

          _this.changeYear = function(year) {
            _this.setState(
              {
                date: (0, _date_utils.setYear)(_this.state.date, year)
              },
              function() {
                return _this.handleYearChange(_this.state.date);
              }
            );
          };

          _this.changeMonth = function(month) {
            _this.setState(
              {
                date: (0, _date_utils.setMonth)(_this.state.date, month)
              },
              function() {
                return _this.handleMonthChange(_this.state.date);
              }
            );
          };

          _this.changeMonthYear = function(monthYear) {
            _this.setState(
              {
                date: (0, _date_utils.setYear)(
                  (0, _date_utils.setMonth)(
                    _this.state.date,
                    (0, _date_utils.getMonth)(monthYear)
                  ),
                  (0, _date_utils.getYear)(monthYear)
                )
              },
              function() {
                return _this.handleMonthYearChange(_this.state.date);
              }
            );
          };

          _this.header = function() {
            var date =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : _this.state.date;

            var startOfWeek = (0, _date_utils.getStartOfWeek)(
              date,
              _this.props.locale
            );
            var dayNames = [];
            if (_this.props.showWeekNumbers) {
              dayNames.push(
                _react2.default.createElement(
                  'div',
                  { key: 'W', className: 'react-datepicker__day-name' },
                  _this.props.weekLabel || '#'
                )
              );
            }
            return dayNames.concat(
              [0, 1, 2, 3, 4, 5, 6].map(function(offset) {
                var day = (0, _date_utils.addDays)(startOfWeek, offset);
                var weekDayName = _this.formatWeekday(day, _this.props.locale);
                return _react2.default.createElement(
                  'div',
                  { key: offset, className: 'react-datepicker__day-name' },
                  weekDayName
                );
              })
            );
          };

          _this.formatWeekday = function(day, locale) {
            if (_this.props.formatWeekDay) {
              return (0, _date_utils.getFormattedWeekdayInLocale)(
                day,
                _this.props.formatWeekDay,
                locale
              );
            }
            return _this.props.useWeekdaysShort
              ? (0, _date_utils.getWeekdayShortInLocale)(day, locale)
              : (0, _date_utils.getWeekdayMinInLocale)(day, locale);
          };

          _this.renderPreviousMonthButton = function() {
            if (_this.props.renderCustomHeader) {
              return;
            }

            var allPrevDaysDisabled = (0, _date_utils.monthDisabledBefore)(
              _this.state.date,
              _this.props
            );

            if (
              (!_this.props.forceShowMonthNavigation &&
                !_this.props.showDisabledMonthNavigation &&
                allPrevDaysDisabled) ||
              _this.props.showTimeSelectOnly
            ) {
              return;
            }

            var classes = [
              'react-datepicker__navigation',
              'react-datepicker__navigation--previous'
            ];

            var clickHandler = _this.decreaseMonth;

            if (
              allPrevDaysDisabled &&
              _this.props.showDisabledMonthNavigation
            ) {
              classes.push('react-datepicker__navigation--previous--disabled');
              clickHandler = null;
            }

            return _react2.default.createElement(
              'button',
              {
                type: 'button',
                className: classes.join(' '),
                onClick: clickHandler
              },
              _this.props.previousMonthButtonLabel
            );
          };

          _this.renderNextMonthButton = function() {
            if (_this.props.renderCustomHeader) {
              return;
            }

            var allNextDaysDisabled = (0, _date_utils.monthDisabledAfter)(
              _this.state.date,
              _this.props
            );

            if (
              (!_this.props.forceShowMonthNavigation &&
                !_this.props.showDisabledMonthNavigation &&
                allNextDaysDisabled) ||
              _this.props.showTimeSelectOnly
            ) {
              return;
            }

            var classes = [
              'react-datepicker__navigation',
              'react-datepicker__navigation--next'
            ];
            if (_this.props.showTimeSelect) {
              classes.push('react-datepicker__navigation--next--with-time');
            }
            if (_this.props.todayButton) {
              classes.push(
                'react-datepicker__navigation--next--with-today-button'
              );
            }

            var clickHandler = _this.increaseMonth;

            if (
              allNextDaysDisabled &&
              _this.props.showDisabledMonthNavigation
            ) {
              classes.push('react-datepicker__navigation--next--disabled');
              clickHandler = null;
            }

            return _react2.default.createElement(
              'button',
              {
                type: 'button',
                className: classes.join(' '),
                onClick: clickHandler
              },
              _this.props.nextMonthButtonLabel
            );
          };

          _this.renderCurrentMonth = function() {
            var date =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : _this.state.date;

            var classes = ['react-datepicker__current-month'];

            if (_this.props.showYearDropdown) {
              classes.push('react-datepicker__current-month--hasYearDropdown');
            }
            if (_this.props.showMonthDropdown) {
              classes.push('react-datepicker__current-month--hasMonthDropdown');
            }
            if (_this.props.showMonthYearDropdown) {
              classes.push(
                'react-datepicker__current-month--hasMonthYearDropdown'
              );
            }
            return _react2.default.createElement(
              'div',
              { className: classes.join(' ') },
              (0, _date_utils.formatDate)(
                date,
                _this.props.dateFormat,
                _this.props.locale
              )
            );
          };

          _this.renderYearDropdown = function() {
            var overrideHide =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : false;

            if (!_this.props.showYearDropdown || overrideHide) {
              return;
            }
            return _react2.default.createElement(_year_dropdown2.default, {
              adjustDateOnChange: _this.props.adjustDateOnChange,
              date: _this.state.date,
              onSelect: _this.props.onSelect,
              setOpen: _this.props.setOpen,
              dropdownMode: _this.props.dropdownMode,
              onChange: _this.changeYear,
              minDate: _this.props.minDate,
              maxDate: _this.props.maxDate,
              year: (0, _date_utils.getYear)(_this.state.date),
              scrollableYearDropdown: _this.props.scrollableYearDropdown,
              yearDropdownItemNumber: _this.props.yearDropdownItemNumber
            });
          };

          _this.renderMonthDropdown = function() {
            var overrideHide =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : false;

            if (!_this.props.showMonthDropdown || overrideHide) {
              return;
            }
            return _react2.default.createElement(_month_dropdown2.default, {
              dropdownMode: _this.props.dropdownMode,
              locale: _this.props.locale,
              onChange: _this.changeMonth,
              month: (0, _date_utils.getMonth)(_this.state.date),
              useShortMonthInDropdown: _this.props.useShortMonthInDropdown
            });
          };

          _this.renderMonthYearDropdown = function() {
            var overrideHide =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : false;

            if (!_this.props.showMonthYearDropdown || overrideHide) {
              return;
            }
            return _react2.default.createElement(
              _month_year_dropdown2.default,
              {
                dropdownMode: _this.props.dropdownMode,
                locale: _this.props.locale,
                dateFormat: _this.props.dateFormat,
                onChange: _this.changeMonthYear,
                minDate: _this.props.minDate,
                maxDate: _this.props.maxDate,
                date: _this.state.date,
                scrollableMonthYearDropdown:
                  _this.props.scrollableMonthYearDropdown
              }
            );
          };

          _this.renderTodayButton = function() {
            if (!_this.props.todayButton || _this.props.showTimeSelectOnly) {
              return;
            }
            return _react2.default.createElement(
              'div',
              {
                className: 'react-datepicker__today-button',
                onClick: function onClick(e) {
                  return _this.props.onSelect(
                    (0, _date_utils.getStartOfToday)(),
                    e
                  );
                }
              },
              _this.props.todayButton
            );
          };

          _this.renderDefaultHeader = function(_ref) {
            var monthDate = _ref.monthDate,
              i = _ref.i;
            return _react2.default.createElement(
              'div',
              { className: 'react-datepicker__header' },
              _this.renderCurrentMonth(monthDate),
              _react2.default.createElement(
                'div',
                {
                  className:
                    'react-datepicker__header__dropdown react-datepicker__header__dropdown--' +
                    _this.props.dropdownMode,
                  onFocus: _this.handleDropdownFocus
                },
                _this.renderMonthDropdown(i !== 0),
                _this.renderMonthYearDropdown(i !== 0),
                _this.renderYearDropdown(i !== 0)
              ),
              _react2.default.createElement(
                'div',
                { className: 'react-datepicker__day-names' },
                _this.header(monthDate)
              )
            );
          };

          _this.renderCustomHeader = function(_ref2) {
            var monthDate = _ref2.monthDate,
              i = _ref2.i;

            if (i !== 0) {
              return null;
            }

            var prevMonthButtonDisabled = (0, _date_utils.monthDisabledBefore)(
              _this.state.date,
              _this.props
            );

            var nextMonthButtonDisabled = (0, _date_utils.monthDisabledAfter)(
              _this.state.date,
              _this.props
            );

            return _react2.default.createElement(
              'div',
              {
                className:
                  'react-datepicker__header react-datepicker__header--custom',
                onFocus: _this.props.onDropdownFocus
              },
              _this.props.renderCustomHeader(
                _extends({}, _this.state, {
                  changeMonth: _this.changeMonth,
                  changeYear: _this.changeYear,
                  decreaseMonth: _this.decreaseMonth,
                  increaseMonth: _this.increaseMonth,
                  prevMonthButtonDisabled: prevMonthButtonDisabled,
                  nextMonthButtonDisabled: nextMonthButtonDisabled
                })
              ),
              _react2.default.createElement(
                'div',
                { className: 'react-datepicker__day-names' },
                _this.header(monthDate)
              )
            );
          };

          _this.renderMonths = function() {
            if (_this.props.showTimeSelectOnly) {
              return;
            }

            var monthList = [];
            for (var i = 0; i < _this.props.monthsShown; ++i) {
              var monthDate = (0, _date_utils.addMonths)(_this.state.date, i);
              var monthKey = 'month-' + i;
              monthList.push(
                _react2.default.createElement(
                  'div',
                  {
                    key: monthKey,
                    ref: function ref(div) {
                      _this.monthContainer = div;
                    },
                    className: 'react-datepicker__month-container'
                  },
                  _this.props.renderCustomHeader
                    ? _this.renderCustomHeader({ monthDate: monthDate, i: i })
                    : _this.renderDefaultHeader({ monthDate: monthDate, i: i }),
                  _react2.default.createElement(_month2.default, {
                    day: monthDate,
                    dayClassName: _this.props.dayClassName,
                    onDayClick: _this.handleDayClick,
                    onDayMouseEnter: _this.handleDayMouseEnter,
                    onMouseLeave: _this.handleMonthMouseLeave,
                    onWeekSelect: _this.props.onWeekSelect,
                    formatWeekNumber: _this.props.formatWeekNumber,
                    locale: _this.props.locale,
                    minDate: _this.props.minDate,
                    maxDate: _this.props.maxDate,
                    excludeDates: _this.props.excludeDates,
                    highlightDates: _this.props.highlightDates,
                    selectingDate: _this.state.selectingDate,
                    includeDates: _this.props.includeDates,
                    inline: _this.props.inline,
                    fixedHeight: _this.props.fixedHeight,
                    filterDate: _this.props.filterDate,
                    preSelection: _this.props.preSelection,
                    selected: _this.props.selected,
                    selectsStart: _this.props.selectsStart,
                    selectsEnd: _this.props.selectsEnd,
                    showWeekNumbers: _this.props.showWeekNumbers,
                    startDate: _this.props.startDate,
                    endDate: _this.props.endDate,
                    peekNextMonth: _this.props.peekNextMonth,
                    setOpen: _this.props.setOpen,
                    shouldCloseOnSelect: _this.props.shouldCloseOnSelect,
                    renderDayContents: _this.props.renderDayContents,
                    disabledKeyboardNavigation:
                      _this.props.disabledKeyboardNavigation
                  })
                )
              );
            }
            return monthList;
          };

          _this.renderTimeSection = function() {
            if (
              _this.props.showTimeSelect &&
              (_this.state.monthContainer || _this.props.showTimeSelectOnly)
            ) {
              return _react2.default.createElement(_time2.default, {
                selected: _this.props.selected,
                onChange: _this.props.onTimeChange,
                format: _this.props.timeFormat,
                includeTimes: _this.props.includeTimes,
                intervals: _this.props.timeIntervals,
                minTime: _this.props.minTime,
                maxTime: _this.props.maxTime,
                excludeTimes: _this.props.excludeTimes,
                timeCaption: _this.props.timeCaption,
                todayButton: _this.props.todayButton,
                showMonthDropdown: _this.props.showMonthDropdown,
                showMonthYearDropdown: _this.props.showMonthYearDropdown,
                showYearDropdown: _this.props.showYearDropdown,
                withPortal: _this.props.withPortal,
                monthRef: _this.state.monthContainer,
                injectTimes: _this.props.injectTimes
              });
            }
          };

          _this.state = {
            date: _this.getDateInView(),
            selectingDate: null,
            monthContainer: null
          };
          return _this;
        }

        Calendar.prototype.componentDidMount = function componentDidMount() {
          var _this2 = this;

          // monthContainer height is needed in time component
          // to determine the height for the ul in the time component
          // setState here so height is given after final component
          // layout is rendered
          if (this.props.showTimeSelect) {
            this.assignMonthContainer = (function() {
              _this2.setState({ monthContainer: _this2.monthContainer });
            })();
          }
        };

        Calendar.prototype.componentDidUpdate = function componentDidUpdate(
          prevProps
        ) {
          if (
            this.props.preSelection &&
            !(0, _date_utils.isSameDay)(
              this.props.preSelection,
              prevProps.preSelection
            )
          ) {
            this.setState({
              date: this.props.preSelection
            });
          } else if (
            this.props.openToDate &&
            !(0, _date_utils.isSameDay)(
              this.props.openToDate,
              prevProps.openToDate
            )
          ) {
            this.setState({
              date: this.props.openToDate
            });
          }
        };

        Calendar.prototype.render = function render() {
          var Container = this.props.container || _calendar_container2.default;

          return _react2.default.createElement(
            Container,
            {
              className: (0, _classnames2.default)(
                'react-datepicker',
                this.props.className,
                {
                  'react-datepicker--time-only': this.props.showTimeSelectOnly
                }
              )
            },
            this.renderPreviousMonthButton(),
            this.renderNextMonthButton(),
            this.renderMonths(),
            this.renderTodayButton(),
            this.renderTimeSection(),
            this.props.children
          );
        };

        return Calendar;
      })(_react2.default.Component);

      Calendar.propTypes = {
        adjustDateOnChange: _propTypes2.default.bool,
        className: _propTypes2.default.string,
        children: _propTypes2.default.node,
        container: _propTypes2.default.func,
        dateFormat: _propTypes2.default.oneOfType([
          _propTypes2.default.string,
          _propTypes2.default.array
        ]).isRequired,
        dayClassName: _propTypes2.default.func,
        disabledKeyboardNavigation: _propTypes2.default.bool,
        dropdownMode: _propTypes2.default.oneOf(['scroll', 'select']),
        endDate: _propTypes2.default.instanceOf(Date),
        excludeDates: _propTypes2.default.array,
        filterDate: _propTypes2.default.func,
        fixedHeight: _propTypes2.default.bool,
        formatWeekNumber: _propTypes2.default.func,
        highlightDates: _propTypes2.default.instanceOf(Map),
        includeDates: _propTypes2.default.array,
        includeTimes: _propTypes2.default.array,
        injectTimes: _propTypes2.default.array,
        inline: _propTypes2.default.bool,
        locale: _propTypes2.default.string,
        maxDate: _propTypes2.default.instanceOf(Date),
        minDate: _propTypes2.default.instanceOf(Date),
        monthsShown: _propTypes2.default.number,
        onClickOutside: _propTypes2.default.func.isRequired,
        onMonthChange: _propTypes2.default.func,
        onYearChange: _propTypes2.default.func,
        forceShowMonthNavigation: _propTypes2.default.bool,
        onDropdownFocus: _propTypes2.default.func,
        onSelect: _propTypes2.default.func.isRequired,
        onWeekSelect: _propTypes2.default.func,
        showTimeSelect: _propTypes2.default.bool,
        showTimeSelectOnly: _propTypes2.default.bool,
        timeFormat: _propTypes2.default.string,
        timeIntervals: _propTypes2.default.number,
        onTimeChange: _propTypes2.default.func,
        minTime: _propTypes2.default.instanceOf(Date),
        maxTime: _propTypes2.default.instanceOf(Date),
        excludeTimes: _propTypes2.default.array,
        timeCaption: _propTypes2.default.string,
        openToDate: _propTypes2.default.instanceOf(Date),
        peekNextMonth: _propTypes2.default.bool,
        scrollableYearDropdown: _propTypes2.default.bool,
        scrollableMonthYearDropdown: _propTypes2.default.bool,
        preSelection: _propTypes2.default.instanceOf(Date),
        selected: _propTypes2.default.instanceOf(Date),
        selectsEnd: _propTypes2.default.bool,
        selectsStart: _propTypes2.default.bool,
        showMonthDropdown: _propTypes2.default.bool,
        showMonthYearDropdown: _propTypes2.default.bool,
        showWeekNumbers: _propTypes2.default.bool,
        showYearDropdown: _propTypes2.default.bool,
        startDate: _propTypes2.default.instanceOf(Date),
        todayButton: _propTypes2.default.string,
        useWeekdaysShort: _propTypes2.default.bool,
        formatWeekDay: _propTypes2.default.func,
        withPortal: _propTypes2.default.bool,
        weekLabel: _propTypes2.default.string,
        yearDropdownItemNumber: _propTypes2.default.number,
        setOpen: _propTypes2.default.func,
        shouldCloseOnSelect: _propTypes2.default.bool,
        useShortMonthInDropdown: _propTypes2.default.bool,
        showDisabledMonthNavigation: _propTypes2.default.bool,
        previousMonthButtonLabel: _propTypes2.default.string,
        nextMonthButtonLabel: _propTypes2.default.string,
        renderCustomHeader: _propTypes2.default.func,
        renderDayContents: _propTypes2.default.func
      };
      exports.default = Calendar;

      /***/
    },
    /* 539 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _year_dropdown_options = __webpack_require__(540);

      var _year_dropdown_options2 = _interopRequireDefault(
        _year_dropdown_options
      );

      var _reactOnclickoutside = __webpack_require__(625);

      var _reactOnclickoutside2 = _interopRequireDefault(_reactOnclickoutside);

      var _date_utils = __webpack_require__(542);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var WrappedYearDropdownOptions = (0, _reactOnclickoutside2.default)(
        _year_dropdown_options2.default
      );

      var YearDropdown = (function(_React$Component) {
        _inherits(YearDropdown, _React$Component);

        function YearDropdown() {
          var _temp, _this, _ret;

          _classCallCheck(this, YearDropdown);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              dropdownVisible: false
            }),
            (_this.renderSelectOptions = function() {
              var minYear = _this.props.minDate
                ? (0, _date_utils.getYear)(_this.props.minDate)
                : 1900;
              var maxYear = _this.props.maxDate
                ? (0, _date_utils.getYear)(_this.props.maxDate)
                : 2100;

              var options = [];
              for (var i = minYear; i <= maxYear; i++) {
                options.push(
                  _react2.default.createElement(
                    'option',
                    { key: i, value: i },
                    i
                  )
                );
              }
              return options;
            }),
            (_this.onSelectChange = function(e) {
              _this.onChange(e.target.value);
            }),
            (_this.renderSelectMode = function() {
              return _react2.default.createElement(
                'select',
                {
                  value: _this.props.year,
                  className: 'react-datepicker__year-select',
                  onChange: _this.onSelectChange
                },
                _this.renderSelectOptions()
              );
            }),
            (_this.renderReadView = function(visible) {
              return _react2.default.createElement(
                'div',
                {
                  key: 'read',
                  style: { visibility: visible ? 'visible' : 'hidden' },
                  className: 'react-datepicker__year-read-view',
                  onClick: function onClick(event) {
                    return _this.toggleDropdown(event);
                  }
                },
                _react2.default.createElement('span', {
                  className: 'react-datepicker__year-read-view--down-arrow'
                }),
                _react2.default.createElement(
                  'span',
                  {
                    className: 'react-datepicker__year-read-view--selected-year'
                  },
                  _this.props.year
                )
              );
            }),
            (_this.renderDropdown = function() {
              return _react2.default.createElement(WrappedYearDropdownOptions, {
                key: 'dropdown',
                ref: 'options',
                year: _this.props.year,
                onChange: _this.onChange,
                onCancel: _this.toggleDropdown,
                minDate: _this.props.minDate,
                maxDate: _this.props.maxDate,
                scrollableYearDropdown: _this.props.scrollableYearDropdown,
                yearDropdownItemNumber: _this.props.yearDropdownItemNumber
              });
            }),
            (_this.renderScrollMode = function() {
              var dropdownVisible = _this.state.dropdownVisible;

              var result = [_this.renderReadView(!dropdownVisible)];
              if (dropdownVisible) {
                result.unshift(_this.renderDropdown());
              }
              return result;
            }),
            (_this.onChange = function(year) {
              _this.toggleDropdown();
              if (year === _this.props.year) return;
              _this.props.onChange(year);
            }),
            (_this.toggleDropdown = function(event) {
              _this.setState(
                {
                  dropdownVisible: !_this.state.dropdownVisible
                },
                function() {
                  if (_this.props.adjustDateOnChange) {
                    _this.handleYearChange(_this.props.date, event);
                  }
                }
              );
            }),
            (_this.handleYearChange = function(date, event) {
              _this.onSelect(date, event);
              _this.setOpen();
            }),
            (_this.onSelect = function(date, event) {
              if (_this.props.onSelect) {
                _this.props.onSelect(date, event);
              }
            }),
            (_this.setOpen = function() {
              if (_this.props.setOpen) {
                _this.props.setOpen(true);
              }
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        YearDropdown.prototype.render = function render() {
          var renderedDropdown = void 0;
          switch (this.props.dropdownMode) {
            case 'scroll':
              renderedDropdown = this.renderScrollMode();
              break;
            case 'select':
              renderedDropdown = this.renderSelectMode();
              break;
          }

          return _react2.default.createElement(
            'div',
            {
              className:
                'react-datepicker__year-dropdown-container react-datepicker__year-dropdown-container--' +
                this.props.dropdownMode
            },
            renderedDropdown
          );
        };

        return YearDropdown;
      })(_react2.default.Component);

      YearDropdown.propTypes = {
        adjustDateOnChange: _propTypes2.default.bool,
        dropdownMode: _propTypes2.default.oneOf(['scroll', 'select'])
          .isRequired,
        maxDate: _propTypes2.default.instanceOf(Date),
        minDate: _propTypes2.default.instanceOf(Date),
        onChange: _propTypes2.default.func.isRequired,
        scrollableYearDropdown: _propTypes2.default.bool,
        year: _propTypes2.default.number.isRequired,
        yearDropdownItemNumber: _propTypes2.default.number,
        date: _propTypes2.default.instanceOf(Date),
        onSelect: _propTypes2.default.func,
        setOpen: _propTypes2.default.func
      };
      exports.default = YearDropdown;

      /***/
    },
    /* 540 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _classnames = __webpack_require__(541);

      var _classnames2 = _interopRequireDefault(_classnames);

      var _date_utils = __webpack_require__(542);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function generateYears(year, noOfYear, minDate, maxDate) {
        var list = [];
        for (var i = 0; i < 2 * noOfYear + 1; i++) {
          var newYear = year + noOfYear - i;
          var isInRange = true;

          if (minDate) {
            isInRange = (0, _date_utils.getYear)(minDate) <= newYear;
          }

          if (maxDate && isInRange) {
            isInRange = (0, _date_utils.getYear)(maxDate) >= newYear;
          }

          if (isInRange) {
            list.push(newYear);
          }
        }

        return list;
      }

      var YearDropdownOptions = (function(_React$Component) {
        _inherits(YearDropdownOptions, _React$Component);

        function YearDropdownOptions(props) {
          _classCallCheck(this, YearDropdownOptions);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.renderOptions = function() {
            var selectedYear = _this.props.year;
            var options = _this.state.yearsList.map(function(year) {
              return _react2.default.createElement(
                'div',
                {
                  className:
                    selectedYear === year
                      ? 'react-datepicker__year-option react-datepicker__year-option--selected_year'
                      : 'react-datepicker__year-option',
                  key: year,
                  ref: year,
                  onClick: _this.onChange.bind(_this, year)
                },
                selectedYear === year
                  ? _react2.default.createElement(
                      'span',
                      { className: 'react-datepicker__year-option--selected' },
                      '\u2713'
                    )
                  : '',
                year
              );
            });

            var minYear = _this.props.minDate
              ? (0, _date_utils.getYear)(_this.props.minDate)
              : null;
            var maxYear = _this.props.maxDate
              ? (0, _date_utils.getYear)(_this.props.maxDate)
              : null;

            if (
              !maxYear ||
              !_this.state.yearsList.find(function(year) {
                return year === maxYear;
              })
            ) {
              options.unshift(
                _react2.default.createElement(
                  'div',
                  {
                    className: 'react-datepicker__year-option',
                    ref: 'upcoming',
                    key: 'upcoming',
                    onClick: _this.incrementYears
                  },
                  _react2.default.createElement('a', {
                    className:
                      'react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-upcoming'
                  })
                )
              );
            }

            if (
              !minYear ||
              !_this.state.yearsList.find(function(year) {
                return year === minYear;
              })
            ) {
              options.push(
                _react2.default.createElement(
                  'div',
                  {
                    className: 'react-datepicker__year-option',
                    ref: 'previous',
                    key: 'previous',
                    onClick: _this.decrementYears
                  },
                  _react2.default.createElement('a', {
                    className:
                      'react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-previous'
                  })
                )
              );
            }

            return options;
          };

          _this.onChange = function(year) {
            _this.props.onChange(year);
          };

          _this.handleClickOutside = function() {
            _this.props.onCancel();
          };

          _this.shiftYears = function(amount) {
            var years = _this.state.yearsList.map(function(year) {
              return year + amount;
            });

            _this.setState({
              yearsList: years
            });
          };

          _this.incrementYears = function() {
            return _this.shiftYears(1);
          };

          _this.decrementYears = function() {
            return _this.shiftYears(-1);
          };

          var yearDropdownItemNumber = props.yearDropdownItemNumber,
            scrollableYearDropdown = props.scrollableYearDropdown;

          var noOfYear =
            yearDropdownItemNumber || (scrollableYearDropdown ? 10 : 5);

          _this.state = {
            yearsList: generateYears(
              _this.props.year,
              noOfYear,
              _this.props.minDate,
              _this.props.maxDate
            )
          };
          return _this;
        }

        YearDropdownOptions.prototype.render = function render() {
          var dropdownClass = (0, _classnames2.default)({
            'react-datepicker__year-dropdown': true,
            'react-datepicker__year-dropdown--scrollable': this.props
              .scrollableYearDropdown
          });

          return _react2.default.createElement(
            'div',
            { className: dropdownClass },
            this.renderOptions()
          );
        };

        return YearDropdownOptions;
      })(_react2.default.Component);

      YearDropdownOptions.propTypes = {
        minDate: _propTypes2.default.instanceOf(Date),
        maxDate: _propTypes2.default.instanceOf(Date),
        onCancel: _propTypes2.default.func.isRequired,
        onChange: _propTypes2.default.func.isRequired,
        scrollableYearDropdown: _propTypes2.default.bool,
        year: _propTypes2.default.number.isRequired,
        yearDropdownItemNumber: _propTypes2.default.number
      };
      exports.default = YearDropdownOptions;

      /***/
    },
    /* 541 */
    /***/ function(module, exports, __webpack_require__) {
      var __WEBPACK_AMD_DEFINE_ARRAY__,
        __WEBPACK_AMD_DEFINE_RESULT__; /*!
	  Copyright (c) 2017 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
      /* global define */

      (function() {
        'use strict';

        var hasOwn = {}.hasOwnProperty;

        function classNames() {
          var classes = [];

          for (var i = 0; i < arguments.length; i++) {
            var arg = arguments[i];
            if (!arg) continue;

            var argType = typeof arg;

            if (argType === 'string' || argType === 'number') {
              classes.push(arg);
            } else if (Array.isArray(arg) && arg.length) {
              var inner = classNames.apply(null, arg);
              if (inner) {
                classes.push(inner);
              }
            } else if (argType === 'object') {
              for (var key in arg) {
                if (hasOwn.call(arg, key) && arg[key]) {
                  classes.push(key);
                }
              }
            }
          }

          return classes.join(' ');
        }

        if (typeof module !== 'undefined' && module.exports) {
          classNames.default = classNames;
          module.exports = classNames;
        } else if (true) {
          // register as 'classnames', consistent with npm package name
          !((__WEBPACK_AMD_DEFINE_ARRAY__ = []),
          (__WEBPACK_AMD_DEFINE_RESULT__ = function() {
            return classNames;
          }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
          __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
            (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
        } else {
          window.classNames = classNames;
        }
      })();

      /***/
    },
    /* 542 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.isEqual = exports.isAfter = exports.isBefore = exports.subYears = exports.subMonths = exports.subWeeks = exports.subDays = exports.subHours = exports.subMinutes = exports.addYears = exports.addMonths = exports.addWeeks = exports.addDays = exports.addMinutes = exports.getTime = exports.getDate = exports.getDay = exports.getYear = exports.getMonth = exports.getHours = exports.getMinutes = exports.getSeconds = exports.setYear = exports.setMonth = exports.isDate = undefined;

      var _typeof =
        typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
          ? function(obj) {
              return typeof obj;
            }
          : function(obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? 'symbol'
                : typeof obj;
            };

      exports.newDate = newDate;
      exports.parseDate = parseDate;
      exports.isValid = isValid;
      exports.formatDate = formatDate;
      exports.safeDateFormat = safeDateFormat;
      exports.setTime = setTime;
      exports.getWeek = getWeek;
      exports.getDayOfWeekCode = getDayOfWeekCode;
      exports.getStartOfDay = getStartOfDay;
      exports.getStartOfWeek = getStartOfWeek;
      exports.getStartOfMonth = getStartOfMonth;
      exports.getStartOfToday = getStartOfToday;
      exports.getEndOfWeek = getEndOfWeek;
      exports.getEndOfMonth = getEndOfMonth;
      exports.isSameYear = isSameYear;
      exports.isSameMonth = isSameMonth;
      exports.isSameDay = isSameDay;
      exports.isDayInRange = isDayInRange;
      exports.getDaysDiff = getDaysDiff;
      exports.registerLocale = registerLocale;
      exports.setDefaultLocale = setDefaultLocale;
      exports.getDefaultLocale = getDefaultLocale;
      exports.getLocaleObject = getLocaleObject;
      exports.getFormattedWeekdayInLocale = getFormattedWeekdayInLocale;
      exports.getWeekdayMinInLocale = getWeekdayMinInLocale;
      exports.getWeekdayShortInLocale = getWeekdayShortInLocale;
      exports.getMonthInLocale = getMonthInLocale;
      exports.getMonthShortInLocale = getMonthShortInLocale;
      exports.isDayDisabled = isDayDisabled;
      exports.isOutOfBounds = isOutOfBounds;
      exports.isTimeDisabled = isTimeDisabled;
      exports.isTimeInDisabledRange = isTimeInDisabledRange;
      exports.monthDisabledBefore = monthDisabledBefore;
      exports.monthDisabledAfter = monthDisabledAfter;
      exports.getEffectiveMinDate = getEffectiveMinDate;
      exports.getEffectiveMaxDate = getEffectiveMaxDate;
      exports.getHightLightDaysMap = getHightLightDaysMap;
      exports.timesToInjectAfter = timesToInjectAfter;

      var _isDate = __webpack_require__(543);

      var _isDate2 = _interopRequireDefault(_isDate);

      var _isValid = __webpack_require__(544);

      var _isValid2 = _interopRequireDefault(_isValid);

      var _format = __webpack_require__(548);

      var _format2 = _interopRequireDefault(_format);

      var _addMinutes = __webpack_require__(573);

      var _addMinutes2 = _interopRequireDefault(_addMinutes);

      var _addHours = __webpack_require__(574);

      var _addHours2 = _interopRequireDefault(_addHours);

      var _addDays = __webpack_require__(575);

      var _addDays2 = _interopRequireDefault(_addDays);

      var _addWeeks = __webpack_require__(576);

      var _addWeeks2 = _interopRequireDefault(_addWeeks);

      var _addMonths = __webpack_require__(577);

      var _addMonths2 = _interopRequireDefault(_addMonths);

      var _addYears = __webpack_require__(579);

      var _addYears2 = _interopRequireDefault(_addYears);

      var _subMinutes = __webpack_require__(580);

      var _subMinutes2 = _interopRequireDefault(_subMinutes);

      var _subHours = __webpack_require__(581);

      var _subHours2 = _interopRequireDefault(_subHours);

      var _subDays = __webpack_require__(582);

      var _subDays2 = _interopRequireDefault(_subDays);

      var _subWeeks = __webpack_require__(583);

      var _subWeeks2 = _interopRequireDefault(_subWeeks);

      var _subMonths = __webpack_require__(584);

      var _subMonths2 = _interopRequireDefault(_subMonths);

      var _subYears = __webpack_require__(585);

      var _subYears2 = _interopRequireDefault(_subYears);

      var _getSeconds = __webpack_require__(586);

      var _getSeconds2 = _interopRequireDefault(_getSeconds);

      var _getMinutes = __webpack_require__(587);

      var _getMinutes2 = _interopRequireDefault(_getMinutes);

      var _getHours = __webpack_require__(588);

      var _getHours2 = _interopRequireDefault(_getHours);

      var _getDay = __webpack_require__(589);

      var _getDay2 = _interopRequireDefault(_getDay);

      var _getDate = __webpack_require__(590);

      var _getDate2 = _interopRequireDefault(_getDate);

      var _getMonth = __webpack_require__(591);

      var _getMonth2 = _interopRequireDefault(_getMonth);

      var _getYear = __webpack_require__(592);

      var _getYear2 = _interopRequireDefault(_getYear);

      var _getTime = __webpack_require__(593);

      var _getTime2 = _interopRequireDefault(_getTime);

      var _setSeconds = __webpack_require__(594);

      var _setSeconds2 = _interopRequireDefault(_setSeconds);

      var _setMinutes = __webpack_require__(595);

      var _setMinutes2 = _interopRequireDefault(_setMinutes);

      var _setHours = __webpack_require__(596);

      var _setHours2 = _interopRequireDefault(_setHours);

      var _setMonth = __webpack_require__(597);

      var _setMonth2 = _interopRequireDefault(_setMonth);

      var _setYear = __webpack_require__(598);

      var _setYear2 = _interopRequireDefault(_setYear);

      var _min = __webpack_require__(599);

      var _min2 = _interopRequireDefault(_min);

      var _max = __webpack_require__(600);

      var _max2 = _interopRequireDefault(_max);

      var _differenceInCalendarDays = __webpack_require__(601);

      var _differenceInCalendarDays2 = _interopRequireDefault(
        _differenceInCalendarDays
      );

      var _differenceInCalendarMonths = __webpack_require__(603);

      var _differenceInCalendarMonths2 = _interopRequireDefault(
        _differenceInCalendarMonths
      );

      var _differenceInCalendarWeeks = __webpack_require__(604);

      var _differenceInCalendarWeeks2 = _interopRequireDefault(
        _differenceInCalendarWeeks
      );

      var _setDayOfYear = __webpack_require__(606);

      var _setDayOfYear2 = _interopRequireDefault(_setDayOfYear);

      var _startOfDay = __webpack_require__(602);

      var _startOfDay2 = _interopRequireDefault(_startOfDay);

      var _startOfWeek = __webpack_require__(605);

      var _startOfWeek2 = _interopRequireDefault(_startOfWeek);

      var _startOfMonth = __webpack_require__(607);

      var _startOfMonth2 = _interopRequireDefault(_startOfMonth);

      var _startOfYear = __webpack_require__(608);

      var _startOfYear2 = _interopRequireDefault(_startOfYear);

      var _endOfWeek = __webpack_require__(609);

      var _endOfWeek2 = _interopRequireDefault(_endOfWeek);

      var _endOfMonth = __webpack_require__(610);

      var _endOfMonth2 = _interopRequireDefault(_endOfMonth);

      var _isEqual = __webpack_require__(611);

      var _isEqual2 = _interopRequireDefault(_isEqual);

      var _isSameWeek = __webpack_require__(612);

      var _isSameWeek2 = _interopRequireDefault(_isSameWeek);

      var _isSameDay = __webpack_require__(613);

      var _isSameDay2 = _interopRequireDefault(_isSameDay);

      var _isSameMonth = __webpack_require__(614);

      var _isSameMonth2 = _interopRequireDefault(_isSameMonth);

      var _isSameYear = __webpack_require__(615);

      var _isSameYear2 = _interopRequireDefault(_isSameYear);

      var _isAfter = __webpack_require__(616);

      var _isAfter2 = _interopRequireDefault(_isAfter);

      var _isBefore = __webpack_require__(617);

      var _isBefore2 = _interopRequireDefault(_isBefore);

      var _isWithinInterval = __webpack_require__(618);

      var _isWithinInterval2 = _interopRequireDefault(_isWithinInterval);

      var _toDate = __webpack_require__(545);

      var _toDate2 = _interopRequireDefault(_toDate);

      var _parse = __webpack_require__(619);

      var _parse2 = _interopRequireDefault(_parse);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      // ** Date Constructors **

      function newDate(value) {
        var d = value ? (0, _toDate2.default)(value) : new Date();
        return isValid(d) ? d : null;
      }

      function parseDate(value, dateFormat, locale) {
        var parsedDate = null;
        var localeObject = getLocaleObject(locale);
        if (Array.isArray(dateFormat)) {
          dateFormat.forEach(function(df) {
            var tryParseDate = (0, _parse2.default)(
              value,
              df,
              new Date(),
              localeObject
            );
            if (isValid(tryParseDate)) {
              parsedDate = tryParseDate;
            }
          });
          return parsedDate;
        }
        parsedDate = (0, _parse2.default)(
          value,
          dateFormat,
          new Date(),
          localeObject
        );
        if (!isValid(parsedDate)) {
          parsedDate = new Date(value);
        }
        return isValid(parsedDate) ? parsedDate : null;
      }

      // ** Date "Reflection" **

      exports.isDate = _isDate2.default;
      function isValid(date) {
        return (
          (0, _isValid2.default)(date) &&
          (0, _isAfter2.default)(date, new Date('1/1/1000'))
        );
      }

      // ** Date Formatting **

      function formatDate(date, formatStr, locale) {
        if (locale === 'en') {
          return (0, _format2.default)(date, formatStr, {
            awareOfUnicodeTokens: true
          });
        }
        var localeObj = getLocaleObject(locale);
        if (locale && !localeObj) {
          console.warn(
            'A locale object was not found for the provided string ["' +
              locale +
              '"].'
          );
        }
        if (
          !localeObj &&
          !!getDefaultLocale() &&
          !!getLocaleObject(getDefaultLocale())
        ) {
          localeObj = getLocaleObject(getDefaultLocale());
        }
        return (0, _format2.default)(date, formatStr, {
          locale: localeObj ? localeObj : null,
          awareOfUnicodeTokens: true
        });
      }

      function safeDateFormat(date, _ref) {
        var dateFormat = _ref.dateFormat,
          locale = _ref.locale;

        return (
          (date &&
            formatDate(
              date,
              Array.isArray(dateFormat) ? dateFormat[0] : dateFormat,
              locale
            )) ||
          ''
        );
      }

      // ** Date Setters **

      function setTime(date, _ref2) {
        var _ref2$hour = _ref2.hour,
          hour = _ref2$hour === undefined ? 0 : _ref2$hour,
          _ref2$minute = _ref2.minute,
          minute = _ref2$minute === undefined ? 0 : _ref2$minute,
          _ref2$second = _ref2.second,
          second = _ref2$second === undefined ? 0 : _ref2$second;

        return (0, _setHours2.default)(
          (0, _setMinutes2.default)(
            (0, _setSeconds2.default)(date, second),
            minute
          ),
          hour
        );
      }

      exports.setMonth = _setMonth2.default;
      exports.setYear = _setYear2.default;

      // ** Date Getters **

      // getDay Returns day of week, getDate returns day of month

      exports.getSeconds = _getSeconds2.default;
      exports.getMinutes = _getMinutes2.default;
      exports.getHours = _getHours2.default;
      exports.getMonth = _getMonth2.default;
      exports.getYear = _getYear2.default;
      exports.getDay = _getDay2.default;
      exports.getDate = _getDate2.default;
      exports.getTime = _getTime2.default;
      function getWeek(date) {
        var firstDayOfYear = (0, _setDayOfYear2.default)(date, 1);
        if (!isSameYear((0, _endOfWeek2.default)(date), date)) {
          return 1;
        }
        return (
          (0, _differenceInCalendarWeeks2.default)(
            date,
            (0, _startOfYear2.default)(date)
          ) + 1
        );
      }

      function getDayOfWeekCode(day, locale) {
        return formatDate(day, 'ddd', locale);
      }

      // *** Start of ***

      function getStartOfDay(date) {
        return (0, _startOfDay2.default)(date);
      }

      function getStartOfWeek(date, locale) {
        var localeObj = locale
          ? getLocaleObject(locale)
          : getLocaleObject(getDefaultLocale());
        return (0, _startOfWeek2.default)(date, { locale: localeObj });
      }

      function getStartOfMonth(date) {
        return (0, _startOfMonth2.default)(date);
      }

      function getStartOfToday() {
        return (0, _startOfDay2.default)(newDate());
      }

      // *** End of ***

      function getEndOfWeek(date) {
        return (0, _endOfWeek2.default)(date);
      }

      function getEndOfMonth(date) {
        return (0, _endOfMonth2.default)(date);
      }

      // ** Date Math **

      // *** Addition ***

      exports.addMinutes = _addMinutes2.default;
      exports.addDays = _addDays2.default;
      exports.addWeeks = _addWeeks2.default;
      exports.addMonths = _addMonths2.default;
      exports.addYears = _addYears2.default;

      // *** Subtraction ***

      exports.subMinutes = _subMinutes2.default;
      exports.subHours = _subHours2.default;
      exports.subDays = _subDays2.default;
      exports.subWeeks = _subWeeks2.default;
      exports.subMonths = _subMonths2.default;
      exports.subYears = _subYears2.default;

      // ** Date Comparison **

      exports.isBefore = _isBefore2.default;
      exports.isAfter = _isAfter2.default;
      exports.isEqual = _isEqual2.default;
      function isSameYear(date1, date2) {
        if (date1 && date2) {
          return (0, _isSameYear2.default)(date1, date2);
        } else {
          return !date1 && !date2;
        }
      }

      function isSameMonth(date1, date2) {
        if (date1 && date2) {
          return (0, _isSameMonth2.default)(date1, date2);
        } else {
          return !date1 && !date2;
        }
      }

      function isSameDay(date1, date2) {
        if (date1 && date2) {
          return (0, _isSameDay2.default)(date1, date2);
        } else {
          return !date1 && !date2;
        }
      }

      function isDayInRange(day, startDate, endDate) {
        return (0, _isWithinInterval2.default)(day, {
          start: startDate,
          end: endDate
        });
      }

      // *** Diffing ***

      function getDaysDiff(date1, date2) {
        return (0, _differenceInCalendarDays2.default)(date1, date2);
      }

      // ** Date Localization **

      function registerLocale(localeName, localeData) {
        if (!window.__localeData__) {
          window.__localeData__ = {};
        }
        window.__localeData__[localeName] = localeData;
      }

      function setDefaultLocale(localeName) {
        window.__localeId__ = localeName;
      }

      function getDefaultLocale() {
        return window.__localeId__;
      }

      function getLocaleObject(localeName) {
        return window.__localeData__ ? window.__localeData__[localeName] : null;
      }

      function getFormattedWeekdayInLocale(date, formatFunc, locale) {
        return formatFunc(formatDate(date, 'dddd', locale));
      }

      function getWeekdayMinInLocale(date, locale) {
        return formatDate(date, 'EEEEEE', locale);
      }

      function getWeekdayShortInLocale(date, locale) {
        return formatDate(date, 'EEE', locale);
      }

      function getMonthInLocale(month, locale) {
        return formatDate(
          (0, _setMonth2.default)(newDate(), month),
          'LLLL',
          locale
        );
      }

      function getMonthShortInLocale(month, dateFormat, locale) {
        return formatDate(
          (0, _setMonth2.default)(newDate(), month),
          'LLL',
          locale
        );
      }

      // ** Utils for some components **

      function isDayDisabled(day) {
        var _ref3 =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : {},
          minDate = _ref3.minDate,
          maxDate = _ref3.maxDate,
          excludeDates = _ref3.excludeDates,
          includeDates = _ref3.includeDates,
          filterDate = _ref3.filterDate;

        return (
          isOutOfBounds(day, { minDate: minDate, maxDate: maxDate }) ||
          (excludeDates &&
            excludeDates.some(function(excludeDate) {
              return isSameDay(day, excludeDate);
            })) ||
          (includeDates &&
            !includeDates.some(function(includeDate) {
              return isSameDay(day, includeDate);
            })) ||
          (filterDate && !filterDate(newDate(day))) ||
          false
        );
      }

      function isOutOfBounds(day) {
        var _ref4 =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : {},
          minDate = _ref4.minDate,
          maxDate = _ref4.maxDate;

        return (
          (minDate &&
            (0, _differenceInCalendarDays2.default)(day, minDate) < 0) ||
          (maxDate && (0, _differenceInCalendarDays2.default)(day, maxDate) > 0)
        );
      }

      function isTimeDisabled(time, disabledTimes) {
        var l = disabledTimes.length;
        for (var i = 0; i < l; i++) {
          if (
            (0, _getHours2.default)(disabledTimes[i]) ===
              (0, _getHours2.default)(time) &&
            (0, _getMinutes2.default)(disabledTimes[i]) ===
              (0, _getMinutes2.default)(time)
          ) {
            return true;
          }
        }

        return false;
      }

      function isTimeInDisabledRange(time, _ref5) {
        var minTime = _ref5.minTime,
          maxTime = _ref5.maxTime;

        if (!minTime || !maxTime) {
          throw new Error('Both minTime and maxTime props required');
        }
        var base = newDate();
        var baseTime = (0, _setHours2.default)(
          (0, _setMinutes2.default)(base, (0, _getMinutes2.default)(time)),
          (0, _getHours2.default)(time)
        );
        var min = (0, _setHours2.default)(
          (0, _setMinutes2.default)(base, (0, _getMinutes2.default)(minTime)),
          (0, _getHours2.default)(minTime)
        );
        var max = (0, _setHours2.default)(
          (0, _setMinutes2.default)(base, (0, _getMinutes2.default)(maxTime)),
          (0, _getHours2.default)(maxTime)
        );
        return !(0, _isWithinInterval2.default)(baseTime, {
          start: min,
          end: max
        });
      }

      function monthDisabledBefore(day) {
        var _ref6 =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : {},
          minDate = _ref6.minDate,
          includeDates = _ref6.includeDates;

        var previousMonth = (0, _subMonths2.default)(day, 1);
        return (
          (minDate &&
            (0, _differenceInCalendarMonths2.default)(minDate, previousMonth) >
              0) ||
          (includeDates &&
            includeDates.every(function(includeDate) {
              return (
                (0, _differenceInCalendarMonths2.default)(
                  includeDate,
                  previousMonth
                ) > 0
              );
            })) ||
          false
        );
      }

      function monthDisabledAfter(day) {
        var _ref7 =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : {},
          maxDate = _ref7.maxDate,
          includeDates = _ref7.includeDates;

        var nextMonth = (0, _addMonths2.default)(day, 1);
        return (
          (maxDate &&
            (0, _differenceInCalendarMonths2.default)(nextMonth, maxDate) >
              0) ||
          (includeDates &&
            includeDates.every(function(includeDate) {
              return (
                (0, _differenceInCalendarMonths2.default)(
                  nextMonth,
                  includeDate
                ) > 0
              );
            })) ||
          false
        );
      }

      function getEffectiveMinDate(_ref8) {
        var minDate = _ref8.minDate,
          includeDates = _ref8.includeDates;

        if (includeDates && minDate) {
          var minDates = includeDates.filter(function(includeDate) {
            return (
              (0, _differenceInCalendarDays2.default)(includeDate, minDate) >= 0
            );
          });
          return (0, _min2.default)(minDates);
        } else if (includeDates) {
          return (0, _min2.default)(includeDates);
        } else {
          return minDate;
        }
      }

      function getEffectiveMaxDate(_ref9) {
        var maxDate = _ref9.maxDate,
          includeDates = _ref9.includeDates;

        if (includeDates && maxDate) {
          var maxDates = includeDates.filter(function(includeDate) {
            return (
              (0, _differenceInCalendarDays2.default)(includeDate, maxDate) <= 0
            );
          });
          return (0, _max2.default)(maxDates);
        } else if (includeDates) {
          return (0, _max2.default)(includeDates);
        } else {
          return maxDate;
        }
      }

      function getHightLightDaysMap() {
        var highlightDates =
          arguments.length > 0 && arguments[0] !== undefined
            ? arguments[0]
            : [];
        var defaultClassName =
          arguments.length > 1 && arguments[1] !== undefined
            ? arguments[1]
            : 'react-datepicker__day--highlighted';

        var dateClasses = new Map();
        for (var i = 0, len = highlightDates.length; i < len; i++) {
          var obj = highlightDates[i];
          if ((0, _isDate2.default)(obj)) {
            var key = formatDate(obj, 'MM.dd.yyyy');
            var classNamesArr = dateClasses.get(key) || [];
            if (!classNamesArr.includes(defaultClassName)) {
              classNamesArr.push(defaultClassName);
              dateClasses.set(key, classNamesArr);
            }
          } else if (
            (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) ===
            'object'
          ) {
            var keys = Object.keys(obj);
            var className = keys[0];
            var arrOfDates = obj[keys[0]];
            if (
              typeof className === 'string' &&
              arrOfDates.constructor === Array
            ) {
              for (var k = 0, _len = arrOfDates.length; k < _len; k++) {
                var _key = formatDate(arrOfDates[k], 'MM.dd.yyyy');
                var _classNamesArr = dateClasses.get(_key) || [];
                if (!_classNamesArr.includes(className)) {
                  _classNamesArr.push(className);
                  dateClasses.set(_key, _classNamesArr);
                }
              }
            }
          }
        }

        return dateClasses;
      }

      function timesToInjectAfter(
        startOfDay,
        currentTime,
        currentMultiplier,
        intervals,
        injectedTimes
      ) {
        var l = injectedTimes.length;
        var times = [];
        for (var i = 0; i < l; i++) {
          var injectedTime = (0, _addMinutes2.default)(
            (0, _addHours2.default)(
              startOfDay,
              (0, _getHours2.default)(injectedTimes[i])
            ),
            (0, _getMinutes2.default)(injectedTimes[i])
          );
          var nextTime = (0, _addMinutes2.default)(
            startOfDay,
            (currentMultiplier + 1) * intervals
          );

          if (
            (0, _isAfter2.default)(injectedTime, currentTime) &&
            (0, _isBefore2.default)(injectedTime, nextTime)
          ) {
            times.push(injectedTimes[i]);
          }
        }

        return times;
      }

      /***/
    },
    /* 543 */
    /***/ function(module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });

      var _typeof =
        typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
          ? function(obj) {
              return typeof obj;
            }
          : function(obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? 'symbol'
                : typeof obj;
            };

      exports.default = isDate;
      /**
       * @name isDate
       * @category Common Helpers
       * @summary Is the given value a date?
       *
       * @description
       * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.
       *
       * @param {*} value - the value to check
       * @param {Options} [options] - the object with options. Unused; present for FP submodule compatibility sake. See [Options]{@link https://date-fns.org/docs/Options}
       * @returns {boolean} true if the given value is a date
       * @throws {TypeError} 1 arguments required
       *
       * @example
       * // For a valid date:
       * var result = isDate(new Date())
       * //=> true
       *
       * @example
       * // For an invalid date:
       * var result = isDate(new Date(NaN))
       * //=> true
       *
       * @example
       * // For some value:
       * var result = isDate('2014-02-31')
       * //=> false
       *
       * @example
       * // For an object:
       * var result = isDate({})
       * //=> false
       */
      function isDate(value) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        return (
          value instanceof Date ||
          ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) ===
            'object' &&
            Object.prototype.toString.call(value) === '[object Date]')
        );
      }
      module.exports = exports['default'];

      /***/
    },
    /* 544 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = isValid;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name isValid
       * @category Common Helpers
       * @summary Is the given date valid?
       *
       * @description
       * Returns false if argument is Invalid Date and true otherwise.
       * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * Invalid Date is a Date, whose time value is NaN.
       *
       * Time value of Date: http://es5.github.io/#x15.9.1.1
       *
       * @param {*} date - the date to check
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Boolean} the date is valid
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // For the valid date:
       * var result = isValid(new Date(2014, 1, 31))
       * //=> true
       *
       * @example
       * // For the value, convertable into a date:
       * var result = isValid('2014-02-31')
       * //=> true
       *
       * @example
       * // For the invalid date:
       * var result = isValid(new Date(''))
       * //=> false
       */
      function isValid(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        return !isNaN(date);
      }
      module.exports = exports['default'];

      /***/
    },
    /* 545 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });

      var _typeof =
        typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
          ? function(obj) {
              return typeof obj;
            }
          : function(obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? 'symbol'
                : typeof obj;
            };

      exports.default = toDate;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(547);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var MILLISECONDS_IN_HOUR = 3600000;
      var MILLISECONDS_IN_MINUTE = 60000;
      var DEFAULT_ADDITIONAL_DIGITS = 2;

      var patterns = {
        dateTimeDelimeter: /[T ]/,
        plainTime: /:/,
        timeZoneDelimeter: /[Z ]/i,

        // year tokens
        YY: /^(\d{2})$/,
        YYY: [
          /^([+-]\d{2})$/, // 0 additional digits
          /^([+-]\d{3})$/, // 1 additional digit
          /^([+-]\d{4})$/ // 2 additional digits
        ],
        YYYY: /^(\d{4})/,
        YYYYY: [
          /^([+-]\d{4})/, // 0 additional digits
          /^([+-]\d{5})/, // 1 additional digit
          /^([+-]\d{6})/ // 2 additional digits
        ],

        // date tokens
        MM: /^-(\d{2})$/,
        DDD: /^-?(\d{3})$/,
        MMDD: /^-?(\d{2})-?(\d{2})$/,
        Www: /^-?W(\d{2})$/,
        WwwD: /^-?W(\d{2})-?(\d{1})$/,

        HH: /^(\d{2}([.,]\d*)?)$/,
        HHMM: /^(\d{2}):?(\d{2}([.,]\d*)?)$/,
        HHMMSS: /^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,

        // timezone tokens
        timezone: /([Z+-].*)$/,
        timezoneZ: /^(Z)$/,
        timezoneHH: /^([+-])(\d{2})$/,
        timezoneHHMM: /^([+-])(\d{2}):?(\d{2})$/
      };

      /**
       * @name toDate
       * @category Common Helpers
       * @summary Convert the given argument to an instance of Date.
       *
       * @description
       * Convert the given argument to an instance of Date.
       *
       * If the argument is an instance of Date, the function returns its clone.
       *
       * If the argument is a number, it is treated as a timestamp.
       *
       * If an argument is a string, the function tries to parse it.
       * Function accepts complete ISO 8601 formats as well as partial implementations.
       * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601
       * If the function cannot parse the string or the values are invalid, it returns Invalid Date.
       *
       * If the argument is none of the above, the function returns Invalid Date.
       *
       * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
       * All *date-fns* functions will throw `RangeError` if `options.additionalDigits` is not 0, 1, 2 or undefined.
       *
       * @param {Date|String|Number} argument - the value to convert
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format
       * @returns {Date} the parsed date in the local time zone
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Convert string '2014-02-11T11:30:30' to date:
       * var result = toDate('2014-02-11T11:30:30')
       * //=> Tue Feb 11 2014 11:30:30
       *
       * @example
       * // Convert string '+02014101' to date,
       * // if the additional number of digits in the extended year format is 1:
       * var result = toDate('+02014101', {additionalDigits: 1})
       * //=> Fri Apr 11 2014 00:00:00
       */
      function toDate(argument, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        if (argument === null) {
          return new Date(NaN);
        }

        var options = dirtyOptions || {};

        var additionalDigits =
          options.additionalDigits == null
            ? DEFAULT_ADDITIONAL_DIGITS
            : (0, _index2.default)(options.additionalDigits);
        if (
          additionalDigits !== 2 &&
          additionalDigits !== 1 &&
          additionalDigits !== 0
        ) {
          throw new RangeError('additionalDigits must be 0, 1 or 2');
        }

        // Clone the date
        if (
          argument instanceof Date ||
          ((typeof argument === 'undefined'
            ? 'undefined'
            : _typeof(argument)) === 'object' &&
            Object.prototype.toString.call(argument) === '[object Date]')
        ) {
          // Prevent the date to lose the milliseconds when passed to new Date() in IE10
          return new Date(argument.getTime());
        } else if (
          typeof argument === 'number' ||
          Object.prototype.toString.call(argument) === '[object Number]'
        ) {
          return new Date(argument);
        } else if (
          !(
            typeof argument === 'string' ||
            Object.prototype.toString.call(argument) === '[object String]'
          )
        ) {
          return new Date(NaN);
        }

        var dateStrings = splitDateString(argument);

        var parseYearResult = parseYear(dateStrings.date, additionalDigits);
        var year = parseYearResult.year;
        var restDateString = parseYearResult.restDateString;

        var date = parseDate(restDateString, year);

        if (isNaN(date)) {
          return new Date(NaN);
        }

        if (date) {
          var timestamp = date.getTime();
          var time = 0;
          var offset;

          if (dateStrings.time) {
            time = parseTime(dateStrings.time);

            if (isNaN(time)) {
              return new Date(NaN);
            }
          }

          if (dateStrings.timezone) {
            offset = parseTimezone(dateStrings.timezone);
            if (isNaN(offset)) {
              return new Date(NaN);
            }
          } else {
            // get offset accurate to hour in timezones that change offset
            offset = (0, _index4.default)(new Date(timestamp + time));
            offset = (0, _index4.default)(new Date(timestamp + time + offset));
          }

          return new Date(timestamp + time + offset);
        } else {
          return new Date(NaN);
        }
      }

      function splitDateString(dateString) {
        var dateStrings = {};
        var array = dateString.split(patterns.dateTimeDelimeter);
        var timeString;

        if (patterns.plainTime.test(array[0])) {
          dateStrings.date = null;
          timeString = array[0];
        } else {
          dateStrings.date = array[0];
          timeString = array[1];
          if (patterns.timeZoneDelimeter.test(dateStrings.date)) {
            dateStrings.date = dateString.split(patterns.timeZoneDelimeter)[0];
            timeString = dateString.substr(
              dateStrings.date.length,
              dateString.length
            );
          }
        }

        if (timeString) {
          var token = patterns.timezone.exec(timeString);
          if (token) {
            dateStrings.time = timeString.replace(token[1], '');
            dateStrings.timezone = token[1];
          } else {
            dateStrings.time = timeString;
          }
        }

        return dateStrings;
      }

      function parseYear(dateString, additionalDigits) {
        var patternYYY = patterns.YYY[additionalDigits];
        var patternYYYYY = patterns.YYYYY[additionalDigits];

        var token;

        // YYYY or ±YYYYY
        token = patterns.YYYY.exec(dateString) || patternYYYYY.exec(dateString);
        if (token) {
          var yearString = token[1];
          return {
            year: parseInt(yearString, 10),
            restDateString: dateString.slice(yearString.length)
          };
        }

        // YY or ±YYY
        token = patterns.YY.exec(dateString) || patternYYY.exec(dateString);
        if (token) {
          var centuryString = token[1];
          return {
            year: parseInt(centuryString, 10) * 100,
            restDateString: dateString.slice(centuryString.length)
          };
        }

        // Invalid ISO-formatted year
        return {
          year: null
        };
      }

      function parseDate(dateString, year) {
        // Invalid ISO-formatted year
        if (year === null) {
          return null;
        }

        var token;
        var date;
        var month;
        var week;

        // YYYY
        if (dateString.length === 0) {
          date = new Date(0);
          date.setUTCFullYear(year);
          return date;
        }

        // YYYY-MM
        token = patterns.MM.exec(dateString);
        if (token) {
          date = new Date(0);
          month = parseInt(token[1], 10) - 1;

          if (!validateDate(year, month)) {
            return new Date(NaN);
          }

          date.setUTCFullYear(year, month);
          return date;
        }

        // YYYY-DDD or YYYYDDD
        token = patterns.DDD.exec(dateString);
        if (token) {
          date = new Date(0);
          var dayOfYear = parseInt(token[1], 10);

          if (!validateDayOfYearDate(year, dayOfYear)) {
            return new Date(NaN);
          }

          date.setUTCFullYear(year, 0, dayOfYear);
          return date;
        }

        // YYYY-MM-DD or YYYYMMDD
        token = patterns.MMDD.exec(dateString);
        if (token) {
          date = new Date(0);
          month = parseInt(token[1], 10) - 1;
          var day = parseInt(token[2], 10);

          if (!validateDate(year, month, day)) {
            return new Date(NaN);
          }

          date.setUTCFullYear(year, month, day);
          return date;
        }

        // YYYY-Www or YYYYWww
        token = patterns.Www.exec(dateString);
        if (token) {
          week = parseInt(token[1], 10) - 1;

          if (!validateWeekDate(year, week)) {
            return new Date(NaN);
          }

          return dayOfISOWeekYear(year, week);
        }

        // YYYY-Www-D or YYYYWwwD
        token = patterns.WwwD.exec(dateString);
        if (token) {
          week = parseInt(token[1], 10) - 1;
          var dayOfWeek = parseInt(token[2], 10) - 1;

          if (!validateWeekDate(year, week, dayOfWeek)) {
            return new Date(NaN);
          }

          return dayOfISOWeekYear(year, week, dayOfWeek);
        }

        // Invalid ISO-formatted date
        return null;
      }

      function parseTime(timeString) {
        var token;
        var hours;
        var minutes;

        // hh
        token = patterns.HH.exec(timeString);
        if (token) {
          hours = parseFloat(token[1].replace(',', '.'));

          if (!validateTime(hours)) {
            return NaN;
          }

          return (hours % 24) * MILLISECONDS_IN_HOUR;
        }

        // hh:mm or hhmm
        token = patterns.HHMM.exec(timeString);
        if (token) {
          hours = parseInt(token[1], 10);
          minutes = parseFloat(token[2].replace(',', '.'));

          if (!validateTime(hours, minutes)) {
            return NaN;
          }

          return (
            (hours % 24) * MILLISECONDS_IN_HOUR +
            minutes * MILLISECONDS_IN_MINUTE
          );
        }

        // hh:mm:ss or hhmmss
        token = patterns.HHMMSS.exec(timeString);
        if (token) {
          hours = parseInt(token[1], 10);
          minutes = parseInt(token[2], 10);
          var seconds = parseFloat(token[3].replace(',', '.'));

          if (!validateTime(hours, minutes, seconds)) {
            return NaN;
          }

          return (
            (hours % 24) * MILLISECONDS_IN_HOUR +
            minutes * MILLISECONDS_IN_MINUTE +
            seconds * 1000
          );
        }

        // Invalid ISO-formatted time
        return null;
      }

      function parseTimezone(timezoneString) {
        var token;
        var absoluteOffset;

        // Z
        token = patterns.timezoneZ.exec(timezoneString);
        if (token) {
          return 0;
        }

        var hours;

        // ±hh
        token = patterns.timezoneHH.exec(timezoneString);
        if (token) {
          hours = parseInt(token[2], 10);

          if (!validateTimezone(hours)) {
            return NaN;
          }

          absoluteOffset = hours * MILLISECONDS_IN_HOUR;
          return token[1] === '+' ? -absoluteOffset : absoluteOffset;
        }

        // ±hh:mm or ±hhmm
        token = patterns.timezoneHHMM.exec(timezoneString);
        if (token) {
          hours = parseInt(token[2], 10);
          var minutes = parseInt(token[3], 10);

          if (!validateTimezone(hours, minutes)) {
            return NaN;
          }

          absoluteOffset =
            hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE;
          return token[1] === '+' ? -absoluteOffset : absoluteOffset;
        }

        return 0;
      }

      function dayOfISOWeekYear(isoWeekYear, week, day) {
        week = week || 0;
        day = day || 0;
        var date = new Date(0);
        date.setUTCFullYear(isoWeekYear, 0, 4);
        var fourthOfJanuaryDay = date.getUTCDay() || 7;
        var diff = week * 7 + day + 1 - fourthOfJanuaryDay;
        date.setUTCDate(date.getUTCDate() + diff);
        return date;
      }

      // Validation functions

      var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
      var DAYS_IN_MONTH_LEAP_YEAR = [
        31,
        29,
        31,
        30,
        31,
        30,
        31,
        31,
        30,
        31,
        30,
        31
      ];

      function isLeapYearIndex(year) {
        return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);
      }

      function validateDate(year, month, date) {
        if (month < 0 || month > 11) {
          return false;
        }

        if (date != null) {
          if (date < 1) {
            return false;
          }

          var isLeapYear = isLeapYearIndex(year);
          if (isLeapYear && date > DAYS_IN_MONTH_LEAP_YEAR[month]) {
            return false;
          }
          if (!isLeapYear && date > DAYS_IN_MONTH[month]) {
            return false;
          }
        }

        return true;
      }

      function validateDayOfYearDate(year, dayOfYear) {
        if (dayOfYear < 1) {
          return false;
        }

        var isLeapYear = isLeapYearIndex(year);
        if (isLeapYear && dayOfYear > 366) {
          return false;
        }
        if (!isLeapYear && dayOfYear > 365) {
          return false;
        }

        return true;
      }

      function validateWeekDate(year, week, day) {
        if (week < 0 || week > 52) {
          return false;
        }

        if (day != null && (day < 0 || day > 6)) {
          return false;
        }

        return true;
      }

      function validateTime(hours, minutes, seconds) {
        if (hours != null && (hours < 0 || hours >= 25)) {
          return false;
        }

        if (minutes != null && (minutes < 0 || minutes >= 60)) {
          return false;
        }

        if (seconds != null && (seconds < 0 || seconds >= 60)) {
          return false;
        }

        return true;
      }

      function validateTimezone(hours, minutes) {
        if (minutes != null && (minutes < 0 || minutes > 59)) {
          return false;
        }

        return true;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 546 */
    /***/ function(module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = toInteger;
      function toInteger(dirtyNumber) {
        if (
          dirtyNumber === null ||
          dirtyNumber === true ||
          dirtyNumber === false
        ) {
          return NaN;
        }

        var number = Number(dirtyNumber);

        if (isNaN(number)) {
          return number;
        }

        return number < 0 ? Math.ceil(number) : Math.floor(number);
      }
      module.exports = exports['default'];

      /***/
    },
    /* 547 */
    /***/ function(module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = getTimezoneOffsetInMilliseconds;
      var MILLISECONDS_IN_MINUTE = 60000;

      /**
       * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
       * They usually appear for dates that denote time before the timezones were introduced
       * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
       * and GMT+01:00:00 after that date)
       *
       * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
       * which would lead to incorrect calculations.
       *
       * This function returns the timezone offset in milliseconds that takes seconds in account.
       */
      function getTimezoneOffsetInMilliseconds(dirtyDate) {
        var date = new Date(dirtyDate.getTime());
        var baseTimezoneOffset = date.getTimezoneOffset();
        date.setSeconds(0, 0);
        var millisecondsPartOfTimezoneOffset =
          date.getTime() % MILLISECONDS_IN_MINUTE;

        return (
          baseTimezoneOffset * MILLISECONDS_IN_MINUTE +
          millisecondsPartOfTimezoneOffset
        );
      }
      module.exports = exports['default'];

      /***/
    },
    /* 548 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = format;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(547);

      var _index4 = _interopRequireDefault(_index3);

      var _index5 = __webpack_require__(545);

      var _index6 = _interopRequireDefault(_index5);

      var _index7 = __webpack_require__(544);

      var _index8 = _interopRequireDefault(_index7);

      var _index9 = __webpack_require__(549);

      var _index10 = _interopRequireDefault(_index9);

      var _index11 = __webpack_require__(559);

      var _index12 = _interopRequireDefault(_index11);

      var _index13 = __webpack_require__(569);

      var _index14 = _interopRequireDefault(_index13);

      var _index15 = __webpack_require__(570);

      var _index16 = _interopRequireDefault(_index15);

      var _index17 = __webpack_require__(572);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      // This RegExp consists of three parts separated by `|`:
      // - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
      //   (one of the certain letters followed by `o`)
      // - (\w)\1* matches any sequences of the same letter
      // - '' matches two quote characters in a row
      // - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
      //   except a single quote symbol, which ends the sequence.
      //   Two quote characters do not end the sequence.
      //   If there is no matching single quote
      //   then the sequence will continue until the end of the string.
      // - . matches any single character unmatched by previous parts of the RegExps
      var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;

      // This RegExp catches symbols escaped by quotes, and also
      // sequences of symbols P, p, and the combinations like `PPPPPPPppppp`
      var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;

      var escapedStringRegExp = /^'(.*?)'?$/;
      var doubleQuoteRegExp = /''/g;

      /**
       * @name format
       * @category Common Helpers
       * @summary Format the date.
       *
       * @description
       * Return the formatted date string in the given format. The result may vary by locale.
       *
       * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
       * > See: https://git.io/fxCyr
       *
       * The characters wrapped between two single quotes characters (') are escaped.
       * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
       * (see the last example)
       *
       * Format of the string is based on Unicode Technical Standard #35:
       * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
       * with a few additions (see note 7 below the table).
       *
       * Accepted patterns:
       * | Unit                            | Pattern | Result examples                   | Notes |
       * |---------------------------------|---------|-----------------------------------|-------|
       * | Era                             | G..GGG  | AD, BC                            |       |
       * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
       * |                                 | GGGGG   | A, B                              |       |
       * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
       * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
       * |                                 | yy      | 44, 01, 00, 17                    | 5     |
       * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
       * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
       * |                                 | yyyyy   | ...                               | 3,5   |
       * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
       * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
       * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
       * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
       * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
       * |                                 | YYYYY   | ...                               | 3,5   |
       * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
       * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
       * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
       * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
       * |                                 | RRRRR   | ...                               | 3,5,7 |
       * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
       * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
       * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
       * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
       * |                                 | uuuuu   | ...                               | 3,5   |
       * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
       * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
       * |                                 | QQ      | 01, 02, 03, 04                    |       |
       * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
       * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
       * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
       * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
       * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
       * |                                 | qq      | 01, 02, 03, 04                    |       |
       * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
       * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
       * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
       * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
       * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
       * |                                 | MM      | 01, 02, ..., 12                   |       |
       * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
       * |                                 | MMMM    | January, February, ..., December  | 2     |
       * |                                 | MMMMM   | J, F, ..., D                      |       |
       * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
       * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
       * |                                 | LL      | 01, 02, ..., 12                   |       |
       * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
       * |                                 | LLLL    | January, February, ..., December  | 2     |
       * |                                 | LLLLL   | J, F, ..., D                      |       |
       * | Local week of year              | w       | 1, 2, ..., 53                     |       |
       * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
       * |                                 | ww      | 01, 02, ..., 53                   |       |
       * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
       * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
       * |                                 | II      | 01, 02, ..., 53                   | 7     |
       * | Day of month                    | d       | 1, 2, ..., 31                     |       |
       * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
       * |                                 | dd      | 01, 02, ..., 31                   |       |
       * | Day of year                     | D       | 1, 2, ..., 365, 366               | 8     |
       * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
       * |                                 | DD      | 01, 02, ..., 365, 366             | 8     |
       * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
       * |                                 | DDDD    | ...                               | 3     |
       * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
       * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
       * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
       * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
       * |                                 | ii      | 01, 02, ..., 07                   | 7     |
       * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |
       * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
       * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
       * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |
       * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
       * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
       * |                                 | ee      | 02, 03, ..., 01                   |       |
       * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |
       * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
       * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
       * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
       * |                                 | cc      | 02, 03, ..., 01                   |       |
       * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |
       * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
       * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | AM, PM                          | a..aaa  | AM, PM                            |       |
       * |                                 | aaaa    | a.m., p.m.                        | 2     |
       * |                                 | aaaaa   | a, p                              |       |
       * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |
       * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
       * |                                 | bbbbb   | a, p, n, mi                       |       |
       * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
       * |                                 | BBBB    | at night, in the morning, ...     | 2     |
       * |                                 | BBBBB   | at night, in the morning, ...     |       |
       * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
       * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
       * |                                 | hh      | 01, 02, ..., 11, 12               |       |
       * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
       * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
       * |                                 | HH      | 00, 01, 02, ..., 23               |       |
       * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
       * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
       * |                                 | KK      | 1, 2, ..., 11, 0                  |       |
       * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
       * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
       * |                                 | kk      | 24, 01, 02, ..., 23               |       |
       * | Minute                          | m       | 0, 1, ..., 59                     |       |
       * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
       * |                                 | mm      | 00, 01, ..., 59                   |       |
       * | Second                          | s       | 0, 1, ..., 59                     |       |
       * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
       * |                                 | ss      | 00, 01, ..., 59                   |       |
       * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
       * |                                 | SS      | 00, 01, ..., 99                   |       |
       * |                                 | SSS     | 000, 0001, ..., 999               |       |
       * |                                 | SSSS    | ...                               | 3     |
       * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
       * |                                 | XX      | -0800, +0530, Z                   |       |
       * |                                 | XXX     | -08:00, +05:30, Z                 |       |
       * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
       * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
       * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
       * |                                 | xx      | -0800, +0530, +0000               |       |
       * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
       * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
       * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
       * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
       * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
       * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
       * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
       * | Seconds timestamp               | t       | 512969520                         | 7     |
       * |                                 | tt      | ...                               | 3,7   |
       * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
       * |                                 | TT      | ...                               | 3,7   |
       * | Long localized date             | P       | 05/29/1453                        | 7     |
       * |                                 | PP      | May 29, 1453                      | 7     |
       * |                                 | PPP     | May 29th, 1453                    | 7     |
       * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |
       * | Long localized time             | p       | 12:00 AM                          | 7     |
       * |                                 | pp      | 12:00:00 AM                       | 7     |
       * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
       * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
       * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |
       * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |
       * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |
       * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |
       * Notes:
       * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
       *    are the same as "stand-alone" units, but are different in some languages.
       *    "Formatting" units are declined according to the rules of the language
       *    in the context of a date. "Stand-alone" units are always nominative singular:
       *
       *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
       *
       *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
       *
       * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
       *    the single quote characters (see below).
       *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
       *    the output will be the same as default pattern for this unit, usually
       *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
       *    are marked with "2" in the last column of the table.
       *
       *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
       *
       *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
       *
       *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
       *
       *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
       *
       *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
       *
       * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
       *    The output will be padded with zeros to match the length of the pattern.
       *
       *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
       *
       * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
       *    These tokens represent the shortest form of the quarter.
       *
       * 5. The main difference between `y` and `u` patterns are B.C. years:
       *
       *    | Year | `y` | `u` |
       *    |------|-----|-----|
       *    | AC 1 |   1 |   1 |
       *    | BC 1 |   1 |   0 |
       *    | BC 2 |   2 |  -1 |
       *
       *    Also `yy` always returns the last two digits of a year,
       *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
       *
       *    | Year | `yy` | `uu` |
       *    |------|------|------|
       *    | 1    |   01 |   01 |
       *    | 14   |   14 |   14 |
       *    | 376  |   76 |  376 |
       *    | 1453 |   53 | 1453 |
       *
       *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
       *    except local week-numbering years are dependent on `options.weekStartsOn`
       *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
       *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
       *
       * 6. Specific non-location timezones are currently unavailable in `date-fns`,
       *    so right now these tokens fall back to GMT timezones.
       *
       * 7. These patterns are not in the Unicode Technical Standard #35:
       *    - `i`: ISO day of week
       *    - `I`: ISO week of year
       *    - `R`: ISO week-numbering year
       *    - `t`: seconds timestamp
       *    - `T`: milliseconds timestamp
       *    - `o`: ordinal number modifier
       *    - `P`: long localized date
       *    - `p`: long localized time
       *
       * 8. These tokens are often confused with others. See: https://git.io/fxCyr
       *
       * @param {Date|String|Number} date - the original date
       * @param {String} format - the string of tokens
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:
       *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).
       *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens (`yy`, `yyyy`).
       *   See: https://git.io/fxCyr
       * @returns {String} the formatted date string
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       * @throws {RangeError} `options.locale` must contain `localize` property
       * @throws {RangeError} `options.locale` must contain `formatLong` property
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
       * @throws {RangeError} `options.awareOfUnicodeTokens` must be set to `true` to use `XX` token; see: https://git.io/fxCyr
       *
       * @example
       * // Represent 11 February 2014 in middle-endian format:
       * var result = format(
       *   new Date(2014, 1, 11),
       *   'MM/dd/yyyy'
       * )
       * //=> '02/11/2014'
       *
       * @example
       * // Represent 2 July 2014 in Esperanto:
       * import { eoLocale } from 'date-fns/locale/eo'
       * var result = format(
       *   new Date(2014, 6, 2),
       *   "do 'de' MMMM yyyy",
       *   {locale: eoLocale}
       * )
       * //=> '2-a de julio 2014'
       *
       * @example
       * // Escape string by single quote characters:
       * var result = format(
       *   new Date(2014, 6, 2, 15),
       *   "h 'o''clock'"
       * )
       * //=> "3 o'clock"
       */
      function format(dirtyDate, dirtyFormatStr, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var formatStr = String(dirtyFormatStr);
        var options = dirtyOptions || {};

        var locale = options.locale || _index10.default;

        var localeFirstWeekContainsDate =
          locale.options && locale.options.firstWeekContainsDate;
        var defaultFirstWeekContainsDate =
          localeFirstWeekContainsDate == null
            ? 1
            : (0, _index2.default)(localeFirstWeekContainsDate);
        var firstWeekContainsDate =
          options.firstWeekContainsDate == null
            ? defaultFirstWeekContainsDate
            : (0, _index2.default)(options.firstWeekContainsDate);

        // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
        if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
          throw new RangeError(
            'firstWeekContainsDate must be between 1 and 7 inclusively'
          );
        }

        var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn =
          localeWeekStartsOn == null
            ? 0
            : (0, _index2.default)(localeWeekStartsOn);
        var weekStartsOn =
          options.weekStartsOn == null
            ? defaultWeekStartsOn
            : (0, _index2.default)(options.weekStartsOn);

        // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError(
            'weekStartsOn must be between 0 and 6 inclusively'
          );
        }

        if (!locale.localize) {
          throw new RangeError('locale must contain localize property');
        }

        if (!locale.formatLong) {
          throw new RangeError('locale must contain formatLong property');
        }

        var originalDate = (0, _index6.default)(dirtyDate, options);

        if (!(0, _index8.default)(originalDate, options)) {
          return 'Invalid Date';
        }

        // Convert the date in system timezone to the same date in UTC+00:00 timezone.
        // This ensures that when UTC functions will be implemented, locales will be compatible with them.
        // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376
        var timezoneOffset = (0, _index4.default)(originalDate);
        var utcDate = (0, _index16.default)(
          originalDate,
          timezoneOffset,
          options
        );

        var formatterOptions = {
          firstWeekContainsDate: firstWeekContainsDate,
          weekStartsOn: weekStartsOn,
          locale: locale,
          _originalDate: originalDate
        };

        var result = formatStr
          .match(longFormattingTokensRegExp)
          .map(function(substring) {
            var firstCharacter = substring[0];
            if (firstCharacter === 'p' || firstCharacter === 'P') {
              var longFormatter = _index14.default[firstCharacter];
              return longFormatter(
                substring,
                locale.formatLong,
                formatterOptions
              );
            }
            return substring;
          })
          .join('')
          .match(formattingTokensRegExp)
          .map(function(substring) {
            // Replace two single quote characters with one single quote character
            if (substring === "''") {
              return "'";
            }

            var firstCharacter = substring[0];
            if (firstCharacter === "'") {
              return cleanEscapedString(substring);
            }

            var formatter = _index12.default[firstCharacter];
            if (formatter) {
              if (
                !options.awareOfUnicodeTokens &&
                (0, _index17.isProtectedToken)(substring)
              ) {
                (0, _index17.throwProtectedError)(substring);
              }
              return formatter(
                utcDate,
                substring,
                locale.localize,
                formatterOptions
              );
            }

            return substring;
          })
          .join('');

        return result;
      }

      function cleanEscapedString(input) {
        return input
          .match(escapedStringRegExp)[1]
          .replace(doubleQuoteRegExp, "'");
      }
      module.exports = exports['default'];

      /***/
    },
    /* 549 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });

      var _index = __webpack_require__(550);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(551);

      var _index4 = _interopRequireDefault(_index3);

      var _index5 = __webpack_require__(553);

      var _index6 = _interopRequireDefault(_index5);

      var _index7 = __webpack_require__(554);

      var _index8 = _interopRequireDefault(_index7);

      var _index9 = __webpack_require__(556);

      var _index10 = _interopRequireDefault(_index9);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @type {Locale}
       * @category Locales
       * @summary English locale (United States).
       * @language English
       * @iso-639-2 eng
       * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
       * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
       */
      var locale = {
        formatDistance: _index2.default,
        formatLong: _index4.default,
        formatRelative: _index6.default,
        localize: _index8.default,
        match: _index10.default,
        options: {
          weekStartsOn: 0 /* Sunday */,
          firstWeekContainsDate: 1
        }
      };

      exports.default = locale;
      module.exports = exports['default'];

      /***/
    },
    /* 550 */
    /***/ function(module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = formatDistance;
      var formatDistanceLocale = {
        lessThanXSeconds: {
          one: 'less than a second',
          other: 'less than {{count}} seconds'
        },

        xSeconds: {
          one: '1 second',
          other: '{{count}} seconds'
        },

        halfAMinute: 'half a minute',

        lessThanXMinutes: {
          one: 'less than a minute',
          other: 'less than {{count}} minutes'
        },

        xMinutes: {
          one: '1 minute',
          other: '{{count}} minutes'
        },

        aboutXHours: {
          one: 'about 1 hour',
          other: 'about {{count}} hours'
        },

        xHours: {
          one: '1 hour',
          other: '{{count}} hours'
        },

        xDays: {
          one: '1 day',
          other: '{{count}} days'
        },

        aboutXMonths: {
          one: 'about 1 month',
          other: 'about {{count}} months'
        },

        xMonths: {
          one: '1 month',
          other: '{{count}} months'
        },

        aboutXYears: {
          one: 'about 1 year',
          other: 'about {{count}} years'
        },

        xYears: {
          one: '1 year',
          other: '{{count}} years'
        },

        overXYears: {
          one: 'over 1 year',
          other: 'over {{count}} years'
        },

        almostXYears: {
          one: 'almost 1 year',
          other: 'almost {{count}} years'
        }
      };

      function formatDistance(token, count, options) {
        options = options || {};

        var result;
        if (typeof formatDistanceLocale[token] === 'string') {
          result = formatDistanceLocale[token];
        } else if (count === 1) {
          result = formatDistanceLocale[token].one;
        } else {
          result = formatDistanceLocale[token].other.replace(
            '{{count}}',
            count
          );
        }

        if (options.addSuffix) {
          if (options.comparison > 0) {
            return 'in ' + result;
          } else {
            return result + ' ago';
          }
        }

        return result;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 551 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });

      var _index = __webpack_require__(552);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var dateFormats = {
        full: 'EEEE, MMMM do, y',
        long: 'MMMM do, y',
        medium: 'MMM d, y',
        short: 'MM/dd/yyyy'
      };

      var timeFormats = {
        full: 'h:mm:ss a zzzz',
        long: 'h:mm:ss a z',
        medium: 'h:mm:ss a',
        short: 'h:mm a'
      };

      var dateTimeFormats = {
        full: "{{date}} 'at' {{time}}",
        long: "{{date}} 'at' {{time}}",
        medium: '{{date}}, {{time}}',
        short: '{{date}}, {{time}}'
      };

      var formatLong = {
        date: (0, _index2.default)({
          formats: dateFormats,
          defaultWidth: 'full'
        }),

        time: (0, _index2.default)({
          formats: timeFormats,
          defaultWidth: 'full'
        }),

        dateTime: (0, _index2.default)({
          formats: dateTimeFormats,
          defaultWidth: 'full'
        })
      };

      exports.default = formatLong;
      module.exports = exports['default'];

      /***/
    },
    /* 552 */
    /***/ function(module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = buildFormatLongFn;
      function buildFormatLongFn(args) {
        return function(dirtyOptions) {
          var options = dirtyOptions || {};
          var width = options.width ? String(options.width) : args.defaultWidth;
          var format = args.formats[width] || args.formats[args.defaultWidth];
          return format;
        };
      }
      module.exports = exports['default'];

      /***/
    },
    /* 553 */
    /***/ function(module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = formatRelative;
      var formatRelativeLocale = {
        lastWeek: "'last' eeee 'at' p",
        yesterday: "'yesterday at' p",
        today: "'today at' p",
        tomorrow: "'tomorrow at' p",
        nextWeek: "eeee 'at' p",
        other: 'P'
      };

      function formatRelative(token, date, baseDate, options) {
        return formatRelativeLocale[token];
      }
      module.exports = exports['default'];

      /***/
    },
    /* 554 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });

      var _index = __webpack_require__(555);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var eraValues = {
        narrow: ['B', 'A'],
        abbreviated: ['BC', 'AD'],
        wide: ['Before Christ', 'Anno Domini']
      };

      var quarterValues = {
        narrow: ['1', '2', '3', '4'],
        abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
        wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']
      };

      // Note: in English, the names of days of the week and months are capitalized.
      // If you are making a new locale based on this one, check if the same is true for the language you're working on.
      // Generally, formatted dates should look like they are in the middle of a sentence,
      // e.g. in Spanish language the weekdays and months should be in the lowercase.
      var monthValues = {
        narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
        abbreviated: [
          'Jan',
          'Feb',
          'Mar',
          'Apr',
          'May',
          'Jun',
          'Jul',
          'Aug',
          'Sep',
          'Oct',
          'Nov',
          'Dec'
        ],
        wide: [
          'January',
          'February',
          'March',
          'April',
          'May',
          'June',
          'July',
          'August',
          'September',
          'October',
          'November',
          'December'
        ]
      };

      var dayValues = {
        narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
        short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
        abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
        wide: [
          'Sunday',
          'Monday',
          'Tuesday',
          'Wednesday',
          'Thursday',
          'Friday',
          'Saturday'
        ]
      };

      var dayPeriodValues = {
        narrow: {
          am: 'a',
          pm: 'p',
          midnight: 'mi',
          noon: 'n',
          morning: 'morning',
          afternoon: 'afternoon',
          evening: 'evening',
          night: 'night'
        },
        abbreviated: {
          am: 'AM',
          pm: 'PM',
          midnight: 'midnight',
          noon: 'noon',
          morning: 'morning',
          afternoon: 'afternoon',
          evening: 'evening',
          night: 'night'
        },
        wide: {
          am: 'a.m.',
          pm: 'p.m.',
          midnight: 'midnight',
          noon: 'noon',
          morning: 'morning',
          afternoon: 'afternoon',
          evening: 'evening',
          night: 'night'
        }
      };
      var formattingDayPeriodValues = {
        narrow: {
          am: 'a',
          pm: 'p',
          midnight: 'mi',
          noon: 'n',
          morning: 'in the morning',
          afternoon: 'in the afternoon',
          evening: 'in the evening',
          night: 'at night'
        },
        abbreviated: {
          am: 'AM',
          pm: 'PM',
          midnight: 'midnight',
          noon: 'noon',
          morning: 'in the morning',
          afternoon: 'in the afternoon',
          evening: 'in the evening',
          night: 'at night'
        },
        wide: {
          am: 'a.m.',
          pm: 'p.m.',
          midnight: 'midnight',
          noon: 'noon',
          morning: 'in the morning',
          afternoon: 'in the afternoon',
          evening: 'in the evening',
          night: 'at night'
        }
      };

      function ordinalNumber(dirtyNumber, dirtyOptions) {
        var number = Number(dirtyNumber);

        // If ordinal numbers depend on context, for example,
        // if they are different for different grammatical genders,
        // use `options.unit`:
        //
        //   var options = dirtyOptions || {}
        //   var unit = String(options.unit)
        //
        // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
        // 'day', 'hour', 'minute', 'second'

        var rem100 = number % 100;
        if (rem100 > 20 || rem100 < 10) {
          switch (rem100 % 10) {
            case 1:
              return number + 'st';
            case 2:
              return number + 'nd';
            case 3:
              return number + 'rd';
          }
        }
        return number + 'th';
      }

      var localize = {
        ordinalNumber: ordinalNumber,

        era: (0, _index2.default)({
          values: eraValues,
          defaultWidth: 'wide'
        }),

        quarter: (0, _index2.default)({
          values: quarterValues,
          defaultWidth: 'wide',
          argumentCallback: function argumentCallback(quarter) {
            return Number(quarter) - 1;
          }
        }),

        month: (0, _index2.default)({
          values: monthValues,
          defaultWidth: 'wide'
        }),

        day: (0, _index2.default)({
          values: dayValues,
          defaultWidth: 'wide'
        }),

        dayPeriod: (0, _index2.default)({
          values: dayPeriodValues,
          defaultWidth: 'wide',
          formattingValues: formattingDayPeriodValues,
          defaulFormattingWidth: 'wide'
        })
      };

      exports.default = localize;
      module.exports = exports['default'];

      /***/
    },
    /* 555 */
    /***/ function(module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = buildLocalizeFn;
      function buildLocalizeFn(args) {
        return function(dirtyIndex, dirtyOptions) {
          var options = dirtyOptions || {};
          var width = options.width ? String(options.width) : args.defaultWidth;
          var context = options.context
            ? String(options.context)
            : 'standalone';

          var valuesArray;
          if (context === 'formatting' && args.formattingValues) {
            valuesArray =
              args.formattingValues[width] ||
              args.formattingValues[args.defaultFormattingWidth];
          } else {
            valuesArray = args.values[width] || args.values[args.defaultWidth];
          }
          var index = args.argumentCallback
            ? args.argumentCallback(dirtyIndex)
            : dirtyIndex;
          return valuesArray[index];
        };
      }
      module.exports = exports['default'];

      /***/
    },
    /* 556 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });

      var _index = __webpack_require__(557);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(558);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
      var parseOrdinalNumberPattern = /\d+/i;

      var matchEraPatterns = {
        narrow: /^(b|a)/i,
        abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
        wide: /^(before christ|before common era|anno domini|common era)/i
      };
      var parseEraPatterns = {
        any: [/^b/i, /^(a|c)/i]
      };

      var matchQuarterPatterns = {
        narrow: /^[1234]/i,
        abbreviated: /^q[1234]/i,
        wide: /^[1234](th|st|nd|rd)? quarter/i
      };
      var parseQuarterPatterns = {
        any: [/1/i, /2/i, /3/i, /4/i]
      };

      var matchMonthPatterns = {
        narrow: /^[jfmasond]/i,
        abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
        wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
      };
      var parseMonthPatterns = {
        narrow: [
          /^j/i,
          /^f/i,
          /^m/i,
          /^a/i,
          /^m/i,
          /^j/i,
          /^j/i,
          /^a/i,
          /^s/i,
          /^o/i,
          /^n/i,
          /^d/i
        ],
        any: [
          /^ja/i,
          /^f/i,
          /^mar/i,
          /^ap/i,
          /^may/i,
          /^jun/i,
          /^jul/i,
          /^au/i,
          /^s/i,
          /^o/i,
          /^n/i,
          /^d/i
        ]
      };

      var matchDayPatterns = {
        narrow: /^[smtwf]/i,
        short: /^(su|mo|tu|we|th|fr|sa)/i,
        abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
        wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
      };
      var parseDayPatterns = {
        narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
        any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
      };

      var matchDayPeriodPatterns = {
        narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
        any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
      };
      var parseDayPeriodPatterns = {
        any: {
          am: /^a/i,
          pm: /^p/i,
          midnight: /^mi/i,
          noon: /^no/i,
          morning: /morning/i,
          afternoon: /afternoon/i,
          evening: /evening/i,
          night: /night/i
        }
      };

      var match = {
        ordinalNumber: (0, _index2.default)({
          matchPattern: matchOrdinalNumberPattern,
          parsePattern: parseOrdinalNumberPattern,
          valueCallback: function valueCallback(value) {
            return parseInt(value, 10);
          }
        }),

        era: (0, _index4.default)({
          matchPatterns: matchEraPatterns,
          defaultMatchWidth: 'wide',
          parsePatterns: parseEraPatterns,
          defaultParseWidth: 'any'
        }),

        quarter: (0, _index4.default)({
          matchPatterns: matchQuarterPatterns,
          defaultMatchWidth: 'wide',
          parsePatterns: parseQuarterPatterns,
          defaultParseWidth: 'any',
          valueCallback: function valueCallback(index) {
            return index + 1;
          }
        }),

        month: (0, _index4.default)({
          matchPatterns: matchMonthPatterns,
          defaultMatchWidth: 'wide',
          parsePatterns: parseMonthPatterns,
          defaultParseWidth: 'any'
        }),

        day: (0, _index4.default)({
          matchPatterns: matchDayPatterns,
          defaultMatchWidth: 'wide',
          parsePatterns: parseDayPatterns,
          defaultParseWidth: 'any'
        }),

        dayPeriod: (0, _index4.default)({
          matchPatterns: matchDayPeriodPatterns,
          defaultMatchWidth: 'any',
          parsePatterns: parseDayPeriodPatterns,
          defaultParseWidth: 'any'
        })
      };

      exports.default = match;
      module.exports = exports['default'];

      /***/
    },
    /* 557 */
    /***/ function(module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = buildMatchPatternFn;
      function buildMatchPatternFn(args) {
        return function(dirtyString, dirtyOptions) {
          var string = String(dirtyString);
          var options = dirtyOptions || {};

          var matchResult = string.match(args.matchPattern);
          if (!matchResult) {
            return null;
          }
          var matchedString = matchResult[0];

          var parseResult = string.match(args.parsePattern);
          if (!parseResult) {
            return null;
          }
          var value = args.valueCallback
            ? args.valueCallback(parseResult[0])
            : parseResult[0];
          value = options.valueCallback ? options.valueCallback(value) : value;

          return {
            value: value,
            rest: string.slice(matchedString.length)
          };
        };
      }
      module.exports = exports['default'];

      /***/
    },
    /* 558 */
    /***/ function(module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = buildMatchFn;
      function buildMatchFn(args) {
        return function(dirtyString, dirtyOptions) {
          var string = String(dirtyString);
          var options = dirtyOptions || {};
          var width = options.width;

          var matchPattern =
            (width && args.matchPatterns[width]) ||
            args.matchPatterns[args.defaultMatchWidth];
          var matchResult = string.match(matchPattern);

          if (!matchResult) {
            return null;
          }
          var matchedString = matchResult[0];

          var parsePatterns =
            (width && args.parsePatterns[width]) ||
            args.parsePatterns[args.defaultParseWidth];

          var value;
          if (
            Object.prototype.toString.call(parsePatterns) === '[object Array]'
          ) {
            value = parsePatterns.findIndex(function(pattern) {
              return pattern.test(string);
            });
          } else {
            value = findKey(parsePatterns, function(pattern) {
              return pattern.test(string);
            });
          }

          value = args.valueCallback ? args.valueCallback(value) : value;
          value = options.valueCallback ? options.valueCallback(value) : value;

          return {
            value: value,
            rest: string.slice(matchedString.length)
          };
        };
      }

      function findKey(object, predicate) {
        for (var key in object) {
          if (object.hasOwnProperty(key) && predicate(object[key])) {
            return key;
          }
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 559 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });

      var _index = __webpack_require__(560);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(561);

      var _index4 = _interopRequireDefault(_index3);

      var _index5 = __webpack_require__(564);

      var _index6 = _interopRequireDefault(_index5);

      var _index7 = __webpack_require__(565);

      var _index8 = _interopRequireDefault(_index7);

      var _index9 = __webpack_require__(568);

      var _index10 = _interopRequireDefault(_index9);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var dayPeriodEnum = {
        am: 'am',
        pm: 'pm',
        midnight: 'midnight',
        noon: 'noon',
        morning: 'morning',
        afternoon: 'afternoon',
        evening: 'evening',
        night: 'night'
      };

      /*
	 * |     | Unit                           |     | Unit                           |
	 * |-----|--------------------------------|-----|--------------------------------|
	 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
	 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
	 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
	 * |  d  | Day of month                   |  D  | Day of year                    |
	 * |  e  | Local day of week              |  E  | Day of week                    |
	 * |  f  |                                |  F* | Day of week in month           |
	 * |  g* | Modified Julian day            |  G  | Era                            |
	 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
	 * |  i! | ISO day of week                |  I! | ISO week of year               |
	 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
	 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
	 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
	 * |  m  | Minute                         |  M  | Month                          |
	 * |  n  |                                |  N  |                                |
	 * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
	 * |  p! | Long localized time            |  P! | Long localized date            |
	 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
	 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
	 * |  s  | Second                         |  S  | Fraction of second             |
	 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
	 * |  u  | Extended year                  |  U* | Cyclic year                    |
	 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
	 * |  w  | Local week of year             |  W* | Week of month                  |
	 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
	 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
	 * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
	 *
	 * Letters marked by * are not implemented but reserved by Unicode standard.
	 *
	 * Letters marked by ! are non-standard, but implemented by date-fns:
	 * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
	 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
	 *   i.e. 7 for Sunday, 1 for Monday, etc.
	 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
	 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
	 *   `R` is supposed to be used in conjunction with `I` and `i`
	 *   for universal ISO week-numbering date, whereas
	 *   `Y` is supposed to be used in conjunction with `w` and `e`
	 *   for week-numbering date specific to the locale.
	 * - `P` is long localized date format
	 * - `p` is long localized time format
	 */

      var formatters = {
        // Era
        G: function G(date, token, localize) {
          var era = date.getUTCFullYear() > 0 ? 1 : 0;
          switch (token) {
            // AD, BC
            case 'G':
            case 'GG':
            case 'GGG':
              return localize.era(era, { width: 'abbreviated' });
            // A, B
            case 'GGGGG':
              return localize.era(era, { width: 'narrow' });
            // Anno Domini, Before Christ
            case 'GGGG':
            default:
              return localize.era(era, { width: 'wide' });
          }
        },

        // Year
        y: function y(date, token, localize, options) {
          // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
          // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
          // |----------|-------|----|-------|-------|-------|
          // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
          // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
          // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
          // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
          // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |

          var signedYear = date.getUTCFullYear();

          // Returns 1 for 1 BC (which is year 0 in JavaScript)
          var year = signedYear > 0 ? signedYear : 1 - signedYear;

          // Two digit year
          if (token === 'yy') {
            var twoDigitYear = year % 100;
            return addLeadingZeros(twoDigitYear, 2);
          }

          // Ordinal number
          if (token === 'yo') {
            return localize.ordinalNumber(year, { unit: 'year' });
          }

          // Padding
          return addLeadingZeros(year, token.length);
        },

        // Local week-numbering year
        Y: function Y(date, token, localize, options) {
          var signedWeekYear = (0, _index10.default)(date, options);
          var weekYear =
            signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;

          // Two digit year
          if (token === 'YY') {
            var twoDigitYear = weekYear % 100;
            return addLeadingZeros(twoDigitYear, 2);
          }

          // Ordinal number
          if (token === 'Yo') {
            return localize.ordinalNumber(weekYear, { unit: 'year' });
          }

          // Padding
          return addLeadingZeros(weekYear, token.length);
        },

        // ISO week-numbering year
        R: function R(date, token, localize, options) {
          var isoWeekYear = (0, _index6.default)(date, options);

          // Padding
          return addLeadingZeros(isoWeekYear, token.length);
        },

        // Extended year. This is a single number designating the year of this calendar system.
        // The main difference between `y` and `u` localizers are B.C. years:
        // | Year | `y` | `u` |
        // |------|-----|-----|
        // | AC 1 |   1 |   1 |
        // | BC 1 |   1 |   0 |
        // | BC 2 |   2 |  -1 |
        // Also `yy` always returns the last two digits of a year,
        // while `uu` pads single digit years to 2 characters and returns other years unchanged.
        u: function u(date, token, localize, options) {
          var year = date.getUTCFullYear();
          return addLeadingZeros(year, token.length);
        },

        // Quarter
        Q: function Q(date, token, localize, options) {
          var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
          switch (token) {
            // 1, 2, 3, 4
            case 'Q':
              return String(quarter);
            // 01, 02, 03, 04
            case 'QQ':
              return addLeadingZeros(quarter, 2);
            // 1st, 2nd, 3rd, 4th
            case 'Qo':
              return localize.ordinalNumber(quarter, { unit: 'quarter' });
            // Q1, Q2, Q3, Q4
            case 'QQQ':
              return localize.quarter(quarter, {
                width: 'abbreviated',
                context: 'formatting'
              });
            // 1, 2, 3, 4 (narrow quarter; could be not numerical)
            case 'QQQQQ':
              return localize.quarter(quarter, {
                width: 'narrow',
                context: 'formatting'
              });
            // 1st quarter, 2nd quarter, ...
            case 'QQQQ':
            default:
              return localize.quarter(quarter, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },

        // Stand-alone quarter
        q: function q(date, token, localize, options) {
          var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
          switch (token) {
            // 1, 2, 3, 4
            case 'q':
              return String(quarter);
            // 01, 02, 03, 04
            case 'qq':
              return addLeadingZeros(quarter, 2);
            // 1st, 2nd, 3rd, 4th
            case 'qo':
              return localize.ordinalNumber(quarter, { unit: 'quarter' });
            // Q1, Q2, Q3, Q4
            case 'qqq':
              return localize.quarter(quarter, {
                width: 'abbreviated',
                context: 'standalone'
              });
            // 1, 2, 3, 4 (narrow quarter; could be not numerical)
            case 'qqqqq':
              return localize.quarter(quarter, {
                width: 'narrow',
                context: 'standalone'
              });
            // 1st quarter, 2nd quarter, ...
            case 'qqqq':
            default:
              return localize.quarter(quarter, {
                width: 'wide',
                context: 'standalone'
              });
          }
        },

        // Month
        M: function M(date, token, localize, options) {
          var month = date.getUTCMonth();
          switch (token) {
            // 1, 2, ..., 12
            case 'M':
              return String(month + 1);
            // 01, 02, ..., 12
            case 'MM':
              return addLeadingZeros(month + 1, 2);
            // 1st, 2nd, ..., 12th
            case 'Mo':
              return localize.ordinalNumber(month + 1, { unit: 'month' });
            // Jan, Feb, ..., Dec
            case 'MMM':
              return localize.month(month, {
                width: 'abbreviated',
                context: 'formatting'
              });
            // J, F, ..., D
            case 'MMMMM':
              return localize.month(month, {
                width: 'narrow',
                context: 'formatting'
              });
            // January, February, ..., December
            case 'MMMM':
            default:
              return localize.month(month, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },

        // Stand-alone month
        L: function L(date, token, localize, options) {
          var month = date.getUTCMonth();
          switch (token) {
            // 1, 2, ..., 12
            case 'L':
              return String(month + 1);
            // 01, 02, ..., 12
            case 'LL':
              return addLeadingZeros(month + 1, 2);
            // 1st, 2nd, ..., 12th
            case 'Lo':
              return localize.ordinalNumber(month + 1, { unit: 'month' });
            // Jan, Feb, ..., Dec
            case 'LLL':
              return localize.month(month, {
                width: 'abbreviated',
                context: 'standalone'
              });
            // J, F, ..., D
            case 'LLLLL':
              return localize.month(month, {
                width: 'narrow',
                context: 'standalone'
              });
            // January, February, ..., December
            case 'LLLL':
            default:
              return localize.month(month, {
                width: 'wide',
                context: 'standalone'
              });
          }
        },

        // Local week of year
        w: function w(date, token, localize, options) {
          var week = (0, _index8.default)(date, options);

          if (token === 'wo') {
            return localize.ordinalNumber(week, { unit: 'week' });
          }

          return addLeadingZeros(week, token.length);
        },

        // ISO week of year
        I: function I(date, token, localize, options) {
          var isoWeek = (0, _index4.default)(date, options);

          if (token === 'Io') {
            return localize.ordinalNumber(isoWeek, { unit: 'week' });
          }

          return addLeadingZeros(isoWeek, token.length);
        },

        // Day of the month
        d: function d(date, token, localize, options) {
          var dayOfMonth = date.getUTCDate();

          if (token === 'do') {
            return localize.ordinalNumber(dayOfMonth, { unit: 'date' });
          }

          return addLeadingZeros(dayOfMonth, token.length);
        },

        // Day of year
        D: function D(date, token, localize, options) {
          var dayOfYear = (0, _index2.default)(date, options);

          if (token === 'Do') {
            return localize.ordinalNumber(dayOfYear, { unit: 'dayOfYear' });
          }

          return addLeadingZeros(dayOfYear, token.length);
        },

        // Day of week
        E: function E(date, token, localize, options) {
          var dayOfWeek = date.getUTCDay();
          switch (token) {
            // Tue
            case 'E':
            case 'EE':
            case 'EEE':
              return localize.day(dayOfWeek, {
                width: 'abbreviated',
                context: 'formatting'
              });
            // T
            case 'EEEEE':
              return localize.day(dayOfWeek, {
                width: 'narrow',
                context: 'formatting'
              });
            // Tu
            case 'EEEEEE':
              return localize.day(dayOfWeek, {
                width: 'short',
                context: 'formatting'
              });
            // Tuesday
            case 'EEEE':
            default:
              return localize.day(dayOfWeek, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },

        // Local day of week
        e: function e(date, token, localize, options) {
          var dayOfWeek = date.getUTCDay();
          var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
          switch (token) {
            // Numerical value (Nth day of week with current locale or weekStartsOn)
            case 'e':
              return String(localDayOfWeek);
            // Padded numerical value
            case 'ee':
              return addLeadingZeros(localDayOfWeek, 2);
            // 1st, 2nd, ..., 7th
            case 'eo':
              return localize.ordinalNumber(localDayOfWeek, { unit: 'day' });
            case 'eee':
              return localize.day(dayOfWeek, {
                width: 'abbreviated',
                context: 'formatting'
              });
            // T
            case 'eeeee':
              return localize.day(dayOfWeek, {
                width: 'narrow',
                context: 'formatting'
              });
            // Tu
            case 'eeeeee':
              return localize.day(dayOfWeek, {
                width: 'short',
                context: 'formatting'
              });
            // Tuesday
            case 'eeee':
            default:
              return localize.day(dayOfWeek, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },

        // Stand-alone local day of week
        c: function c(date, token, localize, options) {
          var dayOfWeek = date.getUTCDay();
          var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
          switch (token) {
            // Numerical value (same as in `e`)
            case 'c':
              return String(localDayOfWeek);
            // Padded numberical value
            case 'cc':
              return addLeadingZeros(localDayOfWeek, token.length);
            // 1st, 2nd, ..., 7th
            case 'co':
              return localize.ordinalNumber(localDayOfWeek, { unit: 'day' });
            case 'ccc':
              return localize.day(dayOfWeek, {
                width: 'abbreviated',
                context: 'standalone'
              });
            // T
            case 'ccccc':
              return localize.day(dayOfWeek, {
                width: 'narrow',
                context: 'standalone'
              });
            // Tu
            case 'cccccc':
              return localize.day(dayOfWeek, {
                width: 'short',
                context: 'standalone'
              });
            // Tuesday
            case 'cccc':
            default:
              return localize.day(dayOfWeek, {
                width: 'wide',
                context: 'standalone'
              });
          }
        },

        // ISO day of week
        i: function i(date, token, localize, options) {
          var dayOfWeek = date.getUTCDay();
          var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
          switch (token) {
            // 2
            case 'i':
              return String(isoDayOfWeek);
            // 02
            case 'ii':
              return addLeadingZeros(isoDayOfWeek, token.length);
            // 2nd
            case 'io':
              return localize.ordinalNumber(isoDayOfWeek, { unit: 'day' });
            // Tue
            case 'iii':
              return localize.day(dayOfWeek, {
                width: 'abbreviated',
                context: 'formatting'
              });
            // T
            case 'iiiii':
              return localize.day(dayOfWeek, {
                width: 'narrow',
                context: 'formatting'
              });
            // Tu
            case 'iiiiii':
              return localize.day(dayOfWeek, {
                width: 'short',
                context: 'formatting'
              });
            // Tuesday
            case 'iiii':
            default:
              return localize.day(dayOfWeek, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },

        // AM or PM
        a: function a(date, token, localize) {
          var hours = date.getUTCHours();
          var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';

          switch (token) {
            case 'a':
            case 'aa':
            case 'aaa':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'abbreviated',
                context: 'formatting'
              });
            case 'aaaaa':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'narrow',
                context: 'formatting'
              });
            case 'aaaa':
            default:
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },

        // AM, PM, midnight, noon
        b: function b(date, token, localize) {
          var hours = date.getUTCHours();
          var dayPeriodEnumValue;
          if (hours === 12) {
            dayPeriodEnumValue = dayPeriodEnum.noon;
          } else if (hours === 0) {
            dayPeriodEnumValue = dayPeriodEnum.midnight;
          } else {
            dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
          }

          switch (token) {
            case 'b':
            case 'bb':
            case 'bbb':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'abbreviated',
                context: 'formatting'
              });
            case 'bbbbb':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'narrow',
                context: 'formatting'
              });
            case 'bbbb':
            default:
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },

        // in the morning, in the afternoon, in the evening, at night
        B: function B(date, token, localize) {
          var hours = date.getUTCHours();
          var dayPeriodEnumValue;
          if (hours >= 17) {
            dayPeriodEnumValue = dayPeriodEnum.evening;
          } else if (hours >= 12) {
            dayPeriodEnumValue = dayPeriodEnum.afternoon;
          } else if (hours >= 4) {
            dayPeriodEnumValue = dayPeriodEnum.morning;
          } else {
            dayPeriodEnumValue = dayPeriodEnum.night;
          }

          switch (token) {
            case 'B':
            case 'BB':
            case 'BBB':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'abbreviated',
                context: 'formatting'
              });
            case 'BBBBB':
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'narrow',
                context: 'formatting'
              });
            case 'BBBB':
            default:
              return localize.dayPeriod(dayPeriodEnumValue, {
                width: 'wide',
                context: 'formatting'
              });
          }
        },

        // Hour [1-12]
        h: function h(date, token, localize, options) {
          var hours = date.getUTCHours() % 12;

          if (hours === 0) {
            hours = 12;
          }

          if (token === 'ho') {
            return localize.ordinalNumber(hours, { unit: 'hour' });
          }

          return addLeadingZeros(hours, token.length);
        },

        // Hour [0-23]
        H: function H(date, token, localize, options) {
          var hours = date.getUTCHours();

          if (token === 'Ho') {
            return localize.ordinalNumber(hours, { unit: 'hour' });
          }

          return addLeadingZeros(hours, token.length);
        },

        // Hour [0-11]
        K: function K(date, token, localize, options) {
          var hours = date.getUTCHours() % 12;

          if (token === 'Ko') {
            return localize.ordinalNumber(hours, { unit: 'hour' });
          }

          return addLeadingZeros(hours, token.length);
        },

        // Hour [1-24]
        k: function k(date, token, localize, options) {
          var hours = date.getUTCHours();

          if (hours === 0) {
            hours = 24;
          }

          if (token === 'ko') {
            return localize.ordinalNumber(hours, { unit: 'hour' });
          }

          return addLeadingZeros(hours, token.length);
        },

        // Minute
        m: function m(date, token, localize, options) {
          var minutes = date.getUTCMinutes();

          if (token === 'mo') {
            return localize.ordinalNumber(minutes, { unit: 'minute' });
          }

          return addLeadingZeros(minutes, token.length);
        },

        // Second
        s: function s(date, token, localize, options) {
          var seconds = date.getUTCSeconds();

          if (token === 'so') {
            return localize.ordinalNumber(seconds, { unit: 'second' });
          }

          return addLeadingZeros(seconds, token.length);
        },

        // Fraction of second
        S: function S(date, token, localize, options) {
          var numberOfDigits = token.length;
          var milliseconds = date.getUTCMilliseconds();
          var fractionalSeconds = Math.floor(
            milliseconds * Math.pow(10, numberOfDigits - 3)
          );
          return addLeadingZeros(fractionalSeconds, numberOfDigits);
        },

        // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
        X: function X(date, token, localize, options) {
          var originalDate = options._originalDate || date;
          var timezoneOffset = originalDate.getTimezoneOffset();

          if (timezoneOffset === 0) {
            return 'Z';
          }

          switch (token) {
            // Hours and optional minutes
            case 'X':
              return formatTimezoneWithOptionalMinutes(timezoneOffset);

            // Hours, minutes and optional seconds without `:` delimeter
            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
            // so this token always has the same output as `XX`
            case 'XXXX':
            case 'XX':
              // Hours and minutes without `:` delimeter
              return formatTimezone(timezoneOffset);

            // Hours, minutes and optional seconds with `:` delimeter
            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
            // so this token always has the same output as `XXX`
            case 'XXXXX':
            case 'XXX': // Hours and minutes with `:` delimeter
            default:
              return formatTimezone(timezoneOffset, ':');
          }
        },

        // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
        x: function x(date, token, localize, options) {
          var originalDate = options._originalDate || date;
          var timezoneOffset = originalDate.getTimezoneOffset();

          switch (token) {
            // Hours and optional minutes
            case 'x':
              return formatTimezoneWithOptionalMinutes(timezoneOffset);

            // Hours, minutes and optional seconds without `:` delimeter
            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
            // so this token always has the same output as `xx`
            case 'xxxx':
            case 'xx':
              // Hours and minutes without `:` delimeter
              return formatTimezone(timezoneOffset);

            // Hours, minutes and optional seconds with `:` delimeter
            // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
            // so this token always has the same output as `xxx`
            case 'xxxxx':
            case 'xxx': // Hours and minutes with `:` delimeter
            default:
              return formatTimezone(timezoneOffset, ':');
          }
        },

        // Timezone (GMT)
        O: function O(date, token, localize, options) {
          var originalDate = options._originalDate || date;
          var timezoneOffset = originalDate.getTimezoneOffset();

          switch (token) {
            // Short
            case 'O':
            case 'OO':
            case 'OOO':
              return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
            // Long
            case 'OOOO':
            default:
              return 'GMT' + formatTimezone(timezoneOffset, ':');
          }
        },

        // Timezone (specific non-location)
        z: function z(date, token, localize, options) {
          var originalDate = options._originalDate || date;
          var timezoneOffset = originalDate.getTimezoneOffset();

          switch (token) {
            // Short
            case 'z':
            case 'zz':
            case 'zzz':
              return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
            // Long
            case 'zzzz':
            default:
              return 'GMT' + formatTimezone(timezoneOffset, ':');
          }
        },

        // Seconds timestamp
        t: function t(date, token, localize, options) {
          var originalDate = options._originalDate || date;
          var timestamp = Math.floor(originalDate.getTime() / 1000);
          return addLeadingZeros(timestamp, token.length);
        },

        // Milliseconds timestamp
        T: function T(date, token, localize, options) {
          var originalDate = options._originalDate || date;
          var timestamp = originalDate.getTime();
          return addLeadingZeros(timestamp, token.length);
        }
      };

      function addLeadingZeros(number, targetLength) {
        var sign = number < 0 ? '-' : '';
        var output = Math.abs(number).toString();
        while (output.length < targetLength) {
          output = '0' + output;
        }
        return sign + output;
      }

      function formatTimezone(offset, dirtyDelimeter) {
        var delimeter = dirtyDelimeter || '';
        var sign = offset > 0 ? '-' : '+';
        var absOffset = Math.abs(offset);
        var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
        var minutes = addLeadingZeros(absOffset % 60, 2);
        return sign + hours + delimeter + minutes;
      }

      function formatTimezoneWithOptionalMinutes(offset, dirtyDelimeter) {
        if (offset % 60 === 0) {
          var sign = offset > 0 ? '-' : '+';
          return sign + addLeadingZeros(Math.abs(offset) / 60, 2);
        }
        return formatTimezone(offset, dirtyDelimeter);
      }

      function formatTimezoneShort(offset, dirtyDelimeter) {
        var sign = offset > 0 ? '-' : '+';
        var absOffset = Math.abs(offset);
        var hours = Math.floor(absOffset / 60);
        var minutes = absOffset % 60;
        if (minutes === 0) {
          return sign + String(hours);
        }
        var delimeter = dirtyDelimeter || '';
        return sign + String(hours) + delimeter + addLeadingZeros(minutes, 2);
      }

      exports.default = formatters;
      module.exports = exports['default'];

      /***/
    },
    /* 560 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = getUTCDayOfYear;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var MILLISECONDS_IN_DAY = 86400000;

      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376
      function getUTCDayOfYear(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var timestamp = date.getTime();
        date.setUTCMonth(0, 1);
        date.setUTCHours(0, 0, 0, 0);
        var startOfYearTimestamp = date.getTime();
        var difference = timestamp - startOfYearTimestamp;
        return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 561 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = getUTCISOWeek;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(562);

      var _index4 = _interopRequireDefault(_index3);

      var _index5 = __webpack_require__(563);

      var _index6 = _interopRequireDefault(_index5);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var MILLISECONDS_IN_WEEK = 604800000;

      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376
      function getUTCISOWeek(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var diff =
          (0, _index4.default)(date, dirtyOptions).getTime() -
          (0, _index6.default)(date, dirtyOptions).getTime();

        // Round the number of days to the nearest integer
        // because the number of milliseconds in a week is not constant
        // (e.g. it's different in the week of the daylight saving time clock shift)
        return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 562 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = startOfUTCISOWeek;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376
      function startOfUTCISOWeek(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var weekStartsOn = 1;

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var day = date.getUTCDay();
        var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;

        date.setUTCDate(date.getUTCDate() - diff);
        date.setUTCHours(0, 0, 0, 0);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 563 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = startOfUTCISOWeekYear;

      var _index = __webpack_require__(564);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(562);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376
      function startOfUTCISOWeekYear(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var year = (0, _index2.default)(dirtyDate, dirtyOptions);
        var fourthOfJanuary = new Date(0);
        fourthOfJanuary.setUTCFullYear(year, 0, 4);
        fourthOfJanuary.setUTCHours(0, 0, 0, 0);
        var date = (0, _index4.default)(fourthOfJanuary, dirtyOptions);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 564 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = getUTCISOWeekYear;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(562);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376
      function getUTCISOWeekYear(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var year = date.getUTCFullYear();

        var fourthOfJanuaryOfNextYear = new Date(0);
        fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
        fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
        var startOfNextYear = (0, _index4.default)(
          fourthOfJanuaryOfNextYear,
          dirtyOptions
        );

        var fourthOfJanuaryOfThisYear = new Date(0);
        fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
        fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
        var startOfThisYear = (0, _index4.default)(
          fourthOfJanuaryOfThisYear,
          dirtyOptions
        );

        if (date.getTime() >= startOfNextYear.getTime()) {
          return year + 1;
        } else if (date.getTime() >= startOfThisYear.getTime()) {
          return year;
        } else {
          return year - 1;
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 565 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = getUTCWeek;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(566);

      var _index4 = _interopRequireDefault(_index3);

      var _index5 = __webpack_require__(567);

      var _index6 = _interopRequireDefault(_index5);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var MILLISECONDS_IN_WEEK = 604800000;

      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376
      function getUTCWeek(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var diff =
          (0, _index4.default)(date, dirtyOptions).getTime() -
          (0, _index6.default)(date, dirtyOptions).getTime();

        // Round the number of days to the nearest integer
        // because the number of milliseconds in a week is not constant
        // (e.g. it's different in the week of the daylight saving time clock shift)
        return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 566 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = startOfUTCWeek;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376
      function startOfUTCWeek(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeWeekStartsOn =
          locale && locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn =
          localeWeekStartsOn == null
            ? 0
            : (0, _index2.default)(localeWeekStartsOn);
        var weekStartsOn =
          options.weekStartsOn == null
            ? defaultWeekStartsOn
            : (0, _index2.default)(options.weekStartsOn);

        // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError(
            'weekStartsOn must be between 0 and 6 inclusively'
          );
        }

        var date = (0, _index4.default)(dirtyDate, options);
        var day = date.getUTCDay();
        var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;

        date.setUTCDate(date.getUTCDate() - diff);
        date.setUTCHours(0, 0, 0, 0);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 567 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = startOfUTCWeekYear;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(568);

      var _index4 = _interopRequireDefault(_index3);

      var _index5 = __webpack_require__(566);

      var _index6 = _interopRequireDefault(_index5);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376
      function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeFirstWeekContainsDate =
          locale && locale.options && locale.options.firstWeekContainsDate;
        var defaultFirstWeekContainsDate =
          localeFirstWeekContainsDate == null
            ? 1
            : (0, _index2.default)(localeFirstWeekContainsDate);
        var firstWeekContainsDate =
          options.firstWeekContainsDate == null
            ? defaultFirstWeekContainsDate
            : (0, _index2.default)(options.firstWeekContainsDate);

        var year = (0, _index4.default)(dirtyDate, dirtyOptions);
        var firstWeek = new Date(0);
        firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
        firstWeek.setUTCHours(0, 0, 0, 0);
        var date = (0, _index6.default)(firstWeek, dirtyOptions);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 568 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = getUTCWeekYear;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      var _index5 = __webpack_require__(566);

      var _index6 = _interopRequireDefault(_index5);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376
      function getUTCWeekYear(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index4.default)(dirtyDate, dirtyOptions);
        var year = date.getUTCFullYear();

        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeFirstWeekContainsDate =
          locale && locale.options && locale.options.firstWeekContainsDate;
        var defaultFirstWeekContainsDate =
          localeFirstWeekContainsDate == null
            ? 1
            : (0, _index2.default)(localeFirstWeekContainsDate);
        var firstWeekContainsDate =
          options.firstWeekContainsDate == null
            ? defaultFirstWeekContainsDate
            : (0, _index2.default)(options.firstWeekContainsDate);

        // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
        if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
          throw new RangeError(
            'firstWeekContainsDate must be between 1 and 7 inclusively'
          );
        }

        var firstWeekOfNextYear = new Date(0);
        firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
        firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
        var startOfNextYear = (0, _index6.default)(
          firstWeekOfNextYear,
          dirtyOptions
        );

        var firstWeekOfThisYear = new Date(0);
        firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
        firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
        var startOfThisYear = (0, _index6.default)(
          firstWeekOfThisYear,
          dirtyOptions
        );

        if (date.getTime() >= startOfNextYear.getTime()) {
          return year + 1;
        } else if (date.getTime() >= startOfThisYear.getTime()) {
          return year;
        } else {
          return year - 1;
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 569 */
    /***/ function(module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      function dateLongFormatter(pattern, formatLong, options) {
        switch (pattern) {
          case 'P':
            return formatLong.date({ width: 'short' });
          case 'PP':
            return formatLong.date({ width: 'medium' });
          case 'PPP':
            return formatLong.date({ width: 'long' });
          case 'PPPP':
          default:
            return formatLong.date({ width: 'full' });
        }
      }

      function timeLongFormatter(pattern, formatLong, options) {
        switch (pattern) {
          case 'p':
            return formatLong.time({ width: 'short' });
          case 'pp':
            return formatLong.time({ width: 'medium' });
          case 'ppp':
            return formatLong.time({ width: 'long' });
          case 'pppp':
          default:
            return formatLong.time({ width: 'full' });
        }
      }

      function dateTimeLongFormatter(pattern, formatLong, options) {
        var matchResult = pattern.match(/(P+)(p+)?/);
        var datePattern = matchResult[1];
        var timePattern = matchResult[2];

        if (!timePattern) {
          return dateLongFormatter(pattern, formatLong, options);
        }

        var dateTimeFormat;

        switch (datePattern) {
          case 'P':
            dateTimeFormat = formatLong.dateTime({ width: 'short' });
            break;
          case 'PP':
            dateTimeFormat = formatLong.dateTime({ width: 'medium' });
            break;
          case 'PPP':
            dateTimeFormat = formatLong.dateTime({ width: 'long' });
            break;
          case 'PPPP':
          default:
            dateTimeFormat = formatLong.dateTime({ width: 'full' });
            break;
        }

        return dateTimeFormat
          .replace(
            '{{date}}',
            dateLongFormatter(datePattern, formatLong, options)
          )
          .replace(
            '{{time}}',
            timeLongFormatter(timePattern, formatLong, options)
          );
      }

      var longFormatters = {
        p: timeLongFormatter,
        P: dateTimeLongFormatter
      };

      exports.default = longFormatters;
      module.exports = exports['default'];

      /***/
    },
    /* 570 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = subMilliseconds;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(571);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name subMilliseconds
       * @category Millisecond Helpers
       * @summary Subtract the specified number of milliseconds from the given date.
       *
       * @description
       * Subtract the specified number of milliseconds from the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} amount - the amount of milliseconds to be subtracted
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the milliseconds subtracted
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
       * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
       * //=> Thu Jul 10 2014 12:45:29.250
       */
      function subMilliseconds(dirtyDate, dirtyAmount, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var amount = (0, _index2.default)(dirtyAmount);
        return (0, _index4.default)(dirtyDate, -amount, dirtyOptions);
      }
      module.exports = exports['default'];

      /***/
    },
    /* 571 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = addMilliseconds;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name addMilliseconds
       * @category Millisecond Helpers
       * @summary Add the specified number of milliseconds to the given date.
       *
       * @description
       * Add the specified number of milliseconds to the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} amount - the amount of milliseconds to be added
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the milliseconds added
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
       * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
       * //=> Thu Jul 10 2014 12:45:30.750
       */
      function addMilliseconds(dirtyDate, dirtyAmount, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var timestamp = (0, _index4.default)(dirtyDate, dirtyOptions).getTime();
        var amount = (0, _index2.default)(dirtyAmount);
        return new Date(timestamp + amount);
      }
      module.exports = exports['default'];

      /***/
    },
    /* 572 */
    /***/ function(module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.isProtectedToken = isProtectedToken;
      exports.throwProtectedError = throwProtectedError;
      var protectedTokens = (exports.protectedTokens = [
        'D',
        'DD',
        'YY',
        'YYYY'
      ]);

      function isProtectedToken(token) {
        return protectedTokens.indexOf(token) !== -1;
      }

      function throwProtectedError(token) {
        throw new RangeError(
          '`options.awareOfUnicodeTokens` must be set to `true` to use `' +
            token +
            '` token; see: https://git.io/fxCyr'
        );
      }

      /***/
    },
    /* 573 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = addMinutes;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(571);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var MILLISECONDS_IN_MINUTE = 60000;

      /**
       * @name addMinutes
       * @category Minute Helpers
       * @summary Add the specified number of minutes to the given date.
       *
       * @description
       * Add the specified number of minutes to the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} amount - the amount of minutes to be added
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the minutes added
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Add 30 minutes to 10 July 2014 12:00:00:
       * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)
       * //=> Thu Jul 10 2014 12:30:00
       */
      function addMinutes(dirtyDate, dirtyAmount, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var amount = (0, _index2.default)(dirtyAmount);
        return (0, _index4.default)(
          dirtyDate,
          amount * MILLISECONDS_IN_MINUTE,
          dirtyOptions
        );
      }
      module.exports = exports['default'];

      /***/
    },
    /* 574 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = addHours;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(571);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var MILLISECONDS_IN_HOUR = 3600000;

      /**
       * @name addHours
       * @category Hour Helpers
       * @summary Add the specified number of hours to the given date.
       *
       * @description
       * Add the specified number of hours to the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} amount - the amount of hours to be added
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the hours added
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Add 2 hours to 10 July 2014 23:00:00:
       * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)
       * //=> Fri Jul 11 2014 01:00:00
       */
      function addHours(dirtyDate, dirtyAmount, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var amount = (0, _index2.default)(dirtyAmount);
        return (0, _index4.default)(
          dirtyDate,
          amount * MILLISECONDS_IN_HOUR,
          dirtyOptions
        );
      }
      module.exports = exports['default'];

      /***/
    },
    /* 575 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = addDays;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name addDays
       * @category Day Helpers
       * @summary Add the specified number of days to the given date.
       *
       * @description
       * Add the specified number of days to the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} amount - the amount of days to be added
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the days added
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Add 10 days to 1 September 2014:
       * var result = addDays(new Date(2014, 8, 1), 10)
       * //=> Thu Sep 11 2014 00:00:00
       */
      function addDays(dirtyDate, dirtyAmount, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index4.default)(dirtyDate, dirtyOptions);
        var amount = (0, _index2.default)(dirtyAmount);
        date.setDate(date.getDate() + amount);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 576 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = addWeeks;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(575);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name addWeeks
       * @category Week Helpers
       * @summary Add the specified number of weeks to the given date.
       *
       * @description
       * Add the specified number of week to the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} amount - the amount of weeks to be added
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the weeks added
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Add 4 weeks to 1 September 2014:
       * var result = addWeeks(new Date(2014, 8, 1), 4)
       * //=> Mon Sep 29 2014 00:00:00
       */
      function addWeeks(dirtyDate, dirtyAmount, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var amount = (0, _index2.default)(dirtyAmount);
        var days = amount * 7;
        return (0, _index4.default)(dirtyDate, days, dirtyOptions);
      }
      module.exports = exports['default'];

      /***/
    },
    /* 577 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = addMonths;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      var _index5 = __webpack_require__(578);

      var _index6 = _interopRequireDefault(_index5);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name addMonths
       * @category Month Helpers
       * @summary Add the specified number of months to the given date.
       *
       * @description
       * Add the specified number of months to the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} amount - the amount of months to be added
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the months added
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Add 5 months to 1 September 2014:
       * var result = addMonths(new Date(2014, 8, 1), 5)
       * //=> Sun Feb 01 2015 00:00:00
       */
      function addMonths(dirtyDate, dirtyAmount, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index4.default)(dirtyDate, dirtyOptions);
        var amount = (0, _index2.default)(dirtyAmount);
        var desiredMonth = date.getMonth() + amount;
        var dateWithDesiredMonth = new Date(0);
        dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1);
        dateWithDesiredMonth.setHours(0, 0, 0, 0);
        var daysInMonth = (0, _index6.default)(
          dateWithDesiredMonth,
          dirtyOptions
        );
        // Set the last day of the new month
        // if the original date was the last day of the longer month
        date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()));
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 578 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = getDaysInMonth;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name getDaysInMonth
       * @category Month Helpers
       * @summary Get the number of days in a month of the given date.
       *
       * @description
       * Get the number of days in a month of the given date.
       *
       * @param {Date|String|Number} date - the given date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Number} the number of days in a month
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // How many days are in February 2000?
       * var result = getDaysInMonth(new Date(2000, 1))
       * //=> 29
       */
      function getDaysInMonth(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var year = date.getFullYear();
        var monthIndex = date.getMonth();
        var lastDayOfMonth = new Date(0);
        lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);
        lastDayOfMonth.setHours(0, 0, 0, 0);
        return lastDayOfMonth.getDate();
      }
      module.exports = exports['default'];

      /***/
    },
    /* 579 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = addYears;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(577);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name addYears
       * @category Year Helpers
       * @summary Add the specified number of years to the given date.
       *
       * @description
       * Add the specified number of years to the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} amount - the amount of years to be added
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the years added
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Add 5 years to 1 September 2014:
       * var result = addYears(new Date(2014, 8, 1), 5)
       * //=> Sun Sep 01 2019 00:00:00
       */
      function addYears(dirtyDate, dirtyAmount, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var amount = (0, _index2.default)(dirtyAmount);
        return (0, _index4.default)(dirtyDate, amount * 12, dirtyOptions);
      }
      module.exports = exports['default'];

      /***/
    },
    /* 580 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = subMinutes;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(573);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name subMinutes
       * @category Minute Helpers
       * @summary Subtract the specified number of minutes from the given date.
       *
       * @description
       * Subtract the specified number of minutes from the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} amount - the amount of minutes to be subtracted
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the mintues subtracted
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Subtract 30 minutes from 10 July 2014 12:00:00:
       * var result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)
       * //=> Thu Jul 10 2014 11:30:00
       */
      function subMinutes(dirtyDate, dirtyAmount, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var amount = (0, _index2.default)(dirtyAmount);
        return (0, _index4.default)(dirtyDate, -amount, dirtyOptions);
      }
      module.exports = exports['default'];

      /***/
    },
    /* 581 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = subHours;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(574);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name subHours
       * @category Hour Helpers
       * @summary Subtract the specified number of hours from the given date.
       *
       * @description
       * Subtract the specified number of hours from the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} amount - the amount of hours to be subtracted
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the hours subtracted
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Subtract 2 hours from 11 July 2014 01:00:00:
       * var result = subHours(new Date(2014, 6, 11, 1, 0), 2)
       * //=> Thu Jul 10 2014 23:00:00
       */
      function subHours(dirtyDate, dirtyAmount, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var amount = (0, _index2.default)(dirtyAmount);
        return (0, _index4.default)(dirtyDate, -amount, dirtyOptions);
      }
      module.exports = exports['default'];

      /***/
    },
    /* 582 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = subDays;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(575);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name subDays
       * @category Day Helpers
       * @summary Subtract the specified number of days from the given date.
       *
       * @description
       * Subtract the specified number of days from the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} amount - the amount of days to be subtracted
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the days subtracted
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Subtract 10 days from 1 September 2014:
       * var result = subDays(new Date(2014, 8, 1), 10)
       * //=> Fri Aug 22 2014 00:00:00
       */
      function subDays(dirtyDate, dirtyAmount, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var amount = (0, _index2.default)(dirtyAmount);
        return (0, _index4.default)(dirtyDate, -amount, dirtyOptions);
      }
      module.exports = exports['default'];

      /***/
    },
    /* 583 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = subWeeks;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(576);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name subWeeks
       * @category Week Helpers
       * @summary Subtract the specified number of weeks from the given date.
       *
       * @description
       * Subtract the specified number of weeks from the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} amount - the amount of weeks to be subtracted
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the weeks subtracted
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Subtract 4 weeks from 1 September 2014:
       * var result = subWeeks(new Date(2014, 8, 1), 4)
       * //=> Mon Aug 04 2014 00:00:00
       */
      function subWeeks(dirtyDate, dirtyAmount, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var amount = (0, _index2.default)(dirtyAmount);
        return (0, _index4.default)(dirtyDate, -amount, dirtyOptions);
      }
      module.exports = exports['default'];

      /***/
    },
    /* 584 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = subMonths;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(577);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name subMonths
       * @category Month Helpers
       * @summary Subtract the specified number of months from the given date.
       *
       * @description
       * Subtract the specified number of months from the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} amount - the amount of months to be subtracted
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the months subtracted
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Subtract 5 months from 1 February 2015:
       * var result = subMonths(new Date(2015, 1, 1), 5)
       * //=> Mon Sep 01 2014 00:00:00
       */
      function subMonths(dirtyDate, dirtyAmount, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var amount = (0, _index2.default)(dirtyAmount);
        return (0, _index4.default)(dirtyDate, -amount, dirtyOptions);
      }
      module.exports = exports['default'];

      /***/
    },
    /* 585 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = subYears;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(579);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name subYears
       * @category Year Helpers
       * @summary Subtract the specified number of years from the given date.
       *
       * @description
       * Subtract the specified number of years from the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} amount - the amount of years to be subtracted
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the years subtracted
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Subtract 5 years from 1 September 2014:
       * var result = subYears(new Date(2014, 8, 1), 5)
       * //=> Tue Sep 01 2009 00:00:00
       */
      function subYears(dirtyDate, dirtyAmount, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var amount = (0, _index2.default)(dirtyAmount);
        return (0, _index4.default)(dirtyDate, -amount, dirtyOptions);
      }
      module.exports = exports['default'];

      /***/
    },
    /* 586 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = getSeconds;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name getSeconds
       * @category Second Helpers
       * @summary Get the seconds of the given date.
       *
       * @description
       * Get the seconds of the given date.
       *
       * @param {Date|String|Number} date - the given date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Number} the seconds
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Get the seconds of 29 February 2012 11:45:05.123:
       * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))
       * //=> 5
       */
      function getSeconds(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var seconds = date.getSeconds();
        return seconds;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 587 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = getMinutes;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name getMinutes
       * @category Minute Helpers
       * @summary Get the minutes of the given date.
       *
       * @description
       * Get the minutes of the given date.
       *
       * @param {Date|String|Number} date - the given date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Number} the minutes
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Get the minutes of 29 February 2012 11:45:05:
       * var result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))
       * //=> 45
       */
      function getMinutes(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var minutes = date.getMinutes();
        return minutes;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 588 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = getHours;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name getHours
       * @category Hour Helpers
       * @summary Get the hours of the given date.
       *
       * @description
       * Get the hours of the given date.
       *
       * @param {Date|String|Number} date - the given date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Number} the hours
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Get the hours of 29 February 2012 11:45:00:
       * var result = getHours(new Date(2012, 1, 29, 11, 45))
       * //=> 11
       */
      function getHours(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var hours = date.getHours();
        return hours;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 589 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = getDay;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name getDay
       * @category Weekday Helpers
       * @summary Get the day of the week of the given date.
       *
       * @description
       * Get the day of the week of the given date.
       *
       * @param {Date|String|Number} date - the given date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Number} the day of week
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Which day of the week is 29 February 2012?
       * var result = getDay(new Date(2012, 1, 29))
       * //=> 3
       */
      function getDay(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var day = date.getDay();
        return day;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 590 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = getDate;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name getDate
       * @category Day Helpers
       * @summary Get the day of the month of the given date.
       *
       * @description
       * Get the day of the month of the given date.
       *
       * @param {Date|String|Number} date - the given date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Number} the day of month
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Which day of the month is 29 February 2012?
       * var result = getDate(new Date(2012, 1, 29))
       * //=> 29
       */
      function getDate(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var dayOfMonth = date.getDate();
        return dayOfMonth;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 591 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = getMonth;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name getMonth
       * @category Month Helpers
       * @summary Get the month of the given date.
       *
       * @description
       * Get the month of the given date.
       *
       * @param {Date|String|Number} date - the given date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Number} the month
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Which month is 29 February 2012?
       * var result = getMonth(new Date(2012, 1, 29))
       * //=> 1
       */
      function getMonth(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var month = date.getMonth();
        return month;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 592 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = getYear;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name getYear
       * @category Year Helpers
       * @summary Get the year of the given date.
       *
       * @description
       * Get the year of the given date.
       *
       * @param {Date|String|Number} date - the given date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Number} the year
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Which year is 2 July 2014?
       * var result = getYear(new Date(2014, 6, 2))
       * //=> 2014
       */
      function getYear(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var year = date.getFullYear();
        return year;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 593 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = getTime;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name getTime
       * @category Timestamp Helpers
       * @summary Get the milliseconds timestamp of the given date.
       *
       * @description
       * Get the milliseconds timestamp of the given date.
       *
       * @param {Date|String|Number} date - the given date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Number} the timestamp
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Get the timestamp of 29 February 2012 11:45:05.123:
       * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))
       * //=> 1330515905123
       */
      function getTime(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var timestamp = date.getTime();
        return timestamp;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 594 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = setSeconds;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name setSeconds
       * @category Second Helpers
       * @summary Set the seconds to the given date.
       *
       * @description
       * Set the seconds to the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} seconds - the seconds of the new date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the seconds setted
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Set 45 seconds to 1 September 2014 11:30:40:
       * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)
       * //=> Mon Sep 01 2014 11:30:45
       */
      function setSeconds(dirtyDate, dirtySeconds, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index4.default)(dirtyDate, dirtyOptions);
        var seconds = (0, _index2.default)(dirtySeconds);
        date.setSeconds(seconds);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 595 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = setMinutes;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name setMinutes
       * @category Minute Helpers
       * @summary Set the minutes to the given date.
       *
       * @description
       * Set the minutes to the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} minutes - the minutes of the new date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the minutes setted
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Set 45 minutes to 1 September 2014 11:30:40:
       * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)
       * //=> Mon Sep 01 2014 11:45:40
       */
      function setMinutes(dirtyDate, dirtyMinutes, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index4.default)(dirtyDate, dirtyOptions);
        var minutes = (0, _index2.default)(dirtyMinutes);
        date.setMinutes(minutes);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 596 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = setHours;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name setHours
       * @category Hour Helpers
       * @summary Set the hours to the given date.
       *
       * @description
       * Set the hours to the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} hours - the hours of the new date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the hours setted
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Set 4 hours to 1 September 2014 11:30:00:
       * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)
       * //=> Mon Sep 01 2014 04:30:00
       */
      function setHours(dirtyDate, dirtyHours, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index4.default)(dirtyDate, dirtyOptions);
        var hours = (0, _index2.default)(dirtyHours);
        date.setHours(hours);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 597 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = setMonth;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      var _index5 = __webpack_require__(578);

      var _index6 = _interopRequireDefault(_index5);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name setMonth
       * @category Month Helpers
       * @summary Set the month to the given date.
       *
       * @description
       * Set the month to the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} month - the month of the new date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the month setted
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Set February to 1 September 2014:
       * var result = setMonth(new Date(2014, 8, 1), 1)
       * //=> Sat Feb 01 2014 00:00:00
       */
      function setMonth(dirtyDate, dirtyMonth, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index4.default)(dirtyDate, dirtyOptions);
        var month = (0, _index2.default)(dirtyMonth);
        var year = date.getFullYear();
        var day = date.getDate();

        var dateWithDesiredMonth = new Date(0);
        dateWithDesiredMonth.setFullYear(year, month, 15);
        dateWithDesiredMonth.setHours(0, 0, 0, 0);
        var daysInMonth = (0, _index6.default)(
          dateWithDesiredMonth,
          dirtyOptions
        );
        // Set the last day of the new month
        // if the original date was the last day of the longer month
        date.setMonth(month, Math.min(day, daysInMonth));
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 598 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = setYear;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name setYear
       * @category Year Helpers
       * @summary Set the year to the given date.
       *
       * @description
       * Set the year to the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} year - the year of the new date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the year setted
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Set year 2013 to 1 September 2014:
       * var result = setYear(new Date(2014, 8, 1), 2013)
       * //=> Sun Sep 01 2013 00:00:00
       */
      function setYear(dirtyDate, dirtyYear, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index4.default)(dirtyDate, dirtyOptions);
        var year = (0, _index2.default)(dirtyYear);

        // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date
        if (isNaN(date)) {
          return new Date(NaN);
        }

        date.setFullYear(year);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 599 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = min;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name min
       * @category Common Helpers
       * @summary Return the earliest of the given dates.
       *
       * @description
       * Return the earliest of the given dates.
       *
       * @param {Date[]|String[]|Number[]} datesArray - the dates to compare
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the earliest of the dates
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Which of these dates is the earliest?
       * var result = min(
       *  [
       *    new Date(1989, 6, 10),
       *    new Date(1987, 1, 11),
       *    new Date(1995, 6, 2),
       *    new Date(1990, 0, 1)
       *  ]
       * )
       * //=> Wed Feb 11 1987 00:00:00
       */
      function min(dirtyDatesArray, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var datesArray;
        // `dirtyDatesArray` is undefined or null
        if (dirtyDatesArray == null) {
          datesArray = [];

          // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
        } else if (typeof dirtyDatesArray.forEach === 'function') {
          datesArray = dirtyDatesArray;

          // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array
        } else {
          datesArray = Array.prototype.slice.call(dirtyDatesArray);
        }

        var result;
        datesArray.forEach(function(dirtyDate) {
          var currentDate = (0, _index2.default)(dirtyDate, dirtyOptions);

          if (
            result === undefined ||
            result > currentDate ||
            isNaN(currentDate)
          ) {
            result = currentDate;
          }
        });

        return result;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 600 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = max;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name max
       * @category Common Helpers
       * @summary Return the latest of the given dates.
       *
       * @description
       * Return the latest of the given dates.
       *
       * @param {Date[]|String[]|Number[]} datesArray - the dates to compare
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the latest of the dates
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Which of these dates is the latest?
       * var result = max(
       *  [
       *    new Date(1989, 6, 10),
       *    new Date(1987, 1, 11),
       *    new Date(1995, 6, 2),
       *    new Date(1990, 0, 1)
       *  ]
       * )
       * //=> Sun Jul 02 1995 00:00:00
       */
      function max(dirtyDatesArray, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var datesArray;
        // `dirtyDatesArray` is undefined or null
        if (dirtyDatesArray == null) {
          datesArray = [];

          // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
        } else if (typeof dirtyDatesArray.forEach === 'function') {
          datesArray = dirtyDatesArray;

          // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array
        } else {
          datesArray = Array.prototype.slice.call(dirtyDatesArray);
        }

        var result;
        datesArray.forEach(function(dirtyDate) {
          var currentDate = (0, _index2.default)(dirtyDate, dirtyOptions);

          if (
            result === undefined ||
            result < currentDate ||
            isNaN(currentDate)
          ) {
            result = currentDate;
          }
        });

        return result;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 601 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = differenceInCalendarDays;

      var _index = __webpack_require__(547);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(602);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var MILLISECONDS_IN_DAY = 86400000;

      /**
       * @name differenceInCalendarDays
       * @category Day Helpers
       * @summary Get the number of calendar days between the given dates.
       *
       * @description
       * Get the number of calendar days between the given dates. This means that the times are removed
       * from the dates and then the difference in days is calculated.
       *
       * @param {Date|String|Number} dateLeft - the later date
       * @param {Date|String|Number} dateRight - the earlier date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Number} the number of calendar days
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // How many calendar days are between
       * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
       * var result = differenceInCalendarDays(
       *   new Date(2012, 6, 2, 0, 0),
       *   new Date(2011, 6, 2, 23, 0)
       * )
       * //=> 366
       * // How many calendar days are between
       * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
       * var result = differenceInCalendarDays(
       *   new Date(2011, 6, 2, 0, 1),
       *   new Date(2011, 6, 2, 23, 59)
       * )
       * //=> 1
       */
      function differenceInCalendarDays(
        dirtyDateLeft,
        dirtyDateRight,
        dirtyOptions
      ) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var startOfDayLeft = (0, _index4.default)(dirtyDateLeft, dirtyOptions);
        var startOfDayRight = (0, _index4.default)(
          dirtyDateRight,
          dirtyOptions
        );

        var timestampLeft =
          startOfDayLeft.getTime() - (0, _index2.default)(startOfDayLeft);
        var timestampRight =
          startOfDayRight.getTime() - (0, _index2.default)(startOfDayRight);

        // Round the number of days to the nearest integer
        // because the number of milliseconds in a day is not constant
        // (e.g. it's different in the day of the daylight saving time clock shift)
        return Math.round(
          (timestampLeft - timestampRight) / MILLISECONDS_IN_DAY
        );
      }
      module.exports = exports['default'];

      /***/
    },
    /* 602 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = startOfDay;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name startOfDay
       * @category Day Helpers
       * @summary Return the start of a day for the given date.
       *
       * @description
       * Return the start of a day for the given date.
       * The result will be in the local timezone.
       *
       * @param {Date|String|Number} date - the original date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the start of a day
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // The start of a day for 2 September 2014 11:55:00:
       * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Tue Sep 02 2014 00:00:00
       */
      function startOfDay(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 603 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = differenceInCalendarMonths;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name differenceInCalendarMonths
       * @category Month Helpers
       * @summary Get the number of calendar months between the given dates.
       *
       * @description
       * Get the number of calendar months between the given dates.
       *
       * @param {Date|String|Number} dateLeft - the later date
       * @param {Date|String|Number} dateRight - the earlier date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Number} the number of calendar months
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // How many calendar months are between 31 January 2014 and 1 September 2014?
       * var result = differenceInCalendarMonths(
       *   new Date(2014, 8, 1),
       *   new Date(2014, 0, 31)
       * )
       * //=> 8
       */
      function differenceInCalendarMonths(
        dirtyDateLeft,
        dirtyDateRight,
        dirtyOptions
      ) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var dateLeft = (0, _index2.default)(dirtyDateLeft, dirtyOptions);
        var dateRight = (0, _index2.default)(dirtyDateRight, dirtyOptions);

        var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
        var monthDiff = dateLeft.getMonth() - dateRight.getMonth();

        return yearDiff * 12 + monthDiff;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 604 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = differenceInCalendarWeeks;

      var _index = __webpack_require__(547);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(605);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var MILLISECONDS_IN_WEEK = 604800000;

      /**
       * @name differenceInCalendarWeeks
       * @category Week Helpers
       * @summary Get the number of calendar weeks between the given dates.
       *
       * @description
       * Get the number of calendar weeks between the given dates.
       *
       * @param {Date|String|Number} dateLeft - the later date
       * @param {Date|String|Number} dateRight - the earlier date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @returns {Number} the number of calendar weeks
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       *
       * @example
       * // How many calendar weeks are between 5 July 2014 and 20 July 2014?
       * var result = differenceInCalendarWeeks(
       *   new Date(2014, 6, 20),
       *   new Date(2014, 6, 5)
       * )
       * //=> 3
       *
       * @example
       * // If the week starts on Monday,
       * // how many calendar weeks are between 5 July 2014 and 20 July 2014?
       * var result = differenceInCalendarWeeks(
       *   new Date(2014, 6, 20),
       *   new Date(2014, 6, 5),
       *   {weekStartsOn: 1}
       * )
       * //=> 2
       */
      function differenceInCalendarWeeks(
        dirtyDateLeft,
        dirtyDateRight,
        dirtyOptions
      ) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var startOfWeekLeft = (0, _index4.default)(dirtyDateLeft, dirtyOptions);
        var startOfWeekRight = (0, _index4.default)(
          dirtyDateRight,
          dirtyOptions
        );

        var timestampLeft =
          startOfWeekLeft.getTime() - (0, _index2.default)(startOfWeekLeft);
        var timestampRight =
          startOfWeekRight.getTime() - (0, _index2.default)(startOfWeekRight);

        // Round the number of days to the nearest integer
        // because the number of milliseconds in a week is not constant
        // (e.g. it's different in the week of the daylight saving time clock shift)
        return Math.round(
          (timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK
        );
      }
      module.exports = exports['default'];

      /***/
    },
    /* 605 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = startOfWeek;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name startOfWeek
       * @category Week Helpers
       * @summary Return the start of a week for the given date.
       *
       * @description
       * Return the start of a week for the given date.
       * The result will be in the local timezone.
       *
       * @param {Date|String|Number} date - the original date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @returns {Date} the start of a week
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       *
       * @example
       * // The start of a week for 2 September 2014 11:55:00:
       * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Sun Aug 31 2014 00:00:00
       *
       * @example
       * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:
       * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})
       * //=> Mon Sep 01 2014 00:00:00
       */
      function startOfWeek(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeWeekStartsOn =
          locale && locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn =
          localeWeekStartsOn == null
            ? 0
            : (0, _index2.default)(localeWeekStartsOn);
        var weekStartsOn =
          options.weekStartsOn == null
            ? defaultWeekStartsOn
            : (0, _index2.default)(options.weekStartsOn);

        // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError(
            'weekStartsOn must be between 0 and 6 inclusively'
          );
        }

        var date = (0, _index4.default)(dirtyDate, options);
        var day = date.getDay();
        var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;

        date.setDate(date.getDate() - diff);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 606 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = setDayOfYear;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name setDayOfYear
       * @category Day Helpers
       * @summary Set the day of the year to the given date.
       *
       * @description
       * Set the day of the year to the given date.
       *
       * @param {Date|String|Number} date - the date to be changed
       * @param {Number} dayOfYear - the day of the year of the new date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the new date with the day of the year setted
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Set the 2nd day of the year to 2 July 2014:
       * var result = setDayOfYear(new Date(2014, 6, 2), 2)
       * //=> Thu Jan 02 2014 00:00:00
       */
      function setDayOfYear(dirtyDate, dirtyDayOfYear, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index4.default)(dirtyDate, dirtyOptions);
        var dayOfYear = (0, _index2.default)(dirtyDayOfYear);
        date.setMonth(0);
        date.setDate(dayOfYear);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 607 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = startOfMonth;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name startOfMonth
       * @category Month Helpers
       * @summary Return the start of a month for the given date.
       *
       * @description
       * Return the start of a month for the given date.
       * The result will be in the local timezone.
       *
       * @param {Date|String|Number} date - the original date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the start of a month
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // The start of a month for 2 September 2014 11:55:00:
       * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Mon Sep 01 2014 00:00:00
       */
      function startOfMonth(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        date.setDate(1);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 608 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = startOfYear;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name startOfYear
       * @category Year Helpers
       * @summary Return the start of a year for the given date.
       *
       * @description
       * Return the start of a year for the given date.
       * The result will be in the local timezone.
       *
       * @param {Date|String|Number} date - the original date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the start of a year
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // The start of a year for 2 September 2014 11:55:00:
       * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))
       * //=> Wed Jan 01 2014 00:00:00
       */
      function startOfYear(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var cleanDate = (0, _index2.default)(dirtyDate, dirtyOptions);
        var date = new Date(0);
        date.setFullYear(cleanDate.getFullYear(), 0, 1);
        date.setHours(0, 0, 0, 0);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 609 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = endOfWeek;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name endOfWeek
       * @category Week Helpers
       * @summary Return the end of a week for the given date.
       *
       * @description
       * Return the end of a week for the given date.
       * The result will be in the local timezone.
       *
       * @param {Date|String|Number} date - the original date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @returns {Date} the end of a week
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       *
       * @example
       * // The end of a week for 2 September 2014 11:55:00:
       * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Sat Sep 06 2014 23:59:59.999
       *
       * @example
       * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:
       * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})
       * //=> Sun Sep 07 2014 23:59:59.999
       */
      function endOfWeek(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var options = dirtyOptions || {};

        var locale = options.locale;
        var localeWeekStartsOn =
          locale && locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn =
          localeWeekStartsOn == null
            ? 0
            : (0, _index2.default)(localeWeekStartsOn);
        var weekStartsOn =
          options.weekStartsOn == null
            ? defaultWeekStartsOn
            : (0, _index2.default)(options.weekStartsOn);

        // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError(
            'weekStartsOn must be between 0 and 6 inclusively'
          );
        }

        var date = (0, _index4.default)(dirtyDate, options);
        var day = date.getDay();
        var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);

        date.setDate(date.getDate() + diff);
        date.setHours(23, 59, 59, 999);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 610 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = endOfMonth;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name endOfMonth
       * @category Month Helpers
       * @summary Return the end of a month for the given date.
       *
       * @description
       * Return the end of a month for the given date.
       * The result will be in the local timezone.
       *
       * @param {Date|String|Number} date - the original date
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Date} the end of a month
       * @throws {TypeError} 1 argument required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // The end of a month for 2 September 2014 11:55:00:
       * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))
       * //=> Tue Sep 30 2014 23:59:59.999
       */
      function endOfMonth(dirtyDate, dirtyOptions) {
        if (arguments.length < 1) {
          throw new TypeError(
            '1 argument required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var month = date.getMonth();
        date.setFullYear(date.getFullYear(), month + 1, 0);
        date.setHours(23, 59, 59, 999);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 611 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = isEqual;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name isEqual
       * @category Common Helpers
       * @summary Are the given dates equal?
       *
       * @description
       * Are the given dates equal?
       *
       * @param {Date|String|Number} dateLeft - the first date to compare
       * @param {Date|String|Number} dateRight - the second date to compare
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Boolean} the dates are equal
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?
       * var result = isEqual(
       *   new Date(2014, 6, 2, 6, 30, 45, 0)
       *   new Date(2014, 6, 2, 6, 30, 45, 500)
       * )
       * //=> false
       */
      function isEqual(dirtyLeftDate, dirtyRightDate, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var dateLeft = (0, _index2.default)(dirtyLeftDate, dirtyOptions);
        var dateRight = (0, _index2.default)(dirtyRightDate, dirtyOptions);
        return dateLeft.getTime() === dateRight.getTime();
      }
      module.exports = exports['default'];

      /***/
    },
    /* 612 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = isSameWeek;

      var _index = __webpack_require__(605);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name isSameWeek
       * @category Week Helpers
       * @summary Are the given dates in the same week?
       *
       * @description
       * Are the given dates in the same week?
       *
       * @param {Date|String|Number} dateLeft - the first date to check
       * @param {Date|String|Number} dateRight - the second date to check
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @returns {Boolean} the dates are in the same week
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       *
       * @example
       * // Are 31 August 2014 and 4 September 2014 in the same week?
       * var result = isSameWeek(
       *   new Date(2014, 7, 31),
       *   new Date(2014, 8, 4)
       * )
       * //=> true
       *
       * @example
       * // If week starts with Monday,
       * // are 31 August 2014 and 4 September 2014 in the same week?
       * var result = isSameWeek(
       *   new Date(2014, 7, 31),
       *   new Date(2014, 8, 4),
       *   {weekStartsOn: 1}
       * )
       * //=> false
       */
      function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var dateLeftStartOfWeek = (0, _index2.default)(
          dirtyDateLeft,
          dirtyOptions
        );
        var dateRightStartOfWeek = (0, _index2.default)(
          dirtyDateRight,
          dirtyOptions
        );

        return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();
      }
      module.exports = exports['default'];

      /***/
    },
    /* 613 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = isSameDay;

      var _index = __webpack_require__(602);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name isSameDay
       * @category Day Helpers
       * @summary Are the given dates in the same day?
       *
       * @description
       * Are the given dates in the same day?
       *
       * @param {Date|String|Number} dateLeft - the first date to check
       * @param {Date|String|Number} dateRight - the second date to check
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Boolean} the dates are in the same day
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?
       * var result = isSameDay(
       *   new Date(2014, 8, 4, 6, 0),
       *   new Date(2014, 8, 4, 18, 0)
       * )
       * //=> true
       */
      function isSameDay(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var dateLeftStartOfDay = (0, _index2.default)(
          dirtyDateLeft,
          dirtyOptions
        );
        var dateRightStartOfDay = (0, _index2.default)(
          dirtyDateRight,
          dirtyOptions
        );

        return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
      }
      module.exports = exports['default'];

      /***/
    },
    /* 614 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = isSameMonth;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name isSameMonth
       * @category Month Helpers
       * @summary Are the given dates in the same month?
       *
       * @description
       * Are the given dates in the same month?
       *
       * @param {Date|String|Number} dateLeft - the first date to check
       * @param {Date|String|Number} dateRight - the second date to check
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Boolean} the dates are in the same month
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Are 2 September 2014 and 25 September 2014 in the same month?
       * var result = isSameMonth(
       *   new Date(2014, 8, 2),
       *   new Date(2014, 8, 25)
       * )
       * //=> true
       */
      function isSameMonth(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var dateLeft = (0, _index2.default)(dirtyDateLeft, dirtyOptions);
        var dateRight = (0, _index2.default)(dirtyDateRight, dirtyOptions);
        return (
          dateLeft.getFullYear() === dateRight.getFullYear() &&
          dateLeft.getMonth() === dateRight.getMonth()
        );
      }
      module.exports = exports['default'];

      /***/
    },
    /* 615 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = isSameYear;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name isSameYear
       * @category Year Helpers
       * @summary Are the given dates in the same year?
       *
       * @description
       * Are the given dates in the same year?
       *
       * @param {Date|String|Number} dateLeft - the first date to check
       * @param {Date|String|Number} dateRight - the second date to check
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Boolean} the dates are in the same year
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Are 2 September 2014 and 25 September 2014 in the same year?
       * var result = isSameYear(
       *   new Date(2014, 8, 2),
       *   new Date(2014, 8, 25)
       * )
       * //=> true
       */
      function isSameYear(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var dateLeft = (0, _index2.default)(dirtyDateLeft, dirtyOptions);
        var dateRight = (0, _index2.default)(dirtyDateRight, dirtyOptions);
        return dateLeft.getFullYear() === dateRight.getFullYear();
      }
      module.exports = exports['default'];

      /***/
    },
    /* 616 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = isAfter;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name isAfter
       * @category Common Helpers
       * @summary Is the first date after the second one?
       *
       * @description
       * Is the first date after the second one?
       *
       * @param {Date|String|Number} date - the date that should be after the other one to return true
       * @param {Date|String|Number} dateToCompare - the date to compare with
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Boolean} the first date is after the second date
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Is 10 July 1989 after 11 February 1987?
       * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))
       * //=> true
       */
      function isAfter(dirtyDate, dirtyDateToCompare, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var dateToCompare = (0, _index2.default)(
          dirtyDateToCompare,
          dirtyOptions
        );
        return date.getTime() > dateToCompare.getTime();
      }
      module.exports = exports['default'];

      /***/
    },
    /* 617 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = isBefore;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name isBefore
       * @category Common Helpers
       * @summary Is the first date before the second one?
       *
       * @description
       * Is the first date before the second one?
       *
       * @param {Date|String|Number} date - the date that should be before the other one to return true
       * @param {Date|String|Number} dateToCompare - the date to compare with
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Boolean} the first date is before the second date
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       *
       * @example
       * // Is 10 July 1989 before 11 February 1987?
       * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))
       * //=> false
       */
      function isBefore(dirtyDate, dirtyDateToCompare, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index2.default)(dirtyDate, dirtyOptions);
        var dateToCompare = (0, _index2.default)(
          dirtyDateToCompare,
          dirtyOptions
        );
        return date.getTime() < dateToCompare.getTime();
      }
      module.exports = exports['default'];

      /***/
    },
    /* 618 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = isWithinInterval;

      var _index = __webpack_require__(545);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @name isWithinInterval
       * @category Interval Helpers
       * @summary Is the given date within the interval?
       *
       * @description
       * Is the given date within the interval?
       *
       * @param {Date|String|Number} date - the date to check
       * @param {Interval} interval - the interval to check
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @returns {Boolean} the date is within the interval
       * @throws {TypeError} 2 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       * @throws {RangeError} The start of an interval cannot be after its end
       * @throws {RangeError} Date in interval cannot be `Invalid Date`
       *
       * @example
       * // For the date within the interval:
       * isWithinInterval(
       *   new Date(2014, 0, 3),
       *   {start: new Date(2014, 0, 1), end: new Date(2014, 0, 7)}
       * )
       * //=> true
       *
       * @example
       * // For the date outside of the interval:
       * isWithinInterval(
       *   new Date(2014, 0, 10),
       *   {start: new Date(2014, 0, 1), end: new Date(2014, 0, 7)}
       * )
       * //=> false
       */
      function isWithinInterval(dirtyDate, dirtyInterval, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var interval = dirtyInterval || {};
        var time = (0, _index2.default)(dirtyDate, dirtyOptions).getTime();
        var startTime = (0, _index2.default)(
          interval.start,
          dirtyOptions
        ).getTime();
        var endTime = (0, _index2.default)(
          interval.end,
          dirtyOptions
        ).getTime();

        // Throw an exception if start date is after end date or if any date is `Invalid Date`
        if (!(startTime <= endTime)) {
          throw new RangeError('Invalid interval');
        }

        return time >= startTime && time <= endTime;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 619 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = parse;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(547);

      var _index4 = _interopRequireDefault(_index3);

      var _index5 = __webpack_require__(545);

      var _index6 = _interopRequireDefault(_index5);

      var _index7 = __webpack_require__(570);

      var _index8 = _interopRequireDefault(_index7);

      var _index9 = __webpack_require__(549);

      var _index10 = _interopRequireDefault(_index9);

      var _index11 = __webpack_require__(620);

      var _index12 = _interopRequireDefault(_index11);

      var _index13 = __webpack_require__(572);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var TIMEZONE_UNIT_PRIORITY = 20;

      // This RegExp consists of three parts separated by `|`:
      // - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
      //   (one of the certain letters followed by `o`)
      // - (\w)\1* matches any sequences of the same letter
      // - '' matches two quote characters in a row
      // - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
      //   except a single quote symbol, which ends the sequence.
      //   Two quote characters do not end the sequence.
      //   If there is no matching single quote
      //   then the sequence will continue until the end of the string.
      // - . matches any single character unmatched by previous parts of the RegExps
      var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;

      var escapedStringRegExp = /^'(.*?)'?$/;
      var doubleQuoteRegExp = /''/g;

      var notWhitespaceRegExp = /\S/;

      /**
       * @name parse
       * @category Common Helpers
       * @summary Parse the date.
       *
       * @description
       * Return the date parsed from string using the given format string.
       *
       * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
       * > See: https://git.io/fxCyr
       *
       * The characters in the format string wrapped between two single quotes characters (') are escaped.
       * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
       *
       * Format of the format string is based on Unicode Technical Standard #35:
       * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
       * with a few additions (see note 5 below the table).
       *
       * Accepted format string patterns:
       * | Unit                            |Prior| Pattern | Result examples                   | Notes |
       * |---------------------------------|-----|---------|-----------------------------------|-------|
       * | Era                             | 140 | G..GGG  | AD, BC                            |       |
       * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |
       * |                                 |     | GGGGG   | A, B                              |       |
       * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |
       * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
       * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |
       * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |
       * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |
       * |                                 |     | yyyyy   | ...                               | 2,4   |
       * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |
       * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
       * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |
       * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |
       * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |
       * |                                 |     | YYYYY   | ...                               | 2,4   |
       * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |
       * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |
       * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |
       * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |
       * |                                 |     | RRRRR   | ...                               | 2,4,5 |
       * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |
       * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |
       * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |
       * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |
       * |                                 |     | uuuuu   | ...                               | 2,4   |
       * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |
       * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |
       * |                                 |     | QQ      | 01, 02, 03, 04                    |       |
       * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |
       * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
       * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |
       * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |
       * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |
       * |                                 |     | qq      | 01, 02, 03, 04                    |       |
       * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |
       * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
       * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |
       * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |
       * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |
       * |                                 |     | MM      | 01, 02, ..., 12                   |       |
       * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |
       * |                                 |     | MMMM    | January, February, ..., December  | 2     |
       * |                                 |     | MMMMM   | J, F, ..., D                      |       |
       * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |
       * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |
       * |                                 |     | LL      | 01, 02, ..., 12                   |       |
       * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |
       * |                                 |     | LLLL    | January, February, ..., December  | 2     |
       * |                                 |     | LLLLL   | J, F, ..., D                      |       |
       * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |
       * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |
       * |                                 |     | ww      | 01, 02, ..., 53                   |       |
       * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |
       * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |
       * |                                 |     | II      | 01, 02, ..., 53                   | 5     |
       * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |
       * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |
       * |                                 |     | dd      | 01, 02, ..., 31                   |       |
       * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 6     |
       * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |
       * |                                 |     | DD      | 01, 02, ..., 365, 366             | 6     |
       * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |
       * |                                 |     | DDDD    | ...                               | 2     |
       * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
       * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |
       * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |
       * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |
       * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |
       * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |
       * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |
       * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |
       * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |
       * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |
       * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |
       * |                                 |     | ee      | 02, 03, ..., 01                   |       |
       * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |
       * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |
       * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |
       * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |
       * |                                 |     | cc      | 02, 03, ..., 01                   |       |
       * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |
       * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
       * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |
       * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
       * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |
       * |                                 |     | aaaa    | a.m., p.m.                        | 2     |
       * |                                 |     | aaaaa   | a, p                              |       |
       * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |
       * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |
       * |                                 |     | bbbbb   | a, p, n, mi                       |       |
       * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |
       * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |
       * |                                 |     | BBBBB   | at night, in the morning, ...     |       |
       * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |
       * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |
       * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |
       * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |
       * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |
       * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |
       * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |
       * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |
       * |                                 |     | KK      | 1, 2, ..., 11, 0                  |       |
       * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |
       * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |
       * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |
       * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |
       * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |
       * |                                 |     | mm      | 00, 01, ..., 59                   |       |
       * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |
       * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |
       * |                                 |     | ss      | 00, 01, ..., 59                   |       |
       * | Fraction of second              |  40 | S       | 0, 1, ..., 9                      |       |
       * |                                 |     | SS      | 00, 01, ..., 99                   |       |
       * |                                 |     | SSS     | 000, 0001, ..., 999               |       |
       * |                                 |     | SSSS    | ...                               | 2     |
       * | Timezone (ISO-8601 w/ Z)        |  20 | X       | -08, +0530, Z                     |       |
       * |                                 |     | XX      | -0800, +0530, Z                   |       |
       * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |
       * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |
       * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
       * | Timezone (ISO-8601 w/o Z)       |  20 | x       | -08, +0530, +00                   |       |
       * |                                 |     | xx      | -0800, +0530, +0000               |       |
       * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |
       * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |
       * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
       * | Seconds timestamp               |  10 | t       | 512969520                         |       |
       * |                                 |     | tt      | ...                               | 2     |
       * | Milliseconds timestamp          |  10 | T       | 512969520900                      |       |
       * |                                 |     | TT      | ...                               | 2     |
       * Notes:
       * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
       *    are the same as "stand-alone" units, but are different in some languages.
       *    "Formatting" units are declined according to the rules of the language
       *    in the context of a date. "Stand-alone" units are always nominative singular.
       *    In `format` function, they will produce different result:
       *
       *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
       *
       *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
       *
       *    `parse` will try to match both formatting and stand-alone units interchangably.
       *
       * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
       *    the single quote characters (see below).
       *    If the sequence is longer than listed in table:
       *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number
       *      as wide as the sequence
       *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.
       *      These variations are marked with "2" in the last column of the table.
       *
       * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
       *    These tokens represent the shortest form of the quarter.
       *
       * 4. The main difference between `y` and `u` patterns are B.C. years:
       *
       *    | Year | `y` | `u` |
       *    |------|-----|-----|
       *    | AC 1 |   1 |   1 |
       *    | BC 1 |   1 |   0 |
       *    | BC 2 |   2 |  -1 |
       *
       *    Also `yy` will try to guess the century of two digit year by proximity with `baseDate`:
       *
       *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`
       *
       *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`
       *
       *    while `uu` will just assign the year as is:
       *
       *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`
       *
       *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`
       *
       *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
       *    except local week-numbering years are dependent on `options.weekStartsOn`
       *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}
       *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).
       *
       * 5. These patterns are not in the Unicode Technical Standard #35:
       *    - `i`: ISO day of week
       *    - `I`: ISO week of year
       *    - `R`: ISO week-numbering year
       *    - `o`: ordinal number modifier
       *
       * 6. These tokens are often confused with others. See: https://git.io/fxCyr
       *
       * Values will be assigned to the date in the descending order of its unit's priority.
       * Units of an equal priority overwrite each other in the order of appearance.
       *
       * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),
       * the values will be taken from 3rd argument `baseDate` which works as a context of parsing.
       *
       * `baseDate` must be passed for correct work of the function.
       * If you're not sure which `baseDate` to supply, create a new instance of Date:
       * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`
       * In this case parsing will be done in the context of the current date.
       * If `baseDate` is `Invalid Date` or a value not convertible to valid `Date`,
       * then `Invalid Date` will be returned.
       *
       * The result may vary by locale.
       *
       * If `formatString` matches with `dateString` but does not provides tokens, `baseDate` will be returned.
       *
       * If parsing failed, `Invalid Date` will be returned.
       * Invalid Date is a Date, whose time value is NaN.
       * Time value of Date: http://es5.github.io/#x15.9.1.1
       *
       * @param {String} dateString - the string to parse
       * @param {String} formatString - the string of tokens
       * @param {Date|String|Number} baseDate - defines values missing from the parsed dateString
       * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
       * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
       * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
       * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
       * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
       * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:
       *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).
       *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens (`yy`, `yyyy`).
       *   See: https://git.io/fxCyr
       * @returns {Date} the parsed date
       * @throws {TypeError} 3 arguments required
       * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
       * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
       * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
       * @throws {RangeError} `options.locale` must contain `match` property
       * @throws {RangeError} `options.awareOfUnicodeTokens` must be set to `true` to use `XX` token; see: https://git.io/fxCyr
       *
       * @example
       * // Parse 11 February 2014 from middle-endian format:
       * var result = parse(
       *   '02/11/2014',
       *   'MM/dd/yyyy',
       *   new Date()
       * )
       * //=> Tue Feb 11 2014 00:00:00
       *
       * @example
       * // Parse 28th of February in Esperanto locale in the context of 2010 year:
       * import eo from 'date-fns/locale/eo'
       * var result = parse(
       *   '28-a de februaro',
       *   "do 'de' MMMM",
       *   new Date(2010, 0, 1),
       *   {locale: eo}
       * )
       * //=> Sun Feb 28 2010 00:00:00
       */
      function parse(
        dirtyDateString,
        dirtyFormatString,
        dirtyBaseDate,
        dirtyOptions
      ) {
        if (arguments.length < 3) {
          throw new TypeError(
            '3 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var dateString = String(dirtyDateString);
        var formatString = String(dirtyFormatString);
        var options = dirtyOptions || {};

        var locale = options.locale || _index10.default;

        if (!locale.match) {
          throw new RangeError('locale must contain match property');
        }

        var localeFirstWeekContainsDate =
          locale.options && locale.options.firstWeekContainsDate;
        var defaultFirstWeekContainsDate =
          localeFirstWeekContainsDate == null
            ? 1
            : (0, _index2.default)(localeFirstWeekContainsDate);
        var firstWeekContainsDate =
          options.firstWeekContainsDate == null
            ? defaultFirstWeekContainsDate
            : (0, _index2.default)(options.firstWeekContainsDate);

        // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
        if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
          throw new RangeError(
            'firstWeekContainsDate must be between 1 and 7 inclusively'
          );
        }

        var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn =
          localeWeekStartsOn == null
            ? 0
            : (0, _index2.default)(localeWeekStartsOn);
        var weekStartsOn =
          options.weekStartsOn == null
            ? defaultWeekStartsOn
            : (0, _index2.default)(options.weekStartsOn);

        // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError(
            'weekStartsOn must be between 0 and 6 inclusively'
          );
        }

        if (formatString === '') {
          if (dateString === '') {
            return (0, _index6.default)(dirtyBaseDate, options);
          } else {
            return new Date(NaN);
          }
        }

        var subFnOptions = {
          firstWeekContainsDate: firstWeekContainsDate,
          weekStartsOn: weekStartsOn,
          locale: locale
        };

        // If timezone isn't specified, it will be set to the system timezone
        var setters = [
          {
            priority: TIMEZONE_UNIT_PRIORITY,
            set: dateToSystemTimezone,
            index: 0
          }
        ];

        var i;

        var tokens = formatString.match(formattingTokensRegExp);

        for (i = 0; i < tokens.length; i++) {
          var token = tokens[i];

          if (
            !options.awareOfUnicodeTokens &&
            (0, _index13.isProtectedToken)(token)
          ) {
            (0, _index13.throwProtectedError)(token);
          }

          var firstCharacter = token[0];
          var parser = _index12.default[firstCharacter];
          if (parser) {
            var parseResult = parser.parse(
              dateString,
              token,
              locale.match,
              subFnOptions
            );

            if (!parseResult) {
              return new Date(NaN);
            }

            setters.push({
              priority: parser.priority,
              set: parser.set,
              validate: parser.validate,
              value: parseResult.value,
              index: setters.length
            });

            dateString = parseResult.rest;
          } else {
            // Replace two single quote characters with one single quote character
            if (token === "''") {
              token = "'";
            } else if (firstCharacter === "'") {
              token = cleanEscapedString(token);
            }

            // Cut token from string, or, if string doesn't match the token, return Invalid Date
            if (dateString.indexOf(token) === 0) {
              dateString = dateString.slice(token.length);
            } else {
              return new Date(NaN);
            }
          }
        }

        // Check if the remaining input contains something other than whitespace
        if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {
          return new Date(NaN);
        }

        var uniquePrioritySetters = setters
          .map(function(setter) {
            return setter.priority;
          })
          .sort(function(a, b) {
            return b - a;
          })
          .filter(function(priority, index, array) {
            return array.indexOf(priority) === index;
          })
          .map(function(priority) {
            return setters
              .filter(function(setter) {
                return setter.priority === priority;
              })
              .reverse();
          })
          .map(function(setterArray) {
            return setterArray[0];
          });

        var date = (0, _index6.default)(dirtyBaseDate, options);

        if (isNaN(date)) {
          return new Date(NaN);
        }

        // Convert the date in system timezone to the same date in UTC+00:00 timezone.
        // This ensures that when UTC functions will be implemented, locales will be compatible with them.
        // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37
        var utcDate = (0, _index8.default)(date, (0, _index4.default)(date));

        for (i = 0; i < uniquePrioritySetters.length; i++) {
          var setter = uniquePrioritySetters[i];

          if (
            setter.validate &&
            !setter.validate(utcDate, setter.value, subFnOptions)
          ) {
            return new Date(NaN);
          }

          utcDate = setter.set(utcDate, setter.value, subFnOptions);
        }

        return utcDate;
      }

      function dateToSystemTimezone(date) {
        var convertedDate = new Date(0);
        convertedDate.setFullYear(
          date.getUTCFullYear(),
          date.getUTCMonth(),
          date.getUTCDate()
        );
        convertedDate.setHours(
          date.getUTCHours(),
          date.getUTCMinutes(),
          date.getUTCSeconds(),
          date.getUTCMilliseconds()
        );
        return convertedDate;
      }

      function cleanEscapedString(input) {
        return input
          .match(escapedStringRegExp)[1]
          .replace(doubleQuoteRegExp, "'");
      }
      module.exports = exports['default'];

      /***/
    },
    /* 620 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });

      var _index = __webpack_require__(568);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(621);

      var _index4 = _interopRequireDefault(_index3);

      var _index5 = __webpack_require__(622);

      var _index6 = _interopRequireDefault(_index5);

      var _index7 = __webpack_require__(566);

      var _index8 = _interopRequireDefault(_index7);

      var _index9 = __webpack_require__(623);

      var _index10 = _interopRequireDefault(_index9);

      var _index11 = __webpack_require__(624);

      var _index12 = _interopRequireDefault(_index11);

      var _index13 = __webpack_require__(562);

      var _index14 = _interopRequireDefault(_index13);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var MILLISECONDS_IN_HOUR = 3600000;
      var MILLISECONDS_IN_MINUTE = 60000;
      var MILLISECONDS_IN_SECOND = 1000;

      var numericPatterns = {
        month: /^(1[0-2]|0?\d)/, // 0 to 12
        date: /^(3[0-1]|[0-2]?\d)/, // 0 to 31
        dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/, // 0 to 366
        week: /^(5[0-3]|[0-4]?\d)/, // 0 to 53
        hour23h: /^(2[0-3]|[0-1]?\d)/, // 0 to 23
        hour24h: /^(2[0-4]|[0-1]?\d)/, // 0 to 24
        hour11h: /^(1[0-1]|0?\d)/, // 0 to 11
        hour12h: /^(1[0-2]|0?\d)/, // 0 to 12
        minute: /^[0-5]?\d/, // 0 to 59
        second: /^[0-5]?\d/, // 0 to 59

        singleDigit: /^\d/, // 0 to 9
        twoDigits: /^\d{1,2}/, // 0 to 99
        threeDigits: /^\d{1,3}/, // 0 to 999
        fourDigits: /^\d{1,4}/, // 0 to 9999

        anyDigitsSigned: /^-?\d+/,
        singleDigitSigned: /^-?\d/, // 0 to 9, -0 to -9
        twoDigitsSigned: /^-?\d{1,2}/, // 0 to 99, -0 to -99
        threeDigitsSigned: /^-?\d{1,3}/, // 0 to 999, -0 to -999
        fourDigitsSigned: /^-?\d{1,4}/ // 0 to 9999, -0 to -9999
      };

      var timezonePatterns = {
        basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
        basic: /^([+-])(\d{2})(\d{2})|Z/,
        basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
        extended: /^([+-])(\d{2}):(\d{2})|Z/,
        extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
      };

      function parseNumericPattern(pattern, string, valueCallback) {
        var matchResult = string.match(pattern);

        if (!matchResult) {
          return null;
        }

        var value = parseInt(matchResult[0], 10);

        return {
          value: valueCallback ? valueCallback(value) : value,
          rest: string.slice(matchResult[0].length)
        };
      }

      function parseTimezonePattern(pattern, string) {
        var matchResult = string.match(pattern);

        if (!matchResult) {
          return null;
        }

        // Input is 'Z'
        if (matchResult[0] === 'Z') {
          return {
            value: 0,
            rest: string.slice(1)
          };
        }

        var sign = matchResult[1] === '+' ? 1 : -1;
        var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
        var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
        var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;

        return {
          value:
            sign *
            (hours * MILLISECONDS_IN_HOUR +
              minutes * MILLISECONDS_IN_MINUTE +
              seconds * MILLISECONDS_IN_SECOND),
          rest: string.slice(matchResult[0].length)
        };
      }

      function parseAnyDigitsSigned(string, valueCallback) {
        return parseNumericPattern(
          numericPatterns.anyDigitsSigned,
          string,
          valueCallback
        );
      }

      function parseNDigits(n, string, valueCallback) {
        switch (n) {
          case 1:
            return parseNumericPattern(
              numericPatterns.singleDigit,
              string,
              valueCallback
            );
          case 2:
            return parseNumericPattern(
              numericPatterns.twoDigits,
              string,
              valueCallback
            );
          case 3:
            return parseNumericPattern(
              numericPatterns.threeDigits,
              string,
              valueCallback
            );
          case 4:
            return parseNumericPattern(
              numericPatterns.fourDigits,
              string,
              valueCallback
            );
          default:
            return parseNumericPattern(
              new RegExp('^\\d{1,' + n + '}'),
              string,
              valueCallback
            );
        }
      }

      function parseNDigitsSigned(n, string, valueCallback) {
        switch (n) {
          case 1:
            return parseNumericPattern(
              numericPatterns.singleDigitSigned,
              string,
              valueCallback
            );
          case 2:
            return parseNumericPattern(
              numericPatterns.twoDigitsSigned,
              string,
              valueCallback
            );
          case 3:
            return parseNumericPattern(
              numericPatterns.threeDigitsSigned,
              string,
              valueCallback
            );
          case 4:
            return parseNumericPattern(
              numericPatterns.fourDigitsSigned,
              string,
              valueCallback
            );
          default:
            return parseNumericPattern(
              new RegExp('^-?\\d{1,' + n + '}'),
              string,
              valueCallback
            );
        }
      }

      function dayPeriodEnumToHours(enumValue) {
        switch (enumValue) {
          case 'morning':
            return 4;
          case 'evening':
            return 17;
          case 'pm':
          case 'noon':
          case 'afternoon':
            return 12;
          case 'am':
          case 'midnight':
          case 'night':
          default:
            return 0;
        }
      }

      function normalizeTwoDigitYear(twoDigitYear, currentYear) {
        var isCommonEra = currentYear > 0;
        // Absolute number of the current year:
        // 1 -> 1 AC
        // 0 -> 1 BC
        // -1 -> 2 BC
        var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;

        var result;
        if (absCurrentYear <= 50) {
          result = twoDigitYear || 100;
        } else {
          var rangeEnd = absCurrentYear + 50;
          var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
          var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
          result =
            twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
        }

        return isCommonEra ? result : 1 - result;
      }

      var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
      var DAYS_IN_MONTH_LEAP_YEAR = [
        31,
        29,
        31,
        30,
        31,
        30,
        31,
        31,
        30,
        31,
        30,
        31
      ];

      // User for validation
      function isLeapYearIndex(year) {
        return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);
      }

      /*
	 * |     | Unit                           |     | Unit                           |
	 * |-----|--------------------------------|-----|--------------------------------|
	 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
	 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
	 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
	 * |  d  | Day of month                   |  D  | Day of year                    |
	 * |  e  | Local day of week              |  E  | Day of week                    |
	 * |  f  |                                |  F* | Day of week in month           |
	 * |  g* | Modified Julian day            |  G  | Era                            |
	 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
	 * |  i! | ISO day of week                |  I! | ISO week of year               |
	 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
	 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
	 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
	 * |  m  | Minute                         |  M  | Month                          |
	 * |  n  |                                |  N  |                                |
	 * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |
	 * |  p  |                                |  P  |                                |
	 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
	 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
	 * |  s  | Second                         |  S  | Fraction of second             |
	 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
	 * |  u  | Extended year                  |  U* | Cyclic year                    |
	 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
	 * |  w  | Local week of year             |  W* | Week of month                  |
	 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
	 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
	 * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
	 *
	 * Letters marked by * are not implemented but reserved by Unicode standard.
	 *
	 * Letters marked by ! are non-standard, but implemented by date-fns:
	 * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)
	 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
	 *   i.e. 7 for Sunday, 1 for Monday, etc.
	 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
	 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
	 *   `R` is supposed to be used in conjunction with `I` and `i`
	 *   for universal ISO week-numbering date, whereas
	 *   `Y` is supposed to be used in conjunction with `w` and `e`
	 *   for week-numbering date specific to the locale.
	 */
      var parsers = {
        // Era
        G: {
          priority: 140,
          parse: function parse(string, token, match, options) {
            switch (token) {
              // AD, BC
              case 'G':
              case 'GG':
              case 'GGG':
                return (
                  match.era(string, { width: 'abbreviated' }) ||
                  match.era(string, { width: 'narrow' })
                );
              // A, B
              case 'GGGGG':
                return match.era(string, { width: 'narrow' });
              // Anno Domini, Before Christ
              case 'GGGG':
              default:
                return (
                  match.era(string, { width: 'wide' }) ||
                  match.era(string, { width: 'abbreviated' }) ||
                  match.era(string, { width: 'narrow' })
                );
            }
          },
          set: function set(date, value, options) {
            // Sets year 10 BC if BC, or 10 AC if AC
            date.setUTCFullYear(value === 1 ? 10 : -9, 0, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },

        // Year
        y: {
          // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns
          // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
          // |----------|-------|----|-------|-------|-------|
          // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
          // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
          // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
          // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
          // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |

          priority: 130,
          parse: function parse(string, token, match, options) {
            var valueCallback = function valueCallback(year) {
              return {
                year: year,
                isTwoDigitYear: token === 'yy'
              };
            };

            switch (token) {
              case 'y':
                return parseNDigits(4, string, valueCallback);
              case 'yo':
                return match.ordinalNumber(string, {
                  unit: 'year',
                  valueCallback: valueCallback
                });
              default:
                return parseNDigits(token.length, string, valueCallback);
            }
          },
          validate: function validate(date, value, options) {
            return value.isTwoDigitYear || value.year > 0;
          },
          set: function set(date, value, options) {
            var currentYear = (0, _index2.default)(date, options);

            if (value.isTwoDigitYear) {
              var normalizedTwoDigitYear = normalizeTwoDigitYear(
                value.year,
                currentYear
              );
              date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
              date.setUTCHours(0, 0, 0, 0);
              return date;
            }

            var year = currentYear > 0 ? value.year : 1 - value.year;
            date.setUTCFullYear(year, 0, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },

        // Local week-numbering year
        Y: {
          priority: 130,
          parse: function parse(string, token, match, options) {
            var valueCallback = function valueCallback(year) {
              return {
                year: year,
                isTwoDigitYear: token === 'YY'
              };
            };

            switch (token) {
              case 'Y':
                return parseNDigits(4, string, valueCallback);
              case 'Yo':
                return match.ordinalNumber(string, {
                  unit: 'year',
                  valueCallback: valueCallback
                });
              default:
                return parseNDigits(token.length, string, valueCallback);
            }
          },
          validate: function validate(date, value, options) {
            return value.isTwoDigitYear || value.year > 0;
          },
          set: function set(date, value, options) {
            var currentYear = date.getUTCFullYear();

            if (value.isTwoDigitYear) {
              var normalizedTwoDigitYear = normalizeTwoDigitYear(
                value.year,
                currentYear
              );
              date.setUTCFullYear(
                normalizedTwoDigitYear,
                0,
                options.firstWeekContainsDate
              );
              date.setUTCHours(0, 0, 0, 0);
              return (0, _index8.default)(date, options);
            }

            var year = currentYear > 0 ? value.year : 1 - value.year;
            date.setUTCFullYear(year, 0, options.firstWeekContainsDate);
            date.setUTCHours(0, 0, 0, 0);
            return (0, _index8.default)(date, options);
          }
        },

        // ISO week-numbering year
        R: {
          priority: 130,
          parse: function parse(string, token, match, options) {
            if (token === 'R') {
              return parseNDigitsSigned(4, string);
            }

            return parseNDigitsSigned(token.length, string);
          },
          set: function set(date, value, options) {
            var firstWeekOfYear = new Date(0);
            firstWeekOfYear.setUTCFullYear(value, 0, 4);
            firstWeekOfYear.setUTCHours(0, 0, 0, 0);
            return (0, _index14.default)(firstWeekOfYear);
          }
        },

        // Extended year
        u: {
          priority: 130,
          parse: function parse(string, token, match, options) {
            if (token === 'u') {
              return parseNDigitsSigned(4, string);
            }

            return parseNDigitsSigned(token.length, string);
          },
          set: function set(date, value, options) {
            date.setUTCFullYear(value, 0, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },

        // Quarter
        Q: {
          priority: 120,
          parse: function parse(string, token, match, options) {
            switch (token) {
              // 1, 2, 3, 4
              case 'Q':
              case 'QQ':
                // 01, 02, 03, 04
                return parseNDigits(token.length, string);
              // 1st, 2nd, 3rd, 4th
              case 'Qo':
                return match.ordinalNumber(string, { unit: 'quarter' });
              // Q1, Q2, Q3, Q4
              case 'QQQ':
                return (
                  match.quarter(string, {
                    width: 'abbreviated',
                    context: 'formatting'
                  }) ||
                  match.quarter(string, {
                    width: 'narrow',
                    context: 'formatting'
                  })
                );
              // 1, 2, 3, 4 (narrow quarter; could be not numerical)
              case 'QQQQQ':
                return match.quarter(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // 1st quarter, 2nd quarter, ...
              case 'QQQQ':
              default:
                return (
                  match.quarter(string, {
                    width: 'wide',
                    context: 'formatting'
                  }) ||
                  match.quarter(string, {
                    width: 'abbreviated',
                    context: 'formatting'
                  }) ||
                  match.quarter(string, {
                    width: 'narrow',
                    context: 'formatting'
                  })
                );
            }
          },
          validate: function validate(date, value, options) {
            return value >= 1 && value <= 4;
          },
          set: function set(date, value, options) {
            date.setUTCMonth((value - 1) * 3, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },

        // Stand-alone quarter
        q: {
          priority: 120,
          parse: function parse(string, token, match, options) {
            switch (token) {
              // 1, 2, 3, 4
              case 'q':
              case 'qq':
                // 01, 02, 03, 04
                return parseNDigits(token.length, string);
              // 1st, 2nd, 3rd, 4th
              case 'qo':
                return match.ordinalNumber(string, { unit: 'quarter' });
              // Q1, Q2, Q3, Q4
              case 'qqq':
                return (
                  match.quarter(string, {
                    width: 'abbreviated',
                    context: 'standalone'
                  }) ||
                  match.quarter(string, {
                    width: 'narrow',
                    context: 'standalone'
                  })
                );
              // 1, 2, 3, 4 (narrow quarter; could be not numerical)
              case 'qqqqq':
                return match.quarter(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // 1st quarter, 2nd quarter, ...
              case 'qqqq':
              default:
                return (
                  match.quarter(string, {
                    width: 'wide',
                    context: 'standalone'
                  }) ||
                  match.quarter(string, {
                    width: 'abbreviated',
                    context: 'standalone'
                  }) ||
                  match.quarter(string, {
                    width: 'narrow',
                    context: 'standalone'
                  })
                );
            }
          },
          validate: function validate(date, value, options) {
            return value >= 1 && value <= 4;
          },
          set: function set(date, value, options) {
            date.setUTCMonth((value - 1) * 3, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },

        // Month
        M: {
          priority: 110,
          parse: function parse(string, token, match, options) {
            var valueCallback = function valueCallback(value) {
              return value - 1;
            };

            switch (token) {
              // 1, 2, ..., 12
              case 'M':
                return parseNumericPattern(
                  numericPatterns.month,
                  string,
                  valueCallback
                );
              // 01, 02, ..., 12
              case 'MM':
                return parseNDigits(2, string, valueCallback);
              // 1st, 2nd, ..., 12th
              case 'Mo':
                return match.ordinalNumber(string, {
                  unit: 'month',
                  valueCallback: valueCallback
                });
              // Jan, Feb, ..., Dec
              case 'MMM':
                return (
                  match.month(string, {
                    width: 'abbreviated',
                    context: 'formatting'
                  }) ||
                  match.month(string, {
                    width: 'narrow',
                    context: 'formatting'
                  })
                );
              // J, F, ..., D
              case 'MMMMM':
                return match.month(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // January, February, ..., December
              case 'MMMM':
              default:
                return (
                  match.month(string, {
                    width: 'wide',
                    context: 'formatting'
                  }) ||
                  match.month(string, {
                    width: 'abbreviated',
                    context: 'formatting'
                  }) ||
                  match.month(string, {
                    width: 'narrow',
                    context: 'formatting'
                  })
                );
            }
          },
          validate: function validate(date, value, options) {
            return value >= 0 && value <= 11;
          },
          set: function set(date, value, options) {
            date.setUTCMonth(value, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },

        // Stand-alone month
        L: {
          priority: 110,
          parse: function parse(string, token, match, options) {
            var valueCallback = function valueCallback(value) {
              return value - 1;
            };

            switch (token) {
              // 1, 2, ..., 12
              case 'L':
                return parseNumericPattern(
                  numericPatterns.month,
                  string,
                  valueCallback
                );
              // 01, 02, ..., 12
              case 'LL':
                return parseNDigits(2, string, valueCallback);
              // 1st, 2nd, ..., 12th
              case 'Lo':
                return match.ordinalNumber(string, {
                  unit: 'month',
                  valueCallback: valueCallback
                });
              // Jan, Feb, ..., Dec
              case 'LLL':
                return (
                  match.month(string, {
                    width: 'abbreviated',
                    context: 'standalone'
                  }) ||
                  match.month(string, {
                    width: 'narrow',
                    context: 'standalone'
                  })
                );
              // J, F, ..., D
              case 'LLLLL':
                return match.month(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // January, February, ..., December
              case 'LLLL':
              default:
                return (
                  match.month(string, {
                    width: 'wide',
                    context: 'standalone'
                  }) ||
                  match.month(string, {
                    width: 'abbreviated',
                    context: 'standalone'
                  }) ||
                  match.month(string, {
                    width: 'narrow',
                    context: 'standalone'
                  })
                );
            }
          },
          validate: function validate(date, value, options) {
            return value >= 0 && value <= 11;
          },
          set: function set(date, value, options) {
            date.setUTCMonth(value, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },

        // Local week of year
        w: {
          priority: 100,
          parse: function parse(string, token, match, options) {
            switch (token) {
              case 'w':
                return parseNumericPattern(numericPatterns.week, string);
              case 'wo':
                return match.ordinalNumber(string, { unit: 'week' });
              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(date, value, options) {
            return value >= 1 && value <= 53;
          },
          set: function set(date, value, options) {
            return (0, _index8.default)(
              (0, _index6.default)(date, value, options),
              options
            );
          }
        },

        // ISO week of year
        I: {
          priority: 100,
          parse: function parse(string, token, match, options) {
            switch (token) {
              case 'I':
                return parseNumericPattern(numericPatterns.week, string);
              case 'Io':
                return match.ordinalNumber(string, { unit: 'week' });
              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(date, value, options) {
            return value >= 1 && value <= 53;
          },
          set: function set(date, value, options) {
            return (0, _index14.default)(
              (0, _index12.default)(date, value, options),
              options
            );
          }
        },

        // Day of the month
        d: {
          priority: 90,
          parse: function parse(string, token, match, options) {
            switch (token) {
              case 'd':
                return parseNumericPattern(numericPatterns.date, string);
              case 'do':
                return match.ordinalNumber(string, { unit: 'date' });
              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(date, value, options) {
            var year = date.getUTCFullYear();
            var isLeapYear = isLeapYearIndex(year);
            var month = date.getUTCMonth();
            if (isLeapYear) {
              return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
            } else {
              return value >= 1 && value <= DAYS_IN_MONTH[month];
            }
          },
          set: function set(date, value, options) {
            date.setUTCDate(value);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },

        // Day of year
        D: {
          priority: 90,
          parse: function parse(string, token, match, options) {
            switch (token) {
              case 'D':
              case 'DD':
                return parseNumericPattern(numericPatterns.dayOfYear, string);
              case 'Do':
                return match.ordinalNumber(string, { unit: 'date' });
              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(date, value, options) {
            var year = date.getUTCFullYear();
            var isLeapYear = isLeapYearIndex(year);
            if (isLeapYear) {
              return value >= 1 && value <= 366;
            } else {
              return value >= 1 && value <= 365;
            }
          },
          set: function set(date, value, options) {
            date.setUTCMonth(0, value);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },

        // Day of week
        E: {
          priority: 90,
          parse: function parse(string, token, match, options) {
            switch (token) {
              // Tue
              case 'E':
              case 'EE':
              case 'EEE':
                return (
                  match.day(string, {
                    width: 'abbreviated',
                    context: 'formatting'
                  }) ||
                  match.day(string, {
                    width: 'short',
                    context: 'formatting'
                  }) ||
                  match.day(string, { width: 'narrow', context: 'formatting' })
                );
              // T
              case 'EEEEE':
                return match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // Tu
              case 'EEEEEE':
                return (
                  match.day(string, {
                    width: 'short',
                    context: 'formatting'
                  }) ||
                  match.day(string, { width: 'narrow', context: 'formatting' })
                );
              // Tuesday
              case 'EEEE':
              default:
                return (
                  match.day(string, { width: 'wide', context: 'formatting' }) ||
                  match.day(string, {
                    width: 'abbreviated',
                    context: 'formatting'
                  }) ||
                  match.day(string, {
                    width: 'short',
                    context: 'formatting'
                  }) ||
                  match.day(string, { width: 'narrow', context: 'formatting' })
                );
            }
          },
          validate: function validate(date, value, options) {
            return value >= 0 && value <= 6;
          },
          set: function set(date, value, options) {
            date = (0, _index4.default)(date, value, options);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },

        // Local day of week
        e: {
          priority: 90,
          parse: function parse(string, token, match, options) {
            var valueCallback = function valueCallback(value) {
              var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
              return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;
            };

            switch (token) {
              // 3
              case 'e':
              case 'ee':
                // 03
                return parseNDigits(token.length, string, valueCallback);
              // 3rd
              case 'eo':
                return match.ordinalNumber(string, {
                  unit: 'day',
                  valueCallback: valueCallback
                });
              // Tue
              case 'eee':
                return (
                  match.day(string, {
                    width: 'abbreviated',
                    context: 'formatting'
                  }) ||
                  match.day(string, {
                    width: 'short',
                    context: 'formatting'
                  }) ||
                  match.day(string, { width: 'narrow', context: 'formatting' })
                );
              // T
              case 'eeeee':
                return match.day(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              // Tu
              case 'eeeeee':
                return (
                  match.day(string, {
                    width: 'short',
                    context: 'formatting'
                  }) ||
                  match.day(string, { width: 'narrow', context: 'formatting' })
                );
              // Tuesday
              case 'eeee':
              default:
                return (
                  match.day(string, { width: 'wide', context: 'formatting' }) ||
                  match.day(string, {
                    width: 'abbreviated',
                    context: 'formatting'
                  }) ||
                  match.day(string, {
                    width: 'short',
                    context: 'formatting'
                  }) ||
                  match.day(string, { width: 'narrow', context: 'formatting' })
                );
            }
          },
          validate: function validate(date, value, options) {
            return value >= 0 && value <= 6;
          },
          set: function set(date, value, options) {
            date = (0, _index4.default)(date, value, options);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },

        // Stand-alone local day of week
        c: {
          priority: 90,
          parse: function parse(string, token, match, options) {
            var valueCallback = function valueCallback(value) {
              var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
              return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;
            };

            switch (token) {
              // 3
              case 'c':
              case 'cc':
                // 03
                return parseNDigits(token.length, string, valueCallback);
              // 3rd
              case 'co':
                return match.ordinalNumber(string, {
                  unit: 'day',
                  valueCallback: valueCallback
                });
              // Tue
              case 'ccc':
                return (
                  match.day(string, {
                    width: 'abbreviated',
                    context: 'standalone'
                  }) ||
                  match.day(string, {
                    width: 'short',
                    context: 'standalone'
                  }) ||
                  match.day(string, { width: 'narrow', context: 'standalone' })
                );
              // T
              case 'ccccc':
                return match.day(string, {
                  width: 'narrow',
                  context: 'standalone'
                });
              // Tu
              case 'cccccc':
                return (
                  match.day(string, {
                    width: 'short',
                    context: 'standalone'
                  }) ||
                  match.day(string, { width: 'narrow', context: 'standalone' })
                );
              // Tuesday
              case 'cccc':
              default:
                return (
                  match.day(string, { width: 'wide', context: 'standalone' }) ||
                  match.day(string, {
                    width: 'abbreviated',
                    context: 'standalone'
                  }) ||
                  match.day(string, {
                    width: 'short',
                    context: 'standalone'
                  }) ||
                  match.day(string, { width: 'narrow', context: 'standalone' })
                );
            }
          },
          validate: function validate(date, value, options) {
            return value >= 0 && value <= 6;
          },
          set: function set(date, value, options) {
            date = (0, _index4.default)(date, value, options);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },

        // ISO day of week
        i: {
          priority: 90,
          parse: function parse(string, token, match, options) {
            var valueCallback = function valueCallback(value) {
              if (value === 0) {
                return 7;
              }
              return value;
            };

            switch (token) {
              // 2
              case 'i':
              case 'ii':
                // 02
                return parseNDigits(token.length, string);
              // 2nd
              case 'io':
                return match.ordinalNumber(string, { unit: 'day' });
              // Tue
              case 'iii':
                return (
                  match.day(string, {
                    width: 'abbreviated',
                    context: 'formatting',
                    valueCallback: valueCallback
                  }) ||
                  match.day(string, {
                    width: 'short',
                    context: 'formatting',
                    valueCallback: valueCallback
                  }) ||
                  match.day(string, {
                    width: 'narrow',
                    context: 'formatting',
                    valueCallback: valueCallback
                  })
                );
              // T
              case 'iiiii':
                return match.day(string, {
                  width: 'narrow',
                  context: 'formatting',
                  valueCallback: valueCallback
                });
              // Tu
              case 'iiiiii':
                return (
                  match.day(string, {
                    width: 'short',
                    context: 'formatting',
                    valueCallback: valueCallback
                  }) ||
                  match.day(string, {
                    width: 'narrow',
                    context: 'formatting',
                    valueCallback: valueCallback
                  })
                );
              // Tuesday
              case 'iiii':
              default:
                return (
                  match.day(string, {
                    width: 'wide',
                    context: 'formatting',
                    valueCallback: valueCallback
                  }) ||
                  match.day(string, {
                    width: 'abbreviated',
                    context: 'formatting',
                    valueCallback: valueCallback
                  }) ||
                  match.day(string, {
                    width: 'short',
                    context: 'formatting',
                    valueCallback: valueCallback
                  }) ||
                  match.day(string, {
                    width: 'narrow',
                    context: 'formatting',
                    valueCallback: valueCallback
                  })
                );
            }
          },
          validate: function validate(date, value, options) {
            return value >= 1 && value <= 7;
          },
          set: function set(date, value, options) {
            date = (0, _index10.default)(date, value, options);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }
        },

        // AM or PM
        a: {
          priority: 80,
          parse: function parse(string, token, match, options) {
            switch (token) {
              case 'a':
              case 'aa':
              case 'aaa':
                return (
                  match.dayPeriod(string, {
                    width: 'abbreviated',
                    context: 'formatting'
                  }) ||
                  match.dayPeriod(string, {
                    width: 'narrow',
                    context: 'formatting'
                  })
                );
              case 'aaaaa':
                return match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              case 'aaaa':
              default:
                return (
                  match.dayPeriod(string, {
                    width: 'wide',
                    context: 'formatting'
                  }) ||
                  match.dayPeriod(string, {
                    width: 'abbreviated',
                    context: 'formatting'
                  }) ||
                  match.dayPeriod(string, {
                    width: 'narrow',
                    context: 'formatting'
                  })
                );
            }
          },
          set: function set(date, value, options) {
            date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
            return date;
          }
        },

        // AM, PM, midnight
        b: {
          priority: 80,
          parse: function parse(string, token, match, options) {
            switch (token) {
              case 'b':
              case 'bb':
              case 'bbb':
                return (
                  match.dayPeriod(string, {
                    width: 'abbreviated',
                    context: 'formatting'
                  }) ||
                  match.dayPeriod(string, {
                    width: 'narrow',
                    context: 'formatting'
                  })
                );
              case 'bbbbb':
                return match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              case 'bbbb':
              default:
                return (
                  match.dayPeriod(string, {
                    width: 'wide',
                    context: 'formatting'
                  }) ||
                  match.dayPeriod(string, {
                    width: 'abbreviated',
                    context: 'formatting'
                  }) ||
                  match.dayPeriod(string, {
                    width: 'narrow',
                    context: 'formatting'
                  })
                );
            }
          },
          set: function set(date, value, options) {
            date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
            return date;
          }
        },

        // in the morning, in the afternoon, in the evening, at night
        B: {
          priority: 80,
          parse: function parse(string, token, match, options) {
            switch (token) {
              case 'B':
              case 'BB':
              case 'BBB':
                return (
                  match.dayPeriod(string, {
                    width: 'abbreviated',
                    context: 'formatting'
                  }) ||
                  match.dayPeriod(string, {
                    width: 'narrow',
                    context: 'formatting'
                  })
                );
              case 'BBBBB':
                return match.dayPeriod(string, {
                  width: 'narrow',
                  context: 'formatting'
                });
              case 'BBBB':
              default:
                return (
                  match.dayPeriod(string, {
                    width: 'wide',
                    context: 'formatting'
                  }) ||
                  match.dayPeriod(string, {
                    width: 'abbreviated',
                    context: 'formatting'
                  }) ||
                  match.dayPeriod(string, {
                    width: 'narrow',
                    context: 'formatting'
                  })
                );
            }
          },
          set: function set(date, value, options) {
            date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
            return date;
          }
        },

        // Hour [1-12]
        h: {
          priority: 70,
          parse: function parse(string, token, match, options) {
            switch (token) {
              case 'h':
                return parseNumericPattern(numericPatterns.hour12h, string);
              case 'ho':
                return match.ordinalNumber(string, { unit: 'hour' });
              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(date, value, options) {
            return value >= 1 && value <= 12;
          },
          set: function set(date, value, options) {
            var isPM = date.getUTCHours() >= 12;
            if (isPM && value < 12) {
              date.setUTCHours(value + 12, 0, 0, 0);
            } else if (!isPM && value === 12) {
              date.setUTCHours(0, 0, 0, 0);
            } else {
              date.setUTCHours(value, 0, 0, 0);
            }
            return date;
          }
        },

        // Hour [0-23]
        H: {
          priority: 70,
          parse: function parse(string, token, match, options) {
            switch (token) {
              case 'H':
                return parseNumericPattern(numericPatterns.hour23h, string);
              case 'Ho':
                return match.ordinalNumber(string, { unit: 'hour' });
              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(date, value, options) {
            return value >= 0 && value <= 23;
          },
          set: function set(date, value, options) {
            date.setUTCHours(value, 0, 0, 0);
            return date;
          }
        },

        // Hour [0-11]
        K: {
          priority: 70,
          parse: function parse(string, token, match, options) {
            switch (token) {
              case 'K':
                return parseNumericPattern(numericPatterns.hour11h, string);
              case 'Ko':
                return match.ordinalNumber(string, { unit: 'hour' });
              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(date, value, options) {
            return value >= 0 && value <= 11;
          },
          set: function set(date, value, options) {
            var isPM = date.getUTCHours() >= 12;
            if (isPM && value < 12) {
              date.setUTCHours(value + 12, 0, 0, 0);
            } else {
              date.setUTCHours(value, 0, 0, 0);
            }
            return date;
          }
        },

        // Hour [1-24]
        k: {
          priority: 70,
          parse: function parse(string, token, match, options) {
            switch (token) {
              case 'k':
                return parseNumericPattern(numericPatterns.hour24h, string);
              case 'ko':
                return match.ordinalNumber(string, { unit: 'hour' });
              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(date, value, options) {
            return value >= 1 && value <= 24;
          },
          set: function set(date, value, options) {
            var hours = value <= 24 ? value % 24 : value;
            date.setUTCHours(hours, 0, 0, 0);
            return date;
          }
        },

        // Minute
        m: {
          priority: 60,
          parse: function parse(string, token, match, options) {
            switch (token) {
              case 'm':
                return parseNumericPattern(numericPatterns.minute, string);
              case 'mo':
                return match.ordinalNumber(string, { unit: 'minute' });
              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(date, value, options) {
            return value >= 0 && value <= 59;
          },
          set: function set(date, value, options) {
            date.setUTCMinutes(value, 0, 0);
            return date;
          }
        },

        // Second
        s: {
          priority: 50,
          parse: function parse(string, token, match, options) {
            switch (token) {
              case 's':
                return parseNumericPattern(numericPatterns.second, string);
              case 'so':
                return match.ordinalNumber(string, { unit: 'second' });
              default:
                return parseNDigits(token.length, string);
            }
          },
          validate: function validate(date, value, options) {
            return value >= 0 && value <= 59;
          },
          set: function set(date, value, options) {
            date.setUTCSeconds(value, 0);
            return date;
          }
        },

        // Fraction of second
        S: {
          priority: 40,
          parse: function parse(string, token, match, options) {
            var valueCallback = function valueCallback(value) {
              return Math.floor(value * Math.pow(10, -token.length + 3));
            };
            return parseNDigits(token.length, string, valueCallback);
          },
          set: function set(date, value, options) {
            date.setUTCMilliseconds(value);
            return date;
          }
        },

        // Timezone (ISO-8601. +00:00 is `'Z'`)
        X: {
          priority: 20,
          parse: function parse(string, token, match, options) {
            switch (token) {
              case 'X':
                return parseTimezonePattern(
                  timezonePatterns.basicOptionalMinutes,
                  string
                );
              case 'XX':
                return parseTimezonePattern(timezonePatterns.basic, string);
              case 'XXXX':
                return parseTimezonePattern(
                  timezonePatterns.basicOptionalSeconds,
                  string
                );
              case 'XXXXX':
                return parseTimezonePattern(
                  timezonePatterns.extendedOptionalSeconds,
                  string
                );
              case 'XXX':
              default:
                return parseTimezonePattern(timezonePatterns.extended, string);
            }
          },
          set: function set(date, value, options) {
            return new Date(date.getTime() - value);
          }
        },

        // Timezone (ISO-8601)
        x: {
          priority: 20,
          parse: function parse(string, token, match, options) {
            switch (token) {
              case 'x':
                return parseTimezonePattern(
                  timezonePatterns.basicOptionalMinutes,
                  string
                );
              case 'xx':
                return parseTimezonePattern(timezonePatterns.basic, string);
              case 'xxxx':
                return parseTimezonePattern(
                  timezonePatterns.basicOptionalSeconds,
                  string
                );
              case 'xxxxx':
                return parseTimezonePattern(
                  timezonePatterns.extendedOptionalSeconds,
                  string
                );
              case 'xxx':
              default:
                return parseTimezonePattern(timezonePatterns.extended, string);
            }
          },
          set: function set(date, value, options) {
            return new Date(date.getTime() - value);
          }
        },

        // Seconds timestamp
        t: {
          priority: 10,
          parse: function parse(string, token, match, options) {
            return parseAnyDigitsSigned(string);
          },
          set: function set(date, value, options) {
            return new Date(value * 1000);
          }
        },

        // Milliseconds timestamp
        T: {
          priority: 10,
          parse: function parse(string, token, match, options) {
            return parseAnyDigitsSigned(string);
          },
          set: function set(date, value, options) {
            return new Date(value);
          }
        }
      };

      exports.default = parsers;
      module.exports = exports['default'];

      /***/
    },
    /* 621 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = setUTCDay;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376
      function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var options = dirtyOptions || {};
        var locale = options.locale;
        var localeWeekStartsOn =
          locale && locale.options && locale.options.weekStartsOn;
        var defaultWeekStartsOn =
          localeWeekStartsOn == null
            ? 0
            : (0, _index2.default)(localeWeekStartsOn);
        var weekStartsOn =
          options.weekStartsOn == null
            ? defaultWeekStartsOn
            : (0, _index2.default)(options.weekStartsOn);

        // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
        if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
          throw new RangeError(
            'weekStartsOn must be between 0 and 6 inclusively'
          );
        }

        var date = (0, _index4.default)(dirtyDate, dirtyOptions);
        var day = (0, _index2.default)(dirtyDay);

        var currentDay = date.getUTCDay();

        var remainder = day % 7;
        var dayIndex = (remainder + 7) % 7;

        var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;

        date.setUTCDate(date.getUTCDate() + diff);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 622 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = setUTCWeek;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      var _index5 = __webpack_require__(565);

      var _index6 = _interopRequireDefault(_index5);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376
      function setUTCWeek(dirtyDate, dirtyWeek, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index4.default)(dirtyDate, dirtyOptions);
        var week = (0, _index2.default)(dirtyWeek);
        var diff = (0, _index6.default)(date, dirtyOptions) - week;
        date.setUTCDate(date.getUTCDate() - diff * 7);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 623 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = setUTCISODay;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376
      function setUTCISODay(dirtyDate, dirtyDay, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var day = (0, _index2.default)(dirtyDay);

        if (day % 7 === 0) {
          day = day - 7;
        }

        var weekStartsOn = 1;
        var date = (0, _index4.default)(dirtyDate, dirtyOptions);
        var currentDay = date.getUTCDay();

        var remainder = day % 7;
        var dayIndex = (remainder + 7) % 7;

        var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;

        date.setUTCDate(date.getUTCDate() + diff);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 624 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.default = setUTCISOWeek;

      var _index = __webpack_require__(546);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(545);

      var _index4 = _interopRequireDefault(_index3);

      var _index5 = __webpack_require__(561);

      var _index6 = _interopRequireDefault(_index5);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      // This function will be a part of public API when UTC function will be implemented.
      // See issue: https://github.com/date-fns/date-fns/issues/376
      function setUTCISOWeek(dirtyDate, dirtyISOWeek, dirtyOptions) {
        if (arguments.length < 2) {
          throw new TypeError(
            '2 arguments required, but only ' + arguments.length + ' present'
          );
        }

        var date = (0, _index4.default)(dirtyDate, dirtyOptions);
        var isoWeek = (0, _index2.default)(dirtyISOWeek);
        var diff = (0, _index6.default)(date, dirtyOptions) - isoWeek;
        date.setUTCDate(date.getUTCDate() - diff * 7);
        return date;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 625 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', { value: true });

      var react = __webpack_require__(328);
      var reactDom = __webpack_require__(334);

      function _inheritsLoose(subClass, superClass) {
        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
      }

      function _objectWithoutProperties(source, excluded) {
        if (source == null) return {};
        var target = {};
        var sourceKeys = Object.keys(source);
        var key, i;

        for (i = 0; i < sourceKeys.length; i++) {
          key = sourceKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }

        if (Object.getOwnPropertySymbols) {
          var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

          for (i = 0; i < sourceSymbolKeys.length; i++) {
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key))
              continue;
            target[key] = source[key];
          }
        }

        return target;
      }

      /**
       * Check whether some DOM node is our Component's node.
       */
      function isNodeFound(current, componentNode, ignoreClass) {
        if (current === componentNode) {
          return true;
        } // SVG <use/> elements do not technically reside in the rendered DOM, so
        // they do not have classList directly, but they offer a link to their
        // corresponding element, which can have classList. This extra check is for
        // that case.
        // See: http://www.w3.org/TR/SVG11/struct.html#InterfaceSVGUseElement
        // Discussion: https://github.com/Pomax/react-onclickoutside/pull/17

        if (current.correspondingElement) {
          return current.correspondingElement.classList.contains(ignoreClass);
        }

        return current.classList.contains(ignoreClass);
      }
      /**
       * Try to find our node in a hierarchy of nodes, returning the document
       * node as highest node if our node is not found in the path up.
       */

      function findHighest(current, componentNode, ignoreClass) {
        if (current === componentNode) {
          return true;
        } // If source=local then this event came from 'somewhere'
        // inside and should be ignored. We could handle this with
        // a layered approach, too, but that requires going back to
        // thinking in terms of Dom node nesting, running counter
        // to React's 'you shouldn't care about the DOM' philosophy.

        while (current.parentNode) {
          if (isNodeFound(current, componentNode, ignoreClass)) {
            return true;
          }

          current = current.parentNode;
        }

        return current;
      }
      /**
       * Check if the browser scrollbar was clicked
       */

      function clickedScrollbar(evt) {
        return (
          document.documentElement.clientWidth <= evt.clientX ||
          document.documentElement.clientHeight <= evt.clientY
        );
      }

      // ideally will get replaced with external dep
      // when rafrex/detect-passive-events#4 and rafrex/detect-passive-events#5 get merged in
      var testPassiveEventSupport = function testPassiveEventSupport() {
        if (
          typeof window === 'undefined' ||
          typeof window.addEventListener !== 'function'
        ) {
          return;
        }

        var passive = false;
        var options = Object.defineProperty({}, 'passive', {
          get: function get() {
            passive = true;
          }
        });

        var noop = function noop() {};

        window.addEventListener('testPassiveEventSupport', noop, options);
        window.removeEventListener('testPassiveEventSupport', noop, options);
        return passive;
      };

      function autoInc(seed) {
        if (seed === void 0) {
          seed = 0;
        }

        return function() {
          return ++seed;
        };
      }

      var uid = autoInc();

      var passiveEventSupport;
      var handlersMap = {};
      var enabledInstances = {};
      var touchEvents = ['touchstart', 'touchmove'];
      var IGNORE_CLASS_NAME = 'ignore-react-onclickoutside';
      /**
       * Options for addEventHandler and removeEventHandler
       */

      function getEventHandlerOptions(instance, eventName) {
        var handlerOptions = null;
        var isTouchEvent = touchEvents.indexOf(eventName) !== -1;

        if (isTouchEvent && passiveEventSupport) {
          handlerOptions = {
            passive: !instance.props.preventDefault
          };
        }

        return handlerOptions;
      }
      /**
       * This function generates the HOC function that you'll use
       * in order to impart onOutsideClick listening to an
       * arbitrary component. It gets called at the end of the
       * bootstrapping code to yield an instance of the
       * onClickOutsideHOC function defined inside setupHOC().
       */

      function onClickOutsideHOC(WrappedComponent, config) {
        var _class, _temp;

        return (
          (_temp = _class =
            /*#__PURE__*/
            (function(_Component) {
              _inheritsLoose(onClickOutside, _Component);

              function onClickOutside(props) {
                var _this;

                _this = _Component.call(this, props) || this;

                _this.__outsideClickHandler = function(event) {
                  if (typeof _this.__clickOutsideHandlerProp === 'function') {
                    _this.__clickOutsideHandlerProp(event);

                    return;
                  }

                  var instance = _this.getInstance();

                  if (typeof instance.props.handleClickOutside === 'function') {
                    instance.props.handleClickOutside(event);
                    return;
                  }

                  if (typeof instance.handleClickOutside === 'function') {
                    instance.handleClickOutside(event);
                    return;
                  }

                  throw new Error(
                    'WrappedComponent lacks a handleClickOutside(event) function for processing outside click events.'
                  );
                };

                _this.enableOnClickOutside = function() {
                  if (
                    typeof document === 'undefined' ||
                    enabledInstances[_this._uid]
                  ) {
                    return;
                  }

                  if (typeof passiveEventSupport === 'undefined') {
                    passiveEventSupport = testPassiveEventSupport();
                  }

                  enabledInstances[_this._uid] = true;
                  var events = _this.props.eventTypes;

                  if (!events.forEach) {
                    events = [events];
                  }

                  handlersMap[_this._uid] = function(event) {
                    if (_this.props.disableOnClickOutside) return;
                    if (_this.componentNode === null) return;

                    if (_this.props.preventDefault) {
                      event.preventDefault();
                    }

                    if (_this.props.stopPropagation) {
                      event.stopPropagation();
                    }

                    if (_this.props.excludeScrollbar && clickedScrollbar(event))
                      return;
                    var current = event.target;

                    if (
                      findHighest(
                        current,
                        _this.componentNode,
                        _this.props.outsideClickIgnoreClass
                      ) !== document
                    ) {
                      return;
                    }

                    _this.__outsideClickHandler(event);
                  };

                  events.forEach(function(eventName) {
                    document.addEventListener(
                      eventName,
                      handlersMap[_this._uid],
                      getEventHandlerOptions(_this, eventName)
                    );
                  });
                };

                _this.disableOnClickOutside = function() {
                  delete enabledInstances[_this._uid];
                  var fn = handlersMap[_this._uid];

                  if (fn && typeof document !== 'undefined') {
                    var events = _this.props.eventTypes;

                    if (!events.forEach) {
                      events = [events];
                    }

                    events.forEach(function(eventName) {
                      return document.removeEventListener(
                        eventName,
                        fn,
                        getEventHandlerOptions(_this, eventName)
                      );
                    });
                    delete handlersMap[_this._uid];
                  }
                };

                _this.getRef = function(ref) {
                  return (_this.instanceRef = ref);
                };

                _this._uid = uid();
                return _this;
              }
              /**
               * Access the WrappedComponent's instance.
               */

              var _proto = onClickOutside.prototype;

              _proto.getInstance = function getInstance() {
                if (!WrappedComponent.prototype.isReactComponent) {
                  return this;
                }

                var ref = this.instanceRef;
                return ref.getInstance ? ref.getInstance() : ref;
              };

              /**
               * Add click listeners to the current document,
               * linked to this component's state.
               */
              _proto.componentDidMount = function componentDidMount() {
                // If we are in an environment without a DOM such
                // as shallow rendering or snapshots then we exit
                // early to prevent any unhandled errors being thrown.
                if (
                  typeof document === 'undefined' ||
                  !document.createElement
                ) {
                  return;
                }

                var instance = this.getInstance();

                if (config && typeof config.handleClickOutside === 'function') {
                  this.__clickOutsideHandlerProp = config.handleClickOutside(
                    instance
                  );

                  if (typeof this.__clickOutsideHandlerProp !== 'function') {
                    throw new Error(
                      'WrappedComponent lacks a function for processing outside click events specified by the handleClickOutside config option.'
                    );
                  }
                }

                this.componentNode = reactDom.findDOMNode(this.getInstance());
                this.enableOnClickOutside();
              };

              _proto.componentDidUpdate = function componentDidUpdate() {
                this.componentNode = reactDom.findDOMNode(this.getInstance());
              };
              /**
               * Remove all document's event listeners for this component
               */

              _proto.componentWillUnmount = function componentWillUnmount() {
                this.disableOnClickOutside();
              };
              /**
               * Can be called to explicitly enable event listening
               * for clicks and touches outside of this element.
               */

              /**
               * Pass-through render
               */
              _proto.render = function render() {
                // eslint-disable-next-line no-unused-vars
                var _props = this.props,
                  excludeScrollbar = _props.excludeScrollbar,
                  props = _objectWithoutProperties(_props, [
                    'excludeScrollbar'
                  ]);

                if (WrappedComponent.prototype.isReactComponent) {
                  props.ref = this.getRef;
                } else {
                  props.wrappedRef = this.getRef;
                }

                props.disableOnClickOutside = this.disableOnClickOutside;
                props.enableOnClickOutside = this.enableOnClickOutside;
                return react.createElement(WrappedComponent, props);
              };

              return onClickOutside;
            })(react.Component)),
          (_class.displayName =
            'OnClickOutside(' +
            (WrappedComponent.displayName ||
              WrappedComponent.name ||
              'Component') +
            ')'),
          (_class.defaultProps = {
            eventTypes: ['mousedown', 'touchstart'],
            excludeScrollbar: (config && config.excludeScrollbar) || false,
            outsideClickIgnoreClass: IGNORE_CLASS_NAME,
            preventDefault: false,
            stopPropagation: false
          }),
          (_class.getClass = function() {
            return WrappedComponent.getClass
              ? WrappedComponent.getClass()
              : WrappedComponent;
          }),
          _temp
        );
      }

      exports.IGNORE_CLASS_NAME = IGNORE_CLASS_NAME;
      exports['default'] = onClickOutsideHOC;

      /***/
    },
    /* 626 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _month_dropdown_options = __webpack_require__(627);

      var _month_dropdown_options2 = _interopRequireDefault(
        _month_dropdown_options
      );

      var _reactOnclickoutside = __webpack_require__(625);

      var _reactOnclickoutside2 = _interopRequireDefault(_reactOnclickoutside);

      var _date_utils = __webpack_require__(542);

      var utils = _interopRequireWildcard(_date_utils);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key))
                newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var WrappedMonthDropdownOptions = (0, _reactOnclickoutside2.default)(
        _month_dropdown_options2.default
      );

      var MonthDropdown = (function(_React$Component) {
        _inherits(MonthDropdown, _React$Component);

        function MonthDropdown() {
          var _temp, _this, _ret;

          _classCallCheck(this, MonthDropdown);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              dropdownVisible: false
            }),
            (_this.renderSelectOptions = function(monthNames) {
              return monthNames.map(function(M, i) {
                return _react2.default.createElement(
                  'option',
                  { key: i, value: i },
                  M
                );
              });
            }),
            (_this.renderSelectMode = function(monthNames) {
              return _react2.default.createElement(
                'select',
                {
                  value: _this.props.month,
                  className: 'react-datepicker__month-select',
                  onChange: function onChange(e) {
                    return _this.onChange(e.target.value);
                  }
                },
                _this.renderSelectOptions(monthNames)
              );
            }),
            (_this.renderReadView = function(visible, monthNames) {
              return _react2.default.createElement(
                'div',
                {
                  key: 'read',
                  style: { visibility: visible ? 'visible' : 'hidden' },
                  className: 'react-datepicker__month-read-view',
                  onClick: _this.toggleDropdown
                },
                _react2.default.createElement('span', {
                  className: 'react-datepicker__month-read-view--down-arrow'
                }),
                _react2.default.createElement(
                  'span',
                  {
                    className:
                      'react-datepicker__month-read-view--selected-month'
                  },
                  monthNames[_this.props.month]
                )
              );
            }),
            (_this.renderDropdown = function(monthNames) {
              return _react2.default.createElement(
                WrappedMonthDropdownOptions,
                {
                  key: 'dropdown',
                  ref: 'options',
                  month: _this.props.month,
                  monthNames: monthNames,
                  onChange: _this.onChange,
                  onCancel: _this.toggleDropdown
                }
              );
            }),
            (_this.renderScrollMode = function(monthNames) {
              var dropdownVisible = _this.state.dropdownVisible;

              var result = [_this.renderReadView(!dropdownVisible, monthNames)];
              if (dropdownVisible) {
                result.unshift(_this.renderDropdown(monthNames));
              }
              return result;
            }),
            (_this.onChange = function(month) {
              _this.toggleDropdown();
              if (month !== _this.props.month) {
                _this.props.onChange(month);
              }
            }),
            (_this.toggleDropdown = function() {
              return _this.setState({
                dropdownVisible: !_this.state.dropdownVisible
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        MonthDropdown.prototype.render = function render() {
          var _this2 = this;

          var monthNames = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map(
            this.props.useShortMonthInDropdown
              ? function(M) {
                  return utils.getMonthShortInLocale(M, _this2.props.locale);
                }
              : function(M) {
                  return utils.getMonthInLocale(M, _this2.props.locale);
                }
          );

          var renderedDropdown = void 0;
          switch (this.props.dropdownMode) {
            case 'scroll':
              renderedDropdown = this.renderScrollMode(monthNames);
              break;
            case 'select':
              renderedDropdown = this.renderSelectMode(monthNames);
              break;
          }

          return _react2.default.createElement(
            'div',
            {
              className:
                'react-datepicker__month-dropdown-container react-datepicker__month-dropdown-container--' +
                this.props.dropdownMode
            },
            renderedDropdown
          );
        };

        return MonthDropdown;
      })(_react2.default.Component);

      MonthDropdown.propTypes = {
        dropdownMode: _propTypes2.default.oneOf(['scroll', 'select'])
          .isRequired,
        locale: _propTypes2.default.string,
        month: _propTypes2.default.number.isRequired,
        onChange: _propTypes2.default.func.isRequired,
        useShortMonthInDropdown: _propTypes2.default.bool
      };
      exports.default = MonthDropdown;

      /***/
    },
    /* 627 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var MonthDropdownOptions = (function(_React$Component) {
        _inherits(MonthDropdownOptions, _React$Component);

        function MonthDropdownOptions() {
          var _temp, _this, _ret;

          _classCallCheck(this, MonthDropdownOptions);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.renderOptions = function() {
              return _this.props.monthNames.map(function(month, i) {
                return _react2.default.createElement(
                  'div',
                  {
                    className:
                      _this.props.month === i
                        ? 'react-datepicker__month-option --selected_month'
                        : 'react-datepicker__month-option',
                    key: month,
                    ref: month,
                    onClick: _this.onChange.bind(_this, i)
                  },
                  _this.props.month === i
                    ? _react2.default.createElement(
                        'span',
                        {
                          className: 'react-datepicker__month-option--selected'
                        },
                        '\u2713'
                      )
                    : '',
                  month
                );
              });
            }),
            (_this.onChange = function(month) {
              return _this.props.onChange(month);
            }),
            (_this.handleClickOutside = function() {
              return _this.props.onCancel();
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        MonthDropdownOptions.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'react-datepicker__month-dropdown' },
            this.renderOptions()
          );
        };

        return MonthDropdownOptions;
      })(_react2.default.Component);

      MonthDropdownOptions.propTypes = {
        onCancel: _propTypes2.default.func.isRequired,
        onChange: _propTypes2.default.func.isRequired,
        month: _propTypes2.default.number.isRequired,
        monthNames: _propTypes2.default.arrayOf(
          _propTypes2.default.string.isRequired
        ).isRequired
      };
      exports.default = MonthDropdownOptions;

      /***/
    },
    /* 628 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _month_year_dropdown_options = __webpack_require__(629);

      var _month_year_dropdown_options2 = _interopRequireDefault(
        _month_year_dropdown_options
      );

      var _reactOnclickoutside = __webpack_require__(625);

      var _reactOnclickoutside2 = _interopRequireDefault(_reactOnclickoutside);

      var _date_utils = __webpack_require__(542);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var WrappedMonthYearDropdownOptions = (0, _reactOnclickoutside2.default)(
        _month_year_dropdown_options2.default
      );

      var MonthYearDropdown = (function(_React$Component) {
        _inherits(MonthYearDropdown, _React$Component);

        function MonthYearDropdown() {
          var _temp, _this, _ret;

          _classCallCheck(this, MonthYearDropdown);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              dropdownVisible: false
            }),
            (_this.renderSelectOptions = function() {
              var currDate = (0, _date_utils.getStartOfMonth)(
                _this.props.minDate
              );
              var lastDate = (0, _date_utils.getStartOfMonth)(
                _this.props.maxDate
              );
              var options = [];

              while (!(0, _date_utils.isAfter)(currDate, lastDate)) {
                var timepoint = (0, _date_utils.getTime)(currDate);
                options.push(
                  _react2.default.createElement(
                    'option',
                    { key: timepoint, value: timepoint },
                    (0, _date_utils.formatDate)(
                      currDate,
                      _this.props.dateFormat,
                      _this.props.locale
                    )
                  )
                );

                currDate = (0, _date_utils.addMonths)(currDate, 1);
              }

              return options;
            }),
            (_this.onSelectChange = function(e) {
              _this.onChange(e.target.value);
            }),
            (_this.renderSelectMode = function() {
              return _react2.default.createElement(
                'select',
                {
                  value: (0, _date_utils.getTime)(
                    (0, _date_utils.getStartOfMonth)(_this.props.date)
                  ),
                  className: 'react-datepicker__month-year-select',
                  onChange: _this.onSelectChange
                },
                _this.renderSelectOptions()
              );
            }),
            (_this.renderReadView = function(visible) {
              var yearMonth = (0, _date_utils.formatDate)(
                _this.props.date,
                _this.props.dateFormat,
                _this.props.locale
              );

              return _react2.default.createElement(
                'div',
                {
                  key: 'read',
                  style: { visibility: visible ? 'visible' : 'hidden' },
                  className: 'react-datepicker__month-year-read-view',
                  onClick: function onClick(event) {
                    return _this.toggleDropdown(event);
                  }
                },
                _react2.default.createElement('span', {
                  className:
                    'react-datepicker__month-year-read-view--down-arrow'
                }),
                _react2.default.createElement(
                  'span',
                  {
                    className:
                      'react-datepicker__month-year-read-view--selected-month-year'
                  },
                  yearMonth
                )
              );
            }),
            (_this.renderDropdown = function() {
              return _react2.default.createElement(
                WrappedMonthYearDropdownOptions,
                {
                  key: 'dropdown',
                  ref: 'options',
                  date: _this.props.date,
                  dateFormat: _this.props.dateFormat,
                  onChange: _this.onChange,
                  onCancel: _this.toggleDropdown,
                  minDate: _this.props.minDate,
                  maxDate: _this.props.maxDate,
                  scrollableMonthYearDropdown:
                    _this.props.scrollableMonthYearDropdown
                }
              );
            }),
            (_this.renderScrollMode = function() {
              var dropdownVisible = _this.state.dropdownVisible;

              var result = [_this.renderReadView(!dropdownVisible)];
              if (dropdownVisible) {
                result.unshift(_this.renderDropdown());
              }
              return result;
            }),
            (_this.onChange = function(monthYearPoint) {
              _this.toggleDropdown();

              var changedDate = (0, _date_utils.newDate)(
                parseInt(monthYearPoint)
              );

              if (
                (0, _date_utils.isSameYear)(_this.props.date, changedDate) &&
                (0, _date_utils.isSameMonth)(_this.props.date, changedDate)
              ) {
                return;
              }

              _this.props.onChange(changedDate);
            }),
            (_this.toggleDropdown = function() {
              return _this.setState({
                dropdownVisible: !_this.state.dropdownVisible
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        MonthYearDropdown.prototype.render = function render() {
          var renderedDropdown = void 0;
          switch (this.props.dropdownMode) {
            case 'scroll':
              renderedDropdown = this.renderScrollMode();
              break;
            case 'select':
              renderedDropdown = this.renderSelectMode();
              break;
          }

          return _react2.default.createElement(
            'div',
            {
              className:
                'react-datepicker__month-year-dropdown-container react-datepicker__month-year-dropdown-container--' +
                this.props.dropdownMode
            },
            renderedDropdown
          );
        };

        return MonthYearDropdown;
      })(_react2.default.Component);

      MonthYearDropdown.propTypes = {
        dropdownMode: _propTypes2.default.oneOf(['scroll', 'select'])
          .isRequired,
        dateFormat: _propTypes2.default.string.isRequired,
        locale: _propTypes2.default.string,
        maxDate: _propTypes2.default.instanceOf(Date).isRequired,
        minDate: _propTypes2.default.instanceOf(Date).isRequired,
        date: _propTypes2.default.instanceOf(Date).isRequired,
        onChange: _propTypes2.default.func.isRequired,
        scrollableMonthYearDropdown: _propTypes2.default.bool
      };
      exports.default = MonthYearDropdown;

      /***/
    },
    /* 629 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _classnames = __webpack_require__(541);

      var _classnames2 = _interopRequireDefault(_classnames);

      var _date_utils = __webpack_require__(542);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function generateMonthYears(minDate, maxDate) {
        var list = [];

        var currDate = (0, _date_utils.getStartOfMonth)(minDate);
        var lastDate = (0, _date_utils.getStartOfMonth)(maxDate);

        while (!(0, _date_utils.isAfter)(currDate, lastDate)) {
          list.push((0, _date_utils.newDate)(currDate));

          currDate = (0, _date_utils.addMonths)(currDate, 1);
        }
        return list;
      }

      var MonthYearDropdownOptions = (function(_React$Component) {
        _inherits(MonthYearDropdownOptions, _React$Component);

        function MonthYearDropdownOptions(props) {
          _classCallCheck(this, MonthYearDropdownOptions);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.renderOptions = function() {
            return _this.state.monthYearsList.map(function(monthYear) {
              var monthYearPoint = (0, _date_utils.getTime)(monthYear);
              var isSameMonthYear =
                (0, _date_utils.isSameYear)(_this.props.date, monthYear) &&
                (0, _date_utils.isSameMonth)(_this.props.date, monthYear);

              return _react2.default.createElement(
                'div',
                {
                  className: isSameMonthYear
                    ? 'react-datepicker__month-year-option --selected_month-year'
                    : 'react-datepicker__month-year-option',
                  key: monthYearPoint,
                  ref: monthYearPoint,
                  onClick: _this.onChange.bind(_this, monthYearPoint)
                },
                isSameMonthYear
                  ? _react2.default.createElement(
                      'span',
                      {
                        className:
                          'react-datepicker__month-year-option--selected'
                      },
                      '\u2713'
                    )
                  : '',
                (0, _date_utils.formatDate)(monthYear, _this.props.dateFormat)
              );
            });
          };

          _this.onChange = function(monthYear) {
            return _this.props.onChange(monthYear);
          };

          _this.handleClickOutside = function() {
            _this.props.onCancel();
          };

          _this.state = {
            monthYearsList: generateMonthYears(
              _this.props.minDate,
              _this.props.maxDate
            )
          };
          return _this;
        }

        MonthYearDropdownOptions.prototype.render = function render() {
          var dropdownClass = (0, _classnames2.default)({
            'react-datepicker__month-year-dropdown': true,
            'react-datepicker__month-year-dropdown--scrollable': this.props
              .scrollableMonthYearDropdown
          });

          return _react2.default.createElement(
            'div',
            { className: dropdownClass },
            this.renderOptions()
          );
        };

        return MonthYearDropdownOptions;
      })(_react2.default.Component);

      MonthYearDropdownOptions.propTypes = {
        minDate: _propTypes2.default.instanceOf(Date).isRequired,
        maxDate: _propTypes2.default.instanceOf(Date).isRequired,
        onCancel: _propTypes2.default.func.isRequired,
        onChange: _propTypes2.default.func.isRequired,
        scrollableMonthYearDropdown: _propTypes2.default.bool,
        date: _propTypes2.default.instanceOf(Date).isRequired,
        dateFormat: _propTypes2.default.string.isRequired
      };
      exports.default = MonthYearDropdownOptions;

      /***/
    },
    /* 630 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _classnames = __webpack_require__(541);

      var _classnames2 = _interopRequireDefault(_classnames);

      var _week = __webpack_require__(631);

      var _week2 = _interopRequireDefault(_week);

      var _date_utils = __webpack_require__(542);

      var utils = _interopRequireWildcard(_date_utils);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key))
                newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var FIXED_HEIGHT_STANDARD_WEEK_COUNT = 6;

      var Month = (function(_React$Component) {
        _inherits(Month, _React$Component);

        function Month() {
          var _temp, _this, _ret;

          _classCallCheck(this, Month);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.handleDayClick = function(day, event) {
              if (_this.props.onDayClick) {
                _this.props.onDayClick(day, event);
              }
            }),
            (_this.handleDayMouseEnter = function(day) {
              if (_this.props.onDayMouseEnter) {
                _this.props.onDayMouseEnter(day);
              }
            }),
            (_this.handleMouseLeave = function() {
              if (_this.props.onMouseLeave) {
                _this.props.onMouseLeave();
              }
            }),
            (_this.isWeekInMonth = function(startOfWeek) {
              var day = _this.props.day;
              var endOfWeek = utils.addDays(startOfWeek, 6);
              return (
                utils.isSameMonth(startOfWeek, day) ||
                utils.isSameMonth(endOfWeek, day)
              );
            }),
            (_this.renderWeeks = function() {
              var weeks = [];
              var isFixedHeight = _this.props.fixedHeight;
              var currentWeekStart = utils.getStartOfWeek(
                utils.getStartOfMonth(_this.props.day),
                _this.props.locale
              );
              var i = 0;
              var breakAfterNextPush = false;

              while (true) {
                weeks.push(
                  _react2.default.createElement(_week2.default, {
                    key: i,
                    day: currentWeekStart,
                    month: utils.getMonth(_this.props.day),
                    onDayClick: _this.handleDayClick,
                    onDayMouseEnter: _this.handleDayMouseEnter,
                    onWeekSelect: _this.props.onWeekSelect,
                    formatWeekNumber: _this.props.formatWeekNumber,
                    locale: _this.props.locale,
                    minDate: _this.props.minDate,
                    maxDate: _this.props.maxDate,
                    excludeDates: _this.props.excludeDates,
                    includeDates: _this.props.includeDates,
                    inline: _this.props.inline,
                    highlightDates: _this.props.highlightDates,
                    selectingDate: _this.props.selectingDate,
                    filterDate: _this.props.filterDate,
                    preSelection: _this.props.preSelection,
                    selected: _this.props.selected,
                    selectsStart: _this.props.selectsStart,
                    selectsEnd: _this.props.selectsEnd,
                    showWeekNumber: _this.props.showWeekNumbers,
                    startDate: _this.props.startDate,
                    endDate: _this.props.endDate,
                    dayClassName: _this.props.dayClassName,
                    setOpen: _this.props.setOpen,
                    shouldCloseOnSelect: _this.props.shouldCloseOnSelect,
                    disabledKeyboardNavigation:
                      _this.props.disabledKeyboardNavigation,
                    renderDayContents: _this.props.renderDayContents
                  })
                );

                if (breakAfterNextPush) break;

                i++;
                currentWeekStart = utils.addWeeks(currentWeekStart, 1);

                // If one of these conditions is true, we will either break on this week
                // or break on the next week
                var isFixedAndFinalWeek =
                  isFixedHeight && i >= FIXED_HEIGHT_STANDARD_WEEK_COUNT;
                var isNonFixedAndOutOfMonth =
                  !isFixedHeight && !_this.isWeekInMonth(currentWeekStart);

                if (isFixedAndFinalWeek || isNonFixedAndOutOfMonth) {
                  if (_this.props.peekNextMonth) {
                    breakAfterNextPush = true;
                  } else {
                    break;
                  }
                }
              }

              return weeks;
            }),
            (_this.getClassNames = function() {
              var _this$props = _this.props,
                selectingDate = _this$props.selectingDate,
                selectsStart = _this$props.selectsStart,
                selectsEnd = _this$props.selectsEnd;

              return (0, _classnames2.default)('react-datepicker__month', {
                'react-datepicker__month--selecting-range':
                  selectingDate && (selectsStart || selectsEnd)
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        Month.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            {
              className: this.getClassNames(),
              onMouseLeave: this.handleMouseLeave,
              role: 'listbox',
              'aria-label':
                'month-' + utils.formatDate(this.props.day, 'YYYY-MM')
            },
            this.renderWeeks()
          );
        };

        return Month;
      })(_react2.default.Component);

      Month.propTypes = {
        disabledKeyboardNavigation: _propTypes2.default.bool,
        day: _propTypes2.default.instanceOf(Date).isRequired,
        dayClassName: _propTypes2.default.func,
        endDate: _propTypes2.default.instanceOf(Date),
        excludeDates: _propTypes2.default.array,
        filterDate: _propTypes2.default.func,
        fixedHeight: _propTypes2.default.bool,
        formatWeekNumber: _propTypes2.default.func,
        highlightDates: _propTypes2.default.instanceOf(Map),
        includeDates: _propTypes2.default.array,
        inline: _propTypes2.default.bool,
        locale: _propTypes2.default.string,
        maxDate: _propTypes2.default.instanceOf(Date),
        minDate: _propTypes2.default.instanceOf(Date),
        onDayClick: _propTypes2.default.func,
        onDayMouseEnter: _propTypes2.default.func,
        onMouseLeave: _propTypes2.default.func,
        onWeekSelect: _propTypes2.default.func,
        peekNextMonth: _propTypes2.default.bool,
        preSelection: _propTypes2.default.instanceOf(Date),
        selected: _propTypes2.default.instanceOf(Date),
        selectingDate: _propTypes2.default.instanceOf(Date),
        selectsEnd: _propTypes2.default.bool,
        selectsStart: _propTypes2.default.bool,
        showWeekNumbers: _propTypes2.default.bool,
        startDate: _propTypes2.default.instanceOf(Date),
        setOpen: _propTypes2.default.func,
        shouldCloseOnSelect: _propTypes2.default.bool,
        renderDayContents: _propTypes2.default.func
      };
      exports.default = Month;

      /***/
    },
    /* 631 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _createClass = (function() {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _day = __webpack_require__(632);

      var _day2 = _interopRequireDefault(_day);

      var _week_number = __webpack_require__(633);

      var _week_number2 = _interopRequireDefault(_week_number);

      var _date_utils = __webpack_require__(542);

      var utils = _interopRequireWildcard(_date_utils);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key))
                newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Week = (function(_React$Component) {
        _inherits(Week, _React$Component);

        function Week() {
          var _temp, _this, _ret;

          _classCallCheck(this, Week);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.handleDayClick = function(day, event) {
              if (_this.props.onDayClick) {
                _this.props.onDayClick(day, event);
              }
            }),
            (_this.handleDayMouseEnter = function(day) {
              if (_this.props.onDayMouseEnter) {
                _this.props.onDayMouseEnter(day);
              }
            }),
            (_this.handleWeekClick = function(day, weekNumber, event) {
              if (typeof _this.props.onWeekSelect === 'function') {
                _this.props.onWeekSelect(day, weekNumber, event);
              }
              if (_this.props.shouldCloseOnSelect) {
                _this.props.setOpen(false);
              }
            }),
            (_this.formatWeekNumber = function(startOfWeek) {
              if (_this.props.formatWeekNumber) {
                return _this.props.formatWeekNumber(startOfWeek);
              }
              return utils.getWeek(startOfWeek);
            }),
            (_this.renderDays = function() {
              var startOfWeek = utils.getStartOfWeek(
                _this.props.day,
                _this.props.locale
              );
              var days = [];
              var weekNumber = _this.formatWeekNumber(startOfWeek);
              if (_this.props.showWeekNumber) {
                var onClickAction = _this.props.onWeekSelect
                  ? _this.handleWeekClick.bind(_this, startOfWeek, weekNumber)
                  : undefined;
                days.push(
                  _react2.default.createElement(_week_number2.default, {
                    key: 'W',
                    weekNumber: weekNumber,
                    onClick: onClickAction
                  })
                );
              }
              return days.concat(
                [0, 1, 2, 3, 4, 5, 6].map(function(offset) {
                  var day = utils.addDays(startOfWeek, offset);
                  return _react2.default.createElement(_day2.default, {
                    key: offset,
                    day: day,
                    month: _this.props.month,
                    onClick: _this.handleDayClick.bind(_this, day),
                    onMouseEnter: _this.handleDayMouseEnter.bind(_this, day),
                    minDate: _this.props.minDate,
                    maxDate: _this.props.maxDate,
                    excludeDates: _this.props.excludeDates,
                    includeDates: _this.props.includeDates,
                    inline: _this.props.inline,
                    highlightDates: _this.props.highlightDates,
                    selectingDate: _this.props.selectingDate,
                    filterDate: _this.props.filterDate,
                    preSelection: _this.props.preSelection,
                    selected: _this.props.selected,
                    selectsStart: _this.props.selectsStart,
                    selectsEnd: _this.props.selectsEnd,
                    startDate: _this.props.startDate,
                    endDate: _this.props.endDate,
                    dayClassName: _this.props.dayClassName,
                    renderDayContents: _this.props.renderDayContents,
                    disabledKeyboardNavigation:
                      _this.props.disabledKeyboardNavigation
                  });
                })
              );
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        Week.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'react-datepicker__week' },
            this.renderDays()
          );
        };

        _createClass(Week, null, [
          {
            key: 'defaultProps',
            get: function get() {
              return {
                shouldCloseOnSelect: true
              };
            }
          }
        ]);

        return Week;
      })(_react2.default.Component);

      Week.propTypes = {
        disabledKeyboardNavigation: _propTypes2.default.bool,
        day: _propTypes2.default.instanceOf(Date).isRequired,
        dayClassName: _propTypes2.default.func,
        endDate: _propTypes2.default.instanceOf(Date),
        excludeDates: _propTypes2.default.array,
        filterDate: _propTypes2.default.func,
        formatWeekNumber: _propTypes2.default.func,
        highlightDates: _propTypes2.default.instanceOf(Map),
        includeDates: _propTypes2.default.array,
        inline: _propTypes2.default.bool,
        locale: _propTypes2.default.string,
        maxDate: _propTypes2.default.instanceOf(Date),
        minDate: _propTypes2.default.instanceOf(Date),
        month: _propTypes2.default.number,
        onDayClick: _propTypes2.default.func,
        onDayMouseEnter: _propTypes2.default.func,
        onWeekSelect: _propTypes2.default.func,
        preSelection: _propTypes2.default.instanceOf(Date),
        selected: _propTypes2.default.instanceOf(Date),
        selectingDate: _propTypes2.default.instanceOf(Date),
        selectsEnd: _propTypes2.default.bool,
        selectsStart: _propTypes2.default.bool,
        showWeekNumber: _propTypes2.default.bool,
        startDate: _propTypes2.default.instanceOf(Date),
        setOpen: _propTypes2.default.func,
        shouldCloseOnSelect: _propTypes2.default.bool,
        renderDayContents: _propTypes2.default.func
      };
      exports.default = Week;

      /***/
    },
    /* 632 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _classnames = __webpack_require__(541);

      var _classnames2 = _interopRequireDefault(_classnames);

      var _date_utils = __webpack_require__(542);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Day = (function(_React$Component) {
        _inherits(Day, _React$Component);

        function Day() {
          var _temp, _this, _ret;

          _classCallCheck(this, Day);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.handleClick = function(event) {
              if (!_this.isDisabled() && _this.props.onClick) {
                _this.props.onClick(event);
              }
            }),
            (_this.handleMouseEnter = function(event) {
              if (!_this.isDisabled() && _this.props.onMouseEnter) {
                _this.props.onMouseEnter(event);
              }
            }),
            (_this.isSameDay = function(other) {
              return (0, _date_utils.isSameDay)(_this.props.day, other);
            }),
            (_this.isKeyboardSelected = function() {
              return (
                !_this.props.disabledKeyboardNavigation &&
                !_this.props.inline &&
                !_this.isSameDay(_this.props.selected) &&
                _this.isSameDay(_this.props.preSelection)
              );
            }),
            (_this.isDisabled = function() {
              return (0, _date_utils.isDayDisabled)(
                _this.props.day,
                _this.props
              );
            }),
            (_this.getHighLightedClass = function(defaultClassName) {
              var _this$props = _this.props,
                day = _this$props.day,
                highlightDates = _this$props.highlightDates;

              if (!highlightDates) {
                return false;
              }

              // Looking for className in the Map of {'day string, 'className'}
              var dayStr = (0, _date_utils.formatDate)(day, 'MM.dd.yyyy');
              return highlightDates.get(dayStr);
            }),
            (_this.isInRange = function() {
              var _this$props2 = _this.props,
                day = _this$props2.day,
                startDate = _this$props2.startDate,
                endDate = _this$props2.endDate;

              if (!startDate || !endDate) {
                return false;
              }
              return (0, _date_utils.isDayInRange)(day, startDate, endDate);
            }),
            (_this.isInSelectingRange = function() {
              var _this$props3 = _this.props,
                day = _this$props3.day,
                selectsStart = _this$props3.selectsStart,
                selectsEnd = _this$props3.selectsEnd,
                selectingDate = _this$props3.selectingDate,
                startDate = _this$props3.startDate,
                endDate = _this$props3.endDate;

              if (
                !(selectsStart || selectsEnd) ||
                !selectingDate ||
                _this.isDisabled()
              ) {
                return false;
              }

              if (
                selectsStart &&
                endDate &&
                ((0, _date_utils.isBefore)(selectingDate, endDate) ||
                  (0, _date_utils.isEqual)(selectingDate, endDate))
              ) {
                return (0, _date_utils.isDayInRange)(
                  day,
                  selectingDate,
                  endDate
                );
              }

              if (
                selectsEnd &&
                startDate &&
                ((0, _date_utils.isAfter)(selectingDate, startDate) ||
                  (0, _date_utils.isEqual)(selectingDate, startDate))
              ) {
                return (0, _date_utils.isDayInRange)(
                  day,
                  startDate,
                  selectingDate
                );
              }

              return false;
            }),
            (_this.isSelectingRangeStart = function() {
              if (!_this.isInSelectingRange()) {
                return false;
              }

              var _this$props4 = _this.props,
                day = _this$props4.day,
                selectingDate = _this$props4.selectingDate,
                startDate = _this$props4.startDate,
                selectsStart = _this$props4.selectsStart;

              if (selectsStart) {
                return (0, _date_utils.isSameDay)(day, selectingDate);
              } else {
                return (0, _date_utils.isSameDay)(day, startDate);
              }
            }),
            (_this.isSelectingRangeEnd = function() {
              if (!_this.isInSelectingRange()) {
                return false;
              }

              var _this$props5 = _this.props,
                day = _this$props5.day,
                selectingDate = _this$props5.selectingDate,
                endDate = _this$props5.endDate,
                selectsEnd = _this$props5.selectsEnd;

              if (selectsEnd) {
                return (0, _date_utils.isSameDay)(day, selectingDate);
              } else {
                return (0, _date_utils.isSameDay)(day, endDate);
              }
            }),
            (_this.isRangeStart = function() {
              var _this$props6 = _this.props,
                day = _this$props6.day,
                startDate = _this$props6.startDate,
                endDate = _this$props6.endDate;

              if (!startDate || !endDate) {
                return false;
              }
              return (0, _date_utils.isSameDay)(startDate, day);
            }),
            (_this.isRangeEnd = function() {
              var _this$props7 = _this.props,
                day = _this$props7.day,
                startDate = _this$props7.startDate,
                endDate = _this$props7.endDate;

              if (!startDate || !endDate) {
                return false;
              }
              return (0, _date_utils.isSameDay)(endDate, day);
            }),
            (_this.isWeekend = function() {
              var weekday = (0, _date_utils.getDay)(_this.props.day);
              return weekday === 0 || weekday === 6;
            }),
            (_this.isOutsideMonth = function() {
              return (
                _this.props.month !== undefined &&
                _this.props.month !== (0, _date_utils.getMonth)(_this.props.day)
              );
            }),
            (_this.getClassNames = function(date) {
              var dayClassName = _this.props.dayClassName
                ? _this.props.dayClassName(date)
                : undefined;
              return (0, _classnames2.default)(
                'react-datepicker__day',
                dayClassName,
                'react-datepicker__day--' +
                  (0, _date_utils.getDayOfWeekCode)(_this.props.day),
                {
                  'react-datepicker__day--disabled': _this.isDisabled(),
                  'react-datepicker__day--selected': _this.isSameDay(
                    _this.props.selected
                  ),
                  'react-datepicker__day--keyboard-selected': _this.isKeyboardSelected(),
                  'react-datepicker__day--range-start': _this.isRangeStart(),
                  'react-datepicker__day--range-end': _this.isRangeEnd(),
                  'react-datepicker__day--in-range': _this.isInRange(),
                  'react-datepicker__day--in-selecting-range': _this.isInSelectingRange(),
                  'react-datepicker__day--selecting-range-start': _this.isSelectingRangeStart(),
                  'react-datepicker__day--selecting-range-end': _this.isSelectingRangeEnd(),
                  'react-datepicker__day--today': _this.isSameDay(
                    (0, _date_utils.newDate)()
                  ),
                  'react-datepicker__day--weekend': _this.isWeekend(),
                  'react-datepicker__day--outside-month': _this.isOutsideMonth()
                },
                _this.getHighLightedClass('react-datepicker__day--highlighted')
              );
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        Day.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            {
              className: this.getClassNames(this.props.day),
              onClick: this.handleClick,
              onMouseEnter: this.handleMouseEnter,
              'aria-label': 'day-' + (0, _date_utils.getDate)(this.props.day),
              role: 'option'
            },
            this.props.renderDayContents
              ? this.props.renderDayContents(
                  (0, _date_utils.getDate)(this.props.day)
                )
              : (0, _date_utils.getDate)(this.props.day)
          );
        };

        return Day;
      })(_react2.default.Component);

      Day.propTypes = {
        disabledKeyboardNavigation: _propTypes2.default.bool,
        day: _propTypes2.default.instanceOf(Date).isRequired,
        dayClassName: _propTypes2.default.func,
        endDate: _propTypes2.default.instanceOf(Date),
        highlightDates: _propTypes2.default.instanceOf(Map),
        inline: _propTypes2.default.bool,
        month: _propTypes2.default.number,
        onClick: _propTypes2.default.func,
        onMouseEnter: _propTypes2.default.func,
        preSelection: _propTypes2.default.instanceOf(Date),
        selected: _propTypes2.default.object,
        selectingDate: _propTypes2.default.instanceOf(Date),
        selectsEnd: _propTypes2.default.bool,
        selectsStart: _propTypes2.default.bool,
        startDate: _propTypes2.default.instanceOf(Date),
        renderDayContents: _propTypes2.default.func
      };
      exports.default = Day;

      /***/
    },
    /* 633 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _classnames = __webpack_require__(541);

      var _classnames2 = _interopRequireDefault(_classnames);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var WeekNumber = (function(_React$Component) {
        _inherits(WeekNumber, _React$Component);

        function WeekNumber() {
          var _temp, _this, _ret;

          _classCallCheck(this, WeekNumber);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.handleClick = function(event) {
              if (_this.props.onClick) {
                _this.props.onClick(event);
              }
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        WeekNumber.prototype.render = function render() {
          var weekNumberClasses = {
            'react-datepicker__week-number': true,
            'react-datepicker__week-number--clickable': !!this.props.onClick
          };
          return _react2.default.createElement(
            'div',
            {
              className: (0, _classnames2.default)(weekNumberClasses),
              'aria-label': 'week-' + this.props.weekNumber,
              onClick: this.handleClick
            },
            this.props.weekNumber
          );
        };

        return WeekNumber;
      })(_react2.default.Component);

      WeekNumber.propTypes = {
        weekNumber: _propTypes2.default.number.isRequired,
        onClick: _propTypes2.default.func
      };
      exports.default = WeekNumber;

      /***/
    },
    /* 634 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _createClass = (function() {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _date_utils = __webpack_require__(542);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Time = (function(_React$Component) {
        _inherits(Time, _React$Component);

        function Time() {
          var _temp, _this, _ret;

          _classCallCheck(this, Time);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.handleClick = function(time) {
              if (
                ((_this.props.minTime || _this.props.maxTime) &&
                  (0, _date_utils.isTimeInDisabledRange)(time, _this.props)) ||
                (_this.props.excludeTimes &&
                  (0, _date_utils.isTimeDisabled)(
                    time,
                    _this.props.excludeTimes
                  )) ||
                (_this.props.includeTimes &&
                  !(0, _date_utils.isTimeDisabled)(
                    time,
                    _this.props.includeTimes
                  ))
              ) {
                return;
              }
              _this.props.onChange(time);
            }),
            (_this.liClasses = function(time, currH, currM) {
              var classes = ['react-datepicker__time-list-item'];

              if (
                currH === (0, _date_utils.getHours)(time) &&
                currM === (0, _date_utils.getMinutes)(time)
              ) {
                classes.push('react-datepicker__time-list-item--selected');
              }
              if (
                ((_this.props.minTime || _this.props.maxTime) &&
                  (0, _date_utils.isTimeInDisabledRange)(time, _this.props)) ||
                (_this.props.excludeTimes &&
                  (0, _date_utils.isTimeDisabled)(
                    time,
                    _this.props.excludeTimes
                  )) ||
                (_this.props.includeTimes &&
                  !(0, _date_utils.isTimeDisabled)(
                    time,
                    _this.props.includeTimes
                  ))
              ) {
                classes.push('react-datepicker__time-list-item--disabled');
              }
              if (
                _this.props.injectTimes &&
                ((0, _date_utils.getHours)(time) * 60 +
                  (0, _date_utils.getMinutes)(time)) %
                  _this.props.intervals !==
                  0
              ) {
                classes.push('react-datepicker__time-list-item--injected');
              }

              return classes.join(' ');
            }),
            (_this.renderTimes = function() {
              var times = [];
              var format = _this.props.format ? _this.props.format : 'p';
              var intervals = _this.props.intervals;
              var activeTime = _this.props.selected
                ? _this.props.selected
                : (0, _date_utils.newDate)();
              var currH = (0, _date_utils.getHours)(activeTime);
              var currM = (0, _date_utils.getMinutes)(activeTime);
              var base = (0, _date_utils.getStartOfDay)(
                (0, _date_utils.newDate)()
              );
              var multiplier = 1440 / intervals;
              var sortedInjectTimes =
                _this.props.injectTimes &&
                _this.props.injectTimes.sort(function(a, b) {
                  return a - b;
                });
              for (var i = 0; i < multiplier; i++) {
                var currentTime = (0, _date_utils.addMinutes)(
                  base,
                  i * intervals
                );
                times.push(currentTime);

                if (sortedInjectTimes) {
                  var timesToInject = (0, _date_utils.timesToInjectAfter)(
                    base,
                    currentTime,
                    i,
                    intervals,
                    sortedInjectTimes
                  );
                  times = times.concat(timesToInject);
                }
              }

              return times.map(function(time, i) {
                return _react2.default.createElement(
                  'li',
                  {
                    key: i,
                    onClick: _this.handleClick.bind(_this, time),
                    className: _this.liClasses(time, currH, currM),
                    ref: function ref(li) {
                      if (
                        (currH === (0, _date_utils.getHours)(time) &&
                          currM === (0, _date_utils.getMinutes)(time)) ||
                        (currH === (0, _date_utils.getHours)(time) &&
                          !_this.centerLi)
                      ) {
                        _this.centerLi = li;
                      }
                    }
                  },
                  (0, _date_utils.formatDate)(time, format)
                );
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        Time.prototype.componentDidMount = function componentDidMount() {
          // code to ensure selected time will always be in focus within time window when it first appears
          this.list.scrollTop = Time.calcCenterPosition(
            this.props.monthRef
              ? this.props.monthRef.clientHeight - this.header.clientHeight
              : this.list.clientHeight,
            this.centerLi
          );
        };

        Time.prototype.render = function render() {
          var _this2 = this;

          var height = null;
          if (this.props.monthRef && this.header) {
            height =
              this.props.monthRef.clientHeight - this.header.clientHeight;
          }

          return _react2.default.createElement(
            'div',
            {
              className:
                'react-datepicker__time-container ' +
                (this.props.todayButton
                  ? 'react-datepicker__time-container--with-today-button'
                  : '')
            },
            _react2.default.createElement(
              'div',
              {
                className:
                  'react-datepicker__header react-datepicker__header--time',
                ref: function ref(header) {
                  _this2.header = header;
                }
              },
              _react2.default.createElement(
                'div',
                { className: 'react-datepicker-time__header' },
                this.props.timeCaption
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'react-datepicker__time' },
              _react2.default.createElement(
                'div',
                { className: 'react-datepicker__time-box' },
                _react2.default.createElement(
                  'ul',
                  {
                    className: 'react-datepicker__time-list',
                    ref: function ref(list) {
                      _this2.list = list;
                    },
                    style: height ? { height: height } : {}
                  },
                  this.renderTimes.bind(this)()
                )
              )
            )
          );
        };

        _createClass(Time, null, [
          {
            key: 'defaultProps',
            get: function get() {
              return {
                intervals: 30,
                onTimeChange: function onTimeChange() {},
                todayButton: null,
                timeCaption: 'Time'
              };
            }
          }
        ]);

        return Time;
      })(_react2.default.Component);

      Time.propTypes = {
        format: _propTypes2.default.string,
        includeTimes: _propTypes2.default.array,
        intervals: _propTypes2.default.number,
        selected: _propTypes2.default.instanceOf(Date),
        onChange: _propTypes2.default.func,
        todayButton: _propTypes2.default.node,
        minTime: _propTypes2.default.instanceOf(Date),
        maxTime: _propTypes2.default.instanceOf(Date),
        excludeTimes: _propTypes2.default.array,
        monthRef: _propTypes2.default.object,
        timeCaption: _propTypes2.default.string,
        injectTimes: _propTypes2.default.array
      };

      Time.calcCenterPosition = function(listHeight, centerLiRef) {
        return (
          centerLiRef.offsetTop -
          (listHeight / 2 - centerLiRef.clientHeight / 2)
        );
      };

      exports.default = Time;

      /***/
    },
    /* 635 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.popperPlacementPositions = undefined;

      var _extends =
        Object.assign ||
        function(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function() {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _classnames = __webpack_require__(541);

      var _classnames2 = _interopRequireDefault(_classnames);

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _reactPopper = __webpack_require__(636);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var popperPlacementPositions = (exports.popperPlacementPositions = [
        'bottom',
        'bottom-end',
        'bottom-start',
        'left',
        'left-end',
        'left-start',
        'right',
        'right-end',
        'right-start',
        'top',
        'top-end',
        'top-start'
      ]);

      var PopperComponent = (function(_React$Component) {
        _inherits(PopperComponent, _React$Component);

        function PopperComponent() {
          _classCallCheck(this, PopperComponent);

          return _possibleConstructorReturn(
            this,
            _React$Component.apply(this, arguments)
          );
        }

        PopperComponent.prototype.render = function render() {
          var _props = this.props,
            className = _props.className,
            hidePopper = _props.hidePopper,
            popperComponent = _props.popperComponent,
            popperModifiers = _props.popperModifiers,
            popperPlacement = _props.popperPlacement,
            popperProps = _props.popperProps,
            targetComponent = _props.targetComponent;

          var popper = void 0;

          if (!hidePopper) {
            var classes = (0, _classnames2.default)(
              'react-datepicker-popper',
              className
            );
            popper = _react2.default.createElement(
              _reactPopper.Popper,
              _extends(
                {
                  modifiers: popperModifiers,
                  placement: popperPlacement
                },
                popperProps
              ),
              function(_ref) {
                var ref = _ref.ref,
                  style = _ref.style,
                  placement = _ref.placement,
                  arrowProps = _ref.arrowProps;
                return _react2.default.createElement(
                  'div',
                  _extends(
                    { ref: ref, style: style },
                    {
                      className: classes,
                      'data-placement': placement
                    }
                  ),
                  _react2.default.cloneElement(popperComponent, {
                    arrowProps: arrowProps
                  })
                );
              }
            );
          }

          if (this.props.popperContainer) {
            popper = _react2.default.createElement(
              this.props.popperContainer,
              {},
              popper
            );
          }

          return _react2.default.createElement(
            _reactPopper.Manager,
            null,
            _react2.default.createElement(
              _reactPopper.Reference,
              null,
              function(_ref2) {
                var ref = _ref2.ref;
                return _react2.default.createElement(
                  'div',
                  { ref: ref, className: 'react-datepicker-wrapper' },
                  targetComponent
                );
              }
            ),
            popper
          );
        };

        _createClass(PopperComponent, null, [
          {
            key: 'defaultProps',
            get: function get() {
              return {
                hidePopper: true,
                popperModifiers: {
                  preventOverflow: {
                    enabled: true,
                    escapeWithReference: true,
                    boundariesElement: 'viewport'
                  }
                },
                popperProps: {},
                popperPlacement: 'bottom-start'
              };
            }
          }
        ]);

        return PopperComponent;
      })(_react2.default.Component);

      PopperComponent.propTypes = {
        className: _propTypes2.default.string,
        hidePopper: _propTypes2.default.bool,
        popperComponent: _propTypes2.default.element,
        popperModifiers: _propTypes2.default.object, // <datepicker/> props
        popperPlacement: _propTypes2.default.oneOf(popperPlacementPositions), // <datepicker/> props
        popperContainer: _propTypes2.default.func,
        popperProps: _propTypes2.default.object,
        targetComponent: _propTypes2.default.element
      };
      exports.default = PopperComponent;

      /***/
    },
    /* 636 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.Reference = exports.Manager = exports.placements = exports.Popper = undefined;

      var _Popper = __webpack_require__(637);

      var _Popper2 = _interopRequireDefault(_Popper);

      var _Manager = __webpack_require__(721);

      var _Manager2 = _interopRequireDefault(_Manager);

      var _Reference = __webpack_require__(728);

      var _Reference2 = _interopRequireDefault(_Reference);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.Popper = _Popper2.default;
      exports.placements = _Popper.placements;
      exports.Manager = _Manager2.default;
      exports.Reference = _Reference2.default;

      // Public types

      // Public components

      /***/
    },
    /* 637 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.placements = exports.InnerPopper = undefined;

      var _extends2 = __webpack_require__(638);

      var _extends3 = _interopRequireDefault(_extends2);

      var _classCallCheck2 = __webpack_require__(677);

      var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

      var _possibleConstructorReturn2 = __webpack_require__(678);

      var _possibleConstructorReturn3 = _interopRequireDefault(
        _possibleConstructorReturn2
      );

      var _inherits2 = __webpack_require__(712);

      var _inherits3 = _interopRequireDefault(_inherits2);

      exports.default = Popper;

      var _react = __webpack_require__(328);

      var React = _interopRequireWildcard(_react);

      var _popper = __webpack_require__(720);

      var _popper2 = _interopRequireDefault(_popper);

      var _Manager = __webpack_require__(721);

      var _utils = __webpack_require__(727);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key))
                newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var initialStyle = {
        position: 'absolute',
        top: 0,
        left: 0,
        opacity: 0,
        pointerEvents: 'none'
      };

      var initialArrowStyle = {};

      var InnerPopper = (exports.InnerPopper = (function(_React$Component) {
        (0, _inherits3.default)(InnerPopper, _React$Component);

        function InnerPopper() {
          var _temp, _this, _ret;

          (0, _classCallCheck3.default)(this, InnerPopper);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = (0,
            _possibleConstructorReturn3.default)(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              data: undefined,
              placement: undefined
            }),
            (_this.popperNode = null),
            (_this.arrowNode = null),
            (_this.setPopperNode = function(popperNode) {
              if (_this.popperNode === popperNode) return;

              (0, _utils.safeInvoke)(_this.props.innerRef, popperNode);
              _this.popperNode = popperNode;

              if (!_this.popperInstance) _this.updatePopperInstance();
            }),
            (_this.setArrowNode = function(arrowNode) {
              if (_this.arrowNode === arrowNode) return;
              _this.arrowNode = arrowNode;

              if (!_this.popperInstance) _this.updatePopperInstance();
            }),
            (_this.updateStateModifier = {
              enabled: true,
              order: 900,
              fn: function fn(data) {
                var placement = data.placement;

                _this.setState(
                  { data: data, placement: placement },
                  placement !== _this.state.placement
                    ? _this.scheduleUpdate
                    : undefined
                );
                return data;
              }
            }),
            (_this.getOptions = function() {
              return {
                placement: _this.props.placement,
                eventsEnabled: _this.props.eventsEnabled,
                positionFixed: _this.props.positionFixed,
                modifiers: (0, _extends3.default)({}, _this.props.modifiers, {
                  arrow: {
                    enabled: !!_this.arrowNode,
                    element: _this.arrowNode
                  },
                  applyStyle: { enabled: false },
                  updateStateModifier: _this.updateStateModifier
                })
              };
            }),
            (_this.getPopperStyle = function() {
              return !_this.popperNode || !_this.state.data
                ? initialStyle
                : (0, _extends3.default)(
                    {
                      position: _this.state.data.offsets.popper.position
                    },
                    _this.state.data.styles
                  );
            }),
            (_this.getPopperPlacement = function() {
              return !_this.state.data ? undefined : _this.state.placement;
            }),
            (_this.getArrowStyle = function() {
              return !_this.arrowNode || !_this.state.data
                ? initialArrowStyle
                : _this.state.data.arrowStyles;
            }),
            (_this.getOutOfBoundariesState = function() {
              return _this.state.data ? _this.state.data.hide : undefined;
            }),
            (_this.destroyPopperInstance = function() {
              if (!_this.popperInstance) return;

              _this.popperInstance.destroy();
              _this.popperInstance = null;
            }),
            (_this.updatePopperInstance = function() {
              _this.destroyPopperInstance();

              var _this2 = _this,
                popperNode = _this2.popperNode;
              var referenceElement = _this.props.referenceElement;

              if (!referenceElement || !popperNode) return;

              _this.popperInstance = new _popper2.default(
                referenceElement,
                popperNode,
                _this.getOptions()
              );
            }),
            (_this.scheduleUpdate = function() {
              if (_this.popperInstance) {
                _this.popperInstance.scheduleUpdate();
              }
            }),
            _temp)),
            (0, _possibleConstructorReturn3.default)(_this, _ret)
          );
        }

        InnerPopper.prototype.componentDidUpdate = function componentDidUpdate(
          prevProps,
          prevState
        ) {
          // If the Popper.js options have changed, update the instance (destroy + create)
          if (
            this.props.placement !== prevProps.placement ||
            this.props.eventsEnabled !== prevProps.eventsEnabled ||
            this.props.referenceElement !== prevProps.referenceElement ||
            this.props.positionFixed !== prevProps.positionFixed
          ) {
            this.updatePopperInstance();
            return;
          }

          // A placement difference in state means popper determined a new placement
          // apart from the props value. By the time the popper element is rendered with
          // the new position Popper has already measured it, if the place change triggers
          // a size change it will result in a misaligned popper. So we schedule an update to be sure.
          if (prevState.placement !== this.state.placement) {
            this.scheduleUpdate();
          }
        };

        InnerPopper.prototype.componentWillUnmount = function componentWillUnmount() {
          this.destroyPopperInstance();
        };

        InnerPopper.prototype.render = function render() {
          return (0, _utils.unwrapArray)(this.props.children)({
            ref: this.setPopperNode,
            style: this.getPopperStyle(),
            placement: this.getPopperPlacement(),
            outOfBoundaries: this.getOutOfBoundariesState(),
            scheduleUpdate: this.scheduleUpdate,
            arrowProps: {
              ref: this.setArrowNode,
              style: this.getArrowStyle()
            }
          });
        };

        return InnerPopper;
      })(React.Component));

      InnerPopper.defaultProps = {
        placement: 'bottom',
        eventsEnabled: true,
        referenceElement: undefined,
        positionFixed: false
      };

      var placements = _popper2.default.placements;
      exports.placements = placements;
      function Popper(props) {
        return React.createElement(
          _Manager.ManagerContext.Consumer,
          null,
          function(_ref) {
            var referenceNode = _ref.referenceNode;
            return React.createElement(
              InnerPopper,
              (0, _extends3.default)({ referenceElement: referenceNode }, props)
            );
          }
        );
      }

      /***/
    },
    /* 638 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _assign = __webpack_require__(639);

      var _assign2 = _interopRequireDefault(_assign);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default =
        _assign2.default ||
        function(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

      /***/
    },
    /* 639 */
    /***/ function(module, exports, __webpack_require__) {
      module.exports = { default: __webpack_require__(640), __esModule: true };

      /***/
    },
    /* 640 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(641);
      module.exports = __webpack_require__(644).Object.assign;

      /***/
    },
    /* 641 */
    [838, 642, 658],
    /* 642 */
    /***/ function(module, exports, __webpack_require__) {
      var global = __webpack_require__(643);
      var core = __webpack_require__(644);
      var ctx = __webpack_require__(645);
      var hide = __webpack_require__(647);
      var has = __webpack_require__(657);
      var PROTOTYPE = 'prototype';

      var $export = function(type, name, source) {
        var IS_FORCED = type & $export.F;
        var IS_GLOBAL = type & $export.G;
        var IS_STATIC = type & $export.S;
        var IS_PROTO = type & $export.P;
        var IS_BIND = type & $export.B;
        var IS_WRAP = type & $export.W;
        var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
        var expProto = exports[PROTOTYPE];
        var target = IS_GLOBAL
          ? global
          : IS_STATIC
            ? global[name]
            : (global[name] || {})[PROTOTYPE];
        var key, own, out;
        if (IS_GLOBAL) source = name;
        for (key in source) {
          // contains in native
          own = !IS_FORCED && target && target[key] !== undefined;
          if (own && has(exports, key)) continue;
          // export native or passed
          out = own ? target[key] : source[key];
          // prevent global pollution for namespaces
          exports[key] =
            IS_GLOBAL && typeof target[key] != 'function'
              ? source[key]
              : // bind timers to global for call from export context
                IS_BIND && own
                ? ctx(out, global)
                : // wrap global constructors for prevent change them in library
                  IS_WRAP && target[key] == out
                  ? (function(C) {
                      var F = function(a, b, c) {
                        if (this instanceof C) {
                          switch (arguments.length) {
                            case 0:
                              return new C();
                            case 1:
                              return new C(a);
                            case 2:
                              return new C(a, b);
                          }
                          return new C(a, b, c);
                        }
                        return C.apply(this, arguments);
                      };
                      F[PROTOTYPE] = C[PROTOTYPE];
                      return F;
                      // make static versions for prototype methods
                    })(out)
                  : IS_PROTO && typeof out == 'function'
                    ? ctx(Function.call, out)
                    : out;
          // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
          if (IS_PROTO) {
            (exports.virtual || (exports.virtual = {}))[key] = out;
            // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
            if (type & $export.R && expProto && !expProto[key])
              hide(expProto, key, out);
          }
        }
      };
      // type bitmap
      $export.F = 1; // forced
      $export.G = 2; // global
      $export.S = 4; // static
      $export.P = 8; // proto
      $export.B = 16; // bind
      $export.W = 32; // wrap
      $export.U = 64; // safe
      $export.R = 128; // real proto method for `library`
      module.exports = $export;

      /***/
    },
    /* 643 */
    4,
    /* 644 */
    9,
    /* 645 */
    [812, 646],
    /* 646 */
    21,
    /* 647 */
    [806, 648, 656, 652],
    /* 648 */
    [807, 649, 651, 655, 652],
    /* 649 */
    [808, 650],
    /* 650 */
    13,
    /* 651 */
    [809, 652, 653, 654],
    /* 652 */
    [805, 653],
    /* 653 */
    7,
    /* 654 */
    [810, 650, 643],
    /* 655 */
    [811, 650],
    /* 656 */
    17,
    /* 657 */
    5,
    /* 658 */
    [839, 659, 674, 675, 676, 662, 653],
    /* 659 */
    [820, 660, 673],
    /* 660 */
    [821, 657, 661, 665, 669],
    /* 661 */
    [822, 662, 664],
    /* 662 */
    [823, 663],
    /* 663 */
    34,
    /* 664 */
    35,
    /* 665 */
    [824, 661, 666, 668],
    /* 666 */
    [825, 667],
    /* 667 */
    38,
    /* 668 */
    [826, 667],
    /* 669 */
    [827, 670, 672],
    /* 670 */
    [814, 644, 643, 671],
    /* 671 */
    /***/ function(module, exports) {
      module.exports = true;

      /***/
    },
    /* 672 */
    19,
    /* 673 */
    41,
    /* 674 */
    42,
    /* 675 */
    43,
    /* 676 */
    [836, 664],
    /* 677 */
    /***/ function(module, exports) {
      'use strict';

      exports.__esModule = true;

      exports.default = function(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      };

      /***/
    },
    /* 678 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _typeof2 = __webpack_require__(679);

      var _typeof3 = _interopRequireDefault(_typeof2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = function(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }

        return call &&
          ((typeof call === 'undefined'
            ? 'undefined'
            : (0, _typeof3.default)(call)) === 'object' ||
            typeof call === 'function')
          ? call
          : self;
      };

      /***/
    },
    /* 679 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _iterator = __webpack_require__(680);

      var _iterator2 = _interopRequireDefault(_iterator);

      var _symbol = __webpack_require__(699);

      var _symbol2 = _interopRequireDefault(_symbol);

      var _typeof =
        typeof _symbol2.default === 'function' &&
        typeof _iterator2.default === 'symbol'
          ? function(obj) {
              return typeof obj;
            }
          : function(obj) {
              return obj &&
                typeof _symbol2.default === 'function' &&
                obj.constructor === _symbol2.default &&
                obj !== _symbol2.default.prototype
                ? 'symbol'
                : typeof obj;
            };

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default =
        typeof _symbol2.default === 'function' &&
        _typeof(_iterator2.default) === 'symbol'
          ? function(obj) {
              return typeof obj === 'undefined' ? 'undefined' : _typeof(obj);
            }
          : function(obj) {
              return obj &&
                typeof _symbol2.default === 'function' &&
                obj.constructor === _symbol2.default &&
                obj !== _symbol2.default.prototype
                ? 'symbol'
                : typeof obj === 'undefined'
                  ? 'undefined'
                  : _typeof(obj);
            };

      /***/
    },
    /* 680 */
    /***/ function(module, exports, __webpack_require__) {
      module.exports = { default: __webpack_require__(681), __esModule: true };

      /***/
    },
    /* 681 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(682);
      __webpack_require__(694);
      module.exports = __webpack_require__(698).f('iterator');

      /***/
    },
    /* 682 */
    [842, 683, 684],
    /* 683 */
    [843, 667, 664],
    /* 684 */
    [844, 671, 642, 685, 647, 686, 687, 691, 693, 692],
    /* 685 */
    /***/ function(module, exports, __webpack_require__) {
      module.exports = __webpack_require__(647);

      /***/
    },
    /* 686 */
    129,
    /* 687 */
    [845, 688, 656, 691, 647, 692],
    /* 688 */
    [829, 649, 689, 673, 669, 654, 690],
    /* 689 */
    [830, 648, 649, 659, 652],
    /* 690 */
    [831, 643],
    /* 691 */
    [815, 648, 657, 692],
    /* 692 */
    [816, 670, 672, 643],
    /* 693 */
    [837, 657, 676, 669],
    /* 694 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(695);
      var global = __webpack_require__(643);
      var hide = __webpack_require__(647);
      var Iterators = __webpack_require__(686);
      var TO_STRING_TAG = __webpack_require__(692)('toStringTag');

      var DOMIterables = (
        'CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
        'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
        'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
        'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
        'TextTrackList,TouchList'
      ).split(',');

      for (var i = 0; i < DOMIterables.length; i++) {
        var NAME = DOMIterables[i];
        var Collection = global[NAME];
        var proto = Collection && Collection.prototype;
        if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
        Iterators[NAME] = Iterators.Array;
      }

      /***/
    },
    /* 695 */
    [846, 696, 697, 686, 661, 684],
    /* 696 */
    /***/ function(module, exports) {
      module.exports = function() {
        /* empty */
      };

      /***/
    },
    /* 697 */
    195,
    /* 698 */
    [817, 692],
    /* 699 */
    /***/ function(module, exports, __webpack_require__) {
      module.exports = { default: __webpack_require__(700), __esModule: true };

      /***/
    },
    /* 700 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(701);
      __webpack_require__(709);
      __webpack_require__(710);
      __webpack_require__(711);
      module.exports = __webpack_require__(644).Symbol;

      /***/
    },
    /* 701 */
    [
      804,
      643,
      657,
      652,
      642,
      685,
      702,
      653,
      670,
      691,
      672,
      692,
      698,
      703,
      704,
      705,
      649,
      650,
      661,
      655,
      656,
      688,
      706,
      708,
      648,
      659,
      707,
      675,
      674,
      671,
      647
    ],
    /* 702 */
    [813, 672, 650, 657, 648, 653],
    /* 703 */
    [818, 643, 644, 671, 698, 648],
    /* 704 */
    [819, 659, 674, 675],
    /* 705 */
    [828, 663],
    /* 706 */
    [832, 661, 707],
    /* 707 */
    [833, 660, 673],
    /* 708 */
    [834, 675, 656, 661, 655, 657, 651, 652],
    /* 709 */
    /***/ function(module, exports) {
      /***/
    },
    /* 710 */
    [847, 703],
    /* 711 */
    [848, 703],
    /* 712 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _setPrototypeOf = __webpack_require__(713);

      var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

      var _create = __webpack_require__(717);

      var _create2 = _interopRequireDefault(_create);

      var _typeof2 = __webpack_require__(679);

      var _typeof3 = _interopRequireDefault(_typeof2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = function(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              (typeof superClass === 'undefined'
                ? 'undefined'
                : (0, _typeof3.default)(superClass))
          );
        }

        subClass.prototype = (0, _create2.default)(
          superClass && superClass.prototype,
          {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          }
        );
        if (superClass)
          _setPrototypeOf2.default
            ? (0, _setPrototypeOf2.default)(subClass, superClass)
            : (subClass.__proto__ = superClass);
      };

      /***/
    },
    /* 713 */
    /***/ function(module, exports, __webpack_require__) {
      module.exports = { default: __webpack_require__(714), __esModule: true };

      /***/
    },
    /* 714 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(715);
      module.exports = __webpack_require__(644).Object.setPrototypeOf;

      /***/
    },
    /* 715 */
    [840, 642, 716],
    /* 716 */
    [841, 650, 649, 645, 708],
    /* 717 */
    /***/ function(module, exports, __webpack_require__) {
      module.exports = { default: __webpack_require__(718), __esModule: true };

      /***/
    },
    /* 718 */
    /***/ function(module, exports, __webpack_require__) {
      __webpack_require__(719);
      var $Object = __webpack_require__(644).Object;
      module.exports = function create(P, D) {
        return $Object.create(P, D);
      };

      /***/
    },
    /* 719 */
    [835, 642, 688],
    /* 720 */
    /***/ function(module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function(global) {
        /**!
         * @fileOverview Kickass library to create and place poppers near their reference elements.
         * @version 1.14.4
         * @license
         * Copyright (c) 2016 Federico Zivolo and contributors
         *
         * Permission is hereby granted, free of charge, to any person obtaining a copy
         * of this software and associated documentation files (the "Software"), to deal
         * in the Software without restriction, including without limitation the rights
         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         * copies of the Software, and to permit persons to whom the Software is
         * furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in all
         * copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
         * SOFTWARE.
         */
        (function(global, factory) {
          true
            ? (module.exports = factory())
            : typeof define === 'function' && define.amd
              ? define(factory)
              : (global.Popper = factory());
        })(this, function() {
          'use strict';

          var isBrowser =
            typeof window !== 'undefined' && typeof document !== 'undefined';

          var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
          var timeoutDuration = 0;
          for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
            if (
              isBrowser &&
              navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0
            ) {
              timeoutDuration = 1;
              break;
            }
          }

          function microtaskDebounce(fn) {
            var called = false;
            return function() {
              if (called) {
                return;
              }
              called = true;
              window.Promise.resolve().then(function() {
                called = false;
                fn();
              });
            };
          }

          function taskDebounce(fn) {
            var scheduled = false;
            return function() {
              if (!scheduled) {
                scheduled = true;
                setTimeout(function() {
                  scheduled = false;
                  fn();
                }, timeoutDuration);
              }
            };
          }

          var supportsMicroTasks = isBrowser && window.Promise;

          /**
           * Create a debounced version of a method, that's asynchronously deferred
           * but called in the minimum time possible.
           *
           * @method
           * @memberof Popper.Utils
           * @argument {Function} fn
           * @returns {Function}
           */
          var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

          /**
           * Check if the given variable is a function
           * @method
           * @memberof Popper.Utils
           * @argument {Any} functionToCheck - variable to check
           * @returns {Boolean} answer to: is a function?
           */
          function isFunction(functionToCheck) {
            var getType = {};
            return (
              functionToCheck &&
              getType.toString.call(functionToCheck) === '[object Function]'
            );
          }

          /**
           * Get CSS computed property of the given element
           * @method
           * @memberof Popper.Utils
           * @argument {Eement} element
           * @argument {String} property
           */
          function getStyleComputedProperty(element, property) {
            if (element.nodeType !== 1) {
              return [];
            }
            // NOTE: 1 DOM access here
            var css = getComputedStyle(element, null);
            return property ? css[property] : css;
          }

          /**
           * Returns the parentNode or the host of the element
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @returns {Element} parent
           */
          function getParentNode(element) {
            if (element.nodeName === 'HTML') {
              return element;
            }
            return element.parentNode || element.host;
          }

          /**
           * Returns the scrolling parent of the given element
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @returns {Element} scroll parent
           */
          function getScrollParent(element) {
            // Return body, `getScroll` will take care to get the correct `scrollTop` from it
            if (!element) {
              return document.body;
            }

            switch (element.nodeName) {
              case 'HTML':
              case 'BODY':
                return element.ownerDocument.body;
              case '#document':
                return element.body;
            }

            // Firefox want us to check `-x` and `-y` variations as well

            var _getStyleComputedProp = getStyleComputedProperty(element),
              overflow = _getStyleComputedProp.overflow,
              overflowX = _getStyleComputedProp.overflowX,
              overflowY = _getStyleComputedProp.overflowY;

            if (
              /(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)
            ) {
              return element;
            }

            return getScrollParent(getParentNode(element));
          }

          var isIE11 =
            isBrowser &&
            !!(window.MSInputMethodContext && document.documentMode);
          var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);

          /**
           * Determines if the browser is Internet Explorer
           * @method
           * @memberof Popper.Utils
           * @param {Number} version to check
           * @returns {Boolean} isIE
           */
          function isIE(version) {
            if (version === 11) {
              return isIE11;
            }
            if (version === 10) {
              return isIE10;
            }
            return isIE11 || isIE10;
          }

          /**
           * Returns the offset parent of the given element
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @returns {Element} offset parent
           */
          function getOffsetParent(element) {
            if (!element) {
              return document.documentElement;
            }

            var noOffsetParent = isIE(10) ? document.body : null;

            // NOTE: 1 DOM access here
            var offsetParent = element.offsetParent;
            // Skip hidden elements which don't have an offsetParent
            while (
              offsetParent === noOffsetParent &&
              element.nextElementSibling
            ) {
              offsetParent = (element = element.nextElementSibling)
                .offsetParent;
            }

            var nodeName = offsetParent && offsetParent.nodeName;

            if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
              return element
                ? element.ownerDocument.documentElement
                : document.documentElement;
            }

            // .offsetParent will return the closest TD or TABLE in case
            // no offsetParent is present, I hate this job...
            if (
              ['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&
              getStyleComputedProperty(offsetParent, 'position') === 'static'
            ) {
              return getOffsetParent(offsetParent);
            }

            return offsetParent;
          }

          function isOffsetContainer(element) {
            var nodeName = element.nodeName;

            if (nodeName === 'BODY') {
              return false;
            }
            return (
              nodeName === 'HTML' ||
              getOffsetParent(element.firstElementChild) === element
            );
          }

          /**
           * Finds the root node (document, shadowDOM root) of the given element
           * @method
           * @memberof Popper.Utils
           * @argument {Element} node
           * @returns {Element} root node
           */
          function getRoot(node) {
            if (node.parentNode !== null) {
              return getRoot(node.parentNode);
            }

            return node;
          }

          /**
           * Finds the offset parent common to the two provided nodes
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element1
           * @argument {Element} element2
           * @returns {Element} common offset parent
           */
          function findCommonOffsetParent(element1, element2) {
            // This check is needed to avoid errors in case one of the elements isn't defined for any reason
            if (
              !element1 ||
              !element1.nodeType ||
              !element2 ||
              !element2.nodeType
            ) {
              return document.documentElement;
            }

            // Here we make sure to give as "start" the element that comes first in the DOM
            var order =
              element1.compareDocumentPosition(element2) &
              Node.DOCUMENT_POSITION_FOLLOWING;
            var start = order ? element1 : element2;
            var end = order ? element2 : element1;

            // Get common ancestor container
            var range = document.createRange();
            range.setStart(start, 0);
            range.setEnd(end, 0);
            var commonAncestorContainer = range.commonAncestorContainer;

            // Both nodes are inside #document

            if (
              (element1 !== commonAncestorContainer &&
                element2 !== commonAncestorContainer) ||
              start.contains(end)
            ) {
              if (isOffsetContainer(commonAncestorContainer)) {
                return commonAncestorContainer;
              }

              return getOffsetParent(commonAncestorContainer);
            }

            // one of the nodes is inside shadowDOM, find which one
            var element1root = getRoot(element1);
            if (element1root.host) {
              return findCommonOffsetParent(element1root.host, element2);
            } else {
              return findCommonOffsetParent(element1, getRoot(element2).host);
            }
          }

          /**
           * Gets the scroll value of the given element in the given side (top and left)
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @argument {String} side `top` or `left`
           * @returns {number} amount of scrolled pixels
           */
          function getScroll(element) {
            var side =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : 'top';

            var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
            var nodeName = element.nodeName;

            if (nodeName === 'BODY' || nodeName === 'HTML') {
              var html = element.ownerDocument.documentElement;
              var scrollingElement =
                element.ownerDocument.scrollingElement || html;
              return scrollingElement[upperSide];
            }

            return element[upperSide];
          }

          /*
	 * Sum or subtract the element scroll values (left and top) from a given rect object
	 * @method
	 * @memberof Popper.Utils
	 * @param {Object} rect - Rect object you want to change
	 * @param {HTMLElement} element - The element from the function reads the scroll values
	 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
	 * @return {Object} rect - The modifier rect object
	 */
          function includeScroll(rect, element) {
            var subtract =
              arguments.length > 2 && arguments[2] !== undefined
                ? arguments[2]
                : false;

            var scrollTop = getScroll(element, 'top');
            var scrollLeft = getScroll(element, 'left');
            var modifier = subtract ? -1 : 1;
            rect.top += scrollTop * modifier;
            rect.bottom += scrollTop * modifier;
            rect.left += scrollLeft * modifier;
            rect.right += scrollLeft * modifier;
            return rect;
          }

          /*
	 * Helper to detect borders of a given element
	 * @method
	 * @memberof Popper.Utils
	 * @param {CSSStyleDeclaration} styles
	 * Result of `getStyleComputedProperty` on the given element
	 * @param {String} axis - `x` or `y`
	 * @return {number} borders - The borders size of the given axis
	 */

          function getBordersSize(styles, axis) {
            var sideA = axis === 'x' ? 'Left' : 'Top';
            var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

            return (
              parseFloat(styles['border' + sideA + 'Width'], 10) +
              parseFloat(styles['border' + sideB + 'Width'], 10)
            );
          }

          function getSize(axis, body, html, computedStyle) {
            return Math.max(
              body['offset' + axis],
              body['scroll' + axis],
              html['client' + axis],
              html['offset' + axis],
              html['scroll' + axis],
              isIE(10)
                ? parseInt(html['offset' + axis]) +
                  parseInt(
                    computedStyle[
                      'margin' + (axis === 'Height' ? 'Top' : 'Left')
                    ]
                  ) +
                  parseInt(
                    computedStyle[
                      'margin' + (axis === 'Height' ? 'Bottom' : 'Right')
                    ]
                  )
                : 0
            );
          }

          function getWindowSizes(document) {
            var body = document.body;
            var html = document.documentElement;
            var computedStyle = isIE(10) && getComputedStyle(html);

            return {
              height: getSize('Height', body, html, computedStyle),
              width: getSize('Width', body, html, computedStyle)
            };
          }

          var classCallCheck = function(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          };

          var createClass = (function() {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();

          var defineProperty = function(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
              });
            } else {
              obj[key] = value;
            }

            return obj;
          };

          var _extends =
            Object.assign ||
            function(target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];

                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }

              return target;
            };

          /**
           * Given element offsets, generate an output similar to getBoundingClientRect
           * @method
           * @memberof Popper.Utils
           * @argument {Object} offsets
           * @returns {Object} ClientRect like output
           */
          function getClientRect(offsets) {
            return _extends({}, offsets, {
              right: offsets.left + offsets.width,
              bottom: offsets.top + offsets.height
            });
          }

          /**
           * Get bounding client rect of given element
           * @method
           * @memberof Popper.Utils
           * @param {HTMLElement} element
           * @return {Object} client rect
           */
          function getBoundingClientRect(element) {
            var rect = {};

            // IE10 10 FIX: Please, don't ask, the element isn't
            // considered in DOM in some circumstances...
            // This isn't reproducible in IE10 compatibility mode of IE11
            try {
              if (isIE(10)) {
                rect = element.getBoundingClientRect();
                var scrollTop = getScroll(element, 'top');
                var scrollLeft = getScroll(element, 'left');
                rect.top += scrollTop;
                rect.left += scrollLeft;
                rect.bottom += scrollTop;
                rect.right += scrollLeft;
              } else {
                rect = element.getBoundingClientRect();
              }
            } catch (e) {}

            var result = {
              left: rect.left,
              top: rect.top,
              width: rect.right - rect.left,
              height: rect.bottom - rect.top
            };

            // subtract scrollbar size from sizes
            var sizes =
              element.nodeName === 'HTML'
                ? getWindowSizes(element.ownerDocument)
                : {};
            var width =
              sizes.width || element.clientWidth || result.right - result.left;
            var height =
              sizes.height ||
              element.clientHeight ||
              result.bottom - result.top;

            var horizScrollbar = element.offsetWidth - width;
            var vertScrollbar = element.offsetHeight - height;

            // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
            // we make this check conditional for performance reasons
            if (horizScrollbar || vertScrollbar) {
              var styles = getStyleComputedProperty(element);
              horizScrollbar -= getBordersSize(styles, 'x');
              vertScrollbar -= getBordersSize(styles, 'y');

              result.width -= horizScrollbar;
              result.height -= vertScrollbar;
            }

            return getClientRect(result);
          }

          function getOffsetRectRelativeToArbitraryNode(children, parent) {
            var fixedPosition =
              arguments.length > 2 && arguments[2] !== undefined
                ? arguments[2]
                : false;

            var isIE10 = isIE(10);
            var isHTML = parent.nodeName === 'HTML';
            var childrenRect = getBoundingClientRect(children);
            var parentRect = getBoundingClientRect(parent);
            var scrollParent = getScrollParent(children);

            var styles = getStyleComputedProperty(parent);
            var borderTopWidth = parseFloat(styles.borderTopWidth, 10);
            var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);

            // In cases where the parent is fixed, we must ignore negative scroll in offset calc
            if (fixedPosition && isHTML) {
              parentRect.top = Math.max(parentRect.top, 0);
              parentRect.left = Math.max(parentRect.left, 0);
            }
            var offsets = getClientRect({
              top: childrenRect.top - parentRect.top - borderTopWidth,
              left: childrenRect.left - parentRect.left - borderLeftWidth,
              width: childrenRect.width,
              height: childrenRect.height
            });
            offsets.marginTop = 0;
            offsets.marginLeft = 0;

            // Subtract margins of documentElement in case it's being used as parent
            // we do this only on HTML because it's the only element that behaves
            // differently when margins are applied to it. The margins are included in
            // the box of the documentElement, in the other cases not.
            if (!isIE10 && isHTML) {
              var marginTop = parseFloat(styles.marginTop, 10);
              var marginLeft = parseFloat(styles.marginLeft, 10);

              offsets.top -= borderTopWidth - marginTop;
              offsets.bottom -= borderTopWidth - marginTop;
              offsets.left -= borderLeftWidth - marginLeft;
              offsets.right -= borderLeftWidth - marginLeft;

              // Attach marginTop and marginLeft because in some circumstances we may need them
              offsets.marginTop = marginTop;
              offsets.marginLeft = marginLeft;
            }

            if (
              isIE10 && !fixedPosition
                ? parent.contains(scrollParent)
                : parent === scrollParent && scrollParent.nodeName !== 'BODY'
            ) {
              offsets = includeScroll(offsets, parent);
            }

            return offsets;
          }

          function getViewportOffsetRectRelativeToArtbitraryNode(element) {
            var excludeScroll =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : false;

            var html = element.ownerDocument.documentElement;
            var relativeOffset = getOffsetRectRelativeToArbitraryNode(
              element,
              html
            );
            var width = Math.max(html.clientWidth, window.innerWidth || 0);
            var height = Math.max(html.clientHeight, window.innerHeight || 0);

            var scrollTop = !excludeScroll ? getScroll(html) : 0;
            var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;

            var offset = {
              top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
              left:
                scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
              width: width,
              height: height
            };

            return getClientRect(offset);
          }

          /**
           * Check if the given element is fixed or is inside a fixed parent
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @argument {Element} customContainer
           * @returns {Boolean} answer to "isFixed?"
           */
          function isFixed(element) {
            var nodeName = element.nodeName;
            if (nodeName === 'BODY' || nodeName === 'HTML') {
              return false;
            }
            if (getStyleComputedProperty(element, 'position') === 'fixed') {
              return true;
            }
            return isFixed(getParentNode(element));
          }

          /**
           * Finds the first parent of an element that has a transformed property defined
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @returns {Element} first transformed parent or documentElement
           */

          function getFixedPositionOffsetParent(element) {
            // This check is needed to avoid errors in case one of the elements isn't defined for any reason
            if (!element || !element.parentElement || isIE()) {
              return document.documentElement;
            }
            var el = element.parentElement;
            while (el && getStyleComputedProperty(el, 'transform') === 'none') {
              el = el.parentElement;
            }
            return el || document.documentElement;
          }

          /**
           * Computed the boundaries limits and return them
           * @method
           * @memberof Popper.Utils
           * @param {HTMLElement} popper
           * @param {HTMLElement} reference
           * @param {number} padding
           * @param {HTMLElement} boundariesElement - Element used to define the boundaries
           * @param {Boolean} fixedPosition - Is in fixed position mode
           * @returns {Object} Coordinates of the boundaries
           */
          function getBoundaries(
            popper,
            reference,
            padding,
            boundariesElement
          ) {
            var fixedPosition =
              arguments.length > 4 && arguments[4] !== undefined
                ? arguments[4]
                : false;

            // NOTE: 1 DOM access here

            var boundaries = { top: 0, left: 0 };
            var offsetParent = fixedPosition
              ? getFixedPositionOffsetParent(popper)
              : findCommonOffsetParent(popper, reference);

            // Handle viewport case
            if (boundariesElement === 'viewport') {
              boundaries = getViewportOffsetRectRelativeToArtbitraryNode(
                offsetParent,
                fixedPosition
              );
            } else {
              // Handle other cases based on DOM element used as boundaries
              var boundariesNode = void 0;
              if (boundariesElement === 'scrollParent') {
                boundariesNode = getScrollParent(getParentNode(reference));
                if (boundariesNode.nodeName === 'BODY') {
                  boundariesNode = popper.ownerDocument.documentElement;
                }
              } else if (boundariesElement === 'window') {
                boundariesNode = popper.ownerDocument.documentElement;
              } else {
                boundariesNode = boundariesElement;
              }

              var offsets = getOffsetRectRelativeToArbitraryNode(
                boundariesNode,
                offsetParent,
                fixedPosition
              );

              // In case of HTML, we need a different computation
              if (
                boundariesNode.nodeName === 'HTML' &&
                !isFixed(offsetParent)
              ) {
                var _getWindowSizes = getWindowSizes(popper.ownerDocument),
                  height = _getWindowSizes.height,
                  width = _getWindowSizes.width;

                boundaries.top += offsets.top - offsets.marginTop;
                boundaries.bottom = height + offsets.top;
                boundaries.left += offsets.left - offsets.marginLeft;
                boundaries.right = width + offsets.left;
              } else {
                // for all the other DOM elements, this one is good
                boundaries = offsets;
              }
            }

            // Add paddings
            padding = padding || 0;
            var isPaddingNumber = typeof padding === 'number';
            boundaries.left += isPaddingNumber ? padding : padding.left || 0;
            boundaries.top += isPaddingNumber ? padding : padding.top || 0;
            boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
            boundaries.bottom -= isPaddingNumber
              ? padding
              : padding.bottom || 0;

            return boundaries;
          }

          function getArea(_ref) {
            var width = _ref.width,
              height = _ref.height;

            return width * height;
          }

          /**
           * Utility used to transform the `auto` placement to the placement with more
           * available space.
           * @method
           * @memberof Popper.Utils
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function computeAutoPlacement(
            placement,
            refRect,
            popper,
            reference,
            boundariesElement
          ) {
            var padding =
              arguments.length > 5 && arguments[5] !== undefined
                ? arguments[5]
                : 0;

            if (placement.indexOf('auto') === -1) {
              return placement;
            }

            var boundaries = getBoundaries(
              popper,
              reference,
              padding,
              boundariesElement
            );

            var rects = {
              top: {
                width: boundaries.width,
                height: refRect.top - boundaries.top
              },
              right: {
                width: boundaries.right - refRect.right,
                height: boundaries.height
              },
              bottom: {
                width: boundaries.width,
                height: boundaries.bottom - refRect.bottom
              },
              left: {
                width: refRect.left - boundaries.left,
                height: boundaries.height
              }
            };

            var sortedAreas = Object.keys(rects)
              .map(function(key) {
                return _extends(
                  {
                    key: key
                  },
                  rects[key],
                  {
                    area: getArea(rects[key])
                  }
                );
              })
              .sort(function(a, b) {
                return b.area - a.area;
              });

            var filteredAreas = sortedAreas.filter(function(_ref2) {
              var width = _ref2.width,
                height = _ref2.height;
              return (
                width >= popper.clientWidth && height >= popper.clientHeight
              );
            });

            var computedPlacement =
              filteredAreas.length > 0
                ? filteredAreas[0].key
                : sortedAreas[0].key;

            var variation = placement.split('-')[1];

            return computedPlacement + (variation ? '-' + variation : '');
          }

          /**
           * Get offsets to the reference element
           * @method
           * @memberof Popper.Utils
           * @param {Object} state
           * @param {Element} popper - the popper element
           * @param {Element} reference - the reference element (the popper will be relative to this)
           * @param {Element} fixedPosition - is in fixed position mode
           * @returns {Object} An object containing the offsets which will be applied to the popper
           */
          function getReferenceOffsets(state, popper, reference) {
            var fixedPosition =
              arguments.length > 3 && arguments[3] !== undefined
                ? arguments[3]
                : null;

            var commonOffsetParent = fixedPosition
              ? getFixedPositionOffsetParent(popper)
              : findCommonOffsetParent(popper, reference);
            return getOffsetRectRelativeToArbitraryNode(
              reference,
              commonOffsetParent,
              fixedPosition
            );
          }

          /**
           * Get the outer sizes of the given element (offset size + margins)
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @returns {Object} object containing width and height properties
           */
          function getOuterSizes(element) {
            var styles = getComputedStyle(element);
            var x =
              parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);
            var y =
              parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);
            var result = {
              width: element.offsetWidth + y,
              height: element.offsetHeight + x
            };
            return result;
          }

          /**
           * Get the opposite placement of the given one
           * @method
           * @memberof Popper.Utils
           * @argument {String} placement
           * @returns {String} flipped placement
           */
          function getOppositePlacement(placement) {
            var hash = {
              left: 'right',
              right: 'left',
              bottom: 'top',
              top: 'bottom'
            };
            return placement.replace(/left|right|bottom|top/g, function(
              matched
            ) {
              return hash[matched];
            });
          }

          /**
           * Get offsets to the popper
           * @method
           * @memberof Popper.Utils
           * @param {Object} position - CSS position the Popper will get applied
           * @param {HTMLElement} popper - the popper element
           * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
           * @param {String} placement - one of the valid placement options
           * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
           */
          function getPopperOffsets(popper, referenceOffsets, placement) {
            placement = placement.split('-')[0];

            // Get popper node sizes
            var popperRect = getOuterSizes(popper);

            // Add position, width and height to our offsets object
            var popperOffsets = {
              width: popperRect.width,
              height: popperRect.height
            };

            // depending by the popper placement we have to compute its offsets slightly differently
            var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
            var mainSide = isHoriz ? 'top' : 'left';
            var secondarySide = isHoriz ? 'left' : 'top';
            var measurement = isHoriz ? 'height' : 'width';
            var secondaryMeasurement = !isHoriz ? 'height' : 'width';

            popperOffsets[mainSide] =
              referenceOffsets[mainSide] +
              referenceOffsets[measurement] / 2 -
              popperRect[measurement] / 2;
            if (placement === secondarySide) {
              popperOffsets[secondarySide] =
                referenceOffsets[secondarySide] -
                popperRect[secondaryMeasurement];
            } else {
              popperOffsets[secondarySide] =
                referenceOffsets[getOppositePlacement(secondarySide)];
            }

            return popperOffsets;
          }

          /**
           * Mimics the `find` method of Array
           * @method
           * @memberof Popper.Utils
           * @argument {Array} arr
           * @argument prop
           * @argument value
           * @returns index or -1
           */
          function find(arr, check) {
            // use native find if supported
            if (Array.prototype.find) {
              return arr.find(check);
            }

            // use `filter` to obtain the same behavior of `find`
            return arr.filter(check)[0];
          }

          /**
           * Return the index of the matching object
           * @method
           * @memberof Popper.Utils
           * @argument {Array} arr
           * @argument prop
           * @argument value
           * @returns index or -1
           */
          function findIndex(arr, prop, value) {
            // use native findIndex if supported
            if (Array.prototype.findIndex) {
              return arr.findIndex(function(cur) {
                return cur[prop] === value;
              });
            }

            // use `find` + `indexOf` if `findIndex` isn't supported
            var match = find(arr, function(obj) {
              return obj[prop] === value;
            });
            return arr.indexOf(match);
          }

          /**
           * Loop trough the list of modifiers and run them in order,
           * each of them will then edit the data object.
           * @method
           * @memberof Popper.Utils
           * @param {dataObject} data
           * @param {Array} modifiers
           * @param {String} ends - Optional modifier name used as stopper
           * @returns {dataObject}
           */
          function runModifiers(modifiers, data, ends) {
            var modifiersToRun =
              ends === undefined
                ? modifiers
                : modifiers.slice(0, findIndex(modifiers, 'name', ends));

            modifiersToRun.forEach(function(modifier) {
              if (modifier['function']) {
                // eslint-disable-line dot-notation
                console.warn(
                  '`modifier.function` is deprecated, use `modifier.fn`!'
                );
              }
              var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
              if (modifier.enabled && isFunction(fn)) {
                // Add properties to offsets to make them a complete clientRect object
                // we do this before each modifier to make sure the previous one doesn't
                // mess with these values
                data.offsets.popper = getClientRect(data.offsets.popper);
                data.offsets.reference = getClientRect(data.offsets.reference);

                data = fn(data, modifier);
              }
            });

            return data;
          }

          /**
           * Updates the position of the popper, computing the new offsets and applying
           * the new style.<br />
           * Prefer `scheduleUpdate` over `update` because of performance reasons.
           * @method
           * @memberof Popper
           */
          function update() {
            // if popper is destroyed, don't perform any further update
            if (this.state.isDestroyed) {
              return;
            }

            var data = {
              instance: this,
              styles: {},
              arrowStyles: {},
              attributes: {},
              flipped: false,
              offsets: {}
            };

            // compute reference element offsets
            data.offsets.reference = getReferenceOffsets(
              this.state,
              this.popper,
              this.reference,
              this.options.positionFixed
            );

            // compute auto placement, store placement inside the data object,
            // modifiers will be able to edit `placement` if needed
            // and refer to originalPlacement to know the original value
            data.placement = computeAutoPlacement(
              this.options.placement,
              data.offsets.reference,
              this.popper,
              this.reference,
              this.options.modifiers.flip.boundariesElement,
              this.options.modifiers.flip.padding
            );

            // store the computed placement inside `originalPlacement`
            data.originalPlacement = data.placement;

            data.positionFixed = this.options.positionFixed;

            // compute the popper offsets
            data.offsets.popper = getPopperOffsets(
              this.popper,
              data.offsets.reference,
              data.placement
            );

            data.offsets.popper.position = this.options.positionFixed
              ? 'fixed'
              : 'absolute';

            // run the modifiers
            data = runModifiers(this.modifiers, data);

            // the first `update` will call `onCreate` callback
            // the other ones will call `onUpdate` callback
            if (!this.state.isCreated) {
              this.state.isCreated = true;
              this.options.onCreate(data);
            } else {
              this.options.onUpdate(data);
            }
          }

          /**
           * Helper used to know if the given modifier is enabled.
           * @method
           * @memberof Popper.Utils
           * @returns {Boolean}
           */
          function isModifierEnabled(modifiers, modifierName) {
            return modifiers.some(function(_ref) {
              var name = _ref.name,
                enabled = _ref.enabled;
              return enabled && name === modifierName;
            });
          }

          /**
           * Get the prefixed supported property name
           * @method
           * @memberof Popper.Utils
           * @argument {String} property (camelCase)
           * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
           */
          function getSupportedPropertyName(property) {
            var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
            var upperProp =
              property.charAt(0).toUpperCase() + property.slice(1);

            for (var i = 0; i < prefixes.length; i++) {
              var prefix = prefixes[i];
              var toCheck = prefix ? '' + prefix + upperProp : property;
              if (typeof document.body.style[toCheck] !== 'undefined') {
                return toCheck;
              }
            }
            return null;
          }

          /**
           * Destroys the popper.
           * @method
           * @memberof Popper
           */
          function destroy() {
            this.state.isDestroyed = true;

            // touch DOM only if `applyStyle` modifier is enabled
            if (isModifierEnabled(this.modifiers, 'applyStyle')) {
              this.popper.removeAttribute('x-placement');
              this.popper.style.position = '';
              this.popper.style.top = '';
              this.popper.style.left = '';
              this.popper.style.right = '';
              this.popper.style.bottom = '';
              this.popper.style.willChange = '';
              this.popper.style[getSupportedPropertyName('transform')] = '';
            }

            this.disableEventListeners();

            // remove the popper if user explicity asked for the deletion on destroy
            // do not use `remove` because IE11 doesn't support it
            if (this.options.removeOnDestroy) {
              this.popper.parentNode.removeChild(this.popper);
            }
            return this;
          }

          /**
           * Get the window associated with the element
           * @argument {Element} element
           * @returns {Window}
           */
          function getWindow(element) {
            var ownerDocument = element.ownerDocument;
            return ownerDocument ? ownerDocument.defaultView : window;
          }

          function attachToScrollParents(
            scrollParent,
            event,
            callback,
            scrollParents
          ) {
            var isBody = scrollParent.nodeName === 'BODY';
            var target = isBody
              ? scrollParent.ownerDocument.defaultView
              : scrollParent;
            target.addEventListener(event, callback, { passive: true });

            if (!isBody) {
              attachToScrollParents(
                getScrollParent(target.parentNode),
                event,
                callback,
                scrollParents
              );
            }
            scrollParents.push(target);
          }

          /**
           * Setup needed event listeners used to update the popper position
           * @method
           * @memberof Popper.Utils
           * @private
           */
          function setupEventListeners(reference, options, state, updateBound) {
            // Resize event listener on window
            state.updateBound = updateBound;
            getWindow(reference).addEventListener('resize', state.updateBound, {
              passive: true
            });

            // Scroll event listener on scroll parents
            var scrollElement = getScrollParent(reference);
            attachToScrollParents(
              scrollElement,
              'scroll',
              state.updateBound,
              state.scrollParents
            );
            state.scrollElement = scrollElement;
            state.eventsEnabled = true;

            return state;
          }

          /**
           * It will add resize/scroll events and start recalculating
           * position of the popper element when they are triggered.
           * @method
           * @memberof Popper
           */
          function enableEventListeners() {
            if (!this.state.eventsEnabled) {
              this.state = setupEventListeners(
                this.reference,
                this.options,
                this.state,
                this.scheduleUpdate
              );
            }
          }

          /**
           * Remove event listeners used to update the popper position
           * @method
           * @memberof Popper.Utils
           * @private
           */
          function removeEventListeners(reference, state) {
            // Remove resize event listener on window
            getWindow(reference).removeEventListener(
              'resize',
              state.updateBound
            );

            // Remove scroll event listener on scroll parents
            state.scrollParents.forEach(function(target) {
              target.removeEventListener('scroll', state.updateBound);
            });

            // Reset state
            state.updateBound = null;
            state.scrollParents = [];
            state.scrollElement = null;
            state.eventsEnabled = false;
            return state;
          }

          /**
           * It will remove resize/scroll events and won't recalculate popper position
           * when they are triggered. It also won't trigger `onUpdate` callback anymore,
           * unless you call `update` method manually.
           * @method
           * @memberof Popper
           */
          function disableEventListeners() {
            if (this.state.eventsEnabled) {
              cancelAnimationFrame(this.scheduleUpdate);
              this.state = removeEventListeners(this.reference, this.state);
            }
          }

          /**
           * Tells if a given input is a number
           * @method
           * @memberof Popper.Utils
           * @param {*} input to check
           * @return {Boolean}
           */
          function isNumeric(n) {
            return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
          }

          /**
           * Set the style to the given popper
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element - Element to apply the style to
           * @argument {Object} styles
           * Object with a list of properties and values which will be applied to the element
           */
          function setStyles(element, styles) {
            Object.keys(styles).forEach(function(prop) {
              var unit = '';
              // add unit if the value is numeric and is one of the following
              if (
                ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(
                  prop
                ) !== -1 &&
                isNumeric(styles[prop])
              ) {
                unit = 'px';
              }
              element.style[prop] = styles[prop] + unit;
            });
          }

          /**
           * Set the attributes to the given popper
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element - Element to apply the attributes to
           * @argument {Object} styles
           * Object with a list of properties and values which will be applied to the element
           */
          function setAttributes(element, attributes) {
            Object.keys(attributes).forEach(function(prop) {
              var value = attributes[prop];
              if (value !== false) {
                element.setAttribute(prop, attributes[prop]);
              } else {
                element.removeAttribute(prop);
              }
            });
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by `update` method
           * @argument {Object} data.styles - List of style properties - values to apply to popper element
           * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The same data object
           */
          function applyStyle(data) {
            // any property present in `data.styles` will be applied to the popper,
            // in this way we can make the 3rd party modifiers add custom styles to it
            // Be aware, modifiers could override the properties defined in the previous
            // lines of this modifier!
            setStyles(data.instance.popper, data.styles);

            // any property present in `data.attributes` will be applied to the popper,
            // they will be set as HTML attributes of the element
            setAttributes(data.instance.popper, data.attributes);

            // if arrowElement is defined and arrowStyles has some properties
            if (data.arrowElement && Object.keys(data.arrowStyles).length) {
              setStyles(data.arrowElement, data.arrowStyles);
            }

            return data;
          }

          /**
           * Set the x-placement attribute before everything else because it could be used
           * to add margins to the popper margins needs to be calculated to get the
           * correct popper offsets.
           * @method
           * @memberof Popper.modifiers
           * @param {HTMLElement} reference - The reference element used to position the popper
           * @param {HTMLElement} popper - The HTML element used as popper
           * @param {Object} options - Popper.js options
           */
          function applyStyleOnLoad(
            reference,
            popper,
            options,
            modifierOptions,
            state
          ) {
            // compute reference element offsets
            var referenceOffsets = getReferenceOffsets(
              state,
              popper,
              reference,
              options.positionFixed
            );

            // compute auto placement, store placement inside the data object,
            // modifiers will be able to edit `placement` if needed
            // and refer to originalPlacement to know the original value
            var placement = computeAutoPlacement(
              options.placement,
              referenceOffsets,
              popper,
              reference,
              options.modifiers.flip.boundariesElement,
              options.modifiers.flip.padding
            );

            popper.setAttribute('x-placement', placement);

            // Apply `position` to popper before anything else because
            // without the position applied we can't guarantee correct computations
            setStyles(popper, {
              position: options.positionFixed ? 'fixed' : 'absolute'
            });

            return options;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by `update` method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function computeStyle(data, options) {
            var x = options.x,
              y = options.y;
            var popper = data.offsets.popper;

            // Remove this legacy support in Popper.js v2

            var legacyGpuAccelerationOption = find(
              data.instance.modifiers,
              function(modifier) {
                return modifier.name === 'applyStyle';
              }
            ).gpuAcceleration;
            if (legacyGpuAccelerationOption !== undefined) {
              console.warn(
                'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'
              );
            }
            var gpuAcceleration =
              legacyGpuAccelerationOption !== undefined
                ? legacyGpuAccelerationOption
                : options.gpuAcceleration;

            var offsetParent = getOffsetParent(data.instance.popper);
            var offsetParentRect = getBoundingClientRect(offsetParent);

            // Styles
            var styles = {
              position: popper.position
            };

            // Avoid blurry text by using full pixel integers.
            // For pixel-perfect positioning, top/bottom prefers rounded
            // values, while left/right prefers floored values.
            var offsets = {
              left: Math.floor(popper.left),
              top: Math.round(popper.top),
              bottom: Math.round(popper.bottom),
              right: Math.floor(popper.right)
            };

            var sideA = x === 'bottom' ? 'top' : 'bottom';
            var sideB = y === 'right' ? 'left' : 'right';

            // if gpuAcceleration is set to `true` and transform is supported,
            //  we use `translate3d` to apply the position to the popper we
            // automatically use the supported prefixed version if needed
            var prefixedProperty = getSupportedPropertyName('transform');

            // now, let's make a step back and look at this code closely (wtf?)
            // If the content of the popper grows once it's been positioned, it
            // may happen that the popper gets misplaced because of the new content
            // overflowing its reference element
            // To avoid this problem, we provide two options (x and y), which allow
            // the consumer to define the offset origin.
            // If we position a popper on top of a reference element, we can set
            // `x` to `top` to make the popper grow towards its top instead of
            // its bottom.
            var left = void 0,
              top = void 0;
            if (sideA === 'bottom') {
              // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
              // and not the bottom of the html element
              if (offsetParent.nodeName === 'HTML') {
                top = -offsetParent.clientHeight + offsets.bottom;
              } else {
                top = -offsetParentRect.height + offsets.bottom;
              }
            } else {
              top = offsets.top;
            }
            if (sideB === 'right') {
              if (offsetParent.nodeName === 'HTML') {
                left = -offsetParent.clientWidth + offsets.right;
              } else {
                left = -offsetParentRect.width + offsets.right;
              }
            } else {
              left = offsets.left;
            }
            if (gpuAcceleration && prefixedProperty) {
              styles[prefixedProperty] =
                'translate3d(' + left + 'px, ' + top + 'px, 0)';
              styles[sideA] = 0;
              styles[sideB] = 0;
              styles.willChange = 'transform';
            } else {
              // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
              var invertTop = sideA === 'bottom' ? -1 : 1;
              var invertLeft = sideB === 'right' ? -1 : 1;
              styles[sideA] = top * invertTop;
              styles[sideB] = left * invertLeft;
              styles.willChange = sideA + ', ' + sideB;
            }

            // Attributes
            var attributes = {
              'x-placement': data.placement
            };

            // Update `data` attributes, styles and arrowStyles
            data.attributes = _extends({}, attributes, data.attributes);
            data.styles = _extends({}, styles, data.styles);
            data.arrowStyles = _extends(
              {},
              data.offsets.arrow,
              data.arrowStyles
            );

            return data;
          }

          /**
           * Helper used to know if the given modifier depends from another one.<br />
           * It checks if the needed modifier is listed and enabled.
           * @method
           * @memberof Popper.Utils
           * @param {Array} modifiers - list of modifiers
           * @param {String} requestingName - name of requesting modifier
           * @param {String} requestedName - name of requested modifier
           * @returns {Boolean}
           */
          function isModifierRequired(
            modifiers,
            requestingName,
            requestedName
          ) {
            var requesting = find(modifiers, function(_ref) {
              var name = _ref.name;
              return name === requestingName;
            });

            var isRequired =
              !!requesting &&
              modifiers.some(function(modifier) {
                return (
                  modifier.name === requestedName &&
                  modifier.enabled &&
                  modifier.order < requesting.order
                );
              });

            if (!isRequired) {
              var _requesting = '`' + requestingName + '`';
              var requested = '`' + requestedName + '`';
              console.warn(
                requested +
                  ' modifier is required by ' +
                  _requesting +
                  ' modifier in order to work, be sure to include it before ' +
                  _requesting +
                  '!'
              );
            }
            return isRequired;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function arrow(data, options) {
            var _data$offsets$arrow;

            // arrow depends on keepTogether in order to work
            if (
              !isModifierRequired(
                data.instance.modifiers,
                'arrow',
                'keepTogether'
              )
            ) {
              return data;
            }

            var arrowElement = options.element;

            // if arrowElement is a string, suppose it's a CSS selector
            if (typeof arrowElement === 'string') {
              arrowElement = data.instance.popper.querySelector(arrowElement);

              // if arrowElement is not found, don't run the modifier
              if (!arrowElement) {
                return data;
              }
            } else {
              // if the arrowElement isn't a query selector we must check that the
              // provided DOM node is child of its popper node
              if (!data.instance.popper.contains(arrowElement)) {
                console.warn(
                  'WARNING: `arrow.element` must be child of its popper element!'
                );
                return data;
              }
            }

            var placement = data.placement.split('-')[0];
            var _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;

            var isVertical = ['left', 'right'].indexOf(placement) !== -1;

            var len = isVertical ? 'height' : 'width';
            var sideCapitalized = isVertical ? 'Top' : 'Left';
            var side = sideCapitalized.toLowerCase();
            var altSide = isVertical ? 'left' : 'top';
            var opSide = isVertical ? 'bottom' : 'right';
            var arrowElementSize = getOuterSizes(arrowElement)[len];

            //
            // extends keepTogether behavior making sure the popper and its
            // reference have enough pixels in conjunction
            //

            // top/left side
            if (reference[opSide] - arrowElementSize < popper[side]) {
              data.offsets.popper[side] -=
                popper[side] - (reference[opSide] - arrowElementSize);
            }
            // bottom/right side
            if (reference[side] + arrowElementSize > popper[opSide]) {
              data.offsets.popper[side] +=
                reference[side] + arrowElementSize - popper[opSide];
            }
            data.offsets.popper = getClientRect(data.offsets.popper);

            // compute center of the popper
            var center =
              reference[side] + reference[len] / 2 - arrowElementSize / 2;

            // Compute the sideValue using the updated popper offsets
            // take popper margin in account because we don't have this info available
            var css = getStyleComputedProperty(data.instance.popper);
            var popperMarginSide = parseFloat(
              css['margin' + sideCapitalized],
              10
            );
            var popperBorderSide = parseFloat(
              css['border' + sideCapitalized + 'Width'],
              10
            );
            var sideValue =
              center -
              data.offsets.popper[side] -
              popperMarginSide -
              popperBorderSide;

            // prevent arrowElement from being placed not contiguously to its popper
            sideValue = Math.max(
              Math.min(popper[len] - arrowElementSize, sideValue),
              0
            );

            data.arrowElement = arrowElement;
            data.offsets.arrow = ((_data$offsets$arrow = {}),
            defineProperty(_data$offsets$arrow, side, Math.round(sideValue)),
            defineProperty(_data$offsets$arrow, altSide, ''),
            _data$offsets$arrow);

            return data;
          }

          /**
           * Get the opposite placement variation of the given one
           * @method
           * @memberof Popper.Utils
           * @argument {String} placement variation
           * @returns {String} flipped placement variation
           */
          function getOppositeVariation(variation) {
            if (variation === 'end') {
              return 'start';
            } else if (variation === 'start') {
              return 'end';
            }
            return variation;
          }

          /**
           * List of accepted placements to use as values of the `placement` option.<br />
           * Valid placements are:
           * - `auto`
           * - `top`
           * - `right`
           * - `bottom`
           * - `left`
           *
           * Each placement can have a variation from this list:
           * - `-start`
           * - `-end`
           *
           * Variations are interpreted easily if you think of them as the left to right
           * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
           * is right.<br />
           * Vertically (`left` and `right`), `start` is top and `end` is bottom.
           *
           * Some valid examples are:
           * - `top-end` (on top of reference, right aligned)
           * - `right-start` (on right of reference, top aligned)
           * - `bottom` (on bottom, centered)
           * - `auto-end` (on the side with more space available, alignment depends by placement)
           *
           * @static
           * @type {Array}
           * @enum {String}
           * @readonly
           * @method placements
           * @memberof Popper
           */
          var placements = [
            'auto-start',
            'auto',
            'auto-end',
            'top-start',
            'top',
            'top-end',
            'right-start',
            'right',
            'right-end',
            'bottom-end',
            'bottom',
            'bottom-start',
            'left-end',
            'left',
            'left-start'
          ];

          // Get rid of `auto` `auto-start` and `auto-end`
          var validPlacements = placements.slice(3);

          /**
           * Given an initial placement, returns all the subsequent placements
           * clockwise (or counter-clockwise).
           *
           * @method
           * @memberof Popper.Utils
           * @argument {String} placement - A valid placement (it accepts variations)
           * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
           * @returns {Array} placements including their variations
           */
          function clockwise(placement) {
            var counter =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : false;

            var index = validPlacements.indexOf(placement);
            var arr = validPlacements
              .slice(index + 1)
              .concat(validPlacements.slice(0, index));
            return counter ? arr.reverse() : arr;
          }

          var BEHAVIORS = {
            FLIP: 'flip',
            CLOCKWISE: 'clockwise',
            COUNTERCLOCKWISE: 'counterclockwise'
          };

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function flip(data, options) {
            // if `inner` modifier is enabled, we can't use the `flip` modifier
            if (isModifierEnabled(data.instance.modifiers, 'inner')) {
              return data;
            }

            if (data.flipped && data.placement === data.originalPlacement) {
              // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
              return data;
            }

            var boundaries = getBoundaries(
              data.instance.popper,
              data.instance.reference,
              options.padding,
              options.boundariesElement,
              data.positionFixed
            );

            var placement = data.placement.split('-')[0];
            var placementOpposite = getOppositePlacement(placement);
            var variation = data.placement.split('-')[1] || '';

            var flipOrder = [];

            switch (options.behavior) {
              case BEHAVIORS.FLIP:
                flipOrder = [placement, placementOpposite];
                break;
              case BEHAVIORS.CLOCKWISE:
                flipOrder = clockwise(placement);
                break;
              case BEHAVIORS.COUNTERCLOCKWISE:
                flipOrder = clockwise(placement, true);
                break;
              default:
                flipOrder = options.behavior;
            }

            flipOrder.forEach(function(step, index) {
              if (placement !== step || flipOrder.length === index + 1) {
                return data;
              }

              placement = data.placement.split('-')[0];
              placementOpposite = getOppositePlacement(placement);

              var popperOffsets = data.offsets.popper;
              var refOffsets = data.offsets.reference;

              // using floor because the reference offsets may contain decimals we are not going to consider here
              var floor = Math.floor;
              var overlapsRef =
                (placement === 'left' &&
                  floor(popperOffsets.right) > floor(refOffsets.left)) ||
                (placement === 'right' &&
                  floor(popperOffsets.left) < floor(refOffsets.right)) ||
                (placement === 'top' &&
                  floor(popperOffsets.bottom) > floor(refOffsets.top)) ||
                (placement === 'bottom' &&
                  floor(popperOffsets.top) < floor(refOffsets.bottom));

              var overflowsLeft =
                floor(popperOffsets.left) < floor(boundaries.left);
              var overflowsRight =
                floor(popperOffsets.right) > floor(boundaries.right);
              var overflowsTop =
                floor(popperOffsets.top) < floor(boundaries.top);
              var overflowsBottom =
                floor(popperOffsets.bottom) > floor(boundaries.bottom);

              var overflowsBoundaries =
                (placement === 'left' && overflowsLeft) ||
                (placement === 'right' && overflowsRight) ||
                (placement === 'top' && overflowsTop) ||
                (placement === 'bottom' && overflowsBottom);

              // flip the variation if required
              var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
              var flippedVariation =
                !!options.flipVariations &&
                ((isVertical && variation === 'start' && overflowsLeft) ||
                  (isVertical && variation === 'end' && overflowsRight) ||
                  (!isVertical && variation === 'start' && overflowsTop) ||
                  (!isVertical && variation === 'end' && overflowsBottom));

              if (overlapsRef || overflowsBoundaries || flippedVariation) {
                // this boolean to detect any flip loop
                data.flipped = true;

                if (overlapsRef || overflowsBoundaries) {
                  placement = flipOrder[index + 1];
                }

                if (flippedVariation) {
                  variation = getOppositeVariation(variation);
                }

                data.placement = placement + (variation ? '-' + variation : '');

                // this object contains `position`, we want to preserve it along with
                // any additional property we may add in the future
                data.offsets.popper = _extends(
                  {},
                  data.offsets.popper,
                  getPopperOffsets(
                    data.instance.popper,
                    data.offsets.reference,
                    data.placement
                  )
                );

                data = runModifiers(data.instance.modifiers, data, 'flip');
              }
            });
            return data;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function keepTogether(data) {
            var _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;

            var placement = data.placement.split('-')[0];
            var floor = Math.floor;
            var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
            var side = isVertical ? 'right' : 'bottom';
            var opSide = isVertical ? 'left' : 'top';
            var measurement = isVertical ? 'width' : 'height';

            if (popper[side] < floor(reference[opSide])) {
              data.offsets.popper[opSide] =
                floor(reference[opSide]) - popper[measurement];
            }
            if (popper[opSide] > floor(reference[side])) {
              data.offsets.popper[opSide] = floor(reference[side]);
            }

            return data;
          }

          /**
           * Converts a string containing value + unit into a px value number
           * @function
           * @memberof {modifiers~offset}
           * @private
           * @argument {String} str - Value + unit string
           * @argument {String} measurement - `height` or `width`
           * @argument {Object} popperOffsets
           * @argument {Object} referenceOffsets
           * @returns {Number|String}
           * Value in pixels, or original string if no values were extracted
           */
          function toValue(str, measurement, popperOffsets, referenceOffsets) {
            // separate value from unit
            var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
            var value = +split[1];
            var unit = split[2];

            // If it's not a number it's an operator, I guess
            if (!value) {
              return str;
            }

            if (unit.indexOf('%') === 0) {
              var element = void 0;
              switch (unit) {
                case '%p':
                  element = popperOffsets;
                  break;
                case '%':
                case '%r':
                default:
                  element = referenceOffsets;
              }

              var rect = getClientRect(element);
              return (rect[measurement] / 100) * value;
            } else if (unit === 'vh' || unit === 'vw') {
              // if is a vh or vw, we calculate the size based on the viewport
              var size = void 0;
              if (unit === 'vh') {
                size = Math.max(
                  document.documentElement.clientHeight,
                  window.innerHeight || 0
                );
              } else {
                size = Math.max(
                  document.documentElement.clientWidth,
                  window.innerWidth || 0
                );
              }
              return (size / 100) * value;
            } else {
              // if is an explicit pixel unit, we get rid of the unit and keep the value
              // if is an implicit unit, it's px, and we return just the value
              return value;
            }
          }

          /**
           * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
           * @function
           * @memberof {modifiers~offset}
           * @private
           * @argument {String} offset
           * @argument {Object} popperOffsets
           * @argument {Object} referenceOffsets
           * @argument {String} basePlacement
           * @returns {Array} a two cells array with x and y offsets in numbers
           */
          function parseOffset(
            offset,
            popperOffsets,
            referenceOffsets,
            basePlacement
          ) {
            var offsets = [0, 0];

            // Use height if placement is left or right and index is 0 otherwise use width
            // in this way the first offset will use an axis and the second one
            // will use the other one
            var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

            // Split the offset string to obtain a list of values and operands
            // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
            var fragments = offset.split(/(\+|\-)/).map(function(frag) {
              return frag.trim();
            });

            // Detect if the offset string contains a pair of values or a single one
            // they could be separated by comma or space
            var divider = fragments.indexOf(
              find(fragments, function(frag) {
                return frag.search(/,|\s/) !== -1;
              })
            );

            if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
              console.warn(
                'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'
              );
            }

            // If divider is found, we divide the list of values and operands to divide
            // them by ofset X and Y.
            var splitRegex = /\s*,\s*|\s+/;
            var ops =
              divider !== -1
                ? [
                    fragments
                      .slice(0, divider)
                      .concat([fragments[divider].split(splitRegex)[0]]),
                    [fragments[divider].split(splitRegex)[1]].concat(
                      fragments.slice(divider + 1)
                    )
                  ]
                : [fragments];

            // Convert the values with units to absolute pixels to allow our computations
            ops = ops.map(function(op, index) {
              // Most of the units rely on the orientation of the popper
              var measurement = (index === 1
              ? !useHeight
              : useHeight)
                ? 'height'
                : 'width';
              var mergeWithPrevious = false;
              return (
                op
                  // This aggregates any `+` or `-` sign that aren't considered operators
                  // e.g.: 10 + +5 => [10, +, +5]
                  .reduce(function(a, b) {
                    if (
                      a[a.length - 1] === '' &&
                      ['+', '-'].indexOf(b) !== -1
                    ) {
                      a[a.length - 1] = b;
                      mergeWithPrevious = true;
                      return a;
                    } else if (mergeWithPrevious) {
                      a[a.length - 1] += b;
                      mergeWithPrevious = false;
                      return a;
                    } else {
                      return a.concat(b);
                    }
                  }, [])
                  // Here we convert the string values into number values (in px)
                  .map(function(str) {
                    return toValue(
                      str,
                      measurement,
                      popperOffsets,
                      referenceOffsets
                    );
                  })
              );
            });

            // Loop trough the offsets arrays and execute the operations
            ops.forEach(function(op, index) {
              op.forEach(function(frag, index2) {
                if (isNumeric(frag)) {
                  offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
                }
              });
            });
            return offsets;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @argument {Number|String} options.offset=0
           * The offset value as described in the modifier description
           * @returns {Object} The data object, properly modified
           */
          function offset(data, _ref) {
            var offset = _ref.offset;
            var placement = data.placement,
              _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;

            var basePlacement = placement.split('-')[0];

            var offsets = void 0;
            if (isNumeric(+offset)) {
              offsets = [+offset, 0];
            } else {
              offsets = parseOffset(offset, popper, reference, basePlacement);
            }

            if (basePlacement === 'left') {
              popper.top += offsets[0];
              popper.left -= offsets[1];
            } else if (basePlacement === 'right') {
              popper.top += offsets[0];
              popper.left += offsets[1];
            } else if (basePlacement === 'top') {
              popper.left += offsets[0];
              popper.top -= offsets[1];
            } else if (basePlacement === 'bottom') {
              popper.left += offsets[0];
              popper.top += offsets[1];
            }

            data.popper = popper;
            return data;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by `update` method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function preventOverflow(data, options) {
            var boundariesElement =
              options.boundariesElement ||
              getOffsetParent(data.instance.popper);

            // If offsetParent is the reference element, we really want to
            // go one step up and use the next offsetParent as reference to
            // avoid to make this modifier completely useless and look like broken
            if (data.instance.reference === boundariesElement) {
              boundariesElement = getOffsetParent(boundariesElement);
            }

            // NOTE: DOM access here
            // resets the popper's position so that the document size can be calculated excluding
            // the size of the popper element itself
            var transformProp = getSupportedPropertyName('transform');
            var popperStyles = data.instance.popper.style; // assignment to help minification
            var top = popperStyles.top,
              left = popperStyles.left,
              transform = popperStyles[transformProp];

            popperStyles.top = '';
            popperStyles.left = '';
            popperStyles[transformProp] = '';

            var boundaries = getBoundaries(
              data.instance.popper,
              data.instance.reference,
              options.padding,
              boundariesElement,
              data.positionFixed
            );

            // NOTE: DOM access here
            // restores the original style properties after the offsets have been computed
            popperStyles.top = top;
            popperStyles.left = left;
            popperStyles[transformProp] = transform;

            options.boundaries = boundaries;

            var order = options.priority;
            var popper = data.offsets.popper;

            var check = {
              primary: function primary(placement) {
                var value = popper[placement];
                if (
                  popper[placement] < boundaries[placement] &&
                  !options.escapeWithReference
                ) {
                  value = Math.max(popper[placement], boundaries[placement]);
                }
                return defineProperty({}, placement, value);
              },
              secondary: function secondary(placement) {
                var mainSide = placement === 'right' ? 'left' : 'top';
                var value = popper[mainSide];
                if (
                  popper[placement] > boundaries[placement] &&
                  !options.escapeWithReference
                ) {
                  value = Math.min(
                    popper[mainSide],
                    boundaries[placement] -
                      (placement === 'right' ? popper.width : popper.height)
                  );
                }
                return defineProperty({}, mainSide, value);
              }
            };

            order.forEach(function(placement) {
              var side =
                ['left', 'top'].indexOf(placement) !== -1
                  ? 'primary'
                  : 'secondary';
              popper = _extends({}, popper, check[side](placement));
            });

            data.offsets.popper = popper;

            return data;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by `update` method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function shift(data) {
            var placement = data.placement;
            var basePlacement = placement.split('-')[0];
            var shiftvariation = placement.split('-')[1];

            // if shift shiftvariation is specified, run the modifier
            if (shiftvariation) {
              var _data$offsets = data.offsets,
                reference = _data$offsets.reference,
                popper = _data$offsets.popper;

              var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
              var side = isVertical ? 'left' : 'top';
              var measurement = isVertical ? 'width' : 'height';

              var shiftOffsets = {
                start: defineProperty({}, side, reference[side]),
                end: defineProperty(
                  {},
                  side,
                  reference[side] + reference[measurement] - popper[measurement]
                )
              };

              data.offsets.popper = _extends(
                {},
                popper,
                shiftOffsets[shiftvariation]
              );
            }

            return data;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function hide(data) {
            if (
              !isModifierRequired(
                data.instance.modifiers,
                'hide',
                'preventOverflow'
              )
            ) {
              return data;
            }

            var refRect = data.offsets.reference;
            var bound = find(data.instance.modifiers, function(modifier) {
              return modifier.name === 'preventOverflow';
            }).boundaries;

            if (
              refRect.bottom < bound.top ||
              refRect.left > bound.right ||
              refRect.top > bound.bottom ||
              refRect.right < bound.left
            ) {
              // Avoid unnecessary DOM access if visibility hasn't changed
              if (data.hide === true) {
                return data;
              }

              data.hide = true;
              data.attributes['x-out-of-boundaries'] = '';
            } else {
              // Avoid unnecessary DOM access if visibility hasn't changed
              if (data.hide === false) {
                return data;
              }

              data.hide = false;
              data.attributes['x-out-of-boundaries'] = false;
            }

            return data;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by `update` method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function inner(data) {
            var placement = data.placement;
            var basePlacement = placement.split('-')[0];
            var _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;

            var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

            var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

            popper[isHoriz ? 'left' : 'top'] =
              reference[basePlacement] -
              (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

            data.placement = getOppositePlacement(placement);
            data.offsets.popper = getClientRect(popper);

            return data;
          }

          /**
           * Modifier function, each modifier can have a function of this type assigned
           * to its `fn` property.<br />
           * These functions will be called on each update, this means that you must
           * make sure they are performant enough to avoid performance bottlenecks.
           *
           * @function ModifierFn
           * @argument {dataObject} data - The data object generated by `update` method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {dataObject} The data object, properly modified
           */

          /**
           * Modifiers are plugins used to alter the behavior of your poppers.<br />
           * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
           * needed by the library.
           *
           * Usually you don't want to override the `order`, `fn` and `onLoad` props.
           * All the other properties are configurations that could be tweaked.
           * @namespace modifiers
           */
          var modifiers = {
            /**
             * Modifier used to shift the popper on the start or end of its reference
             * element.<br />
             * It will read the variation of the `placement` property.<br />
             * It can be one either `-end` or `-start`.
             * @memberof modifiers
             * @inner
             */
            shift: {
              /** @prop {number} order=100 - Index used to define the order of execution */
              order: 100,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: shift
            },

            /**
             * The `offset` modifier can shift your popper on both its axis.
             *
             * It accepts the following units:
             * - `px` or unit-less, interpreted as pixels
             * - `%` or `%r`, percentage relative to the length of the reference element
             * - `%p`, percentage relative to the length of the popper element
             * - `vw`, CSS viewport width unit
             * - `vh`, CSS viewport height unit
             *
             * For length is intended the main axis relative to the placement of the popper.<br />
             * This means that if the placement is `top` or `bottom`, the length will be the
             * `width`. In case of `left` or `right`, it will be the `height`.
             *
             * You can provide a single value (as `Number` or `String`), or a pair of values
             * as `String` divided by a comma or one (or more) white spaces.<br />
             * The latter is a deprecated method because it leads to confusion and will be
             * removed in v2.<br />
             * Additionally, it accepts additions and subtractions between different units.
             * Note that multiplications and divisions aren't supported.
             *
             * Valid examples are:
             * ```
             * 10
             * '10%'
             * '10, 10'
             * '10%, 10'
             * '10 + 10%'
             * '10 - 5vh + 3%'
             * '-10px + 5vh, 5px - 6%'
             * ```
             * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
             * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
             * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
             *
             * @memberof modifiers
             * @inner
             */
            offset: {
              /** @prop {number} order=200 - Index used to define the order of execution */
              order: 200,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: offset,
              /** @prop {Number|String} offset=0
               * The offset value as described in the modifier description
               */
              offset: 0
            },

            /**
             * Modifier used to prevent the popper from being positioned outside the boundary.
             *
             * A scenario exists where the reference itself is not within the boundaries.<br />
             * We can say it has "escaped the boundaries" — or just "escaped".<br />
             * In this case we need to decide whether the popper should either:
             *
             * - detach from the reference and remain "trapped" in the boundaries, or
             * - if it should ignore the boundary and "escape with its reference"
             *
             * When `escapeWithReference` is set to`true` and reference is completely
             * outside its boundaries, the popper will overflow (or completely leave)
             * the boundaries in order to remain attached to the edge of the reference.
             *
             * @memberof modifiers
             * @inner
             */
            preventOverflow: {
              /** @prop {number} order=300 - Index used to define the order of execution */
              order: 300,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: preventOverflow,
              /**
               * @prop {Array} [priority=['left','right','top','bottom']]
               * Popper will try to prevent overflow following these priorities by default,
               * then, it could overflow on the left and on top of the `boundariesElement`
               */
              priority: ['left', 'right', 'top', 'bottom'],
              /**
               * @prop {number} padding=5
               * Amount of pixel used to define a minimum distance between the boundaries
               * and the popper. This makes sure the popper always has a little padding
               * between the edges of its container
               */
              padding: 5,
              /**
               * @prop {String|HTMLElement} boundariesElement='scrollParent'
               * Boundaries used by the modifier. Can be `scrollParent`, `window`,
               * `viewport` or any DOM element.
               */
              boundariesElement: 'scrollParent'
            },

            /**
             * Modifier used to make sure the reference and its popper stay near each other
             * without leaving any gap between the two. Especially useful when the arrow is
             * enabled and you want to ensure that it points to its reference element.
             * It cares only about the first axis. You can still have poppers with margin
             * between the popper and its reference element.
             * @memberof modifiers
             * @inner
             */
            keepTogether: {
              /** @prop {number} order=400 - Index used to define the order of execution */
              order: 400,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: keepTogether
            },

            /**
             * This modifier is used to move the `arrowElement` of the popper to make
             * sure it is positioned between the reference element and its popper element.
             * It will read the outer size of the `arrowElement` node to detect how many
             * pixels of conjunction are needed.
             *
             * It has no effect if no `arrowElement` is provided.
             * @memberof modifiers
             * @inner
             */
            arrow: {
              /** @prop {number} order=500 - Index used to define the order of execution */
              order: 500,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: arrow,
              /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
              element: '[x-arrow]'
            },

            /**
             * Modifier used to flip the popper's placement when it starts to overlap its
             * reference element.
             *
             * Requires the `preventOverflow` modifier before it in order to work.
             *
             * **NOTE:** this modifier will interrupt the current update cycle and will
             * restart it if it detects the need to flip the placement.
             * @memberof modifiers
             * @inner
             */
            flip: {
              /** @prop {number} order=600 - Index used to define the order of execution */
              order: 600,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: flip,
              /**
               * @prop {String|Array} behavior='flip'
               * The behavior used to change the popper's placement. It can be one of
               * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
               * placements (with optional variations)
               */
              behavior: 'flip',
              /**
               * @prop {number} padding=5
               * The popper will flip if it hits the edges of the `boundariesElement`
               */
              padding: 5,
              /**
               * @prop {String|HTMLElement} boundariesElement='viewport'
               * The element which will define the boundaries of the popper position.
               * The popper will never be placed outside of the defined boundaries
               * (except if `keepTogether` is enabled)
               */
              boundariesElement: 'viewport'
            },

            /**
             * Modifier used to make the popper flow toward the inner of the reference element.
             * By default, when this modifier is disabled, the popper will be placed outside
             * the reference element.
             * @memberof modifiers
             * @inner
             */
            inner: {
              /** @prop {number} order=700 - Index used to define the order of execution */
              order: 700,
              /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
              enabled: false,
              /** @prop {ModifierFn} */
              fn: inner
            },

            /**
             * Modifier used to hide the popper when its reference element is outside of the
             * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
             * be used to hide with a CSS selector the popper when its reference is
             * out of boundaries.
             *
             * Requires the `preventOverflow` modifier before it in order to work.
             * @memberof modifiers
             * @inner
             */
            hide: {
              /** @prop {number} order=800 - Index used to define the order of execution */
              order: 800,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: hide
            },

            /**
             * Computes the style that will be applied to the popper element to gets
             * properly positioned.
             *
             * Note that this modifier will not touch the DOM, it just prepares the styles
             * so that `applyStyle` modifier can apply it. This separation is useful
             * in case you need to replace `applyStyle` with a custom implementation.
             *
             * This modifier has `850` as `order` value to maintain backward compatibility
             * with previous versions of Popper.js. Expect the modifiers ordering method
             * to change in future major versions of the library.
             *
             * @memberof modifiers
             * @inner
             */
            computeStyle: {
              /** @prop {number} order=850 - Index used to define the order of execution */
              order: 850,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: computeStyle,
              /**
               * @prop {Boolean} gpuAcceleration=true
               * If true, it uses the CSS 3D transformation to position the popper.
               * Otherwise, it will use the `top` and `left` properties
               */
              gpuAcceleration: true,
              /**
               * @prop {string} [x='bottom']
               * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
               * Change this if your popper should grow in a direction different from `bottom`
               */
              x: 'bottom',
              /**
               * @prop {string} [x='left']
               * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
               * Change this if your popper should grow in a direction different from `right`
               */
              y: 'right'
            },

            /**
             * Applies the computed styles to the popper element.
             *
             * All the DOM manipulations are limited to this modifier. This is useful in case
             * you want to integrate Popper.js inside a framework or view library and you
             * want to delegate all the DOM manipulations to it.
             *
             * Note that if you disable this modifier, you must make sure the popper element
             * has its position set to `absolute` before Popper.js can do its work!
             *
             * Just disable this modifier and define your own to achieve the desired effect.
             *
             * @memberof modifiers
             * @inner
             */
            applyStyle: {
              /** @prop {number} order=900 - Index used to define the order of execution */
              order: 900,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: applyStyle,
              /** @prop {Function} */
              onLoad: applyStyleOnLoad,
              /**
               * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
               * @prop {Boolean} gpuAcceleration=true
               * If true, it uses the CSS 3D transformation to position the popper.
               * Otherwise, it will use the `top` and `left` properties
               */
              gpuAcceleration: undefined
            }
          };

          /**
           * The `dataObject` is an object containing all the information used by Popper.js.
           * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
           * @name dataObject
           * @property {Object} data.instance The Popper.js instance
           * @property {String} data.placement Placement applied to popper
           * @property {String} data.originalPlacement Placement originally defined on init
           * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
           * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
           * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
           * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
           * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
           * @property {Object} data.boundaries Offsets of the popper boundaries
           * @property {Object} data.offsets The measurements of popper, reference and arrow elements
           * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
           * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
           * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
           */

          /**
           * Default options provided to Popper.js constructor.<br />
           * These can be overridden using the `options` argument of Popper.js.<br />
           * To override an option, simply pass an object with the same
           * structure of the `options` object, as the 3rd argument. For example:
           * ```
           * new Popper(ref, pop, {
           *   modifiers: {
           *     preventOverflow: { enabled: false }
           *   }
           * })
           * ```
           * @type {Object}
           * @static
           * @memberof Popper
           */
          var Defaults = {
            /**
             * Popper's placement.
             * @prop {Popper.placements} placement='bottom'
             */
            placement: 'bottom',

            /**
             * Set this to true if you want popper to position it self in 'fixed' mode
             * @prop {Boolean} positionFixed=false
             */
            positionFixed: false,

            /**
             * Whether events (resize, scroll) are initially enabled.
             * @prop {Boolean} eventsEnabled=true
             */
            eventsEnabled: true,

            /**
             * Set to true if you want to automatically remove the popper when
             * you call the `destroy` method.
             * @prop {Boolean} removeOnDestroy=false
             */
            removeOnDestroy: false,

            /**
             * Callback called when the popper is created.<br />
             * By default, it is set to no-op.<br />
             * Access Popper.js instance with `data.instance`.
             * @prop {onCreate}
             */
            onCreate: function onCreate() {},

            /**
             * Callback called when the popper is updated. This callback is not called
             * on the initialization/creation of the popper, but only on subsequent
             * updates.<br />
             * By default, it is set to no-op.<br />
             * Access Popper.js instance with `data.instance`.
             * @prop {onUpdate}
             */
            onUpdate: function onUpdate() {},

            /**
             * List of modifiers used to modify the offsets before they are applied to the popper.
             * They provide most of the functionalities of Popper.js.
             * @prop {modifiers}
             */
            modifiers: modifiers
          };

          /**
           * @callback onCreate
           * @param {dataObject} data
           */

          /**
           * @callback onUpdate
           * @param {dataObject} data
           */

          // Utils
          // Methods
          var Popper = (function() {
            /**
             * Creates a new Popper.js instance.
             * @class Popper
             * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper
             * @param {HTMLElement} popper - The HTML element used as the popper
             * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
             * @return {Object} instance - The generated Popper.js instance
             */
            function Popper(reference, popper) {
              var _this = this;

              var options =
                arguments.length > 2 && arguments[2] !== undefined
                  ? arguments[2]
                  : {};
              classCallCheck(this, Popper);

              this.scheduleUpdate = function() {
                return requestAnimationFrame(_this.update);
              };

              // make update() debounced, so that it only runs at most once-per-tick
              this.update = debounce(this.update.bind(this));

              // with {} we create a new object with the options inside it
              this.options = _extends({}, Popper.Defaults, options);

              // init state
              this.state = {
                isDestroyed: false,
                isCreated: false,
                scrollParents: []
              };

              // get reference and popper elements (allow jQuery wrappers)
              this.reference =
                reference && reference.jquery ? reference[0] : reference;
              this.popper = popper && popper.jquery ? popper[0] : popper;

              // Deep merge modifiers options
              this.options.modifiers = {};
              Object.keys(
                _extends({}, Popper.Defaults.modifiers, options.modifiers)
              ).forEach(function(name) {
                _this.options.modifiers[name] = _extends(
                  {},
                  Popper.Defaults.modifiers[name] || {},
                  options.modifiers ? options.modifiers[name] : {}
                );
              });

              // Refactoring modifiers' list (Object => Array)
              this.modifiers = Object.keys(this.options.modifiers)
                .map(function(name) {
                  return _extends(
                    {
                      name: name
                    },
                    _this.options.modifiers[name]
                  );
                })
                // sort the modifiers by order
                .sort(function(a, b) {
                  return a.order - b.order;
                });

              // modifiers have the ability to execute arbitrary code when Popper.js get inited
              // such code is executed in the same order of its modifier
              // they could add new properties to their options configuration
              // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
              this.modifiers.forEach(function(modifierOptions) {
                if (
                  modifierOptions.enabled &&
                  isFunction(modifierOptions.onLoad)
                ) {
                  modifierOptions.onLoad(
                    _this.reference,
                    _this.popper,
                    _this.options,
                    modifierOptions,
                    _this.state
                  );
                }
              });

              // fire the first update to position the popper in the right place
              this.update();

              var eventsEnabled = this.options.eventsEnabled;
              if (eventsEnabled) {
                // setup event listeners, they will take care of update the position in specific situations
                this.enableEventListeners();
              }

              this.state.eventsEnabled = eventsEnabled;
            }

            // We can't use class properties because they don't get listed in the
            // class prototype and break stuff like Sinon stubs

            createClass(Popper, [
              {
                key: 'update',
                value: function update$$1() {
                  return update.call(this);
                }
              },
              {
                key: 'destroy',
                value: function destroy$$1() {
                  return destroy.call(this);
                }
              },
              {
                key: 'enableEventListeners',
                value: function enableEventListeners$$1() {
                  return enableEventListeners.call(this);
                }
              },
              {
                key: 'disableEventListeners',
                value: function disableEventListeners$$1() {
                  return disableEventListeners.call(this);
                }

                /**
                 * Schedules an update. It will run on the next UI update available.
                 * @method scheduleUpdate
                 * @memberof Popper
                 */

                /**
                 * Collection of utilities useful when writing custom modifiers.
                 * Starting from version 1.7, this method is available only if you
                 * include `popper-utils.js` before `popper.js`.
                 *
                 * **DEPRECATION**: This way to access PopperUtils is deprecated
                 * and will be removed in v2! Use the PopperUtils module directly instead.
                 * Due to the high instability of the methods contained in Utils, we can't
                 * guarantee them to follow semver. Use them at your own risk!
                 * @static
                 * @private
                 * @type {Object}
                 * @deprecated since version 1.8
                 * @member Utils
                 * @memberof Popper
                 */
              }
            ]);
            return Popper;
          })();

          /**
           * The `referenceObject` is an object that provides an interface compatible with Popper.js
           * and lets you use it as replacement of a real DOM node.<br />
           * You can use this method to position a popper relatively to a set of coordinates
           * in case you don't have a DOM node to use as reference.
           *
           * ```
           * new Popper(referenceObject, popperNode);
           * ```
           *
           * NB: This feature isn't supported in Internet Explorer 10.
           * @name referenceObject
           * @property {Function} data.getBoundingClientRect
           * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
           * @property {number} data.clientWidth
           * An ES6 getter that will return the width of the virtual reference element.
           * @property {number} data.clientHeight
           * An ES6 getter that will return the height of the virtual reference element.
           */

          Popper.Utils = (typeof window !== 'undefined'
            ? window
            : global
          ).PopperUtils;
          Popper.placements = placements;
          Popper.Defaults = Defaults;

          return Popper;
        });
        //# sourceMappingURL=popper.js.map

        /* WEBPACK VAR INJECTION */
      }.call(
        exports,
        (function() {
          return this;
        })()
      ));

      /***/
    },
    /* 721 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      exports.ManagerContext = undefined;

      var _extends2 = __webpack_require__(638);

      var _extends3 = _interopRequireDefault(_extends2);

      var _classCallCheck2 = __webpack_require__(677);

      var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

      var _possibleConstructorReturn2 = __webpack_require__(678);

      var _possibleConstructorReturn3 = _interopRequireDefault(
        _possibleConstructorReturn2
      );

      var _inherits2 = __webpack_require__(712);

      var _inherits3 = _interopRequireDefault(_inherits2);

      var _react = __webpack_require__(328);

      var React = _interopRequireWildcard(_react);

      var _createReactContext = __webpack_require__(722);

      var _createReactContext2 = _interopRequireDefault(_createReactContext);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key))
                newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var ManagerContext = (exports.ManagerContext = (0,
      _createReactContext2.default)({
        getReferenceRef: undefined,
        referenceNode: undefined
      }));

      var Manager = (function(_React$Component) {
        (0, _inherits3.default)(Manager, _React$Component);

        function Manager() {
          (0, _classCallCheck3.default)(this, Manager);

          var _this = (0, _possibleConstructorReturn3.default)(
            this,
            _React$Component.call(this)
          );

          _this.getReferenceRef = function(referenceNode) {
            return _this.setState(function(_ref) {
              var context = _ref.context;
              return {
                context: (0, _extends3.default)({}, context, {
                  referenceNode: referenceNode
                })
              };
            });
          };

          _this.state = {
            context: {
              getReferenceRef: _this.getReferenceRef,
              referenceNode: undefined
            }
          };
          return _this;
        }

        Manager.prototype.render = function render() {
          return React.createElement(
            ManagerContext.Provider,
            { value: this.state.context },
            this.props.children
          );
        };

        return Manager;
      })(React.Component);

      exports.default = Manager;

      /***/
    },
    /* 722 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _implementation = __webpack_require__(723);

      var _implementation2 = _interopRequireDefault(_implementation);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default =
        _react2.default.createContext || _implementation2.default;
      module.exports = exports['default'];

      /***/
    },
    /* 723 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _gud = __webpack_require__(724);

      var _gud2 = _interopRequireDefault(_gud);

      var _warning = __webpack_require__(725);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var MAX_SIGNED_31_BIT_INT = 1073741823;

      // Inlined Object.is polyfill.
      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
      function objectIs(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }

      function createEventEmitter(value) {
        var handlers = [];
        return {
          on: function on(handler) {
            handlers.push(handler);
          },
          off: function off(handler) {
            handlers = handlers.filter(function(h) {
              return h !== handler;
            });
          },
          get: function get() {
            return value;
          },
          set: function set(newValue, changedBits) {
            value = newValue;
            handlers.forEach(function(handler) {
              return handler(value, changedBits);
            });
          }
        };
      }

      function onlyChild(children) {
        return Array.isArray(children) ? children[0] : children;
      }

      function createReactContext(defaultValue, calculateChangedBits) {
        var _Provider$childContex, _Consumer$contextType;

        var contextProp =
          '__create-react-context-' + (0, _gud2.default)() + '__';

        var Provider = (function(_Component) {
          _inherits(Provider, _Component);

          function Provider() {
            var _temp, _this, _ret;

            _classCallCheck(this, Provider);

            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            return (
              (_ret = ((_temp = ((_this = _possibleConstructorReturn(
                this,
                _Component.call.apply(_Component, [this].concat(args))
              )),
              _this)),
              (_this.emitter = createEventEmitter(_this.props.value)),
              _temp)),
              _possibleConstructorReturn(_this, _ret)
            );
          }

          Provider.prototype.getChildContext = function getChildContext() {
            var _ref;

            return (_ref = {}), (_ref[contextProp] = this.emitter), _ref;
          };

          Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(
            nextProps
          ) {
            if (this.props.value !== nextProps.value) {
              var oldValue = this.props.value;
              var newValue = nextProps.value;
              var changedBits = void 0;

              if (objectIs(oldValue, newValue)) {
                changedBits = 0; // No change
              } else {
                changedBits =
                  typeof calculateChangedBits === 'function'
                    ? calculateChangedBits(oldValue, newValue)
                    : MAX_SIGNED_31_BIT_INT;
                if (undefined !== 'production') {
                  (0, _warning2.default)(
                    (changedBits & MAX_SIGNED_31_BIT_INT) === changedBits,
                    'calculateChangedBits: Expected the return value to be a ' +
                      '31-bit integer. Instead received: %s',
                    changedBits
                  );
                }

                changedBits |= 0;

                if (changedBits !== 0) {
                  this.emitter.set(nextProps.value, changedBits);
                }
              }
            }
          };

          Provider.prototype.render = function render() {
            return this.props.children;
          };

          return Provider;
        })(_react.Component);

        Provider.childContextTypes = ((_Provider$childContex = {}),
        (_Provider$childContex[contextProp] =
          _propTypes2.default.object.isRequired),
        _Provider$childContex);

        var Consumer = (function(_Component2) {
          _inherits(Consumer, _Component2);

          function Consumer() {
            var _temp2, _this2, _ret2;

            _classCallCheck(this, Consumer);

            for (
              var _len2 = arguments.length, args = Array(_len2), _key2 = 0;
              _key2 < _len2;
              _key2++
            ) {
              args[_key2] = arguments[_key2];
            }

            return (
              (_ret2 = ((_temp2 = ((_this2 = _possibleConstructorReturn(
                this,
                _Component2.call.apply(_Component2, [this].concat(args))
              )),
              _this2)),
              (_this2.state = {
                value: _this2.getValue()
              }),
              (_this2.onUpdate = function(newValue, changedBits) {
                var observedBits = _this2.observedBits | 0;
                if ((observedBits & changedBits) !== 0) {
                  _this2.setState({ value: _this2.getValue() });
                }
              }),
              _temp2)),
              _possibleConstructorReturn(_this2, _ret2)
            );
          }

          Consumer.prototype.componentWillReceiveProps = function componentWillReceiveProps(
            nextProps
          ) {
            var observedBits = nextProps.observedBits;

            this.observedBits =
              observedBits === undefined || observedBits === null
                ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default
                : observedBits;
          };

          Consumer.prototype.componentDidMount = function componentDidMount() {
            if (this.context[contextProp]) {
              this.context[contextProp].on(this.onUpdate);
            }
            var observedBits = this.props.observedBits;

            this.observedBits =
              observedBits === undefined || observedBits === null
                ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default
                : observedBits;
          };

          Consumer.prototype.componentWillUnmount = function componentWillUnmount() {
            if (this.context[contextProp]) {
              this.context[contextProp].off(this.onUpdate);
            }
          };

          Consumer.prototype.getValue = function getValue() {
            if (this.context[contextProp]) {
              return this.context[contextProp].get();
            } else {
              return defaultValue;
            }
          };

          Consumer.prototype.render = function render() {
            return onlyChild(this.props.children)(this.state.value);
          };

          return Consumer;
        })(_react.Component);

        Consumer.contextTypes = ((_Consumer$contextType = {}),
        (_Consumer$contextType[contextProp] = _propTypes2.default.object),
        _Consumer$contextType);

        return {
          Provider: Provider,
          Consumer: Consumer
        };
      }

      exports.default = createReactContext;
      module.exports = exports['default'];

      /***/
    },
    /* 724 */
    /***/ function(module, exports) {
      /* WEBPACK VAR INJECTION */ (function(global) {
        // @flow
        'use strict';

        var key = '__global_unique_id__';

        module.exports = function() {
          return (global[key] = (global[key] || 0) + 1);
        };

        /* WEBPACK VAR INJECTION */
      }.call(
        exports,
        (function() {
          return this;
        })()
      ));

      /***/
    },
    /* 725 */
    /***/ function(module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2014-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       */

      'use strict';

      var emptyFunction = __webpack_require__(726);

      /**
       * Similar to invariant but only logs a warning if the condition is not met.
       * This can be used to log issues in development environments in critical
       * paths. Removing the logging code for production environments will keep the
       * same logic and follow the same code paths.
       */

      var warning = emptyFunction;

      if (undefined !== 'production') {
        var printWarning = function printWarning(format) {
          for (
            var _len = arguments.length,
              args = Array(_len > 1 ? _len - 1 : 0),
              _key = 1;
            _key < _len;
            _key++
          ) {
            args[_key - 1] = arguments[_key];
          }

          var argIndex = 0;
          var message =
            'Warning: ' +
            format.replace(/%s/g, function() {
              return args[argIndex++];
            });
          if (typeof console !== 'undefined') {
            console.error(message);
          }
          try {
            // --- Welcome to debugging React ---
            // This error was thrown as a convenience so that you can use this stack
            // to find the callsite that caused this warning to fire.
            throw new Error(message);
          } catch (x) {}
        };

        warning = function warning(condition, format) {
          if (format === undefined) {
            throw new Error(
              '`warning(condition, format, ...args)` requires a warning ' +
                'message argument'
            );
          }

          if (format.indexOf('Failed Composite propType: ') === 0) {
            return; // Ignore CompositeComponent proptype check.
          }

          if (!condition) {
            for (
              var _len2 = arguments.length,
                args = Array(_len2 > 2 ? _len2 - 2 : 0),
                _key2 = 2;
              _key2 < _len2;
              _key2++
            ) {
              args[_key2 - 2] = arguments[_key2];
            }

            printWarning.apply(undefined, [format].concat(args));
          }
        };
      }

      module.exports = warning;

      /***/
    },
    /* 726 */
    /***/ function(module, exports) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * This source code is licensed under the MIT license found in the
       * LICENSE file in the root directory of this source tree.
       *
       *
       */

      function makeEmptyFunction(arg) {
        return function() {
          return arg;
        };
      }

      /**
       * This function accepts and discards inputs; it has no side effects. This is
       * primarily useful idiomatically for overridable function endpoints which
       * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
       */
      var emptyFunction = function emptyFunction() {};

      emptyFunction.thatReturns = makeEmptyFunction;
      emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
      emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
      emptyFunction.thatReturnsNull = makeEmptyFunction(null);
      emptyFunction.thatReturnsThis = function() {
        return this;
      };
      emptyFunction.thatReturnsArgument = function(arg) {
        return arg;
      };

      module.exports = emptyFunction;

      /***/
    },
    /* 727 */
    /***/ function(module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });

      /**
       * Takes an argument and if it's an array, returns the first item in the array,
       * otherwise returns the argument. Used for Preact compatibility.
       */
      var unwrapArray = (exports.unwrapArray = function unwrapArray(arg) {
        return Array.isArray(arg) ? arg[0] : arg;
      });

      /**
       * Takes a maybe-undefined function and arbitrary args and invokes the function
       * only if it is defined.
       */
      var safeInvoke = (exports.safeInvoke = function safeInvoke(fn) {
        for (
          var _len = arguments.length,
            args = Array(_len > 1 ? _len - 1 : 0),
            _key = 1;
          _key < _len;
          _key++
        ) {
          args[_key - 1] = arguments[_key];
        }

        if (typeof fn === 'function') {
          return fn.apply(undefined, args);
        }
      });

      /***/
    },
    /* 728 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });

      var _extends2 = __webpack_require__(638);

      var _extends3 = _interopRequireDefault(_extends2);

      var _classCallCheck2 = __webpack_require__(677);

      var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

      var _possibleConstructorReturn2 = __webpack_require__(678);

      var _possibleConstructorReturn3 = _interopRequireDefault(
        _possibleConstructorReturn2
      );

      var _inherits2 = __webpack_require__(712);

      var _inherits3 = _interopRequireDefault(_inherits2);

      exports.default = Reference;

      var _react = __webpack_require__(328);

      var React = _interopRequireWildcard(_react);

      var _warning = __webpack_require__(729);

      var _warning2 = _interopRequireDefault(_warning);

      var _Manager = __webpack_require__(721);

      var _utils = __webpack_require__(727);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key))
                newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var InnerReference = (function(_React$Component) {
        (0, _inherits3.default)(InnerReference, _React$Component);

        function InnerReference() {
          var _temp, _this, _ret;

          (0, _classCallCheck3.default)(this, InnerReference);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = (0,
            _possibleConstructorReturn3.default)(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.refHandler = function(node) {
              (0, _utils.safeInvoke)(_this.props.innerRef, node);
              (0, _utils.safeInvoke)(_this.props.getReferenceRef, node);
            }),
            _temp)),
            (0, _possibleConstructorReturn3.default)(_this, _ret)
          );
        }

        InnerReference.prototype.render = function render() {
          (0, _warning2.default)(
            this.props.getReferenceRef,
            '`Reference` should not be used outside of a `Manager` component.'
          );
          return (0, _utils.unwrapArray)(this.props.children)({
            ref: this.refHandler
          });
        };

        return InnerReference;
      })(React.Component);

      function Reference(props) {
        return React.createElement(
          _Manager.ManagerContext.Consumer,
          null,
          function(_ref) {
            var getReferenceRef = _ref.getReferenceRef;
            return React.createElement(
              InnerReference,
              (0, _extends3.default)(
                { getReferenceRef: getReferenceRef },
                props
              )
            );
          }
        );
      }

      /***/
    },
    /* 729 */
    /***/ function(module, exports, __webpack_require__) {
      /**
       * Copyright 2014-2015, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       */

      'use strict';

      /**
       * Similar to invariant but only logs a warning if the condition is not met.
       * This can be used to log issues in development environments in critical
       * paths. Removing the logging code for production environments will keep the
       * same logic and follow the same code paths.
       */

      var warning = function() {};

      if (undefined !== 'production') {
        warning = function(condition, format, args) {
          var len = arguments.length;
          args = new Array(len > 2 ? len - 2 : 0);
          for (var key = 2; key < len; key++) {
            args[key - 2] = arguments[key];
          }
          if (format === undefined) {
            throw new Error(
              '`warning(condition, format, ...args)` requires a warning ' +
                'message argument'
            );
          }

          if (format.length < 10 || /^[s\W]*$/.test(format)) {
            throw new Error(
              'The warning format should be able to uniquely identify this ' +
                'warning. Please, use a more descriptive format than: ' +
                format
            );
          }

          if (!condition) {
            var argIndex = 0;
            var message =
              'Warning: ' +
              format.replace(/%s/g, function() {
                return args[argIndex++];
              });
            if (typeof console !== 'undefined') {
              console.error(message);
            }
            try {
              // This error was thrown as a convenience so that you can use this stack
              // to find the callsite that caused this warning to fire.
              throw new Error(message);
            } catch (x) {}
          }
        };
      }

      module.exports = warning;

      /***/
    },
    /* 730 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CodeExampleComponent = (function(_React$Component) {
        _inherits(CodeExampleComponent, _React$Component);

        function CodeExampleComponent() {
          _classCallCheck(this, CodeExampleComponent);

          return _possibleConstructorReturn(
            this,
            _React$Component.apply(this, arguments)
          );
        }

        CodeExampleComponent.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            {
              key: this.props.id,
              id: 'example-' + this.props.id,
              className: 'example'
            },
            _react2.default.createElement(
              'h2',
              { className: 'example__heading' },
              this.props.title
            ),
            this.props.children
          );
        };

        return CodeExampleComponent;
      })(_react2.default.Component);

      CodeExampleComponent.propTypes = {
        children: _propTypes2.default.element,
        id: _propTypes2.default.number,
        title: _propTypes2.default.string
      };
      exports.default = CodeExampleComponent;

      /***/
    },
    /* 731 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CustomDateFormat = (function(_React$Component) {
        _inherits(CustomDateFormat, _React$Component);

        function CustomDateFormat(props) {
          _classCallCheck(this, CustomDateFormat);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        CustomDateFormat.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '<DatePicker',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  'dateFormat="yyyy/MM/dd"'
                ),
                _react2.default.createElement('br', null),
                'selected={this.state.startDate}',
                _react2.default.createElement('br', null),
                'onChange={this.handleChange} />'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                dateFormat: 'yyyy/MM/dd',
                selected: this.state.startDate,
                onChange: this.handleChange
              })
            )
          );
        };

        return CustomDateFormat;
      })(_react2.default.Component);

      exports.default = CustomDateFormat;

      /***/
    },
    /* 732 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CustomClassName = (function(_React$Component) {
        _inherits(CustomClassName, _React$Component);

        function CustomClassName(props) {
          _classCallCheck(this, CustomClassName);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        CustomClassName.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n  selected={this.state.startDate}\n  onChange={this.handleChange}\n  className="red-border"\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                className: 'red-border'
              })
            )
          );
        };

        return CustomClassName;
      })(_react2.default.Component);

      exports.default = CustomClassName;

      /***/
    },
    /* 733 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CustomCalendarClassName = (function(_React$Component) {
        _inherits(CustomCalendarClassName, _React$Component);

        function CustomCalendarClassName(props) {
          _classCallCheck(this, CustomCalendarClassName);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        CustomCalendarClassName.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n  selected={this.state.startDate}\n  onChange={this.handleChange}\n  calendarClassName="rasta-stripes"\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                calendarClassName: 'rasta-stripes'
              })
            )
          );
        };

        return CustomCalendarClassName;
      })(_react2.default.Component);

      exports.default = CustomCalendarClassName;

      /***/
    },
    /* 734 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _getDate = __webpack_require__(590);

      var _getDate2 = _interopRequireDefault(_getDate);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CustomDayClassNames = (function(_React$Component) {
        _inherits(CustomDayClassNames, _React$Component);

        function CustomDayClassNames(props) {
          _classCallCheck(this, CustomDayClassNames);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        CustomDayClassNames.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                "\n<DatePicker\n  selected={this.state.startDate}\n  onChange={this.handleChange}\n  dayClassName={date => getDate(date) < Math.random() * 31 ? 'random' : undefined} />\n/>\n"
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                dayClassName: function dayClassName(date) {
                  return (0, _getDate2.default)(date) < Math.random() * 31
                    ? 'random'
                    : undefined;
                }
              })
            )
          );
        };

        return CustomDayClassNames;
      })(_react2.default.Component);

      exports.default = CustomDayClassNames;

      /***/
    },
    /* 735 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.default = PlaceholderText;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function PlaceholderText() {
        return _react2.default.createElement(
          'div',
          { className: 'row' },
          _react2.default.createElement(
            'pre',
            { className: 'column example__code' },
            _react2.default.createElement(
              'code',
              { className: 'jsx' },
              '<DatePicker placeholderText="Click to select a date" />'
            )
          ),
          _react2.default.createElement(
            'div',
            { className: 'column' },
            _react2.default.createElement(_reactDatepicker2.default, {
              placeholderText: 'Click to select a date'
            })
          )
        );
      }

      /***/
    },
    /* 736 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _addDays = __webpack_require__(575);

      var _addDays2 = _interopRequireDefault(_addDays);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var SpecificDateRange = (function(_React$Component) {
        _inherits(SpecificDateRange, _React$Component);

        function SpecificDateRange() {
          var _temp, _this, _ret;

          _classCallCheck(this, SpecificDateRange);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        SpecificDateRange.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '<DatePicker',
                _react2.default.createElement('br', null),
                '  selected={this.state.startDate}',
                _react2.default.createElement('br', null),
                '  onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  '  minDate={new Date()}'
                ),
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  '  maxDate={addDays(new Date(), 5)}'
                ),
                _react2.default.createElement('br', null),
                '  placeholderText="Select a date between today and 5 days in the future"',
                _react2.default.createElement('br', null),
                '/>'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                minDate: new Date(),
                maxDate: (0, _addDays2.default)(new Date(), 5),
                placeholderText:
                  'Select a date between today and 5 days in the future'
              })
            )
          );
        };

        return SpecificDateRange;
      })(_react2.default.Component);

      exports.default = SpecificDateRange;

      /***/
    },
    /* 737 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _enGB = __webpack_require__(738);

      var _enGB2 = _interopRequireDefault(_enGB);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      (0, _reactDatepicker.registerLocale)('en-GB', _enGB2.default);

      var CustomStartDate = (function(_React$Component) {
        _inherits(CustomStartDate, _React$Component);

        function CustomStartDate() {
          var _temp, _this, _ret;

          _classCallCheck(this, CustomStartDate);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        CustomStartDate.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                "import enGB from 'date-fns/locale/en-GB';",
                _react2.default.createElement('br', null),
                "registerLocale('en-GB', enGB);",
                _react2.default.createElement('br', null),
                _react2.default.createElement('br', null),
                '<DatePicker',
                _react2.default.createElement('br', null),
                '  selected={this.state.startDate}',
                _react2.default.createElement('br', null),
                '  onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  '  locale="en-GB"'
                ),
                _react2.default.createElement('br', null),
                '  placeholderText="Weeks start on Monday" />'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                locale: 'en-GB',
                placeholderText: 'Weeks start on Monday'
              })
            )
          );
        };

        return CustomStartDate;
      })(_react2.default.Component);

      exports.default = CustomStartDate;

      /***/
    },
    /* 738 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });

      var _index = __webpack_require__(550);

      var _index2 = _interopRequireDefault(_index);

      var _index3 = __webpack_require__(739);

      var _index4 = _interopRequireDefault(_index3);

      var _index5 = __webpack_require__(553);

      var _index6 = _interopRequireDefault(_index5);

      var _index7 = __webpack_require__(554);

      var _index8 = _interopRequireDefault(_index7);

      var _index9 = __webpack_require__(556);

      var _index10 = _interopRequireDefault(_index9);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * @type {Locale}
       * @category Locales
       * @summary English locale (United Kingdom).
       * @language English
       * @iso-639-2 eng
       * @author Alex [@glintik]{@link https://github.com/glintik}
       */
      var locale = {
        formatDistance: _index2.default,
        formatLong: _index4.default,
        formatRelative: _index6.default,
        localize: _index8.default,
        match: _index10.default,
        options: {
          weekStartsOn: 1 /* Monday */,
          firstWeekContainsDate: 4
        }
      };

      exports.default = locale;
      module.exports = exports['default'];

      /***/
    },
    /* 739 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true
      });

      var _index = __webpack_require__(552);

      var _index2 = _interopRequireDefault(_index);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var dateFormats = {
        full: 'EEEE, d MMMM yyyy',
        long: 'd MMMM yyyy',
        medium: 'd MMM yyyy',
        short: 'dd/MM/yyyy'
      };

      var timeFormats = {
        full: 'HH:mm:ss zzzz',
        long: 'HH:mm:ss z',
        medium: 'HH:mm:ss',
        short: 'HH:mm'
      };

      var dateTimeFormats = {
        full: "{{date}} 'at' {{time}}",
        long: "{{date}} 'at' {{time}}",
        medium: '{{date}}, {{time}}',
        short: '{{date}}, {{time}}'
      };

      var formatLong = {
        date: (0, _index2.default)({
          formats: dateFormats,
          defaultWidth: 'full'
        }),

        time: (0, _index2.default)({
          formats: timeFormats,
          defaultWidth: 'full'
        }),

        dateTime: (0, _index2.default)({
          formats: dateTimeFormats,
          defaultWidth: 'full'
        })
      };

      exports.default = formatLong;
      module.exports = exports['default'];

      /***/
    },
    /* 740 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _subDays = __webpack_require__(582);

      var _subDays2 = _interopRequireDefault(_subDays);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ExcludeDates = (function(_React$Component) {
        _inherits(ExcludeDates, _React$Component);

        function ExcludeDates() {
          var _temp, _this, _ret;

          _classCallCheck(this, ExcludeDates);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        ExcludeDates.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '<DatePicker',
                _react2.default.createElement('br', null),
                '  selected={this.state.startDate}',
                _react2.default.createElement('br', null),
                '  onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  '  excludeDates={[new Date(), subDays(new Date(), 1)]}'
                ),
                _react2.default.createElement('br', null),
                '  placeholderText="Select a date other than today or yesterday" />'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                excludeDates: [
                  new Date(),
                  (0, _subDays2.default)(new Date(), 1)
                ],
                placeholderText: 'Select a date other than today or yesterday'
              })
            )
          );
        };

        return ExcludeDates;
      })(_react2.default.Component);

      exports.default = ExcludeDates;

      /***/
    },
    /* 741 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _addDays = __webpack_require__(575);

      var _addDays2 = _interopRequireDefault(_addDays);

      var _subDays = __webpack_require__(582);

      var _subDays2 = _interopRequireDefault(_subDays);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var highlightDates = (function(_React$Component) {
        _inherits(highlightDates, _React$Component);

        function highlightDates() {
          var _temp, _this, _ret;

          _classCallCheck(this, highlightDates);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        highlightDates.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '<DatePicker',
                _react2.default.createElement('br', null),
                'selected={this.state.startDate}',
                _react2.default.createElement('br', null),
                'onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  'highlightDates={[subDays(new Date(), 7), addDays(new Date(), 7)]}'
                ),
                _react2.default.createElement('br', null),
                'placeholderText="This highlights a week ago and a week from today" />'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                highlightDates: [
                  (0, _subDays2.default)(new Date(), 7),
                  (0, _addDays2.default)(new Date(), 7)
                ],
                placeholderText:
                  'This highlights a week ago and a week from today'
              })
            )
          );
        };

        return highlightDates;
      })(_react2.default.Component);

      exports.default = highlightDates;

      /***/
    },
    /* 742 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _addDays = __webpack_require__(575);

      var _addDays2 = _interopRequireDefault(_addDays);

      var _subDays = __webpack_require__(582);

      var _subDays2 = _interopRequireDefault(_subDays);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var highlightDatesRanges = (function(_React$Component) {
        _inherits(highlightDatesRanges, _React$Component);

        function highlightDatesRanges(props) {
          _classCallCheck(this, highlightDatesRanges);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.state = {
            startDate: null
          };

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.highlightWithRanges = [
            {
              'react-datepicker__day--highlighted-custom-1': [
                (0, _subDays2.default)(new Date(), 4),
                (0, _subDays2.default)(new Date(), 3),
                (0, _subDays2.default)(new Date(), 2),
                (0, _subDays2.default)(new Date(), 1)
              ]
            },
            {
              'react-datepicker__day--highlighted-custom-2': [
                (0, _addDays2.default)(new Date(), 1),
                (0, _addDays2.default)(new Date(), 2),
                (0, _addDays2.default)(new Date(), 3),
                (0, _addDays2.default)(new Date(), 4)
              ]
            }
          ];
          return _this;
        }

        highlightDatesRanges.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                null,
                'constructor (props) {',
                _react2.default.createElement('br', null),
                '  super(props)',
                _react2.default.createElement('br', null),
                '  this.highlightWithRanges = [',
                _react2.default.createElement('br', null),
                '    { "react-datepicker__day--highlighted-custom-1": [',
                _react2.default.createElement('br', null),
                '      subDays(new Date(), 4),',
                _react2.default.createElement('br', null),
                '      subDays(new Date(), 3),',
                _react2.default.createElement('br', null),
                '      subDays(new Date(), 2),',
                _react2.default.createElement('br', null),
                '      subDays(new Date(), 1) ]',
                _react2.default.createElement('br', null),
                '    },',
                _react2.default.createElement('br', null),
                '    { "react-datepicker__day--highlighted-custom-2": [',
                _react2.default.createElement('br', null),
                '      addDays(new Date(), 1),',
                _react2.default.createElement('br', null),
                '      addDays(new Date(), 2),',
                _react2.default.createElement('br', null),
                '      addDays(new Date(), 3),',
                _react2.default.createElement('br', null),
                '      addDays(new Date(), 4) ]',
                _react2.default.createElement('br', null),
                '    }',
                _react2.default.createElement('br', null),
                '  ]',
                _react2.default.createElement('br', null),
                '}',
                _react2.default.createElement('br', null)
              ),
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '<DatePicker',
                _react2.default.createElement('br', null),
                'selected={this.state.startDate}',
                _react2.default.createElement('br', null),
                'onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  'highlightDates={this.highlightWithRanges}'
                ),
                _react2.default.createElement('br', null),
                'placeholderText="This highlight two ranges with custom classes" />'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                highlightDates: this.highlightWithRanges,
                placeholderText: 'This highlight two ranges with custom classes'
              })
            )
          );
        };

        return highlightDatesRanges;
      })(_react2.default.Component);

      exports.default = highlightDatesRanges;

      /***/
    },
    /* 743 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _addDays = __webpack_require__(575);

      var _addDays2 = _interopRequireDefault(_addDays);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var includeDates = (function(_React$Component) {
        _inherits(includeDates, _React$Component);

        function includeDates() {
          var _temp, _this, _ret;

          _classCallCheck(this, includeDates);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        includeDates.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '<DatePicker',
                _react2.default.createElement('br', null),
                'selected={this.state.startDate}',
                _react2.default.createElement('br', null),
                'onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  'includeDates={[new Date(), addDays(new Date(), 1)]}'
                ),
                _react2.default.createElement('br', null),
                'placeholderText="This only includes today and tomorrow" />'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                includeDates: [
                  new Date(),
                  (0, _addDays2.default)(new Date(), 1)
                ],
                placeholderText: 'This only includes today and tomorrow'
              })
            )
          );
        };

        return includeDates;
      })(_react2.default.Component);

      exports.default = includeDates;

      /***/
    },
    /* 744 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _getDay = __webpack_require__(589);

      var _getDay2 = _interopRequireDefault(_getDay);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var FilterDates = (function(_React$Component) {
        _inherits(FilterDates, _React$Component);

        function FilterDates() {
          var _temp, _this, _ret;

          _classCallCheck(this, FilterDates);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              date: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                date: date
              });
            }),
            (_this.isWeekday = function(date) {
              var day = (0, _getDay2.default)(date);
              return day !== 0 && day !== 6;
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        FilterDates.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '<DatePicker',
                _react2.default.createElement('br', null),
                'selected={this.state.date}',
                _react2.default.createElement('br', null),
                'onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  'filterDate={this.isWeekday}'
                ),
                _react2.default.createElement('br', null),
                'placeholderText="Select a weekday" />'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.date,
                onChange: this.handleChange,
                filterDate: this.isWeekday,
                placeholderText: 'Select a weekday'
              })
            )
          );
        };

        return FilterDates;
      })(_react2.default.Component);

      exports.default = FilterDates;

      /***/
    },
    /* 745 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Disabled = (function(_React$Component) {
        _inherits(Disabled, _React$Component);

        function Disabled(props) {
          _classCallCheck(this, Disabled);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: null
          };
          return _this;
        }

        Disabled.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '<DatePicker',
                _react2.default.createElement('br', null),
                '  selected={this.state.startDate}',
                _react2.default.createElement('br', null),
                '  onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  '  disabled={true}'
                ),
                _react2.default.createElement('br', null),
                '  placeholderText="This is disabled"',
                ' />'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                disabled: true,
                placeholderText: 'This is disabled'
              })
            )
          );
        };

        return Disabled;
      })(_react2.default.Component);

      exports.default = Disabled;

      /***/
    },
    /* 746 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var DisabledKeyboardNavigation = (function(_React$Component) {
        _inherits(DisabledKeyboardNavigation, _React$Component);

        function DisabledKeyboardNavigation(props) {
          _classCallCheck(this, DisabledKeyboardNavigation);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        DisabledKeyboardNavigation.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '<DatePicker',
                _react2.default.createElement('br', null),
                'selected={this.state.startDate}',
                _react2.default.createElement('br', null),
                'onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  'disabledKeyboardNavigation'
                ),
                _react2.default.createElement('br', null),
                'placeholderText="This has disabled keyboard navigation" />'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                disabledKeyboardNavigation: true,
                placeholderText: 'This has disabled keyboard navigation'
              })
            )
          );
        };

        return DisabledKeyboardNavigation;
      })(_react2.default.Component);

      exports.default = DisabledKeyboardNavigation;

      /***/
    },
    /* 747 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ClearInput = (function(_React$Component) {
        _inherits(ClearInput, _React$Component);

        function ClearInput(props) {
          _classCallCheck(this, ClearInput);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        ClearInput.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n  selected={this.state.startDate}\n  onChange={this.handleChange }\n  isClearable={true}\n  placeholderText="I have been cleared!"\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                isClearable: true,
                placeholderText: 'I have been cleared!'
              })
            )
          );
        };

        return ClearInput;
      })(_react2.default.Component);

      exports.default = ClearInput;

      /***/
    },
    /* 748 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _format = __webpack_require__(548);

      var _format2 = _interopRequireDefault(_format);

      var _isValid = __webpack_require__(544);

      var _isValid2 = _interopRequireDefault(_isValid);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Disabled = (function(_React$Component) {
        _inherits(Disabled, _React$Component);

        function Disabled() {
          var _temp, _this, _ret;

          _classCallCheck(this, Disabled);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            (_this.handleOnBlur = function(date) {
              var selectedDate = new Date(date);
              if ((0, _isValid2.default)(date)) {
                console.log(
                  'selected date: %s',
                  (0, _format2.default)(selectedDate, 'dd/MM/yyyy')
                );
              }
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        Disabled.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'js' },
                '\nhandleOnBlur: function (date) {\n    const date = new Date(event.target.value);\n    if (isValid(date)) {\n      console.log("selected date: %s", format(date, "dd/MM/yyyy"));\n    } else {\n      console.log("selected date: %s", event.target.value);\n    }\n};\'}\n'
              ),
              _react2.default.createElement('br', null),
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '<DatePicker',
                _react2.default.createElement('br', null),
                'key="example9"',
                _react2.default.createElement('br', null),
                'selected={this.state.startDate}',
                _react2.default.createElement('br', null),
                'onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  'onBlur={this.handleOnBlur}'
                ),
                _react2.default.createElement('br', null),
                'placeholderText="View blur callbacks in console" />'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                key: 'example9',
                selected: this.state.startDate,
                onChange: this.handleChange,
                onBlur: this.handleOnBlur,
                placeholderText: 'View blur callbacks in console'
              })
            )
          );
        };

        return Disabled;
      })(_react2.default.Component);

      exports.default = Disabled;

      /***/
    },
    /* 749 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ConfigurePopper = (function(_React$Component) {
        _inherits(ConfigurePopper, _React$Component);

        function ConfigurePopper(props) {
          _classCallCheck(this, ConfigurePopper);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        ConfigurePopper.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    popperClassName="some-custom-class"\n    popperPlacement="top-end"\n    popperModifiers={{\n      offset: {\n        enabled: true,\n        offset: \'5px, 10px\'\n      },\n      preventOverflow: {\n        enabled: true,\n        escapeWithReference: false, // force popper to stay in viewport (even when input is scrolled out of view)\n        boundariesElement: \'viewport\'\n      }\n    }}\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                popperClassName: 'some-custom-class',
                popperPlacement: 'top-end',
                popperModifiers: {
                  offset: {
                    enabled: true,
                    offset: '5px, 10px'
                  },
                  preventOverflow: {
                    enabled: true,
                    escapeWithReference: false,
                    boundariesElement: 'viewport'
                  }
                }
              })
            )
          );
        };

        return ConfigurePopper;
      })(_react2.default.Component);

      exports.default = ConfigurePopper;

      /***/
    },
    /* 750 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _isAfter = __webpack_require__(616);

      var _isAfter2 = _interopRequireDefault(_isAfter);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var DateRange = (function(_React$Component) {
        _inherits(DateRange, _React$Component);

        function DateRange(props) {
          _classCallCheck(this, DateRange);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(_ref) {
            var startDate = _ref.startDate,
              endDate = _ref.endDate;

            startDate = startDate || _this.state.startDate;
            endDate = endDate || _this.state.endDate;

            if ((0, _isAfter2.default)(startDate, endDate)) {
              endDate = startDate;
            }

            _this.setState({ startDate: startDate, endDate: endDate });
          };

          _this.handleChangeStart = function(startDate) {
            return _this.handleChange({ startDate: startDate });
          };

          _this.handleChangeEnd = function(endDate) {
            return _this.handleChange({ endDate: endDate });
          };

          _this.state = {
            startDate: new Date('2014/02/08'),
            endDate: new Date('2014/02/10')
          };
          return _this;
        }

        DateRange.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    selectsStart\n    startDate={this.state.startDate}\n    endDate={this.state.endDate}\n    onChange={this.handleChangeStart}\n/>\n\n<DatePicker\n    selected={this.state.endDate}\n    selectsEnd\n    startDate={this.state.startDate}\n    endDate={this.state.endDate}\n    onChange={this.handleChangeEnd}\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                selectsStart: true,
                startDate: this.state.startDate,
                endDate: this.state.endDate,
                onChange: this.handleChangeStart
              }),
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.endDate,
                selectsEnd: true,
                startDate: this.state.startDate,
                endDate: this.state.endDate,
                onChange: this.handleChangeEnd
              })
            )
          );
        };

        return DateRange;
      })(_react2.default.Component);

      exports.default = DateRange;

      /***/
    },
    /* 751 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _addMonths = __webpack_require__(577);

      var _addMonths2 = _interopRequireDefault(_addMonths);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var DateRangeWithShowDisabledNavigation = (function(_React$Component) {
        _inherits(DateRangeWithShowDisabledNavigation, _React$Component);

        function DateRangeWithShowDisabledNavigation() {
          var _temp, _this, _ret;

          _classCallCheck(this, DateRangeWithShowDisabledNavigation);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        DateRangeWithShowDisabledNavigation.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n  selected={this.state.startDate}\n  onChange={this.handleChange}\n  minDate={new Date()}\n  maxDate={addMonths(new Date(), 5)}\n  showDisabledMonthNavigation />\n</div>\n\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                minDate: new Date(),
                maxDate: (0, _addMonths2.default)(new Date(), 5),
                showDisabledMonthNavigation: true
              })
            )
          );
        };

        return DateRangeWithShowDisabledNavigation;
      })(_react2.default.Component);

      exports.default = DateRangeWithShowDisabledNavigation;

      /***/
    },
    /* 752 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var TabIndex = (function(_React$Component) {
        _inherits(TabIndex, _React$Component);

        function TabIndex(props) {
          _classCallCheck(this, TabIndex);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        TabIndex.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    tabIndex={1}\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                tabIndex: 1
              })
            )
          );
        };

        return TabIndex;
      })(_react2.default.Component);

      exports.default = TabIndex;

      /***/
    },
    /* 753 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var YearDropdown = (function(_React$Component) {
        _inherits(YearDropdown, _React$Component);

        function YearDropdown(props) {
          _classCallCheck(this, YearDropdown);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        YearDropdown.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n        <DatePicker\n            selected={this.state.startDate}\n            onChange={this.handleChange}\n            showYearDropdown\n            dateFormatCalendar="MMMM"\n            scrollableYearDropdown\n            yearDropdownItemNumber={15}\n        />\n        '
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showYearDropdown: true,
                dateFormatCalendar: 'MMMM',
                yearDropdownItemNumber: 15,
                scrollableYearDropdown: true
              })
            )
          );
        };

        return YearDropdown;
      })(_react2.default.Component);

      exports.default = YearDropdown;

      /***/
    },
    /* 754 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var MonthDropdown = (function(_React$Component) {
        _inherits(MonthDropdown, _React$Component);

        function MonthDropdown(props) {
          _classCallCheck(this, MonthDropdown);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        MonthDropdown.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    showMonthDropdown\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showMonthDropdown: true
              })
            )
          );
        };

        return MonthDropdown;
      })(_react2.default.Component);

      exports.default = MonthDropdown;

      /***/
    },
    /* 755 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _addMonths = __webpack_require__(577);

      var _addMonths2 = _interopRequireDefault(_addMonths);

      var _subMonths = __webpack_require__(584);

      var _subMonths2 = _interopRequireDefault(_subMonths);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var MonthYearDropdown = (function(_React$Component) {
        _inherits(MonthYearDropdown, _React$Component);

        function MonthYearDropdown(props) {
          _classCallCheck(this, MonthYearDropdown);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        MonthYearDropdown.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n  selected={this.state.startDate}\n  onChange={this.handleChange}\n  dateFormatCalendar={"MMM yyyy"}\n  minDate={subMonths(new Date(), 6)}\n  maxDate={addMonths(new Date(), 6)}\n  showMonthYearDropdown\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                dateFormatCalendar: 'MMM yyyy',
                minDate: (0, _subMonths2.default)(new Date(), 6),
                maxDate: (0, _addMonths2.default)(new Date(), 6),
                showMonthYearDropdown: true
              })
            )
          );
        };

        return MonthYearDropdown;
      })(_react2.default.Component);

      exports.default = MonthYearDropdown;

      /***/
    },
    /* 756 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var MonthDropdownShort = (function(_React$Component) {
        _inherits(MonthDropdownShort, _React$Component);

        function MonthDropdownShort(props) {
          _classCallCheck(this, MonthDropdownShort);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        MonthDropdownShort.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    showMonthDropdown\n    useShortMonthInDropdown\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showMonthDropdown: true,
                useShortMonthInDropdown: true
              })
            )
          );
        };

        return MonthDropdownShort;
      })(_react2.default.Component);

      exports.default = MonthDropdownShort;

      /***/
    },
    /* 757 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var YearDropdown = (function(_React$Component) {
        _inherits(YearDropdown, _React$Component);

        function YearDropdown(props) {
          _classCallCheck(this, YearDropdown);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        YearDropdown.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    peekNextMonth\n    showMonthDropdown\n    showYearDropdown\n    dropdownMode="select"\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                peekNextMonth: true,
                showMonthDropdown: true,
                showYearDropdown: true,
                dropdownMode: 'select'
              })
            )
          );
        };

        return YearDropdown;
      })(_react2.default.Component);

      exports.default = YearDropdown;

      /***/
    },
    /* 758 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Today = (function(_React$Component) {
        _inherits(Today, _React$Component);

        function Today(props) {
          _classCallCheck(this, Today);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        Today.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    todayButton={"Vandaag"}\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                todayButton: 'Vandaag',
                selected: this.state.startDate,
                onChange: this.handleChange
              })
            )
          );
        };

        return Today;
      })(_react2.default.Component);

      exports.default = Today;

      /***/
    },
    /* 759 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Inline = (function(_React$Component) {
        _inherits(Inline, _React$Component);

        function Inline(props) {
          _classCallCheck(this, Inline);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        Inline.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    inline\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                inline: true,
                selected: this.state.startDate,
                onChange: this.handleChange
              })
            )
          );
        };

        return Inline;
      })(_react2.default.Component);

      exports.default = Inline;

      /***/
    },
    /* 760 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var OpenToDate = (function(_React$Component) {
        _inherits(OpenToDate, _React$Component);

        function OpenToDate() {
          var _temp, _this, _ret;

          _classCallCheck(this, OpenToDate);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        OpenToDate.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    openToDate={new Date("1993/09/28")}\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                openToDate: new Date('1993/09/28'),
                selected: this.state.startDate,
                onChange: this.handleChange
              })
            )
          );
        };

        return OpenToDate;
      })(_react2.default.Component);

      exports.default = OpenToDate;

      /***/
    },
    /* 761 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var FixedCalendar = (function(_React$Component) {
        _inherits(FixedCalendar, _React$Component);

        function FixedCalendar() {
          var _temp, _this, _ret;

          _classCallCheck(this, FixedCalendar);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        FixedCalendar.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '<DatePicker',
                _react2.default.createElement('br', null),
                'fixedHeight',
                _react2.default.createElement('br', null),
                'selected={this.state.startDate}',
                _react2.default.createElement('br', null),
                'onChange={this.handleChange} />'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                fixedHeight: true,
                selected: this.state.startDate,
                onChange: this.handleChange
              })
            )
          );
        };

        return FixedCalendar;
      })(_react2.default.Component);

      exports.default = FixedCalendar;

      /***/
    },
    /* 762 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Default = (function(_React$Component) {
        _inherits(Default, _React$Component);

        function Default(props) {
          _classCallCheck(this, Default);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        Default.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    showWeekNumbers\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showWeekNumbers: true
              })
            )
          );
        };

        return Default;
      })(_react2.default.Component);

      exports.default = Default;

      /***/
    },
    /* 763 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      /* eslint-disable react/no-multi-comp */
      var ExampleCustomInput = (function(_React$Component) {
        _inherits(ExampleCustomInput, _React$Component);

        function ExampleCustomInput() {
          _classCallCheck(this, ExampleCustomInput);

          return _possibleConstructorReturn(
            this,
            _React$Component.apply(this, arguments)
          );
        }

        ExampleCustomInput.prototype.render = function render() {
          return _react2.default.createElement(
            'button',
            { className: 'example-custom-input', onClick: this.props.onClick },
            this.props.value
          );
        };

        return ExampleCustomInput;
      })(_react2.default.Component);

      ExampleCustomInput.propTypes = {
        onClick: _propTypes2.default.func,
        value: _propTypes2.default.string
      };

      var CustomInput = (function(_React$Component2) {
        _inherits(CustomInput, _React$Component2);

        function CustomInput(props) {
          _classCallCheck(this, CustomInput);

          var _this2 = _possibleConstructorReturn(
            this,
            _React$Component2.call(this, props)
          );

          _this2.handleChange = function(date) {
            _this2.setState({
              startDate: date
            });
          };

          _this2.state = {
            startDate: new Date()
          };
          return _this2;
        }

        CustomInput.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\nclass ExampleCustomInput extends React.Component {\n\n  render () {\n    return (\n      <button\n        className="example-custom-input"\n        onClick={this.props.onClick}>\n        {this.props.value}\n      </button>\n    )\n  }\n}\n\nExampleCustomInput.propTypes = {\n  onClick: PropTypes.func,\n  value: PropTypes.string\n};\n\n...\n\n<DatePicker\n  customInput={<ExampleCustomInput />}\n  selected={this.state.startDate}\n  onChange={this.handleChange} />\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                customInput: _react2.default.createElement(
                  ExampleCustomInput,
                  null
                ),
                selected: this.state.startDate,
                onChange: this.handleChange
              })
            )
          );
        };

        return CustomInput;
      })(_react2.default.Component);

      exports.default = CustomInput;

      /***/
    },
    /* 764 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var MultiMonth = (function(_React$Component) {
        _inherits(MultiMonth, _React$Component);

        function MultiMonth(props) {
          _classCallCheck(this, MultiMonth);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        MultiMonth.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    monthsShown={2}\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                monthsShown: 2,
                onChange: this.handleChange,
                selected: this.state.startDate
              })
            )
          );
        };

        return MultiMonth;
      })(_react2.default.Component);

      exports.default = MultiMonth;

      /***/
    },
    /* 765 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var MultiMonthDrp = (function(_React$Component) {
        _inherits(MultiMonthDrp, _React$Component);

        function MultiMonthDrp(props) {
          _classCallCheck(this, MultiMonthDrp);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        MultiMonthDrp.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    showYearDropdown\n    monthsShown={2}\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                monthsShown: 2,
                onChange: this.handleChange,
                showYearDropdown: true,
                selected: this.state.startDate
              })
            )
          );
        };

        return MultiMonthDrp;
      })(_react2.default.Component);

      exports.default = MultiMonthDrp;

      /***/
    },
    /* 766 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var MultiMonthInline = (function(_React$Component) {
        _inherits(MultiMonthInline, _React$Component);

        function MultiMonthInline(props) {
          _classCallCheck(this, MultiMonthInline);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        MultiMonthInline.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    inline\n    onChange={this.handleChange}\n    monthsShown={2}\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                monthsShown: 2,
                inline: true,
                onChange: this.handleChange,
                selected: this.state.startDate
              })
            )
          );
        };

        return MultiMonthInline;
      })(_react2.default.Component);

      exports.default = MultiMonthInline;

      /***/
    },
    /* 767 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Children = (function(_React$Component) {
        _inherits(Children, _React$Component);

        function Children(props) {
          _classCallCheck(this, Children);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        Children.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                "\n<DatePicker\n  selected={this.state.startDate}\n  onChange={this.handleChange}\n>\n  <div style={{color: 'red'}}>\n    Don't forget to check the weather!\n  </div>\n</DatePicker>\n"
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(
                _reactDatepicker2.default,
                {
                  selected: this.state.startDate,
                  onChange: this.handleChange
                },
                _react2.default.createElement(
                  'div',
                  { style: { color: 'red' } },
                  "Don't forget to check the weather!"
                )
              )
            )
          );
        };

        return Children;
      })(_react2.default.Component);

      exports.default = Children;

      /***/
    },
    /* 768 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _propTypes = __webpack_require__(535);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CalendarContainer = (function(_React$Component) {
        _inherits(CalendarContainer, _React$Component);

        function CalendarContainer(props) {
          _classCallCheck(this, CalendarContainer);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        CalendarContainer.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                "<DatePicker\n  selected={this.state.startDate}\n  onChange={this.handleChange}\n  calendarContainer={MyContainer}\n/>\n\nfunction MyContainer({ className, children }) {\n    return (\n      <div style={{ padding: '16px', background: '#216ba5', color: '#fff' }}>\n        <CalendarContainer className={className}>\n          <div style={{ background: '#f0f0f0' }}>What is your favorite day?</div>\n          <div style={{ position: 'relative' }}>\n            {children}\n          </div>\n        </CalendarContainer>\n      </div>\n    );\n  }\n  "
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                calendarContainer: MyContainer
              })
            )
          );
        };

        return CalendarContainer;
      })(_react2.default.Component);

      // eslint-disable-next-line react/no-multi-comp

      exports.default = CalendarContainer;
      function MyContainer(_ref) {
        var className = _ref.className,
          children = _ref.children;

        return _react2.default.createElement(
          'div',
          { style: { padding: '16px', background: '#216ba5', color: '#fff' } },
          _react2.default.createElement(
            _reactDatepicker.CalendarContainer,
            { className: className },
            _react2.default.createElement(
              'div',
              { style: { background: '#f0f0f0' } },
              'What is your favorite day?'
            ),
            _react2.default.createElement(
              'div',
              { style: { position: 'relative' } },
              children
            )
          )
        );
      }

      MyContainer.propTypes = {
        className: _propTypes2.default.string,
        children: _propTypes2.default.node
      };

      /***/
    },
    /* 769 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var WithPortal = (function(_React$Component) {
        _inherits(WithPortal, _React$Component);

        function WithPortal(props) {
          _classCallCheck(this, WithPortal);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        WithPortal.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    withPortal\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                withPortal: true
              })
            )
          );
        };

        return WithPortal;
      })(_react2.default.Component);

      exports.default = WithPortal;

      /***/
    },
    /* 770 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _format = __webpack_require__(548);

      var _format2 = _interopRequireDefault(_format);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var InlinePortalVersion = (function(_React$Component) {
        _inherits(InlinePortalVersion, _React$Component);

        function InlinePortalVersion(props) {
          _classCallCheck(this, InlinePortalVersion);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({ startDate: date });
            _this.toggleCalendar();
          };

          _this.toggleCalendar = function(e) {
            e && e.preventDefault();
            _this.setState({ isOpen: !_this.state.isOpen });
          };

          _this.state = {
            startDate: new Date(),
            isOpen: false
          };
          return _this;
        }

        InlinePortalVersion.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\nhandleChange (date) {\n  this.setState({startDate: date})\n  this.toggleCalendar()\n}\n\ntoggleCalendar (e) {\n  e && e.preventDefault()\n  this.setState({isOpen: !this.state.isOpen})\n}\n\n<div>\n    <button\n        className="example-custom-input"\n        onClick={this.toggleCalendar}>\n        {format(this.state.startDate, "dd-MM-yyyy")}\n    </button>\n    {\n        this.state.isOpen && (\n            <DatePicker\n                selected={this.state.startDate}\n                onChange={this.handleChange}\n                withPortal\n                inline />\n        )\n    }\n</div>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(
                'button',
                {
                  className: 'example-custom-input',
                  onClick: this.toggleCalendar
                },
                (0, _format2.default)(this.state.startDate, 'dd-MM-yyyy')
              ),
              this.state.isOpen &&
                _react2.default.createElement(_reactDatepicker2.default, {
                  selected: this.state.startDate,
                  onChange: this.handleChange,
                  withPortal: true,
                  inline: true
                })
            )
          );
        };

        return InlinePortalVersion;
      })(_react2.default.Component);

      exports.default = InlinePortalVersion;

      /***/
    },
    /* 771 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _addDays = __webpack_require__(575);

      var _addDays2 = _interopRequireDefault(_addDays);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var RawChanges = (function(_React$Component) {
        _inherits(RawChanges, _React$Component);

        function RawChanges() {
          var _temp, _this, _ret;

          _classCallCheck(this, RawChanges);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: null
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            (_this.handleChangeRaw = function(value) {
              if (value === 'tomorrow') {
                _this.handleChange((0, _addDays2.default)(new Date(), 1));
              }
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        RawChanges.prototype.render = function render() {
          var _this2 = this;

          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\nhandleChangeRaw(value) {\n  if(value === "tomorrow") {\n    const tomorrow = addDays(new Date(), 1)\n    this.handleChange(tomorrow)\n  }\n}\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    placeholderText="Enter tomorrow"\n    onChangeRaw={(event) =>\n      this.handleChangeRaw(event.target.value)}\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                placeholderText: 'Enter "tomorrow"',
                onChangeRaw: function onChangeRaw(event) {
                  return _this2.handleChangeRaw(event.target.value);
                }
              })
            )
          );
        };

        return RawChanges;
      })(_react2.default.Component);

      exports.default = RawChanges;

      /***/
    },
    /* 772 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ReadOnly = (function(_React$Component) {
        _inherits(ReadOnly, _React$Component);

        function ReadOnly(props) {
          _classCallCheck(this, ReadOnly);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: null
          };
          return _this;
        }

        ReadOnly.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '<DatePicker',
                _react2.default.createElement('br', null),
                '  selected={this.state.startDate}',
                _react2.default.createElement('br', null),
                '  onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  '  readOnly={true}'
                ),
                _react2.default.createElement('br', null),
                '  placeholderText="This is readOnly"',
                ' />'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                placeholderText: 'This is readOnly',
                readOnly: true
              })
            )
          );
        };

        return ReadOnly;
      })(_react2.default.Component);

      exports.default = ReadOnly;

      /***/
    },
    /* 773 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ShowTime = (function(_React$Component) {
        _inherits(ShowTime, _React$Component);

        function ShowTime(props) {
          _classCallCheck(this, ShowTime);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        ShowTime.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  '    showTimeSelect\n    timeFormat="HH:mm"\n    timeIntervals={15}\n    dateFormat="MMMM d, yyyy h:mm aa"\n    timeCaption="time"\n/>\n'
                )
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showTimeSelect: true,
                timeFormat: 'HH:mm',
                timeIntervals: 15,
                timeCaption: 'time',
                dateFormat: 'MMMM d, yyyy h:mm aa'
              })
            )
          );
        };

        return ShowTime;
      })(_react2.default.Component);

      exports.default = ShowTime;

      /***/
    },
    /* 774 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ShowTimeOnly = (function(_React$Component) {
        _inherits(ShowTimeOnly, _React$Component);

        function ShowTimeOnly(props) {
          _classCallCheck(this, ShowTimeOnly);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        ShowTimeOnly.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  '    showTimeSelect\n    showTimeSelectOnly\n    timeIntervals={15}\n    dateFormat="h:mm aa"\n    timeCaption="Time"\n/>\n'
                )
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showTimeSelect: true,
                showTimeSelectOnly: true,
                timeIntervals: 15,
                timeCaption: 'Time',
                dateFormat: 'h:mm aa'
              })
            )
          );
        };

        return ShowTimeOnly;
      })(_react2.default.Component);

      exports.default = ShowTimeOnly;

      /***/
    },
    /* 775 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _setMinutes = __webpack_require__(595);

      var _setMinutes2 = _interopRequireDefault(_setMinutes);

      var _setHours = __webpack_require__(596);

      var _setHours2 = _interopRequireDefault(_setHours);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ExcludeTimes = (function(_React$Component) {
        _inherits(ExcludeTimes, _React$Component);

        function ExcludeTimes() {
          var _temp, _this, _ret;

          _classCallCheck(this, ExcludeTimes);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: (0, _setHours2.default)(
                (0, _setMinutes2.default)(new Date(), 30),
                16
              )
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        ExcludeTimes.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '<DatePicker',
                _react2.default.createElement('br', null),
                '  selected={this.state.startDate}',
                _react2.default.createElement('br', null),
                '  onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  '  showTimeSelect',
                  _react2.default.createElement('br', null),
                  '  excludeTimes={[setHours(setMinutes(new Date(), 0), 17), setHours(setMinutes(new Date(), 30), 18), setHours(setMinutes(new Date(), 30), 19), setHours(setMinutes(new Date(), 30), 17)]}'
                ),
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  '  dateFormat="MMMM d, yyyy h:mm aa"'
                ),
                _react2.default.createElement('br', null),
                '/>'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showTimeSelect: true,
                excludeTimes: [
                  (0, _setHours2.default)(
                    (0, _setMinutes2.default)(new Date(), 0),
                    17
                  ),
                  (0, _setHours2.default)(
                    (0, _setMinutes2.default)(new Date(), 30),
                    18
                  ),
                  (0, _setHours2.default)(
                    (0, _setMinutes2.default)(new Date(), 30),
                    19
                  ),
                  (0, _setHours2.default)(
                    (0, _setMinutes2.default)(new Date(), 30),
                    17
                  )
                ],
                dateFormat: 'MMMM d, yyyy h:mm aa'
              })
            )
          );
        };

        return ExcludeTimes;
      })(_react2.default.Component);

      exports.default = ExcludeTimes;

      /***/
    },
    /* 776 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _setMinutes = __webpack_require__(595);

      var _setMinutes2 = _interopRequireDefault(_setMinutes);

      var _setHours = __webpack_require__(596);

      var _setHours2 = _interopRequireDefault(_setHours);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ExcludeTimePeriod = (function(_React$Component) {
        _inherits(ExcludeTimePeriod, _React$Component);

        function ExcludeTimePeriod() {
          var _temp, _this, _ret;

          _classCallCheck(this, ExcludeTimePeriod);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: (0, _setHours2.default)(
                (0, _setMinutes2.default)(new Date(), 30),
                17
              )
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        ExcludeTimePeriod.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '<DatePicker',
                _react2.default.createElement('br', null),
                '  selected={this.state.startDate}',
                _react2.default.createElement('br', null),
                '  onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  '  showTimeSelect',
                  _react2.default.createElement('br', null),
                  '  minTime={setHours(setMinutes(new Date(), 0), 17)}',
                  _react2.default.createElement('br', null),
                  '  maxTime={setHours(setMinutes(new Date(), 30), 20)}',
                  _react2.default.createElement('br', null),
                  '  dateFormat="MMMM d, yyyy"'
                ),
                _react2.default.createElement('br', null),
                '/>'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showTimeSelect: true,
                minTime: (0, _setHours2.default)(
                  (0, _setMinutes2.default)(new Date(), 0),
                  17
                ),
                maxTime: (0, _setHours2.default)(
                  (0, _setMinutes2.default)(new Date(), 30),
                  20
                ),
                dateFormat: 'MMMM d, yyyy h:mm aa'
              })
            )
          );
        };

        return ExcludeTimePeriod;
      })(_react2.default.Component);

      exports.default = ExcludeTimePeriod;

      /***/
    },
    /* 777 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _setMinutes = __webpack_require__(595);

      var _setMinutes2 = _interopRequireDefault(_setMinutes);

      var _setHours = __webpack_require__(596);

      var _setHours2 = _interopRequireDefault(_setHours);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var IncludeTimes = (function(_React$Component) {
        _inherits(IncludeTimes, _React$Component);

        function IncludeTimes() {
          var _temp, _this, _ret;

          _classCallCheck(this, IncludeTimes);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: (0, _setHours2.default)(
                (0, _setMinutes2.default)(new Date(), 30),
                16
              )
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        IncludeTimes.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '<DatePicker',
                _react2.default.createElement('br', null),
                '  selected={this.state.startDate}',
                _react2.default.createElement('br', null),
                '  onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  '  showTimeSelect',
                  _react2.default.createElement('br', null),
                  '  includeTimes={[setHours(setMinutes(new Date(), 0), 17), setHours(setMinutes(new Date(), 30), 18), setHours(setMinutes(new Date(), 30), 19), setHours(setMinutes(new Date(), 30), 17)]}'
                ),
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  '  dateFormat="MMMM d, yyyy h:mm aa"'
                ),
                _react2.default.createElement('br', null),
                '/>'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showTimeSelect: true,
                includeTimes: [
                  (0, _setHours2.default)(
                    (0, _setMinutes2.default)(new Date(), 0),
                    17
                  ),
                  (0, _setHours2.default)(
                    (0, _setMinutes2.default)(new Date(), 30),
                    18
                  ),
                  (0, _setHours2.default)(
                    (0, _setMinutes2.default)(new Date(), 30),
                    19
                  ),
                  (0, _setHours2.default)(
                    (0, _setMinutes2.default)(new Date(), 30),
                    17
                  )
                ],
                dateFormat: 'MMMM d, yyyy h:mm aa'
              })
            )
          );
        };

        return IncludeTimes;
      })(_react2.default.Component);

      exports.default = IncludeTimes;

      /***/
    },
    /* 778 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _setMinutes = __webpack_require__(595);

      var _setMinutes2 = _interopRequireDefault(_setMinutes);

      var _setHours = __webpack_require__(596);

      var _setHours2 = _interopRequireDefault(_setHours);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var InjectTimes = (function(_React$Component) {
        _inherits(InjectTimes, _React$Component);

        function InjectTimes() {
          var _temp, _this, _ret;

          _classCallCheck(this, InjectTimes);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret = ((_temp = ((_this = _possibleConstructorReturn(
              this,
              _React$Component.call.apply(_React$Component, [this].concat(args))
            )),
            _this)),
            (_this.state = {
              startDate: (0, _setHours2.default)(
                (0, _setMinutes2.default)(new Date(), 30),
                16
              )
            }),
            (_this.handleChange = function(date) {
              _this.setState({
                startDate: date
              });
            }),
            _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        InjectTimes.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}',
                _react2.default.createElement('br', null),
                _react2.default.createElement(
                  'strong',
                  null,
                  '    showTimeSelect\n    timeFormat="HH:mm"\n    injectTimes={[\n      setHours(setMinutes(new Date(), 1), 0),\n      setHours(setMinutes(new Date(), 5), 12),\n      setHours(setMinutes(new Date(), 59), 23)\n    ]}\n    dateFormat="MMMM d, yyyy h:mm aa"\n/>\n'
                )
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                showTimeSelect: true,
                timeFormat: 'HH:mm',
                injectTimes: [
                  (0, _setHours2.default)(
                    (0, _setMinutes2.default)(new Date(), 1),
                    0
                  ),
                  (0, _setHours2.default)(
                    (0, _setMinutes2.default)(new Date(), 5),
                    12
                  ),
                  (0, _setHours2.default)(
                    (0, _setMinutes2.default)(new Date(), 59),
                    23
                  )
                ],
                dateFormat: 'MMMM d, yyyy h:mm aa'
              })
            )
          );
        };

        return InjectTimes;
      })(_react2.default.Component);

      exports.default = InjectTimes;

      /***/
    },
    /* 779 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var DontCloseOnSelect = (function(_React$Component) {
        _inherits(DontCloseOnSelect, _React$Component);

        function DontCloseOnSelect(props) {
          _classCallCheck(this, DontCloseOnSelect);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        DontCloseOnSelect.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    shouldCloseOnSelect={false}\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                selected: this.state.startDate,
                onChange: this.handleChange,
                shouldCloseOnSelect: false
              })
            )
          );
        };

        return DontCloseOnSelect;
      })(_react2.default.Component);

      exports.default = DontCloseOnSelect;

      /***/
    },
    /* 780 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      var _range = __webpack_require__(781);

      var _range2 = _interopRequireDefault(_range);

      var _getYear = __webpack_require__(592);

      var _getYear2 = _interopRequireDefault(_getYear);

      var _getMonth = __webpack_require__(591);

      var _getMonth2 = _interopRequireDefault(_getMonth);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var years = (0, _range2.default)(
        1990,
        (0, _getYear2.default)(new Date()) + 1,
        1
      );
      var months = [
        'January',
        'February',
        'March',
        'April',
        'May',
        'June',
        'July',
        'August',
        'September',
        'October',
        'November',
        'December'
      ];

      var Default = (function(_React$Component) {
        _inherits(Default, _React$Component);

        function Default(props) {
          _classCallCheck(this, Default);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        Default.prototype.render = function render() {
          return _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'pre',
              { className: 'column example__code' },
              _react2.default.createElement(
                'code',
                { className: 'jsx' },
                '\n<DatePicker\n    selected={this.state.startDate}\n    onChange={this.handleChange}\n    renderCustomHeader={({\n              date,\n              changeYear,\n              changeMonth,\n              decreaseMonth,\n              increaseMonth,\n              prevMonthButtonDisabled,\n              nextMonthButtonDisabled\n            }) => {}}\n/>\n'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'column' },
              _react2.default.createElement(_reactDatepicker2.default, {
                renderCustomHeader: function renderCustomHeader(_ref) {
                  var date = _ref.date,
                    changeYear = _ref.changeYear,
                    changeMonth = _ref.changeMonth,
                    decreaseMonth = _ref.decreaseMonth,
                    increaseMonth = _ref.increaseMonth,
                    prevMonthButtonDisabled = _ref.prevMonthButtonDisabled,
                    nextMonthButtonDisabled = _ref.nextMonthButtonDisabled;
                  return _react2.default.createElement(
                    'div',
                    {
                      style: {
                        margin: 10,
                        display: 'flex',
                        justifyContent: 'center'
                      }
                    },
                    _react2.default.createElement(
                      'button',
                      {
                        onClick: decreaseMonth,
                        disabled: prevMonthButtonDisabled
                      },
                      '<'
                    ),
                    _react2.default.createElement(
                      'select',
                      {
                        value: (0, _getYear2.default)(date),
                        onChange: function onChange(_ref2) {
                          var value = _ref2.target.value;
                          return changeYear(value);
                        }
                      },
                      years.map(function(option) {
                        return _react2.default.createElement(
                          'option',
                          { key: option, value: option },
                          option
                        );
                      })
                    ),
                    _react2.default.createElement(
                      'select',
                      {
                        value: months[(0, _getMonth2.default)(date)],
                        onChange: function onChange(_ref3) {
                          var value = _ref3.target.value;
                          return changeMonth(value);
                        }
                      },
                      months.map(function(option) {
                        return _react2.default.createElement(
                          'option',
                          { key: option, value: option },
                          option
                        );
                      })
                    ),
                    _react2.default.createElement(
                      'button',
                      {
                        onClick: increaseMonth,
                        disabled: nextMonthButtonDisabled
                      },
                      '>'
                    )
                  );
                },
                selected: this.state.startDate,
                onChange: this.handleChange
              })
            )
          );
        };

        return Default;
      })(_react2.default.Component);

      exports.default = Default;

      /***/
    },
    /* 781 */
    /***/ function(module, exports, __webpack_require__) {
      var createRange = __webpack_require__(782);

      /**
       * Creates an array of numbers (positive and/or negative) progressing from
       * `start` up to, but not including, `end`. A step of `-1` is used if a negative
       * `start` is specified without an `end` or `step`. If `end` is not specified,
       * it's set to `start` with `start` then set to `0`.
       *
       * **Note:** JavaScript follows the IEEE-754 standard for resolving
       * floating-point values which can produce unexpected results.
       *
       * @static
       * @since 0.1.0
       * @memberOf _
       * @category Util
       * @param {number} [start=0] The start of the range.
       * @param {number} end The end of the range.
       * @param {number} [step=1] The value to increment or decrement by.
       * @returns {Array} Returns the range of numbers.
       * @see _.inRange, _.rangeRight
       * @example
       *
       * _.range(4);
       * // => [0, 1, 2, 3]
       *
       * _.range(-4);
       * // => [0, -1, -2, -3]
       *
       * _.range(1, 5);
       * // => [1, 2, 3, 4]
       *
       * _.range(0, 20, 5);
       * // => [0, 5, 10, 15]
       *
       * _.range(0, -4, -1);
       * // => [0, -1, -2, -3]
       *
       * _.range(1, 4, 0);
       * // => [1, 1, 1]
       *
       * _.range(0);
       * // => []
       */
      var range = createRange();

      module.exports = range;

      /***/
    },
    /* 782 */
    /***/ function(module, exports, __webpack_require__) {
      var baseRange = __webpack_require__(783),
        isIterateeCall = __webpack_require__(784),
        toFinite = __webpack_require__(797);

      /**
       * Creates a `_.range` or `_.rangeRight` function.
       *
       * @private
       * @param {boolean} [fromRight] Specify iterating from right to left.
       * @returns {Function} Returns the new range function.
       */
      function createRange(fromRight) {
        return function(start, end, step) {
          if (
            step &&
            typeof step != 'number' &&
            isIterateeCall(start, end, step)
          ) {
            end = step = undefined;
          }
          // Ensure the sign of `-0` is preserved.
          start = toFinite(start);
          if (end === undefined) {
            end = start;
            start = 0;
          } else {
            end = toFinite(end);
          }
          step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
          return baseRange(start, end, step, fromRight);
        };
      }

      module.exports = createRange;

      /***/
    },
    /* 783 */
    /***/ function(module, exports) {
      /* Built-in method references for those with the same name as other `lodash` methods. */
      var nativeCeil = Math.ceil,
        nativeMax = Math.max;

      /**
       * The base implementation of `_.range` and `_.rangeRight` which doesn't
       * coerce arguments.
       *
       * @private
       * @param {number} start The start of the range.
       * @param {number} end The end of the range.
       * @param {number} step The value to increment or decrement by.
       * @param {boolean} [fromRight] Specify iterating from right to left.
       * @returns {Array} Returns the range of numbers.
       */
      function baseRange(start, end, step, fromRight) {
        var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

        while (length--) {
          result[fromRight ? length : ++index] = start;
          start += step;
        }
        return result;
      }

      module.exports = baseRange;

      /***/
    },
    /* 784 */
    /***/ function(module, exports, __webpack_require__) {
      var eq = __webpack_require__(785),
        isArrayLike = __webpack_require__(786),
        isIndex = __webpack_require__(796),
        isObject = __webpack_require__(794);

      /**
       * Checks if the given arguments are from an iteratee call.
       *
       * @private
       * @param {*} value The potential iteratee value argument.
       * @param {*} index The potential iteratee index or key argument.
       * @param {*} object The potential iteratee object argument.
       * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
       *  else `false`.
       */
      function isIterateeCall(value, index, object) {
        if (!isObject(object)) {
          return false;
        }
        var type = typeof index;
        if (
          type == 'number'
            ? isArrayLike(object) && isIndex(index, object.length)
            : type == 'string' && index in object
        ) {
          return eq(object[index], value);
        }
        return false;
      }

      module.exports = isIterateeCall;

      /***/
    },
    /* 785 */
    /***/ function(module, exports) {
      /**
       * Performs a
       * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
       * comparison between two values to determine if they are equivalent.
       *
       * @static
       * @memberOf _
       * @since 4.0.0
       * @category Lang
       * @param {*} value The value to compare.
       * @param {*} other The other value to compare.
       * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
       * @example
       *
       * var object = { 'a': 1 };
       * var other = { 'a': 1 };
       *
       * _.eq(object, object);
       * // => true
       *
       * _.eq(object, other);
       * // => false
       *
       * _.eq('a', 'a');
       * // => true
       *
       * _.eq('a', Object('a'));
       * // => false
       *
       * _.eq(NaN, NaN);
       * // => true
       */
      function eq(value, other) {
        return value === other || (value !== value && other !== other);
      }

      module.exports = eq;

      /***/
    },
    /* 786 */
    /***/ function(module, exports, __webpack_require__) {
      var isFunction = __webpack_require__(787),
        isLength = __webpack_require__(795);

      /**
       * Checks if `value` is array-like. A value is considered array-like if it's
       * not a function and has a `value.length` that's an integer greater than or
       * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
       *
       * @static
       * @memberOf _
       * @since 4.0.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
       * @example
       *
       * _.isArrayLike([1, 2, 3]);
       * // => true
       *
       * _.isArrayLike(document.body.children);
       * // => true
       *
       * _.isArrayLike('abc');
       * // => true
       *
       * _.isArrayLike(_.noop);
       * // => false
       */
      function isArrayLike(value) {
        return value != null && isLength(value.length) && !isFunction(value);
      }

      module.exports = isArrayLike;

      /***/
    },
    /* 787 */
    /***/ function(module, exports, __webpack_require__) {
      var baseGetTag = __webpack_require__(788),
        isObject = __webpack_require__(794);

      /** `Object#toString` result references. */
      var asyncTag = '[object AsyncFunction]',
        funcTag = '[object Function]',
        genTag = '[object GeneratorFunction]',
        proxyTag = '[object Proxy]';

      /**
       * Checks if `value` is classified as a `Function` object.
       *
       * @static
       * @memberOf _
       * @since 0.1.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is a function, else `false`.
       * @example
       *
       * _.isFunction(_);
       * // => true
       *
       * _.isFunction(/abc/);
       * // => false
       */
      function isFunction(value) {
        if (!isObject(value)) {
          return false;
        }
        // The use of `Object#toString` avoids issues with the `typeof` operator
        // in Safari 9 which returns 'object' for typed arrays and other constructors.
        var tag = baseGetTag(value);
        return (
          tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag
        );
      }

      module.exports = isFunction;

      /***/
    },
    /* 788 */
    /***/ function(module, exports, __webpack_require__) {
      var Symbol = __webpack_require__(789),
        getRawTag = __webpack_require__(792),
        objectToString = __webpack_require__(793);

      /** `Object#toString` result references. */
      var nullTag = '[object Null]',
        undefinedTag = '[object Undefined]';

      /** Built-in value references. */
      var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

      /**
       * The base implementation of `getTag` without fallbacks for buggy environments.
       *
       * @private
       * @param {*} value The value to query.
       * @returns {string} Returns the `toStringTag`.
       */
      function baseGetTag(value) {
        if (value == null) {
          return value === undefined ? undefinedTag : nullTag;
        }
        return symToStringTag && symToStringTag in Object(value)
          ? getRawTag(value)
          : objectToString(value);
      }

      module.exports = baseGetTag;

      /***/
    },
    /* 789 */
    /***/ function(module, exports, __webpack_require__) {
      var root = __webpack_require__(790);

      /** Built-in value references. */
      var Symbol = root.Symbol;

      module.exports = Symbol;

      /***/
    },
    /* 790 */
    /***/ function(module, exports, __webpack_require__) {
      var freeGlobal = __webpack_require__(791);

      /** Detect free variable `self`. */
      var freeSelf =
        typeof self == 'object' && self && self.Object === Object && self;

      /** Used as a reference to the global object. */
      var root = freeGlobal || freeSelf || Function('return this')();

      module.exports = root;

      /***/
    },
    /* 791 */
    /***/ function(module, exports) {
      /* WEBPACK VAR INJECTION */ (function(global) {
        /** Detect free variable `global` from Node.js. */
        var freeGlobal =
          typeof global == 'object' &&
          global &&
          global.Object === Object &&
          global;

        module.exports = freeGlobal;

        /* WEBPACK VAR INJECTION */
      }.call(
        exports,
        (function() {
          return this;
        })()
      ));

      /***/
    },
    /* 792 */
    /***/ function(module, exports, __webpack_require__) {
      var Symbol = __webpack_require__(789);

      /** Used for built-in method references. */
      var objectProto = Object.prototype;

      /** Used to check objects for own properties. */
      var hasOwnProperty = objectProto.hasOwnProperty;

      /**
       * Used to resolve the
       * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
       * of values.
       */
      var nativeObjectToString = objectProto.toString;

      /** Built-in value references. */
      var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

      /**
       * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
       *
       * @private
       * @param {*} value The value to query.
       * @returns {string} Returns the raw `toStringTag`.
       */
      function getRawTag(value) {
        var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

        try {
          value[symToStringTag] = undefined;
          var unmasked = true;
        } catch (e) {}

        var result = nativeObjectToString.call(value);
        if (unmasked) {
          if (isOwn) {
            value[symToStringTag] = tag;
          } else {
            delete value[symToStringTag];
          }
        }
        return result;
      }

      module.exports = getRawTag;

      /***/
    },
    /* 793 */
    /***/ function(module, exports) {
      /** Used for built-in method references. */
      var objectProto = Object.prototype;

      /**
       * Used to resolve the
       * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
       * of values.
       */
      var nativeObjectToString = objectProto.toString;

      /**
       * Converts `value` to a string using `Object.prototype.toString`.
       *
       * @private
       * @param {*} value The value to convert.
       * @returns {string} Returns the converted string.
       */
      function objectToString(value) {
        return nativeObjectToString.call(value);
      }

      module.exports = objectToString;

      /***/
    },
    /* 794 */
    /***/ function(module, exports) {
      /**
       * Checks if `value` is the
       * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
       * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
       *
       * @static
       * @memberOf _
       * @since 0.1.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is an object, else `false`.
       * @example
       *
       * _.isObject({});
       * // => true
       *
       * _.isObject([1, 2, 3]);
       * // => true
       *
       * _.isObject(_.noop);
       * // => true
       *
       * _.isObject(null);
       * // => false
       */
      function isObject(value) {
        var type = typeof value;
        return value != null && (type == 'object' || type == 'function');
      }

      module.exports = isObject;

      /***/
    },
    /* 795 */
    /***/ function(module, exports) {
      /** Used as references for various `Number` constants. */
      var MAX_SAFE_INTEGER = 9007199254740991;

      /**
       * Checks if `value` is a valid array-like length.
       *
       * **Note:** This method is loosely based on
       * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
       *
       * @static
       * @memberOf _
       * @since 4.0.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
       * @example
       *
       * _.isLength(3);
       * // => true
       *
       * _.isLength(Number.MIN_VALUE);
       * // => false
       *
       * _.isLength(Infinity);
       * // => false
       *
       * _.isLength('3');
       * // => false
       */
      function isLength(value) {
        return (
          typeof value == 'number' &&
          value > -1 &&
          value % 1 == 0 &&
          value <= MAX_SAFE_INTEGER
        );
      }

      module.exports = isLength;

      /***/
    },
    /* 796 */
    /***/ function(module, exports) {
      /** Used as references for various `Number` constants. */
      var MAX_SAFE_INTEGER = 9007199254740991;

      /** Used to detect unsigned integer values. */
      var reIsUint = /^(?:0|[1-9]\d*)$/;

      /**
       * Checks if `value` is a valid array-like index.
       *
       * @private
       * @param {*} value The value to check.
       * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
       * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
       */
      function isIndex(value, length) {
        var type = typeof value;
        length = length == null ? MAX_SAFE_INTEGER : length;

        return (
          !!length &&
          (type == 'number' || (type != 'symbol' && reIsUint.test(value))) &&
          (value > -1 && value % 1 == 0 && value < length)
        );
      }

      module.exports = isIndex;

      /***/
    },
    /* 797 */
    /***/ function(module, exports, __webpack_require__) {
      var toNumber = __webpack_require__(798);

      /** Used as references for various `Number` constants. */
      var INFINITY = 1 / 0,
        MAX_INTEGER = 1.7976931348623157e308;

      /**
       * Converts `value` to a finite number.
       *
       * @static
       * @memberOf _
       * @since 4.12.0
       * @category Lang
       * @param {*} value The value to convert.
       * @returns {number} Returns the converted number.
       * @example
       *
       * _.toFinite(3.2);
       * // => 3.2
       *
       * _.toFinite(Number.MIN_VALUE);
       * // => 5e-324
       *
       * _.toFinite(Infinity);
       * // => 1.7976931348623157e+308
       *
       * _.toFinite('3.2');
       * // => 3.2
       */
      function toFinite(value) {
        if (!value) {
          return value === 0 ? value : 0;
        }
        value = toNumber(value);
        if (value === INFINITY || value === -INFINITY) {
          var sign = value < 0 ? -1 : 1;
          return sign * MAX_INTEGER;
        }
        return value === value ? value : 0;
      }

      module.exports = toFinite;

      /***/
    },
    /* 798 */
    /***/ function(module, exports, __webpack_require__) {
      var isObject = __webpack_require__(794),
        isSymbol = __webpack_require__(799);

      /** Used as references for various `Number` constants. */
      var NAN = 0 / 0;

      /** Used to match leading and trailing whitespace. */
      var reTrim = /^\s+|\s+$/g;

      /** Used to detect bad signed hexadecimal string values. */
      var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

      /** Used to detect binary string values. */
      var reIsBinary = /^0b[01]+$/i;

      /** Used to detect octal string values. */
      var reIsOctal = /^0o[0-7]+$/i;

      /** Built-in method references without a dependency on `root`. */
      var freeParseInt = parseInt;

      /**
       * Converts `value` to a number.
       *
       * @static
       * @memberOf _
       * @since 4.0.0
       * @category Lang
       * @param {*} value The value to process.
       * @returns {number} Returns the number.
       * @example
       *
       * _.toNumber(3.2);
       * // => 3.2
       *
       * _.toNumber(Number.MIN_VALUE);
       * // => 5e-324
       *
       * _.toNumber(Infinity);
       * // => Infinity
       *
       * _.toNumber('3.2');
       * // => 3.2
       */
      function toNumber(value) {
        if (typeof value == 'number') {
          return value;
        }
        if (isSymbol(value)) {
          return NAN;
        }
        if (isObject(value)) {
          var other =
            typeof value.valueOf == 'function' ? value.valueOf() : value;
          value = isObject(other) ? other + '' : other;
        }
        if (typeof value != 'string') {
          return value === 0 ? value : +value;
        }
        value = value.replace(reTrim, '');
        var isBinary = reIsBinary.test(value);
        return isBinary || reIsOctal.test(value)
          ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
          : reIsBadHex.test(value)
            ? NAN
            : +value;
      }

      module.exports = toNumber;

      /***/
    },
    /* 799 */
    /***/ function(module, exports, __webpack_require__) {
      var baseGetTag = __webpack_require__(788),
        isObjectLike = __webpack_require__(800);

      /** `Object#toString` result references. */
      var symbolTag = '[object Symbol]';

      /**
       * Checks if `value` is classified as a `Symbol` primitive or object.
       *
       * @static
       * @memberOf _
       * @since 4.0.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
       * @example
       *
       * _.isSymbol(Symbol.iterator);
       * // => true
       *
       * _.isSymbol('abc');
       * // => false
       */
      function isSymbol(value) {
        return (
          typeof value == 'symbol' ||
          (isObjectLike(value) && baseGetTag(value) == symbolTag)
        );
      }

      module.exports = isSymbol;

      /***/
    },
    /* 800 */
    /***/ function(module, exports) {
      /**
       * Checks if `value` is object-like. A value is object-like if it's not `null`
       * and has a `typeof` result of "object".
       *
       * @static
       * @memberOf _
       * @since 4.0.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
       * @example
       *
       * _.isObjectLike({});
       * // => true
       *
       * _.isObjectLike([1, 2, 3]);
       * // => true
       *
       * _.isObjectLike(_.noop);
       * // => false
       *
       * _.isObjectLike(null);
       * // => false
       */
      function isObjectLike(value) {
        return value != null && typeof value == 'object';
      }

      module.exports = isObjectLike;

      /***/
    },
    /* 801 */
    /***/ function(module, exports) {
      // removed by extract-text-webpack-plugin
      /***/
    },
    /* 802 */
    801,
    /* 803 */
    /***/ function(module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(328);

      var _react2 = _interopRequireDefault(_react);

      var _reactDatepicker = __webpack_require__(533);

      var _reactDatepicker2 = _interopRequireDefault(_reactDatepicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var HeroExample = (function(_React$Component) {
        _inherits(HeroExample, _React$Component);

        function HeroExample(props) {
          _classCallCheck(this, HeroExample);

          var _this = _possibleConstructorReturn(
            this,
            _React$Component.call(this, props)
          );

          _this.handleChange = function(date) {
            _this.setState({
              startDate: date
            });
          };

          _this.state = {
            startDate: new Date()
          };
          return _this;
        }

        HeroExample.prototype.render = function render() {
          return _react2.default.createElement(_reactDatepicker2.default, {
            autoFocus: true,
            selected: this.state.startDate,
            onChange: this.handleChange
          });
        };

        return HeroExample;
      })(_react2.default.Component);

      exports.default = HeroExample;

      /***/
    },
    /* 804 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__,
      __webpack_module_template_argument_3__,
      __webpack_module_template_argument_4__,
      __webpack_module_template_argument_5__,
      __webpack_module_template_argument_6__,
      __webpack_module_template_argument_7__,
      __webpack_module_template_argument_8__,
      __webpack_module_template_argument_9__,
      __webpack_module_template_argument_10__,
      __webpack_module_template_argument_11__,
      __webpack_module_template_argument_12__,
      __webpack_module_template_argument_13__,
      __webpack_module_template_argument_14__,
      __webpack_module_template_argument_15__,
      __webpack_module_template_argument_16__,
      __webpack_module_template_argument_17__,
      __webpack_module_template_argument_18__,
      __webpack_module_template_argument_19__,
      __webpack_module_template_argument_20__,
      __webpack_module_template_argument_21__,
      __webpack_module_template_argument_22__,
      __webpack_module_template_argument_23__,
      __webpack_module_template_argument_24__,
      __webpack_module_template_argument_25__,
      __webpack_module_template_argument_26__,
      __webpack_module_template_argument_27__,
      __webpack_module_template_argument_28__,
      __webpack_module_template_argument_29__
    ) {
      'use strict';
      // ECMAScript 6 symbols shim
      var global = __webpack_require__(__webpack_module_template_argument_0__);
      var has = __webpack_require__(__webpack_module_template_argument_1__);
      var DESCRIPTORS = __webpack_require__(
        __webpack_module_template_argument_2__
      );
      var $export = __webpack_require__(__webpack_module_template_argument_3__);
      var redefine = __webpack_require__(
        __webpack_module_template_argument_4__
      );
      var META = __webpack_require__(__webpack_module_template_argument_5__)
        .KEY;
      var $fails = __webpack_require__(__webpack_module_template_argument_6__);
      var shared = __webpack_require__(__webpack_module_template_argument_7__);
      var setToStringTag = __webpack_require__(
        __webpack_module_template_argument_8__
      );
      var uid = __webpack_require__(__webpack_module_template_argument_9__);
      var wks = __webpack_require__(__webpack_module_template_argument_10__);
      var wksExt = __webpack_require__(__webpack_module_template_argument_11__);
      var wksDefine = __webpack_require__(
        __webpack_module_template_argument_12__
      );
      var enumKeys = __webpack_require__(
        __webpack_module_template_argument_13__
      );
      var isArray = __webpack_require__(
        __webpack_module_template_argument_14__
      );
      var anObject = __webpack_require__(
        __webpack_module_template_argument_15__
      );
      var isObject = __webpack_require__(
        __webpack_module_template_argument_16__
      );
      var toIObject = __webpack_require__(
        __webpack_module_template_argument_17__
      );
      var toPrimitive = __webpack_require__(
        __webpack_module_template_argument_18__
      );
      var createDesc = __webpack_require__(
        __webpack_module_template_argument_19__
      );
      var _create = __webpack_require__(
        __webpack_module_template_argument_20__
      );
      var gOPNExt = __webpack_require__(
        __webpack_module_template_argument_21__
      );
      var $GOPD = __webpack_require__(__webpack_module_template_argument_22__);
      var $DP = __webpack_require__(__webpack_module_template_argument_23__);
      var $keys = __webpack_require__(__webpack_module_template_argument_24__);
      var gOPD = $GOPD.f;
      var dP = $DP.f;
      var gOPN = gOPNExt.f;
      var $Symbol = global.Symbol;
      var $JSON = global.JSON;
      var _stringify = $JSON && $JSON.stringify;
      var PROTOTYPE = 'prototype';
      var HIDDEN = wks('_hidden');
      var TO_PRIMITIVE = wks('toPrimitive');
      var isEnum = {}.propertyIsEnumerable;
      var SymbolRegistry = shared('symbol-registry');
      var AllSymbols = shared('symbols');
      var OPSymbols = shared('op-symbols');
      var ObjectProto = Object[PROTOTYPE];
      var USE_NATIVE = typeof $Symbol == 'function';
      var QObject = global.QObject;
      // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
      var setter =
        !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

      // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
      var setSymbolDesc =
        DESCRIPTORS &&
        $fails(function() {
          return (
            _create(
              dP({}, 'a', {
                get: function() {
                  return dP(this, 'a', { value: 7 }).a;
                }
              })
            ).a != 7
          );
        })
          ? function(it, key, D) {
              var protoDesc = gOPD(ObjectProto, key);
              if (protoDesc) delete ObjectProto[key];
              dP(it, key, D);
              if (protoDesc && it !== ObjectProto)
                dP(ObjectProto, key, protoDesc);
            }
          : dP;

      var wrap = function(tag) {
        var sym = (AllSymbols[tag] = _create($Symbol[PROTOTYPE]));
        sym._k = tag;
        return sym;
      };

      var isSymbol =
        USE_NATIVE && typeof $Symbol.iterator == 'symbol'
          ? function(it) {
              return typeof it == 'symbol';
            }
          : function(it) {
              return it instanceof $Symbol;
            };

      var $defineProperty = function defineProperty(it, key, D) {
        if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
        anObject(it);
        key = toPrimitive(key, true);
        anObject(D);
        if (has(AllSymbols, key)) {
          if (!D.enumerable) {
            if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
            it[HIDDEN][key] = true;
          } else {
            if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
            D = _create(D, { enumerable: createDesc(0, false) });
          }
          return setSymbolDesc(it, key, D);
        }
        return dP(it, key, D);
      };
      var $defineProperties = function defineProperties(it, P) {
        anObject(it);
        var keys = enumKeys((P = toIObject(P)));
        var i = 0;
        var l = keys.length;
        var key;
        while (l > i) $defineProperty(it, (key = keys[i++]), P[key]);
        return it;
      };
      var $create = function create(it, P) {
        return P === undefined
          ? _create(it)
          : $defineProperties(_create(it), P);
      };
      var $propertyIsEnumerable = function propertyIsEnumerable(key) {
        var E = isEnum.call(this, (key = toPrimitive(key, true)));
        if (
          this === ObjectProto &&
          has(AllSymbols, key) &&
          !has(OPSymbols, key)
        )
          return false;
        return E ||
          !has(this, key) ||
          !has(AllSymbols, key) ||
          (has(this, HIDDEN) && this[HIDDEN][key])
          ? E
          : true;
      };
      var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(
        it,
        key
      ) {
        it = toIObject(it);
        key = toPrimitive(key, true);
        if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))
          return;
        var D = gOPD(it, key);
        if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))
          D.enumerable = true;
        return D;
      };
      var $getOwnPropertyNames = function getOwnPropertyNames(it) {
        var names = gOPN(toIObject(it));
        var result = [];
        var i = 0;
        var key;
        while (names.length > i) {
          if (
            !has(AllSymbols, (key = names[i++])) &&
            key != HIDDEN &&
            key != META
          )
            result.push(key);
        }
        return result;
      };
      var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
        var IS_OP = it === ObjectProto;
        var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
        var result = [];
        var i = 0;
        var key;
        while (names.length > i) {
          if (
            has(AllSymbols, (key = names[i++])) &&
            (IS_OP ? has(ObjectProto, key) : true)
          )
            result.push(AllSymbols[key]);
        }
        return result;
      };

      // 19.4.1.1 Symbol([description])
      if (!USE_NATIVE) {
        $Symbol = function Symbol() {
          if (this instanceof $Symbol)
            throw TypeError('Symbol is not a constructor!');
          var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
          var $set = function(value) {
            if (this === ObjectProto) $set.call(OPSymbols, value);
            if (has(this, HIDDEN) && has(this[HIDDEN], tag))
              this[HIDDEN][tag] = false;
            setSymbolDesc(this, tag, createDesc(1, value));
          };
          if (DESCRIPTORS && setter)
            setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
          return wrap(tag);
        };
        redefine($Symbol[PROTOTYPE], 'toString', function toString() {
          return this._k;
        });

        $GOPD.f = $getOwnPropertyDescriptor;
        $DP.f = $defineProperty;
        __webpack_require__(
          __webpack_module_template_argument_25__
        ).f = gOPNExt.f = $getOwnPropertyNames;
        __webpack_require__(
          __webpack_module_template_argument_26__
        ).f = $propertyIsEnumerable;
        __webpack_require__(
          __webpack_module_template_argument_27__
        ).f = $getOwnPropertySymbols;

        if (
          DESCRIPTORS &&
          !__webpack_require__(__webpack_module_template_argument_28__)
        ) {
          redefine(
            ObjectProto,
            'propertyIsEnumerable',
            $propertyIsEnumerable,
            true
          );
        }

        wksExt.f = function(name) {
          return wrap(wks(name));
        };
      }

      $export($export.G + $export.W + $export.F * !USE_NATIVE, {
        Symbol: $Symbol
      });

      for (
        var es6Symbols = // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
          'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(
            ','
          ),
          j = 0;
        es6Symbols.length > j;

      )
        wks(es6Symbols[j++]);

      for (
        var wellKnownSymbols = $keys(wks.store), k = 0;
        wellKnownSymbols.length > k;

      )
        wksDefine(wellKnownSymbols[k++]);

      $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
        // 19.4.2.1 Symbol.for(key)
        for: function(key) {
          return has(SymbolRegistry, (key += ''))
            ? SymbolRegistry[key]
            : (SymbolRegistry[key] = $Symbol(key));
        },
        // 19.4.2.5 Symbol.keyFor(sym)
        keyFor: function keyFor(sym) {
          if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
          for (var key in SymbolRegistry)
            if (SymbolRegistry[key] === sym) return key;
        },
        useSetter: function() {
          setter = true;
        },
        useSimple: function() {
          setter = false;
        }
      });

      $export($export.S + $export.F * !USE_NATIVE, 'Object', {
        // 19.1.2.2 Object.create(O [, Properties])
        create: $create,
        // 19.1.2.4 Object.defineProperty(O, P, Attributes)
        defineProperty: $defineProperty,
        // 19.1.2.3 Object.defineProperties(O, Properties)
        defineProperties: $defineProperties,
        // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
        getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
        // 19.1.2.7 Object.getOwnPropertyNames(O)
        getOwnPropertyNames: $getOwnPropertyNames,
        // 19.1.2.8 Object.getOwnPropertySymbols(O)
        getOwnPropertySymbols: $getOwnPropertySymbols
      });

      // 24.3.2 JSON.stringify(value [, replacer [, space]])
      $JSON &&
        $export(
          $export.S +
            $export.F *
              (!USE_NATIVE ||
                $fails(function() {
                  var S = $Symbol();
                  // MS Edge converts symbol values to JSON as {}
                  // WebKit converts symbol values to JSON as null
                  // V8 throws on boxed symbols
                  return (
                    _stringify([S]) != '[null]' ||
                    _stringify({ a: S }) != '{}' ||
                    _stringify(Object(S)) != '{}'
                  );
                })),
          'JSON',
          {
            stringify: function stringify(it) {
              var args = [it];
              var i = 1;
              var replacer, $replacer;
              while (arguments.length > i) args.push(arguments[i++]);
              $replacer = replacer = args[1];
              if ((!isObject(replacer) && it === undefined) || isSymbol(it))
                return; // IE8 returns string on undefined
              if (!isArray(replacer))
                replacer = function(key, value) {
                  if (typeof $replacer == 'function')
                    value = $replacer.call(this, key, value);
                  if (!isSymbol(value)) return value;
                };
              args[1] = replacer;
              return _stringify.apply($JSON, args);
            }
          }
        );

      // 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
      $Symbol[PROTOTYPE][TO_PRIMITIVE] ||
        __webpack_require__(__webpack_module_template_argument_29__)(
          $Symbol[PROTOTYPE],
          TO_PRIMITIVE,
          $Symbol[PROTOTYPE].valueOf
        );
      // 19.4.3.5 Symbol.prototype[@@toStringTag]
      setToStringTag($Symbol, 'Symbol');
      // 20.2.1.9 Math[@@toStringTag]
      setToStringTag(Math, 'Math', true);
      // 24.3.3 JSON[@@toStringTag]
      setToStringTag(global.JSON, 'JSON', true);

      /***/
    },
    /* 805 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__
    ) {
      // Thank's IE8 for his funny defineProperty
      module.exports = !__webpack_require__(
        __webpack_module_template_argument_0__
      )(function() {
        return (
          Object.defineProperty({}, 'a', {
            get: function() {
              return 7;
            }
          }).a != 7
        );
      });

      /***/
    },
    /* 806 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__
    ) {
      var dP = __webpack_require__(__webpack_module_template_argument_0__);
      var createDesc = __webpack_require__(
        __webpack_module_template_argument_1__
      );
      module.exports = __webpack_require__(
        __webpack_module_template_argument_2__
      )
        ? function(object, key, value) {
            return dP.f(object, key, createDesc(1, value));
          }
        : function(object, key, value) {
            object[key] = value;
            return object;
          };

      /***/
    },
    /* 807 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__,
      __webpack_module_template_argument_3__
    ) {
      var anObject = __webpack_require__(
        __webpack_module_template_argument_0__
      );
      var IE8_DOM_DEFINE = __webpack_require__(
        __webpack_module_template_argument_1__
      );
      var toPrimitive = __webpack_require__(
        __webpack_module_template_argument_2__
      );
      var dP = Object.defineProperty;

      exports.f = __webpack_require__(__webpack_module_template_argument_3__)
        ? Object.defineProperty
        : function defineProperty(O, P, Attributes) {
            anObject(O);
            P = toPrimitive(P, true);
            anObject(Attributes);
            if (IE8_DOM_DEFINE)
              try {
                return dP(O, P, Attributes);
              } catch (e) {
                /* empty */
              }
            if ('get' in Attributes || 'set' in Attributes)
              throw TypeError('Accessors not supported!');
            if ('value' in Attributes) O[P] = Attributes.value;
            return O;
          };

      /***/
    },
    /* 808 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__
    ) {
      var isObject = __webpack_require__(
        __webpack_module_template_argument_0__
      );
      module.exports = function(it) {
        if (!isObject(it)) throw TypeError(it + ' is not an object!');
        return it;
      };

      /***/
    },
    /* 809 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__
    ) {
      module.exports =
        !__webpack_require__(__webpack_module_template_argument_0__) &&
        !__webpack_require__(__webpack_module_template_argument_1__)(
          function() {
            return (
              Object.defineProperty(
                __webpack_require__(__webpack_module_template_argument_2__)(
                  'div'
                ),
                'a',
                {
                  get: function() {
                    return 7;
                  }
                }
              ).a != 7
            );
          }
        );

      /***/
    },
    /* 810 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__
    ) {
      var isObject = __webpack_require__(
        __webpack_module_template_argument_0__
      );
      var document = __webpack_require__(__webpack_module_template_argument_1__)
        .document;
      // typeof document.createElement is 'object' in old IE
      var is = isObject(document) && isObject(document.createElement);
      module.exports = function(it) {
        return is ? document.createElement(it) : {};
      };

      /***/
    },
    /* 811 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__
    ) {
      // 7.1.1 ToPrimitive(input [, PreferredType])
      var isObject = __webpack_require__(
        __webpack_module_template_argument_0__
      );
      // instead of the ES6 spec version, we didn't implement @@toPrimitive case
      // and the second argument - flag - preferred type is a string
      module.exports = function(it, S) {
        if (!isObject(it)) return it;
        var fn, val;
        if (
          S &&
          typeof (fn = it.toString) == 'function' &&
          !isObject((val = fn.call(it)))
        )
          return val;
        if (
          typeof (fn = it.valueOf) == 'function' &&
          !isObject((val = fn.call(it)))
        )
          return val;
        if (
          !S &&
          typeof (fn = it.toString) == 'function' &&
          !isObject((val = fn.call(it)))
        )
          return val;
        throw TypeError("Can't convert object to primitive value");
      };

      /***/
    },
    /* 812 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__
    ) {
      // optional / simple context binding
      var aFunction = __webpack_require__(
        __webpack_module_template_argument_0__
      );
      module.exports = function(fn, that, length) {
        aFunction(fn);
        if (that === undefined) return fn;
        switch (length) {
          case 1:
            return function(a) {
              return fn.call(that, a);
            };
          case 2:
            return function(a, b) {
              return fn.call(that, a, b);
            };
          case 3:
            return function(a, b, c) {
              return fn.call(that, a, b, c);
            };
        }
        return function(/* ...args */) {
          return fn.apply(that, arguments);
        };
      };

      /***/
    },
    /* 813 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__,
      __webpack_module_template_argument_3__,
      __webpack_module_template_argument_4__
    ) {
      var META = __webpack_require__(__webpack_module_template_argument_0__)(
        'meta'
      );
      var isObject = __webpack_require__(
        __webpack_module_template_argument_1__
      );
      var has = __webpack_require__(__webpack_module_template_argument_2__);
      var setDesc = __webpack_require__(__webpack_module_template_argument_3__)
        .f;
      var id = 0;
      var isExtensible =
        Object.isExtensible ||
        function() {
          return true;
        };
      var FREEZE = !__webpack_require__(__webpack_module_template_argument_4__)(
        function() {
          return isExtensible(Object.preventExtensions({}));
        }
      );
      var setMeta = function(it) {
        setDesc(it, META, {
          value: {
            i: 'O' + ++id, // object ID
            w: {} // weak collections IDs
          }
        });
      };
      var fastKey = function(it, create) {
        // return primitive with prefix
        if (!isObject(it))
          return typeof it == 'symbol'
            ? it
            : (typeof it == 'string' ? 'S' : 'P') + it;
        if (!has(it, META)) {
          // can't set metadata to uncaught frozen object
          if (!isExtensible(it)) return 'F';
          // not necessary to add metadata
          if (!create) return 'E';
          // add missing metadata
          setMeta(it);
          // return object ID
        }
        return it[META].i;
      };
      var getWeak = function(it, create) {
        if (!has(it, META)) {
          // can't set metadata to uncaught frozen object
          if (!isExtensible(it)) return true;
          // not necessary to add metadata
          if (!create) return false;
          // add missing metadata
          setMeta(it);
          // return hash weak collections IDs
        }
        return it[META].w;
      };
      // add metadata on freeze-family methods calling
      var onFreeze = function(it) {
        if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META))
          setMeta(it);
        return it;
      };
      var meta = (module.exports = {
        KEY: META,
        NEED: false,
        fastKey: fastKey,
        getWeak: getWeak,
        onFreeze: onFreeze
      });

      /***/
    },
    /* 814 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__
    ) {
      var core = __webpack_require__(__webpack_module_template_argument_0__);
      var global = __webpack_require__(__webpack_module_template_argument_1__);
      var SHARED = '__core-js_shared__';
      var store = global[SHARED] || (global[SHARED] = {});

      (module.exports = function(key, value) {
        return store[key] || (store[key] = value !== undefined ? value : {});
      })('versions', []).push({
        version: core.version,
        mode: __webpack_require__(__webpack_module_template_argument_2__)
          ? 'pure'
          : 'global',
        copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
      });

      /***/
    },
    /* 815 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__
    ) {
      var def = __webpack_require__(__webpack_module_template_argument_0__).f;
      var has = __webpack_require__(__webpack_module_template_argument_1__);
      var TAG = __webpack_require__(__webpack_module_template_argument_2__)(
        'toStringTag'
      );

      module.exports = function(it, tag, stat) {
        if (it && !has((it = stat ? it : it.prototype), TAG))
          def(it, TAG, { configurable: true, value: tag });
      };

      /***/
    },
    /* 816 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__
    ) {
      var store = __webpack_require__(__webpack_module_template_argument_0__)(
        'wks'
      );
      var uid = __webpack_require__(__webpack_module_template_argument_1__);
      var Symbol = __webpack_require__(__webpack_module_template_argument_2__)
        .Symbol;
      var USE_SYMBOL = typeof Symbol == 'function';

      var $exports = (module.exports = function(name) {
        return (
          store[name] ||
          (store[name] =
            (USE_SYMBOL && Symbol[name]) ||
            (USE_SYMBOL ? Symbol : uid)('Symbol.' + name))
        );
      });

      $exports.store = store;

      /***/
    },
    /* 817 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__
    ) {
      exports.f = __webpack_require__(__webpack_module_template_argument_0__);

      /***/
    },
    /* 818 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__,
      __webpack_module_template_argument_3__,
      __webpack_module_template_argument_4__
    ) {
      var global = __webpack_require__(__webpack_module_template_argument_0__);
      var core = __webpack_require__(__webpack_module_template_argument_1__);
      var LIBRARY = __webpack_require__(__webpack_module_template_argument_2__);
      var wksExt = __webpack_require__(__webpack_module_template_argument_3__);
      var defineProperty = __webpack_require__(
        __webpack_module_template_argument_4__
      ).f;
      module.exports = function(name) {
        var $Symbol =
          core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
        if (name.charAt(0) != '_' && !(name in $Symbol))
          defineProperty($Symbol, name, { value: wksExt.f(name) });
      };

      /***/
    },
    /* 819 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__
    ) {
      // all enumerable object keys, includes symbols
      var getKeys = __webpack_require__(__webpack_module_template_argument_0__);
      var gOPS = __webpack_require__(__webpack_module_template_argument_1__);
      var pIE = __webpack_require__(__webpack_module_template_argument_2__);
      module.exports = function(it) {
        var result = getKeys(it);
        var getSymbols = gOPS.f;
        if (getSymbols) {
          var symbols = getSymbols(it);
          var isEnum = pIE.f;
          var i = 0;
          var key;
          while (symbols.length > i)
            if (isEnum.call(it, (key = symbols[i++]))) result.push(key);
        }
        return result;
      };

      /***/
    },
    /* 820 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__
    ) {
      // 19.1.2.14 / 15.2.3.14 Object.keys(O)
      var $keys = __webpack_require__(__webpack_module_template_argument_0__);
      var enumBugKeys = __webpack_require__(
        __webpack_module_template_argument_1__
      );

      module.exports =
        Object.keys ||
        function keys(O) {
          return $keys(O, enumBugKeys);
        };

      /***/
    },
    /* 821 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__,
      __webpack_module_template_argument_3__
    ) {
      var has = __webpack_require__(__webpack_module_template_argument_0__);
      var toIObject = __webpack_require__(
        __webpack_module_template_argument_1__
      );
      var arrayIndexOf = __webpack_require__(
        __webpack_module_template_argument_2__
      )(false);
      var IE_PROTO = __webpack_require__(
        __webpack_module_template_argument_3__
      )('IE_PROTO');

      module.exports = function(object, names) {
        var O = toIObject(object);
        var i = 0;
        var result = [];
        var key;
        for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
        // Don't enum bug & hidden keys
        while (names.length > i)
          if (has(O, (key = names[i++]))) {
            ~arrayIndexOf(result, key) || result.push(key);
          }
        return result;
      };

      /***/
    },
    /* 822 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__
    ) {
      // to indexed object, toObject with fallback for non-array-like ES3 strings
      var IObject = __webpack_require__(__webpack_module_template_argument_0__);
      var defined = __webpack_require__(__webpack_module_template_argument_1__);
      module.exports = function(it) {
        return IObject(defined(it));
      };

      /***/
    },
    /* 823 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__
    ) {
      // fallback for non-array-like ES3 and non-enumerable old V8 strings
      var cof = __webpack_require__(__webpack_module_template_argument_0__);
      // eslint-disable-next-line no-prototype-builtins
      module.exports = Object('z').propertyIsEnumerable(0)
        ? Object
        : function(it) {
            return cof(it) == 'String' ? it.split('') : Object(it);
          };

      /***/
    },
    /* 824 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__
    ) {
      // false -> Array#indexOf
      // true  -> Array#includes
      var toIObject = __webpack_require__(
        __webpack_module_template_argument_0__
      );
      var toLength = __webpack_require__(
        __webpack_module_template_argument_1__
      );
      var toAbsoluteIndex = __webpack_require__(
        __webpack_module_template_argument_2__
      );
      module.exports = function(IS_INCLUDES) {
        return function($this, el, fromIndex) {
          var O = toIObject($this);
          var length = toLength(O.length);
          var index = toAbsoluteIndex(fromIndex, length);
          var value;
          // Array#includes uses SameValueZero equality algorithm
          // eslint-disable-next-line no-self-compare
          if (IS_INCLUDES && el != el)
            while (length > index) {
              value = O[index++];
              // eslint-disable-next-line no-self-compare
              if (value != value) return true;
              // Array#indexOf ignores holes, Array#includes - not
            }
          else
            for (; length > index; index++)
              if (IS_INCLUDES || index in O) {
                if (O[index] === el) return IS_INCLUDES || index || 0;
              }
          return !IS_INCLUDES && -1;
        };
      };

      /***/
    },
    /* 825 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__
    ) {
      // 7.1.15 ToLength
      var toInteger = __webpack_require__(
        __webpack_module_template_argument_0__
      );
      var min = Math.min;
      module.exports = function(it) {
        return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
      };

      /***/
    },
    /* 826 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__
    ) {
      var toInteger = __webpack_require__(
        __webpack_module_template_argument_0__
      );
      var max = Math.max;
      var min = Math.min;
      module.exports = function(index, length) {
        index = toInteger(index);
        return index < 0 ? max(index + length, 0) : min(index, length);
      };

      /***/
    },
    /* 827 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__
    ) {
      var shared = __webpack_require__(__webpack_module_template_argument_0__)(
        'keys'
      );
      var uid = __webpack_require__(__webpack_module_template_argument_1__);
      module.exports = function(key) {
        return shared[key] || (shared[key] = uid(key));
      };

      /***/
    },
    /* 828 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__
    ) {
      // 7.2.2 IsArray(argument)
      var cof = __webpack_require__(__webpack_module_template_argument_0__);
      module.exports =
        Array.isArray ||
        function isArray(arg) {
          return cof(arg) == 'Array';
        };

      /***/
    },
    /* 829 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__,
      __webpack_module_template_argument_3__,
      __webpack_module_template_argument_4__,
      __webpack_module_template_argument_5__
    ) {
      // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
      var anObject = __webpack_require__(
        __webpack_module_template_argument_0__
      );
      var dPs = __webpack_require__(__webpack_module_template_argument_1__);
      var enumBugKeys = __webpack_require__(
        __webpack_module_template_argument_2__
      );
      var IE_PROTO = __webpack_require__(
        __webpack_module_template_argument_3__
      )('IE_PROTO');
      var Empty = function() {
        /* empty */
      };
      var PROTOTYPE = 'prototype';

      // Create object with fake `null` prototype: use iframe Object with cleared prototype
      var createDict = function() {
        // Thrash, waste and sodomy: IE GC bug
        var iframe = __webpack_require__(
          __webpack_module_template_argument_4__
        )('iframe');
        var i = enumBugKeys.length;
        var lt = '<';
        var gt = '>';
        var iframeDocument;
        iframe.style.display = 'none';
        __webpack_require__(__webpack_module_template_argument_5__).appendChild(
          iframe
        );
        iframe.src = 'javascript:'; // eslint-disable-line no-script-url
        // createDict = iframe.contentWindow.Object;
        // html.removeChild(iframe);
        iframeDocument = iframe.contentWindow.document;
        iframeDocument.open();
        iframeDocument.write(
          lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt
        );
        iframeDocument.close();
        createDict = iframeDocument.F;
        while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
        return createDict();
      };

      module.exports =
        Object.create ||
        function create(O, Properties) {
          var result;
          if (O !== null) {
            Empty[PROTOTYPE] = anObject(O);
            result = new Empty();
            Empty[PROTOTYPE] = null;
            // add "__proto__" for Object.getPrototypeOf polyfill
            result[IE_PROTO] = O;
          } else result = createDict();
          return Properties === undefined ? result : dPs(result, Properties);
        };

      /***/
    },
    /* 830 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__,
      __webpack_module_template_argument_3__
    ) {
      var dP = __webpack_require__(__webpack_module_template_argument_0__);
      var anObject = __webpack_require__(
        __webpack_module_template_argument_1__
      );
      var getKeys = __webpack_require__(__webpack_module_template_argument_2__);

      module.exports = __webpack_require__(
        __webpack_module_template_argument_3__
      )
        ? Object.defineProperties
        : function defineProperties(O, Properties) {
            anObject(O);
            var keys = getKeys(Properties);
            var length = keys.length;
            var i = 0;
            var P;
            while (length > i) dP.f(O, (P = keys[i++]), Properties[P]);
            return O;
          };

      /***/
    },
    /* 831 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__
    ) {
      var document = __webpack_require__(__webpack_module_template_argument_0__)
        .document;
      module.exports = document && document.documentElement;

      /***/
    },
    /* 832 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__
    ) {
      // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
      var toIObject = __webpack_require__(
        __webpack_module_template_argument_0__
      );
      var gOPN = __webpack_require__(__webpack_module_template_argument_1__).f;
      var toString = {}.toString;

      var windowNames =
        typeof window == 'object' && window && Object.getOwnPropertyNames
          ? Object.getOwnPropertyNames(window)
          : [];

      var getWindowNames = function(it) {
        try {
          return gOPN(it);
        } catch (e) {
          return windowNames.slice();
        }
      };

      module.exports.f = function getOwnPropertyNames(it) {
        return windowNames && toString.call(it) == '[object Window]'
          ? getWindowNames(it)
          : gOPN(toIObject(it));
      };

      /***/
    },
    /* 833 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__
    ) {
      // 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
      var $keys = __webpack_require__(__webpack_module_template_argument_0__);
      var hiddenKeys = __webpack_require__(
        __webpack_module_template_argument_1__
      ).concat('length', 'prototype');

      exports.f =
        Object.getOwnPropertyNames ||
        function getOwnPropertyNames(O) {
          return $keys(O, hiddenKeys);
        };

      /***/
    },
    /* 834 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__,
      __webpack_module_template_argument_3__,
      __webpack_module_template_argument_4__,
      __webpack_module_template_argument_5__,
      __webpack_module_template_argument_6__
    ) {
      var pIE = __webpack_require__(__webpack_module_template_argument_0__);
      var createDesc = __webpack_require__(
        __webpack_module_template_argument_1__
      );
      var toIObject = __webpack_require__(
        __webpack_module_template_argument_2__
      );
      var toPrimitive = __webpack_require__(
        __webpack_module_template_argument_3__
      );
      var has = __webpack_require__(__webpack_module_template_argument_4__);
      var IE8_DOM_DEFINE = __webpack_require__(
        __webpack_module_template_argument_5__
      );
      var gOPD = Object.getOwnPropertyDescriptor;

      exports.f = __webpack_require__(__webpack_module_template_argument_6__)
        ? gOPD
        : function getOwnPropertyDescriptor(O, P) {
            O = toIObject(O);
            P = toPrimitive(P, true);
            if (IE8_DOM_DEFINE)
              try {
                return gOPD(O, P);
              } catch (e) {
                /* empty */
              }
            if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
          };

      /***/
    },
    /* 835 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__
    ) {
      var $export = __webpack_require__(__webpack_module_template_argument_0__);
      // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
      $export($export.S, 'Object', {
        create: __webpack_require__(__webpack_module_template_argument_1__)
      });

      /***/
    },
    /* 836 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__
    ) {
      // 7.1.13 ToObject(argument)
      var defined = __webpack_require__(__webpack_module_template_argument_0__);
      module.exports = function(it) {
        return Object(defined(it));
      };

      /***/
    },
    /* 837 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__
    ) {
      // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
      var has = __webpack_require__(__webpack_module_template_argument_0__);
      var toObject = __webpack_require__(
        __webpack_module_template_argument_1__
      );
      var IE_PROTO = __webpack_require__(
        __webpack_module_template_argument_2__
      )('IE_PROTO');
      var ObjectProto = Object.prototype;

      module.exports =
        Object.getPrototypeOf ||
        function(O) {
          O = toObject(O);
          if (has(O, IE_PROTO)) return O[IE_PROTO];
          if (
            typeof O.constructor == 'function' &&
            O instanceof O.constructor
          ) {
            return O.constructor.prototype;
          }
          return O instanceof Object ? ObjectProto : null;
        };

      /***/
    },
    /* 838 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__
    ) {
      // 19.1.3.1 Object.assign(target, source)
      var $export = __webpack_require__(__webpack_module_template_argument_0__);

      $export($export.S + $export.F, 'Object', {
        assign: __webpack_require__(__webpack_module_template_argument_1__)
      });

      /***/
    },
    /* 839 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__,
      __webpack_module_template_argument_3__,
      __webpack_module_template_argument_4__,
      __webpack_module_template_argument_5__
    ) {
      'use strict';
      // 19.1.2.1 Object.assign(target, source, ...)
      var getKeys = __webpack_require__(__webpack_module_template_argument_0__);
      var gOPS = __webpack_require__(__webpack_module_template_argument_1__);
      var pIE = __webpack_require__(__webpack_module_template_argument_2__);
      var toObject = __webpack_require__(
        __webpack_module_template_argument_3__
      );
      var IObject = __webpack_require__(__webpack_module_template_argument_4__);
      var $assign = Object.assign;

      // should work with symbols and should have deterministic property order (V8 bug)
      module.exports =
        !$assign ||
        __webpack_require__(__webpack_module_template_argument_5__)(function() {
          var A = {};
          var B = {};
          // eslint-disable-next-line no-undef
          var S = Symbol();
          var K = 'abcdefghijklmnopqrst';
          A[S] = 7;
          K.split('').forEach(function(k) {
            B[k] = k;
          });
          return (
            $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K
          );
        })
          ? function assign(target, source) {
              // eslint-disable-line no-unused-vars
              var T = toObject(target);
              var aLen = arguments.length;
              var index = 1;
              var getSymbols = gOPS.f;
              var isEnum = pIE.f;
              while (aLen > index) {
                var S = IObject(arguments[index++]);
                var keys = getSymbols
                  ? getKeys(S).concat(getSymbols(S))
                  : getKeys(S);
                var length = keys.length;
                var j = 0;
                var key;
                while (length > j)
                  if (isEnum.call(S, (key = keys[j++]))) T[key] = S[key];
              }
              return T;
            }
          : $assign;

      /***/
    },
    /* 840 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__
    ) {
      // 19.1.3.19 Object.setPrototypeOf(O, proto)
      var $export = __webpack_require__(__webpack_module_template_argument_0__);
      $export($export.S, 'Object', {
        setPrototypeOf: __webpack_require__(
          __webpack_module_template_argument_1__
        ).set
      });

      /***/
    },
    /* 841 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__,
      __webpack_module_template_argument_3__
    ) {
      // Works with __proto__ only. Old v8 can't work with null proto objects.
      /* eslint-disable no-proto */
      var isObject = __webpack_require__(
        __webpack_module_template_argument_0__
      );
      var anObject = __webpack_require__(
        __webpack_module_template_argument_1__
      );
      var check = function(O, proto) {
        anObject(O);
        if (!isObject(proto) && proto !== null)
          throw TypeError(proto + ": can't set as prototype!");
      };
      module.exports = {
        set:
          Object.setPrototypeOf ||
          ('__proto__' in {} // eslint-disable-line
            ? (function(test, buggy, set) {
                try {
                  set = __webpack_require__(
                    __webpack_module_template_argument_2__
                  )(
                    Function.call,
                    __webpack_require__(
                      __webpack_module_template_argument_3__
                    ).f(Object.prototype, '__proto__').set,
                    2
                  );
                  set(test, []);
                  buggy = !(test instanceof Array);
                } catch (e) {
                  buggy = true;
                }
                return function setPrototypeOf(O, proto) {
                  check(O, proto);
                  if (buggy) O.__proto__ = proto;
                  else set(O, proto);
                  return O;
                };
              })({}, false)
            : undefined),
        check: check
      };

      /***/
    },
    /* 842 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__
    ) {
      'use strict';
      var $at = __webpack_require__(__webpack_module_template_argument_0__)(
        true
      );

      // 21.1.3.27 String.prototype[@@iterator]()
      __webpack_require__(__webpack_module_template_argument_1__)(
        String,
        'String',
        function(iterated) {
          this._t = String(iterated); // target
          this._i = 0; // next index
          // 21.1.5.2.1 %StringIteratorPrototype%.next()
        },
        function() {
          var O = this._t;
          var index = this._i;
          var point;
          if (index >= O.length) return { value: undefined, done: true };
          point = $at(O, index);
          this._i += point.length;
          return { value: point, done: false };
        }
      );

      /***/
    },
    /* 843 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__
    ) {
      var toInteger = __webpack_require__(
        __webpack_module_template_argument_0__
      );
      var defined = __webpack_require__(__webpack_module_template_argument_1__);
      // true  -> String#at
      // false -> String#codePointAt
      module.exports = function(TO_STRING) {
        return function(that, pos) {
          var s = String(defined(that));
          var i = toInteger(pos);
          var l = s.length;
          var a, b;
          if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
          a = s.charCodeAt(i);
          return a < 0xd800 ||
            a > 0xdbff ||
            i + 1 === l ||
            (b = s.charCodeAt(i + 1)) < 0xdc00 ||
            b > 0xdfff
            ? TO_STRING
              ? s.charAt(i)
              : a
            : TO_STRING
              ? s.slice(i, i + 2)
              : ((a - 0xd800) << 10) + (b - 0xdc00) + 0x10000;
        };
      };

      /***/
    },
    /* 844 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__,
      __webpack_module_template_argument_3__,
      __webpack_module_template_argument_4__,
      __webpack_module_template_argument_5__,
      __webpack_module_template_argument_6__,
      __webpack_module_template_argument_7__,
      __webpack_module_template_argument_8__
    ) {
      'use strict';
      var LIBRARY = __webpack_require__(__webpack_module_template_argument_0__);
      var $export = __webpack_require__(__webpack_module_template_argument_1__);
      var redefine = __webpack_require__(
        __webpack_module_template_argument_2__
      );
      var hide = __webpack_require__(__webpack_module_template_argument_3__);
      var Iterators = __webpack_require__(
        __webpack_module_template_argument_4__
      );
      var $iterCreate = __webpack_require__(
        __webpack_module_template_argument_5__
      );
      var setToStringTag = __webpack_require__(
        __webpack_module_template_argument_6__
      );
      var getPrototypeOf = __webpack_require__(
        __webpack_module_template_argument_7__
      );
      var ITERATOR = __webpack_require__(
        __webpack_module_template_argument_8__
      )('iterator');
      var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
      var FF_ITERATOR = '@@iterator';
      var KEYS = 'keys';
      var VALUES = 'values';

      var returnThis = function() {
        return this;
      };

      module.exports = function(
        Base,
        NAME,
        Constructor,
        next,
        DEFAULT,
        IS_SET,
        FORCED
      ) {
        $iterCreate(Constructor, NAME, next);
        var getMethod = function(kind) {
          if (!BUGGY && kind in proto) return proto[kind];
          switch (kind) {
            case KEYS:
              return function keys() {
                return new Constructor(this, kind);
              };
            case VALUES:
              return function values() {
                return new Constructor(this, kind);
              };
          }
          return function entries() {
            return new Constructor(this, kind);
          };
        };
        var TAG = NAME + ' Iterator';
        var DEF_VALUES = DEFAULT == VALUES;
        var VALUES_BUG = false;
        var proto = Base.prototype;
        var $native =
          proto[ITERATOR] || proto[FF_ITERATOR] || (DEFAULT && proto[DEFAULT]);
        var $default = $native || getMethod(DEFAULT);
        var $entries = DEFAULT
          ? !DEF_VALUES
            ? $default
            : getMethod('entries')
          : undefined;
        var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
        var methods, key, IteratorPrototype;
        // Fix native
        if ($anyNative) {
          IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
          if (
            IteratorPrototype !== Object.prototype &&
            IteratorPrototype.next
          ) {
            // Set @@toStringTag to native iterators
            setToStringTag(IteratorPrototype, TAG, true);
            // fix for some old engines
            if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function')
              hide(IteratorPrototype, ITERATOR, returnThis);
          }
        }
        // fix Array#{values, @@iterator}.name in V8 / FF
        if (DEF_VALUES && $native && $native.name !== VALUES) {
          VALUES_BUG = true;
          $default = function values() {
            return $native.call(this);
          };
        }
        // Define iterator
        if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
          hide(proto, ITERATOR, $default);
        }
        // Plug for library
        Iterators[NAME] = $default;
        Iterators[TAG] = returnThis;
        if (DEFAULT) {
          methods = {
            values: DEF_VALUES ? $default : getMethod(VALUES),
            keys: IS_SET ? $default : getMethod(KEYS),
            entries: $entries
          };
          if (FORCED)
            for (key in methods) {
              if (!(key in proto)) redefine(proto, key, methods[key]);
            }
          else
            $export(
              $export.P + $export.F * (BUGGY || VALUES_BUG),
              NAME,
              methods
            );
        }
        return methods;
      };

      /***/
    },
    /* 845 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__,
      __webpack_module_template_argument_3__,
      __webpack_module_template_argument_4__
    ) {
      'use strict';
      var create = __webpack_require__(__webpack_module_template_argument_0__);
      var descriptor = __webpack_require__(
        __webpack_module_template_argument_1__
      );
      var setToStringTag = __webpack_require__(
        __webpack_module_template_argument_2__
      );
      var IteratorPrototype = {};

      // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
      __webpack_require__(__webpack_module_template_argument_3__)(
        IteratorPrototype,
        __webpack_require__(__webpack_module_template_argument_4__)('iterator'),
        function() {
          return this;
        }
      );

      module.exports = function(Constructor, NAME, next) {
        Constructor.prototype = create(IteratorPrototype, {
          next: descriptor(1, next)
        });
        setToStringTag(Constructor, NAME + ' Iterator');
      };

      /***/
    },
    /* 846 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__,
      __webpack_module_template_argument_1__,
      __webpack_module_template_argument_2__,
      __webpack_module_template_argument_3__,
      __webpack_module_template_argument_4__
    ) {
      'use strict';
      var addToUnscopables = __webpack_require__(
        __webpack_module_template_argument_0__
      );
      var step = __webpack_require__(__webpack_module_template_argument_1__);
      var Iterators = __webpack_require__(
        __webpack_module_template_argument_2__
      );
      var toIObject = __webpack_require__(
        __webpack_module_template_argument_3__
      );

      // 22.1.3.4 Array.prototype.entries()
      // 22.1.3.13 Array.prototype.keys()
      // 22.1.3.29 Array.prototype.values()
      // 22.1.3.30 Array.prototype[@@iterator]()
      module.exports = __webpack_require__(
        __webpack_module_template_argument_4__
      )(
        Array,
        'Array',
        function(iterated, kind) {
          this._t = toIObject(iterated); // target
          this._i = 0; // next index
          this._k = kind; // kind
          // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
        },
        function() {
          var O = this._t;
          var kind = this._k;
          var index = this._i++;
          if (!O || index >= O.length) {
            this._t = undefined;
            return step(1);
          }
          if (kind == 'keys') return step(0, index);
          if (kind == 'values') return step(0, O[index]);
          return step(0, [index, O[index]]);
        },
        'values'
      );

      // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
      Iterators.Arguments = Iterators.Array;

      addToUnscopables('keys');
      addToUnscopables('values');
      addToUnscopables('entries');

      /***/
    },
    /* 847 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__
    ) {
      __webpack_require__(__webpack_module_template_argument_0__)(
        'asyncIterator'
      );

      /***/
    },
    /* 848 */
    /***/ function(
      module,
      exports,
      __webpack_require__,
      __webpack_module_template_argument_0__
    ) {
      __webpack_require__(__webpack_module_template_argument_0__)('observable');

      /***/
    }
    /******/
  ])
);
